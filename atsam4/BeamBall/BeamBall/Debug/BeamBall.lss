
BeamBall.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000079cc  00400000  00400000  00010000  2**6
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .ARM.exidx    00000008  004079cc  004079cc  000179cc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  2 .relocate     000009ec  20000000  004079d4  00020000  2**3
                  CONTENTS, ALLOC, LOAD, CODE
  3 .bss          00000524  200009ec  004083c0  000209ec  2**2
                  ALLOC
  4 .stack        00003000  20000f10  004088e4  000209ec  2**0
                  ALLOC
  5 .ARM.attributes 0000002a  00000000  00000000  000209ec  2**0
                  CONTENTS, READONLY
  6 .comment      00000059  00000000  00000000  00020a16  2**0
                  CONTENTS, READONLY
  7 .debug_info   0001bec7  00000000  00000000  00020a6f  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 0000397a  00000000  00000000  0003c936  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_loc    00007733  00000000  00000000  000402b0  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_aranges 00000d78  00000000  00000000  000479e3  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000d60  00000000  00000000  0004875b  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_macro  00016f2c  00000000  00000000  000494bb  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_line   0001092a  00000000  00000000  000603e7  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_str    0005a72c  00000000  00000000  00070d11  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_frame  00002dcc  00000000  00000000  000cb440  2**2
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00400000 <exception_table>:
  400000:	10 3f 00 20 15 14 40 00 11 14 40 00 11 14 40 00     .?. ..@...@...@.
  400010:	11 14 40 00 11 14 40 00 11 14 40 00 00 00 00 00     ..@...@...@.....
	...
  40002c:	11 14 40 00 11 14 40 00 00 00 00 00 11 14 40 00     ..@...@.......@.
  40003c:	11 14 40 00 11 14 40 00 11 14 40 00 11 14 40 00     ..@...@...@...@.
  40004c:	11 14 40 00 11 14 40 00 11 14 40 00 11 14 40 00     ..@...@...@...@.
  40005c:	11 14 40 00 11 14 40 00 11 14 40 00 00 00 00 00     ..@...@...@.....
  40006c:	ad 0f 40 00 c1 0f 40 00 d5 0f 40 00 11 14 40 00     ..@...@...@...@.
  40007c:	11 14 40 00 00 00 00 00 00 00 00 00 11 14 40 00     ..@...........@.
  40008c:	11 14 40 00 11 14 40 00 11 14 40 00 11 14 40 00     ..@...@...@...@.
  40009c:	cd 1c 40 00 11 14 40 00 11 14 40 00 11 14 40 00     ..@...@...@...@.
  4000ac:	11 14 40 00 11 14 40 00 11 14 40 00 11 14 40 00     ..@...@...@...@.
  4000bc:	11 14 40 00 11 14 40 00 11 14 40 00 11 14 40 00     ..@...@...@...@.

004000cc <__do_global_dtors_aux>:
  4000cc:	b510      	push	{r4, lr}
  4000ce:	4c05      	ldr	r4, [pc, #20]	; (4000e4 <__do_global_dtors_aux+0x18>)
  4000d0:	7823      	ldrb	r3, [r4, #0]
  4000d2:	b933      	cbnz	r3, 4000e2 <__do_global_dtors_aux+0x16>
  4000d4:	4b04      	ldr	r3, [pc, #16]	; (4000e8 <__do_global_dtors_aux+0x1c>)
  4000d6:	b113      	cbz	r3, 4000de <__do_global_dtors_aux+0x12>
  4000d8:	4804      	ldr	r0, [pc, #16]	; (4000ec <__do_global_dtors_aux+0x20>)
  4000da:	f3af 8000 	nop.w
  4000de:	2301      	movs	r3, #1
  4000e0:	7023      	strb	r3, [r4, #0]
  4000e2:	bd10      	pop	{r4, pc}
  4000e4:	200009ec 	.word	0x200009ec
  4000e8:	00000000 	.word	0x00000000
  4000ec:	004079d4 	.word	0x004079d4

004000f0 <frame_dummy>:
  4000f0:	4b0c      	ldr	r3, [pc, #48]	; (400124 <frame_dummy+0x34>)
  4000f2:	b143      	cbz	r3, 400106 <frame_dummy+0x16>
  4000f4:	480c      	ldr	r0, [pc, #48]	; (400128 <frame_dummy+0x38>)
  4000f6:	490d      	ldr	r1, [pc, #52]	; (40012c <frame_dummy+0x3c>)
  4000f8:	b510      	push	{r4, lr}
  4000fa:	f3af 8000 	nop.w
  4000fe:	480c      	ldr	r0, [pc, #48]	; (400130 <frame_dummy+0x40>)
  400100:	6803      	ldr	r3, [r0, #0]
  400102:	b923      	cbnz	r3, 40010e <frame_dummy+0x1e>
  400104:	bd10      	pop	{r4, pc}
  400106:	480a      	ldr	r0, [pc, #40]	; (400130 <frame_dummy+0x40>)
  400108:	6803      	ldr	r3, [r0, #0]
  40010a:	b933      	cbnz	r3, 40011a <frame_dummy+0x2a>
  40010c:	4770      	bx	lr
  40010e:	4b09      	ldr	r3, [pc, #36]	; (400134 <frame_dummy+0x44>)
  400110:	2b00      	cmp	r3, #0
  400112:	d0f7      	beq.n	400104 <frame_dummy+0x14>
  400114:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  400118:	4718      	bx	r3
  40011a:	4b06      	ldr	r3, [pc, #24]	; (400134 <frame_dummy+0x44>)
  40011c:	2b00      	cmp	r3, #0
  40011e:	d0f5      	beq.n	40010c <frame_dummy+0x1c>
  400120:	4718      	bx	r3
  400122:	bf00      	nop
  400124:	00000000 	.word	0x00000000
  400128:	004079d4 	.word	0x004079d4
  40012c:	200009f0 	.word	0x200009f0
  400130:	004079d4 	.word	0x004079d4
  400134:	00000000 	.word	0x00000000

00400138 <sysclk_init>:
	pmc_disable_udpck();
}
#endif // CONFIG_USBCLK_SOURCE

void sysclk_init(void)
{
  400138:	b510      	push	{r4, lr}
	/* Set flash wait state to max in case the below clock switching. */
	system_init_flash(CHIP_FREQ_CPU_MAX);
  40013a:	480e      	ldr	r0, [pc, #56]	; (400174 <sysclk_init+0x3c>)
  40013c:	4b0e      	ldr	r3, [pc, #56]	; (400178 <sysclk_init+0x40>)
  40013e:	4798      	blx	r3
		pmc_switch_mainck_to_fastrc(CKGR_MOR_MOSCRCF_12_MHz);
		break;


	case OSC_MAINCK_XTAL:
		pmc_switch_mainck_to_xtal(PMC_OSC_XTAL,
  400140:	213e      	movs	r1, #62	; 0x3e
  400142:	2000      	movs	r0, #0
  400144:	4b0d      	ldr	r3, [pc, #52]	; (40017c <sysclk_init+0x44>)
  400146:	4798      	blx	r3
	case OSC_MAINCK_4M_RC:
	case OSC_MAINCK_8M_RC:
	case OSC_MAINCK_12M_RC:
	case OSC_MAINCK_XTAL:
	case OSC_MAINCK_BYPASS:
		return pmc_osc_is_ready_mainck();
  400148:	4c0d      	ldr	r4, [pc, #52]	; (400180 <sysclk_init+0x48>)
  40014a:	47a0      	blx	r4
 *
 * \param id A number identifying the oscillator to wait for.
 */
static inline void osc_wait_ready(uint8_t id)
{
	while (!osc_is_ready(id)) {
  40014c:	2800      	cmp	r0, #0
  40014e:	d0fc      	beq.n	40014a <sysclk_init+0x12>
static inline void pll_enable(const struct pll_config *p_cfg, uint32_t ul_pll_id)
{
	Assert(ul_pll_id < NR_PLLS);

	if (ul_pll_id == PLLA_ID) {
		pmc_disable_pllack(); // Always stop PLL first!
  400150:	4b0c      	ldr	r3, [pc, #48]	; (400184 <sysclk_init+0x4c>)
  400152:	4798      	blx	r3
		PMC->CKGR_PLLAR = CKGR_PLLAR_ONE | p_cfg->ctrl;
  400154:	4a0c      	ldr	r2, [pc, #48]	; (400188 <sysclk_init+0x50>)
  400156:	4b0d      	ldr	r3, [pc, #52]	; (40018c <sysclk_init+0x54>)
  400158:	629a      	str	r2, [r3, #40]	; 0x28
static inline uint32_t pll_is_locked(uint32_t ul_pll_id)
{
	Assert(ul_pll_id < NR_PLLS);

	if (ul_pll_id == PLLA_ID) {
		return pmc_is_locked_pllack();
  40015a:	4c0d      	ldr	r4, [pc, #52]	; (400190 <sysclk_init+0x58>)
  40015c:	47a0      	blx	r4
 */
static inline int pll_wait_for_lock(unsigned int pll_id)
{
	Assert(pll_id < NR_PLLS);

	while (!pll_is_locked(pll_id)) {
  40015e:	2800      	cmp	r0, #0
  400160:	d0fc      	beq.n	40015c <sysclk_init+0x24>

		pll_enable_source(CONFIG_PLL0_SOURCE);
		pll_config_defaults(&pllcfg, 0);
		pll_enable(&pllcfg, 0);
		pll_wait_for_lock(0);
		pmc_switch_mck_to_pllack(CONFIG_SYSCLK_PRES);
  400162:	2010      	movs	r0, #16
  400164:	4b0b      	ldr	r3, [pc, #44]	; (400194 <sysclk_init+0x5c>)
  400166:	4798      	blx	r3
		pmc_switch_mck_to_pllbck(CONFIG_SYSCLK_PRES);
	}
#endif

	/* Update the SystemFrequency variable */
	SystemCoreClockUpdate();
  400168:	4b0b      	ldr	r3, [pc, #44]	; (400198 <sysclk_init+0x60>)
  40016a:	4798      	blx	r3

	/* Set a flash wait state depending on the new cpu frequency */
	system_init_flash(sysclk_get_cpu_hz());
  40016c:	4801      	ldr	r0, [pc, #4]	; (400174 <sysclk_init+0x3c>)
  40016e:	4b02      	ldr	r3, [pc, #8]	; (400178 <sysclk_init+0x40>)
  400170:	4798      	blx	r3
  400172:	bd10      	pop	{r4, pc}
  400174:	07270e00 	.word	0x07270e00
  400178:	004015d1 	.word	0x004015d1
  40017c:	0040104d 	.word	0x0040104d
  400180:	004010a1 	.word	0x004010a1
  400184:	004010b1 	.word	0x004010b1
  400188:	20133f01 	.word	0x20133f01
  40018c:	400e0400 	.word	0x400e0400
  400190:	004010c1 	.word	0x004010c1
  400194:	00400fe9 	.word	0x00400fe9
  400198:	004014c1 	.word	0x004014c1

0040019c <_read>:
int __attribute__((weak))
_read (int file, char * ptr, int len); // Remove GCC compiler warning

int __attribute__((weak))
_read (int file, char * ptr, int len)
{
  40019c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
	int nChars = 0;

	if (file != 0) {
  4001a0:	b980      	cbnz	r0, 4001c4 <_read+0x28>
  4001a2:	460c      	mov	r4, r1
  4001a4:	4690      	mov	r8, r2
		return -1;
	}

	for (; len > 0; --len) {
  4001a6:	2a00      	cmp	r2, #0
  4001a8:	dd0f      	ble.n	4001ca <_read+0x2e>
  4001aa:	188f      	adds	r7, r1, r2
		ptr_get(stdio_base, ptr);
  4001ac:	4e08      	ldr	r6, [pc, #32]	; (4001d0 <_read+0x34>)
  4001ae:	4d09      	ldr	r5, [pc, #36]	; (4001d4 <_read+0x38>)
  4001b0:	6830      	ldr	r0, [r6, #0]
  4001b2:	4621      	mov	r1, r4
  4001b4:	682b      	ldr	r3, [r5, #0]
  4001b6:	4798      	blx	r3
		ptr++;
  4001b8:	3401      	adds	r4, #1
	for (; len > 0; --len) {
  4001ba:	42bc      	cmp	r4, r7
  4001bc:	d1f8      	bne.n	4001b0 <_read+0x14>
		nChars++;
	}
	return nChars;
}
  4001be:	4640      	mov	r0, r8
  4001c0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
		return -1;
  4001c4:	f04f 38ff 	mov.w	r8, #4294967295
  4001c8:	e7f9      	b.n	4001be <_read+0x22>
	for (; len > 0; --len) {
  4001ca:	4680      	mov	r8, r0
  4001cc:	e7f7      	b.n	4001be <_read+0x22>
  4001ce:	bf00      	nop
  4001d0:	20000e94 	.word	0x20000e94
  4001d4:	20000e8c 	.word	0x20000e8c

004001d8 <_write>:
int __attribute__((weak))
_write (int file, const char *ptr, int len)
{
	int nChars = 0;

	if ((file != 1) && (file != 2) && (file!=3)) {
  4001d8:	3801      	subs	r0, #1
  4001da:	2802      	cmp	r0, #2
  4001dc:	d815      	bhi.n	40020a <_write+0x32>
{
  4001de:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  4001e2:	460e      	mov	r6, r1
  4001e4:	4614      	mov	r4, r2
		return -1;
	}

	for (; len != 0; --len) {
  4001e6:	b19a      	cbz	r2, 400210 <_write+0x38>
  4001e8:	460d      	mov	r5, r1
		if (ptr_put(stdio_base, *ptr++) < 0) {
  4001ea:	f8df 8038 	ldr.w	r8, [pc, #56]	; 400224 <_write+0x4c>
  4001ee:	4f0c      	ldr	r7, [pc, #48]	; (400220 <_write+0x48>)
  4001f0:	f8d8 0000 	ldr.w	r0, [r8]
  4001f4:	f815 1b01 	ldrb.w	r1, [r5], #1
  4001f8:	683b      	ldr	r3, [r7, #0]
  4001fa:	4798      	blx	r3
  4001fc:	2800      	cmp	r0, #0
  4001fe:	db0a      	blt.n	400216 <_write+0x3e>
  400200:	1ba8      	subs	r0, r5, r6
	for (; len != 0; --len) {
  400202:	3c01      	subs	r4, #1
  400204:	d1f4      	bne.n	4001f0 <_write+0x18>
  400206:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
		return -1;
  40020a:	f04f 30ff 	mov.w	r0, #4294967295
  40020e:	4770      	bx	lr
	for (; len != 0; --len) {
  400210:	4610      	mov	r0, r2
  400212:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
			return -1;
  400216:	f04f 30ff 	mov.w	r0, #4294967295
		}
		++nChars;
	}
	return nChars;
}
  40021a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  40021e:	bf00      	nop
  400220:	20000e90 	.word	0x20000e90
  400224:	20000e94 	.word	0x20000e94

00400228 <board_init>:
#include "conf_board.h"
#include "gpio.h"
#include "ioport.h"

void board_init(void)
{
  400228:	b538      	push	{r3, r4, r5, lr}
#ifndef CONF_BOARD_KEEP_WATCHDOG_AT_INIT
	/* Disable the watchdog */
	WDT->WDT_MR = WDT_MR_WDDIS;
  40022a:	f44f 4200 	mov.w	r2, #32768	; 0x8000
  40022e:	4b28      	ldr	r3, [pc, #160]	; (4002d0 <board_init+0xa8>)
  400230:	605a      	str	r2, [r3, #4]
 *
 * \param ul_id Id (number) of the peripheral clock.
 */
static inline void sysclk_enable_peripheral_clock(uint32_t ul_id)
{
	pmc_enable_periph_clk(ul_id);
  400232:	200b      	movs	r0, #11
  400234:	4c27      	ldr	r4, [pc, #156]	; (4002d4 <board_init+0xac>)
  400236:	47a0      	blx	r4
  400238:	200c      	movs	r0, #12
  40023a:	47a0      	blx	r4
  40023c:	200d      	movs	r0, #13
  40023e:	47a0      	blx	r4
	 * Here IOPORT must be initialized for others to use before setting up IO.
	 */
	ioport_init();

	/* Configure LED pins */
	gpio_configure_pin(LED0_GPIO, LED0_FLAGS);
  400240:	f04f 5160 	mov.w	r1, #939524096	; 0x38000000
  400244:	2013      	movs	r0, #19
  400246:	4c24      	ldr	r4, [pc, #144]	; (4002d8 <board_init+0xb0>)
  400248:	47a0      	blx	r4
	gpio_configure_pin(LED1_GPIO, LED1_FLAGS);
  40024a:	f04f 5160 	mov.w	r1, #939524096	; 0x38000000
  40024e:	2014      	movs	r0, #20
  400250:	47a0      	blx	r4

	/* Configure Push Button pins */
	gpio_configure_pin(GPIO_PUSH_BUTTON_1, GPIO_PUSH_BUTTON_1_FLAGS);
  400252:	4922      	ldr	r1, [pc, #136]	; (4002dc <board_init+0xb4>)
  400254:	2023      	movs	r0, #35	; 0x23
  400256:	47a0      	blx	r4
	gpio_configure_pin(GPIO_PUSH_BUTTON_2, GPIO_PUSH_BUTTON_2_FLAGS);
  400258:	4921      	ldr	r1, [pc, #132]	; (4002e0 <board_init+0xb8>)
  40025a:	204c      	movs	r0, #76	; 0x4c
  40025c:	47a0      	blx	r4

#ifdef CONF_BOARD_UART_CONSOLE
	/* Configure UART pins */
	gpio_configure_group(PINS_UART0_PIO, PINS_UART0, PINS_UART0_FLAGS);
  40025e:	f04f 6200 	mov.w	r2, #134217728	; 0x8000000
  400262:	f44f 61c0 	mov.w	r1, #1536	; 0x600
  400266:	481f      	ldr	r0, [pc, #124]	; (4002e4 <board_init+0xbc>)
  400268:	4b1f      	ldr	r3, [pc, #124]	; (4002e8 <board_init+0xc0>)
  40026a:	4798      	blx	r3
	gpio_configure_pin(PIN_PWMC_PWMH0_TRIG, PIN_PWMC_PWMH0_TRIG_FLAG);
#endif

#ifdef CONF_BOARD_PWM_LED0
	/* Configure PWM LED0 pin */
	gpio_configure_pin(PIN_PWM_LED0_GPIO, PIN_PWM_LED0_FLAGS);
  40026c:	f04f 5180 	mov.w	r1, #268435456	; 0x10000000
  400270:	2013      	movs	r0, #19
  400272:	47a0      	blx	r4
#endif

#ifdef CONF_BOARD_PWM_LED1
	/* Configure PWM LED1 pin */
	gpio_configure_pin(PIN_PWM_LED1_GPIO, PIN_PWM_LED1_FLAGS);
  400274:	f04f 5180 	mov.w	r1, #268435456	; 0x10000000
  400278:	2014      	movs	r0, #20
  40027a:	47a0      	blx	r4
	gpio_set_pin_low(PIN_RE_IDX);
#endif

#if defined(CONF_BOARD_ILI9325) || defined(CONF_BOARD_ILI93XX)
	/* Configure LCD EBI pins */
	gpio_configure_pin(PIN_EBI_DATA_BUS_D0, PIN_EBI_DATA_BUS_FLAGS);
  40027c:	4d1b      	ldr	r5, [pc, #108]	; (4002ec <board_init+0xc4>)
  40027e:	4629      	mov	r1, r5
  400280:	2040      	movs	r0, #64	; 0x40
  400282:	47a0      	blx	r4
	gpio_configure_pin(PIN_EBI_DATA_BUS_D1, PIN_EBI_DATA_BUS_FLAGS);
  400284:	4629      	mov	r1, r5
  400286:	2041      	movs	r0, #65	; 0x41
  400288:	47a0      	blx	r4
	gpio_configure_pin(PIN_EBI_DATA_BUS_D2, PIN_EBI_DATA_BUS_FLAGS);
  40028a:	4629      	mov	r1, r5
  40028c:	2042      	movs	r0, #66	; 0x42
  40028e:	47a0      	blx	r4
	gpio_configure_pin(PIN_EBI_DATA_BUS_D3, PIN_EBI_DATA_BUS_FLAGS);
  400290:	4629      	mov	r1, r5
  400292:	2043      	movs	r0, #67	; 0x43
  400294:	47a0      	blx	r4
	gpio_configure_pin(PIN_EBI_DATA_BUS_D4, PIN_EBI_DATA_BUS_FLAGS);
  400296:	4629      	mov	r1, r5
  400298:	2044      	movs	r0, #68	; 0x44
  40029a:	47a0      	blx	r4
	gpio_configure_pin(PIN_EBI_DATA_BUS_D5, PIN_EBI_DATA_BUS_FLAGS);
  40029c:	4629      	mov	r1, r5
  40029e:	2045      	movs	r0, #69	; 0x45
  4002a0:	47a0      	blx	r4
	gpio_configure_pin(PIN_EBI_DATA_BUS_D6, PIN_EBI_DATA_BUS_FLAGS);
  4002a2:	4629      	mov	r1, r5
  4002a4:	2046      	movs	r0, #70	; 0x46
  4002a6:	47a0      	blx	r4
	gpio_configure_pin(PIN_EBI_DATA_BUS_D7, PIN_EBI_DATA_BUS_FLAGS);
  4002a8:	4629      	mov	r1, r5
  4002aa:	2047      	movs	r0, #71	; 0x47
  4002ac:	47a0      	blx	r4
	gpio_configure_pin(PIN_EBI_NRD, PIN_EBI_NRD_FLAGS);
  4002ae:	4629      	mov	r1, r5
  4002b0:	204b      	movs	r0, #75	; 0x4b
  4002b2:	47a0      	blx	r4
	gpio_configure_pin(PIN_EBI_NWE, PIN_EBI_NWE_FLAGS);
  4002b4:	4629      	mov	r1, r5
  4002b6:	2048      	movs	r0, #72	; 0x48
  4002b8:	47a0      	blx	r4
	gpio_configure_pin(PIN_EBI_NCS1, PIN_EBI_NCS1_FLAGS);
  4002ba:	4629      	mov	r1, r5
  4002bc:	204f      	movs	r0, #79	; 0x4f
  4002be:	47a0      	blx	r4
	gpio_configure_pin(PIN_EBI_LCD_RS, PIN_EBI_LCD_RS_FLAGS);
  4002c0:	4629      	mov	r1, r5
  4002c2:	2053      	movs	r0, #83	; 0x53
  4002c4:	47a0      	blx	r4
#endif

#ifdef CONF_BOARD_AAT3155
	/* Configure Backlight control pin */
	gpio_configure_pin(BOARD_AAT31XX_SET_GPIO, BOARD_AAT31XX_SET_FLAGS);
  4002c6:	f04f 5140 	mov.w	r1, #805306368	; 0x30000000
  4002ca:	204d      	movs	r0, #77	; 0x4d
  4002cc:	47a0      	blx	r4
  4002ce:	bd38      	pop	{r3, r4, r5, pc}
  4002d0:	400e1450 	.word	0x400e1450
  4002d4:	004010d1 	.word	0x004010d1
  4002d8:	00400cdd 	.word	0x00400cdd
  4002dc:	28000079 	.word	0x28000079
  4002e0:	28000059 	.word	0x28000059
  4002e4:	400e0e00 	.word	0x400e0e00
  4002e8:	00400dfd 	.word	0x00400dfd
  4002ec:	08000001 	.word	0x08000001

004002f0 <aat31xx_set_backlight>:
 * \param ul_level backlight level.
 *
 * \note pin BOARD_AAT31XX_SET_GPIO must be configured before calling aat31xx_set_backlight.
 */
void aat31xx_set_backlight(uint32_t ul_level)
{
  4002f0:	b4f0      	push	{r4, r5, r6, r7}
  4002f2:	b082      	sub	sp, #8
	volatile uint32_t ul_delay;
	uint32_t i;

#ifdef CONF_BOARD_AAT3155
	ul_level = AAT31XX_MAX_BACKLIGHT_LEVEL - ul_level + 1;
  4002f4:	f1c0 0011 	rsb	r0, r0, #17
#ifdef CONF_BOARD_AAT3193
	ul_level = AAT31XX_MAX_BACKLIGHT_LEVEL - ul_level + 1;
#endif

	/* Ensure valid level */
	ul_level = (ul_level > AAT31XX_MAX_BACKLIGHT_LEVEL) ? AAT31XX_MAX_BACKLIGHT_LEVEL : ul_level;
  4002f8:	2810      	cmp	r0, #16
  4002fa:	bf28      	it	cs
  4002fc:	2010      	movcs	r0, #16
	ul_level = (ul_level < AAT31XX_MIN_BACKLIGHT_LEVEL) ? AAT31XX_MIN_BACKLIGHT_LEVEL : ul_level;
  4002fe:	2800      	cmp	r0, #0
  400300:	bf08      	it	eq
  400302:	2001      	moveq	r0, #1
{
  400304:	2100      	movs	r1, #0
	Pio *base = arch_ioport_pin_to_base(pin);

	if (level) {
		base->PIO_SODR = arch_ioport_pin_to_mask(pin);
	} else {
		base->PIO_CODR = arch_ioport_pin_to_mask(pin);
  400306:	4d10      	ldr	r5, [pc, #64]	; (400348 <aat31xx_set_backlight+0x58>)
  400308:	f44f 5600 	mov.w	r6, #8192	; 0x2000
  40030c:	4637      	mov	r7, r6

	/* Set new backlight level */
	for (i = 0; i < ul_level; i++) {
		ioport_set_pin_level(BOARD_AAT31XX_SET_GPIO, IOPORT_PIN_LEVEL_LOW);
		ul_delay = DELAY_PULSE;
  40030e:	2418      	movs	r4, #24
  400310:	636f      	str	r7, [r5, #52]	; 0x34
  400312:	9401      	str	r4, [sp, #4]
		while (ul_delay--) {
  400314:	9b01      	ldr	r3, [sp, #4]
  400316:	1e5a      	subs	r2, r3, #1
  400318:	9201      	str	r2, [sp, #4]
  40031a:	2b00      	cmp	r3, #0
  40031c:	d1fa      	bne.n	400314 <aat31xx_set_backlight+0x24>
		base->PIO_SODR = arch_ioport_pin_to_mask(pin);
  40031e:	632e      	str	r6, [r5, #48]	; 0x30
		}

		ioport_set_pin_level(BOARD_AAT31XX_SET_GPIO, IOPORT_PIN_LEVEL_HIGH);

		ul_delay = DELAY_PULSE;
  400320:	9401      	str	r4, [sp, #4]
		while (ul_delay--) {
  400322:	9b01      	ldr	r3, [sp, #4]
  400324:	1e5a      	subs	r2, r3, #1
  400326:	9201      	str	r2, [sp, #4]
  400328:	2b00      	cmp	r3, #0
  40032a:	d1fa      	bne.n	400322 <aat31xx_set_backlight+0x32>
	for (i = 0; i < ul_level; i++) {
  40032c:	3101      	adds	r1, #1
  40032e:	4281      	cmp	r1, r0
  400330:	d3ee      	bcc.n	400310 <aat31xx_set_backlight+0x20>
		}
	}

	ul_delay = DELAY_ENABLE;
  400332:	f44f 3300 	mov.w	r3, #131072	; 0x20000
  400336:	9301      	str	r3, [sp, #4]
	while (ul_delay--) {
  400338:	9b01      	ldr	r3, [sp, #4]
  40033a:	1e5a      	subs	r2, r3, #1
  40033c:	9201      	str	r2, [sp, #4]
  40033e:	2b00      	cmp	r3, #0
  400340:	d1fa      	bne.n	400338 <aat31xx_set_backlight+0x48>
	}
}
  400342:	b002      	add	sp, #8
  400344:	bcf0      	pop	{r4, r5, r6, r7}
  400346:	4770      	bx	lr
  400348:	400e1200 	.word	0x400e1200

0040034c <aat31xx_disable_backlight>:

/**
 * \brief Switch off backlight.
 */
void aat31xx_disable_backlight(void)
{
  40034c:	b082      	sub	sp, #8
		base->PIO_CODR = arch_ioport_pin_to_mask(pin);
  40034e:	f44f 5200 	mov.w	r2, #8192	; 0x2000
  400352:	4b06      	ldr	r3, [pc, #24]	; (40036c <aat31xx_disable_backlight+0x20>)
  400354:	635a      	str	r2, [r3, #52]	; 0x34
	volatile uint32_t ul_delay;

	ioport_set_pin_level(BOARD_AAT31XX_SET_GPIO, IOPORT_PIN_LEVEL_LOW);

	ul_delay = DELAY_DISABLE;
  400356:	f44f 3300 	mov.w	r3, #131072	; 0x20000
  40035a:	9301      	str	r3, [sp, #4]
	while (ul_delay--) {
  40035c:	9b01      	ldr	r3, [sp, #4]
  40035e:	1e5a      	subs	r2, r3, #1
  400360:	9201      	str	r2, [sp, #4]
  400362:	2b00      	cmp	r3, #0
  400364:	d1fa      	bne.n	40035c <aat31xx_disable_backlight+0x10>
	}
}
  400366:	b002      	add	sp, #8
  400368:	4770      	bx	lr
  40036a:	bf00      	nop
  40036c:	400e1200 	.word	0x400e1200

00400370 <ili93xx_write_ram_prepare>:
/**
 * \brief Prepare to write GRAM data for ili93xx.
 */
static void ili93xx_write_ram_prepare(void)
{
	if (g_uc_device_type == DEVICE_TYPE_ILI9325) {
  400370:	4b0b      	ldr	r3, [pc, #44]	; (4003a0 <ili93xx_write_ram_prepare+0x30>)
  400372:	781b      	ldrb	r3, [r3, #0]
  400374:	2b01      	cmp	r3, #1
  400376:	d002      	beq.n	40037e <ili93xx_write_ram_prepare+0xe>
		/** Write Data to GRAM (R22h) */
		LCD_IR(0);
		LCD_IR(ILI9325_GRAM_DATA_REG);
	} else if (g_uc_device_type == DEVICE_TYPE_ILI9341) {
  400378:	2b02      	cmp	r3, #2
  40037a:	d007      	beq.n	40038c <ili93xx_write_ram_prepare+0x1c>
  40037c:	4770      	bx	lr
/** Define EBI access for ILI93xx 8-bit System Interface.*/
#if defined(BOARD_ILI93XX_ADDR) && defined (BOARD_ILI93XX_RS)
static inline void LCD_IR(uint8_t lcd_index)
{
	/** ILI93XX index register address */
	*((volatile uint8_t *)(BOARD_ILI93XX_ADDR)) = lcd_index;
  40037e:	f04f 43c2 	mov.w	r3, #1627389952	; 0x61000000
  400382:	2200      	movs	r2, #0
  400384:	701a      	strb	r2, [r3, #0]
  400386:	2222      	movs	r2, #34	; 0x22
  400388:	701a      	strb	r2, [r3, #0]
  40038a:	4770      	bx	lr
  40038c:	f04f 43c2 	mov.w	r3, #1627389952	; 0x61000000
  400390:	222c      	movs	r2, #44	; 0x2c
  400392:	701a      	strb	r2, [r3, #0]
  400394:	2200      	movs	r2, #0
  400396:	701a      	strb	r2, [r3, #0]
  400398:	223c      	movs	r2, #60	; 0x3c
  40039a:	701a      	strb	r2, [r3, #0]
		/** memory write command (R2Ch)*/
		LCD_IR(ILI9341_CMD_MEMORY_WRITE);
		LCD_IR(0);
		LCD_IR(ILI9341_CMD_WRITE_MEMORY_CONTINUE);
	}
}
  40039c:	e7ee      	b.n	40037c <ili93xx_write_ram_prepare+0xc>
  40039e:	bf00      	nop
  4003a0:	20000a08 	.word	0x20000a08

004003a4 <ili93xx_write_ram>:
 *
 * \param ul_color 24-bits RGB color.
 */
static void ili93xx_write_ram(ili93xx_color_t ul_color)
{
	LCD_WD((ul_color >> 16) & 0xFF);
  4003a4:	f3c0 4207 	ubfx	r2, r0, #16, #8
}

static inline void LCD_WD(uint8_t lcd_data)
{
	*((volatile uint8_t *)((BOARD_ILI93XX_ADDR) | (BOARD_ILI93XX_RS))) =
  4003a8:	4b03      	ldr	r3, [pc, #12]	; (4003b8 <ili93xx_write_ram+0x14>)
  4003aa:	701a      	strb	r2, [r3, #0]
	LCD_WD((ul_color >> 8) & 0xFF);
  4003ac:	f3c0 2207 	ubfx	r2, r0, #8, #8
  4003b0:	701a      	strb	r2, [r3, #0]
	LCD_WD(ul_color & 0xFF);
  4003b2:	b2c0      	uxtb	r0, r0
  4003b4:	7018      	strb	r0, [r3, #0]
  4003b6:	4770      	bx	lr
  4003b8:	61000002 	.word	0x61000002

004003bc <ili93xx_write_ram_buffer>:
 * \param p_ul_buf data buffer.
 * \param ul_size size in pixels.
 */
static void ili93xx_write_ram_buffer(const ili93xx_color_t *p_ul_buf,
		uint32_t ul_size)
{
  4003bc:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
  4003c0:	4607      	mov	r7, r0
  4003c2:	4688      	mov	r8, r1
	uint32_t ul_addr;
	for (ul_addr = 0; ul_addr < (ul_size - ul_size % 8); ul_addr += 8) {
  4003c4:	f031 0907 	bics.w	r9, r1, #7
  4003c8:	d023      	beq.n	400412 <ili93xx_write_ram_buffer+0x56>
  4003ca:	4604      	mov	r4, r0
  4003cc:	2600      	movs	r6, #0
		ili93xx_write_ram(p_ul_buf[ul_addr]);
  4003ce:	4d12      	ldr	r5, [pc, #72]	; (400418 <ili93xx_write_ram_buffer+0x5c>)
  4003d0:	6820      	ldr	r0, [r4, #0]
  4003d2:	47a8      	blx	r5
		ili93xx_write_ram(p_ul_buf[ul_addr + 1]);
  4003d4:	6860      	ldr	r0, [r4, #4]
  4003d6:	47a8      	blx	r5
		ili93xx_write_ram(p_ul_buf[ul_addr + 2]);
  4003d8:	68a0      	ldr	r0, [r4, #8]
  4003da:	47a8      	blx	r5
		ili93xx_write_ram(p_ul_buf[ul_addr + 3]);
  4003dc:	68e0      	ldr	r0, [r4, #12]
  4003de:	47a8      	blx	r5
		ili93xx_write_ram(p_ul_buf[ul_addr + 4]);
  4003e0:	6920      	ldr	r0, [r4, #16]
  4003e2:	47a8      	blx	r5
		ili93xx_write_ram(p_ul_buf[ul_addr + 5]);
  4003e4:	6960      	ldr	r0, [r4, #20]
  4003e6:	47a8      	blx	r5
		ili93xx_write_ram(p_ul_buf[ul_addr + 6]);
  4003e8:	69a0      	ldr	r0, [r4, #24]
  4003ea:	47a8      	blx	r5
		ili93xx_write_ram(p_ul_buf[ul_addr + 7]);
  4003ec:	69e0      	ldr	r0, [r4, #28]
  4003ee:	47a8      	blx	r5
	for (ul_addr = 0; ul_addr < (ul_size - ul_size % 8); ul_addr += 8) {
  4003f0:	3608      	adds	r6, #8
  4003f2:	3420      	adds	r4, #32
  4003f4:	454e      	cmp	r6, r9
  4003f6:	d3eb      	bcc.n	4003d0 <ili93xx_write_ram_buffer+0x14>
	}
	for (; ul_addr < ul_size; ul_addr++) {
  4003f8:	4546      	cmp	r6, r8
  4003fa:	d208      	bcs.n	40040e <ili93xx_write_ram_buffer+0x52>
  4003fc:	eb07 0786 	add.w	r7, r7, r6, lsl #2
		ili93xx_write_ram(p_ul_buf[ul_addr]);
  400400:	4d05      	ldr	r5, [pc, #20]	; (400418 <ili93xx_write_ram_buffer+0x5c>)
  400402:	f857 0b04 	ldr.w	r0, [r7], #4
  400406:	47a8      	blx	r5
	for (; ul_addr < ul_size; ul_addr++) {
  400408:	3601      	adds	r6, #1
  40040a:	45b0      	cmp	r8, r6
  40040c:	d1f9      	bne.n	400402 <ili93xx_write_ram_buffer+0x46>
  40040e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
	for (ul_addr = 0; ul_addr < (ul_size - ul_size % 8); ul_addr += 8) {
  400412:	464e      	mov	r6, r9
  400414:	e7f0      	b.n	4003f8 <ili93xx_write_ram_buffer+0x3c>
  400416:	bf00      	nop
  400418:	004003a5 	.word	0x004003a5

0040041c <ili93xx_write_register_word>:
	*((volatile uint8_t *)(BOARD_ILI93XX_ADDR)) = lcd_index;
  40041c:	f04f 43c2 	mov.w	r3, #1627389952	; 0x61000000
  400420:	2200      	movs	r2, #0
  400422:	701a      	strb	r2, [r3, #0]
  400424:	7018      	strb	r0, [r3, #0]
 */
static void ili93xx_write_register_word(uint8_t uc_reg, uint16_t us_data)
{
	LCD_IR(0);
	LCD_IR(uc_reg);
	LCD_WD((us_data >> 8) & 0xFF);
  400426:	0a0a      	lsrs	r2, r1, #8
	*((volatile uint8_t *)((BOARD_ILI93XX_ADDR) | (BOARD_ILI93XX_RS))) =
  400428:	3302      	adds	r3, #2
  40042a:	701a      	strb	r2, [r3, #0]
	LCD_WD(us_data & 0xFF);
  40042c:	b2c9      	uxtb	r1, r1
  40042e:	7019      	strb	r1, [r3, #0]
  400430:	4770      	bx	lr
	...

00400434 <ili93xx_write_register>:
 * \param uc_reg register address.
 * \param us_data data to be written.
 */
static void ili93xx_write_register(uint8_t uc_reg, uint8_t *p_data,
		uint8_t uc_datacnt)
{
  400434:	b410      	push	{r4}
	*((volatile uint8_t *)(BOARD_ILI93XX_ADDR)) = lcd_index;
  400436:	f04f 43c2 	mov.w	r3, #1627389952	; 0x61000000
  40043a:	2400      	movs	r4, #0
  40043c:	701c      	strb	r4, [r3, #0]
  40043e:	7018      	strb	r0, [r3, #0]
	LCD_IR(0);
	LCD_IR(uc_reg);
	for (uint8_t i = 0; i < uc_datacnt; i++) {
  400440:	b14a      	cbz	r2, 400456 <ili93xx_write_register+0x22>
  400442:	1e4b      	subs	r3, r1, #1
  400444:	1e50      	subs	r0, r2, #1
  400446:	fa51 f180 	uxtab	r1, r1, r0
	*((volatile uint8_t *)((BOARD_ILI93XX_ADDR) | (BOARD_ILI93XX_RS))) =
  40044a:	4804      	ldr	r0, [pc, #16]	; (40045c <ili93xx_write_register+0x28>)
		LCD_WD(p_data[i]);
  40044c:	f813 2f01 	ldrb.w	r2, [r3, #1]!
  400450:	7002      	strb	r2, [r0, #0]
	for (uint8_t i = 0; i < uc_datacnt; i++) {
  400452:	428b      	cmp	r3, r1
  400454:	d1fa      	bne.n	40044c <ili93xx_write_register+0x18>
	}
}
  400456:	bc10      	pop	{r4}
  400458:	4770      	bx	lr
  40045a:	bf00      	nop
  40045c:	61000002 	.word	0x61000002

00400460 <ili93xx_delay>:

/**
 * \brief Delay function.
 */
static void ili93xx_delay(uint32_t ul_ms)
{
  400460:	b082      	sub	sp, #8
	volatile uint32_t i;

	for (i = 0; i < ul_ms; i++) {
  400462:	2300      	movs	r3, #0
  400464:	9301      	str	r3, [sp, #4]
  400466:	9b01      	ldr	r3, [sp, #4]
  400468:	4298      	cmp	r0, r3
  40046a:	d911      	bls.n	400490 <ili93xx_delay+0x30>
		for (i = 0; i < 100000; i++) {
  40046c:	2100      	movs	r1, #0
  40046e:	4a09      	ldr	r2, [pc, #36]	; (400494 <ili93xx_delay+0x34>)
  400470:	9101      	str	r1, [sp, #4]
  400472:	9b01      	ldr	r3, [sp, #4]
  400474:	4293      	cmp	r3, r2
  400476:	d805      	bhi.n	400484 <ili93xx_delay+0x24>
  400478:	9b01      	ldr	r3, [sp, #4]
  40047a:	3301      	adds	r3, #1
  40047c:	9301      	str	r3, [sp, #4]
  40047e:	9b01      	ldr	r3, [sp, #4]
  400480:	4293      	cmp	r3, r2
  400482:	d9f9      	bls.n	400478 <ili93xx_delay+0x18>
	for (i = 0; i < ul_ms; i++) {
  400484:	9b01      	ldr	r3, [sp, #4]
  400486:	3301      	adds	r3, #1
  400488:	9301      	str	r3, [sp, #4]
  40048a:	9b01      	ldr	r3, [sp, #4]
  40048c:	4283      	cmp	r3, r0
  40048e:	d3ef      	bcc.n	400470 <ili93xx_delay+0x10>
		}
	}
}
  400490:	b002      	add	sp, #8
  400492:	4770      	bx	lr
  400494:	0001869f 	.word	0x0001869f

00400498 <ili93xx_check_box_coordinates>:
 * \param p_ul_x2 X coordinate of lower-right corner on LCD.
 * \param p_ul_y2 Y coordinate of lower-right corner on LCD.
 */
static void ili93xx_check_box_coordinates(uint32_t *p_ul_x1, uint32_t *p_ul_y1,
		uint32_t *p_ul_x2, uint32_t *p_ul_y2)
{
  400498:	b430      	push	{r4, r5}
	uint32_t dw;

	if (*p_ul_x1 >= g_ul_lcd_x_length) {
  40049a:	4c15      	ldr	r4, [pc, #84]	; (4004f0 <ili93xx_check_box_coordinates+0x58>)
  40049c:	6824      	ldr	r4, [r4, #0]
  40049e:	6805      	ldr	r5, [r0, #0]
  4004a0:	42a5      	cmp	r5, r4
		*p_ul_x1 = g_ul_lcd_x_length - 1;
  4004a2:	bf24      	itt	cs
  4004a4:	f104 35ff 	addcs.w	r5, r4, #4294967295
  4004a8:	6005      	strcs	r5, [r0, #0]
	}

	if (*p_ul_x2 >= g_ul_lcd_x_length) {
  4004aa:	6815      	ldr	r5, [r2, #0]
  4004ac:	42ac      	cmp	r4, r5
		*p_ul_x2 = g_ul_lcd_x_length - 1;
  4004ae:	bf9c      	itt	ls
  4004b0:	f104 34ff 	addls.w	r4, r4, #4294967295
  4004b4:	6014      	strls	r4, [r2, #0]
	}

	if (*p_ul_y1 >= g_ul_lcd_y_length) {
  4004b6:	4c0f      	ldr	r4, [pc, #60]	; (4004f4 <ili93xx_check_box_coordinates+0x5c>)
  4004b8:	6824      	ldr	r4, [r4, #0]
  4004ba:	680d      	ldr	r5, [r1, #0]
  4004bc:	42a5      	cmp	r5, r4
		*p_ul_y1 = g_ul_lcd_y_length - 1;
  4004be:	bf24      	itt	cs
  4004c0:	f104 35ff 	addcs.w	r5, r4, #4294967295
  4004c4:	600d      	strcs	r5, [r1, #0]
	}

	if (*p_ul_y2 >= g_ul_lcd_y_length) {
  4004c6:	681d      	ldr	r5, [r3, #0]
  4004c8:	42ac      	cmp	r4, r5
		*p_ul_y2 = g_ul_lcd_y_length - 1;
  4004ca:	bf9c      	itt	ls
  4004cc:	f104 34ff 	addls.w	r4, r4, #4294967295
  4004d0:	601c      	strls	r4, [r3, #0]
	}

	if (*p_ul_x1 > *p_ul_x2) {
  4004d2:	6804      	ldr	r4, [r0, #0]
  4004d4:	6815      	ldr	r5, [r2, #0]
  4004d6:	42ac      	cmp	r4, r5
		dw = *p_ul_x1;
		*p_ul_x1 = *p_ul_x2;
  4004d8:	bf84      	itt	hi
  4004da:	6005      	strhi	r5, [r0, #0]
		*p_ul_x2 = dw;
  4004dc:	6014      	strhi	r4, [r2, #0]
	}

	if (*p_ul_y1 > *p_ul_y2) {
  4004de:	680a      	ldr	r2, [r1, #0]
  4004e0:	6818      	ldr	r0, [r3, #0]
  4004e2:	4282      	cmp	r2, r0
		dw = *p_ul_y1;
		*p_ul_y1 = *p_ul_y2;
  4004e4:	bf84      	itt	hi
  4004e6:	6008      	strhi	r0, [r1, #0]
		*p_ul_y2 = dw;
  4004e8:	601a      	strhi	r2, [r3, #0]
	}
}
  4004ea:	bc30      	pop	{r4, r5}
  4004ec:	4770      	bx	lr
  4004ee:	bf00      	nop
  4004f0:	2000000c 	.word	0x2000000c
  4004f4:	20000010 	.word	0x20000010

004004f8 <ili93xx_device_type_identify>:
 *        ILI9341 device ID locates in Read ID4 (RD3h) register.
 *
 * \return 0 if secceed in identifying device; otherwise fails.
 */
uint8_t ili93xx_device_type_identify(void)
{
  4004f8:	b082      	sub	sp, #8
	*((volatile uint8_t *)(BOARD_ILI93XX_ADDR)) = lcd_index;
  4004fa:	f04f 43c2 	mov.w	r3, #1627389952	; 0x61000000
  4004fe:	2200      	movs	r2, #0
  400500:	701a      	strb	r2, [r3, #0]
  400502:	22d3      	movs	r2, #211	; 0xd3
  400504:	701a      	strb	r2, [r3, #0]
																lcd_data;
}

static inline uint8_t LCD_RD(void)
{
	return *((volatile uint8_t *)((BOARD_ILI93XX_ADDR) |(BOARD_ILI93XX_RS)));
  400506:	491a      	ldr	r1, [pc, #104]	; (400570 <ili93xx_device_type_identify+0x78>)
  400508:	780b      	ldrb	r3, [r1, #0]
		p_data[i] = LCD_RD();
  40050a:	f88d 3000 	strb.w	r3, [sp]
  40050e:	780b      	ldrb	r3, [r1, #0]
  400510:	f88d 3001 	strb.w	r3, [sp, #1]
  400514:	780b      	ldrb	r3, [r1, #0]
  400516:	b2da      	uxtb	r2, r3
  400518:	f88d 2002 	strb.w	r2, [sp, #2]
  40051c:	780b      	ldrb	r3, [r1, #0]
  40051e:	b2db      	uxtb	r3, r3
  400520:	f88d 3003 	strb.w	r3, [sp, #3]
	uint8_t paratable[6];
	uint16_t chipid;

	/** Read ID4 (RD4h) register to get device code for ILI9341*/
	ili93xx_read_register(ILI9341_CMD_READ_ID4, paratable, 4);
	chipid = ((uint16_t)paratable[2] << 8) + paratable[3];
  400524:	eb03 2302 	add.w	r3, r3, r2, lsl #8

	if (chipid == ILI9341_DEVICE_CODE) {
  400528:	b29b      	uxth	r3, r3
  40052a:	f249 3241 	movw	r2, #37697	; 0x9341
  40052e:	4293      	cmp	r3, r2
  400530:	d014      	beq.n	40055c <ili93xx_device_type_identify+0x64>
	*((volatile uint8_t *)(BOARD_ILI93XX_ADDR)) = lcd_index;
  400532:	f04f 43c2 	mov.w	r3, #1627389952	; 0x61000000
  400536:	2200      	movs	r2, #0
  400538:	701a      	strb	r2, [r3, #0]
  40053a:	701a      	strb	r2, [r3, #0]
	return *((volatile uint8_t *)((BOARD_ILI93XX_ADDR) |(BOARD_ILI93XX_RS)));
  40053c:	490c      	ldr	r1, [pc, #48]	; (400570 <ili93xx_device_type_identify+0x78>)
  40053e:	780b      	ldrb	r3, [r1, #0]
  400540:	b2da      	uxtb	r2, r3
		p_data[i] = LCD_RD();
  400542:	f88d 2000 	strb.w	r2, [sp]
  400546:	780b      	ldrb	r3, [r1, #0]
		return 0;
	}

	/** Driver Code Read (R00h) for ILI9325*/
	ili93xx_read_register(ILI9325_DEVICE_CODE_REG, paratable, 2);
	chipid = ((uint16_t)paratable[0] << 8) + paratable[1];
  400548:	eb03 2302 	add.w	r3, r3, r2, lsl #8
	if (chipid == ILI9325_DEVICE_CODE) {
  40054c:	b29b      	uxth	r3, r3
  40054e:	f249 3225 	movw	r2, #37669	; 0x9325
  400552:	4293      	cmp	r3, r2
  400554:	d007      	beq.n	400566 <ili93xx_device_type_identify+0x6e>
		g_uc_device_type = DEVICE_TYPE_ILI9325;
		return 0;
	}

	return 1;
  400556:	2001      	movs	r0, #1
}
  400558:	b002      	add	sp, #8
  40055a:	4770      	bx	lr
		g_uc_device_type = DEVICE_TYPE_ILI9341;
  40055c:	2202      	movs	r2, #2
  40055e:	4b05      	ldr	r3, [pc, #20]	; (400574 <ili93xx_device_type_identify+0x7c>)
  400560:	701a      	strb	r2, [r3, #0]
		return 0;
  400562:	2000      	movs	r0, #0
  400564:	e7f8      	b.n	400558 <ili93xx_device_type_identify+0x60>
		g_uc_device_type = DEVICE_TYPE_ILI9325;
  400566:	2201      	movs	r2, #1
  400568:	4b02      	ldr	r3, [pc, #8]	; (400574 <ili93xx_device_type_identify+0x7c>)
  40056a:	701a      	strb	r2, [r3, #0]
		return 0;
  40056c:	2000      	movs	r0, #0
  40056e:	e7f3      	b.n	400558 <ili93xx_device_type_identify+0x60>
  400570:	61000002 	.word	0x61000002
  400574:	20000a08 	.word	0x20000a08

00400578 <ili93xx_display_on>:

/**
 * \brief Turn on the LCD.
 */
void ili93xx_display_on(void)
{
  400578:	b508      	push	{r3, lr}
	if (g_uc_device_type == DEVICE_TYPE_ILI9325) {
  40057a:	4b09      	ldr	r3, [pc, #36]	; (4005a0 <ili93xx_display_on+0x28>)
  40057c:	781b      	ldrb	r3, [r3, #0]
  40057e:	2b01      	cmp	r3, #1
  400580:	d002      	beq.n	400588 <ili93xx_display_on+0x10>
		ili93xx_write_register_word(ILI9325_DISP_CTRL1,
				ILI9325_DISP_CTRL1_BASEE |
				ILI9325_DISP_CTRL1_GON |
				ILI9325_DISP_CTRL1_DTE |
				ILI9325_DISP_CTRL1_D(0x03));
	} else if (g_uc_device_type == DEVICE_TYPE_ILI9341) {
  400582:	2b02      	cmp	r3, #2
  400584:	d006      	beq.n	400594 <ili93xx_display_on+0x1c>
  400586:	bd08      	pop	{r3, pc}
		ili93xx_write_register_word(ILI9325_DISP_CTRL1,
  400588:	f240 1133 	movw	r1, #307	; 0x133
  40058c:	2007      	movs	r0, #7
  40058e:	4b05      	ldr	r3, [pc, #20]	; (4005a4 <ili93xx_display_on+0x2c>)
  400590:	4798      	blx	r3
  400592:	bd08      	pop	{r3, pc}
		ili93xx_write_register(ILI9341_CMD_DISPLAY_ON, NULL, 0);
  400594:	2200      	movs	r2, #0
  400596:	4611      	mov	r1, r2
  400598:	2029      	movs	r0, #41	; 0x29
  40059a:	4b03      	ldr	r3, [pc, #12]	; (4005a8 <ili93xx_display_on+0x30>)
  40059c:	4798      	blx	r3
	}
}
  40059e:	e7f2      	b.n	400586 <ili93xx_display_on+0xe>
  4005a0:	20000a08 	.word	0x20000a08
  4005a4:	0040041d 	.word	0x0040041d
  4005a8:	00400435 	.word	0x00400435

004005ac <ili93xx_set_foreground_color>:
 * \brief Set foreground color.
 *
 * \param ul_color foreground color.
 */
void ili93xx_set_foreground_color(ili93xx_color_t ul_color)
{
  4005ac:	4a04      	ldr	r2, [pc, #16]	; (4005c0 <ili93xx_set_foreground_color+0x14>)
  4005ae:	1f13      	subs	r3, r2, #4
  4005b0:	f502 726f 	add.w	r2, r2, #956	; 0x3bc
	uint32_t i;

	/** Fill the cache with selected color */
	for (i = 0; i < LCD_DATA_CACHE_SIZE; ++i) {
		g_ul_pixel_cache[i] = ul_color;
  4005b4:	f843 0f04 	str.w	r0, [r3, #4]!
	for (i = 0; i < LCD_DATA_CACHE_SIZE; ++i) {
  4005b8:	4293      	cmp	r3, r2
  4005ba:	d1fb      	bne.n	4005b4 <ili93xx_set_foreground_color+0x8>
	}
}
  4005bc:	4770      	bx	lr
  4005be:	bf00      	nop
  4005c0:	20000a0c 	.word	0x20000a0c

004005c4 <ili93xx_set_window>:
 * \param ul_width The width of the window.
 * \param ul_height The height of the window.
 */
void ili93xx_set_window(uint32_t ul_x, uint32_t ul_y, uint32_t ul_width,
		uint32_t ul_height)
{
  4005c4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  4005c8:	b082      	sub	sp, #8
  4005ca:	460c      	mov	r4, r1
  4005cc:	4617      	mov	r7, r2
  4005ce:	461e      	mov	r6, r3
	Assert(ul_x <= (g_ul_lcd_x_length - 1));
	Assert(ul_y <= (g_ul_lcd_y_length - 1));
	Assert(ul_width <= (g_ul_lcd_x_length - ul_x));
	Assert(ul_height <= (g_ul_lcd_y_length - ul_y));
	if (g_uc_device_type == DEVICE_TYPE_ILI9325) {
  4005d0:	4b23      	ldr	r3, [pc, #140]	; (400660 <ili93xx_set_window+0x9c>)
  4005d2:	781b      	ldrb	r3, [r3, #0]
  4005d4:	2b01      	cmp	r3, #1
  4005d6:	d004      	beq.n	4005e2 <ili93xx_set_window+0x1e>
				(uint16_t)ul_y);

		/** Set Vertical Address End Position */
		ili93xx_write_register_word(ILI9325_VERTICAL_ADDR_END,
				(uint16_t)(ul_y + ul_height - 1));
	} else if (g_uc_device_type == DEVICE_TYPE_ILI9341) {
  4005d8:	2b02      	cmp	r3, #2
  4005da:	d017      	beq.n	40060c <ili93xx_set_window+0x48>
		paratable[2] = ((ul_y + ul_height - 1) >> 8) & 0xFF;
		paratable[3] = (ul_y + ul_height - 1) & 0xFF;
		ili93xx_write_register(ILI9341_CMD_PAGE_ADDRESS_SET,
				       paratable, 4);
	}
}
  4005dc:	b002      	add	sp, #8
  4005de:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
		ili93xx_write_register_word(ILI9325_HORIZONTAL_ADDR_START,
  4005e2:	b285      	uxth	r5, r0
  4005e4:	4629      	mov	r1, r5
  4005e6:	2050      	movs	r0, #80	; 0x50
  4005e8:	f8df 807c 	ldr.w	r8, [pc, #124]	; 400668 <ili93xx_set_window+0xa4>
  4005ec:	47c0      	blx	r8
		ili93xx_write_register_word(ILI9325_HORIZONTAL_ADDR_END,
  4005ee:	1e78      	subs	r0, r7, #1
  4005f0:	4428      	add	r0, r5
  4005f2:	b281      	uxth	r1, r0
  4005f4:	2051      	movs	r0, #81	; 0x51
  4005f6:	47c0      	blx	r8
		ili93xx_write_register_word(ILI9325_VERTICAL_ADDR_START,
  4005f8:	b2a4      	uxth	r4, r4
  4005fa:	4621      	mov	r1, r4
  4005fc:	2052      	movs	r0, #82	; 0x52
  4005fe:	47c0      	blx	r8
		ili93xx_write_register_word(ILI9325_VERTICAL_ADDR_END,
  400600:	3e01      	subs	r6, #1
  400602:	4434      	add	r4, r6
  400604:	b2a1      	uxth	r1, r4
  400606:	2053      	movs	r0, #83	; 0x53
  400608:	47c0      	blx	r8
  40060a:	e7e7      	b.n	4005dc <ili93xx_set_window+0x18>
		paratable[0] = (ul_x >> 8) & 0xFF;
  40060c:	0a03      	lsrs	r3, r0, #8
  40060e:	f88d 3004 	strb.w	r3, [sp, #4]
		paratable[1] = ul_x & 0xFF;
  400612:	b2c2      	uxtb	r2, r0
  400614:	f88d 2005 	strb.w	r2, [sp, #5]
		paratable[2] = ((ul_x + ul_width - 1) >> 8) & 0xFF;
  400618:	1e7b      	subs	r3, r7, #1
  40061a:	4418      	add	r0, r3
  40061c:	0a00      	lsrs	r0, r0, #8
  40061e:	f88d 0006 	strb.w	r0, [sp, #6]
		paratable[3] = (ul_x + ul_width - 1) & 0xFF;
  400622:	461f      	mov	r7, r3
  400624:	4417      	add	r7, r2
  400626:	f88d 7007 	strb.w	r7, [sp, #7]
		ili93xx_write_register(ILI9341_CMD_COLUMN_ADDRESS_SET,
  40062a:	2204      	movs	r2, #4
  40062c:	eb0d 0102 	add.w	r1, sp, r2
  400630:	202a      	movs	r0, #42	; 0x2a
  400632:	4d0c      	ldr	r5, [pc, #48]	; (400664 <ili93xx_set_window+0xa0>)
  400634:	47a8      	blx	r5
		paratable[0] = (ul_y >> 8) & 0xFF;
  400636:	0a23      	lsrs	r3, r4, #8
  400638:	f88d 3004 	strb.w	r3, [sp, #4]
		paratable[1] = ul_y & 0xFF;
  40063c:	b2e2      	uxtb	r2, r4
  40063e:	f88d 2005 	strb.w	r2, [sp, #5]
		paratable[2] = ((ul_y + ul_height - 1) >> 8) & 0xFF;
  400642:	1e73      	subs	r3, r6, #1
  400644:	441c      	add	r4, r3
  400646:	0a24      	lsrs	r4, r4, #8
  400648:	f88d 4006 	strb.w	r4, [sp, #6]
		paratable[3] = (ul_y + ul_height - 1) & 0xFF;
  40064c:	461e      	mov	r6, r3
  40064e:	4416      	add	r6, r2
  400650:	f88d 6007 	strb.w	r6, [sp, #7]
		ili93xx_write_register(ILI9341_CMD_PAGE_ADDRESS_SET,
  400654:	2204      	movs	r2, #4
  400656:	eb0d 0102 	add.w	r1, sp, r2
  40065a:	202b      	movs	r0, #43	; 0x2b
  40065c:	47a8      	blx	r5
}
  40065e:	e7bd      	b.n	4005dc <ili93xx_set_window+0x18>
  400660:	20000a08 	.word	0x20000a08
  400664:	00400435 	.word	0x00400435
  400668:	0040041d 	.word	0x0040041d

0040066c <ili93xx_set_cursor_position>:
 *
 * \param us_x X coordinate of upper-left corner on LCD.
 * \param us_y Y coordinate of upper-left corner on LCD.
 */
void ili93xx_set_cursor_position(uint16_t us_x, uint16_t us_y)
{
  40066c:	b538      	push	{r3, r4, r5, lr}
	if (g_uc_device_type == DEVICE_TYPE_ILI9325) {
  40066e:	4b07      	ldr	r3, [pc, #28]	; (40068c <ili93xx_set_cursor_position+0x20>)
  400670:	781b      	ldrb	r3, [r3, #0]
  400672:	2b01      	cmp	r3, #1
  400674:	d000      	beq.n	400678 <ili93xx_set_cursor_position+0xc>
  400676:	bd38      	pop	{r3, r4, r5, pc}
  400678:	460c      	mov	r4, r1
  40067a:	4601      	mov	r1, r0
		/** GRAM Horizontal/Vertical Address Set (R20h, R21h) */
		ili93xx_write_register_word(ILI9325_HORIZONTAL_GRAM_ADDR_SET, us_x);
  40067c:	2020      	movs	r0, #32
  40067e:	4d04      	ldr	r5, [pc, #16]	; (400690 <ili93xx_set_cursor_position+0x24>)
  400680:	47a8      	blx	r5
		ili93xx_write_register_word(ILI9325_VERTICAL_GRAM_ADDR_SET, us_y);
  400682:	4621      	mov	r1, r4
  400684:	2021      	movs	r0, #33	; 0x21
  400686:	47a8      	blx	r5
	} else if (g_uc_device_type == DEVICE_TYPE_ILI9341) {
		/** There is no corresponding operation for ILI9341. */
	}
}
  400688:	e7f5      	b.n	400676 <ili93xx_set_cursor_position+0xa>
  40068a:	bf00      	nop
  40068c:	20000a08 	.word	0x20000a08
  400690:	0040041d 	.word	0x0040041d

00400694 <ili93xx_init>:
{
  400694:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
  400698:	b083      	sub	sp, #12
  40069a:	4606      	mov	r6, r0
	if (ili93xx_device_type_identify() != 0) {
  40069c:	4bac      	ldr	r3, [pc, #688]	; (400950 <ili93xx_init+0x2bc>)
  40069e:	4798      	blx	r3
  4006a0:	2800      	cmp	r0, #0
  4006a2:	f040 8152 	bne.w	40094a <ili93xx_init+0x2b6>
	g_ul_lcd_x_length = ILI93XX_LCD_WIDTH;
  4006a6:	22f0      	movs	r2, #240	; 0xf0
  4006a8:	4baa      	ldr	r3, [pc, #680]	; (400954 <ili93xx_init+0x2c0>)
  4006aa:	601a      	str	r2, [r3, #0]
	g_ul_lcd_y_length = ILI93XX_LCD_HEIGHT;
  4006ac:	f44f 72a0 	mov.w	r2, #320	; 0x140
  4006b0:	4ba9      	ldr	r3, [pc, #676]	; (400958 <ili93xx_init+0x2c4>)
  4006b2:	601a      	str	r2, [r3, #0]
	if (g_uc_device_type == DEVICE_TYPE_ILI9325) {
  4006b4:	4ba9      	ldr	r3, [pc, #676]	; (40095c <ili93xx_init+0x2c8>)
  4006b6:	781b      	ldrb	r3, [r3, #0]
  4006b8:	2b01      	cmp	r3, #1
  4006ba:	d006      	beq.n	4006ca <ili93xx_init+0x36>
	} else if (g_uc_device_type == DEVICE_TYPE_ILI9341) {
  4006bc:	2b02      	cmp	r3, #2
  4006be:	f000 80b5 	beq.w	40082c <ili93xx_init+0x198>
		return 1;
  4006c2:	2001      	movs	r0, #1
}
  4006c4:	b003      	add	sp, #12
  4006c6:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
		ili93xx_write_register_word(ILI9325_DISP_CTRL1, ILI9325_DISP_CTRL1_GON |
  4006ca:	2133      	movs	r1, #51	; 0x33
  4006cc:	2007      	movs	r0, #7
  4006ce:	4ca4      	ldr	r4, [pc, #656]	; (400960 <ili93xx_init+0x2cc>)
  4006d0:	47a0      	blx	r4
		ili93xx_write_register_word(ILI9325_POWER_CTRL1, 0x0000);
  4006d2:	2100      	movs	r1, #0
  4006d4:	2010      	movs	r0, #16
  4006d6:	47a0      	blx	r4
		ili93xx_write_register_word(ILI9325_START_OSC_CTRL,
  4006d8:	2101      	movs	r1, #1
  4006da:	2000      	movs	r0, #0
  4006dc:	47a0      	blx	r4
		ili93xx_write_register_word(ILI9325_DRIVER_OUTPUT_CTRL1,
  4006de:	f44f 7180 	mov.w	r1, #256	; 0x100
  4006e2:	2001      	movs	r0, #1
  4006e4:	47a0      	blx	r4
		ili93xx_write_register_word(ILI9325_LCD_DRIVING_CTRL,
  4006e6:	f44f 61e0 	mov.w	r1, #1792	; 0x700
  4006ea:	2002      	movs	r0, #2
  4006ec:	47a0      	blx	r4
		ili93xx_write_register_word(ILI9325_RESIZE_CTRL, 0x0000);
  4006ee:	2100      	movs	r1, #0
  4006f0:	2004      	movs	r0, #4
  4006f2:	47a0      	blx	r4
		ili93xx_write_register_word(ILI9325_DISP_CTRL2,
  4006f4:	f240 2107 	movw	r1, #519	; 0x207
  4006f8:	2008      	movs	r0, #8
  4006fa:	47a0      	blx	r4
		ili93xx_write_register_word(ILI9325_DISP_CTRL3, 0x0000);
  4006fc:	2100      	movs	r1, #0
  4006fe:	2009      	movs	r0, #9
  400700:	47a0      	blx	r4
		ili93xx_write_register_word(ILI9325_DISP_CTRL4, 0x0000);
  400702:	2100      	movs	r1, #0
  400704:	200a      	movs	r0, #10
  400706:	47a0      	blx	r4
		ili93xx_write_register_word(ILI9325_RGB_DISP_INTERFACE_CTRL1,
  400708:	2100      	movs	r1, #0
  40070a:	200c      	movs	r0, #12
  40070c:	47a0      	blx	r4
		ili93xx_write_register_word(ILI9325_FRAME_MAKER_POS, 0x0000);
  40070e:	2100      	movs	r1, #0
  400710:	200d      	movs	r0, #13
  400712:	47a0      	blx	r4
		ili93xx_write_register_word(ILI9325_RGB_DISP_INTERFACE_CTRL2,
  400714:	2100      	movs	r1, #0
  400716:	200f      	movs	r0, #15
  400718:	47a0      	blx	r4
		ili93xx_write_register_word(ILI9325_POWER_CTRL1, 0x0000);
  40071a:	2100      	movs	r1, #0
  40071c:	2010      	movs	r0, #16
  40071e:	47a0      	blx	r4
		ili93xx_write_register_word(ILI9325_POWER_CTRL2, 0x0000);
  400720:	2100      	movs	r1, #0
  400722:	2011      	movs	r0, #17
  400724:	47a0      	blx	r4
		ili93xx_write_register_word(ILI9325_POWER_CTRL3, 0x0000);
  400726:	2100      	movs	r1, #0
  400728:	2012      	movs	r0, #18
  40072a:	47a0      	blx	r4
		ili93xx_write_register_word(ILI9325_POWER_CTRL4, 0x0000);
  40072c:	2100      	movs	r1, #0
  40072e:	2013      	movs	r0, #19
  400730:	47a0      	blx	r4
		ili93xx_delay(200);
  400732:	20c8      	movs	r0, #200	; 0xc8
  400734:	4d8b      	ldr	r5, [pc, #556]	; (400964 <ili93xx_init+0x2d0>)
  400736:	47a8      	blx	r5
		ili93xx_write_register_word(ILI9325_POWER_CTRL1,
  400738:	f241 2190 	movw	r1, #4752	; 0x1290
  40073c:	2010      	movs	r0, #16
  40073e:	47a0      	blx	r4
		ili93xx_write_register_word(ILI9325_POWER_CTRL2,
  400740:	f240 2127 	movw	r1, #551	; 0x227
  400744:	2011      	movs	r0, #17
  400746:	47a0      	blx	r4
		ili93xx_delay(50);
  400748:	2032      	movs	r0, #50	; 0x32
  40074a:	47a8      	blx	r5
		ili93xx_write_register_word(ILI9325_POWER_CTRL3,
  40074c:	211b      	movs	r1, #27
  40074e:	2012      	movs	r0, #18
  400750:	47a0      	blx	r4
		ili93xx_delay(50);
  400752:	2032      	movs	r0, #50	; 0x32
  400754:	47a8      	blx	r5
		ili93xx_write_register_word(ILI9325_POWER_CTRL4,
  400756:	f44f 5188 	mov.w	r1, #4352	; 0x1100
  40075a:	2013      	movs	r0, #19
  40075c:	47a0      	blx	r4
		ili93xx_write_register_word(ILI9325_POWER_CTRL7,
  40075e:	2119      	movs	r1, #25
  400760:	2029      	movs	r0, #41	; 0x29
  400762:	47a0      	blx	r4
		ili93xx_write_register_word(ILI9325_FRAME_RATE_AND_COLOR_CTRL,
  400764:	210d      	movs	r1, #13
  400766:	202b      	movs	r0, #43	; 0x2b
  400768:	47a0      	blx	r4
		ili93xx_delay(50);
  40076a:	2032      	movs	r0, #50	; 0x32
  40076c:	47a8      	blx	r5
		ili93xx_write_register_word(ILI9325_GAMMA_CTL1, 0x0000);
  40076e:	2100      	movs	r1, #0
  400770:	2030      	movs	r0, #48	; 0x30
  400772:	47a0      	blx	r4
		ili93xx_write_register_word(ILI9325_GAMMA_CTL2,
  400774:	f44f 7101 	mov.w	r1, #516	; 0x204
  400778:	2031      	movs	r0, #49	; 0x31
  40077a:	47a0      	blx	r4
		ili93xx_write_register_word(ILI9325_GAMMA_CTL3,
  40077c:	f44f 7100 	mov.w	r1, #512	; 0x200
  400780:	2032      	movs	r0, #50	; 0x32
  400782:	47a0      	blx	r4
		ili93xx_write_register_word(ILI9325_GAMMA_CTL4,
  400784:	2107      	movs	r1, #7
  400786:	2035      	movs	r0, #53	; 0x35
  400788:	47a0      	blx	r4
		ili93xx_write_register_word(ILI9325_GAMMA_CTL5,
  40078a:	f241 4104 	movw	r1, #5124	; 0x1404
  40078e:	2036      	movs	r0, #54	; 0x36
  400790:	47a0      	blx	r4
		ili93xx_write_register_word(ILI9325_GAMMA_CTL6,
  400792:	f240 7105 	movw	r1, #1797	; 0x705
  400796:	2037      	movs	r0, #55	; 0x37
  400798:	47a0      	blx	r4
		ili93xx_write_register_word(ILI9325_GAMMA_CTL7,
  40079a:	f240 3105 	movw	r1, #773	; 0x305
  40079e:	2038      	movs	r0, #56	; 0x38
  4007a0:	47a0      	blx	r4
		ili93xx_write_register_word(ILI9325_GAMMA_CTL8,
  4007a2:	f240 7107 	movw	r1, #1799	; 0x707
  4007a6:	2039      	movs	r0, #57	; 0x39
  4007a8:	47a0      	blx	r4
		ili93xx_write_register_word(ILI9325_GAMMA_CTL9,
  4007aa:	f240 7101 	movw	r1, #1793	; 0x701
  4007ae:	203c      	movs	r0, #60	; 0x3c
  4007b0:	47a0      	blx	r4
		ili93xx_write_register_word(ILI9325_GAMMA_CTL10,
  4007b2:	210e      	movs	r1, #14
  4007b4:	203d      	movs	r0, #61	; 0x3d
  4007b6:	47a0      	blx	r4
		ili93xx_write_register_word(ILI9325_ENTRY_MODE,
  4007b8:	f24d 0110 	movw	r1, #53264	; 0xd010
  4007bc:	2003      	movs	r0, #3
  4007be:	47a0      	blx	r4
		ili93xx_write_register_word(ILI9325_DRIVER_OUTPUT_CTRL2,
  4007c0:	f44f 4127 	mov.w	r1, #42752	; 0xa700
  4007c4:	2060      	movs	r0, #96	; 0x60
  4007c6:	47a0      	blx	r4
		ili93xx_write_register_word(ILI9325_BASE_IMG_DISP_CTRL,
  4007c8:	2101      	movs	r1, #1
  4007ca:	2061      	movs	r0, #97	; 0x61
  4007cc:	47a0      	blx	r4
		ili93xx_write_register_word(ILI9325_VERTICAL_SCROLL_CTRL,
  4007ce:	2100      	movs	r1, #0
  4007d0:	206a      	movs	r0, #106	; 0x6a
  4007d2:	47a0      	blx	r4
		ili93xx_write_register_word(ILI9325_PARTIAL_IMG1_DISP_POS,
  4007d4:	2100      	movs	r1, #0
  4007d6:	2080      	movs	r0, #128	; 0x80
  4007d8:	47a0      	blx	r4
		ili93xx_write_register_word(
  4007da:	2100      	movs	r1, #0
  4007dc:	2081      	movs	r0, #129	; 0x81
  4007de:	47a0      	blx	r4
		ili93xx_write_register_word(ILI9325_PARTIAL_IMG1_AREA_END_LINE,
  4007e0:	2100      	movs	r1, #0
  4007e2:	2082      	movs	r0, #130	; 0x82
  4007e4:	47a0      	blx	r4
		ili93xx_write_register_word(ILI9325_PARTIAL_IMG2_DISP_POS,
  4007e6:	2100      	movs	r1, #0
  4007e8:	2083      	movs	r0, #131	; 0x83
  4007ea:	47a0      	blx	r4
		ili93xx_write_register_word(
  4007ec:	2100      	movs	r1, #0
  4007ee:	2084      	movs	r0, #132	; 0x84
  4007f0:	47a0      	blx	r4
		ili93xx_write_register_word(ILI9325_PARTIAL_IMG2_AREA_END_LINE,
  4007f2:	2100      	movs	r1, #0
  4007f4:	2085      	movs	r0, #133	; 0x85
  4007f6:	47a0      	blx	r4
		ili93xx_write_register_word(ILI9325_PANEL_INTERFACE_CTRL1,
  4007f8:	2110      	movs	r1, #16
  4007fa:	2090      	movs	r0, #144	; 0x90
  4007fc:	47a0      	blx	r4
		ili93xx_write_register_word(ILI9325_PANEL_INTERFACE_CTRL2,
  4007fe:	f44f 61c0 	mov.w	r1, #1536	; 0x600
  400802:	2092      	movs	r0, #146	; 0x92
  400804:	47a0      	blx	r4
		ili93xx_write_register_word(ILI9325_PANEL_INTERFACE_CTRL4,
  400806:	f44f 7188 	mov.w	r1, #272	; 0x110
  40080a:	2095      	movs	r0, #149	; 0x95
  40080c:	47a0      	blx	r4
		ili93xx_set_window(0, 0, p_opt->ul_width, p_opt->ul_height);
  40080e:	6873      	ldr	r3, [r6, #4]
  400810:	6832      	ldr	r2, [r6, #0]
  400812:	2100      	movs	r1, #0
  400814:	4608      	mov	r0, r1
  400816:	4c54      	ldr	r4, [pc, #336]	; (400968 <ili93xx_init+0x2d4>)
  400818:	47a0      	blx	r4
		ili93xx_set_foreground_color(p_opt->foreground_color);
  40081a:	68b0      	ldr	r0, [r6, #8]
  40081c:	4b53      	ldr	r3, [pc, #332]	; (40096c <ili93xx_init+0x2d8>)
  40081e:	4798      	blx	r3
		ili93xx_set_cursor_position(0, 0);
  400820:	2100      	movs	r1, #0
  400822:	4608      	mov	r0, r1
  400824:	4b52      	ldr	r3, [pc, #328]	; (400970 <ili93xx_init+0x2dc>)
  400826:	4798      	blx	r3
	return 0;
  400828:	2000      	movs	r0, #0
  40082a:	e74b      	b.n	4006c4 <ili93xx_init+0x30>
		paratable[0] = 0x39;
  40082c:	2339      	movs	r3, #57	; 0x39
  40082e:	f88d 3000 	strb.w	r3, [sp]
		paratable[1] = 0x2C;
  400832:	232c      	movs	r3, #44	; 0x2c
  400834:	f88d 3001 	strb.w	r3, [sp, #1]
		paratable[2] = 0x00;
  400838:	2400      	movs	r4, #0
  40083a:	f88d 4002 	strb.w	r4, [sp, #2]
		paratable[3] = 0x34;
  40083e:	2334      	movs	r3, #52	; 0x34
  400840:	f88d 3003 	strb.w	r3, [sp, #3]
		paratable[4] = 0x02;
  400844:	2702      	movs	r7, #2
  400846:	f88d 7004 	strb.w	r7, [sp, #4]
		ili93xx_write_register(ILI9341_CMD_POWER_CONTROL_A, paratable, 5);
  40084a:	2205      	movs	r2, #5
  40084c:	4669      	mov	r1, sp
  40084e:	20cb      	movs	r0, #203	; 0xcb
  400850:	4d48      	ldr	r5, [pc, #288]	; (400974 <ili93xx_init+0x2e0>)
  400852:	47a8      	blx	r5
		paratable[0] = 0;
  400854:	f88d 4000 	strb.w	r4, [sp]
		paratable[1] = 0xAA;
  400858:	23aa      	movs	r3, #170	; 0xaa
  40085a:	f88d 3001 	strb.w	r3, [sp, #1]
		paratable[2] = 0xB0;
  40085e:	23b0      	movs	r3, #176	; 0xb0
  400860:	f88d 3002 	strb.w	r3, [sp, #2]
		ili93xx_write_register(ILI9341_CMD_POWER_CONTROL_B, paratable, 3);
  400864:	2203      	movs	r2, #3
  400866:	4669      	mov	r1, sp
  400868:	20cf      	movs	r0, #207	; 0xcf
  40086a:	47a8      	blx	r5
		paratable[0] = 0x30;
  40086c:	2330      	movs	r3, #48	; 0x30
  40086e:	f88d 3000 	strb.w	r3, [sp]
		ili93xx_write_register(ILI9341_CMD_PUMP_RATIO_CONTROL,
  400872:	2201      	movs	r2, #1
  400874:	4669      	mov	r1, sp
  400876:	20f7      	movs	r0, #247	; 0xf7
  400878:	47a8      	blx	r5
		paratable[0] = 0x25;
  40087a:	2325      	movs	r3, #37	; 0x25
  40087c:	f88d 3000 	strb.w	r3, [sp]
		ili93xx_write_register(ILI9341_CMD_POWER_CONTROL_1, paratable, 1);
  400880:	2201      	movs	r2, #1
  400882:	4669      	mov	r1, sp
  400884:	20c0      	movs	r0, #192	; 0xc0
  400886:	47a8      	blx	r5
		paratable[0] = 0x11;
  400888:	f04f 0911 	mov.w	r9, #17
  40088c:	f88d 9000 	strb.w	r9, [sp]
		ili93xx_write_register(ILI9341_CMD_POWER_CONTROL_2, paratable, 1);
  400890:	2201      	movs	r2, #1
  400892:	4669      	mov	r1, sp
  400894:	20c1      	movs	r0, #193	; 0xc1
  400896:	47a8      	blx	r5
		paratable[0] = 0x5C;
  400898:	235c      	movs	r3, #92	; 0x5c
  40089a:	f88d 3000 	strb.w	r3, [sp]
		paratable[1] = 0x4C;
  40089e:	234c      	movs	r3, #76	; 0x4c
  4008a0:	f88d 3001 	strb.w	r3, [sp, #1]
		ili93xx_write_register(ILI9341_CMD_VCOM_CONTROL_1, paratable, 2);
  4008a4:	463a      	mov	r2, r7
  4008a6:	4669      	mov	r1, sp
  4008a8:	20c5      	movs	r0, #197	; 0xc5
  4008aa:	47a8      	blx	r5
		paratable[0] = 0x94;
  4008ac:	2394      	movs	r3, #148	; 0x94
  4008ae:	f88d 3000 	strb.w	r3, [sp]
		ili93xx_write_register(ILI9341_CMD_VCOM_CONTROL_2, paratable, 1);
  4008b2:	2201      	movs	r2, #1
  4008b4:	4669      	mov	r1, sp
  4008b6:	20c7      	movs	r0, #199	; 0xc7
  4008b8:	47a8      	blx	r5
		paratable[0] = 0x85;
  4008ba:	2385      	movs	r3, #133	; 0x85
  4008bc:	f88d 3000 	strb.w	r3, [sp]
		paratable[1] = 0x01;
  4008c0:	f04f 0801 	mov.w	r8, #1
  4008c4:	f88d 8001 	strb.w	r8, [sp, #1]
		paratable[2] = 0x78;
  4008c8:	2378      	movs	r3, #120	; 0x78
  4008ca:	f88d 3002 	strb.w	r3, [sp, #2]
		ili93xx_write_register(ILI9341_CMD_DRIVER_TIMING_CTL_A, paratable, 3);
  4008ce:	2203      	movs	r2, #3
  4008d0:	4669      	mov	r1, sp
  4008d2:	20e8      	movs	r0, #232	; 0xe8
  4008d4:	47a8      	blx	r5
		paratable[0] = 0x00;
  4008d6:	f88d 4000 	strb.w	r4, [sp]
		paratable[1] = 0x00;
  4008da:	f88d 4001 	strb.w	r4, [sp, #1]
		ili93xx_write_register(ILI9341_CMD_DRIVER_TIMING_CTL_B, paratable, 2);
  4008de:	463a      	mov	r2, r7
  4008e0:	4669      	mov	r1, sp
  4008e2:	20ea      	movs	r0, #234	; 0xea
  4008e4:	47a8      	blx	r5
		paratable[0] = ILI9341_CMD_MEMORY_ACCESS_CONTROL_MX |
  4008e6:	2348      	movs	r3, #72	; 0x48
  4008e8:	f88d 3000 	strb.w	r3, [sp]
		ili93xx_write_register(ILI9341_CMD_MEMORY_ACCESS_CONTROL,
  4008ec:	4642      	mov	r2, r8
  4008ee:	4669      	mov	r1, sp
  4008f0:	2036      	movs	r0, #54	; 0x36
  4008f2:	47a8      	blx	r5
		paratable[0] = 0x06;
  4008f4:	2306      	movs	r3, #6
  4008f6:	f88d 3000 	strb.w	r3, [sp]
		ili93xx_write_register(ILI9341_CMD_PIXEL_FORMAT_SET, paratable, 1);
  4008fa:	4642      	mov	r2, r8
  4008fc:	4669      	mov	r1, sp
  4008fe:	203a      	movs	r0, #58	; 0x3a
  400900:	47a8      	blx	r5
		paratable[0] = 0x02;
  400902:	f88d 7000 	strb.w	r7, [sp]
		paratable[1] = 0x82;
  400906:	2382      	movs	r3, #130	; 0x82
  400908:	f88d 3001 	strb.w	r3, [sp, #1]
		paratable[2] = 0x27;
  40090c:	2327      	movs	r3, #39	; 0x27
  40090e:	f88d 3002 	strb.w	r3, [sp, #2]
		paratable[3] = 0x00;
  400912:	f88d 4003 	strb.w	r4, [sp, #3]
		ili93xx_write_register(ILI9341_CMD_DISPLAY_FUNCTION_CTL, paratable, 4);
  400916:	2204      	movs	r2, #4
  400918:	4669      	mov	r1, sp
  40091a:	20b6      	movs	r0, #182	; 0xb6
  40091c:	47a8      	blx	r5
		ili93xx_set_window(0, 0, p_opt->ul_width, p_opt->ul_height);
  40091e:	6873      	ldr	r3, [r6, #4]
  400920:	6832      	ldr	r2, [r6, #0]
  400922:	4621      	mov	r1, r4
  400924:	4620      	mov	r0, r4
  400926:	4f10      	ldr	r7, [pc, #64]	; (400968 <ili93xx_init+0x2d4>)
  400928:	47b8      	blx	r7
		ili93xx_set_foreground_color(p_opt->foreground_color);
  40092a:	68b0      	ldr	r0, [r6, #8]
  40092c:	4b0f      	ldr	r3, [pc, #60]	; (40096c <ili93xx_init+0x2d8>)
  40092e:	4798      	blx	r3
		ili93xx_write_register(ILI9341_CMD_SLEEP_OUT, paratable, 0);
  400930:	4622      	mov	r2, r4
  400932:	4669      	mov	r1, sp
  400934:	4648      	mov	r0, r9
  400936:	47a8      	blx	r5
		ili93xx_delay(10);
  400938:	200a      	movs	r0, #10
  40093a:	4b0a      	ldr	r3, [pc, #40]	; (400964 <ili93xx_init+0x2d0>)
  40093c:	4798      	blx	r3
		ili93xx_write_register(ILI9341_CMD_DISPLAY_ON, paratable, 0);
  40093e:	4622      	mov	r2, r4
  400940:	4669      	mov	r1, sp
  400942:	2029      	movs	r0, #41	; 0x29
  400944:	47a8      	blx	r5
	return 0;
  400946:	4620      	mov	r0, r4
  400948:	e6bc      	b.n	4006c4 <ili93xx_init+0x30>
		return 1;
  40094a:	2001      	movs	r0, #1
  40094c:	e6ba      	b.n	4006c4 <ili93xx_init+0x30>
  40094e:	bf00      	nop
  400950:	004004f9 	.word	0x004004f9
  400954:	2000000c 	.word	0x2000000c
  400958:	20000010 	.word	0x20000010
  40095c:	20000a08 	.word	0x20000a08
  400960:	0040041d 	.word	0x0040041d
  400964:	00400461 	.word	0x00400461
  400968:	004005c5 	.word	0x004005c5
  40096c:	004005ad 	.word	0x004005ad
  400970:	0040066d 	.word	0x0040066d
  400974:	00400435 	.word	0x00400435

00400978 <ili93xx_draw_pixel>:
 *
 * \return 0 if succeeds, otherwise fails.
 */
uint32_t ili93xx_draw_pixel(uint32_t ul_x, uint32_t ul_y)
{
	if ((ul_x >= g_ul_lcd_x_length) || (ul_y >= g_ul_lcd_y_length)) {
  400978:	4b16      	ldr	r3, [pc, #88]	; (4009d4 <ili93xx_draw_pixel+0x5c>)
  40097a:	681b      	ldr	r3, [r3, #0]
  40097c:	4283      	cmp	r3, r0
  40097e:	d924      	bls.n	4009ca <ili93xx_draw_pixel+0x52>
  400980:	4b15      	ldr	r3, [pc, #84]	; (4009d8 <ili93xx_draw_pixel+0x60>)
  400982:	681b      	ldr	r3, [r3, #0]
  400984:	428b      	cmp	r3, r1
  400986:	d922      	bls.n	4009ce <ili93xx_draw_pixel+0x56>
{
  400988:	b510      	push	{r4, lr}
		return 1;
	}

	if (g_uc_device_type == DEVICE_TYPE_ILI9325) {
  40098a:	4b14      	ldr	r3, [pc, #80]	; (4009dc <ili93xx_draw_pixel+0x64>)
  40098c:	781b      	ldrb	r3, [r3, #0]
  40098e:	2b01      	cmp	r3, #1
  400990:	d003      	beq.n	40099a <ili93xx_draw_pixel+0x22>
		/** Set cursor */
		ili93xx_set_cursor_position(ul_x, ul_y);
		/** Prepare to write in GRAM */
		ili93xx_write_ram_prepare();
		ili93xx_write_ram(*g_ul_pixel_cache);
	} else if (g_uc_device_type == DEVICE_TYPE_ILI9341) {
  400992:	2b02      	cmp	r3, #2
  400994:	d00d      	beq.n	4009b2 <ili93xx_draw_pixel+0x3a>
		/** Prepare to write in GRAM */
		ili93xx_write_ram_prepare();
		ili93xx_write_ram(*g_ul_pixel_cache);
	}

	return 0;
  400996:	2000      	movs	r0, #0
}
  400998:	bd10      	pop	{r4, pc}
		ili93xx_set_cursor_position(ul_x, ul_y);
  40099a:	b289      	uxth	r1, r1
  40099c:	b280      	uxth	r0, r0
  40099e:	4b10      	ldr	r3, [pc, #64]	; (4009e0 <ili93xx_draw_pixel+0x68>)
  4009a0:	4798      	blx	r3
		ili93xx_write_ram_prepare();
  4009a2:	4b10      	ldr	r3, [pc, #64]	; (4009e4 <ili93xx_draw_pixel+0x6c>)
  4009a4:	4798      	blx	r3
		ili93xx_write_ram(*g_ul_pixel_cache);
  4009a6:	4b10      	ldr	r3, [pc, #64]	; (4009e8 <ili93xx_draw_pixel+0x70>)
  4009a8:	6818      	ldr	r0, [r3, #0]
  4009aa:	4b10      	ldr	r3, [pc, #64]	; (4009ec <ili93xx_draw_pixel+0x74>)
  4009ac:	4798      	blx	r3
	return 0;
  4009ae:	2000      	movs	r0, #0
  4009b0:	bd10      	pop	{r4, pc}
		ili93xx_set_window(ul_x, ul_y, 0, 0);
  4009b2:	2300      	movs	r3, #0
  4009b4:	461a      	mov	r2, r3
  4009b6:	4c0e      	ldr	r4, [pc, #56]	; (4009f0 <ili93xx_draw_pixel+0x78>)
  4009b8:	47a0      	blx	r4
		ili93xx_write_ram_prepare();
  4009ba:	4b0a      	ldr	r3, [pc, #40]	; (4009e4 <ili93xx_draw_pixel+0x6c>)
  4009bc:	4798      	blx	r3
		ili93xx_write_ram(*g_ul_pixel_cache);
  4009be:	4b0a      	ldr	r3, [pc, #40]	; (4009e8 <ili93xx_draw_pixel+0x70>)
  4009c0:	6818      	ldr	r0, [r3, #0]
  4009c2:	4b0a      	ldr	r3, [pc, #40]	; (4009ec <ili93xx_draw_pixel+0x74>)
  4009c4:	4798      	blx	r3
	return 0;
  4009c6:	2000      	movs	r0, #0
  4009c8:	bd10      	pop	{r4, pc}
		return 1;
  4009ca:	2001      	movs	r0, #1
  4009cc:	4770      	bx	lr
  4009ce:	2001      	movs	r0, #1
  4009d0:	4770      	bx	lr
  4009d2:	bf00      	nop
  4009d4:	2000000c 	.word	0x2000000c
  4009d8:	20000010 	.word	0x20000010
  4009dc:	20000a08 	.word	0x20000a08
  4009e0:	0040066d 	.word	0x0040066d
  4009e4:	00400371 	.word	0x00400371
  4009e8:	20000a0c 	.word	0x20000a0c
  4009ec:	004003a5 	.word	0x004003a5
  4009f0:	004005c5 	.word	0x004005c5

004009f4 <ili93xx_draw_filled_rectangle>:
 * \param ul_x2 X coordinate of lower-right corner on LCD.
 * \param ul_y2 Y coordinate of lower-right corner on LCD.
 */
void ili93xx_draw_filled_rectangle(uint32_t ul_x1, uint32_t ul_y1,
		uint32_t ul_x2, uint32_t ul_y2)
{
  4009f4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  4009f8:	b084      	sub	sp, #16
  4009fa:	9003      	str	r0, [sp, #12]
  4009fc:	9102      	str	r1, [sp, #8]
  4009fe:	9201      	str	r2, [sp, #4]
  400a00:	aa04      	add	r2, sp, #16
  400a02:	f842 3d10 	str.w	r3, [r2, #-16]!
	uint32_t size, blocks;

	/** Swap coordinates if necessary */
	ili93xx_check_box_coordinates(&ul_x1, &ul_y1, &ul_x2, &ul_y2);
  400a06:	4613      	mov	r3, r2
  400a08:	aa01      	add	r2, sp, #4
  400a0a:	a902      	add	r1, sp, #8
  400a0c:	a803      	add	r0, sp, #12
  400a0e:	4c22      	ldr	r4, [pc, #136]	; (400a98 <ili93xx_draw_filled_rectangle+0xa4>)
  400a10:	47a0      	blx	r4

	/** Determine the refresh window area */
	ili93xx_set_window(ul_x1, ul_y1, (ul_x2 - ul_x1) + 1,
  400a12:	9803      	ldr	r0, [sp, #12]
  400a14:	9902      	ldr	r1, [sp, #8]
  400a16:	9b00      	ldr	r3, [sp, #0]
  400a18:	3301      	adds	r3, #1
  400a1a:	9a01      	ldr	r2, [sp, #4]
  400a1c:	3201      	adds	r2, #1
  400a1e:	1a5b      	subs	r3, r3, r1
  400a20:	1a12      	subs	r2, r2, r0
  400a22:	4c1e      	ldr	r4, [pc, #120]	; (400a9c <ili93xx_draw_filled_rectangle+0xa8>)
  400a24:	47a0      	blx	r4
			(ul_y2 - ul_y1) + 1);

	/** Set cursor */
	ili93xx_set_cursor_position(ul_x1, ul_y1);
  400a26:	f8bd 1008 	ldrh.w	r1, [sp, #8]
  400a2a:	f8bd 000c 	ldrh.w	r0, [sp, #12]
  400a2e:	4b1c      	ldr	r3, [pc, #112]	; (400aa0 <ili93xx_draw_filled_rectangle+0xac>)
  400a30:	4798      	blx	r3

	/** Prepare to write in Graphic RAM */
	ili93xx_write_ram_prepare();
  400a32:	4b1c      	ldr	r3, [pc, #112]	; (400aa4 <ili93xx_draw_filled_rectangle+0xb0>)
  400a34:	4798      	blx	r3

	size = (ul_x2 - ul_x1 + 1) * (ul_y2 - ul_y1 + 1);
  400a36:	9a03      	ldr	r2, [sp, #12]
  400a38:	9b01      	ldr	r3, [sp, #4]
  400a3a:	1a9a      	subs	r2, r3, r2
  400a3c:	9b00      	ldr	r3, [sp, #0]
  400a3e:	f103 0801 	add.w	r8, r3, #1
  400a42:	9b02      	ldr	r3, [sp, #8]
  400a44:	eba8 0803 	sub.w	r8, r8, r3
  400a48:	fb02 8808 	mla	r8, r2, r8, r8

	/** Send pixels blocks => one SPI IT / block */
	blocks = size / LCD_DATA_CACHE_SIZE;
  400a4c:	4b16      	ldr	r3, [pc, #88]	; (400aa8 <ili93xx_draw_filled_rectangle+0xb4>)
  400a4e:	fba3 2308 	umull	r2, r3, r3, r8
  400a52:	09db      	lsrs	r3, r3, #7
	while (blocks--) {
  400a54:	b153      	cbz	r3, 400a6c <ili93xx_draw_filled_rectangle+0x78>
  400a56:	1e5c      	subs	r4, r3, #1
		ili93xx_write_ram_buffer(g_ul_pixel_cache,
  400a58:	4f14      	ldr	r7, [pc, #80]	; (400aac <ili93xx_draw_filled_rectangle+0xb8>)
  400a5a:	26f0      	movs	r6, #240	; 0xf0
  400a5c:	4d14      	ldr	r5, [pc, #80]	; (400ab0 <ili93xx_draw_filled_rectangle+0xbc>)
  400a5e:	4631      	mov	r1, r6
  400a60:	4638      	mov	r0, r7
  400a62:	47a8      	blx	r5
	while (blocks--) {
  400a64:	3c01      	subs	r4, #1
  400a66:	f1b4 3fff 	cmp.w	r4, #4294967295
  400a6a:	d1f8      	bne.n	400a5e <ili93xx_draw_filled_rectangle+0x6a>
								LCD_DATA_CACHE_SIZE);
	}

	/** Send remaining pixels */
	ili93xx_write_ram_buffer(g_ul_pixel_cache,
  400a6c:	490e      	ldr	r1, [pc, #56]	; (400aa8 <ili93xx_draw_filled_rectangle+0xb4>)
  400a6e:	fba1 3108 	umull	r3, r1, r1, r8
  400a72:	09c9      	lsrs	r1, r1, #7
  400a74:	ebc1 1101 	rsb	r1, r1, r1, lsl #4
  400a78:	eba8 1101 	sub.w	r1, r8, r1, lsl #4
  400a7c:	480b      	ldr	r0, [pc, #44]	; (400aac <ili93xx_draw_filled_rectangle+0xb8>)
  400a7e:	4b0c      	ldr	r3, [pc, #48]	; (400ab0 <ili93xx_draw_filled_rectangle+0xbc>)
  400a80:	4798      	blx	r3
					size % LCD_DATA_CACHE_SIZE);

	/** Reset the refresh window area */
	ili93xx_set_window(0, 0, g_ul_lcd_x_length, g_ul_lcd_y_length);
  400a82:	4b0c      	ldr	r3, [pc, #48]	; (400ab4 <ili93xx_draw_filled_rectangle+0xc0>)
  400a84:	681b      	ldr	r3, [r3, #0]
  400a86:	4a0c      	ldr	r2, [pc, #48]	; (400ab8 <ili93xx_draw_filled_rectangle+0xc4>)
  400a88:	6812      	ldr	r2, [r2, #0]
  400a8a:	2100      	movs	r1, #0
  400a8c:	4608      	mov	r0, r1
  400a8e:	4c03      	ldr	r4, [pc, #12]	; (400a9c <ili93xx_draw_filled_rectangle+0xa8>)
  400a90:	47a0      	blx	r4
}
  400a92:	b004      	add	sp, #16
  400a94:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  400a98:	00400499 	.word	0x00400499
  400a9c:	004005c5 	.word	0x004005c5
  400aa0:	0040066d 	.word	0x0040066d
  400aa4:	00400371 	.word	0x00400371
  400aa8:	88888889 	.word	0x88888889
  400aac:	20000a0c 	.word	0x20000a0c
  400ab0:	004003bd 	.word	0x004003bd
  400ab4:	20000010 	.word	0x20000010
  400ab8:	2000000c 	.word	0x2000000c

00400abc <ili93xx_draw_string>:
 * \param ul_x X coordinate of string top-left corner.
 * \param ul_y Y coordinate of string top-left corner.
 * \param p_str String to display.
 */
void ili93xx_draw_string(uint32_t ul_x, uint32_t ul_y, const uint8_t *p_str)
{
  400abc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  400ac0:	b085      	sub	sp, #20
  400ac2:	9003      	str	r0, [sp, #12]
  400ac4:	9202      	str	r2, [sp, #8]
	uint32_t xorg = ul_x;

	while (*p_str != 0) {
  400ac6:	7813      	ldrb	r3, [r2, #0]
  400ac8:	2b00      	cmp	r3, #0
  400aca:	d048      	beq.n	400b5e <ili93xx_draw_string+0xa2>
  400acc:	468b      	mov	fp, r1
  400ace:	9001      	str	r0, [sp, #4]
				ili93xx_draw_pixel(ul_x + col, ul_y + row);
  400ad0:	f8df 8094 	ldr.w	r8, [pc, #148]	; 400b68 <ili93xx_draw_string+0xac>
  400ad4:	e033      	b.n	400b3e <ili93xx_draw_string+0x82>
		/** If newline, jump to the next line (font height + 2) */
		if (*p_str == '\n') {
			ul_y += gfont.height + 2;
  400ad6:	f10b 0b10 	add.w	fp, fp, #16
			ul_x = xorg;
  400ada:	9b03      	ldr	r3, [sp, #12]
  400adc:	9301      	str	r3, [sp, #4]
  400ade:	e029      	b.n	400b34 <ili93xx_draw_string+0x78>
  400ae0:	3c01      	subs	r4, #1
		for (row = 0; row < 8; row++) {
  400ae2:	f1b4 3fff 	cmp.w	r4, #4294967295
  400ae6:	d009      	beq.n	400afc <ili93xx_draw_string+0x40>
			if ((p_uc_charset10x14[offset0] >> (7 - row)) & 0x1) {
  400ae8:	782b      	ldrb	r3, [r5, #0]
  400aea:	4123      	asrs	r3, r4
  400aec:	f013 0f01 	tst.w	r3, #1
  400af0:	d0f6      	beq.n	400ae0 <ili93xx_draw_string+0x24>
				ili93xx_draw_pixel(ul_x + col, ul_y + row);
  400af2:	ebaa 0104 	sub.w	r1, sl, r4
  400af6:	4630      	mov	r0, r6
  400af8:	47c0      	blx	r8
  400afa:	e7f1      	b.n	400ae0 <ili93xx_draw_string+0x24>
		for (row = 0; row < 8; row++) {
  400afc:	2407      	movs	r4, #7
				ili93xx_draw_pixel(ul_x + col, ul_y + row + 8);
  400afe:	f10b 090f 	add.w	r9, fp, #15
  400b02:	e002      	b.n	400b0a <ili93xx_draw_string+0x4e>
  400b04:	3c01      	subs	r4, #1
		for (row = 0; row < 6; row++) {
  400b06:	2c01      	cmp	r4, #1
  400b08:	d009      	beq.n	400b1e <ili93xx_draw_string+0x62>
			if ((p_uc_charset10x14[offset1] >> (7 - row)) & 0x1) {
  400b0a:	787b      	ldrb	r3, [r7, #1]
  400b0c:	4123      	asrs	r3, r4
  400b0e:	f013 0f01 	tst.w	r3, #1
  400b12:	d0f7      	beq.n	400b04 <ili93xx_draw_string+0x48>
				ili93xx_draw_pixel(ul_x + col, ul_y + row + 8);
  400b14:	eba9 0104 	sub.w	r1, r9, r4
  400b18:	4630      	mov	r0, r6
  400b1a:	47c0      	blx	r8
  400b1c:	e7f2      	b.n	400b04 <ili93xx_draw_string+0x48>
  400b1e:	3502      	adds	r5, #2
  400b20:	3601      	adds	r6, #1
	for (col = 0; col < 10; col++) {
  400b22:	9b00      	ldr	r3, [sp, #0]
  400b24:	42b3      	cmp	r3, r6
  400b26:	d002      	beq.n	400b2e <ili93xx_draw_string+0x72>
	offset = ((uint32_t)uc_c - 0x20) * 20;
  400b28:	2407      	movs	r4, #7
  400b2a:	462f      	mov	r7, r5
  400b2c:	e7dc      	b.n	400ae8 <ili93xx_draw_string+0x2c>
			/**
			 * Draw the character and place cursor right after (font
			 * width + 2)
			 */
			ili93xx_draw_char(ul_x, ul_y, *p_str);
			ul_x += gfont.width + 2;
  400b2e:	9b01      	ldr	r3, [sp, #4]
  400b30:	330c      	adds	r3, #12
  400b32:	9301      	str	r3, [sp, #4]
	while (*p_str != 0) {
  400b34:	9a02      	ldr	r2, [sp, #8]
  400b36:	f812 3f01 	ldrb.w	r3, [r2, #1]!
  400b3a:	9202      	str	r2, [sp, #8]
  400b3c:	b17b      	cbz	r3, 400b5e <ili93xx_draw_string+0xa2>
		if (*p_str == '\n') {
  400b3e:	2b0a      	cmp	r3, #10
  400b40:	d0c9      	beq.n	400ad6 <ili93xx_draw_string+0x1a>
	offset = ((uint32_t)uc_c - 0x20) * 20;
  400b42:	eb03 0383 	add.w	r3, r3, r3, lsl #2
  400b46:	4d07      	ldr	r5, [pc, #28]	; (400b64 <ili93xx_draw_string+0xa8>)
  400b48:	eb05 0383 	add.w	r3, r5, r3, lsl #2
  400b4c:	f5a3 7520 	sub.w	r5, r3, #640	; 0x280
  400b50:	9e01      	ldr	r6, [sp, #4]
  400b52:	4633      	mov	r3, r6
  400b54:	330a      	adds	r3, #10
  400b56:	9300      	str	r3, [sp, #0]
				ili93xx_draw_pixel(ul_x + col, ul_y + row);
  400b58:	f10b 0a07 	add.w	sl, fp, #7
  400b5c:	e7e4      	b.n	400b28 <ili93xx_draw_string+0x6c>
		}

		p_str++;
	}
}
  400b5e:	b005      	add	sp, #20
  400b60:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  400b64:	00406f14 	.word	0x00406f14
  400b68:	00400979 	.word	0x00400979

00400b6c <smc_set_setup_timing>:
 * \param ul_setup_timing Setup timing for NWE, NCS, NRD.
 */
void smc_set_setup_timing(Smc *p_smc, uint32_t ul_cs,
		uint32_t ul_setup_timing)
{
	p_smc->SMC_CS_NUMBER[ul_cs].SMC_SETUP = ul_setup_timing;
  400b6c:	0109      	lsls	r1, r1, #4
  400b6e:	5042      	str	r2, [r0, r1]
  400b70:	4770      	bx	lr

00400b72 <smc_set_pulse_timing>:
 * \param ul_pulse_timing Pulse timing for NWE,NCS,NRD.
 */
void smc_set_pulse_timing(Smc *p_smc, uint32_t ul_cs,
		uint32_t ul_pulse_timing)
{
	p_smc->SMC_CS_NUMBER[ul_cs].SMC_PULSE = ul_pulse_timing;
  400b72:	eb00 1101 	add.w	r1, r0, r1, lsl #4
  400b76:	604a      	str	r2, [r1, #4]
  400b78:	4770      	bx	lr

00400b7a <smc_set_cycle_timing>:
 * \param ul_cycle_timing Cycle timing for NWE and NRD.
 */
void smc_set_cycle_timing(Smc *p_smc, uint32_t ul_cs,
		uint32_t ul_cycle_timing)
{
	p_smc->SMC_CS_NUMBER[ul_cs].SMC_CYCLE = ul_cycle_timing;
  400b7a:	eb00 1101 	add.w	r1, r0, r1, lsl #4
  400b7e:	608a      	str	r2, [r1, #8]
  400b80:	4770      	bx	lr

00400b82 <smc_set_mode>:
 * \param ul_cs Chip select number to be set.
 * \param ul_mode SMC mode.
 */
void smc_set_mode(Smc *p_smc, uint32_t ul_cs, uint32_t ul_mode)
{
	p_smc->SMC_CS_NUMBER[ul_cs].SMC_MODE = ul_mode;
  400b82:	eb00 1101 	add.w	r1, r0, r1, lsl #4
  400b86:	60ca      	str	r2, [r1, #12]
  400b88:	4770      	bx	lr

00400b8a <pio_set>:
 * \param p_pio Pointer to a PIO instance.
 * \param ul_mask Bitmask of one or more pin(s) to configure.
 */
void pio_set(Pio *p_pio, const uint32_t ul_mask)
{
	p_pio->PIO_SODR = ul_mask;
  400b8a:	6301      	str	r1, [r0, #48]	; 0x30
  400b8c:	4770      	bx	lr

00400b8e <pio_clear>:
 * \param p_pio Pointer to a PIO instance.
 * \param ul_mask Bitmask of one or more pin(s) to configure.
 */
void pio_clear(Pio *p_pio, const uint32_t ul_mask)
{
	p_pio->PIO_CODR = ul_mask;
  400b8e:	6341      	str	r1, [r0, #52]	; 0x34
  400b90:	4770      	bx	lr

00400b92 <pio_get>:
uint32_t pio_get(Pio *p_pio, const pio_type_t ul_type,
		const uint32_t ul_mask)
{
	uint32_t ul_reg;

	if ((ul_type == PIO_OUTPUT_0) || (ul_type == PIO_OUTPUT_1)) {
  400b92:	f021 6100 	bic.w	r1, r1, #134217728	; 0x8000000
  400b96:	f1b1 5f40 	cmp.w	r1, #805306368	; 0x30000000
		ul_reg = p_pio->PIO_ODSR;
  400b9a:	bf0c      	ite	eq
  400b9c:	6b83      	ldreq	r3, [r0, #56]	; 0x38
	} else {
		ul_reg = p_pio->PIO_PDSR;
  400b9e:	6bc3      	ldrne	r3, [r0, #60]	; 0x3c
	}

	if ((ul_reg & ul_mask) == 0) {
  400ba0:	4213      	tst	r3, r2
		return 0;
	} else {
		return 1;
	}
}
  400ba2:	bf14      	ite	ne
  400ba4:	2001      	movne	r0, #1
  400ba6:	2000      	moveq	r0, #0
  400ba8:	4770      	bx	lr

00400baa <pio_set_peripheral>:
		const uint32_t ul_mask)
{
	uint32_t ul_sr;

	/* Disable interrupts on the pin(s) */
	p_pio->PIO_IDR = ul_mask;
  400baa:	6442      	str	r2, [r0, #68]	; 0x44

#if (SAM3S || SAM3N || SAM4S || SAM4E || SAM4N || SAM4C || SAMG || SAM4CP || SAM4CM || SAMV71 || SAMV70 || SAME70 || SAMS70)
	switch (ul_type) {
  400bac:	f1b1 5fc0 	cmp.w	r1, #402653184	; 0x18000000
  400bb0:	d039      	beq.n	400c26 <pio_set_peripheral+0x7c>
  400bb2:	d813      	bhi.n	400bdc <pio_set_peripheral+0x32>
  400bb4:	f1b1 6f00 	cmp.w	r1, #134217728	; 0x8000000
  400bb8:	d025      	beq.n	400c06 <pio_set_peripheral+0x5c>
  400bba:	f1b1 5f80 	cmp.w	r1, #268435456	; 0x10000000
  400bbe:	d10a      	bne.n	400bd6 <pio_set_peripheral+0x2c>

		ul_sr = p_pio->PIO_ABCDSR[1];
		p_pio->PIO_ABCDSR[1] &= (~ul_mask & ul_sr);
		break;
	case PIO_PERIPH_B:
		ul_sr = p_pio->PIO_ABCDSR[0];
  400bc0:	6f03      	ldr	r3, [r0, #112]	; 0x70
		p_pio->PIO_ABCDSR[0] = (ul_mask | ul_sr);
  400bc2:	4313      	orrs	r3, r2
  400bc4:	6703      	str	r3, [r0, #112]	; 0x70

		ul_sr = p_pio->PIO_ABCDSR[1];
  400bc6:	6f43      	ldr	r3, [r0, #116]	; 0x74
		p_pio->PIO_ABCDSR[1] &= (~ul_mask & ul_sr);
  400bc8:	6f41      	ldr	r1, [r0, #116]	; 0x74
  400bca:	400b      	ands	r3, r1
  400bcc:	ea23 0302 	bic.w	r3, r3, r2
  400bd0:	6743      	str	r3, [r0, #116]	; 0x74
#else
#error "Unsupported device"
#endif

	/* Remove the pins from under the control of PIO */
	p_pio->PIO_PDR = ul_mask;
  400bd2:	6042      	str	r2, [r0, #4]
  400bd4:	4770      	bx	lr
	switch (ul_type) {
  400bd6:	2900      	cmp	r1, #0
  400bd8:	d1fb      	bne.n	400bd2 <pio_set_peripheral+0x28>
  400bda:	4770      	bx	lr
  400bdc:	f1b1 5f20 	cmp.w	r1, #671088640	; 0x28000000
  400be0:	d020      	beq.n	400c24 <pio_set_peripheral+0x7a>
  400be2:	d809      	bhi.n	400bf8 <pio_set_peripheral+0x4e>
  400be4:	f1b1 5f00 	cmp.w	r1, #536870912	; 0x20000000
  400be8:	d1f3      	bne.n	400bd2 <pio_set_peripheral+0x28>
		ul_sr = p_pio->PIO_ABCDSR[0];
  400bea:	6f03      	ldr	r3, [r0, #112]	; 0x70
		p_pio->PIO_ABCDSR[0] = (ul_mask | ul_sr);
  400bec:	4313      	orrs	r3, r2
  400bee:	6703      	str	r3, [r0, #112]	; 0x70
		ul_sr = p_pio->PIO_ABCDSR[1];
  400bf0:	6f43      	ldr	r3, [r0, #116]	; 0x74
		p_pio->PIO_ABCDSR[1] = (ul_mask | ul_sr);
  400bf2:	4313      	orrs	r3, r2
  400bf4:	6743      	str	r3, [r0, #116]	; 0x74
		break;
  400bf6:	e7ec      	b.n	400bd2 <pio_set_peripheral+0x28>
	switch (ul_type) {
  400bf8:	f1b1 5f40 	cmp.w	r1, #805306368	; 0x30000000
  400bfc:	d012      	beq.n	400c24 <pio_set_peripheral+0x7a>
  400bfe:	f1b1 5f60 	cmp.w	r1, #939524096	; 0x38000000
  400c02:	d00f      	beq.n	400c24 <pio_set_peripheral+0x7a>
  400c04:	e7e5      	b.n	400bd2 <pio_set_peripheral+0x28>
{
  400c06:	b410      	push	{r4}
		ul_sr = p_pio->PIO_ABCDSR[0];
  400c08:	6f01      	ldr	r1, [r0, #112]	; 0x70
		p_pio->PIO_ABCDSR[0] &= (~ul_mask & ul_sr);
  400c0a:	6f04      	ldr	r4, [r0, #112]	; 0x70
  400c0c:	43d3      	mvns	r3, r2
  400c0e:	4021      	ands	r1, r4
  400c10:	461c      	mov	r4, r3
  400c12:	4019      	ands	r1, r3
  400c14:	6701      	str	r1, [r0, #112]	; 0x70
		ul_sr = p_pio->PIO_ABCDSR[1];
  400c16:	6f43      	ldr	r3, [r0, #116]	; 0x74
		p_pio->PIO_ABCDSR[1] &= (~ul_mask & ul_sr);
  400c18:	6f41      	ldr	r1, [r0, #116]	; 0x74
  400c1a:	400b      	ands	r3, r1
  400c1c:	4023      	ands	r3, r4
  400c1e:	6743      	str	r3, [r0, #116]	; 0x74
	p_pio->PIO_PDR = ul_mask;
  400c20:	6042      	str	r2, [r0, #4]
}
  400c22:	bc10      	pop	{r4}
  400c24:	4770      	bx	lr
		ul_sr = p_pio->PIO_ABCDSR[0];
  400c26:	6f03      	ldr	r3, [r0, #112]	; 0x70
		p_pio->PIO_ABCDSR[0] &= (~ul_mask & ul_sr);
  400c28:	6f01      	ldr	r1, [r0, #112]	; 0x70
  400c2a:	400b      	ands	r3, r1
  400c2c:	ea23 0302 	bic.w	r3, r3, r2
  400c30:	6703      	str	r3, [r0, #112]	; 0x70
		ul_sr = p_pio->PIO_ABCDSR[1];
  400c32:	6f43      	ldr	r3, [r0, #116]	; 0x74
		p_pio->PIO_ABCDSR[1] = (ul_mask | ul_sr);
  400c34:	4313      	orrs	r3, r2
  400c36:	6743      	str	r3, [r0, #116]	; 0x74
		break;
  400c38:	e7cb      	b.n	400bd2 <pio_set_peripheral+0x28>

00400c3a <pio_set_input>:
 * \param p_pio Pointer to a PIO instance.
 * \param ul_mask Interrupt sources bit map.
 */
void pio_disable_interrupt(Pio *p_pio, const uint32_t ul_mask)
{
	p_pio->PIO_IDR = ul_mask;
  400c3a:	6441      	str	r1, [r0, #68]	; 0x44
	if (ul_pull_up_enable) {
  400c3c:	f012 0f01 	tst.w	r2, #1
		p_pio->PIO_PUER = ul_mask;
  400c40:	bf14      	ite	ne
  400c42:	6641      	strne	r1, [r0, #100]	; 0x64
		p_pio->PIO_PUDR = ul_mask;
  400c44:	6601      	streq	r1, [r0, #96]	; 0x60
	if (ul_attribute & (PIO_DEGLITCH | PIO_DEBOUNCE)) {
  400c46:	f012 0f0a 	tst.w	r2, #10
		p_pio->PIO_IFER = ul_mask;
  400c4a:	bf14      	ite	ne
  400c4c:	6201      	strne	r1, [r0, #32]
		p_pio->PIO_IFDR = ul_mask;
  400c4e:	6241      	streq	r1, [r0, #36]	; 0x24
	if (ul_attribute & PIO_DEGLITCH) {
  400c50:	f012 0f02 	tst.w	r2, #2
  400c54:	d107      	bne.n	400c66 <pio_set_input+0x2c>
		if (ul_attribute & PIO_DEBOUNCE) {
  400c56:	f012 0f08 	tst.w	r2, #8
			p_pio->PIO_IFSCER = ul_mask;
  400c5a:	bf18      	it	ne
  400c5c:	f8c0 1084 	strne.w	r1, [r0, #132]	; 0x84
	p_pio->PIO_ODR = ul_mask;
  400c60:	6141      	str	r1, [r0, #20]
	p_pio->PIO_PER = ul_mask;
  400c62:	6001      	str	r1, [r0, #0]
  400c64:	4770      	bx	lr
		p_pio->PIO_IFSCDR = ul_mask;
  400c66:	f8c0 1080 	str.w	r1, [r0, #128]	; 0x80
  400c6a:	e7f9      	b.n	400c60 <pio_set_input+0x26>

00400c6c <pio_set_output>:
{
  400c6c:	b410      	push	{r4}
  400c6e:	9c01      	ldr	r4, [sp, #4]
	p_pio->PIO_IDR = ul_mask;
  400c70:	6441      	str	r1, [r0, #68]	; 0x44
	if (ul_pull_up_enable) {
  400c72:	b944      	cbnz	r4, 400c86 <pio_set_output+0x1a>
		p_pio->PIO_PUDR = ul_mask;
  400c74:	6601      	str	r1, [r0, #96]	; 0x60
	if (ul_multidrive_enable) {
  400c76:	b143      	cbz	r3, 400c8a <pio_set_output+0x1e>
		p_pio->PIO_MDER = ul_mask;
  400c78:	6501      	str	r1, [r0, #80]	; 0x50
	if (ul_default_level) {
  400c7a:	b942      	cbnz	r2, 400c8e <pio_set_output+0x22>
		p_pio->PIO_CODR = ul_mask;
  400c7c:	6341      	str	r1, [r0, #52]	; 0x34
	p_pio->PIO_OER = ul_mask;
  400c7e:	6101      	str	r1, [r0, #16]
	p_pio->PIO_PER = ul_mask;
  400c80:	6001      	str	r1, [r0, #0]
}
  400c82:	bc10      	pop	{r4}
  400c84:	4770      	bx	lr
		p_pio->PIO_PUER = ul_mask;
  400c86:	6641      	str	r1, [r0, #100]	; 0x64
  400c88:	e7f5      	b.n	400c76 <pio_set_output+0xa>
		p_pio->PIO_MDDR = ul_mask;
  400c8a:	6541      	str	r1, [r0, #84]	; 0x54
  400c8c:	e7f5      	b.n	400c7a <pio_set_output+0xe>
		p_pio->PIO_SODR = ul_mask;
  400c8e:	6301      	str	r1, [r0, #48]	; 0x30
  400c90:	e7f5      	b.n	400c7e <pio_set_output+0x12>

00400c92 <pio_pull_down>:
	if (ul_pull_down_enable) {
  400c92:	b912      	cbnz	r2, 400c9a <pio_pull_down+0x8>
		p_pio->PIO_PPDDR = ul_mask;
  400c94:	f8c0 1090 	str.w	r1, [r0, #144]	; 0x90
  400c98:	4770      	bx	lr
		p_pio->PIO_PPDER = ul_mask;
  400c9a:	f8c0 1094 	str.w	r1, [r0, #148]	; 0x94
  400c9e:	4770      	bx	lr

00400ca0 <pio_configure_interrupt>:
	if (ul_attr & PIO_IT_AIME) {
  400ca0:	f012 0f10 	tst.w	r2, #16
  400ca4:	d010      	beq.n	400cc8 <pio_configure_interrupt+0x28>
		p_pio->PIO_AIMER = ul_mask;
  400ca6:	f8c0 10b0 	str.w	r1, [r0, #176]	; 0xb0
		if (ul_attr & PIO_IT_RE_OR_HL) {
  400caa:	f012 0f20 	tst.w	r2, #32
			p_pio->PIO_REHLSR = ul_mask;
  400cae:	bf14      	ite	ne
  400cb0:	f8c0 10d4 	strne.w	r1, [r0, #212]	; 0xd4
			p_pio->PIO_FELLSR = ul_mask;
  400cb4:	f8c0 10d0 	streq.w	r1, [r0, #208]	; 0xd0
		if (ul_attr & PIO_IT_EDGE) {
  400cb8:	f012 0f40 	tst.w	r2, #64	; 0x40
			p_pio->PIO_ESR = ul_mask;
  400cbc:	bf14      	ite	ne
  400cbe:	f8c0 10c0 	strne.w	r1, [r0, #192]	; 0xc0
			p_pio->PIO_LSR = ul_mask;
  400cc2:	f8c0 10c4 	streq.w	r1, [r0, #196]	; 0xc4
  400cc6:	4770      	bx	lr
		p_pio->PIO_AIMDR = ul_mask;
  400cc8:	f8c0 10b4 	str.w	r1, [r0, #180]	; 0xb4
  400ccc:	4770      	bx	lr

00400cce <pio_enable_interrupt>:
	p_pio->PIO_IER = ul_mask;
  400cce:	6401      	str	r1, [r0, #64]	; 0x40
  400cd0:	4770      	bx	lr

00400cd2 <pio_get_interrupt_status>:
 *
 * \return The interrupt status value.
 */
uint32_t pio_get_interrupt_status(const Pio *p_pio)
{
	return p_pio->PIO_ISR;
  400cd2:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
}
  400cd4:	4770      	bx	lr

00400cd6 <pio_get_interrupt_mask>:
 *
 * \return The interrupt mask value.
 */
uint32_t pio_get_interrupt_mask(const Pio *p_pio)
{
	return p_pio->PIO_IMR;
  400cd6:	6c80      	ldr	r0, [r0, #72]	; 0x48
}
  400cd8:	4770      	bx	lr
	...

00400cdc <pio_configure_pin>:
 * \param ul_flags Pins attributes.
 *
 * \return Whether the pin(s) have been configured properly.
 */
uint32_t pio_configure_pin(uint32_t ul_pin, const uint32_t ul_flags)
{
  400cdc:	b570      	push	{r4, r5, r6, lr}
  400cde:	b082      	sub	sp, #8
  400ce0:	460d      	mov	r5, r1
		p_pio = PIOC;
	} else {
		p_pio = (Pio *)((uint32_t)PIOA + (PIO_DELTA * (ul_pin >> 5)));
	}
#else
	p_pio = (Pio *)((uint32_t)PIOA + (PIO_DELTA * (ul_pin >> 5)));
  400ce2:	0943      	lsrs	r3, r0, #5
  400ce4:	f503 1300 	add.w	r3, r3, #2097152	; 0x200000
  400ce8:	f203 7307 	addw	r3, r3, #1799	; 0x707
  400cec:	025c      	lsls	r4, r3, #9
	switch (ul_flags & PIO_TYPE_Msk) {
  400cee:	f001 43f0 	and.w	r3, r1, #2013265920	; 0x78000000
  400cf2:	f1b3 5f00 	cmp.w	r3, #536870912	; 0x20000000
  400cf6:	d053      	beq.n	400da0 <pio_configure_pin+0xc4>
  400cf8:	d80a      	bhi.n	400d10 <pio_configure_pin+0x34>
  400cfa:	f1b3 5f80 	cmp.w	r3, #268435456	; 0x10000000
  400cfe:	d02d      	beq.n	400d5c <pio_configure_pin+0x80>
  400d00:	f1b3 5fc0 	cmp.w	r3, #402653184	; 0x18000000
  400d04:	d03b      	beq.n	400d7e <pio_configure_pin+0xa2>
  400d06:	f1b3 6f00 	cmp.w	r3, #134217728	; 0x8000000
  400d0a:	d015      	beq.n	400d38 <pio_configure_pin+0x5c>
		return 0;
  400d0c:	2000      	movs	r0, #0
  400d0e:	e023      	b.n	400d58 <pio_configure_pin+0x7c>
	switch (ul_flags & PIO_TYPE_Msk) {
  400d10:	f1b3 5f40 	cmp.w	r3, #805306368	; 0x30000000
  400d14:	d055      	beq.n	400dc2 <pio_configure_pin+0xe6>
  400d16:	f1b3 5f60 	cmp.w	r3, #939524096	; 0x38000000
  400d1a:	d052      	beq.n	400dc2 <pio_configure_pin+0xe6>
  400d1c:	f1b3 5f20 	cmp.w	r3, #671088640	; 0x28000000
  400d20:	d1f4      	bne.n	400d0c <pio_configure_pin+0x30>
		pio_set_input(p_pio, (1 << (ul_pin & 0x1F)), ul_flags);
  400d22:	f000 011f 	and.w	r1, r0, #31
  400d26:	2601      	movs	r6, #1
  400d28:	462a      	mov	r2, r5
  400d2a:	fa06 f101 	lsl.w	r1, r6, r1
  400d2e:	4620      	mov	r0, r4
  400d30:	4b2f      	ldr	r3, [pc, #188]	; (400df0 <pio_configure_pin+0x114>)
  400d32:	4798      	blx	r3
	return 1;
  400d34:	4630      	mov	r0, r6
		break;
  400d36:	e00f      	b.n	400d58 <pio_configure_pin+0x7c>
		pio_set_peripheral(p_pio, PIO_PERIPH_A, (1 << (ul_pin & 0x1F)));
  400d38:	f000 001f 	and.w	r0, r0, #31
  400d3c:	2601      	movs	r6, #1
  400d3e:	4086      	lsls	r6, r0
  400d40:	4632      	mov	r2, r6
  400d42:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
  400d46:	4620      	mov	r0, r4
  400d48:	4b2a      	ldr	r3, [pc, #168]	; (400df4 <pio_configure_pin+0x118>)
  400d4a:	4798      	blx	r3
	if (ul_pull_up_enable) {
  400d4c:	f015 0f01 	tst.w	r5, #1
		p_pio->PIO_PUER = ul_mask;
  400d50:	bf14      	ite	ne
  400d52:	6666      	strne	r6, [r4, #100]	; 0x64
		p_pio->PIO_PUDR = ul_mask;
  400d54:	6626      	streq	r6, [r4, #96]	; 0x60
	return 1;
  400d56:	2001      	movs	r0, #1
}
  400d58:	b002      	add	sp, #8
  400d5a:	bd70      	pop	{r4, r5, r6, pc}
		pio_set_peripheral(p_pio, PIO_PERIPH_B, (1 << (ul_pin & 0x1F)));
  400d5c:	f000 001f 	and.w	r0, r0, #31
  400d60:	2601      	movs	r6, #1
  400d62:	4086      	lsls	r6, r0
  400d64:	4632      	mov	r2, r6
  400d66:	f04f 5180 	mov.w	r1, #268435456	; 0x10000000
  400d6a:	4620      	mov	r0, r4
  400d6c:	4b21      	ldr	r3, [pc, #132]	; (400df4 <pio_configure_pin+0x118>)
  400d6e:	4798      	blx	r3
	if (ul_pull_up_enable) {
  400d70:	f015 0f01 	tst.w	r5, #1
		p_pio->PIO_PUER = ul_mask;
  400d74:	bf14      	ite	ne
  400d76:	6666      	strne	r6, [r4, #100]	; 0x64
		p_pio->PIO_PUDR = ul_mask;
  400d78:	6626      	streq	r6, [r4, #96]	; 0x60
	return 1;
  400d7a:	2001      	movs	r0, #1
  400d7c:	e7ec      	b.n	400d58 <pio_configure_pin+0x7c>
		pio_set_peripheral(p_pio, PIO_PERIPH_C, (1 << (ul_pin & 0x1F)));
  400d7e:	f000 001f 	and.w	r0, r0, #31
  400d82:	2601      	movs	r6, #1
  400d84:	4086      	lsls	r6, r0
  400d86:	4632      	mov	r2, r6
  400d88:	f04f 51c0 	mov.w	r1, #402653184	; 0x18000000
  400d8c:	4620      	mov	r0, r4
  400d8e:	4b19      	ldr	r3, [pc, #100]	; (400df4 <pio_configure_pin+0x118>)
  400d90:	4798      	blx	r3
	if (ul_pull_up_enable) {
  400d92:	f015 0f01 	tst.w	r5, #1
		p_pio->PIO_PUER = ul_mask;
  400d96:	bf14      	ite	ne
  400d98:	6666      	strne	r6, [r4, #100]	; 0x64
		p_pio->PIO_PUDR = ul_mask;
  400d9a:	6626      	streq	r6, [r4, #96]	; 0x60
	return 1;
  400d9c:	2001      	movs	r0, #1
  400d9e:	e7db      	b.n	400d58 <pio_configure_pin+0x7c>
		pio_set_peripheral(p_pio, PIO_PERIPH_D, (1 << (ul_pin & 0x1F)));
  400da0:	f000 001f 	and.w	r0, r0, #31
  400da4:	2601      	movs	r6, #1
  400da6:	4086      	lsls	r6, r0
  400da8:	4632      	mov	r2, r6
  400daa:	f04f 5100 	mov.w	r1, #536870912	; 0x20000000
  400dae:	4620      	mov	r0, r4
  400db0:	4b10      	ldr	r3, [pc, #64]	; (400df4 <pio_configure_pin+0x118>)
  400db2:	4798      	blx	r3
	if (ul_pull_up_enable) {
  400db4:	f015 0f01 	tst.w	r5, #1
		p_pio->PIO_PUER = ul_mask;
  400db8:	bf14      	ite	ne
  400dba:	6666      	strne	r6, [r4, #100]	; 0x64
		p_pio->PIO_PUDR = ul_mask;
  400dbc:	6626      	streq	r6, [r4, #96]	; 0x60
	return 1;
  400dbe:	2001      	movs	r0, #1
  400dc0:	e7ca      	b.n	400d58 <pio_configure_pin+0x7c>
				((ul_flags & PIO_TYPE_PIO_OUTPUT_1)
  400dc2:	f005 5260 	and.w	r2, r5, #939524096	; 0x38000000
		pio_set_output(p_pio, (1 << (ul_pin & 0x1F)),
  400dc6:	f000 011f 	and.w	r1, r0, #31
  400dca:	2601      	movs	r6, #1
  400dcc:	ea05 0306 	and.w	r3, r5, r6
  400dd0:	9300      	str	r3, [sp, #0]
  400dd2:	f3c5 0380 	ubfx	r3, r5, #2, #1
  400dd6:	f1b2 5f60 	cmp.w	r2, #939524096	; 0x38000000
  400dda:	bf14      	ite	ne
  400ddc:	2200      	movne	r2, #0
  400dde:	2201      	moveq	r2, #1
  400de0:	fa06 f101 	lsl.w	r1, r6, r1
  400de4:	4620      	mov	r0, r4
  400de6:	4c04      	ldr	r4, [pc, #16]	; (400df8 <pio_configure_pin+0x11c>)
  400de8:	47a0      	blx	r4
	return 1;
  400dea:	4630      	mov	r0, r6
		break;
  400dec:	e7b4      	b.n	400d58 <pio_configure_pin+0x7c>
  400dee:	bf00      	nop
  400df0:	00400c3b 	.word	0x00400c3b
  400df4:	00400bab 	.word	0x00400bab
  400df8:	00400c6d 	.word	0x00400c6d

00400dfc <pio_configure_pin_group>:
{
  400dfc:	b570      	push	{r4, r5, r6, lr}
  400dfe:	b082      	sub	sp, #8
  400e00:	4605      	mov	r5, r0
  400e02:	460e      	mov	r6, r1
  400e04:	4614      	mov	r4, r2
	switch (ul_flags & PIO_TYPE_Msk) {
  400e06:	f002 43f0 	and.w	r3, r2, #2013265920	; 0x78000000
  400e0a:	f1b3 5f00 	cmp.w	r3, #536870912	; 0x20000000
  400e0e:	d03d      	beq.n	400e8c <pio_configure_pin_group+0x90>
  400e10:	d80a      	bhi.n	400e28 <pio_configure_pin_group+0x2c>
  400e12:	f1b3 5f80 	cmp.w	r3, #268435456	; 0x10000000
  400e16:	d021      	beq.n	400e5c <pio_configure_pin_group+0x60>
  400e18:	f1b3 5fc0 	cmp.w	r3, #402653184	; 0x18000000
  400e1c:	d02a      	beq.n	400e74 <pio_configure_pin_group+0x78>
  400e1e:	f1b3 6f00 	cmp.w	r3, #134217728	; 0x8000000
  400e22:	d00e      	beq.n	400e42 <pio_configure_pin_group+0x46>
		return 0;
  400e24:	2000      	movs	r0, #0
  400e26:	e017      	b.n	400e58 <pio_configure_pin_group+0x5c>
	switch (ul_flags & PIO_TYPE_Msk) {
  400e28:	f1b3 5f40 	cmp.w	r3, #805306368	; 0x30000000
  400e2c:	d03a      	beq.n	400ea4 <pio_configure_pin_group+0xa8>
  400e2e:	f1b3 5f60 	cmp.w	r3, #939524096	; 0x38000000
  400e32:	d037      	beq.n	400ea4 <pio_configure_pin_group+0xa8>
  400e34:	f1b3 5f20 	cmp.w	r3, #671088640	; 0x28000000
  400e38:	d1f4      	bne.n	400e24 <pio_configure_pin_group+0x28>
		pio_set_input(p_pio, ul_mask, ul_flags);
  400e3a:	4b23      	ldr	r3, [pc, #140]	; (400ec8 <pio_configure_pin_group+0xcc>)
  400e3c:	4798      	blx	r3
	return 1;
  400e3e:	2001      	movs	r0, #1
		break;
  400e40:	e00a      	b.n	400e58 <pio_configure_pin_group+0x5c>
		pio_set_peripheral(p_pio, PIO_PERIPH_A, ul_mask);
  400e42:	460a      	mov	r2, r1
  400e44:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
  400e48:	4b20      	ldr	r3, [pc, #128]	; (400ecc <pio_configure_pin_group+0xd0>)
  400e4a:	4798      	blx	r3
	if (ul_pull_up_enable) {
  400e4c:	f014 0f01 	tst.w	r4, #1
		p_pio->PIO_PUER = ul_mask;
  400e50:	bf14      	ite	ne
  400e52:	666e      	strne	r6, [r5, #100]	; 0x64
		p_pio->PIO_PUDR = ul_mask;
  400e54:	662e      	streq	r6, [r5, #96]	; 0x60
	return 1;
  400e56:	2001      	movs	r0, #1
}
  400e58:	b002      	add	sp, #8
  400e5a:	bd70      	pop	{r4, r5, r6, pc}
		pio_set_peripheral(p_pio, PIO_PERIPH_B, ul_mask);
  400e5c:	460a      	mov	r2, r1
  400e5e:	f04f 5180 	mov.w	r1, #268435456	; 0x10000000
  400e62:	4b1a      	ldr	r3, [pc, #104]	; (400ecc <pio_configure_pin_group+0xd0>)
  400e64:	4798      	blx	r3
	if (ul_pull_up_enable) {
  400e66:	f014 0f01 	tst.w	r4, #1
		p_pio->PIO_PUER = ul_mask;
  400e6a:	bf14      	ite	ne
  400e6c:	666e      	strne	r6, [r5, #100]	; 0x64
		p_pio->PIO_PUDR = ul_mask;
  400e6e:	662e      	streq	r6, [r5, #96]	; 0x60
	return 1;
  400e70:	2001      	movs	r0, #1
  400e72:	e7f1      	b.n	400e58 <pio_configure_pin_group+0x5c>
		pio_set_peripheral(p_pio, PIO_PERIPH_C, ul_mask);
  400e74:	460a      	mov	r2, r1
  400e76:	f04f 51c0 	mov.w	r1, #402653184	; 0x18000000
  400e7a:	4b14      	ldr	r3, [pc, #80]	; (400ecc <pio_configure_pin_group+0xd0>)
  400e7c:	4798      	blx	r3
	if (ul_pull_up_enable) {
  400e7e:	f014 0f01 	tst.w	r4, #1
		p_pio->PIO_PUER = ul_mask;
  400e82:	bf14      	ite	ne
  400e84:	666e      	strne	r6, [r5, #100]	; 0x64
		p_pio->PIO_PUDR = ul_mask;
  400e86:	662e      	streq	r6, [r5, #96]	; 0x60
	return 1;
  400e88:	2001      	movs	r0, #1
  400e8a:	e7e5      	b.n	400e58 <pio_configure_pin_group+0x5c>
		pio_set_peripheral(p_pio, PIO_PERIPH_D, ul_mask);
  400e8c:	460a      	mov	r2, r1
  400e8e:	f04f 5100 	mov.w	r1, #536870912	; 0x20000000
  400e92:	4b0e      	ldr	r3, [pc, #56]	; (400ecc <pio_configure_pin_group+0xd0>)
  400e94:	4798      	blx	r3
	if (ul_pull_up_enable) {
  400e96:	f014 0f01 	tst.w	r4, #1
		p_pio->PIO_PUER = ul_mask;
  400e9a:	bf14      	ite	ne
  400e9c:	666e      	strne	r6, [r5, #100]	; 0x64
		p_pio->PIO_PUDR = ul_mask;
  400e9e:	662e      	streq	r6, [r5, #96]	; 0x60
	return 1;
  400ea0:	2001      	movs	r0, #1
  400ea2:	e7d9      	b.n	400e58 <pio_configure_pin_group+0x5c>
				((ul_flags & PIO_TYPE_PIO_OUTPUT_1)
  400ea4:	f004 5260 	and.w	r2, r4, #939524096	; 0x38000000
		pio_set_output(p_pio, ul_mask,
  400ea8:	f004 0301 	and.w	r3, r4, #1
  400eac:	9300      	str	r3, [sp, #0]
  400eae:	f3c4 0380 	ubfx	r3, r4, #2, #1
  400eb2:	f1b2 5f60 	cmp.w	r2, #939524096	; 0x38000000
  400eb6:	bf14      	ite	ne
  400eb8:	2200      	movne	r2, #0
  400eba:	2201      	moveq	r2, #1
  400ebc:	4631      	mov	r1, r6
  400ebe:	4628      	mov	r0, r5
  400ec0:	4c03      	ldr	r4, [pc, #12]	; (400ed0 <pio_configure_pin_group+0xd4>)
  400ec2:	47a0      	blx	r4
	return 1;
  400ec4:	2001      	movs	r0, #1
		break;
  400ec6:	e7c7      	b.n	400e58 <pio_configure_pin_group+0x5c>
  400ec8:	00400c3b 	.word	0x00400c3b
  400ecc:	00400bab 	.word	0x00400bab
  400ed0:	00400c6d 	.word	0x00400c6d

00400ed4 <pio_handler_process>:
 *
 * \param p_pio PIO controller base address.
 * \param ul_id PIO controller ID.
 */
void pio_handler_process(Pio *p_pio, uint32_t ul_id)
{
  400ed4:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
  400ed8:	4681      	mov	r9, r0
  400eda:	460f      	mov	r7, r1
	uint32_t status;
	uint32_t i;

	/* Read PIO controller status */
	status = pio_get_interrupt_status(p_pio);
  400edc:	4b12      	ldr	r3, [pc, #72]	; (400f28 <pio_handler_process+0x54>)
  400ede:	4798      	blx	r3
  400ee0:	4605      	mov	r5, r0
	status &= pio_get_interrupt_mask(p_pio);
  400ee2:	4648      	mov	r0, r9
  400ee4:	4b11      	ldr	r3, [pc, #68]	; (400f2c <pio_handler_process+0x58>)
  400ee6:	4798      	blx	r3

	/* Check pending events */
	if (status != 0) {
  400ee8:	4005      	ands	r5, r0
  400eea:	d013      	beq.n	400f14 <pio_handler_process+0x40>
  400eec:	4c10      	ldr	r4, [pc, #64]	; (400f30 <pio_handler_process+0x5c>)
  400eee:	f104 0660 	add.w	r6, r4, #96	; 0x60
  400ef2:	e003      	b.n	400efc <pio_handler_process+0x28>
							gs_interrupt_sources[i].mask);
					status &= ~(gs_interrupt_sources[i].mask);
				}
			}
			i++;
			if (i >= MAX_INTERRUPT_SOURCES) {
  400ef4:	42b4      	cmp	r4, r6
  400ef6:	d00d      	beq.n	400f14 <pio_handler_process+0x40>
  400ef8:	3410      	adds	r4, #16
		while (status != 0) {
  400efa:	b15d      	cbz	r5, 400f14 <pio_handler_process+0x40>
			if (gs_interrupt_sources[i].id == ul_id) {
  400efc:	6820      	ldr	r0, [r4, #0]
  400efe:	42b8      	cmp	r0, r7
  400f00:	d1f8      	bne.n	400ef4 <pio_handler_process+0x20>
				if ((status & gs_interrupt_sources[i].mask) != 0) {
  400f02:	6861      	ldr	r1, [r4, #4]
  400f04:	4229      	tst	r1, r5
  400f06:	d0f5      	beq.n	400ef4 <pio_handler_process+0x20>
					gs_interrupt_sources[i].handler(gs_interrupt_sources[i].id,
  400f08:	68e3      	ldr	r3, [r4, #12]
  400f0a:	4798      	blx	r3
					status &= ~(gs_interrupt_sources[i].mask);
  400f0c:	6863      	ldr	r3, [r4, #4]
  400f0e:	ea25 0503 	bic.w	r5, r5, r3
  400f12:	e7ef      	b.n	400ef4 <pio_handler_process+0x20>
		}
	}

	/* Check capture events */
#if (SAM3S || SAM4S || SAM4E)
	if (pio_capture_enable_flag) {
  400f14:	4b07      	ldr	r3, [pc, #28]	; (400f34 <pio_handler_process+0x60>)
  400f16:	681b      	ldr	r3, [r3, #0]
  400f18:	b123      	cbz	r3, 400f24 <pio_handler_process+0x50>
		if (pio_capture_handler) {
  400f1a:	4b07      	ldr	r3, [pc, #28]	; (400f38 <pio_handler_process+0x64>)
  400f1c:	681b      	ldr	r3, [r3, #0]
  400f1e:	b10b      	cbz	r3, 400f24 <pio_handler_process+0x50>
			pio_capture_handler(p_pio);
  400f20:	4648      	mov	r0, r9
  400f22:	4798      	blx	r3
  400f24:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  400f28:	00400cd3 	.word	0x00400cd3
  400f2c:	00400cd7 	.word	0x00400cd7
  400f30:	20000dcc 	.word	0x20000dcc
  400f34:	20000e98 	.word	0x20000e98
  400f38:	20000e40 	.word	0x20000e40

00400f3c <pio_handler_set>:
 *
 * \return 0 if successful, 1 if the maximum number of sources has been defined.
 */
uint32_t pio_handler_set(Pio *p_pio, uint32_t ul_id, uint32_t ul_mask,
		uint32_t ul_attr, void (*p_handler) (uint32_t, uint32_t))
{
  400f3c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    uint8_t i;
	struct s_interrupt_source *pSource;

	if (gs_ul_nb_sources >= MAX_INTERRUPT_SOURCES)
  400f3e:	4c18      	ldr	r4, [pc, #96]	; (400fa0 <pio_handler_set+0x64>)
  400f40:	6826      	ldr	r6, [r4, #0]
  400f42:	2e06      	cmp	r6, #6
  400f44:	d829      	bhi.n	400f9a <pio_handler_set+0x5e>
  400f46:	f04f 0c00 	mov.w	ip, #0
  400f4a:	4664      	mov	r4, ip
		return 1;

    /* Check interrupt for this pin, if already defined, redefine it. */
	for (i = 0; i <= gs_ul_nb_sources; i++) {
		pSource = &(gs_interrupt_sources[i]);
		if (pSource->id == ul_id && pSource->mask == ul_mask) {
  400f4c:	4f15      	ldr	r7, [pc, #84]	; (400fa4 <pio_handler_set+0x68>)
  400f4e:	e004      	b.n	400f5a <pio_handler_set+0x1e>
	for (i = 0; i <= gs_ul_nb_sources; i++) {
  400f50:	3401      	adds	r4, #1
  400f52:	b2e4      	uxtb	r4, r4
  400f54:	46a4      	mov	ip, r4
  400f56:	42a6      	cmp	r6, r4
  400f58:	d309      	bcc.n	400f6e <pio_handler_set+0x32>
		pSource = &(gs_interrupt_sources[i]);
  400f5a:	46a6      	mov	lr, r4
		if (pSource->id == ul_id && pSource->mask == ul_mask) {
  400f5c:	0125      	lsls	r5, r4, #4
  400f5e:	597d      	ldr	r5, [r7, r5]
  400f60:	428d      	cmp	r5, r1
  400f62:	d1f5      	bne.n	400f50 <pio_handler_set+0x14>
  400f64:	eb07 1504 	add.w	r5, r7, r4, lsl #4
  400f68:	686d      	ldr	r5, [r5, #4]
  400f6a:	4295      	cmp	r5, r2
  400f6c:	d1f0      	bne.n	400f50 <pio_handler_set+0x14>
			break;
		}
	}

	/* Define new source */
	pSource->id = ul_id;
  400f6e:	4d0d      	ldr	r5, [pc, #52]	; (400fa4 <pio_handler_set+0x68>)
  400f70:	ea4f 1e0e 	mov.w	lr, lr, lsl #4
  400f74:	eb05 040e 	add.w	r4, r5, lr
  400f78:	f845 100e 	str.w	r1, [r5, lr]
	pSource->mask = ul_mask;
  400f7c:	6062      	str	r2, [r4, #4]
	pSource->attr = ul_attr;
  400f7e:	60a3      	str	r3, [r4, #8]
	pSource->handler = p_handler;
  400f80:	9906      	ldr	r1, [sp, #24]
  400f82:	60e1      	str	r1, [r4, #12]
	if (i == gs_ul_nb_sources + 1) {
  400f84:	3601      	adds	r6, #1
  400f86:	4566      	cmp	r6, ip
		gs_ul_nb_sources++;
  400f88:	bf04      	itt	eq
  400f8a:	4905      	ldreq	r1, [pc, #20]	; (400fa0 <pio_handler_set+0x64>)
  400f8c:	600e      	streq	r6, [r1, #0]
  400f8e:	4611      	mov	r1, r2
	}

	/* Configure interrupt mode */
	pio_configure_interrupt(p_pio, ul_mask, ul_attr);
  400f90:	461a      	mov	r2, r3
  400f92:	4b05      	ldr	r3, [pc, #20]	; (400fa8 <pio_handler_set+0x6c>)
  400f94:	4798      	blx	r3

	return 0;
  400f96:	2000      	movs	r0, #0
  400f98:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
		return 1;
  400f9a:	2001      	movs	r0, #1
}
  400f9c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  400f9e:	bf00      	nop
  400fa0:	20000e3c 	.word	0x20000e3c
  400fa4:	20000dcc 	.word	0x20000dcc
  400fa8:	00400ca1 	.word	0x00400ca1

00400fac <PIOA_Handler>:
/**
 * \brief Parallel IO Controller A interrupt handler.
 * Redefined PIOA interrupt handler for NVIC interrupt table.
 */
void PIOA_Handler(void)
{
  400fac:	b508      	push	{r3, lr}
	pio_handler_process(PIOA, ID_PIOA);
  400fae:	210b      	movs	r1, #11
  400fb0:	4801      	ldr	r0, [pc, #4]	; (400fb8 <PIOA_Handler+0xc>)
  400fb2:	4b02      	ldr	r3, [pc, #8]	; (400fbc <PIOA_Handler+0x10>)
  400fb4:	4798      	blx	r3
  400fb6:	bd08      	pop	{r3, pc}
  400fb8:	400e0e00 	.word	0x400e0e00
  400fbc:	00400ed5 	.word	0x00400ed5

00400fc0 <PIOB_Handler>:
/**
 * \brief Parallel IO Controller B interrupt handler
 * Redefined PIOB interrupt handler for NVIC interrupt table.
 */
void PIOB_Handler(void)
{
  400fc0:	b508      	push	{r3, lr}
    pio_handler_process(PIOB, ID_PIOB);
  400fc2:	210c      	movs	r1, #12
  400fc4:	4801      	ldr	r0, [pc, #4]	; (400fcc <PIOB_Handler+0xc>)
  400fc6:	4b02      	ldr	r3, [pc, #8]	; (400fd0 <PIOB_Handler+0x10>)
  400fc8:	4798      	blx	r3
  400fca:	bd08      	pop	{r3, pc}
  400fcc:	400e1000 	.word	0x400e1000
  400fd0:	00400ed5 	.word	0x00400ed5

00400fd4 <PIOC_Handler>:
/**
 * \brief Parallel IO Controller C interrupt handler.
 * Redefined PIOC interrupt handler for NVIC interrupt table.
 */
void PIOC_Handler(void)
{
  400fd4:	b508      	push	{r3, lr}
	pio_handler_process(PIOC, ID_PIOC);
  400fd6:	210d      	movs	r1, #13
  400fd8:	4801      	ldr	r0, [pc, #4]	; (400fe0 <PIOC_Handler+0xc>)
  400fda:	4b02      	ldr	r3, [pc, #8]	; (400fe4 <PIOC_Handler+0x10>)
  400fdc:	4798      	blx	r3
  400fde:	bd08      	pop	{r3, pc}
  400fe0:	400e1200 	.word	0x400e1200
  400fe4:	00400ed5 	.word	0x00400ed5

00400fe8 <pmc_switch_mck_to_pllack>:
 */
uint32_t pmc_switch_mck_to_pllack(uint32_t ul_pres)
{
	uint32_t ul_timeout;

	PMC->PMC_MCKR = (PMC->PMC_MCKR & (~PMC_MCKR_PRES_Msk)) | ul_pres;
  400fe8:	4a17      	ldr	r2, [pc, #92]	; (401048 <pmc_switch_mck_to_pllack+0x60>)
  400fea:	6b13      	ldr	r3, [r2, #48]	; 0x30
  400fec:	f023 0370 	bic.w	r3, r3, #112	; 0x70
  400ff0:	4318      	orrs	r0, r3
  400ff2:	6310      	str	r0, [r2, #48]	; 0x30
	for (ul_timeout = PMC_TIMEOUT; !(PMC->PMC_SR & PMC_SR_MCKRDY);
  400ff4:	6e93      	ldr	r3, [r2, #104]	; 0x68
  400ff6:	f013 0f08 	tst.w	r3, #8
  400ffa:	d10a      	bne.n	401012 <pmc_switch_mck_to_pllack+0x2a>
  400ffc:	f44f 6300 	mov.w	r3, #2048	; 0x800
  401000:	4911      	ldr	r1, [pc, #68]	; (401048 <pmc_switch_mck_to_pllack+0x60>)
  401002:	6e8a      	ldr	r2, [r1, #104]	; 0x68
  401004:	f012 0f08 	tst.w	r2, #8
  401008:	d103      	bne.n	401012 <pmc_switch_mck_to_pllack+0x2a>
			--ul_timeout) {
		if (ul_timeout == 0) {
  40100a:	3b01      	subs	r3, #1
  40100c:	d1f9      	bne.n	401002 <pmc_switch_mck_to_pllack+0x1a>
			return 1;
  40100e:	2001      	movs	r0, #1
  401010:	4770      	bx	lr
		}
	}

	PMC->PMC_MCKR = (PMC->PMC_MCKR & (~PMC_MCKR_CSS_Msk)) |
  401012:	4a0d      	ldr	r2, [pc, #52]	; (401048 <pmc_switch_mck_to_pllack+0x60>)
  401014:	6b13      	ldr	r3, [r2, #48]	; 0x30
  401016:	f023 0303 	bic.w	r3, r3, #3
  40101a:	f043 0302 	orr.w	r3, r3, #2
  40101e:	6313      	str	r3, [r2, #48]	; 0x30
			PMC_MCKR_CSS_PLLA_CLK;

	for (ul_timeout = PMC_TIMEOUT; !(PMC->PMC_SR & PMC_SR_MCKRDY);
  401020:	6e93      	ldr	r3, [r2, #104]	; 0x68
  401022:	f013 0f08 	tst.w	r3, #8
  401026:	d10a      	bne.n	40103e <pmc_switch_mck_to_pllack+0x56>
  401028:	f44f 6300 	mov.w	r3, #2048	; 0x800
  40102c:	4906      	ldr	r1, [pc, #24]	; (401048 <pmc_switch_mck_to_pllack+0x60>)
  40102e:	6e8a      	ldr	r2, [r1, #104]	; 0x68
  401030:	f012 0f08 	tst.w	r2, #8
  401034:	d105      	bne.n	401042 <pmc_switch_mck_to_pllack+0x5a>
			--ul_timeout) {
		if (ul_timeout == 0) {
  401036:	3b01      	subs	r3, #1
  401038:	d1f9      	bne.n	40102e <pmc_switch_mck_to_pllack+0x46>
			return 1;
  40103a:	2001      	movs	r0, #1
		}
	}

	return 0;
}
  40103c:	4770      	bx	lr
	return 0;
  40103e:	2000      	movs	r0, #0
  401040:	4770      	bx	lr
  401042:	2000      	movs	r0, #0
  401044:	4770      	bx	lr
  401046:	bf00      	nop
  401048:	400e0400 	.word	0x400e0400

0040104c <pmc_switch_mainck_to_xtal>:
 */
void pmc_switch_mainck_to_xtal(uint32_t ul_bypass,
		uint32_t ul_xtal_startup_time)
{
	/* Enable Main Xtal oscillator */
	if (ul_bypass) {
  40104c:	b9c8      	cbnz	r0, 401082 <pmc_switch_mainck_to_xtal+0x36>
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTEN) |
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTBY |
				CKGR_MOR_MOSCSEL;
	} else {
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTBY) |
  40104e:	4a11      	ldr	r2, [pc, #68]	; (401094 <pmc_switch_mainck_to_xtal+0x48>)
  401050:	6a13      	ldr	r3, [r2, #32]
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTEN |
				CKGR_MOR_MOSCXTST(ul_xtal_startup_time);
  401052:	0209      	lsls	r1, r1, #8
  401054:	b289      	uxth	r1, r1
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTEN |
  401056:	f423 135c 	bic.w	r3, r3, #3604480	; 0x370000
  40105a:	f023 0303 	bic.w	r3, r3, #3
  40105e:	f443 135c 	orr.w	r3, r3, #3604480	; 0x370000
  401062:	f043 0301 	orr.w	r3, r3, #1
  401066:	430b      	orrs	r3, r1
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTBY) |
  401068:	6213      	str	r3, [r2, #32]
		/* Wait the Xtal to stabilize */
		while (!(PMC->PMC_SR & PMC_SR_MOSCXTS));
  40106a:	6e93      	ldr	r3, [r2, #104]	; 0x68
  40106c:	f013 0f01 	tst.w	r3, #1
  401070:	d0fb      	beq.n	40106a <pmc_switch_mainck_to_xtal+0x1e>

		PMC->CKGR_MOR |= CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCSEL;
  401072:	4a08      	ldr	r2, [pc, #32]	; (401094 <pmc_switch_mainck_to_xtal+0x48>)
  401074:	6a13      	ldr	r3, [r2, #32]
  401076:	f043 739b 	orr.w	r3, r3, #20316160	; 0x1360000
  40107a:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
  40107e:	6213      	str	r3, [r2, #32]
  401080:	4770      	bx	lr
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTEN) |
  401082:	4904      	ldr	r1, [pc, #16]	; (401094 <pmc_switch_mainck_to_xtal+0x48>)
  401084:	6a0b      	ldr	r3, [r1, #32]
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTBY |
  401086:	4a04      	ldr	r2, [pc, #16]	; (401098 <pmc_switch_mainck_to_xtal+0x4c>)
  401088:	401a      	ands	r2, r3
  40108a:	4b04      	ldr	r3, [pc, #16]	; (40109c <pmc_switch_mainck_to_xtal+0x50>)
  40108c:	4313      	orrs	r3, r2
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTEN) |
  40108e:	620b      	str	r3, [r1, #32]
  401090:	4770      	bx	lr
  401092:	bf00      	nop
  401094:	400e0400 	.word	0x400e0400
  401098:	fec8fffc 	.word	0xfec8fffc
  40109c:	01370002 	.word	0x01370002

004010a0 <pmc_osc_is_ready_mainck>:
 * \retval 1 Xtal is ready.
 * \retval 0 Xtal is not ready.
 */
uint32_t pmc_osc_is_ready_mainck(void)
{
	return PMC->PMC_SR & PMC_SR_MOSCSELS;
  4010a0:	4b02      	ldr	r3, [pc, #8]	; (4010ac <pmc_osc_is_ready_mainck+0xc>)
  4010a2:	6e98      	ldr	r0, [r3, #104]	; 0x68
}
  4010a4:	f400 3080 	and.w	r0, r0, #65536	; 0x10000
  4010a8:	4770      	bx	lr
  4010aa:	bf00      	nop
  4010ac:	400e0400 	.word	0x400e0400

004010b0 <pmc_disable_pllack>:
void pmc_disable_pllack(void)
{
#if (SAM4C || SAM4CM || SAM4CP || SAMG)
	PMC->CKGR_PLLAR = CKGR_PLLAR_MULA(0);
#else
	PMC->CKGR_PLLAR = CKGR_PLLAR_ONE | CKGR_PLLAR_MULA(0);
  4010b0:	f04f 5200 	mov.w	r2, #536870912	; 0x20000000
  4010b4:	4b01      	ldr	r3, [pc, #4]	; (4010bc <pmc_disable_pllack+0xc>)
  4010b6:	629a      	str	r2, [r3, #40]	; 0x28
  4010b8:	4770      	bx	lr
  4010ba:	bf00      	nop
  4010bc:	400e0400 	.word	0x400e0400

004010c0 <pmc_is_locked_pllack>:
 * \retval 0 Not locked.
 * \retval 1 Locked.
 */
uint32_t pmc_is_locked_pllack(void)
{
	return (PMC->PMC_SR & PMC_SR_LOCKA);
  4010c0:	4b02      	ldr	r3, [pc, #8]	; (4010cc <pmc_is_locked_pllack+0xc>)
  4010c2:	6e98      	ldr	r0, [r3, #104]	; 0x68
}
  4010c4:	f000 0002 	and.w	r0, r0, #2
  4010c8:	4770      	bx	lr
  4010ca:	bf00      	nop
  4010cc:	400e0400 	.word	0x400e0400

004010d0 <pmc_enable_periph_clk>:
 * \retval 0 Success.
 * \retval 1 Invalid parameter.
 */
uint32_t pmc_enable_periph_clk(uint32_t ul_id)
{
	if (ul_id > MAX_PERIPH_ID) {
  4010d0:	2822      	cmp	r0, #34	; 0x22
  4010d2:	d81e      	bhi.n	401112 <pmc_enable_periph_clk+0x42>
		return 1;
	}

	if (ul_id < 32) {
  4010d4:	281f      	cmp	r0, #31
  4010d6:	d80c      	bhi.n	4010f2 <pmc_enable_periph_clk+0x22>
		if ((PMC->PMC_PCSR0 & (1u << ul_id)) != (1u << ul_id)) {
  4010d8:	4b11      	ldr	r3, [pc, #68]	; (401120 <pmc_enable_periph_clk+0x50>)
  4010da:	699a      	ldr	r2, [r3, #24]
  4010dc:	2301      	movs	r3, #1
  4010de:	4083      	lsls	r3, r0
  4010e0:	4393      	bics	r3, r2
  4010e2:	d018      	beq.n	401116 <pmc_enable_periph_clk+0x46>
			PMC->PMC_PCER0 = 1 << ul_id;
  4010e4:	2301      	movs	r3, #1
  4010e6:	fa03 f000 	lsl.w	r0, r3, r0
  4010ea:	4b0d      	ldr	r3, [pc, #52]	; (401120 <pmc_enable_periph_clk+0x50>)
  4010ec:	6118      	str	r0, [r3, #16]
			PMC->PMC_PCER1 = 1 << ul_id;
		}
#endif
	}

	return 0;
  4010ee:	2000      	movs	r0, #0
  4010f0:	4770      	bx	lr
		ul_id -= 32;
  4010f2:	3820      	subs	r0, #32
		if ((PMC->PMC_PCSR1 & (1u << ul_id)) != (1u << ul_id)) {
  4010f4:	4b0a      	ldr	r3, [pc, #40]	; (401120 <pmc_enable_periph_clk+0x50>)
  4010f6:	f8d3 2108 	ldr.w	r2, [r3, #264]	; 0x108
  4010fa:	2301      	movs	r3, #1
  4010fc:	4083      	lsls	r3, r0
  4010fe:	4393      	bics	r3, r2
  401100:	d00b      	beq.n	40111a <pmc_enable_periph_clk+0x4a>
			PMC->PMC_PCER1 = 1 << ul_id;
  401102:	2301      	movs	r3, #1
  401104:	fa03 f000 	lsl.w	r0, r3, r0
  401108:	4b05      	ldr	r3, [pc, #20]	; (401120 <pmc_enable_periph_clk+0x50>)
  40110a:	f8c3 0100 	str.w	r0, [r3, #256]	; 0x100
	return 0;
  40110e:	2000      	movs	r0, #0
  401110:	4770      	bx	lr
		return 1;
  401112:	2001      	movs	r0, #1
  401114:	4770      	bx	lr
	return 0;
  401116:	2000      	movs	r0, #0
  401118:	4770      	bx	lr
  40111a:	2000      	movs	r0, #0
}
  40111c:	4770      	bx	lr
  40111e:	bf00      	nop
  401120:	400e0400 	.word	0x400e0400

00401124 <pwm_clocks_generate>:
 *
 * \retval Return the value to be set in the PWM Clock Register (PWM Mode Register for
 * SAM3N/SAM4N/SAM4C/SAM4CP/SAM4CM) or PWM_INVALID_ARGUMENT if the configuration cannot be met.
 */
static uint32_t pwm_clocks_generate(uint32_t ul_frequency, uint32_t ul_mck)
{
  401124:	b4f0      	push	{r4, r5, r6, r7}
  401126:	b08c      	sub	sp, #48	; 0x30
  401128:	4607      	mov	r7, r0
  40112a:	460e      	mov	r6, r1
	uint32_t ul_divisors[PWM_CLOCK_PRE_MAX] =
  40112c:	ac01      	add	r4, sp, #4
  40112e:	4d11      	ldr	r5, [pc, #68]	; (401174 <pwm_clocks_generate+0x50>)
  401130:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
  401132:	c40f      	stmia	r4!, {r0, r1, r2, r3}
  401134:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
  401136:	c40f      	stmia	r4!, {r0, r1, r2, r3}
  401138:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
  40113c:	e884 0007 	stmia.w	r4, {r0, r1, r2}
  401140:	aa01      	add	r2, sp, #4
			{1, 2, 4, 8, 16, 32, 64, 128, 256, 512, 1024 };
	uint32_t ul_pre = 0;
  401142:	2300      	movs	r3, #0
	uint32_t ul_div;

	/* Find prescaler and divisor values */
	do {
		ul_div = (ul_mck / ul_divisors[ul_pre]) / ul_frequency;
  401144:	f852 0b04 	ldr.w	r0, [r2], #4
  401148:	fbb6 f0f0 	udiv	r0, r6, r0
  40114c:	fbb0 f0f7 	udiv	r0, r0, r7
		if (ul_div <= PWM_CLOCK_DIV_MAX) {
  401150:	f5b0 7f80 	cmp.w	r0, #256	; 0x100
  401154:	d907      	bls.n	401166 <pwm_clocks_generate+0x42>
			break;
		}
		ul_pre++;
  401156:	3301      	adds	r3, #1
	} while (ul_pre < PWM_CLOCK_PRE_MAX);
  401158:	2b0b      	cmp	r3, #11
  40115a:	d1f3      	bne.n	401144 <pwm_clocks_generate+0x20>

	/* Return result */
	if (ul_pre < PWM_CLOCK_PRE_MAX) {
		return ul_div | (ul_pre << 8);
	} else {
		return PWM_INVALID_ARGUMENT;
  40115c:	f64f 70ff 	movw	r0, #65535	; 0xffff
	}
}
  401160:	b00c      	add	sp, #48	; 0x30
  401162:	bcf0      	pop	{r4, r5, r6, r7}
  401164:	4770      	bx	lr
	if (ul_pre < PWM_CLOCK_PRE_MAX) {
  401166:	2b0a      	cmp	r3, #10
		return ul_div | (ul_pre << 8);
  401168:	bf94      	ite	ls
  40116a:	ea40 2003 	orrls.w	r0, r0, r3, lsl #8
		return PWM_INVALID_ARGUMENT;
  40116e:	f64f 70ff 	movwhi	r0, #65535	; 0xffff
  401172:	e7f5      	b.n	401160 <pwm_clocks_generate+0x3c>
  401174:	00407694 	.word	0x00407694

00401178 <pwm_init>:
 * \param clock_config PWM clock configuration.
 *
 * \retval 0 if initialization succeeds, otherwise fails.
 */
uint32_t pwm_init(Pwm *p_pwm, pwm_clock_t *clock_config)
{
  401178:	b570      	push	{r4, r5, r6, lr}
  40117a:	4606      	mov	r6, r0
  40117c:	460d      	mov	r5, r1
	uint32_t clock = 0;
	uint32_t result;

	/* Clock A */
	if (clock_config->ul_clka != 0) {
  40117e:	680c      	ldr	r4, [r1, #0]
  401180:	b144      	cbz	r4, 401194 <pwm_init+0x1c>
		result = pwm_clocks_generate(clock_config->ul_clka, clock_config->ul_mck);
  401182:	6889      	ldr	r1, [r1, #8]
  401184:	4620      	mov	r0, r4
  401186:	4b0c      	ldr	r3, [pc, #48]	; (4011b8 <pwm_init+0x40>)
  401188:	4798      	blx	r3
  40118a:	4604      	mov	r4, r0
		if (result == PWM_INVALID_ARGUMENT) {
  40118c:	f64f 73ff 	movw	r3, #65535	; 0xffff
  401190:	4298      	cmp	r0, r3
  401192:	d00c      	beq.n	4011ae <pwm_init+0x36>

		clock = result;
	}

	/* Clock B */
	if (clock_config->ul_clkb != 0) {
  401194:	6868      	ldr	r0, [r5, #4]
  401196:	b140      	cbz	r0, 4011aa <pwm_init+0x32>
		result = pwm_clocks_generate(clock_config->ul_clkb, clock_config->ul_mck);
  401198:	68a9      	ldr	r1, [r5, #8]
  40119a:	4b07      	ldr	r3, [pc, #28]	; (4011b8 <pwm_init+0x40>)
  40119c:	4798      	blx	r3

		if (result == PWM_INVALID_ARGUMENT) {
  40119e:	f64f 73ff 	movw	r3, #65535	; 0xffff
  4011a2:	4298      	cmp	r0, r3
  4011a4:	d005      	beq.n	4011b2 <pwm_init+0x3a>
			return result;
		}

		clock |= (result << 16);
  4011a6:	ea44 4400 	orr.w	r4, r4, r0, lsl #16
	}
#if (SAM3N || SAM4N || SAM4C || SAM4CP || SAM4CM)
	p_pwm->PWM_MR = clock;
#else
	p_pwm->PWM_CLK = clock;
  4011aa:	6034      	str	r4, [r6, #0]
#endif
	return 0;
  4011ac:	2400      	movs	r4, #0
}
  4011ae:	4620      	mov	r0, r4
  4011b0:	bd70      	pop	{r4, r5, r6, pc}
			return result;
  4011b2:	4604      	mov	r4, r0
  4011b4:	e7fb      	b.n	4011ae <pwm_init+0x36>
  4011b6:	bf00      	nop
  4011b8:	00401125 	.word	0x00401125

004011bc <pwm_channel_init>:
 * \param p_channel Configurations of the specified PWM channel.
 *
 * \retval 0 if initialization succeeds, otherwise fails.
 */
uint32_t pwm_channel_init(Pwm *p_pwm, pwm_channel_t *p_channel)
{
  4011bc:	b470      	push	{r4, r5, r6}
	uint32_t tmp_reg = 0;
	uint32_t ch_num = p_channel->channel;
  4011be:	680a      	ldr	r2, [r1, #0]

	/* Channel Mode/Clock Register */
	tmp_reg = (p_channel->ul_prescaler & 0xF) |
  4011c0:	684b      	ldr	r3, [r1, #4]
  4011c2:	f003 030f 	and.w	r3, r3, #15
			(p_channel->polarity << 9) |
#if (SAM3U || SAM3S || SAM3XA || SAM4S || SAM4E || SAMV70 || SAMV71 || SAME70 || SAMS70)
			(p_channel->counter_event) |
  4011c6:	8a8c      	ldrh	r4, [r1, #20]
	tmp_reg = (p_channel->ul_prescaler & 0xF) |
  4011c8:	4323      	orrs	r3, r4
			(p_channel->b_deadtime_generator << 16) |
			(p_channel->b_pwmh_output_inverted << 17) |
			(p_channel->b_pwml_output_inverted << 18) |
#endif
			(p_channel->alignment);
  4011ca:	890c      	ldrh	r4, [r1, #8]
	tmp_reg = (p_channel->ul_prescaler & 0xF) |
  4011cc:	4323      	orrs	r3, r4
			(p_channel->polarity << 9) |
  4011ce:	7a8c      	ldrb	r4, [r1, #10]
	tmp_reg = (p_channel->ul_prescaler & 0xF) |
  4011d0:	ea43 2344 	orr.w	r3, r3, r4, lsl #9
			(p_channel->b_deadtime_generator << 16) |
  4011d4:	7d8c      	ldrb	r4, [r1, #22]
	tmp_reg = (p_channel->ul_prescaler & 0xF) |
  4011d6:	ea43 4304 	orr.w	r3, r3, r4, lsl #16
			(p_channel->b_pwmh_output_inverted << 17) |
  4011da:	7dcc      	ldrb	r4, [r1, #23]
	tmp_reg = (p_channel->ul_prescaler & 0xF) |
  4011dc:	ea43 4344 	orr.w	r3, r3, r4, lsl #17
			(p_channel->b_pwml_output_inverted << 18) |
  4011e0:	7e0c      	ldrb	r4, [r1, #24]
	tmp_reg = (p_channel->ul_prescaler & 0xF) |
  4011e2:	ea43 4384 	orr.w	r3, r3, r4, lsl #18
  4011e6:	eb00 1442 	add.w	r4, r0, r2, lsl #5
	p_pwm->PWM_CH_NUM[ch_num].PWM_CMR = tmp_reg;
  4011ea:	f8c4 3200 	str.w	r3, [r4, #512]	; 0x200

	/* Channel Duty Cycle Register */
	p_pwm->PWM_CH_NUM[ch_num].PWM_CDTY = p_channel->ul_duty;
  4011ee:	68cb      	ldr	r3, [r1, #12]
  4011f0:	f8c4 3204 	str.w	r3, [r4, #516]	; 0x204

	/* Channel Period Register */
	p_pwm->PWM_CH_NUM[ch_num].PWM_CPRD = p_channel->ul_period;
  4011f4:	690b      	ldr	r3, [r1, #16]
  4011f6:	f8c4 320c 	str.w	r3, [r4, #524]	; 0x20c
	
#if (SAM3U || SAM3S || SAM3XA || SAM4S || SAM4E || SAMV70 || SAMV71 || SAME70 || SAMS70)
	/* Channel Dead Time Register */
	if (p_channel->b_deadtime_generator) {
  4011fa:	7d8b      	ldrb	r3, [r1, #22]
  4011fc:	b13b      	cbz	r3, 40120e <pwm_channel_init+0x52>
		p_pwm->PWM_CH_NUM[ch_num].PWM_DT =
				PWM_DT_DTL(p_channel->
  4011fe:	8b8c      	ldrh	r4, [r1, #28]
				us_deadtime_pwml) | PWM_DT_DTH(p_channel->
  401200:	8b4b      	ldrh	r3, [r1, #26]
  401202:	ea43 4304 	orr.w	r3, r3, r4, lsl #16
		p_pwm->PWM_CH_NUM[ch_num].PWM_DT =
  401206:	eb00 1442 	add.w	r4, r0, r2, lsl #5
  40120a:	f8c4 3218 	str.w	r3, [r4, #536]	; 0x218
				us_deadtime_pwmh);
	}

	/* Output Selection Register */
	tmp_reg  = p_pwm->PWM_OS & (~((PWM_OS_OSH0 | PWM_OS_OSL0) << ch_num));
  40120e:	6c85      	ldr	r5, [r0, #72]	; 0x48
  401210:	f04f 1301 	mov.w	r3, #65537	; 0x10001
  401214:	4093      	lsls	r3, r2
  401216:	43db      	mvns	r3, r3
  401218:	401d      	ands	r5, r3
	tmp_reg |= ((p_channel->output_selection.b_override_pwmh) << ch_num) |
			(((p_channel->output_selection.b_override_pwml) << ch_num)
  40121a:	7fcc      	ldrb	r4, [r1, #31]
  40121c:	fa04 f602 	lsl.w	r6, r4, r2
	tmp_reg |= ((p_channel->output_selection.b_override_pwmh) << ch_num) |
  401220:	7f8c      	ldrb	r4, [r1, #30]
  401222:	4094      	lsls	r4, r2
  401224:	ea44 4406 	orr.w	r4, r4, r6, lsl #16
  401228:	432c      	orrs	r4, r5
					<< 16);
	p_pwm->PWM_OS = tmp_reg;
  40122a:	6484      	str	r4, [r0, #72]	; 0x48

	/* Output Override Value Register */
	tmp_reg  = p_pwm->PWM_OOV & (~((PWM_OOV_OOVH0 | PWM_OOV_OOVL0) << ch_num));
  40122c:	6c44      	ldr	r4, [r0, #68]	; 0x44
  40122e:	4023      	ands	r3, r4
	tmp_reg |= ((p_channel->output_selection.override_level_pwmh) << ch_num) |
			(((p_channel->output_selection.override_level_pwml) << ch_num)
  401230:	f891 4021 	ldrb.w	r4, [r1, #33]	; 0x21
  401234:	fa04 f502 	lsl.w	r5, r4, r2
	tmp_reg |= ((p_channel->output_selection.override_level_pwmh) << ch_num) |
  401238:	f891 4020 	ldrb.w	r4, [r1, #32]
  40123c:	4094      	lsls	r4, r2
  40123e:	ea44 4405 	orr.w	r4, r4, r5, lsl #16
  401242:	4323      	orrs	r3, r4
					<< 16);
	p_pwm->PWM_OOV = tmp_reg;
  401244:	6443      	str	r3, [r0, #68]	; 0x44

	/* Sync Channels Mode Register */
	uint32_t channel = (1 << ch_num);
  401246:	2301      	movs	r3, #1
  401248:	4093      	lsls	r3, r2
	if (p_channel->b_sync_ch) {
  40124a:	f891 4022 	ldrb.w	r4, [r1, #34]	; 0x22
  40124e:	b31c      	cbz	r4, 401298 <pwm_channel_init+0xdc>
		p_pwm->PWM_SCM |= channel;
  401250:	6a04      	ldr	r4, [r0, #32]
  401252:	431c      	orrs	r4, r3
  401254:	6204      	str	r4, [r0, #32]
		} else {
			p_pwm->PWM_FPV1 &= (~((0x01 << ch_num) << 16));
		}
	}
#else
	if (p_channel->ul_fault_output_pwmh == PWM_HIGH) {
  401256:	f891 4024 	ldrb.w	r4, [r1, #36]	; 0x24
  40125a:	2c01      	cmp	r4, #1
		p_pwm->PWM_FPV |= (0x01 << ch_num);
  40125c:	6e84      	ldr	r4, [r0, #104]	; 0x68
  40125e:	bf0c      	ite	eq
  401260:	431c      	orreq	r4, r3
	} else {
		p_pwm->PWM_FPV &= (~(0x01 << ch_num));
  401262:	439c      	bicne	r4, r3
  401264:	6684      	str	r4, [r0, #104]	; 0x68
	}
	if (p_channel->ul_fault_output_pwml == PWM_HIGH) {
  401266:	f891 4025 	ldrb.w	r4, [r1, #37]	; 0x25
  40126a:	2c01      	cmp	r4, #1
		p_pwm->PWM_FPV |= ((0x01 << ch_num) << 16);
  40126c:	6e84      	ldr	r4, [r0, #104]	; 0x68
  40126e:	bf0c      	ite	eq
  401270:	ea44 4303 	orreq.w	r3, r4, r3, lsl #16
	} else {
		p_pwm->PWM_FPV &= (~((0x01 << ch_num) << 16));
  401274:	ea24 4303 	bicne.w	r3, r4, r3, lsl #16
  401278:	6683      	str	r3, [r0, #104]	; 0x68
		p_pwm->PWM_FPE2 = fault_enable_reg;
	}
#endif

#if (SAM3U || SAM3S || SAM4S || SAM4E || SAMV70 || SAMV71 || SAME70 || SAMS70)
	ch_num *= 8;
  40127a:	00d2      	lsls	r2, r2, #3
	fault_enable_reg = p_pwm->PWM_FPE;
  40127c:	6ec4      	ldr	r4, [r0, #108]	; 0x6c
	fault_enable_reg &= ~(0xFF << ch_num);
  40127e:	23ff      	movs	r3, #255	; 0xff
  401280:	4093      	lsls	r3, r2
  401282:	ea24 0403 	bic.w	r4, r4, r3
	fault_enable_reg |= ((p_channel->fault_id) << ch_num);
  401286:	f891 3023 	ldrb.w	r3, [r1, #35]	; 0x23
  40128a:	fa03 f202 	lsl.w	r2, r3, r2
  40128e:	4322      	orrs	r2, r4
	p_pwm->PWM_FPE = fault_enable_reg;
  401290:	66c2      	str	r2, [r0, #108]	; 0x6c
	p_pwm->PWM_CH_NUM[ch_num].PWM_CMR &= (~PWM_CMR_PPM);
	p_pwm->PWM_CH_NUM[ch_num].PWM_CMR |= (p_channel->ul_ppm_mode & PWM_CMR_PPM);
#endif

	return 0;
}
  401292:	2000      	movs	r0, #0
  401294:	bc70      	pop	{r4, r5, r6}
  401296:	4770      	bx	lr
		p_pwm->PWM_SCM &= ~((uint32_t) channel);
  401298:	6a04      	ldr	r4, [r0, #32]
  40129a:	ea24 0403 	bic.w	r4, r4, r3
  40129e:	6204      	str	r4, [r0, #32]
  4012a0:	e7d9      	b.n	401256 <pwm_channel_init+0x9a>

004012a2 <pwm_channel_update_duty>:
		uint32_t ul_duty)
{
	uint32_t ch_num = p_channel->channel;

		/** Check parameter */
	if (p_channel->ul_period < ul_duty) {
  4012a2:	690b      	ldr	r3, [r1, #16]
  4012a4:	4293      	cmp	r3, r2
  4012a6:	d202      	bcs.n	4012ae <pwm_channel_update_duty+0xc>
		return PWM_INVALID_ARGUMENT;
  4012a8:	f64f 70ff 	movw	r0, #65535	; 0xffff
		p_pwm->PWM_CH_NUM[ch_num].PWM_CDTYUPD = ul_duty;
#endif
	}

	return 0;
}
  4012ac:	4770      	bx	lr
	uint32_t ch_num = p_channel->channel;
  4012ae:	680b      	ldr	r3, [r1, #0]
		p_channel->ul_duty = ul_duty;
  4012b0:	60ca      	str	r2, [r1, #12]
		p_pwm->PWM_CH_NUM[ch_num].PWM_CDTYUPD = ul_duty;
  4012b2:	eb00 1043 	add.w	r0, r0, r3, lsl #5
  4012b6:	f8c0 2208 	str.w	r2, [r0, #520]	; 0x208
	return 0;
  4012ba:	2000      	movs	r0, #0
  4012bc:	4770      	bx	lr

004012be <pwm_channel_enable>:
 * \param p_pwm Pointer to a PWM instance.
 * \param ul_channel PWM channel number to enable.
 */
void pwm_channel_enable(Pwm *p_pwm, uint32_t ul_channel)
{
	p_pwm->PWM_ENA = (1 << ul_channel);
  4012be:	2301      	movs	r3, #1
  4012c0:	fa03 f101 	lsl.w	r1, r3, r1
  4012c4:	6041      	str	r1, [r0, #4]
  4012c6:	4770      	bx	lr

004012c8 <pwm_channel_disable>:
 * \param p_pwm Pointer to a PWM instance.
 * \param ul_channel PWM channel number to disable.
 */
void pwm_channel_disable(Pwm *p_pwm, uint32_t ul_channel)
{
	p_pwm->PWM_DIS = (1 << ul_channel);
  4012c8:	2301      	movs	r3, #1
  4012ca:	fa03 f101 	lsl.w	r1, r3, r1
  4012ce:	6081      	str	r1, [r0, #8]
  4012d0:	4770      	bx	lr

004012d2 <pwm_channel_disable_interrupt>:
#if (SAM3N || SAM4N || SAM4C || SAM4CP || SAM4CM)
	p_pwm->PWM_IDR = (1 << ul_event);
	/* avoid Cppcheck Warning */
	UNUSED(ul_fault);
#else
	p_pwm->PWM_IDR1 = (1 << ul_event) | (1 << (ul_fault + 16));
  4012d2:	3210      	adds	r2, #16
  4012d4:	2301      	movs	r3, #1
  4012d6:	fa03 f202 	lsl.w	r2, r3, r2
  4012da:	fa03 f101 	lsl.w	r1, r3, r1
  4012de:	430a      	orrs	r2, r1
  4012e0:	6142      	str	r2, [r0, #20]
  4012e2:	4770      	bx	lr

004012e4 <tc_init>:
 */
void tc_init(
		Tc *p_tc,
		uint32_t ul_channel,
		uint32_t ul_mode)
{
  4012e4:	b410      	push	{r4}

	/* Validate inputs. */
	Assert(p_tc);
	Assert(ul_channel <
			(sizeof(p_tc->TC_CHANNEL) / sizeof(p_tc->TC_CHANNEL[0])));
	tc_channel = p_tc->TC_CHANNEL + ul_channel;
  4012e6:	0189      	lsls	r1, r1, #6
  4012e8:	1843      	adds	r3, r0, r1

	/*  Disable TC clock. */
	tc_channel->TC_CCR = TC_CCR_CLKDIS;
  4012ea:	2402      	movs	r4, #2
  4012ec:	5044      	str	r4, [r0, r1]

	/*  Disable interrupts. */
	tc_channel->TC_IDR = 0xFFFFFFFF;
  4012ee:	f04f 31ff 	mov.w	r1, #4294967295
  4012f2:	6299      	str	r1, [r3, #40]	; 0x28

	/*  Clear status register. */
	tc_channel->TC_SR;
  4012f4:	6a19      	ldr	r1, [r3, #32]

	/*  Set mode. */
	tc_channel->TC_CMR = ul_mode;
  4012f6:	605a      	str	r2, [r3, #4]
}
  4012f8:	bc10      	pop	{r4}
  4012fa:	4770      	bx	lr

004012fc <tc_start>:
	/* Validate inputs. */
	Assert(p_tc);
	Assert(ul_channel <
			(sizeof(p_tc->TC_CHANNEL) / sizeof(p_tc->TC_CHANNEL[0])));

	p_tc->TC_CHANNEL[ul_channel].TC_CCR = TC_CCR_CLKEN | TC_CCR_SWTRG;
  4012fc:	0189      	lsls	r1, r1, #6
  4012fe:	2305      	movs	r3, #5
  401300:	5043      	str	r3, [r0, r1]
  401302:	4770      	bx	lr

00401304 <tc_write_rc>:
	/* Validate inputs. */
	Assert(p_tc);
	Assert(ul_channel <
			(sizeof(p_tc->TC_CHANNEL) / sizeof(p_tc->TC_CHANNEL[0])));

	p_tc->TC_CHANNEL[ul_channel].TC_RC = ul_value;
  401304:	eb00 1181 	add.w	r1, r0, r1, lsl #6
  401308:	61ca      	str	r2, [r1, #28]
  40130a:	4770      	bx	lr

0040130c <tc_enable_interrupt>:

	/* Validate inputs. */
	Assert(p_tc);
	Assert(ul_channel <
			(sizeof(p_tc->TC_CHANNEL) / sizeof(p_tc->TC_CHANNEL[0])));
	tc_channel = p_tc->TC_CHANNEL + ul_channel;
  40130c:	eb00 1181 	add.w	r1, r0, r1, lsl #6
	tc_channel->TC_IER = ul_sources;
  401310:	624a      	str	r2, [r1, #36]	; 0x24
  401312:	4770      	bx	lr

00401314 <tc_get_status>:
	/* Validate inputs. */
	Assert(p_tc);
	Assert(ul_channel <
			(sizeof(p_tc->TC_CHANNEL) / sizeof(p_tc->TC_CHANNEL[0])));
			
	tc_channel = p_tc->TC_CHANNEL + ul_channel;
  401314:	eb00 1181 	add.w	r1, r0, r1, lsl #6
	return tc_channel->TC_SR;
  401318:	6a08      	ldr	r0, [r1, #32]
}
  40131a:	4770      	bx	lr

0040131c <tc_find_mck_divisor>:
		uint32_t ul_freq,
		uint32_t ul_mck,
		uint32_t *p_uldiv,
		uint32_t *p_ultcclks,
		uint32_t ul_boardmck)
{
  40131c:	b4f0      	push	{r4, r5, r6, r7}
  40131e:	b086      	sub	sp, #24
	const uint32_t divisors[5] = { 2, 8, 32, 128,
  401320:	2402      	movs	r4, #2
  401322:	9401      	str	r4, [sp, #4]
  401324:	2408      	movs	r4, #8
  401326:	9402      	str	r4, [sp, #8]
  401328:	2420      	movs	r4, #32
  40132a:	9403      	str	r4, [sp, #12]
  40132c:	2480      	movs	r4, #128	; 0x80
  40132e:	9404      	str	r4, [sp, #16]
			ul_boardmck / FREQ_SLOW_CLOCK_EXT };
  401330:	9c0a      	ldr	r4, [sp, #40]	; 0x28
  401332:	0be4      	lsrs	r4, r4, #15
	const uint32_t divisors[5] = { 2, 8, 32, 128,
  401334:	9405      	str	r4, [sp, #20]
	for (ul_index = 0;
			ul_index < (sizeof(divisors) / sizeof(divisors[0]));
			ul_index++) {
		ul_high = ul_mck / divisors[ul_index];
		ul_low  = ul_high / TC_DIV_FACTOR;
		if (ul_freq > ul_high) {
  401336:	ebb0 0f51 	cmp.w	r0, r1, lsr #1
  40133a:	d814      	bhi.n	401366 <tc_find_mck_divisor+0x4a>
  40133c:	0c4c      	lsrs	r4, r1, #17
			return 0;
		} else if (ul_freq >= ul_low) {
  40133e:	42a0      	cmp	r0, r4
  401340:	d217      	bcs.n	401372 <tc_find_mck_divisor+0x56>
  401342:	2501      	movs	r5, #1
		ul_high = ul_mck / divisors[ul_index];
  401344:	af01      	add	r7, sp, #4
  401346:	f857 4025 	ldr.w	r4, [r7, r5, lsl #2]
  40134a:	fbb1 f4f4 	udiv	r4, r1, r4
		ul_low  = ul_high / TC_DIV_FACTOR;
  40134e:	0c26      	lsrs	r6, r4, #16
		if (ul_freq > ul_high) {
  401350:	4284      	cmp	r4, r0
  401352:	d30a      	bcc.n	40136a <tc_find_mck_divisor+0x4e>
		} else if (ul_freq >= ul_low) {
  401354:	4286      	cmp	r6, r0
  401356:	d90d      	bls.n	401374 <tc_find_mck_divisor+0x58>
			ul_index++) {
  401358:	3501      	adds	r5, #1
	for (ul_index = 0;
  40135a:	2d05      	cmp	r5, #5
  40135c:	d1f3      	bne.n	401346 <tc_find_mck_divisor+0x2a>
			break;
		}
	}
	if (ul_index >= (sizeof(divisors) / sizeof(divisors[0]))) {
		return 0;
  40135e:	2000      	movs	r0, #0
	if (p_ultcclks) {
		*p_ultcclks = ul_index;
	}

	return 1;
}
  401360:	b006      	add	sp, #24
  401362:	bcf0      	pop	{r4, r5, r6, r7}
  401364:	4770      	bx	lr
			return 0;
  401366:	2000      	movs	r0, #0
  401368:	e7fa      	b.n	401360 <tc_find_mck_divisor+0x44>
  40136a:	2000      	movs	r0, #0
  40136c:	e7f8      	b.n	401360 <tc_find_mck_divisor+0x44>
	return 1;
  40136e:	2001      	movs	r0, #1
  401370:	e7f6      	b.n	401360 <tc_find_mck_divisor+0x44>
	for (ul_index = 0;
  401372:	2500      	movs	r5, #0
	if (p_uldiv) {
  401374:	b12a      	cbz	r2, 401382 <tc_find_mck_divisor+0x66>
		*p_uldiv = divisors[ul_index];
  401376:	a906      	add	r1, sp, #24
  401378:	eb01 0185 	add.w	r1, r1, r5, lsl #2
  40137c:	f851 1c14 	ldr.w	r1, [r1, #-20]
  401380:	6011      	str	r1, [r2, #0]
	if (p_ultcclks) {
  401382:	2b00      	cmp	r3, #0
  401384:	d0f3      	beq.n	40136e <tc_find_mck_divisor+0x52>
		*p_ultcclks = ul_index;
  401386:	601d      	str	r5, [r3, #0]
	return 1;
  401388:	2001      	movs	r0, #1
  40138a:	e7e9      	b.n	401360 <tc_find_mck_divisor+0x44>

0040138c <uart_init>:
 *
 * \retval 0 Success.
 * \retval 1 Bad baud rate generator value.
 */
uint32_t uart_init(Uart *p_uart, const sam_uart_opt_t *p_uart_opt)
{
  40138c:	b410      	push	{r4}
	uint32_t cd = 0;

	/* Reset and disable receiver & transmitter */
	p_uart->UART_CR = UART_CR_RSTRX | UART_CR_RSTTX
  40138e:	23ac      	movs	r3, #172	; 0xac
  401390:	6003      	str	r3, [r0, #0]
			| UART_CR_RXDIS | UART_CR_TXDIS;

	/* Check and configure baudrate */
	/* Asynchronous, no oversampling */
	cd = (p_uart_opt->ul_mck / p_uart_opt->ul_baudrate) / UART_MCK_DIV;
  401392:	680b      	ldr	r3, [r1, #0]
  401394:	684a      	ldr	r2, [r1, #4]
  401396:	fbb3 f3f2 	udiv	r3, r3, r2
  40139a:	091b      	lsrs	r3, r3, #4
	if (cd < UART_MCK_DIV_MIN_FACTOR || cd > UART_MCK_DIV_MAX_FACTOR)
  40139c:	1e5c      	subs	r4, r3, #1
  40139e:	f64f 72fe 	movw	r2, #65534	; 0xfffe
  4013a2:	4294      	cmp	r4, r2
  4013a4:	d80b      	bhi.n	4013be <uart_init+0x32>
		return 1;

	p_uart->UART_BRGR = cd;
  4013a6:	6203      	str	r3, [r0, #32]
	/* Configure mode */
	p_uart->UART_MR = p_uart_opt->ul_mode;
  4013a8:	688b      	ldr	r3, [r1, #8]
  4013aa:	6043      	str	r3, [r0, #4]

#if (!SAMV71 && !SAMV70 && !SAME70 && !SAMS70)
	/* Disable PDC channel */
	p_uart->UART_PTCR = UART_PTCR_RXTDIS | UART_PTCR_TXTDIS;
  4013ac:	f240 2302 	movw	r3, #514	; 0x202
  4013b0:	f8c0 3120 	str.w	r3, [r0, #288]	; 0x120
#endif

	/* Enable receiver and transmitter */
	p_uart->UART_CR = UART_CR_RXEN | UART_CR_TXEN;
  4013b4:	2350      	movs	r3, #80	; 0x50
  4013b6:	6003      	str	r3, [r0, #0]

	return 0;
  4013b8:	2000      	movs	r0, #0
}
  4013ba:	bc10      	pop	{r4}
  4013bc:	4770      	bx	lr
		return 1;
  4013be:	2001      	movs	r0, #1
  4013c0:	e7fb      	b.n	4013ba <uart_init+0x2e>

004013c2 <uart_write>:
 * \retval 1 I/O Failure, UART is not ready.
 */
uint32_t uart_write(Uart *p_uart, const uint8_t uc_data)
{
	/* Check if the transmitter is ready */
	if (!(p_uart->UART_SR & UART_SR_TXRDY))
  4013c2:	6943      	ldr	r3, [r0, #20]
  4013c4:	f013 0f02 	tst.w	r3, #2
		return 1;

	/* Send character */
	p_uart->UART_THR = uc_data;
  4013c8:	bf1a      	itte	ne
  4013ca:	61c1      	strne	r1, [r0, #28]
	return 0;
  4013cc:	2000      	movne	r0, #0
		return 1;
  4013ce:	2001      	moveq	r0, #1
}
  4013d0:	4770      	bx	lr

004013d2 <uart_read>:
 * \retval 1 I/O Failure, UART is not ready.
 */
uint32_t uart_read(Uart *p_uart, uint8_t *puc_data)
{
	/* Check if the receiver is ready */
	if ((p_uart->UART_SR & UART_SR_RXRDY) == 0)
  4013d2:	6943      	ldr	r3, [r0, #20]
  4013d4:	f013 0f01 	tst.w	r3, #1
		return 1;

	/* Read character */
	*puc_data = (uint8_t) p_uart->UART_RHR;
  4013d8:	bf1d      	ittte	ne
  4013da:	6983      	ldrne	r3, [r0, #24]
  4013dc:	700b      	strbne	r3, [r1, #0]
	return 0;
  4013de:	2000      	movne	r0, #0
		return 1;
  4013e0:	2001      	moveq	r0, #1
}
  4013e2:	4770      	bx	lr

004013e4 <usart_write>:
 * \retval 0 on success.
 * \retval 1 on failure.
 */
uint32_t usart_write(Usart *p_usart, uint32_t c)
{
	if (!(p_usart->US_CSR & US_CSR_TXRDY)) {
  4013e4:	6943      	ldr	r3, [r0, #20]
  4013e6:	f013 0f02 	tst.w	r3, #2
		return 1;
	}

	p_usart->US_THR = US_THR_TXCHR(c);
  4013ea:	bf1d      	ittte	ne
  4013ec:	f3c1 0108 	ubfxne	r1, r1, #0, #9
  4013f0:	61c1      	strne	r1, [r0, #28]
	return 0;
  4013f2:	2000      	movne	r0, #0
		return 1;
  4013f4:	2001      	moveq	r0, #1
}
  4013f6:	4770      	bx	lr

004013f8 <usart_read>:
 * \retval 0 on success.
 * \retval 1 if no data is available or errors.
 */
uint32_t usart_read(Usart *p_usart, uint32_t *c)
{
	if (!(p_usart->US_CSR & US_CSR_RXRDY)) {
  4013f8:	6943      	ldr	r3, [r0, #20]
  4013fa:	f013 0f01 	tst.w	r3, #1
  4013fe:	d005      	beq.n	40140c <usart_read+0x14>
		return 1;
	}

	/* Read character */
	*c = p_usart->US_RHR & US_RHR_RXCHR_Msk;
  401400:	6983      	ldr	r3, [r0, #24]
  401402:	f3c3 0308 	ubfx	r3, r3, #0, #9
  401406:	600b      	str	r3, [r1, #0]

	return 0;
  401408:	2000      	movs	r0, #0
  40140a:	4770      	bx	lr
		return 1;
  40140c:	2001      	movs	r0, #1
}
  40140e:	4770      	bx	lr

00401410 <Dummy_Handler>:

/**
 * \brief Default interrupt handler for unused IRQs.
 */
void Dummy_Handler(void)
{
  401410:	e7fe      	b.n	401410 <Dummy_Handler>
	...

00401414 <Reset_Handler>:
{
  401414:	b508      	push	{r3, lr}
	if (pSrc > pDest) {
  401416:	4b21      	ldr	r3, [pc, #132]	; (40149c <Reset_Handler+0x88>)
  401418:	4a21      	ldr	r2, [pc, #132]	; (4014a0 <Reset_Handler+0x8c>)
  40141a:	429a      	cmp	r2, r3
  40141c:	d928      	bls.n	401470 <Reset_Handler+0x5c>
		for (; pDest < &_erelocate;) {
  40141e:	4b21      	ldr	r3, [pc, #132]	; (4014a4 <Reset_Handler+0x90>)
  401420:	4a1e      	ldr	r2, [pc, #120]	; (40149c <Reset_Handler+0x88>)
  401422:	429a      	cmp	r2, r3
  401424:	d20c      	bcs.n	401440 <Reset_Handler+0x2c>
  401426:	3b01      	subs	r3, #1
  401428:	1a9b      	subs	r3, r3, r2
  40142a:	f023 0303 	bic.w	r3, r3, #3
  40142e:	3304      	adds	r3, #4
  401430:	4413      	add	r3, r2
  401432:	491b      	ldr	r1, [pc, #108]	; (4014a0 <Reset_Handler+0x8c>)
			*pDest++ = *pSrc++;
  401434:	f851 0b04 	ldr.w	r0, [r1], #4
  401438:	f842 0b04 	str.w	r0, [r2], #4
		for (; pDest < &_erelocate;) {
  40143c:	429a      	cmp	r2, r3
  40143e:	d1f9      	bne.n	401434 <Reset_Handler+0x20>

    No Operation does nothing. This instruction can be used for code alignment purposes.
 */
__attribute__( ( always_inline ) ) __STATIC_INLINE void __NOP(void)
{
  __ASM volatile ("nop");
  401440:	bf00      	nop
	for (pDest = &_szero; pDest < &_ezero;) {
  401442:	4b19      	ldr	r3, [pc, #100]	; (4014a8 <Reset_Handler+0x94>)
  401444:	4a19      	ldr	r2, [pc, #100]	; (4014ac <Reset_Handler+0x98>)
  401446:	429a      	cmp	r2, r3
  401448:	d20a      	bcs.n	401460 <Reset_Handler+0x4c>
  40144a:	3b01      	subs	r3, #1
  40144c:	1a9b      	subs	r3, r3, r2
  40144e:	f023 0303 	bic.w	r3, r3, #3
  401452:	3304      	adds	r3, #4
  401454:	4413      	add	r3, r2
		*pDest++ = 0;
  401456:	2100      	movs	r1, #0
  401458:	f842 1b04 	str.w	r1, [r2], #4
	for (pDest = &_szero; pDest < &_ezero;) {
  40145c:	429a      	cmp	r2, r3
  40145e:	d1fb      	bne.n	401458 <Reset_Handler+0x44>
	SCB->VTOR = ((uint32_t) pSrc);
  401460:	4b13      	ldr	r3, [pc, #76]	; (4014b0 <Reset_Handler+0x9c>)
  401462:	4a14      	ldr	r2, [pc, #80]	; (4014b4 <Reset_Handler+0xa0>)
  401464:	609a      	str	r2, [r3, #8]
	__libc_init_array();
  401466:	4b14      	ldr	r3, [pc, #80]	; (4014b8 <Reset_Handler+0xa4>)
  401468:	4798      	blx	r3
	main();
  40146a:	4b14      	ldr	r3, [pc, #80]	; (4014bc <Reset_Handler+0xa8>)
  40146c:	4798      	blx	r3
  40146e:	e7fe      	b.n	40146e <Reset_Handler+0x5a>
	} else if (pSrc < pDest) {
  401470:	4b0a      	ldr	r3, [pc, #40]	; (40149c <Reset_Handler+0x88>)
  401472:	4a0b      	ldr	r2, [pc, #44]	; (4014a0 <Reset_Handler+0x8c>)
  401474:	429a      	cmp	r2, r3
  401476:	d2e3      	bcs.n	401440 <Reset_Handler+0x2c>
		uint32_t nb_bytes = (uint32_t)&_erelocate - (uint32_t)&_srelocate;
  401478:	4b0a      	ldr	r3, [pc, #40]	; (4014a4 <Reset_Handler+0x90>)
  40147a:	4808      	ldr	r0, [pc, #32]	; (40149c <Reset_Handler+0x88>)
  40147c:	1a18      	subs	r0, r3, r0
		pSrc = (uint32_t*)((uint32_t)pSrc + nb_bytes) - 1;
  40147e:	4611      	mov	r1, r2
  401480:	3a04      	subs	r2, #4
  401482:	4402      	add	r2, r0
		for (;nb_bytes;nb_bytes -= 4) {
  401484:	2800      	cmp	r0, #0
  401486:	d0db      	beq.n	401440 <Reset_Handler+0x2c>
  401488:	f1c1 0104 	rsb	r1, r1, #4
			*pDest-- = *pSrc--;
  40148c:	f852 0904 	ldr.w	r0, [r2], #-4
  401490:	f843 0d04 	str.w	r0, [r3, #-4]!
		for (;nb_bytes;nb_bytes -= 4) {
  401494:	42ca      	cmn	r2, r1
  401496:	d1f9      	bne.n	40148c <Reset_Handler+0x78>
  401498:	e7d2      	b.n	401440 <Reset_Handler+0x2c>
  40149a:	bf00      	nop
  40149c:	20000000 	.word	0x20000000
  4014a0:	004079d4 	.word	0x004079d4
  4014a4:	200009ec 	.word	0x200009ec
  4014a8:	20000f10 	.word	0x20000f10
  4014ac:	200009ec 	.word	0x200009ec
  4014b0:	e000ed00 	.word	0xe000ed00
  4014b4:	00400000 	.word	0x00400000
  4014b8:	004027e5 	.word	0x004027e5
  4014bc:	00401fb5 	.word	0x00401fb5

004014c0 <SystemCoreClockUpdate>:
 * \brief Get Core Clock Frequency.
 */
void SystemCoreClockUpdate( void )
{
	/* Determine clock frequency according to clock register values */
	switch ( PMC->PMC_MCKR & (uint32_t) PMC_MCKR_CSS_Msk ) {
  4014c0:	4b3c      	ldr	r3, [pc, #240]	; (4015b4 <SystemCoreClockUpdate+0xf4>)
  4014c2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
  4014c4:	f003 0303 	and.w	r3, r3, #3
  4014c8:	2b03      	cmp	r3, #3
  4014ca:	d80e      	bhi.n	4014ea <SystemCoreClockUpdate+0x2a>
  4014cc:	e8df f003 	tbb	[pc, r3]
  4014d0:	38381c02 	.word	0x38381c02
	case PMC_MCKR_CSS_SLOW_CLK: /* Slow clock */
			if ( SUPC->SUPC_SR & SUPC_SR_OSCSEL ) {
  4014d4:	4b38      	ldr	r3, [pc, #224]	; (4015b8 <SystemCoreClockUpdate+0xf8>)
  4014d6:	695b      	ldr	r3, [r3, #20]
  4014d8:	f013 0f80 	tst.w	r3, #128	; 0x80
				SystemCoreClock = CHIP_FREQ_XTAL_32K;
  4014dc:	bf14      	ite	ne
  4014de:	f44f 4200 	movne.w	r2, #32768	; 0x8000
			} else {
				SystemCoreClock = CHIP_FREQ_SLCK_RC;
  4014e2:	f44f 42fa 	moveq.w	r2, #32000	; 0x7d00
  4014e6:	4b35      	ldr	r3, [pc, #212]	; (4015bc <SystemCoreClockUpdate+0xfc>)
  4014e8:	601a      	str	r2, [r3, #0]
		
	default:
		break;
	}

	if ( (PMC->PMC_MCKR & PMC_MCKR_PRES_Msk) == PMC_MCKR_PRES_CLK_3 ) {
  4014ea:	4b32      	ldr	r3, [pc, #200]	; (4015b4 <SystemCoreClockUpdate+0xf4>)
  4014ec:	6b1b      	ldr	r3, [r3, #48]	; 0x30
  4014ee:	f003 0370 	and.w	r3, r3, #112	; 0x70
  4014f2:	2b70      	cmp	r3, #112	; 0x70
  4014f4:	d055      	beq.n	4015a2 <SystemCoreClockUpdate+0xe2>
		SystemCoreClock /= 3U;
	} else {
		SystemCoreClock >>=
			((PMC->PMC_MCKR & PMC_MCKR_PRES_Msk) >> PMC_MCKR_PRES_Pos);
  4014f6:	4b2f      	ldr	r3, [pc, #188]	; (4015b4 <SystemCoreClockUpdate+0xf4>)
  4014f8:	6b1a      	ldr	r2, [r3, #48]	; 0x30
		SystemCoreClock >>=
  4014fa:	4930      	ldr	r1, [pc, #192]	; (4015bc <SystemCoreClockUpdate+0xfc>)
			((PMC->PMC_MCKR & PMC_MCKR_PRES_Msk) >> PMC_MCKR_PRES_Pos);
  4014fc:	f3c2 1202 	ubfx	r2, r2, #4, #3
		SystemCoreClock >>=
  401500:	680b      	ldr	r3, [r1, #0]
  401502:	40d3      	lsrs	r3, r2
  401504:	600b      	str	r3, [r1, #0]
  401506:	4770      	bx	lr
		if ( PMC->CKGR_MOR & CKGR_MOR_MOSCSEL ) {
  401508:	4b2a      	ldr	r3, [pc, #168]	; (4015b4 <SystemCoreClockUpdate+0xf4>)
  40150a:	6a1b      	ldr	r3, [r3, #32]
  40150c:	f013 7f80 	tst.w	r3, #16777216	; 0x1000000
  401510:	d003      	beq.n	40151a <SystemCoreClockUpdate+0x5a>
			SystemCoreClock = CHIP_FREQ_XTAL;
  401512:	4a2b      	ldr	r2, [pc, #172]	; (4015c0 <SystemCoreClockUpdate+0x100>)
  401514:	4b29      	ldr	r3, [pc, #164]	; (4015bc <SystemCoreClockUpdate+0xfc>)
  401516:	601a      	str	r2, [r3, #0]
  401518:	e7e7      	b.n	4014ea <SystemCoreClockUpdate+0x2a>
			SystemCoreClock = CHIP_FREQ_MAINCK_RC_4MHZ;
  40151a:	4a2a      	ldr	r2, [pc, #168]	; (4015c4 <SystemCoreClockUpdate+0x104>)
  40151c:	4b27      	ldr	r3, [pc, #156]	; (4015bc <SystemCoreClockUpdate+0xfc>)
  40151e:	601a      	str	r2, [r3, #0]
			switch ( PMC->CKGR_MOR & CKGR_MOR_MOSCRCF_Msk ) {
  401520:	4b24      	ldr	r3, [pc, #144]	; (4015b4 <SystemCoreClockUpdate+0xf4>)
  401522:	6a1b      	ldr	r3, [r3, #32]
  401524:	f003 0370 	and.w	r3, r3, #112	; 0x70
  401528:	2b10      	cmp	r3, #16
  40152a:	d005      	beq.n	401538 <SystemCoreClockUpdate+0x78>
  40152c:	2b20      	cmp	r3, #32
  40152e:	d1dc      	bne.n	4014ea <SystemCoreClockUpdate+0x2a>
				SystemCoreClock = CHIP_FREQ_MAINCK_RC_12MHZ;
  401530:	4a23      	ldr	r2, [pc, #140]	; (4015c0 <SystemCoreClockUpdate+0x100>)
  401532:	4b22      	ldr	r3, [pc, #136]	; (4015bc <SystemCoreClockUpdate+0xfc>)
  401534:	601a      	str	r2, [r3, #0]
			break;
  401536:	e7d8      	b.n	4014ea <SystemCoreClockUpdate+0x2a>
				SystemCoreClock = CHIP_FREQ_MAINCK_RC_8MHZ;
  401538:	4a23      	ldr	r2, [pc, #140]	; (4015c8 <SystemCoreClockUpdate+0x108>)
  40153a:	4b20      	ldr	r3, [pc, #128]	; (4015bc <SystemCoreClockUpdate+0xfc>)
  40153c:	601a      	str	r2, [r3, #0]
			break;
  40153e:	e7d4      	b.n	4014ea <SystemCoreClockUpdate+0x2a>
			if ( PMC->CKGR_MOR & CKGR_MOR_MOSCSEL ) {
  401540:	4b1c      	ldr	r3, [pc, #112]	; (4015b4 <SystemCoreClockUpdate+0xf4>)
  401542:	6a1b      	ldr	r3, [r3, #32]
  401544:	f013 7f80 	tst.w	r3, #16777216	; 0x1000000
  401548:	d018      	beq.n	40157c <SystemCoreClockUpdate+0xbc>
				SystemCoreClock = CHIP_FREQ_XTAL;
  40154a:	4a1d      	ldr	r2, [pc, #116]	; (4015c0 <SystemCoreClockUpdate+0x100>)
  40154c:	4b1b      	ldr	r3, [pc, #108]	; (4015bc <SystemCoreClockUpdate+0xfc>)
  40154e:	601a      	str	r2, [r3, #0]
			if ( (uint32_t)(PMC->PMC_MCKR & (uint32_t) PMC_MCKR_CSS_Msk) ==
  401550:	4b18      	ldr	r3, [pc, #96]	; (4015b4 <SystemCoreClockUpdate+0xf4>)
  401552:	6b1b      	ldr	r3, [r3, #48]	; 0x30
  401554:	f003 0303 	and.w	r3, r3, #3
  401558:	2b02      	cmp	r3, #2
				SystemCoreClock *= ((((PMC->CKGR_PLLAR) & CKGR_PLLAR_MULA_Msk)
  40155a:	4a16      	ldr	r2, [pc, #88]	; (4015b4 <SystemCoreClockUpdate+0xf4>)
  40155c:	bf07      	ittee	eq
  40155e:	6a91      	ldreq	r1, [r2, #40]	; 0x28
				SystemCoreClock /= ((((PMC->CKGR_PLLAR) & CKGR_PLLAR_DIVA_Msk)
  401560:	6a92      	ldreq	r2, [r2, #40]	; 0x28
				SystemCoreClock *= ((((PMC->CKGR_PLLBR) & CKGR_PLLBR_MULB_Msk)
  401562:	6ad1      	ldrne	r1, [r2, #44]	; 0x2c
				SystemCoreClock /= ((((PMC->CKGR_PLLBR) & CKGR_PLLBR_DIVB_Msk)
  401564:	6ad2      	ldrne	r2, [r2, #44]	; 0x2c
  401566:	4815      	ldr	r0, [pc, #84]	; (4015bc <SystemCoreClockUpdate+0xfc>)
						>> CKGR_PLLBR_MULB_Pos) + 1U);
  401568:	f3c1 410a 	ubfx	r1, r1, #16, #11
				SystemCoreClock *= ((((PMC->CKGR_PLLBR) & CKGR_PLLBR_MULB_Msk)
  40156c:	6803      	ldr	r3, [r0, #0]
  40156e:	fb01 3303 	mla	r3, r1, r3, r3
						>> CKGR_PLLBR_DIVB_Pos));
  401572:	b2d2      	uxtb	r2, r2
				SystemCoreClock /= ((((PMC->CKGR_PLLBR) & CKGR_PLLBR_DIVB_Msk)
  401574:	fbb3 f3f2 	udiv	r3, r3, r2
  401578:	6003      	str	r3, [r0, #0]
  40157a:	e7b6      	b.n	4014ea <SystemCoreClockUpdate+0x2a>
				SystemCoreClock = CHIP_FREQ_MAINCK_RC_4MHZ;
  40157c:	4a11      	ldr	r2, [pc, #68]	; (4015c4 <SystemCoreClockUpdate+0x104>)
  40157e:	4b0f      	ldr	r3, [pc, #60]	; (4015bc <SystemCoreClockUpdate+0xfc>)
  401580:	601a      	str	r2, [r3, #0]
				switch ( PMC->CKGR_MOR & CKGR_MOR_MOSCRCF_Msk ) {
  401582:	4b0c      	ldr	r3, [pc, #48]	; (4015b4 <SystemCoreClockUpdate+0xf4>)
  401584:	6a1b      	ldr	r3, [r3, #32]
  401586:	f003 0370 	and.w	r3, r3, #112	; 0x70
  40158a:	2b10      	cmp	r3, #16
  40158c:	d005      	beq.n	40159a <SystemCoreClockUpdate+0xda>
  40158e:	2b20      	cmp	r3, #32
  401590:	d1de      	bne.n	401550 <SystemCoreClockUpdate+0x90>
					SystemCoreClock = CHIP_FREQ_MAINCK_RC_12MHZ;
  401592:	4a0b      	ldr	r2, [pc, #44]	; (4015c0 <SystemCoreClockUpdate+0x100>)
  401594:	4b09      	ldr	r3, [pc, #36]	; (4015bc <SystemCoreClockUpdate+0xfc>)
  401596:	601a      	str	r2, [r3, #0]
					break;
  401598:	e7da      	b.n	401550 <SystemCoreClockUpdate+0x90>
					SystemCoreClock = CHIP_FREQ_MAINCK_RC_8MHZ;
  40159a:	4a0b      	ldr	r2, [pc, #44]	; (4015c8 <SystemCoreClockUpdate+0x108>)
  40159c:	4b07      	ldr	r3, [pc, #28]	; (4015bc <SystemCoreClockUpdate+0xfc>)
  40159e:	601a      	str	r2, [r3, #0]
					break;
  4015a0:	e7d6      	b.n	401550 <SystemCoreClockUpdate+0x90>
		SystemCoreClock /= 3U;
  4015a2:	4a06      	ldr	r2, [pc, #24]	; (4015bc <SystemCoreClockUpdate+0xfc>)
  4015a4:	6813      	ldr	r3, [r2, #0]
  4015a6:	4909      	ldr	r1, [pc, #36]	; (4015cc <SystemCoreClockUpdate+0x10c>)
  4015a8:	fba1 1303 	umull	r1, r3, r1, r3
  4015ac:	085b      	lsrs	r3, r3, #1
  4015ae:	6013      	str	r3, [r2, #0]
  4015b0:	4770      	bx	lr
  4015b2:	bf00      	nop
  4015b4:	400e0400 	.word	0x400e0400
  4015b8:	400e1410 	.word	0x400e1410
  4015bc:	20000014 	.word	0x20000014
  4015c0:	00b71b00 	.word	0x00b71b00
  4015c4:	003d0900 	.word	0x003d0900
  4015c8:	007a1200 	.word	0x007a1200
  4015cc:	aaaaaaab 	.word	0xaaaaaaab

004015d0 <system_init_flash>:
				}
			}
		}
	}
#else
	if ( ul_clk < CHIP_FREQ_FWS_0 ) {
  4015d0:	4b1a      	ldr	r3, [pc, #104]	; (40163c <system_init_flash+0x6c>)
  4015d2:	4298      	cmp	r0, r3
  4015d4:	d914      	bls.n	401600 <system_init_flash+0x30>
		EFC0->EEFC_FMR = EEFC_FMR_FWS(0)|EEFC_FMR_CLOE;
		EFC1->EEFC_FMR = EEFC_FMR_FWS(0)|EEFC_FMR_CLOE;
	} else {
		if ( ul_clk < CHIP_FREQ_FWS_1 ) {
  4015d6:	4b1a      	ldr	r3, [pc, #104]	; (401640 <system_init_flash+0x70>)
  4015d8:	4298      	cmp	r0, r3
  4015da:	d919      	bls.n	401610 <system_init_flash+0x40>
			EFC0->EEFC_FMR = EEFC_FMR_FWS(1)|EEFC_FMR_CLOE;
			EFC1->EEFC_FMR = EEFC_FMR_FWS(1)|EEFC_FMR_CLOE;
		} else {
			if ( ul_clk < CHIP_FREQ_FWS_2 ) {
  4015dc:	4b19      	ldr	r3, [pc, #100]	; (401644 <system_init_flash+0x74>)
  4015de:	4298      	cmp	r0, r3
  4015e0:	d91d      	bls.n	40161e <system_init_flash+0x4e>
				EFC0->EEFC_FMR = EEFC_FMR_FWS(2)|EEFC_FMR_CLOE;
				EFC1->EEFC_FMR = EEFC_FMR_FWS(2)|EEFC_FMR_CLOE;
			} else {
				if ( ul_clk < CHIP_FREQ_FWS_3 ) {
  4015e2:	4b19      	ldr	r3, [pc, #100]	; (401648 <system_init_flash+0x78>)
  4015e4:	4298      	cmp	r0, r3
  4015e6:	d921      	bls.n	40162c <system_init_flash+0x5c>
					EFC0->EEFC_FMR = EEFC_FMR_FWS(3)|EEFC_FMR_CLOE;
					EFC1->EEFC_FMR = EEFC_FMR_FWS(3)|EEFC_FMR_CLOE;
				} else {
					if ( ul_clk < CHIP_FREQ_FWS_4 ) {
  4015e8:	4b18      	ldr	r3, [pc, #96]	; (40164c <system_init_flash+0x7c>)
  4015ea:	4298      	cmp	r0, r3
						EFC0->EEFC_FMR = EEFC_FMR_FWS(4)|EEFC_FMR_CLOE;
  4015ec:	bf94      	ite	ls
  4015ee:	f04f 2304 	movls.w	r3, #67109888	; 0x4000400
						EFC1->EEFC_FMR = EEFC_FMR_FWS(4)|EEFC_FMR_CLOE;
					} else {
						EFC0->EEFC_FMR = EEFC_FMR_FWS(5)|EEFC_FMR_CLOE;
  4015f2:	4b17      	ldrhi	r3, [pc, #92]	; (401650 <system_init_flash+0x80>)
  4015f4:	4a17      	ldr	r2, [pc, #92]	; (401654 <system_init_flash+0x84>)
  4015f6:	6013      	str	r3, [r2, #0]
						EFC1->EEFC_FMR = EEFC_FMR_FWS(5)|EEFC_FMR_CLOE;
  4015f8:	f502 7200 	add.w	r2, r2, #512	; 0x200
  4015fc:	6013      	str	r3, [r2, #0]
  4015fe:	4770      	bx	lr
		EFC0->EEFC_FMR = EEFC_FMR_FWS(0)|EEFC_FMR_CLOE;
  401600:	f04f 6380 	mov.w	r3, #67108864	; 0x4000000
  401604:	4a13      	ldr	r2, [pc, #76]	; (401654 <system_init_flash+0x84>)
  401606:	6013      	str	r3, [r2, #0]
		EFC1->EEFC_FMR = EEFC_FMR_FWS(0)|EEFC_FMR_CLOE;
  401608:	f502 7200 	add.w	r2, r2, #512	; 0x200
  40160c:	6013      	str	r3, [r2, #0]
  40160e:	4770      	bx	lr
			EFC0->EEFC_FMR = EEFC_FMR_FWS(1)|EEFC_FMR_CLOE;
  401610:	4b11      	ldr	r3, [pc, #68]	; (401658 <system_init_flash+0x88>)
  401612:	4a10      	ldr	r2, [pc, #64]	; (401654 <system_init_flash+0x84>)
  401614:	6013      	str	r3, [r2, #0]
			EFC1->EEFC_FMR = EEFC_FMR_FWS(1)|EEFC_FMR_CLOE;
  401616:	f502 7200 	add.w	r2, r2, #512	; 0x200
  40161a:	6013      	str	r3, [r2, #0]
  40161c:	4770      	bx	lr
				EFC0->EEFC_FMR = EEFC_FMR_FWS(2)|EEFC_FMR_CLOE;
  40161e:	4b0f      	ldr	r3, [pc, #60]	; (40165c <system_init_flash+0x8c>)
  401620:	4a0c      	ldr	r2, [pc, #48]	; (401654 <system_init_flash+0x84>)
  401622:	6013      	str	r3, [r2, #0]
				EFC1->EEFC_FMR = EEFC_FMR_FWS(2)|EEFC_FMR_CLOE;
  401624:	f502 7200 	add.w	r2, r2, #512	; 0x200
  401628:	6013      	str	r3, [r2, #0]
  40162a:	4770      	bx	lr
					EFC0->EEFC_FMR = EEFC_FMR_FWS(3)|EEFC_FMR_CLOE;
  40162c:	4b0c      	ldr	r3, [pc, #48]	; (401660 <system_init_flash+0x90>)
  40162e:	4a09      	ldr	r2, [pc, #36]	; (401654 <system_init_flash+0x84>)
  401630:	6013      	str	r3, [r2, #0]
					EFC1->EEFC_FMR = EEFC_FMR_FWS(3)|EEFC_FMR_CLOE;
  401632:	f502 7200 	add.w	r2, r2, #512	; 0x200
  401636:	6013      	str	r3, [r2, #0]
  401638:	4770      	bx	lr
  40163a:	bf00      	nop
  40163c:	01312cff 	.word	0x01312cff
  401640:	026259ff 	.word	0x026259ff
  401644:	039386ff 	.word	0x039386ff
  401648:	04c4b3ff 	.word	0x04c4b3ff
  40164c:	05f5e0ff 	.word	0x05f5e0ff
  401650:	04000500 	.word	0x04000500
  401654:	400e0a00 	.word	0x400e0a00
  401658:	04000100 	.word	0x04000100
  40165c:	04000200 	.word	0x04000200
  401660:	04000300 	.word	0x04000300

00401664 <_sbrk>:
{
	static unsigned char *heap = NULL;
	unsigned char *prev_heap;
	int ramend = (int)&__ram_end__;

	if (heap == NULL) {
  401664:	4b0a      	ldr	r3, [pc, #40]	; (401690 <_sbrk+0x2c>)
  401666:	681b      	ldr	r3, [r3, #0]
  401668:	b153      	cbz	r3, 401680 <_sbrk+0x1c>
		heap = (unsigned char *)&_end;
	}
	prev_heap = heap;
  40166a:	4b09      	ldr	r3, [pc, #36]	; (401690 <_sbrk+0x2c>)
  40166c:	681b      	ldr	r3, [r3, #0]

	if (((int)prev_heap + incr) > ramend) {
  40166e:	181a      	adds	r2, r3, r0
  401670:	4908      	ldr	r1, [pc, #32]	; (401694 <_sbrk+0x30>)
  401672:	4291      	cmp	r1, r2
  401674:	db08      	blt.n	401688 <_sbrk+0x24>
		return (caddr_t) -1;	
	}

	heap += incr;
  401676:	4610      	mov	r0, r2
  401678:	4a05      	ldr	r2, [pc, #20]	; (401690 <_sbrk+0x2c>)
  40167a:	6010      	str	r0, [r2, #0]

	return (caddr_t) prev_heap;
  40167c:	4618      	mov	r0, r3
  40167e:	4770      	bx	lr
		heap = (unsigned char *)&_end;
  401680:	4a05      	ldr	r2, [pc, #20]	; (401698 <_sbrk+0x34>)
  401682:	4b03      	ldr	r3, [pc, #12]	; (401690 <_sbrk+0x2c>)
  401684:	601a      	str	r2, [r3, #0]
  401686:	e7f0      	b.n	40166a <_sbrk+0x6>
		return (caddr_t) -1;	
  401688:	f04f 30ff 	mov.w	r0, #4294967295
}
  40168c:	4770      	bx	lr
  40168e:	bf00      	nop
  401690:	20000e44 	.word	0x20000e44
  401694:	20027ffc 	.word	0x20027ffc
  401698:	20003f10 	.word	0x20003f10

0040169c <_close>:
}

extern int _close(int file)
{
	return -1;
}
  40169c:	f04f 30ff 	mov.w	r0, #4294967295
  4016a0:	4770      	bx	lr

004016a2 <_fstat>:

extern int _fstat(int file, struct stat *st)
{
	st->st_mode = S_IFCHR;
  4016a2:	f44f 5300 	mov.w	r3, #8192	; 0x2000
  4016a6:	604b      	str	r3, [r1, #4]

	return 0;
}
  4016a8:	2000      	movs	r0, #0
  4016aa:	4770      	bx	lr

004016ac <_lseek>:
}

extern int _lseek(int file, int ptr, int dir)
{
	return 0;
}
  4016ac:	2000      	movs	r0, #0
  4016ae:	4770      	bx	lr

004016b0 <vReadSensor>:
 */ 

#include <asf.h>
#include "BeamBall.h"

void vReadSensor(void) {
  4016b0:	b570      	push	{r4, r5, r6, lr}
	pio_clear(PIOA,PIO_TRIGGER);
  4016b2:	4c0a      	ldr	r4, [pc, #40]	; (4016dc <vReadSensor+0x2c>)
  4016b4:	f44f 2100 	mov.w	r1, #524288	; 0x80000
  4016b8:	4620      	mov	r0, r4
  4016ba:	4d09      	ldr	r5, [pc, #36]	; (4016e0 <vReadSensor+0x30>)
  4016bc:	47a8      	blx	r5
	delay_us(2);
  4016be:	2012      	movs	r0, #18
  4016c0:	4e08      	ldr	r6, [pc, #32]	; (4016e4 <vReadSensor+0x34>)
  4016c2:	47b0      	blx	r6
	
	pio_set(PIOA,PIO_TRIGGER);
  4016c4:	f44f 2100 	mov.w	r1, #524288	; 0x80000
  4016c8:	4620      	mov	r0, r4
  4016ca:	4b07      	ldr	r3, [pc, #28]	; (4016e8 <vReadSensor+0x38>)
  4016cc:	4798      	blx	r3
	delay_us(10);
  4016ce:	2056      	movs	r0, #86	; 0x56
  4016d0:	47b0      	blx	r6
	pio_clear(PIOA,PIO_TRIGGER);
  4016d2:	f44f 2100 	mov.w	r1, #524288	; 0x80000
  4016d6:	4620      	mov	r0, r4
  4016d8:	47a8      	blx	r5
  4016da:	bd70      	pop	{r4, r5, r6, pc}
  4016dc:	400e0e00 	.word	0x400e0e00
  4016e0:	00400b8f 	.word	0x00400b8f
  4016e4:	20000001 	.word	0x20000001
  4016e8:	00400b8b 	.word	0x00400b8b

004016ec <vMalhaControle>:

//static int flag = 0;
int last_error = 0;
int integral = 0;

void vMalhaControle(double distance) {
  4016ec:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  4016f0:	b095      	sub	sp, #84	; 0x54

	int motorPos = 15;
	int iDist = (int) distance;
  4016f2:	4e32      	ldr	r6, [pc, #200]	; (4017bc <vMalhaControle+0xd0>)
  4016f4:	47b0      	blx	r6
  4016f6:	4604      	mov	r4, r0
	
	char buffer[50];
	sprintf (buffer, "%d", iDist);
  4016f8:	4602      	mov	r2, r0
  4016fa:	4931      	ldr	r1, [pc, #196]	; (4017c0 <vMalhaControle+0xd4>)
  4016fc:	a807      	add	r0, sp, #28
  4016fe:	4b31      	ldr	r3, [pc, #196]	; (4017c4 <vMalhaControle+0xd8>)
  401700:	4798      	blx	r3
	vWriteLCD(140, 100, (uint8_t*) buffer);
  401702:	aa07      	add	r2, sp, #28
  401704:	2164      	movs	r1, #100	; 0x64
  401706:	208c      	movs	r0, #140	; 0x8c
  401708:	4b2f      	ldr	r3, [pc, #188]	; (4017c8 <vMalhaControle+0xdc>)
  40170a:	4798      	blx	r3

 	int target = 10;

	double error = target - iDist;
  40170c:	f1c4 040a 	rsb	r4, r4, #10
  401710:	4d2e      	ldr	r5, [pc, #184]	; (4017cc <vMalhaControle+0xe0>)
  401712:	4620      	mov	r0, r4
  401714:	47a8      	blx	r5
  401716:	4681      	mov	r9, r0
  401718:	468a      	mov	sl, r1
	integral = integral + (error*1);
  40171a:	f8df 80c8 	ldr.w	r8, [pc, #200]	; 4017e4 <vMalhaControle+0xf8>
  40171e:	f8d8 0000 	ldr.w	r0, [r8]
  401722:	47a8      	blx	r5
  401724:	4f2a      	ldr	r7, [pc, #168]	; (4017d0 <vMalhaControle+0xe4>)
  401726:	464a      	mov	r2, r9
  401728:	4653      	mov	r3, sl
  40172a:	47b8      	blx	r7
  40172c:	47b0      	blx	r6
  40172e:	f8c8 0000 	str.w	r0, [r8]
	double derivative = (error - last_error)/1;
  401732:	f8df b0b4 	ldr.w	fp, [pc, #180]	; 4017e8 <vMalhaControle+0xfc>
  401736:	f8db 0000 	ldr.w	r0, [fp]
  40173a:	47a8      	blx	r5
  40173c:	4602      	mov	r2, r0
  40173e:	460b      	mov	r3, r1
  401740:	e9cd 9a00 	strd	r9, sl, [sp]
  401744:	4648      	mov	r0, r9
  401746:	4651      	mov	r1, sl
  401748:	f8df 90a0 	ldr.w	r9, [pc, #160]	; 4017ec <vMalhaControle+0x100>
  40174c:	47c8      	blx	r9
  40174e:	e9cd 0102 	strd	r0, r1, [sp, #8]
	int pid = getKP()*error + getKI()*integral + getKD()*derivative;// + bias
  401752:	4b20      	ldr	r3, [pc, #128]	; (4017d4 <vMalhaControle+0xe8>)
  401754:	4798      	blx	r3
  401756:	f8df a098 	ldr.w	sl, [pc, #152]	; 4017f0 <vMalhaControle+0x104>
  40175a:	4602      	mov	r2, r0
  40175c:	460b      	mov	r3, r1
  40175e:	e9dd 0100 	ldrd	r0, r1, [sp]
  401762:	47d0      	blx	sl
  401764:	e9cd 0104 	strd	r0, r1, [sp, #16]
  401768:	4b1b      	ldr	r3, [pc, #108]	; (4017d8 <vMalhaControle+0xec>)
  40176a:	4798      	blx	r3
  40176c:	e9cd 0100 	strd	r0, r1, [sp]
  401770:	f8d8 0000 	ldr.w	r0, [r8]
  401774:	47a8      	blx	r5
  401776:	e9dd 2300 	ldrd	r2, r3, [sp]
  40177a:	47d0      	blx	sl
  40177c:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
  401780:	47b8      	blx	r7
  401782:	4680      	mov	r8, r0
  401784:	4689      	mov	r9, r1
  401786:	4b15      	ldr	r3, [pc, #84]	; (4017dc <vMalhaControle+0xf0>)
  401788:	4798      	blx	r3
	last_error = error;
  40178a:	f8cb 4000 	str.w	r4, [fp]
	int pid = getKP()*error + getKI()*integral + getKD()*derivative;// + bias
  40178e:	4602      	mov	r2, r0
  401790:	460b      	mov	r3, r1
  401792:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
  401796:	47d0      	blx	sl
  401798:	4642      	mov	r2, r8
  40179a:	464b      	mov	r3, r9
  40179c:	47b8      	blx	r7
  40179e:	47b0      	blx	r6
	
	motorPos = - pid + INIT_DUTY_VALUE;
  4017a0:	f1c0 000d 	rsb	r0, r0, #13
  4017a4:	2812      	cmp	r0, #18
  4017a6:	bfa8      	it	ge
  4017a8:	2012      	movge	r0, #18
	// Update Motor position
	vRunMotor(motorPos);
}

void vRunMotor(int pos) {
	vPWMUpdateDuty(pos);
  4017aa:	280a      	cmp	r0, #10
  4017ac:	bfb8      	it	lt
  4017ae:	200a      	movlt	r0, #10
  4017b0:	4b0b      	ldr	r3, [pc, #44]	; (4017e0 <vMalhaControle+0xf4>)
  4017b2:	4798      	blx	r3
}
  4017b4:	b015      	add	sp, #84	; 0x54
  4017b6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  4017ba:	bf00      	nop
  4017bc:	00402795 	.word	0x00402795
  4017c0:	004076c0 	.word	0x004076c0
  4017c4:	00402a2d 	.word	0x00402a2d
  4017c8:	00401c89 	.word	0x00401c89
  4017cc:	004022a5 	.word	0x004022a5
  4017d0:	0040200d 	.word	0x0040200d
  4017d4:	00401aad 	.word	0x00401aad
  4017d8:	00401ac5 	.word	0x00401ac5
  4017dc:	00401ab9 	.word	0x00401ab9
  4017e0:	00401e5d 	.word	0x00401e5d
  4017e4:	20000e48 	.word	0x20000e48
  4017e8:	20000e4c 	.word	0x20000e4c
  4017ec:	00402009 	.word	0x00402009
  4017f0:	00402371 	.word	0x00402371

004017f4 <usart_serial_getchar>:
 * \param p_usart   Base address of the USART instance.
 * \param data   Data to read
 *
 */
static inline void usart_serial_getchar(usart_if p_usart, uint8_t *data)
{
  4017f4:	b5f0      	push	{r4, r5, r6, r7, lr}
  4017f6:	b083      	sub	sp, #12
  4017f8:	4605      	mov	r5, r0
  4017fa:	460c      	mov	r4, r1
	uint32_t val = 0;
  4017fc:	2300      	movs	r3, #0
  4017fe:	9301      	str	r3, [sp, #4]
	if (UART == (Uart*)p_usart) {
		while (uart_read((Uart*)p_usart, data));
	}
#else
# ifdef UART0
	if (UART0 == (Uart*)p_usart) {
  401800:	4b18      	ldr	r3, [pc, #96]	; (401864 <usart_serial_getchar+0x70>)
  401802:	4298      	cmp	r0, r3
  401804:	d00a      	beq.n	40181c <usart_serial_getchar+0x28>
		while (uart_read((Uart*)p_usart, data));
	}
# endif
# ifdef UART1
	if (UART1 == (Uart*)p_usart) {
  401806:	4b18      	ldr	r3, [pc, #96]	; (401868 <usart_serial_getchar+0x74>)
  401808:	4298      	cmp	r0, r3
  40180a:	d00f      	beq.n	40182c <usart_serial_getchar+0x38>
		while (usart_read(p_usart, &val));
		*data = (uint8_t)(val & 0xFF);
	}
#else
# ifdef USART0
	if (USART0 == p_usart) {
  40180c:	4b17      	ldr	r3, [pc, #92]	; (40186c <usart_serial_getchar+0x78>)
  40180e:	4298      	cmp	r0, r3
  401810:	d014      	beq.n	40183c <usart_serial_getchar+0x48>
		while (usart_read(p_usart, &val));
		*data = (uint8_t)(val & 0xFF);
	}
# endif
# ifdef USART1
	if (USART1 == p_usart) {
  401812:	4b17      	ldr	r3, [pc, #92]	; (401870 <usart_serial_getchar+0x7c>)
  401814:	429d      	cmp	r5, r3
  401816:	d01b      	beq.n	401850 <usart_serial_getchar+0x5c>
		*data = (uint8_t)(val & 0xFF);
	}
# endif
#endif /* ifdef USART */

}
  401818:	b003      	add	sp, #12
  40181a:	bdf0      	pop	{r4, r5, r6, r7, pc}
		while (uart_read((Uart*)p_usart, data));
  40181c:	461f      	mov	r7, r3
  40181e:	4e15      	ldr	r6, [pc, #84]	; (401874 <usart_serial_getchar+0x80>)
  401820:	4621      	mov	r1, r4
  401822:	4638      	mov	r0, r7
  401824:	47b0      	blx	r6
  401826:	2800      	cmp	r0, #0
  401828:	d1fa      	bne.n	401820 <usart_serial_getchar+0x2c>
  40182a:	e7f2      	b.n	401812 <usart_serial_getchar+0x1e>
		while (uart_read((Uart*)p_usart, data));
  40182c:	461e      	mov	r6, r3
  40182e:	4d11      	ldr	r5, [pc, #68]	; (401874 <usart_serial_getchar+0x80>)
  401830:	4621      	mov	r1, r4
  401832:	4630      	mov	r0, r6
  401834:	47a8      	blx	r5
  401836:	2800      	cmp	r0, #0
  401838:	d1fa      	bne.n	401830 <usart_serial_getchar+0x3c>
  40183a:	e7ed      	b.n	401818 <usart_serial_getchar+0x24>
		while (usart_read(p_usart, &val));
  40183c:	461e      	mov	r6, r3
  40183e:	4d0e      	ldr	r5, [pc, #56]	; (401878 <usart_serial_getchar+0x84>)
  401840:	a901      	add	r1, sp, #4
  401842:	4630      	mov	r0, r6
  401844:	47a8      	blx	r5
  401846:	2800      	cmp	r0, #0
  401848:	d1fa      	bne.n	401840 <usart_serial_getchar+0x4c>
		*data = (uint8_t)(val & 0xFF);
  40184a:	9b01      	ldr	r3, [sp, #4]
  40184c:	7023      	strb	r3, [r4, #0]
  40184e:	e7e3      	b.n	401818 <usart_serial_getchar+0x24>
		while (usart_read(p_usart, &val));
  401850:	461e      	mov	r6, r3
  401852:	4d09      	ldr	r5, [pc, #36]	; (401878 <usart_serial_getchar+0x84>)
  401854:	a901      	add	r1, sp, #4
  401856:	4630      	mov	r0, r6
  401858:	47a8      	blx	r5
  40185a:	2800      	cmp	r0, #0
  40185c:	d1fa      	bne.n	401854 <usart_serial_getchar+0x60>
		*data = (uint8_t)(val & 0xFF);
  40185e:	9b01      	ldr	r3, [sp, #4]
  401860:	7023      	strb	r3, [r4, #0]
}
  401862:	e7d9      	b.n	401818 <usart_serial_getchar+0x24>
  401864:	400e0600 	.word	0x400e0600
  401868:	400e0800 	.word	0x400e0800
  40186c:	40024000 	.word	0x40024000
  401870:	40028000 	.word	0x40028000
  401874:	004013d3 	.word	0x004013d3
  401878:	004013f9 	.word	0x004013f9

0040187c <usart_serial_putchar>:
{
  40187c:	b570      	push	{r4, r5, r6, lr}
  40187e:	460c      	mov	r4, r1
	if (UART0 == (Uart*)p_usart) {
  401880:	4b18      	ldr	r3, [pc, #96]	; (4018e4 <usart_serial_putchar+0x68>)
  401882:	4298      	cmp	r0, r3
  401884:	d00a      	beq.n	40189c <usart_serial_putchar+0x20>
	if (UART1 == (Uart*)p_usart) {
  401886:	4b18      	ldr	r3, [pc, #96]	; (4018e8 <usart_serial_putchar+0x6c>)
  401888:	4298      	cmp	r0, r3
  40188a:	d010      	beq.n	4018ae <usart_serial_putchar+0x32>
	if (USART0 == p_usart) {
  40188c:	4b17      	ldr	r3, [pc, #92]	; (4018ec <usart_serial_putchar+0x70>)
  40188e:	4298      	cmp	r0, r3
  401890:	d016      	beq.n	4018c0 <usart_serial_putchar+0x44>
	if (USART1 == p_usart) {
  401892:	4b17      	ldr	r3, [pc, #92]	; (4018f0 <usart_serial_putchar+0x74>)
  401894:	4298      	cmp	r0, r3
  401896:	d01c      	beq.n	4018d2 <usart_serial_putchar+0x56>
	return 0;
  401898:	2000      	movs	r0, #0
}
  40189a:	bd70      	pop	{r4, r5, r6, pc}
		while (uart_write((Uart*)p_usart, c)!=0);
  40189c:	461e      	mov	r6, r3
  40189e:	4d15      	ldr	r5, [pc, #84]	; (4018f4 <usart_serial_putchar+0x78>)
  4018a0:	4621      	mov	r1, r4
  4018a2:	4630      	mov	r0, r6
  4018a4:	47a8      	blx	r5
  4018a6:	2800      	cmp	r0, #0
  4018a8:	d1fa      	bne.n	4018a0 <usart_serial_putchar+0x24>
		return 1;
  4018aa:	2001      	movs	r0, #1
  4018ac:	bd70      	pop	{r4, r5, r6, pc}
		while (uart_write((Uart*)p_usart, c)!=0);
  4018ae:	461e      	mov	r6, r3
  4018b0:	4d10      	ldr	r5, [pc, #64]	; (4018f4 <usart_serial_putchar+0x78>)
  4018b2:	4621      	mov	r1, r4
  4018b4:	4630      	mov	r0, r6
  4018b6:	47a8      	blx	r5
  4018b8:	2800      	cmp	r0, #0
  4018ba:	d1fa      	bne.n	4018b2 <usart_serial_putchar+0x36>
		return 1;
  4018bc:	2001      	movs	r0, #1
  4018be:	bd70      	pop	{r4, r5, r6, pc}
		while (usart_write(p_usart, c)!=0);
  4018c0:	461e      	mov	r6, r3
  4018c2:	4d0d      	ldr	r5, [pc, #52]	; (4018f8 <usart_serial_putchar+0x7c>)
  4018c4:	4621      	mov	r1, r4
  4018c6:	4630      	mov	r0, r6
  4018c8:	47a8      	blx	r5
  4018ca:	2800      	cmp	r0, #0
  4018cc:	d1fa      	bne.n	4018c4 <usart_serial_putchar+0x48>
		return 1;
  4018ce:	2001      	movs	r0, #1
  4018d0:	bd70      	pop	{r4, r5, r6, pc}
		while (usart_write(p_usart, c)!=0);
  4018d2:	461e      	mov	r6, r3
  4018d4:	4d08      	ldr	r5, [pc, #32]	; (4018f8 <usart_serial_putchar+0x7c>)
  4018d6:	4621      	mov	r1, r4
  4018d8:	4630      	mov	r0, r6
  4018da:	47a8      	blx	r5
  4018dc:	2800      	cmp	r0, #0
  4018de:	d1fa      	bne.n	4018d6 <usart_serial_putchar+0x5a>
		return 1;
  4018e0:	2001      	movs	r0, #1
  4018e2:	bd70      	pop	{r4, r5, r6, pc}
  4018e4:	400e0600 	.word	0x400e0600
  4018e8:	400e0800 	.word	0x400e0800
  4018ec:	40024000 	.word	0x40024000
  4018f0:	40028000 	.word	0x40028000
  4018f4:	004013c3 	.word	0x004013c3
  4018f8:	004013e5 	.word	0x004013e5

004018fc <vSensorISR>:

/* ISR Configuration */
unsigned int sensor_counter;
int last_dist = 0;

void vSensorISR(const uint32_t id, const uint32_t index) {
  4018fc:	b570      	push	{r4, r5, r6, lr}
	
	sensor_counter = 0;
  4018fe:	2200      	movs	r2, #0
  401900:	4b15      	ldr	r3, [pc, #84]	; (401958 <vSensorISR+0x5c>)
  401902:	601a      	str	r2, [r3, #0]
	while (pio_get(PIOA,PIO_INPUT,PIO_ECHO) == 1) {
  401904:	4e15      	ldr	r6, [pc, #84]	; (40195c <vSensorISR+0x60>)
  401906:	4d16      	ldr	r5, [pc, #88]	; (401960 <vSensorISR+0x64>)
		sensor_counter++;
  401908:	461c      	mov	r4, r3
	while (pio_get(PIOA,PIO_INPUT,PIO_ECHO) == 1) {
  40190a:	e002      	b.n	401912 <vSensorISR+0x16>
		sensor_counter++;
  40190c:	6823      	ldr	r3, [r4, #0]
  40190e:	3301      	adds	r3, #1
  401910:	6023      	str	r3, [r4, #0]
	while (pio_get(PIOA,PIO_INPUT,PIO_ECHO) == 1) {
  401912:	f44f 4200 	mov.w	r2, #32768	; 0x8000
  401916:	f04f 5120 	mov.w	r1, #671088640	; 0x28000000
  40191a:	4630      	mov	r0, r6
  40191c:	47a8      	blx	r5
  40191e:	2801      	cmp	r0, #1
  401920:	d0f4      	beq.n	40190c <vSensorISR+0x10>
	} 
	
	double uS_clock_cicles = (sysclk_get_cpu_hz() / 1000000);
	double uScounter = sensor_counter / uS_clock_cicles;
  401922:	4b0d      	ldr	r3, [pc, #52]	; (401958 <vSensorISR+0x5c>)
  401924:	6818      	ldr	r0, [r3, #0]
  401926:	4b0f      	ldr	r3, [pc, #60]	; (401964 <vSensorISR+0x68>)
  401928:	4798      	blx	r3
  40192a:	4c0f      	ldr	r4, [pc, #60]	; (401968 <vSensorISR+0x6c>)
  40192c:	2200      	movs	r2, #0
  40192e:	4b0f      	ldr	r3, [pc, #60]	; (40196c <vSensorISR+0x70>)
  401930:	47a0      	blx	r4
	double dist = (uScounter/58)*32;
  401932:	2200      	movs	r2, #0
  401934:	4b0e      	ldr	r3, [pc, #56]	; (401970 <vSensorISR+0x74>)
  401936:	47a0      	blx	r4
  401938:	2200      	movs	r2, #0
  40193a:	4b0e      	ldr	r3, [pc, #56]	; (401974 <vSensorISR+0x78>)
  40193c:	4c0e      	ldr	r4, [pc, #56]	; (401978 <vSensorISR+0x7c>)
  40193e:	47a0      	blx	r4
  401940:	4604      	mov	r4, r0
  401942:	460d      	mov	r5, r1

// 	if (dist > 24) {
// 		if (last_dist > 6 ) dist = 24;
// 		else dist = 5;
// 	}
	vMalhaControle(dist);
  401944:	4b0d      	ldr	r3, [pc, #52]	; (40197c <vSensorISR+0x80>)
  401946:	4798      	blx	r3
	last_dist = dist;
  401948:	4620      	mov	r0, r4
  40194a:	4629      	mov	r1, r5
  40194c:	4b0c      	ldr	r3, [pc, #48]	; (401980 <vSensorISR+0x84>)
  40194e:	4798      	blx	r3
  401950:	4b0c      	ldr	r3, [pc, #48]	; (401984 <vSensorISR+0x88>)
  401952:	6018      	str	r0, [r3, #0]
  401954:	bd70      	pop	{r4, r5, r6, pc}
  401956:	bf00      	nop
  401958:	20000ed4 	.word	0x20000ed4
  40195c:	400e0e00 	.word	0x400e0e00
  401960:	00400b93 	.word	0x00400b93
  401964:	00402285 	.word	0x00402285
  401968:	004025c5 	.word	0x004025c5
  40196c:	405e0000 	.word	0x405e0000
  401970:	404d0000 	.word	0x404d0000
  401974:	40400000 	.word	0x40400000
  401978:	00402371 	.word	0x00402371
  40197c:	004016ed 	.word	0x004016ed
  401980:	00402795 	.word	0x00402795
  401984:	20000e50 	.word	0x20000e50

00401988 <vConfigureUART>:
void vConfigureUART(void) {
  401988:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  40198c:	b084      	sub	sp, #16
	uart_settings.ul_mck = sysclk_get_peripheral_hz();
  40198e:	f8df 808c 	ldr.w	r8, [pc, #140]	; 401a1c <vConfigureUART+0x94>
  401992:	f8cd 8004 	str.w	r8, [sp, #4]
	uart_settings.ul_baudrate = opt->baudrate;
  401996:	4c16      	ldr	r4, [pc, #88]	; (4019f0 <vConfigureUART+0x68>)
  401998:	6823      	ldr	r3, [r4, #0]
  40199a:	9302      	str	r3, [sp, #8]
	uart_settings.ul_mode = opt->paritytype;
  40199c:	68a3      	ldr	r3, [r4, #8]
  40199e:	9303      	str	r3, [sp, #12]
  4019a0:	2008      	movs	r0, #8
  4019a2:	4f14      	ldr	r7, [pc, #80]	; (4019f4 <vConfigureUART+0x6c>)
  4019a4:	47b8      	blx	r7
		uart_init((Uart*)p_usart, &uart_settings);
  4019a6:	4d14      	ldr	r5, [pc, #80]	; (4019f8 <vConfigureUART+0x70>)
  4019a8:	a901      	add	r1, sp, #4
  4019aa:	4628      	mov	r0, r5
  4019ac:	4e13      	ldr	r6, [pc, #76]	; (4019fc <vConfigureUART+0x74>)
  4019ae:	47b0      	blx	r6
 * \param opt         Options needed to set up RS232 communication (see \ref usart_options_t).
 *
 */
static inline void stdio_serial_init(volatile void *usart, const usart_serial_options_t *opt)
{
	stdio_base = (void *)usart;
  4019b0:	4b13      	ldr	r3, [pc, #76]	; (401a00 <vConfigureUART+0x78>)
  4019b2:	601d      	str	r5, [r3, #0]
	ptr_put = (int (*)(void volatile*,char))&usart_serial_putchar;
  4019b4:	4a13      	ldr	r2, [pc, #76]	; (401a04 <vConfigureUART+0x7c>)
  4019b6:	4b14      	ldr	r3, [pc, #80]	; (401a08 <vConfigureUART+0x80>)
  4019b8:	601a      	str	r2, [r3, #0]
	ptr_get = (void (*)(void volatile*,char*))&usart_serial_getchar;
  4019ba:	4a14      	ldr	r2, [pc, #80]	; (401a0c <vConfigureUART+0x84>)
  4019bc:	4b14      	ldr	r3, [pc, #80]	; (401a10 <vConfigureUART+0x88>)
  4019be:	601a      	str	r2, [r3, #0]
	uart_settings.ul_mck = sysclk_get_peripheral_hz();
  4019c0:	f8cd 8004 	str.w	r8, [sp, #4]
	uart_settings.ul_baudrate = opt->baudrate;
  4019c4:	6823      	ldr	r3, [r4, #0]
  4019c6:	9302      	str	r3, [sp, #8]
	uart_settings.ul_mode = opt->paritytype;
  4019c8:	68a3      	ldr	r3, [r4, #8]
  4019ca:	9303      	str	r3, [sp, #12]
  4019cc:	2008      	movs	r0, #8
  4019ce:	47b8      	blx	r7
		uart_init((Uart*)p_usart, &uart_settings);
  4019d0:	a901      	add	r1, sp, #4
  4019d2:	4628      	mov	r0, r5
  4019d4:	47b0      	blx	r6
	fdevopen((int (*)(char, FILE*))(_write),(int (*)(FILE*))(_read));
#  endif
#  if UC3 || SAM
	// For AVR32 and SAM GCC
	// Specify that stdout and stdin should not be buffered.
	setbuf(stdout, NULL);
  4019d6:	4d0f      	ldr	r5, [pc, #60]	; (401a14 <vConfigureUART+0x8c>)
  4019d8:	682b      	ldr	r3, [r5, #0]
  4019da:	2100      	movs	r1, #0
  4019dc:	6898      	ldr	r0, [r3, #8]
  4019de:	4c0e      	ldr	r4, [pc, #56]	; (401a18 <vConfigureUART+0x90>)
  4019e0:	47a0      	blx	r4
	setbuf(stdin, NULL);
  4019e2:	682b      	ldr	r3, [r5, #0]
  4019e4:	2100      	movs	r1, #0
  4019e6:	6858      	ldr	r0, [r3, #4]
  4019e8:	47a0      	blx	r4
}
  4019ea:	b004      	add	sp, #16
  4019ec:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  4019f0:	20000030 	.word	0x20000030
  4019f4:	004010d1 	.word	0x004010d1
  4019f8:	400e0600 	.word	0x400e0600
  4019fc:	0040138d 	.word	0x0040138d
  401a00:	20000e94 	.word	0x20000e94
  401a04:	0040187d 	.word	0x0040187d
  401a08:	20000e90 	.word	0x20000e90
  401a0c:	004017f5 	.word	0x004017f5
  401a10:	20000e8c 	.word	0x20000e8c
  401a14:	20000040 	.word	0x20000040
  401a18:	004028d1 	.word	0x004028d1
  401a1c:	07270e00 	.word	0x07270e00

00401a20 <vConfigureTimer>:
void vConfigureTimer() {
  401a20:	b530      	push	{r4, r5, lr}
  401a22:	b085      	sub	sp, #20
	pmc_enable_periph_clk(ID_TC);
  401a24:	2017      	movs	r0, #23
  401a26:	4b17      	ldr	r3, [pc, #92]	; (401a84 <vConfigureTimer+0x64>)
  401a28:	4798      	blx	r3
	tc_find_mck_divisor(TC_FREQ,ul_sysclk,&ul_div,&ul_tcclk,ul_sysclk);
  401a2a:	4c17      	ldr	r4, [pc, #92]	; (401a88 <vConfigureTimer+0x68>)
  401a2c:	9400      	str	r4, [sp, #0]
  401a2e:	ab03      	add	r3, sp, #12
  401a30:	aa02      	add	r2, sp, #8
  401a32:	4621      	mov	r1, r4
  401a34:	200a      	movs	r0, #10
  401a36:	4d15      	ldr	r5, [pc, #84]	; (401a8c <vConfigureTimer+0x6c>)
  401a38:	47a8      	blx	r5
	tc_init(TC,CHANNEL,TC_CMR_CPCTRG|ul_tcclk);
  401a3a:	4d15      	ldr	r5, [pc, #84]	; (401a90 <vConfigureTimer+0x70>)
  401a3c:	9a03      	ldr	r2, [sp, #12]
  401a3e:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
  401a42:	2100      	movs	r1, #0
  401a44:	4628      	mov	r0, r5
  401a46:	4b13      	ldr	r3, [pc, #76]	; (401a94 <vConfigureTimer+0x74>)
  401a48:	4798      	blx	r3
	RC = (ul_sysclk/ul_div)/TC_FREQ;
  401a4a:	9a02      	ldr	r2, [sp, #8]
  401a4c:	fbb4 f4f2 	udiv	r4, r4, r2
  401a50:	4a11      	ldr	r2, [pc, #68]	; (401a98 <vConfigureTimer+0x78>)
  401a52:	fba2 3204 	umull	r3, r2, r2, r4
	tc_write_rc(TC,CHANNEL,RC);
  401a56:	08d2      	lsrs	r2, r2, #3
  401a58:	2100      	movs	r1, #0
  401a5a:	4628      	mov	r0, r5
  401a5c:	4b0f      	ldr	r3, [pc, #60]	; (401a9c <vConfigureTimer+0x7c>)
  401a5e:	4798      	blx	r3
	tc_enable_interrupt(TC,CHANNEL,TC_IER_CPCS);
  401a60:	2210      	movs	r2, #16
  401a62:	2100      	movs	r1, #0
  401a64:	4628      	mov	r0, r5
  401a66:	4b0e      	ldr	r3, [pc, #56]	; (401aa0 <vConfigureTimer+0x80>)
  401a68:	4798      	blx	r3
__STATIC_INLINE void NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
  if(IRQn < 0) {
    SCB->SHP[((uint32_t)(IRQn) & 0xF)-4] = ((priority << (8 - __NVIC_PRIO_BITS)) & 0xff); } /* set Priority for Cortex-M  System Interrupts */
  else {
    NVIC->IP[(uint32_t)(IRQn)] = ((priority << (8 - __NVIC_PRIO_BITS)) & 0xff);    }        /* set Priority for device specific Interrupts  */
  401a6a:	4b0e      	ldr	r3, [pc, #56]	; (401aa4 <vConfigureTimer+0x84>)
  401a6c:	2230      	movs	r2, #48	; 0x30
  401a6e:	f883 2317 	strb.w	r2, [r3, #791]	; 0x317
  NVIC->ISER[(uint32_t)((int32_t)IRQn) >> 5] = (uint32_t)(1 << ((uint32_t)((int32_t)IRQn) & (uint32_t)0x1F)); /* enable interrupt */
  401a72:	f44f 0200 	mov.w	r2, #8388608	; 0x800000
  401a76:	601a      	str	r2, [r3, #0]
	tc_start(TC,CHANNEL);
  401a78:	2100      	movs	r1, #0
  401a7a:	4628      	mov	r0, r5
  401a7c:	4b0a      	ldr	r3, [pc, #40]	; (401aa8 <vConfigureTimer+0x88>)
  401a7e:	4798      	blx	r3
}
  401a80:	b005      	add	sp, #20
  401a82:	bd30      	pop	{r4, r5, pc}
  401a84:	004010d1 	.word	0x004010d1
  401a88:	07270e00 	.word	0x07270e00
  401a8c:	0040131d 	.word	0x0040131d
  401a90:	40010000 	.word	0x40010000
  401a94:	004012e5 	.word	0x004012e5
  401a98:	cccccccd 	.word	0xcccccccd
  401a9c:	00401305 	.word	0x00401305
  401aa0:	0040130d 	.word	0x0040130d
  401aa4:	e000e100 	.word	0xe000e100
  401aa8:	004012fd 	.word	0x004012fd

00401aac <getKP>:
double KI   =   0.1;
double KD	=	0.6;

double getKP(void) {
	return KP;
}
  401aac:	4b01      	ldr	r3, [pc, #4]	; (401ab4 <getKP+0x8>)
  401aae:	e9d3 0100 	ldrd	r0, r1, [r3]
  401ab2:	4770      	bx	lr
  401ab4:	20000028 	.word	0x20000028

00401ab8 <getKD>:

double getKD(void) {
	return KD;
}
  401ab8:	4b01      	ldr	r3, [pc, #4]	; (401ac0 <getKD+0x8>)
  401aba:	e9d3 0100 	ldrd	r0, r1, [r3]
  401abe:	4770      	bx	lr
  401ac0:	20000018 	.word	0x20000018

00401ac4 <getKI>:

double getKI(void) {
	return KI;
}
  401ac4:	4b01      	ldr	r3, [pc, #4]	; (401acc <getKI+0x8>)
  401ac6:	e9d3 0100 	ldrd	r0, r1, [r3]
  401aca:	4770      	bx	lr
  401acc:	20000020 	.word	0x20000020

00401ad0 <clear>:

void clear(void) {
	KP = 0.3;
  401ad0:	a109      	add	r1, pc, #36	; (adr r1, 401af8 <clear+0x28>)
  401ad2:	e9d1 0100 	ldrd	r0, r1, [r1]
  401ad6:	4b0e      	ldr	r3, [pc, #56]	; (401b10 <clear+0x40>)
  401ad8:	e9c3 0100 	strd	r0, r1, [r3]
	KI = 0.1;
  401adc:	a108      	add	r1, pc, #32	; (adr r1, 401b00 <clear+0x30>)
  401ade:	e9d1 0100 	ldrd	r0, r1, [r1]
  401ae2:	4b0c      	ldr	r3, [pc, #48]	; (401b14 <clear+0x44>)
  401ae4:	e9c3 0100 	strd	r0, r1, [r3]
	KD = 0.6;
  401ae8:	a107      	add	r1, pc, #28	; (adr r1, 401b08 <clear+0x38>)
  401aea:	e9d1 0100 	ldrd	r0, r1, [r1]
  401aee:	4b0a      	ldr	r3, [pc, #40]	; (401b18 <clear+0x48>)
  401af0:	e9c3 0100 	strd	r0, r1, [r3]
  401af4:	4770      	bx	lr
  401af6:	bf00      	nop
  401af8:	33333333 	.word	0x33333333
  401afc:	3fd33333 	.word	0x3fd33333
  401b00:	9999999a 	.word	0x9999999a
  401b04:	3fb99999 	.word	0x3fb99999
  401b08:	33333333 	.word	0x33333333
  401b0c:	3fe33333 	.word	0x3fe33333
  401b10:	20000028 	.word	0x20000028
  401b14:	20000020 	.word	0x20000020
  401b18:	20000018 	.word	0x20000018

00401b1c <vConfigureISR>:
	vWriteLCD(10,150,(uint8_t *) "KP");
	sprintf (buffer, "%.1f", KP);
	vWriteLCD(100,150,(uint8_t *) buffer);
}

void vConfigureISR() {
  401b1c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  401b20:	b083      	sub	sp, #12
	/* Configuracao da ISR no PIO_ECHO do Sensor */
	pio_set_input(PIOA, PIO_ECHO, PIO_DEBOUNCE);
  401b22:	4d2d      	ldr	r5, [pc, #180]	; (401bd8 <vConfigureISR+0xbc>)
  401b24:	2208      	movs	r2, #8
  401b26:	f44f 4100 	mov.w	r1, #32768	; 0x8000
  401b2a:	4628      	mov	r0, r5
  401b2c:	f8df a0cc 	ldr.w	sl, [pc, #204]	; 401bfc <vConfigureISR+0xe0>
  401b30:	47d0      	blx	sl
	pio_pull_down(PIOA,PIO_ECHO,1);
  401b32:	2201      	movs	r2, #1
  401b34:	f44f 4100 	mov.w	r1, #32768	; 0x8000
  401b38:	4628      	mov	r0, r5
  401b3a:	4b28      	ldr	r3, [pc, #160]	; (401bdc <vConfigureISR+0xc0>)
  401b3c:	4798      	blx	r3
	pio_handler_set(PIOA,ID_PIOA,PIO_ECHO,PIO_IT_RISE_EDGE,vSensorISR);
  401b3e:	4b28      	ldr	r3, [pc, #160]	; (401be0 <vConfigureISR+0xc4>)
  401b40:	9300      	str	r3, [sp, #0]
  401b42:	2370      	movs	r3, #112	; 0x70
  401b44:	f44f 4200 	mov.w	r2, #32768	; 0x8000
  401b48:	210b      	movs	r1, #11
  401b4a:	4628      	mov	r0, r5
  401b4c:	f8df 90b0 	ldr.w	r9, [pc, #176]	; 401c00 <vConfigureISR+0xe4>
  401b50:	47c8      	blx	r9
	pio_enable_interrupt(PIOA,PIO_ECHO);
  401b52:	f44f 4100 	mov.w	r1, #32768	; 0x8000
  401b56:	4628      	mov	r0, r5
  401b58:	4f22      	ldr	r7, [pc, #136]	; (401be4 <vConfigureISR+0xc8>)
  401b5a:	47b8      	blx	r7
    NVIC->IP[(uint32_t)(IRQn)] = ((priority << (8 - __NVIC_PRIO_BITS)) & 0xff);    }        /* set Priority for device specific Interrupts  */
  401b5c:	4c22      	ldr	r4, [pc, #136]	; (401be8 <vConfigureISR+0xcc>)
  401b5e:	2310      	movs	r3, #16
  401b60:	f884 330b 	strb.w	r3, [r4, #779]	; 0x30b
  NVIC->ISER[(uint32_t)((int32_t)IRQn) >> 5] = (uint32_t)(1 << ((uint32_t)((int32_t)IRQn) & (uint32_t)0x1F)); /* enable interrupt */
  401b64:	f44f 6300 	mov.w	r3, #2048	; 0x800
  401b68:	6023      	str	r3, [r4, #0]
	NVIC_SetPriority(PIOA_IRQn, SENSOR_PRIORITY);
	NVIC_EnableIRQ(PIOA_IRQn);
	
	/* ISR no Botao */
	pio_set_input(PIOB, PIO_BUTTON_LEFT, PIO_PULLUP | PIO_DEBOUNCE);
  401b6a:	4e20      	ldr	r6, [pc, #128]	; (401bec <vConfigureISR+0xd0>)
  401b6c:	2209      	movs	r2, #9
  401b6e:	2108      	movs	r1, #8
  401b70:	4630      	mov	r0, r6
  401b72:	47d0      	blx	sl
	pio_handler_set(PIOB,ID_PIOB,PIO_BUTTON_LEFT,PIO_IT_RISE_EDGE,vButtonLeftISR);
  401b74:	4b1e      	ldr	r3, [pc, #120]	; (401bf0 <vConfigureISR+0xd4>)
  401b76:	9300      	str	r3, [sp, #0]
  401b78:	2370      	movs	r3, #112	; 0x70
  401b7a:	2208      	movs	r2, #8
  401b7c:	210c      	movs	r1, #12
  401b7e:	4630      	mov	r0, r6
  401b80:	47c8      	blx	r9
	pio_enable_interrupt(PIOB,PIO_BUTTON_LEFT);
  401b82:	2108      	movs	r1, #8
  401b84:	4630      	mov	r0, r6
  401b86:	47b8      	blx	r7
    NVIC->IP[(uint32_t)(IRQn)] = ((priority << (8 - __NVIC_PRIO_BITS)) & 0xff);    }        /* set Priority for device specific Interrupts  */
  401b88:	f04f 0b20 	mov.w	fp, #32
  401b8c:	f884 b30c 	strb.w	fp, [r4, #780]	; 0x30c
  NVIC->ISER[(uint32_t)((int32_t)IRQn) >> 5] = (uint32_t)(1 << ((uint32_t)((int32_t)IRQn) & (uint32_t)0x1F)); /* enable interrupt */
  401b90:	f44f 5680 	mov.w	r6, #4096	; 0x1000
  401b94:	6026      	str	r6, [r4, #0]
	NVIC_SetPriority(PIOB_IRQn, BUTTON_PRIORITY);
	NVIC_EnableIRQ(PIOB_IRQn);
	
	pio_set_input(PIOC, PIO_BUTTON_RIGTH, PIO_PULLUP | PIO_DEBOUNCE);
  401b96:	f8df 806c 	ldr.w	r8, [pc, #108]	; 401c04 <vConfigureISR+0xe8>
  401b9a:	2209      	movs	r2, #9
  401b9c:	4631      	mov	r1, r6
  401b9e:	4640      	mov	r0, r8
  401ba0:	47d0      	blx	sl
	pio_handler_set(PIOC,ID_PIOC,PIO_BUTTON_RIGTH,PIO_IT_RISE_EDGE,vButtonRightISR);
  401ba2:	4b14      	ldr	r3, [pc, #80]	; (401bf4 <vConfigureISR+0xd8>)
  401ba4:	9300      	str	r3, [sp, #0]
  401ba6:	2370      	movs	r3, #112	; 0x70
  401ba8:	4632      	mov	r2, r6
  401baa:	210d      	movs	r1, #13
  401bac:	4640      	mov	r0, r8
  401bae:	47c8      	blx	r9
	pio_enable_interrupt(PIOC,PIO_BUTTON_RIGTH);
  401bb0:	4631      	mov	r1, r6
  401bb2:	4640      	mov	r0, r8
  401bb4:	47b8      	blx	r7
    NVIC->IP[(uint32_t)(IRQn)] = ((priority << (8 - __NVIC_PRIO_BITS)) & 0xff);    }        /* set Priority for device specific Interrupts  */
  401bb6:	f884 b30d 	strb.w	fp, [r4, #781]	; 0x30d
  NVIC->ISER[(uint32_t)((int32_t)IRQn) >> 5] = (uint32_t)(1 << ((uint32_t)((int32_t)IRQn) & (uint32_t)0x1F)); /* enable interrupt */
  401bba:	f44f 5300 	mov.w	r3, #8192	; 0x2000
  401bbe:	6023      	str	r3, [r4, #0]
	NVIC_SetPriority(PIOC_IRQn, BUTTON_PRIORITY);
	NVIC_EnableIRQ(PIOC_IRQn);
	
	pio_set_output(PIOA,PIO_TRIGGER,1,0,0);
  401bc0:	2300      	movs	r3, #0
  401bc2:	9300      	str	r3, [sp, #0]
  401bc4:	2201      	movs	r2, #1
  401bc6:	f44f 2100 	mov.w	r1, #524288	; 0x80000
  401bca:	4628      	mov	r0, r5
  401bcc:	4c0a      	ldr	r4, [pc, #40]	; (401bf8 <vConfigureISR+0xdc>)
  401bce:	47a0      	blx	r4
}
  401bd0:	b003      	add	sp, #12
  401bd2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  401bd6:	bf00      	nop
  401bd8:	400e0e00 	.word	0x400e0e00
  401bdc:	00400c93 	.word	0x00400c93
  401be0:	004018fd 	.word	0x004018fd
  401be4:	00400ccf 	.word	0x00400ccf
  401be8:	e000e100 	.word	0xe000e100
  401bec:	400e1000 	.word	0x400e1000
  401bf0:	00401da1 	.word	0x00401da1
  401bf4:	00401e01 	.word	0x00401e01
  401bf8:	00400c6d 	.word	0x00400c6d
  401bfc:	00400c3b 	.word	0x00400c3b
  401c00:	00400f3d 	.word	0x00400f3d
  401c04:	400e1200 	.word	0x400e1200

00401c08 <vConfigurePWM>:

/* PWM Configuration */
void vConfigurePWM() {
  401c08:	b570      	push	{r4, r5, r6, lr}
  401c0a:	b084      	sub	sp, #16
	pmc_enable_periph_clk(ID_PWM);
  401c0c:	201f      	movs	r0, #31
  401c0e:	4b15      	ldr	r3, [pc, #84]	; (401c64 <vConfigurePWM+0x5c>)
  401c10:	4798      	blx	r3
	pwm_channel_disable(PWM, PWM_CHANNEL);
  401c12:	4c15      	ldr	r4, [pc, #84]	; (401c68 <vConfigurePWM+0x60>)
  401c14:	2101      	movs	r1, #1
  401c16:	4620      	mov	r0, r4
  401c18:	4b14      	ldr	r3, [pc, #80]	; (401c6c <vConfigurePWM+0x64>)
  401c1a:	4798      	blx	r3
	pwm_clock_t clock_setting = {
  401c1c:	f242 7310 	movw	r3, #10000	; 0x2710
  401c20:	9301      	str	r3, [sp, #4]
  401c22:	2500      	movs	r5, #0
  401c24:	9502      	str	r5, [sp, #8]
  401c26:	4b12      	ldr	r3, [pc, #72]	; (401c70 <vConfigurePWM+0x68>)
  401c28:	9303      	str	r3, [sp, #12]
		.ul_clka = PWM_FREQUENCY * PERIOD_VALUE,
		.ul_clkb = 0,
		.ul_mck = sysclk_get_cpu_hz()
	};
	pwm_init(PWM, &clock_setting);
  401c2a:	a901      	add	r1, sp, #4
  401c2c:	4620      	mov	r0, r4
  401c2e:	4b11      	ldr	r3, [pc, #68]	; (401c74 <vConfigurePWM+0x6c>)
  401c30:	4798      	blx	r3
	g_pwm_channel.alignment = PWM_ALIGN_LEFT;
  401c32:	4911      	ldr	r1, [pc, #68]	; (401c78 <vConfigurePWM+0x70>)
  401c34:	810d      	strh	r5, [r1, #8]
	g_pwm_channel.polarity = PWM_LOW;
  401c36:	728d      	strb	r5, [r1, #10]
	g_pwm_channel.ul_prescaler = PWM_CMR_CPRE_CLKA;
  401c38:	230b      	movs	r3, #11
  401c3a:	604b      	str	r3, [r1, #4]
	g_pwm_channel.ul_period = PERIOD_VALUE;
  401c3c:	23c8      	movs	r3, #200	; 0xc8
  401c3e:	610b      	str	r3, [r1, #16]
	g_pwm_channel.ul_duty = INIT_DUTY_VALUE;
  401c40:	230d      	movs	r3, #13
  401c42:	60cb      	str	r3, [r1, #12]
	g_pwm_channel.channel = PWM_CHANNEL;
  401c44:	2601      	movs	r6, #1
  401c46:	600e      	str	r6, [r1, #0]
	pwm_channel_init(PWM, &g_pwm_channel);
  401c48:	4620      	mov	r0, r4
  401c4a:	4b0c      	ldr	r3, [pc, #48]	; (401c7c <vConfigurePWM+0x74>)
  401c4c:	4798      	blx	r3
	pwm_channel_disable_interrupt(PWM, PWM_CHANNEL, 0);
  401c4e:	462a      	mov	r2, r5
  401c50:	4631      	mov	r1, r6
  401c52:	4620      	mov	r0, r4
  401c54:	4b0a      	ldr	r3, [pc, #40]	; (401c80 <vConfigurePWM+0x78>)
  401c56:	4798      	blx	r3
	pwm_channel_enable(PWM, PWM_CHANNEL);
  401c58:	4631      	mov	r1, r6
  401c5a:	4620      	mov	r0, r4
  401c5c:	4b09      	ldr	r3, [pc, #36]	; (401c84 <vConfigurePWM+0x7c>)
  401c5e:	4798      	blx	r3
}
  401c60:	b004      	add	sp, #16
  401c62:	bd70      	pop	{r4, r5, r6, pc}
  401c64:	004010d1 	.word	0x004010d1
  401c68:	40020000 	.word	0x40020000
  401c6c:	004012c9 	.word	0x004012c9
  401c70:	07270e00 	.word	0x07270e00
  401c74:	00401179 	.word	0x00401179
  401c78:	20000eac 	.word	0x20000eac
  401c7c:	004011bd 	.word	0x004011bd
  401c80:	004012d3 	.word	0x004012d3
  401c84:	004012bf 	.word	0x004012bf

00401c88 <vWriteLCD>:
	pwm_channel_update_duty(PWM, &g_pwm_channel, duty);
	sprintf (buffer, "%lu", duty);
	vWriteLCD(140,80,(uint8_t *) buffer);
}

void vWriteLCD(int x,int y, uint8_t* text) {
  401c88:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  401c8c:	4604      	mov	r4, r0
  401c8e:	460d      	mov	r5, r1
  401c90:	4617      	mov	r7, r2
	ili93xx_set_foreground_color(COLOR_WHITE);
  401c92:	f06f 407f 	mvn.w	r0, #4278190080	; 0xff000000
  401c96:	4e0a      	ldr	r6, [pc, #40]	; (401cc0 <vWriteLCD+0x38>)
  401c98:	47b0      	blx	r6
	ili93xx_draw_filled_rectangle(x-10, y-5, x+100, y+15);
  401c9a:	f105 030f 	add.w	r3, r5, #15
  401c9e:	f104 0264 	add.w	r2, r4, #100	; 0x64
  401ca2:	1f69      	subs	r1, r5, #5
  401ca4:	f1a4 000a 	sub.w	r0, r4, #10
  401ca8:	f8df 801c 	ldr.w	r8, [pc, #28]	; 401cc8 <vWriteLCD+0x40>
  401cac:	47c0      	blx	r8

	ili93xx_set_foreground_color(COLOR_BLACK);
  401cae:	2000      	movs	r0, #0
  401cb0:	47b0      	blx	r6
	ili93xx_draw_string(x, y, text);
  401cb2:	463a      	mov	r2, r7
  401cb4:	4629      	mov	r1, r5
  401cb6:	4620      	mov	r0, r4
  401cb8:	4b02      	ldr	r3, [pc, #8]	; (401cc4 <vWriteLCD+0x3c>)
  401cba:	4798      	blx	r3
  401cbc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  401cc0:	004005ad 	.word	0x004005ad
  401cc4:	00400abd 	.word	0x00400abd
  401cc8:	004009f5 	.word	0x004009f5

00401ccc <TC0_Handler>:
void TC0_Handler(void) {
  401ccc:	b500      	push	{lr}
  401cce:	b08f      	sub	sp, #60	; 0x3c
	tc_get_status(TC,CHANNEL);
  401cd0:	2100      	movs	r1, #0
  401cd2:	480a      	ldr	r0, [pc, #40]	; (401cfc <TC0_Handler+0x30>)
  401cd4:	4b0a      	ldr	r3, [pc, #40]	; (401d00 <TC0_Handler+0x34>)
  401cd6:	4798      	blx	r3
	vReadSensor();
  401cd8:	4b0a      	ldr	r3, [pc, #40]	; (401d04 <TC0_Handler+0x38>)
  401cda:	4798      	blx	r3
	tc++;
  401cdc:	4b0a      	ldr	r3, [pc, #40]	; (401d08 <TC0_Handler+0x3c>)
  401cde:	681a      	ldr	r2, [r3, #0]
  401ce0:	3201      	adds	r2, #1
  401ce2:	601a      	str	r2, [r3, #0]
	sprintf (b, "%u", tc);
  401ce4:	4909      	ldr	r1, [pc, #36]	; (401d0c <TC0_Handler+0x40>)
  401ce6:	a801      	add	r0, sp, #4
  401ce8:	4b09      	ldr	r3, [pc, #36]	; (401d10 <TC0_Handler+0x44>)
  401cea:	4798      	blx	r3
	vWriteLCD(140, 60, (uint8_t*) b);
  401cec:	aa01      	add	r2, sp, #4
  401cee:	213c      	movs	r1, #60	; 0x3c
  401cf0:	208c      	movs	r0, #140	; 0x8c
  401cf2:	4b08      	ldr	r3, [pc, #32]	; (401d14 <TC0_Handler+0x48>)
  401cf4:	4798      	blx	r3
}
  401cf6:	b00f      	add	sp, #60	; 0x3c
  401cf8:	f85d fb04 	ldr.w	pc, [sp], #4
  401cfc:	40010000 	.word	0x40010000
  401d00:	00401315 	.word	0x00401315
  401d04:	004016b1 	.word	0x004016b1
  401d08:	20000e54 	.word	0x20000e54
  401d0c:	004076c4 	.word	0x004076c4
  401d10:	00402a2d 	.word	0x00402a2d
  401d14:	00401c89 	.word	0x00401c89

00401d18 <print>:
void print(void) {
  401d18:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
	vWriteLCD(10,150,(uint8_t *) "KP");
  401d1a:	4a17      	ldr	r2, [pc, #92]	; (401d78 <print+0x60>)
  401d1c:	2196      	movs	r1, #150	; 0x96
  401d1e:	200a      	movs	r0, #10
  401d20:	4c16      	ldr	r4, [pc, #88]	; (401d7c <print+0x64>)
  401d22:	47a0      	blx	r4
	sprintf (buffer, "%.1f", KP);
  401d24:	4f16      	ldr	r7, [pc, #88]	; (401d80 <print+0x68>)
  401d26:	4d17      	ldr	r5, [pc, #92]	; (401d84 <print+0x6c>)
  401d28:	4b17      	ldr	r3, [pc, #92]	; (401d88 <print+0x70>)
  401d2a:	e9d3 2300 	ldrd	r2, r3, [r3]
  401d2e:	4639      	mov	r1, r7
  401d30:	4628      	mov	r0, r5
  401d32:	4e16      	ldr	r6, [pc, #88]	; (401d8c <print+0x74>)
  401d34:	47b0      	blx	r6
	vWriteLCD(100,160,(uint8_t *) buffer);
  401d36:	462a      	mov	r2, r5
  401d38:	21a0      	movs	r1, #160	; 0xa0
  401d3a:	2064      	movs	r0, #100	; 0x64
  401d3c:	47a0      	blx	r4
	vWriteLCD(10,180,(uint8_t *) "KI");
  401d3e:	4a14      	ldr	r2, [pc, #80]	; (401d90 <print+0x78>)
  401d40:	21b4      	movs	r1, #180	; 0xb4
  401d42:	200a      	movs	r0, #10
  401d44:	47a0      	blx	r4
	sprintf (buffer, "%.1f", KI);
  401d46:	4b13      	ldr	r3, [pc, #76]	; (401d94 <print+0x7c>)
  401d48:	e9d3 2300 	ldrd	r2, r3, [r3]
  401d4c:	4639      	mov	r1, r7
  401d4e:	4628      	mov	r0, r5
  401d50:	47b0      	blx	r6
	vWriteLCD(100,180,(uint8_t *) buffer);
  401d52:	462a      	mov	r2, r5
  401d54:	21b4      	movs	r1, #180	; 0xb4
  401d56:	2064      	movs	r0, #100	; 0x64
  401d58:	47a0      	blx	r4
	vWriteLCD(10,200,(uint8_t *) "KD");
  401d5a:	4a0f      	ldr	r2, [pc, #60]	; (401d98 <print+0x80>)
  401d5c:	21c8      	movs	r1, #200	; 0xc8
  401d5e:	200a      	movs	r0, #10
  401d60:	47a0      	blx	r4
	sprintf (buffer, "%.1f", KD);
  401d62:	4b0e      	ldr	r3, [pc, #56]	; (401d9c <print+0x84>)
  401d64:	e9d3 2300 	ldrd	r2, r3, [r3]
  401d68:	4639      	mov	r1, r7
  401d6a:	4628      	mov	r0, r5
  401d6c:	47b0      	blx	r6
	vWriteLCD(100,200,(uint8_t *) buffer);
  401d6e:	462a      	mov	r2, r5
  401d70:	21c8      	movs	r1, #200	; 0xc8
  401d72:	2064      	movs	r0, #100	; 0x64
  401d74:	47a0      	blx	r4
  401d76:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  401d78:	004076c8 	.word	0x004076c8
  401d7c:	00401c89 	.word	0x00401c89
  401d80:	004076cc 	.word	0x004076cc
  401d84:	20000ed8 	.word	0x20000ed8
  401d88:	20000028 	.word	0x20000028
  401d8c:	00402a2d 	.word	0x00402a2d
  401d90:	004076d4 	.word	0x004076d4
  401d94:	20000020 	.word	0x20000020
  401d98:	004076d8 	.word	0x004076d8
  401d9c:	20000018 	.word	0x20000018

00401da0 <vButtonLeftISR>:
void vButtonLeftISR(const uint32_t id, const uint32_t index) {
  401da0:	b570      	push	{r4, r5, r6, lr}
	KD += 0.1;
  401da2:	4c0f      	ldr	r4, [pc, #60]	; (401de0 <vButtonLeftISR+0x40>)
  401da4:	a30c      	add	r3, pc, #48	; (adr r3, 401dd8 <vButtonLeftISR+0x38>)
  401da6:	e9d3 2300 	ldrd	r2, r3, [r3]
  401daa:	e9d4 0100 	ldrd	r0, r1, [r4]
  401dae:	4d0d      	ldr	r5, [pc, #52]	; (401de4 <vButtonLeftISR+0x44>)
  401db0:	47a8      	blx	r5
  401db2:	e9c4 0100 	strd	r0, r1, [r4]
	vWriteLCD(10,200,(uint8_t *) "KD");
  401db6:	4a0c      	ldr	r2, [pc, #48]	; (401de8 <vButtonLeftISR+0x48>)
  401db8:	21c8      	movs	r1, #200	; 0xc8
  401dba:	200a      	movs	r0, #10
  401dbc:	4d0b      	ldr	r5, [pc, #44]	; (401dec <vButtonLeftISR+0x4c>)
  401dbe:	47a8      	blx	r5
	sprintf (buffer, "%.1f", KD);
  401dc0:	4e0b      	ldr	r6, [pc, #44]	; (401df0 <vButtonLeftISR+0x50>)
  401dc2:	e9d4 2300 	ldrd	r2, r3, [r4]
  401dc6:	490b      	ldr	r1, [pc, #44]	; (401df4 <vButtonLeftISR+0x54>)
  401dc8:	4630      	mov	r0, r6
  401dca:	4c0b      	ldr	r4, [pc, #44]	; (401df8 <vButtonLeftISR+0x58>)
  401dcc:	47a0      	blx	r4
	vWriteLCD(100,200,(uint8_t *) buffer);
  401dce:	4632      	mov	r2, r6
  401dd0:	21c8      	movs	r1, #200	; 0xc8
  401dd2:	2064      	movs	r0, #100	; 0x64
  401dd4:	47a8      	blx	r5
  401dd6:	bd70      	pop	{r4, r5, r6, pc}
  401dd8:	9999999a 	.word	0x9999999a
  401ddc:	3fb99999 	.word	0x3fb99999
  401de0:	20000018 	.word	0x20000018
  401de4:	0040200d 	.word	0x0040200d
  401de8:	004076d8 	.word	0x004076d8
  401dec:	00401c89 	.word	0x00401c89
  401df0:	20000ed8 	.word	0x20000ed8
  401df4:	004076cc 	.word	0x004076cc
  401df8:	00402a2d 	.word	0x00402a2d
  401dfc:	00000000 	.word	0x00000000

00401e00 <vButtonRightISR>:
void vButtonRightISR(const uint32_t id, const uint32_t index) {
  401e00:	b570      	push	{r4, r5, r6, lr}
	KP += 0.1;
  401e02:	4c0f      	ldr	r4, [pc, #60]	; (401e40 <vButtonRightISR+0x40>)
  401e04:	a30c      	add	r3, pc, #48	; (adr r3, 401e38 <vButtonRightISR+0x38>)
  401e06:	e9d3 2300 	ldrd	r2, r3, [r3]
  401e0a:	e9d4 0100 	ldrd	r0, r1, [r4]
  401e0e:	4d0d      	ldr	r5, [pc, #52]	; (401e44 <vButtonRightISR+0x44>)
  401e10:	47a8      	blx	r5
  401e12:	e9c4 0100 	strd	r0, r1, [r4]
	vWriteLCD(10,150,(uint8_t *) "KP");
  401e16:	4a0c      	ldr	r2, [pc, #48]	; (401e48 <vButtonRightISR+0x48>)
  401e18:	2196      	movs	r1, #150	; 0x96
  401e1a:	200a      	movs	r0, #10
  401e1c:	4d0b      	ldr	r5, [pc, #44]	; (401e4c <vButtonRightISR+0x4c>)
  401e1e:	47a8      	blx	r5
	sprintf (buffer, "%.1f", KP);
  401e20:	4e0b      	ldr	r6, [pc, #44]	; (401e50 <vButtonRightISR+0x50>)
  401e22:	e9d4 2300 	ldrd	r2, r3, [r4]
  401e26:	490b      	ldr	r1, [pc, #44]	; (401e54 <vButtonRightISR+0x54>)
  401e28:	4630      	mov	r0, r6
  401e2a:	4c0b      	ldr	r4, [pc, #44]	; (401e58 <vButtonRightISR+0x58>)
  401e2c:	47a0      	blx	r4
	vWriteLCD(100,150,(uint8_t *) buffer);
  401e2e:	4632      	mov	r2, r6
  401e30:	2196      	movs	r1, #150	; 0x96
  401e32:	2064      	movs	r0, #100	; 0x64
  401e34:	47a8      	blx	r5
  401e36:	bd70      	pop	{r4, r5, r6, pc}
  401e38:	9999999a 	.word	0x9999999a
  401e3c:	3fb99999 	.word	0x3fb99999
  401e40:	20000028 	.word	0x20000028
  401e44:	0040200d 	.word	0x0040200d
  401e48:	004076c8 	.word	0x004076c8
  401e4c:	00401c89 	.word	0x00401c89
  401e50:	20000ed8 	.word	0x20000ed8
  401e54:	004076cc 	.word	0x004076cc
  401e58:	00402a2d 	.word	0x00402a2d

00401e5c <vPWMUpdateDuty>:
void vPWMUpdateDuty (uint32_t duty) {
  401e5c:	b538      	push	{r3, r4, r5, lr}
  401e5e:	4605      	mov	r5, r0
	g_pwm_channel.channel = PWM_CHANNEL;
  401e60:	4909      	ldr	r1, [pc, #36]	; (401e88 <vPWMUpdateDuty+0x2c>)
  401e62:	2301      	movs	r3, #1
  401e64:	600b      	str	r3, [r1, #0]
	pwm_channel_update_duty(PWM, &g_pwm_channel, duty);
  401e66:	4602      	mov	r2, r0
  401e68:	4808      	ldr	r0, [pc, #32]	; (401e8c <vPWMUpdateDuty+0x30>)
  401e6a:	4b09      	ldr	r3, [pc, #36]	; (401e90 <vPWMUpdateDuty+0x34>)
  401e6c:	4798      	blx	r3
	sprintf (buffer, "%lu", duty);
  401e6e:	4c09      	ldr	r4, [pc, #36]	; (401e94 <vPWMUpdateDuty+0x38>)
  401e70:	462a      	mov	r2, r5
  401e72:	4909      	ldr	r1, [pc, #36]	; (401e98 <vPWMUpdateDuty+0x3c>)
  401e74:	4620      	mov	r0, r4
  401e76:	4b09      	ldr	r3, [pc, #36]	; (401e9c <vPWMUpdateDuty+0x40>)
  401e78:	4798      	blx	r3
	vWriteLCD(140,80,(uint8_t *) buffer);
  401e7a:	4622      	mov	r2, r4
  401e7c:	2150      	movs	r1, #80	; 0x50
  401e7e:	208c      	movs	r0, #140	; 0x8c
  401e80:	4b07      	ldr	r3, [pc, #28]	; (401ea0 <vPWMUpdateDuty+0x44>)
  401e82:	4798      	blx	r3
  401e84:	bd38      	pop	{r3, r4, r5, pc}
  401e86:	bf00      	nop
  401e88:	20000eac 	.word	0x20000eac
  401e8c:	40020000 	.word	0x40020000
  401e90:	004012a3 	.word	0x004012a3
  401e94:	20000ed8 	.word	0x20000ed8
  401e98:	0040771c 	.word	0x0040771c
  401e9c:	00402a2d 	.word	0x00402a2d
  401ea0:	00401c89 	.word	0x00401c89

00401ea4 <vInitLCD>:
}

void vInitLCD (void) {
  401ea4:	b510      	push	{r4, lr}
	ili93xx_set_foreground_color(COLOR_WHITE);
  401ea6:	f06f 407f 	mvn.w	r0, #4278190080	; 0xff000000
  401eaa:	4b13      	ldr	r3, [pc, #76]	; (401ef8 <vInitLCD+0x54>)
  401eac:	4798      	blx	r3
	ili93xx_draw_filled_rectangle(0, 0, ILI93XX_LCD_WIDTH,ILI93XX_LCD_HEIGHT);
  401eae:	f44f 73a0 	mov.w	r3, #320	; 0x140
  401eb2:	22f0      	movs	r2, #240	; 0xf0
  401eb4:	2100      	movs	r1, #0
  401eb6:	4608      	mov	r0, r1
  401eb8:	4c10      	ldr	r4, [pc, #64]	; (401efc <vInitLCD+0x58>)
  401eba:	47a0      	blx	r4

	/** Turn on LCD */
	ili93xx_display_on();
  401ebc:	4b10      	ldr	r3, [pc, #64]	; (401f00 <vInitLCD+0x5c>)
  401ebe:	4798      	blx	r3
	ili93xx_set_cursor_position(0, 0);
  401ec0:	2100      	movs	r1, #0
  401ec2:	4608      	mov	r0, r1
  401ec4:	4b0f      	ldr	r3, [pc, #60]	; (401f04 <vInitLCD+0x60>)
  401ec6:	4798      	blx	r3
	
	vWriteLCD(10,20,(uint8_t *)"BeamBall\n");
  401ec8:	4a0f      	ldr	r2, [pc, #60]	; (401f08 <vInitLCD+0x64>)
  401eca:	2114      	movs	r1, #20
  401ecc:	200a      	movs	r0, #10
  401ece:	4c0f      	ldr	r4, [pc, #60]	; (401f0c <vInitLCD+0x68>)
  401ed0:	47a0      	blx	r4
	vWriteLCD(10,80,(uint8_t *)"PWM Duty: ");
  401ed2:	4a0f      	ldr	r2, [pc, #60]	; (401f10 <vInitLCD+0x6c>)
  401ed4:	2150      	movs	r1, #80	; 0x50
  401ed6:	200a      	movs	r0, #10
  401ed8:	47a0      	blx	r4
	vWriteLCD(10,100,(uint8_t *)"Distancia: ");
  401eda:	4a0e      	ldr	r2, [pc, #56]	; (401f14 <vInitLCD+0x70>)
  401edc:	2164      	movs	r1, #100	; 0x64
  401ede:	200a      	movs	r0, #10
  401ee0:	47a0      	blx	r4
	vWriteLCD(10,60,(uint8_t *)"Timer: ");
  401ee2:	4a0d      	ldr	r2, [pc, #52]	; (401f18 <vInitLCD+0x74>)
  401ee4:	213c      	movs	r1, #60	; 0x3c
  401ee6:	200a      	movs	r0, #10
  401ee8:	47a0      	blx	r4

	vWriteLCD(180,260,(uint8_t *)"Ilan\nLucas\nCarlos");
  401eea:	4a0c      	ldr	r2, [pc, #48]	; (401f1c <vInitLCD+0x78>)
  401eec:	f44f 7182 	mov.w	r1, #260	; 0x104
  401ef0:	20b4      	movs	r0, #180	; 0xb4
  401ef2:	47a0      	blx	r4
  401ef4:	bd10      	pop	{r4, pc}
  401ef6:	bf00      	nop
  401ef8:	004005ad 	.word	0x004005ad
  401efc:	004009f5 	.word	0x004009f5
  401f00:	00400579 	.word	0x00400579
  401f04:	0040066d 	.word	0x0040066d
  401f08:	004076dc 	.word	0x004076dc
  401f0c:	00401c89 	.word	0x00401c89
  401f10:	004076e8 	.word	0x004076e8
  401f14:	004076f4 	.word	0x004076f4
  401f18:	00407700 	.word	0x00407700
  401f1c:	00407708 	.word	0x00407708

00401f20 <vConfigureLCD>:
// 	vWriteLCD(10,300,(uint8_t *)"Timer: ");
}



void vConfigureLCD(void) {
  401f20:	b510      	push	{r4, lr}
	/** Enable peripheral clock */
	pmc_enable_periph_clk(ID_SMC);
  401f22:	200a      	movs	r0, #10
  401f24:	4b16      	ldr	r3, [pc, #88]	; (401f80 <vConfigureLCD+0x60>)
  401f26:	4798      	blx	r3

	/** Configure SMC interface for Lcd */
	smc_set_setup_timing(SMC, ILI93XX_LCD_CS, SMC_SETUP_NWE_SETUP(2)
  401f28:	4c16      	ldr	r4, [pc, #88]	; (401f84 <vConfigureLCD+0x64>)
  401f2a:	f04f 3202 	mov.w	r2, #33686018	; 0x2020202
  401f2e:	2101      	movs	r1, #1
  401f30:	4620      	mov	r0, r4
  401f32:	4b15      	ldr	r3, [pc, #84]	; (401f88 <vConfigureLCD+0x68>)
  401f34:	4798      	blx	r3
											| SMC_SETUP_NCS_WR_SETUP(2)
											| SMC_SETUP_NRD_SETUP(2)
											| SMC_SETUP_NCS_RD_SETUP(2));
	smc_set_pulse_timing(SMC, ILI93XX_LCD_CS, SMC_PULSE_NWE_PULSE(4)
  401f36:	4a15      	ldr	r2, [pc, #84]	; (401f8c <vConfigureLCD+0x6c>)
  401f38:	2101      	movs	r1, #1
  401f3a:	4620      	mov	r0, r4
  401f3c:	4b14      	ldr	r3, [pc, #80]	; (401f90 <vConfigureLCD+0x70>)
  401f3e:	4798      	blx	r3
											| SMC_PULSE_NCS_WR_PULSE(4)
											| SMC_PULSE_NRD_PULSE(10)
											| SMC_PULSE_NCS_RD_PULSE(10));
	smc_set_cycle_timing(SMC, ILI93XX_LCD_CS, SMC_CYCLE_NWE_CYCLE(10)
  401f40:	4a14      	ldr	r2, [pc, #80]	; (401f94 <vConfigureLCD+0x74>)
  401f42:	2101      	movs	r1, #1
  401f44:	4620      	mov	r0, r4
  401f46:	4b14      	ldr	r3, [pc, #80]	; (401f98 <vConfigureLCD+0x78>)
  401f48:	4798      	blx	r3
											| SMC_CYCLE_NRD_CYCLE(22));
	
	smc_set_mode(SMC, ILI93XX_LCD_CS, SMC_MODE_READ_MODE
  401f4a:	2203      	movs	r2, #3
  401f4c:	2101      	movs	r1, #1
  401f4e:	4620      	mov	r0, r4
  401f50:	4b12      	ldr	r3, [pc, #72]	; (401f9c <vConfigureLCD+0x7c>)
  401f52:	4798      	blx	r3
									| SMC_MODE_WRITE_MODE);
	
	/** Initialize display parameter */
	g_ili93xx_display_opt.ul_width = ILI93XX_LCD_WIDTH;
  401f54:	4c12      	ldr	r4, [pc, #72]	; (401fa0 <vConfigureLCD+0x80>)
  401f56:	23f0      	movs	r3, #240	; 0xf0
  401f58:	6023      	str	r3, [r4, #0]
	g_ili93xx_display_opt.ul_height = ILI93XX_LCD_HEIGHT;
  401f5a:	f44f 73a0 	mov.w	r3, #320	; 0x140
  401f5e:	6063      	str	r3, [r4, #4]
	g_ili93xx_display_opt.foreground_color = COLOR_BLACK;
  401f60:	2300      	movs	r3, #0
  401f62:	60a3      	str	r3, [r4, #8]
	g_ili93xx_display_opt.background_color = COLOR_WHITE;
  401f64:	f06f 437f 	mvn.w	r3, #4278190080	; 0xff000000
  401f68:	60e3      	str	r3, [r4, #12]

	/** Switch off backlight */
	aat31xx_disable_backlight();
  401f6a:	4b0e      	ldr	r3, [pc, #56]	; (401fa4 <vConfigureLCD+0x84>)
  401f6c:	4798      	blx	r3

	/** Initialize LCD */
	ili93xx_init(&g_ili93xx_display_opt);
  401f6e:	4620      	mov	r0, r4
  401f70:	4b0d      	ldr	r3, [pc, #52]	; (401fa8 <vConfigureLCD+0x88>)
  401f72:	4798      	blx	r3

	/** Set backlight level */
	aat31xx_set_backlight(AAT31XX_AVG_BACKLIGHT_LEVEL);
  401f74:	2008      	movs	r0, #8
  401f76:	4b0d      	ldr	r3, [pc, #52]	; (401fac <vConfigureLCD+0x8c>)
  401f78:	4798      	blx	r3

	vInitLCD();
  401f7a:	4b0d      	ldr	r3, [pc, #52]	; (401fb0 <vConfigureLCD+0x90>)
  401f7c:	4798      	blx	r3
  401f7e:	bd10      	pop	{r4, pc}
  401f80:	004010d1 	.word	0x004010d1
  401f84:	400e0000 	.word	0x400e0000
  401f88:	00400b6d 	.word	0x00400b6d
  401f8c:	0a0a0404 	.word	0x0a0a0404
  401f90:	00400b73 	.word	0x00400b73
  401f94:	0016000a 	.word	0x0016000a
  401f98:	00400b7b 	.word	0x00400b7b
  401f9c:	00400b83 	.word	0x00400b83
  401fa0:	20000e9c 	.word	0x20000e9c
  401fa4:	0040034d 	.word	0x0040034d
  401fa8:	00400695 	.word	0x00400695
  401fac:	004002f1 	.word	0x004002f1
  401fb0:	00401ea5 	.word	0x00401ea5

00401fb4 <main>:
 *
 */
#include <asf.h>
#include "BeamBall.h"       

int main (void) {
  401fb4:	b508      	push	{r3, lr}

	sysclk_init();
  401fb6:	4b09      	ldr	r3, [pc, #36]	; (401fdc <main+0x28>)
  401fb8:	4798      	blx	r3
	board_init();
  401fba:	4b09      	ldr	r3, [pc, #36]	; (401fe0 <main+0x2c>)
  401fbc:	4798      	blx	r3
	vConfigureUART();
  401fbe:	4b09      	ldr	r3, [pc, #36]	; (401fe4 <main+0x30>)
  401fc0:	4798      	blx	r3
	vConfigurePWM();
  401fc2:	4b09      	ldr	r3, [pc, #36]	; (401fe8 <main+0x34>)
  401fc4:	4798      	blx	r3
	vConfigureISR();
  401fc6:	4b09      	ldr	r3, [pc, #36]	; (401fec <main+0x38>)
  401fc8:	4798      	blx	r3
	vConfigureTimer();
  401fca:	4b09      	ldr	r3, [pc, #36]	; (401ff0 <main+0x3c>)
  401fcc:	4798      	blx	r3
	
	vConfigureLCD();
  401fce:	4b09      	ldr	r3, [pc, #36]	; (401ff4 <main+0x40>)
  401fd0:	4798      	blx	r3
	clear();
  401fd2:	4b09      	ldr	r3, [pc, #36]	; (401ff8 <main+0x44>)
  401fd4:	4798      	blx	r3
	print();
  401fd6:	4b09      	ldr	r3, [pc, #36]	; (401ffc <main+0x48>)
  401fd8:	4798      	blx	r3
  401fda:	e7fe      	b.n	401fda <main+0x26>
  401fdc:	00400139 	.word	0x00400139
  401fe0:	00400229 	.word	0x00400229
  401fe4:	00401989 	.word	0x00401989
  401fe8:	00401c09 	.word	0x00401c09
  401fec:	00401b1d 	.word	0x00401b1d
  401ff0:	00401a21 	.word	0x00401a21
  401ff4:	00401f21 	.word	0x00401f21
  401ff8:	00401ad1 	.word	0x00401ad1
  401ffc:	00401d19 	.word	0x00401d19

00402000 <__aeabi_drsub>:
  402000:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
  402004:	e002      	b.n	40200c <__adddf3>
  402006:	bf00      	nop

00402008 <__aeabi_dsub>:
  402008:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

0040200c <__adddf3>:
  40200c:	b530      	push	{r4, r5, lr}
  40200e:	ea4f 0441 	mov.w	r4, r1, lsl #1
  402012:	ea4f 0543 	mov.w	r5, r3, lsl #1
  402016:	ea94 0f05 	teq	r4, r5
  40201a:	bf08      	it	eq
  40201c:	ea90 0f02 	teqeq	r0, r2
  402020:	bf1f      	itttt	ne
  402022:	ea54 0c00 	orrsne.w	ip, r4, r0
  402026:	ea55 0c02 	orrsne.w	ip, r5, r2
  40202a:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
  40202e:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
  402032:	f000 80e2 	beq.w	4021fa <__adddf3+0x1ee>
  402036:	ea4f 5454 	mov.w	r4, r4, lsr #21
  40203a:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
  40203e:	bfb8      	it	lt
  402040:	426d      	neglt	r5, r5
  402042:	dd0c      	ble.n	40205e <__adddf3+0x52>
  402044:	442c      	add	r4, r5
  402046:	ea80 0202 	eor.w	r2, r0, r2
  40204a:	ea81 0303 	eor.w	r3, r1, r3
  40204e:	ea82 0000 	eor.w	r0, r2, r0
  402052:	ea83 0101 	eor.w	r1, r3, r1
  402056:	ea80 0202 	eor.w	r2, r0, r2
  40205a:	ea81 0303 	eor.w	r3, r1, r3
  40205e:	2d36      	cmp	r5, #54	; 0x36
  402060:	bf88      	it	hi
  402062:	bd30      	pophi	{r4, r5, pc}
  402064:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
  402068:	ea4f 3101 	mov.w	r1, r1, lsl #12
  40206c:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
  402070:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
  402074:	d002      	beq.n	40207c <__adddf3+0x70>
  402076:	4240      	negs	r0, r0
  402078:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
  40207c:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
  402080:	ea4f 3303 	mov.w	r3, r3, lsl #12
  402084:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
  402088:	d002      	beq.n	402090 <__adddf3+0x84>
  40208a:	4252      	negs	r2, r2
  40208c:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
  402090:	ea94 0f05 	teq	r4, r5
  402094:	f000 80a7 	beq.w	4021e6 <__adddf3+0x1da>
  402098:	f1a4 0401 	sub.w	r4, r4, #1
  40209c:	f1d5 0e20 	rsbs	lr, r5, #32
  4020a0:	db0d      	blt.n	4020be <__adddf3+0xb2>
  4020a2:	fa02 fc0e 	lsl.w	ip, r2, lr
  4020a6:	fa22 f205 	lsr.w	r2, r2, r5
  4020aa:	1880      	adds	r0, r0, r2
  4020ac:	f141 0100 	adc.w	r1, r1, #0
  4020b0:	fa03 f20e 	lsl.w	r2, r3, lr
  4020b4:	1880      	adds	r0, r0, r2
  4020b6:	fa43 f305 	asr.w	r3, r3, r5
  4020ba:	4159      	adcs	r1, r3
  4020bc:	e00e      	b.n	4020dc <__adddf3+0xd0>
  4020be:	f1a5 0520 	sub.w	r5, r5, #32
  4020c2:	f10e 0e20 	add.w	lr, lr, #32
  4020c6:	2a01      	cmp	r2, #1
  4020c8:	fa03 fc0e 	lsl.w	ip, r3, lr
  4020cc:	bf28      	it	cs
  4020ce:	f04c 0c02 	orrcs.w	ip, ip, #2
  4020d2:	fa43 f305 	asr.w	r3, r3, r5
  4020d6:	18c0      	adds	r0, r0, r3
  4020d8:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
  4020dc:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
  4020e0:	d507      	bpl.n	4020f2 <__adddf3+0xe6>
  4020e2:	f04f 0e00 	mov.w	lr, #0
  4020e6:	f1dc 0c00 	rsbs	ip, ip, #0
  4020ea:	eb7e 0000 	sbcs.w	r0, lr, r0
  4020ee:	eb6e 0101 	sbc.w	r1, lr, r1
  4020f2:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
  4020f6:	d31b      	bcc.n	402130 <__adddf3+0x124>
  4020f8:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
  4020fc:	d30c      	bcc.n	402118 <__adddf3+0x10c>
  4020fe:	0849      	lsrs	r1, r1, #1
  402100:	ea5f 0030 	movs.w	r0, r0, rrx
  402104:	ea4f 0c3c 	mov.w	ip, ip, rrx
  402108:	f104 0401 	add.w	r4, r4, #1
  40210c:	ea4f 5244 	mov.w	r2, r4, lsl #21
  402110:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
  402114:	f080 809a 	bcs.w	40224c <__adddf3+0x240>
  402118:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
  40211c:	bf08      	it	eq
  40211e:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
  402122:	f150 0000 	adcs.w	r0, r0, #0
  402126:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
  40212a:	ea41 0105 	orr.w	r1, r1, r5
  40212e:	bd30      	pop	{r4, r5, pc}
  402130:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
  402134:	4140      	adcs	r0, r0
  402136:	eb41 0101 	adc.w	r1, r1, r1
  40213a:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
  40213e:	f1a4 0401 	sub.w	r4, r4, #1
  402142:	d1e9      	bne.n	402118 <__adddf3+0x10c>
  402144:	f091 0f00 	teq	r1, #0
  402148:	bf04      	itt	eq
  40214a:	4601      	moveq	r1, r0
  40214c:	2000      	moveq	r0, #0
  40214e:	fab1 f381 	clz	r3, r1
  402152:	bf08      	it	eq
  402154:	3320      	addeq	r3, #32
  402156:	f1a3 030b 	sub.w	r3, r3, #11
  40215a:	f1b3 0220 	subs.w	r2, r3, #32
  40215e:	da0c      	bge.n	40217a <__adddf3+0x16e>
  402160:	320c      	adds	r2, #12
  402162:	dd08      	ble.n	402176 <__adddf3+0x16a>
  402164:	f102 0c14 	add.w	ip, r2, #20
  402168:	f1c2 020c 	rsb	r2, r2, #12
  40216c:	fa01 f00c 	lsl.w	r0, r1, ip
  402170:	fa21 f102 	lsr.w	r1, r1, r2
  402174:	e00c      	b.n	402190 <__adddf3+0x184>
  402176:	f102 0214 	add.w	r2, r2, #20
  40217a:	bfd8      	it	le
  40217c:	f1c2 0c20 	rsble	ip, r2, #32
  402180:	fa01 f102 	lsl.w	r1, r1, r2
  402184:	fa20 fc0c 	lsr.w	ip, r0, ip
  402188:	bfdc      	itt	le
  40218a:	ea41 010c 	orrle.w	r1, r1, ip
  40218e:	4090      	lslle	r0, r2
  402190:	1ae4      	subs	r4, r4, r3
  402192:	bfa2      	ittt	ge
  402194:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
  402198:	4329      	orrge	r1, r5
  40219a:	bd30      	popge	{r4, r5, pc}
  40219c:	ea6f 0404 	mvn.w	r4, r4
  4021a0:	3c1f      	subs	r4, #31
  4021a2:	da1c      	bge.n	4021de <__adddf3+0x1d2>
  4021a4:	340c      	adds	r4, #12
  4021a6:	dc0e      	bgt.n	4021c6 <__adddf3+0x1ba>
  4021a8:	f104 0414 	add.w	r4, r4, #20
  4021ac:	f1c4 0220 	rsb	r2, r4, #32
  4021b0:	fa20 f004 	lsr.w	r0, r0, r4
  4021b4:	fa01 f302 	lsl.w	r3, r1, r2
  4021b8:	ea40 0003 	orr.w	r0, r0, r3
  4021bc:	fa21 f304 	lsr.w	r3, r1, r4
  4021c0:	ea45 0103 	orr.w	r1, r5, r3
  4021c4:	bd30      	pop	{r4, r5, pc}
  4021c6:	f1c4 040c 	rsb	r4, r4, #12
  4021ca:	f1c4 0220 	rsb	r2, r4, #32
  4021ce:	fa20 f002 	lsr.w	r0, r0, r2
  4021d2:	fa01 f304 	lsl.w	r3, r1, r4
  4021d6:	ea40 0003 	orr.w	r0, r0, r3
  4021da:	4629      	mov	r1, r5
  4021dc:	bd30      	pop	{r4, r5, pc}
  4021de:	fa21 f004 	lsr.w	r0, r1, r4
  4021e2:	4629      	mov	r1, r5
  4021e4:	bd30      	pop	{r4, r5, pc}
  4021e6:	f094 0f00 	teq	r4, #0
  4021ea:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
  4021ee:	bf06      	itte	eq
  4021f0:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
  4021f4:	3401      	addeq	r4, #1
  4021f6:	3d01      	subne	r5, #1
  4021f8:	e74e      	b.n	402098 <__adddf3+0x8c>
  4021fa:	ea7f 5c64 	mvns.w	ip, r4, asr #21
  4021fe:	bf18      	it	ne
  402200:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
  402204:	d029      	beq.n	40225a <__adddf3+0x24e>
  402206:	ea94 0f05 	teq	r4, r5
  40220a:	bf08      	it	eq
  40220c:	ea90 0f02 	teqeq	r0, r2
  402210:	d005      	beq.n	40221e <__adddf3+0x212>
  402212:	ea54 0c00 	orrs.w	ip, r4, r0
  402216:	bf04      	itt	eq
  402218:	4619      	moveq	r1, r3
  40221a:	4610      	moveq	r0, r2
  40221c:	bd30      	pop	{r4, r5, pc}
  40221e:	ea91 0f03 	teq	r1, r3
  402222:	bf1e      	ittt	ne
  402224:	2100      	movne	r1, #0
  402226:	2000      	movne	r0, #0
  402228:	bd30      	popne	{r4, r5, pc}
  40222a:	ea5f 5c54 	movs.w	ip, r4, lsr #21
  40222e:	d105      	bne.n	40223c <__adddf3+0x230>
  402230:	0040      	lsls	r0, r0, #1
  402232:	4149      	adcs	r1, r1
  402234:	bf28      	it	cs
  402236:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
  40223a:	bd30      	pop	{r4, r5, pc}
  40223c:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
  402240:	bf3c      	itt	cc
  402242:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
  402246:	bd30      	popcc	{r4, r5, pc}
  402248:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
  40224c:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
  402250:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
  402254:	f04f 0000 	mov.w	r0, #0
  402258:	bd30      	pop	{r4, r5, pc}
  40225a:	ea7f 5c64 	mvns.w	ip, r4, asr #21
  40225e:	bf1a      	itte	ne
  402260:	4619      	movne	r1, r3
  402262:	4610      	movne	r0, r2
  402264:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
  402268:	bf1c      	itt	ne
  40226a:	460b      	movne	r3, r1
  40226c:	4602      	movne	r2, r0
  40226e:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
  402272:	bf06      	itte	eq
  402274:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
  402278:	ea91 0f03 	teqeq	r1, r3
  40227c:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
  402280:	bd30      	pop	{r4, r5, pc}
  402282:	bf00      	nop

00402284 <__aeabi_ui2d>:
  402284:	f090 0f00 	teq	r0, #0
  402288:	bf04      	itt	eq
  40228a:	2100      	moveq	r1, #0
  40228c:	4770      	bxeq	lr
  40228e:	b530      	push	{r4, r5, lr}
  402290:	f44f 6480 	mov.w	r4, #1024	; 0x400
  402294:	f104 0432 	add.w	r4, r4, #50	; 0x32
  402298:	f04f 0500 	mov.w	r5, #0
  40229c:	f04f 0100 	mov.w	r1, #0
  4022a0:	e750      	b.n	402144 <__adddf3+0x138>
  4022a2:	bf00      	nop

004022a4 <__aeabi_i2d>:
  4022a4:	f090 0f00 	teq	r0, #0
  4022a8:	bf04      	itt	eq
  4022aa:	2100      	moveq	r1, #0
  4022ac:	4770      	bxeq	lr
  4022ae:	b530      	push	{r4, r5, lr}
  4022b0:	f44f 6480 	mov.w	r4, #1024	; 0x400
  4022b4:	f104 0432 	add.w	r4, r4, #50	; 0x32
  4022b8:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
  4022bc:	bf48      	it	mi
  4022be:	4240      	negmi	r0, r0
  4022c0:	f04f 0100 	mov.w	r1, #0
  4022c4:	e73e      	b.n	402144 <__adddf3+0x138>
  4022c6:	bf00      	nop

004022c8 <__aeabi_f2d>:
  4022c8:	0042      	lsls	r2, r0, #1
  4022ca:	ea4f 01e2 	mov.w	r1, r2, asr #3
  4022ce:	ea4f 0131 	mov.w	r1, r1, rrx
  4022d2:	ea4f 7002 	mov.w	r0, r2, lsl #28
  4022d6:	bf1f      	itttt	ne
  4022d8:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
  4022dc:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
  4022e0:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
  4022e4:	4770      	bxne	lr
  4022e6:	f092 0f00 	teq	r2, #0
  4022ea:	bf14      	ite	ne
  4022ec:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
  4022f0:	4770      	bxeq	lr
  4022f2:	b530      	push	{r4, r5, lr}
  4022f4:	f44f 7460 	mov.w	r4, #896	; 0x380
  4022f8:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
  4022fc:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
  402300:	e720      	b.n	402144 <__adddf3+0x138>
  402302:	bf00      	nop

00402304 <__aeabi_ul2d>:
  402304:	ea50 0201 	orrs.w	r2, r0, r1
  402308:	bf08      	it	eq
  40230a:	4770      	bxeq	lr
  40230c:	b530      	push	{r4, r5, lr}
  40230e:	f04f 0500 	mov.w	r5, #0
  402312:	e00a      	b.n	40232a <__aeabi_l2d+0x16>

00402314 <__aeabi_l2d>:
  402314:	ea50 0201 	orrs.w	r2, r0, r1
  402318:	bf08      	it	eq
  40231a:	4770      	bxeq	lr
  40231c:	b530      	push	{r4, r5, lr}
  40231e:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
  402322:	d502      	bpl.n	40232a <__aeabi_l2d+0x16>
  402324:	4240      	negs	r0, r0
  402326:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
  40232a:	f44f 6480 	mov.w	r4, #1024	; 0x400
  40232e:	f104 0432 	add.w	r4, r4, #50	; 0x32
  402332:	ea5f 5c91 	movs.w	ip, r1, lsr #22
  402336:	f43f aedc 	beq.w	4020f2 <__adddf3+0xe6>
  40233a:	f04f 0203 	mov.w	r2, #3
  40233e:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
  402342:	bf18      	it	ne
  402344:	3203      	addne	r2, #3
  402346:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
  40234a:	bf18      	it	ne
  40234c:	3203      	addne	r2, #3
  40234e:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
  402352:	f1c2 0320 	rsb	r3, r2, #32
  402356:	fa00 fc03 	lsl.w	ip, r0, r3
  40235a:	fa20 f002 	lsr.w	r0, r0, r2
  40235e:	fa01 fe03 	lsl.w	lr, r1, r3
  402362:	ea40 000e 	orr.w	r0, r0, lr
  402366:	fa21 f102 	lsr.w	r1, r1, r2
  40236a:	4414      	add	r4, r2
  40236c:	e6c1      	b.n	4020f2 <__adddf3+0xe6>
  40236e:	bf00      	nop

00402370 <__aeabi_dmul>:
  402370:	b570      	push	{r4, r5, r6, lr}
  402372:	f04f 0cff 	mov.w	ip, #255	; 0xff
  402376:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
  40237a:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
  40237e:	bf1d      	ittte	ne
  402380:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
  402384:	ea94 0f0c 	teqne	r4, ip
  402388:	ea95 0f0c 	teqne	r5, ip
  40238c:	f000 f8de 	bleq	40254c <__aeabi_dmul+0x1dc>
  402390:	442c      	add	r4, r5
  402392:	ea81 0603 	eor.w	r6, r1, r3
  402396:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
  40239a:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
  40239e:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
  4023a2:	bf18      	it	ne
  4023a4:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
  4023a8:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
  4023ac:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
  4023b0:	d038      	beq.n	402424 <__aeabi_dmul+0xb4>
  4023b2:	fba0 ce02 	umull	ip, lr, r0, r2
  4023b6:	f04f 0500 	mov.w	r5, #0
  4023ba:	fbe1 e502 	umlal	lr, r5, r1, r2
  4023be:	f006 4200 	and.w	r2, r6, #2147483648	; 0x80000000
  4023c2:	fbe0 e503 	umlal	lr, r5, r0, r3
  4023c6:	f04f 0600 	mov.w	r6, #0
  4023ca:	fbe1 5603 	umlal	r5, r6, r1, r3
  4023ce:	f09c 0f00 	teq	ip, #0
  4023d2:	bf18      	it	ne
  4023d4:	f04e 0e01 	orrne.w	lr, lr, #1
  4023d8:	f1a4 04ff 	sub.w	r4, r4, #255	; 0xff
  4023dc:	f5b6 7f00 	cmp.w	r6, #512	; 0x200
  4023e0:	f564 7440 	sbc.w	r4, r4, #768	; 0x300
  4023e4:	d204      	bcs.n	4023f0 <__aeabi_dmul+0x80>
  4023e6:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
  4023ea:	416d      	adcs	r5, r5
  4023ec:	eb46 0606 	adc.w	r6, r6, r6
  4023f0:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
  4023f4:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
  4023f8:	ea4f 20c5 	mov.w	r0, r5, lsl #11
  4023fc:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
  402400:	ea4f 2ece 	mov.w	lr, lr, lsl #11
  402404:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
  402408:	bf88      	it	hi
  40240a:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
  40240e:	d81e      	bhi.n	40244e <__aeabi_dmul+0xde>
  402410:	f1be 4f00 	cmp.w	lr, #2147483648	; 0x80000000
  402414:	bf08      	it	eq
  402416:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
  40241a:	f150 0000 	adcs.w	r0, r0, #0
  40241e:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
  402422:	bd70      	pop	{r4, r5, r6, pc}
  402424:	f006 4600 	and.w	r6, r6, #2147483648	; 0x80000000
  402428:	ea46 0101 	orr.w	r1, r6, r1
  40242c:	ea40 0002 	orr.w	r0, r0, r2
  402430:	ea81 0103 	eor.w	r1, r1, r3
  402434:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
  402438:	bfc2      	ittt	gt
  40243a:	ebd4 050c 	rsbsgt	r5, r4, ip
  40243e:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
  402442:	bd70      	popgt	{r4, r5, r6, pc}
  402444:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
  402448:	f04f 0e00 	mov.w	lr, #0
  40244c:	3c01      	subs	r4, #1
  40244e:	f300 80ab 	bgt.w	4025a8 <__aeabi_dmul+0x238>
  402452:	f114 0f36 	cmn.w	r4, #54	; 0x36
  402456:	bfde      	ittt	le
  402458:	2000      	movle	r0, #0
  40245a:	f001 4100 	andle.w	r1, r1, #2147483648	; 0x80000000
  40245e:	bd70      	pople	{r4, r5, r6, pc}
  402460:	f1c4 0400 	rsb	r4, r4, #0
  402464:	3c20      	subs	r4, #32
  402466:	da35      	bge.n	4024d4 <__aeabi_dmul+0x164>
  402468:	340c      	adds	r4, #12
  40246a:	dc1b      	bgt.n	4024a4 <__aeabi_dmul+0x134>
  40246c:	f104 0414 	add.w	r4, r4, #20
  402470:	f1c4 0520 	rsb	r5, r4, #32
  402474:	fa00 f305 	lsl.w	r3, r0, r5
  402478:	fa20 f004 	lsr.w	r0, r0, r4
  40247c:	fa01 f205 	lsl.w	r2, r1, r5
  402480:	ea40 0002 	orr.w	r0, r0, r2
  402484:	f001 4200 	and.w	r2, r1, #2147483648	; 0x80000000
  402488:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
  40248c:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
  402490:	fa21 f604 	lsr.w	r6, r1, r4
  402494:	eb42 0106 	adc.w	r1, r2, r6
  402498:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
  40249c:	bf08      	it	eq
  40249e:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
  4024a2:	bd70      	pop	{r4, r5, r6, pc}
  4024a4:	f1c4 040c 	rsb	r4, r4, #12
  4024a8:	f1c4 0520 	rsb	r5, r4, #32
  4024ac:	fa00 f304 	lsl.w	r3, r0, r4
  4024b0:	fa20 f005 	lsr.w	r0, r0, r5
  4024b4:	fa01 f204 	lsl.w	r2, r1, r4
  4024b8:	ea40 0002 	orr.w	r0, r0, r2
  4024bc:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
  4024c0:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
  4024c4:	f141 0100 	adc.w	r1, r1, #0
  4024c8:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
  4024cc:	bf08      	it	eq
  4024ce:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
  4024d2:	bd70      	pop	{r4, r5, r6, pc}
  4024d4:	f1c4 0520 	rsb	r5, r4, #32
  4024d8:	fa00 f205 	lsl.w	r2, r0, r5
  4024dc:	ea4e 0e02 	orr.w	lr, lr, r2
  4024e0:	fa20 f304 	lsr.w	r3, r0, r4
  4024e4:	fa01 f205 	lsl.w	r2, r1, r5
  4024e8:	ea43 0302 	orr.w	r3, r3, r2
  4024ec:	fa21 f004 	lsr.w	r0, r1, r4
  4024f0:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
  4024f4:	fa21 f204 	lsr.w	r2, r1, r4
  4024f8:	ea20 0002 	bic.w	r0, r0, r2
  4024fc:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
  402500:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
  402504:	bf08      	it	eq
  402506:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
  40250a:	bd70      	pop	{r4, r5, r6, pc}
  40250c:	f094 0f00 	teq	r4, #0
  402510:	d10f      	bne.n	402532 <__aeabi_dmul+0x1c2>
  402512:	f001 4600 	and.w	r6, r1, #2147483648	; 0x80000000
  402516:	0040      	lsls	r0, r0, #1
  402518:	eb41 0101 	adc.w	r1, r1, r1
  40251c:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
  402520:	bf08      	it	eq
  402522:	3c01      	subeq	r4, #1
  402524:	d0f7      	beq.n	402516 <__aeabi_dmul+0x1a6>
  402526:	ea41 0106 	orr.w	r1, r1, r6
  40252a:	f095 0f00 	teq	r5, #0
  40252e:	bf18      	it	ne
  402530:	4770      	bxne	lr
  402532:	f003 4600 	and.w	r6, r3, #2147483648	; 0x80000000
  402536:	0052      	lsls	r2, r2, #1
  402538:	eb43 0303 	adc.w	r3, r3, r3
  40253c:	f413 1f80 	tst.w	r3, #1048576	; 0x100000
  402540:	bf08      	it	eq
  402542:	3d01      	subeq	r5, #1
  402544:	d0f7      	beq.n	402536 <__aeabi_dmul+0x1c6>
  402546:	ea43 0306 	orr.w	r3, r3, r6
  40254a:	4770      	bx	lr
  40254c:	ea94 0f0c 	teq	r4, ip
  402550:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
  402554:	bf18      	it	ne
  402556:	ea95 0f0c 	teqne	r5, ip
  40255a:	d00c      	beq.n	402576 <__aeabi_dmul+0x206>
  40255c:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
  402560:	bf18      	it	ne
  402562:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
  402566:	d1d1      	bne.n	40250c <__aeabi_dmul+0x19c>
  402568:	ea81 0103 	eor.w	r1, r1, r3
  40256c:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
  402570:	f04f 0000 	mov.w	r0, #0
  402574:	bd70      	pop	{r4, r5, r6, pc}
  402576:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
  40257a:	bf06      	itte	eq
  40257c:	4610      	moveq	r0, r2
  40257e:	4619      	moveq	r1, r3
  402580:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
  402584:	d019      	beq.n	4025ba <__aeabi_dmul+0x24a>
  402586:	ea94 0f0c 	teq	r4, ip
  40258a:	d102      	bne.n	402592 <__aeabi_dmul+0x222>
  40258c:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
  402590:	d113      	bne.n	4025ba <__aeabi_dmul+0x24a>
  402592:	ea95 0f0c 	teq	r5, ip
  402596:	d105      	bne.n	4025a4 <__aeabi_dmul+0x234>
  402598:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
  40259c:	bf1c      	itt	ne
  40259e:	4610      	movne	r0, r2
  4025a0:	4619      	movne	r1, r3
  4025a2:	d10a      	bne.n	4025ba <__aeabi_dmul+0x24a>
  4025a4:	ea81 0103 	eor.w	r1, r1, r3
  4025a8:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
  4025ac:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
  4025b0:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
  4025b4:	f04f 0000 	mov.w	r0, #0
  4025b8:	bd70      	pop	{r4, r5, r6, pc}
  4025ba:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
  4025be:	f441 0178 	orr.w	r1, r1, #16252928	; 0xf80000
  4025c2:	bd70      	pop	{r4, r5, r6, pc}

004025c4 <__aeabi_ddiv>:
  4025c4:	b570      	push	{r4, r5, r6, lr}
  4025c6:	f04f 0cff 	mov.w	ip, #255	; 0xff
  4025ca:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
  4025ce:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
  4025d2:	bf1d      	ittte	ne
  4025d4:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
  4025d8:	ea94 0f0c 	teqne	r4, ip
  4025dc:	ea95 0f0c 	teqne	r5, ip
  4025e0:	f000 f8a7 	bleq	402732 <__aeabi_ddiv+0x16e>
  4025e4:	eba4 0405 	sub.w	r4, r4, r5
  4025e8:	ea81 0e03 	eor.w	lr, r1, r3
  4025ec:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
  4025f0:	ea4f 3101 	mov.w	r1, r1, lsl #12
  4025f4:	f000 8088 	beq.w	402708 <__aeabi_ddiv+0x144>
  4025f8:	ea4f 3303 	mov.w	r3, r3, lsl #12
  4025fc:	f04f 5580 	mov.w	r5, #268435456	; 0x10000000
  402600:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
  402604:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
  402608:	ea4f 2202 	mov.w	r2, r2, lsl #8
  40260c:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
  402610:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
  402614:	ea4f 2600 	mov.w	r6, r0, lsl #8
  402618:	f00e 4100 	and.w	r1, lr, #2147483648	; 0x80000000
  40261c:	429d      	cmp	r5, r3
  40261e:	bf08      	it	eq
  402620:	4296      	cmpeq	r6, r2
  402622:	f144 04fd 	adc.w	r4, r4, #253	; 0xfd
  402626:	f504 7440 	add.w	r4, r4, #768	; 0x300
  40262a:	d202      	bcs.n	402632 <__aeabi_ddiv+0x6e>
  40262c:	085b      	lsrs	r3, r3, #1
  40262e:	ea4f 0232 	mov.w	r2, r2, rrx
  402632:	1ab6      	subs	r6, r6, r2
  402634:	eb65 0503 	sbc.w	r5, r5, r3
  402638:	085b      	lsrs	r3, r3, #1
  40263a:	ea4f 0232 	mov.w	r2, r2, rrx
  40263e:	f44f 1080 	mov.w	r0, #1048576	; 0x100000
  402642:	f44f 2c00 	mov.w	ip, #524288	; 0x80000
  402646:	ebb6 0e02 	subs.w	lr, r6, r2
  40264a:	eb75 0e03 	sbcs.w	lr, r5, r3
  40264e:	bf22      	ittt	cs
  402650:	1ab6      	subcs	r6, r6, r2
  402652:	4675      	movcs	r5, lr
  402654:	ea40 000c 	orrcs.w	r0, r0, ip
  402658:	085b      	lsrs	r3, r3, #1
  40265a:	ea4f 0232 	mov.w	r2, r2, rrx
  40265e:	ebb6 0e02 	subs.w	lr, r6, r2
  402662:	eb75 0e03 	sbcs.w	lr, r5, r3
  402666:	bf22      	ittt	cs
  402668:	1ab6      	subcs	r6, r6, r2
  40266a:	4675      	movcs	r5, lr
  40266c:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
  402670:	085b      	lsrs	r3, r3, #1
  402672:	ea4f 0232 	mov.w	r2, r2, rrx
  402676:	ebb6 0e02 	subs.w	lr, r6, r2
  40267a:	eb75 0e03 	sbcs.w	lr, r5, r3
  40267e:	bf22      	ittt	cs
  402680:	1ab6      	subcs	r6, r6, r2
  402682:	4675      	movcs	r5, lr
  402684:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
  402688:	085b      	lsrs	r3, r3, #1
  40268a:	ea4f 0232 	mov.w	r2, r2, rrx
  40268e:	ebb6 0e02 	subs.w	lr, r6, r2
  402692:	eb75 0e03 	sbcs.w	lr, r5, r3
  402696:	bf22      	ittt	cs
  402698:	1ab6      	subcs	r6, r6, r2
  40269a:	4675      	movcs	r5, lr
  40269c:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
  4026a0:	ea55 0e06 	orrs.w	lr, r5, r6
  4026a4:	d018      	beq.n	4026d8 <__aeabi_ddiv+0x114>
  4026a6:	ea4f 1505 	mov.w	r5, r5, lsl #4
  4026aa:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
  4026ae:	ea4f 1606 	mov.w	r6, r6, lsl #4
  4026b2:	ea4f 03c3 	mov.w	r3, r3, lsl #3
  4026b6:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
  4026ba:	ea4f 02c2 	mov.w	r2, r2, lsl #3
  4026be:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
  4026c2:	d1c0      	bne.n	402646 <__aeabi_ddiv+0x82>
  4026c4:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
  4026c8:	d10b      	bne.n	4026e2 <__aeabi_ddiv+0x11e>
  4026ca:	ea41 0100 	orr.w	r1, r1, r0
  4026ce:	f04f 0000 	mov.w	r0, #0
  4026d2:	f04f 4c00 	mov.w	ip, #2147483648	; 0x80000000
  4026d6:	e7b6      	b.n	402646 <__aeabi_ddiv+0x82>
  4026d8:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
  4026dc:	bf04      	itt	eq
  4026de:	4301      	orreq	r1, r0
  4026e0:	2000      	moveq	r0, #0
  4026e2:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
  4026e6:	bf88      	it	hi
  4026e8:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
  4026ec:	f63f aeaf 	bhi.w	40244e <__aeabi_dmul+0xde>
  4026f0:	ebb5 0c03 	subs.w	ip, r5, r3
  4026f4:	bf04      	itt	eq
  4026f6:	ebb6 0c02 	subseq.w	ip, r6, r2
  4026fa:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
  4026fe:	f150 0000 	adcs.w	r0, r0, #0
  402702:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
  402706:	bd70      	pop	{r4, r5, r6, pc}
  402708:	f00e 4e00 	and.w	lr, lr, #2147483648	; 0x80000000
  40270c:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
  402710:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
  402714:	bfc2      	ittt	gt
  402716:	ebd4 050c 	rsbsgt	r5, r4, ip
  40271a:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
  40271e:	bd70      	popgt	{r4, r5, r6, pc}
  402720:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
  402724:	f04f 0e00 	mov.w	lr, #0
  402728:	3c01      	subs	r4, #1
  40272a:	e690      	b.n	40244e <__aeabi_dmul+0xde>
  40272c:	ea45 0e06 	orr.w	lr, r5, r6
  402730:	e68d      	b.n	40244e <__aeabi_dmul+0xde>
  402732:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
  402736:	ea94 0f0c 	teq	r4, ip
  40273a:	bf08      	it	eq
  40273c:	ea95 0f0c 	teqeq	r5, ip
  402740:	f43f af3b 	beq.w	4025ba <__aeabi_dmul+0x24a>
  402744:	ea94 0f0c 	teq	r4, ip
  402748:	d10a      	bne.n	402760 <__aeabi_ddiv+0x19c>
  40274a:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
  40274e:	f47f af34 	bne.w	4025ba <__aeabi_dmul+0x24a>
  402752:	ea95 0f0c 	teq	r5, ip
  402756:	f47f af25 	bne.w	4025a4 <__aeabi_dmul+0x234>
  40275a:	4610      	mov	r0, r2
  40275c:	4619      	mov	r1, r3
  40275e:	e72c      	b.n	4025ba <__aeabi_dmul+0x24a>
  402760:	ea95 0f0c 	teq	r5, ip
  402764:	d106      	bne.n	402774 <__aeabi_ddiv+0x1b0>
  402766:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
  40276a:	f43f aefd 	beq.w	402568 <__aeabi_dmul+0x1f8>
  40276e:	4610      	mov	r0, r2
  402770:	4619      	mov	r1, r3
  402772:	e722      	b.n	4025ba <__aeabi_dmul+0x24a>
  402774:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
  402778:	bf18      	it	ne
  40277a:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
  40277e:	f47f aec5 	bne.w	40250c <__aeabi_dmul+0x19c>
  402782:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
  402786:	f47f af0d 	bne.w	4025a4 <__aeabi_dmul+0x234>
  40278a:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
  40278e:	f47f aeeb 	bne.w	402568 <__aeabi_dmul+0x1f8>
  402792:	e712      	b.n	4025ba <__aeabi_dmul+0x24a>

00402794 <__aeabi_d2iz>:
  402794:	ea4f 0241 	mov.w	r2, r1, lsl #1
  402798:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
  40279c:	d215      	bcs.n	4027ca <__aeabi_d2iz+0x36>
  40279e:	d511      	bpl.n	4027c4 <__aeabi_d2iz+0x30>
  4027a0:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
  4027a4:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
  4027a8:	d912      	bls.n	4027d0 <__aeabi_d2iz+0x3c>
  4027aa:	ea4f 23c1 	mov.w	r3, r1, lsl #11
  4027ae:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
  4027b2:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
  4027b6:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
  4027ba:	fa23 f002 	lsr.w	r0, r3, r2
  4027be:	bf18      	it	ne
  4027c0:	4240      	negne	r0, r0
  4027c2:	4770      	bx	lr
  4027c4:	f04f 0000 	mov.w	r0, #0
  4027c8:	4770      	bx	lr
  4027ca:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
  4027ce:	d105      	bne.n	4027dc <__aeabi_d2iz+0x48>
  4027d0:	f011 4000 	ands.w	r0, r1, #2147483648	; 0x80000000
  4027d4:	bf08      	it	eq
  4027d6:	f06f 4000 	mvneq.w	r0, #2147483648	; 0x80000000
  4027da:	4770      	bx	lr
  4027dc:	f04f 0000 	mov.w	r0, #0
  4027e0:	4770      	bx	lr
  4027e2:	bf00      	nop

004027e4 <__libc_init_array>:
  4027e4:	b570      	push	{r4, r5, r6, lr}
  4027e6:	4e0f      	ldr	r6, [pc, #60]	; (402824 <__libc_init_array+0x40>)
  4027e8:	4d0f      	ldr	r5, [pc, #60]	; (402828 <__libc_init_array+0x44>)
  4027ea:	1b76      	subs	r6, r6, r5
  4027ec:	10b6      	asrs	r6, r6, #2
  4027ee:	bf18      	it	ne
  4027f0:	2400      	movne	r4, #0
  4027f2:	d005      	beq.n	402800 <__libc_init_array+0x1c>
  4027f4:	3401      	adds	r4, #1
  4027f6:	f855 3b04 	ldr.w	r3, [r5], #4
  4027fa:	4798      	blx	r3
  4027fc:	42a6      	cmp	r6, r4
  4027fe:	d1f9      	bne.n	4027f4 <__libc_init_array+0x10>
  402800:	4e0a      	ldr	r6, [pc, #40]	; (40282c <__libc_init_array+0x48>)
  402802:	4d0b      	ldr	r5, [pc, #44]	; (402830 <__libc_init_array+0x4c>)
  402804:	1b76      	subs	r6, r6, r5
  402806:	f005 f8cf 	bl	4079a8 <_init>
  40280a:	10b6      	asrs	r6, r6, #2
  40280c:	bf18      	it	ne
  40280e:	2400      	movne	r4, #0
  402810:	d006      	beq.n	402820 <__libc_init_array+0x3c>
  402812:	3401      	adds	r4, #1
  402814:	f855 3b04 	ldr.w	r3, [r5], #4
  402818:	4798      	blx	r3
  40281a:	42a6      	cmp	r6, r4
  40281c:	d1f9      	bne.n	402812 <__libc_init_array+0x2e>
  40281e:	bd70      	pop	{r4, r5, r6, pc}
  402820:	bd70      	pop	{r4, r5, r6, pc}
  402822:	bf00      	nop
  402824:	004079b4 	.word	0x004079b4
  402828:	004079b4 	.word	0x004079b4
  40282c:	004079bc 	.word	0x004079bc
  402830:	004079b4 	.word	0x004079b4

00402834 <memset>:
  402834:	b470      	push	{r4, r5, r6}
  402836:	0786      	lsls	r6, r0, #30
  402838:	d046      	beq.n	4028c8 <memset+0x94>
  40283a:	1e54      	subs	r4, r2, #1
  40283c:	2a00      	cmp	r2, #0
  40283e:	d041      	beq.n	4028c4 <memset+0x90>
  402840:	b2ca      	uxtb	r2, r1
  402842:	4603      	mov	r3, r0
  402844:	e002      	b.n	40284c <memset+0x18>
  402846:	f114 34ff 	adds.w	r4, r4, #4294967295
  40284a:	d33b      	bcc.n	4028c4 <memset+0x90>
  40284c:	f803 2b01 	strb.w	r2, [r3], #1
  402850:	079d      	lsls	r5, r3, #30
  402852:	d1f8      	bne.n	402846 <memset+0x12>
  402854:	2c03      	cmp	r4, #3
  402856:	d92e      	bls.n	4028b6 <memset+0x82>
  402858:	b2cd      	uxtb	r5, r1
  40285a:	ea45 2505 	orr.w	r5, r5, r5, lsl #8
  40285e:	2c0f      	cmp	r4, #15
  402860:	ea45 4505 	orr.w	r5, r5, r5, lsl #16
  402864:	d919      	bls.n	40289a <memset+0x66>
  402866:	f103 0210 	add.w	r2, r3, #16
  40286a:	4626      	mov	r6, r4
  40286c:	3e10      	subs	r6, #16
  40286e:	2e0f      	cmp	r6, #15
  402870:	f842 5c10 	str.w	r5, [r2, #-16]
  402874:	f842 5c0c 	str.w	r5, [r2, #-12]
  402878:	f842 5c08 	str.w	r5, [r2, #-8]
  40287c:	f842 5c04 	str.w	r5, [r2, #-4]
  402880:	f102 0210 	add.w	r2, r2, #16
  402884:	d8f2      	bhi.n	40286c <memset+0x38>
  402886:	f1a4 0210 	sub.w	r2, r4, #16
  40288a:	f022 020f 	bic.w	r2, r2, #15
  40288e:	f004 040f 	and.w	r4, r4, #15
  402892:	3210      	adds	r2, #16
  402894:	2c03      	cmp	r4, #3
  402896:	4413      	add	r3, r2
  402898:	d90d      	bls.n	4028b6 <memset+0x82>
  40289a:	461e      	mov	r6, r3
  40289c:	4622      	mov	r2, r4
  40289e:	3a04      	subs	r2, #4
  4028a0:	2a03      	cmp	r2, #3
  4028a2:	f846 5b04 	str.w	r5, [r6], #4
  4028a6:	d8fa      	bhi.n	40289e <memset+0x6a>
  4028a8:	1f22      	subs	r2, r4, #4
  4028aa:	f022 0203 	bic.w	r2, r2, #3
  4028ae:	3204      	adds	r2, #4
  4028b0:	4413      	add	r3, r2
  4028b2:	f004 0403 	and.w	r4, r4, #3
  4028b6:	b12c      	cbz	r4, 4028c4 <memset+0x90>
  4028b8:	b2c9      	uxtb	r1, r1
  4028ba:	441c      	add	r4, r3
  4028bc:	f803 1b01 	strb.w	r1, [r3], #1
  4028c0:	429c      	cmp	r4, r3
  4028c2:	d1fb      	bne.n	4028bc <memset+0x88>
  4028c4:	bc70      	pop	{r4, r5, r6}
  4028c6:	4770      	bx	lr
  4028c8:	4614      	mov	r4, r2
  4028ca:	4603      	mov	r3, r0
  4028cc:	e7c2      	b.n	402854 <memset+0x20>
  4028ce:	bf00      	nop

004028d0 <setbuf>:
  4028d0:	2900      	cmp	r1, #0
  4028d2:	bf0c      	ite	eq
  4028d4:	2202      	moveq	r2, #2
  4028d6:	2200      	movne	r2, #0
  4028d8:	f44f 6380 	mov.w	r3, #1024	; 0x400
  4028dc:	f000 b800 	b.w	4028e0 <setvbuf>

004028e0 <setvbuf>:
  4028e0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
  4028e4:	4c50      	ldr	r4, [pc, #320]	; (402a28 <setvbuf+0x148>)
  4028e6:	6825      	ldr	r5, [r4, #0]
  4028e8:	b083      	sub	sp, #12
  4028ea:	4604      	mov	r4, r0
  4028ec:	460f      	mov	r7, r1
  4028ee:	4690      	mov	r8, r2
  4028f0:	461e      	mov	r6, r3
  4028f2:	b115      	cbz	r5, 4028fa <setvbuf+0x1a>
  4028f4:	6bab      	ldr	r3, [r5, #56]	; 0x38
  4028f6:	2b00      	cmp	r3, #0
  4028f8:	d077      	beq.n	4029ea <setvbuf+0x10a>
  4028fa:	f1b8 0f02 	cmp.w	r8, #2
  4028fe:	d004      	beq.n	40290a <setvbuf+0x2a>
  402900:	f1b8 0f01 	cmp.w	r8, #1
  402904:	d87d      	bhi.n	402a02 <setvbuf+0x122>
  402906:	2e00      	cmp	r6, #0
  402908:	db7b      	blt.n	402a02 <setvbuf+0x122>
  40290a:	4621      	mov	r1, r4
  40290c:	4628      	mov	r0, r5
  40290e:	f002 fb49 	bl	404fa4 <_fflush_r>
  402912:	6b21      	ldr	r1, [r4, #48]	; 0x30
  402914:	b141      	cbz	r1, 402928 <setvbuf+0x48>
  402916:	f104 0340 	add.w	r3, r4, #64	; 0x40
  40291a:	4299      	cmp	r1, r3
  40291c:	d002      	beq.n	402924 <setvbuf+0x44>
  40291e:	4628      	mov	r0, r5
  402920:	f002 fc48 	bl	4051b4 <_free_r>
  402924:	2300      	movs	r3, #0
  402926:	6323      	str	r3, [r4, #48]	; 0x30
  402928:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  40292c:	2200      	movs	r2, #0
  40292e:	61a2      	str	r2, [r4, #24]
  402930:	6062      	str	r2, [r4, #4]
  402932:	061a      	lsls	r2, r3, #24
  402934:	d452      	bmi.n	4029dc <setvbuf+0xfc>
  402936:	f423 634a 	bic.w	r3, r3, #3232	; 0xca0
  40293a:	f023 0303 	bic.w	r3, r3, #3
  40293e:	f1b8 0f02 	cmp.w	r8, #2
  402942:	81a3      	strh	r3, [r4, #12]
  402944:	d037      	beq.n	4029b6 <setvbuf+0xd6>
  402946:	ab01      	add	r3, sp, #4
  402948:	466a      	mov	r2, sp
  40294a:	4621      	mov	r1, r4
  40294c:	4628      	mov	r0, r5
  40294e:	f002 fd4f 	bl	4053f0 <__swhatbuf_r>
  402952:	89a3      	ldrh	r3, [r4, #12]
  402954:	4318      	orrs	r0, r3
  402956:	81a0      	strh	r0, [r4, #12]
  402958:	b316      	cbz	r6, 4029a0 <setvbuf+0xc0>
  40295a:	b317      	cbz	r7, 4029a2 <setvbuf+0xc2>
  40295c:	6bab      	ldr	r3, [r5, #56]	; 0x38
  40295e:	2b00      	cmp	r3, #0
  402960:	d04b      	beq.n	4029fa <setvbuf+0x11a>
  402962:	9b00      	ldr	r3, [sp, #0]
  402964:	6027      	str	r7, [r4, #0]
  402966:	429e      	cmp	r6, r3
  402968:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  40296c:	6127      	str	r7, [r4, #16]
  40296e:	bf1c      	itt	ne
  402970:	f443 6300 	orrne.w	r3, r3, #2048	; 0x800
  402974:	81a3      	strhne	r3, [r4, #12]
  402976:	f1b8 0f01 	cmp.w	r8, #1
  40297a:	bf04      	itt	eq
  40297c:	f043 0301 	orreq.w	r3, r3, #1
  402980:	81a3      	strheq	r3, [r4, #12]
  402982:	b29b      	uxth	r3, r3
  402984:	f013 0008 	ands.w	r0, r3, #8
  402988:	6166      	str	r6, [r4, #20]
  40298a:	d023      	beq.n	4029d4 <setvbuf+0xf4>
  40298c:	f013 0001 	ands.w	r0, r3, #1
  402990:	d02f      	beq.n	4029f2 <setvbuf+0x112>
  402992:	2000      	movs	r0, #0
  402994:	4276      	negs	r6, r6
  402996:	61a6      	str	r6, [r4, #24]
  402998:	60a0      	str	r0, [r4, #8]
  40299a:	b003      	add	sp, #12
  40299c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
  4029a0:	9e00      	ldr	r6, [sp, #0]
  4029a2:	4630      	mov	r0, r6
  4029a4:	f002 fd52 	bl	40544c <malloc>
  4029a8:	4607      	mov	r7, r0
  4029aa:	b368      	cbz	r0, 402a08 <setvbuf+0x128>
  4029ac:	89a3      	ldrh	r3, [r4, #12]
  4029ae:	f043 0380 	orr.w	r3, r3, #128	; 0x80
  4029b2:	81a3      	strh	r3, [r4, #12]
  4029b4:	e7d2      	b.n	40295c <setvbuf+0x7c>
  4029b6:	2000      	movs	r0, #0
  4029b8:	f104 0243 	add.w	r2, r4, #67	; 0x43
  4029bc:	f043 0302 	orr.w	r3, r3, #2
  4029c0:	2500      	movs	r5, #0
  4029c2:	2101      	movs	r1, #1
  4029c4:	81a3      	strh	r3, [r4, #12]
  4029c6:	60a5      	str	r5, [r4, #8]
  4029c8:	6022      	str	r2, [r4, #0]
  4029ca:	6122      	str	r2, [r4, #16]
  4029cc:	6161      	str	r1, [r4, #20]
  4029ce:	b003      	add	sp, #12
  4029d0:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
  4029d4:	60a0      	str	r0, [r4, #8]
  4029d6:	b003      	add	sp, #12
  4029d8:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
  4029dc:	6921      	ldr	r1, [r4, #16]
  4029de:	4628      	mov	r0, r5
  4029e0:	f002 fbe8 	bl	4051b4 <_free_r>
  4029e4:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  4029e8:	e7a5      	b.n	402936 <setvbuf+0x56>
  4029ea:	4628      	mov	r0, r5
  4029ec:	f002 fb6e 	bl	4050cc <__sinit>
  4029f0:	e783      	b.n	4028fa <setvbuf+0x1a>
  4029f2:	60a6      	str	r6, [r4, #8]
  4029f4:	b003      	add	sp, #12
  4029f6:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
  4029fa:	4628      	mov	r0, r5
  4029fc:	f002 fb66 	bl	4050cc <__sinit>
  402a00:	e7af      	b.n	402962 <setvbuf+0x82>
  402a02:	f04f 30ff 	mov.w	r0, #4294967295
  402a06:	e7e2      	b.n	4029ce <setvbuf+0xee>
  402a08:	f8dd 9000 	ldr.w	r9, [sp]
  402a0c:	45b1      	cmp	r9, r6
  402a0e:	d006      	beq.n	402a1e <setvbuf+0x13e>
  402a10:	4648      	mov	r0, r9
  402a12:	f002 fd1b 	bl	40544c <malloc>
  402a16:	4607      	mov	r7, r0
  402a18:	b108      	cbz	r0, 402a1e <setvbuf+0x13e>
  402a1a:	464e      	mov	r6, r9
  402a1c:	e7c6      	b.n	4029ac <setvbuf+0xcc>
  402a1e:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  402a22:	f04f 30ff 	mov.w	r0, #4294967295
  402a26:	e7c7      	b.n	4029b8 <setvbuf+0xd8>
  402a28:	20000040 	.word	0x20000040

00402a2c <sprintf>:
  402a2c:	b40e      	push	{r1, r2, r3}
  402a2e:	b5f0      	push	{r4, r5, r6, r7, lr}
  402a30:	b09c      	sub	sp, #112	; 0x70
  402a32:	ab21      	add	r3, sp, #132	; 0x84
  402a34:	490f      	ldr	r1, [pc, #60]	; (402a74 <sprintf+0x48>)
  402a36:	f853 2b04 	ldr.w	r2, [r3], #4
  402a3a:	9301      	str	r3, [sp, #4]
  402a3c:	4605      	mov	r5, r0
  402a3e:	f06f 4400 	mvn.w	r4, #2147483648	; 0x80000000
  402a42:	6808      	ldr	r0, [r1, #0]
  402a44:	9502      	str	r5, [sp, #8]
  402a46:	f44f 7702 	mov.w	r7, #520	; 0x208
  402a4a:	f64f 76ff 	movw	r6, #65535	; 0xffff
  402a4e:	a902      	add	r1, sp, #8
  402a50:	9506      	str	r5, [sp, #24]
  402a52:	f8ad 7014 	strh.w	r7, [sp, #20]
  402a56:	9404      	str	r4, [sp, #16]
  402a58:	9407      	str	r4, [sp, #28]
  402a5a:	f8ad 6016 	strh.w	r6, [sp, #22]
  402a5e:	f000 f80b 	bl	402a78 <_svfprintf_r>
  402a62:	9b02      	ldr	r3, [sp, #8]
  402a64:	2200      	movs	r2, #0
  402a66:	701a      	strb	r2, [r3, #0]
  402a68:	b01c      	add	sp, #112	; 0x70
  402a6a:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
  402a6e:	b003      	add	sp, #12
  402a70:	4770      	bx	lr
  402a72:	bf00      	nop
  402a74:	20000040 	.word	0x20000040

00402a78 <_svfprintf_r>:
  402a78:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  402a7c:	b0c3      	sub	sp, #268	; 0x10c
  402a7e:	460c      	mov	r4, r1
  402a80:	910b      	str	r1, [sp, #44]	; 0x2c
  402a82:	4692      	mov	sl, r2
  402a84:	930f      	str	r3, [sp, #60]	; 0x3c
  402a86:	900c      	str	r0, [sp, #48]	; 0x30
  402a88:	f002 fca4 	bl	4053d4 <_localeconv_r>
  402a8c:	6803      	ldr	r3, [r0, #0]
  402a8e:	931a      	str	r3, [sp, #104]	; 0x68
  402a90:	4618      	mov	r0, r3
  402a92:	f003 fbd5 	bl	406240 <strlen>
  402a96:	89a3      	ldrh	r3, [r4, #12]
  402a98:	9019      	str	r0, [sp, #100]	; 0x64
  402a9a:	0619      	lsls	r1, r3, #24
  402a9c:	d503      	bpl.n	402aa6 <_svfprintf_r+0x2e>
  402a9e:	6923      	ldr	r3, [r4, #16]
  402aa0:	2b00      	cmp	r3, #0
  402aa2:	f001 8001 	beq.w	403aa8 <_svfprintf_r+0x1030>
  402aa6:	2300      	movs	r3, #0
  402aa8:	f10d 09c8 	add.w	r9, sp, #200	; 0xc8
  402aac:	9313      	str	r3, [sp, #76]	; 0x4c
  402aae:	9314      	str	r3, [sp, #80]	; 0x50
  402ab0:	9315      	str	r3, [sp, #84]	; 0x54
  402ab2:	9327      	str	r3, [sp, #156]	; 0x9c
  402ab4:	9326      	str	r3, [sp, #152]	; 0x98
  402ab6:	9318      	str	r3, [sp, #96]	; 0x60
  402ab8:	931b      	str	r3, [sp, #108]	; 0x6c
  402aba:	9309      	str	r3, [sp, #36]	; 0x24
  402abc:	f8cd 9094 	str.w	r9, [sp, #148]	; 0x94
  402ac0:	46c8      	mov	r8, r9
  402ac2:	9316      	str	r3, [sp, #88]	; 0x58
  402ac4:	9317      	str	r3, [sp, #92]	; 0x5c
  402ac6:	f89a 3000 	ldrb.w	r3, [sl]
  402aca:	4654      	mov	r4, sl
  402acc:	b1e3      	cbz	r3, 402b08 <_svfprintf_r+0x90>
  402ace:	2b25      	cmp	r3, #37	; 0x25
  402ad0:	d102      	bne.n	402ad8 <_svfprintf_r+0x60>
  402ad2:	e019      	b.n	402b08 <_svfprintf_r+0x90>
  402ad4:	2b25      	cmp	r3, #37	; 0x25
  402ad6:	d003      	beq.n	402ae0 <_svfprintf_r+0x68>
  402ad8:	f814 3f01 	ldrb.w	r3, [r4, #1]!
  402adc:	2b00      	cmp	r3, #0
  402ade:	d1f9      	bne.n	402ad4 <_svfprintf_r+0x5c>
  402ae0:	eba4 050a 	sub.w	r5, r4, sl
  402ae4:	b185      	cbz	r5, 402b08 <_svfprintf_r+0x90>
  402ae6:	9b26      	ldr	r3, [sp, #152]	; 0x98
  402ae8:	9a27      	ldr	r2, [sp, #156]	; 0x9c
  402aea:	f8c8 a000 	str.w	sl, [r8]
  402aee:	3301      	adds	r3, #1
  402af0:	442a      	add	r2, r5
  402af2:	2b07      	cmp	r3, #7
  402af4:	f8c8 5004 	str.w	r5, [r8, #4]
  402af8:	9227      	str	r2, [sp, #156]	; 0x9c
  402afa:	9326      	str	r3, [sp, #152]	; 0x98
  402afc:	dc7f      	bgt.n	402bfe <_svfprintf_r+0x186>
  402afe:	f108 0808 	add.w	r8, r8, #8
  402b02:	9b09      	ldr	r3, [sp, #36]	; 0x24
  402b04:	442b      	add	r3, r5
  402b06:	9309      	str	r3, [sp, #36]	; 0x24
  402b08:	7823      	ldrb	r3, [r4, #0]
  402b0a:	2b00      	cmp	r3, #0
  402b0c:	d07f      	beq.n	402c0e <_svfprintf_r+0x196>
  402b0e:	2300      	movs	r3, #0
  402b10:	461a      	mov	r2, r3
  402b12:	f88d 3077 	strb.w	r3, [sp, #119]	; 0x77
  402b16:	4619      	mov	r1, r3
  402b18:	930d      	str	r3, [sp, #52]	; 0x34
  402b1a:	469b      	mov	fp, r3
  402b1c:	f04f 30ff 	mov.w	r0, #4294967295
  402b20:	7863      	ldrb	r3, [r4, #1]
  402b22:	900a      	str	r0, [sp, #40]	; 0x28
  402b24:	f104 0a01 	add.w	sl, r4, #1
  402b28:	f10a 0a01 	add.w	sl, sl, #1
  402b2c:	f1a3 0020 	sub.w	r0, r3, #32
  402b30:	2858      	cmp	r0, #88	; 0x58
  402b32:	f200 83c0 	bhi.w	4032b6 <_svfprintf_r+0x83e>
  402b36:	e8df f010 	tbh	[pc, r0, lsl #1]
  402b3a:	0238      	.short	0x0238
  402b3c:	03be03be 	.word	0x03be03be
  402b40:	03be0240 	.word	0x03be0240
  402b44:	03be03be 	.word	0x03be03be
  402b48:	03be03be 	.word	0x03be03be
  402b4c:	024503be 	.word	0x024503be
  402b50:	03be0203 	.word	0x03be0203
  402b54:	026b005d 	.word	0x026b005d
  402b58:	028603be 	.word	0x028603be
  402b5c:	039c039c 	.word	0x039c039c
  402b60:	039c039c 	.word	0x039c039c
  402b64:	039c039c 	.word	0x039c039c
  402b68:	039c039c 	.word	0x039c039c
  402b6c:	03be039c 	.word	0x03be039c
  402b70:	03be03be 	.word	0x03be03be
  402b74:	03be03be 	.word	0x03be03be
  402b78:	03be03be 	.word	0x03be03be
  402b7c:	03be03be 	.word	0x03be03be
  402b80:	033703be 	.word	0x033703be
  402b84:	03be0357 	.word	0x03be0357
  402b88:	03be0357 	.word	0x03be0357
  402b8c:	03be03be 	.word	0x03be03be
  402b90:	039703be 	.word	0x039703be
  402b94:	03be03be 	.word	0x03be03be
  402b98:	03be03ac 	.word	0x03be03ac
  402b9c:	03be03be 	.word	0x03be03be
  402ba0:	03be03be 	.word	0x03be03be
  402ba4:	03be0259 	.word	0x03be0259
  402ba8:	031e03be 	.word	0x031e03be
  402bac:	03be03be 	.word	0x03be03be
  402bb0:	03be03be 	.word	0x03be03be
  402bb4:	03be03be 	.word	0x03be03be
  402bb8:	03be03be 	.word	0x03be03be
  402bbc:	03be03be 	.word	0x03be03be
  402bc0:	02db02c6 	.word	0x02db02c6
  402bc4:	03570357 	.word	0x03570357
  402bc8:	028b0357 	.word	0x028b0357
  402bcc:	03be02db 	.word	0x03be02db
  402bd0:	029003be 	.word	0x029003be
  402bd4:	029d03be 	.word	0x029d03be
  402bd8:	02b401cc 	.word	0x02b401cc
  402bdc:	03be0208 	.word	0x03be0208
  402be0:	03be01e1 	.word	0x03be01e1
  402be4:	03be007e 	.word	0x03be007e
  402be8:	020d03be 	.word	0x020d03be
  402bec:	980d      	ldr	r0, [sp, #52]	; 0x34
  402bee:	930f      	str	r3, [sp, #60]	; 0x3c
  402bf0:	4240      	negs	r0, r0
  402bf2:	900d      	str	r0, [sp, #52]	; 0x34
  402bf4:	f04b 0b04 	orr.w	fp, fp, #4
  402bf8:	f89a 3000 	ldrb.w	r3, [sl]
  402bfc:	e794      	b.n	402b28 <_svfprintf_r+0xb0>
  402bfe:	aa25      	add	r2, sp, #148	; 0x94
  402c00:	990b      	ldr	r1, [sp, #44]	; 0x2c
  402c02:	980c      	ldr	r0, [sp, #48]	; 0x30
  402c04:	f003 fb8a 	bl	40631c <__ssprint_r>
  402c08:	b940      	cbnz	r0, 402c1c <_svfprintf_r+0x1a4>
  402c0a:	46c8      	mov	r8, r9
  402c0c:	e779      	b.n	402b02 <_svfprintf_r+0x8a>
  402c0e:	9b27      	ldr	r3, [sp, #156]	; 0x9c
  402c10:	b123      	cbz	r3, 402c1c <_svfprintf_r+0x1a4>
  402c12:	980c      	ldr	r0, [sp, #48]	; 0x30
  402c14:	990b      	ldr	r1, [sp, #44]	; 0x2c
  402c16:	aa25      	add	r2, sp, #148	; 0x94
  402c18:	f003 fb80 	bl	40631c <__ssprint_r>
  402c1c:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
  402c1e:	899b      	ldrh	r3, [r3, #12]
  402c20:	f013 0f40 	tst.w	r3, #64	; 0x40
  402c24:	9b09      	ldr	r3, [sp, #36]	; 0x24
  402c26:	bf18      	it	ne
  402c28:	f04f 33ff 	movne.w	r3, #4294967295
  402c2c:	9309      	str	r3, [sp, #36]	; 0x24
  402c2e:	9809      	ldr	r0, [sp, #36]	; 0x24
  402c30:	b043      	add	sp, #268	; 0x10c
  402c32:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  402c36:	f01b 0f20 	tst.w	fp, #32
  402c3a:	9311      	str	r3, [sp, #68]	; 0x44
  402c3c:	f040 81dd 	bne.w	402ffa <_svfprintf_r+0x582>
  402c40:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  402c42:	f01b 0f10 	tst.w	fp, #16
  402c46:	4613      	mov	r3, r2
  402c48:	f040 856c 	bne.w	403724 <_svfprintf_r+0xcac>
  402c4c:	f01b 0f40 	tst.w	fp, #64	; 0x40
  402c50:	f000 8568 	beq.w	403724 <_svfprintf_r+0xcac>
  402c54:	8814      	ldrh	r4, [r2, #0]
  402c56:	3204      	adds	r2, #4
  402c58:	2500      	movs	r5, #0
  402c5a:	2301      	movs	r3, #1
  402c5c:	920f      	str	r2, [sp, #60]	; 0x3c
  402c5e:	2700      	movs	r7, #0
  402c60:	f88d 7077 	strb.w	r7, [sp, #119]	; 0x77
  402c64:	990a      	ldr	r1, [sp, #40]	; 0x28
  402c66:	1c4a      	adds	r2, r1, #1
  402c68:	f000 8265 	beq.w	403136 <_svfprintf_r+0x6be>
  402c6c:	f02b 0280 	bic.w	r2, fp, #128	; 0x80
  402c70:	9207      	str	r2, [sp, #28]
  402c72:	ea54 0205 	orrs.w	r2, r4, r5
  402c76:	f040 8264 	bne.w	403142 <_svfprintf_r+0x6ca>
  402c7a:	2900      	cmp	r1, #0
  402c7c:	f040 8439 	bne.w	4034f2 <_svfprintf_r+0xa7a>
  402c80:	2b00      	cmp	r3, #0
  402c82:	f040 84d4 	bne.w	40362e <_svfprintf_r+0xbb6>
  402c86:	f01b 0301 	ands.w	r3, fp, #1
  402c8a:	930e      	str	r3, [sp, #56]	; 0x38
  402c8c:	f000 8602 	beq.w	403894 <_svfprintf_r+0xe1c>
  402c90:	ae42      	add	r6, sp, #264	; 0x108
  402c92:	2330      	movs	r3, #48	; 0x30
  402c94:	f806 3d41 	strb.w	r3, [r6, #-65]!
  402c98:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  402c9a:	9a0e      	ldr	r2, [sp, #56]	; 0x38
  402c9c:	4293      	cmp	r3, r2
  402c9e:	bfb8      	it	lt
  402ca0:	4613      	movlt	r3, r2
  402ca2:	9308      	str	r3, [sp, #32]
  402ca4:	2300      	movs	r3, #0
  402ca6:	9312      	str	r3, [sp, #72]	; 0x48
  402ca8:	b117      	cbz	r7, 402cb0 <_svfprintf_r+0x238>
  402caa:	9b08      	ldr	r3, [sp, #32]
  402cac:	3301      	adds	r3, #1
  402cae:	9308      	str	r3, [sp, #32]
  402cb0:	9b07      	ldr	r3, [sp, #28]
  402cb2:	f013 0302 	ands.w	r3, r3, #2
  402cb6:	9310      	str	r3, [sp, #64]	; 0x40
  402cb8:	d002      	beq.n	402cc0 <_svfprintf_r+0x248>
  402cba:	9b08      	ldr	r3, [sp, #32]
  402cbc:	3302      	adds	r3, #2
  402cbe:	9308      	str	r3, [sp, #32]
  402cc0:	9b07      	ldr	r3, [sp, #28]
  402cc2:	f013 0584 	ands.w	r5, r3, #132	; 0x84
  402cc6:	f040 830d 	bne.w	4032e4 <_svfprintf_r+0x86c>
  402cca:	9b0d      	ldr	r3, [sp, #52]	; 0x34
  402ccc:	9a08      	ldr	r2, [sp, #32]
  402cce:	eba3 0b02 	sub.w	fp, r3, r2
  402cd2:	f1bb 0f00 	cmp.w	fp, #0
  402cd6:	f340 8305 	ble.w	4032e4 <_svfprintf_r+0x86c>
  402cda:	f1bb 0f10 	cmp.w	fp, #16
  402cde:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  402ce0:	9a26      	ldr	r2, [sp, #152]	; 0x98
  402ce2:	dd29      	ble.n	402d38 <_svfprintf_r+0x2c0>
  402ce4:	4643      	mov	r3, r8
  402ce6:	4621      	mov	r1, r4
  402ce8:	46a8      	mov	r8, r5
  402cea:	2710      	movs	r7, #16
  402cec:	9c0c      	ldr	r4, [sp, #48]	; 0x30
  402cee:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
  402cf0:	e006      	b.n	402d00 <_svfprintf_r+0x288>
  402cf2:	f1ab 0b10 	sub.w	fp, fp, #16
  402cf6:	f1bb 0f10 	cmp.w	fp, #16
  402cfa:	f103 0308 	add.w	r3, r3, #8
  402cfe:	dd18      	ble.n	402d32 <_svfprintf_r+0x2ba>
  402d00:	3201      	adds	r2, #1
  402d02:	48b7      	ldr	r0, [pc, #732]	; (402fe0 <_svfprintf_r+0x568>)
  402d04:	9226      	str	r2, [sp, #152]	; 0x98
  402d06:	3110      	adds	r1, #16
  402d08:	2a07      	cmp	r2, #7
  402d0a:	9127      	str	r1, [sp, #156]	; 0x9c
  402d0c:	e883 0081 	stmia.w	r3, {r0, r7}
  402d10:	ddef      	ble.n	402cf2 <_svfprintf_r+0x27a>
  402d12:	aa25      	add	r2, sp, #148	; 0x94
  402d14:	4629      	mov	r1, r5
  402d16:	4620      	mov	r0, r4
  402d18:	f003 fb00 	bl	40631c <__ssprint_r>
  402d1c:	2800      	cmp	r0, #0
  402d1e:	f47f af7d 	bne.w	402c1c <_svfprintf_r+0x1a4>
  402d22:	f1ab 0b10 	sub.w	fp, fp, #16
  402d26:	f1bb 0f10 	cmp.w	fp, #16
  402d2a:	9927      	ldr	r1, [sp, #156]	; 0x9c
  402d2c:	9a26      	ldr	r2, [sp, #152]	; 0x98
  402d2e:	464b      	mov	r3, r9
  402d30:	dce6      	bgt.n	402d00 <_svfprintf_r+0x288>
  402d32:	4645      	mov	r5, r8
  402d34:	460c      	mov	r4, r1
  402d36:	4698      	mov	r8, r3
  402d38:	3201      	adds	r2, #1
  402d3a:	4ba9      	ldr	r3, [pc, #676]	; (402fe0 <_svfprintf_r+0x568>)
  402d3c:	9226      	str	r2, [sp, #152]	; 0x98
  402d3e:	445c      	add	r4, fp
  402d40:	2a07      	cmp	r2, #7
  402d42:	9427      	str	r4, [sp, #156]	; 0x9c
  402d44:	e888 0808 	stmia.w	r8, {r3, fp}
  402d48:	f300 8495 	bgt.w	403676 <_svfprintf_r+0xbfe>
  402d4c:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
  402d50:	f108 0808 	add.w	r8, r8, #8
  402d54:	b177      	cbz	r7, 402d74 <_svfprintf_r+0x2fc>
  402d56:	9b26      	ldr	r3, [sp, #152]	; 0x98
  402d58:	3301      	adds	r3, #1
  402d5a:	3401      	adds	r4, #1
  402d5c:	f10d 0177 	add.w	r1, sp, #119	; 0x77
  402d60:	2201      	movs	r2, #1
  402d62:	2b07      	cmp	r3, #7
  402d64:	9427      	str	r4, [sp, #156]	; 0x9c
  402d66:	9326      	str	r3, [sp, #152]	; 0x98
  402d68:	e888 0006 	stmia.w	r8, {r1, r2}
  402d6c:	f300 83d8 	bgt.w	403520 <_svfprintf_r+0xaa8>
  402d70:	f108 0808 	add.w	r8, r8, #8
  402d74:	9b10      	ldr	r3, [sp, #64]	; 0x40
  402d76:	b16b      	cbz	r3, 402d94 <_svfprintf_r+0x31c>
  402d78:	9b26      	ldr	r3, [sp, #152]	; 0x98
  402d7a:	3301      	adds	r3, #1
  402d7c:	3402      	adds	r4, #2
  402d7e:	a91e      	add	r1, sp, #120	; 0x78
  402d80:	2202      	movs	r2, #2
  402d82:	2b07      	cmp	r3, #7
  402d84:	9427      	str	r4, [sp, #156]	; 0x9c
  402d86:	9326      	str	r3, [sp, #152]	; 0x98
  402d88:	e888 0006 	stmia.w	r8, {r1, r2}
  402d8c:	f300 83d3 	bgt.w	403536 <_svfprintf_r+0xabe>
  402d90:	f108 0808 	add.w	r8, r8, #8
  402d94:	2d80      	cmp	r5, #128	; 0x80
  402d96:	f000 8313 	beq.w	4033c0 <_svfprintf_r+0x948>
  402d9a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  402d9c:	9a0e      	ldr	r2, [sp, #56]	; 0x38
  402d9e:	1a9f      	subs	r7, r3, r2
  402da0:	2f00      	cmp	r7, #0
  402da2:	dd36      	ble.n	402e12 <_svfprintf_r+0x39a>
  402da4:	2f10      	cmp	r7, #16
  402da6:	9b26      	ldr	r3, [sp, #152]	; 0x98
  402da8:	4d8e      	ldr	r5, [pc, #568]	; (402fe4 <_svfprintf_r+0x56c>)
  402daa:	dd27      	ble.n	402dfc <_svfprintf_r+0x384>
  402dac:	4642      	mov	r2, r8
  402dae:	4621      	mov	r1, r4
  402db0:	46b0      	mov	r8, r6
  402db2:	f04f 0b10 	mov.w	fp, #16
  402db6:	462e      	mov	r6, r5
  402db8:	9c0c      	ldr	r4, [sp, #48]	; 0x30
  402dba:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
  402dbc:	e004      	b.n	402dc8 <_svfprintf_r+0x350>
  402dbe:	3f10      	subs	r7, #16
  402dc0:	2f10      	cmp	r7, #16
  402dc2:	f102 0208 	add.w	r2, r2, #8
  402dc6:	dd15      	ble.n	402df4 <_svfprintf_r+0x37c>
  402dc8:	3301      	adds	r3, #1
  402dca:	3110      	adds	r1, #16
  402dcc:	2b07      	cmp	r3, #7
  402dce:	9127      	str	r1, [sp, #156]	; 0x9c
  402dd0:	9326      	str	r3, [sp, #152]	; 0x98
  402dd2:	e882 0840 	stmia.w	r2, {r6, fp}
  402dd6:	ddf2      	ble.n	402dbe <_svfprintf_r+0x346>
  402dd8:	aa25      	add	r2, sp, #148	; 0x94
  402dda:	4629      	mov	r1, r5
  402ddc:	4620      	mov	r0, r4
  402dde:	f003 fa9d 	bl	40631c <__ssprint_r>
  402de2:	2800      	cmp	r0, #0
  402de4:	f47f af1a 	bne.w	402c1c <_svfprintf_r+0x1a4>
  402de8:	3f10      	subs	r7, #16
  402dea:	2f10      	cmp	r7, #16
  402dec:	9927      	ldr	r1, [sp, #156]	; 0x9c
  402dee:	9b26      	ldr	r3, [sp, #152]	; 0x98
  402df0:	464a      	mov	r2, r9
  402df2:	dce9      	bgt.n	402dc8 <_svfprintf_r+0x350>
  402df4:	4635      	mov	r5, r6
  402df6:	460c      	mov	r4, r1
  402df8:	4646      	mov	r6, r8
  402dfa:	4690      	mov	r8, r2
  402dfc:	3301      	adds	r3, #1
  402dfe:	443c      	add	r4, r7
  402e00:	2b07      	cmp	r3, #7
  402e02:	9427      	str	r4, [sp, #156]	; 0x9c
  402e04:	9326      	str	r3, [sp, #152]	; 0x98
  402e06:	e888 00a0 	stmia.w	r8, {r5, r7}
  402e0a:	f300 837e 	bgt.w	40350a <_svfprintf_r+0xa92>
  402e0e:	f108 0808 	add.w	r8, r8, #8
  402e12:	9b07      	ldr	r3, [sp, #28]
  402e14:	05df      	lsls	r7, r3, #23
  402e16:	f100 8267 	bmi.w	4032e8 <_svfprintf_r+0x870>
  402e1a:	9b26      	ldr	r3, [sp, #152]	; 0x98
  402e1c:	990e      	ldr	r1, [sp, #56]	; 0x38
  402e1e:	f8c8 6000 	str.w	r6, [r8]
  402e22:	3301      	adds	r3, #1
  402e24:	440c      	add	r4, r1
  402e26:	2b07      	cmp	r3, #7
  402e28:	9427      	str	r4, [sp, #156]	; 0x9c
  402e2a:	f8c8 1004 	str.w	r1, [r8, #4]
  402e2e:	9326      	str	r3, [sp, #152]	; 0x98
  402e30:	f300 834a 	bgt.w	4034c8 <_svfprintf_r+0xa50>
  402e34:	f108 0808 	add.w	r8, r8, #8
  402e38:	9b07      	ldr	r3, [sp, #28]
  402e3a:	075b      	lsls	r3, r3, #29
  402e3c:	d53a      	bpl.n	402eb4 <_svfprintf_r+0x43c>
  402e3e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
  402e40:	9a08      	ldr	r2, [sp, #32]
  402e42:	1a9d      	subs	r5, r3, r2
  402e44:	2d00      	cmp	r5, #0
  402e46:	dd35      	ble.n	402eb4 <_svfprintf_r+0x43c>
  402e48:	2d10      	cmp	r5, #16
  402e4a:	9b26      	ldr	r3, [sp, #152]	; 0x98
  402e4c:	dd20      	ble.n	402e90 <_svfprintf_r+0x418>
  402e4e:	2610      	movs	r6, #16
  402e50:	9f0c      	ldr	r7, [sp, #48]	; 0x30
  402e52:	f8dd b02c 	ldr.w	fp, [sp, #44]	; 0x2c
  402e56:	e004      	b.n	402e62 <_svfprintf_r+0x3ea>
  402e58:	3d10      	subs	r5, #16
  402e5a:	2d10      	cmp	r5, #16
  402e5c:	f108 0808 	add.w	r8, r8, #8
  402e60:	dd16      	ble.n	402e90 <_svfprintf_r+0x418>
  402e62:	3301      	adds	r3, #1
  402e64:	4a5e      	ldr	r2, [pc, #376]	; (402fe0 <_svfprintf_r+0x568>)
  402e66:	9326      	str	r3, [sp, #152]	; 0x98
  402e68:	3410      	adds	r4, #16
  402e6a:	2b07      	cmp	r3, #7
  402e6c:	9427      	str	r4, [sp, #156]	; 0x9c
  402e6e:	e888 0044 	stmia.w	r8, {r2, r6}
  402e72:	ddf1      	ble.n	402e58 <_svfprintf_r+0x3e0>
  402e74:	aa25      	add	r2, sp, #148	; 0x94
  402e76:	4659      	mov	r1, fp
  402e78:	4638      	mov	r0, r7
  402e7a:	f003 fa4f 	bl	40631c <__ssprint_r>
  402e7e:	2800      	cmp	r0, #0
  402e80:	f47f aecc 	bne.w	402c1c <_svfprintf_r+0x1a4>
  402e84:	3d10      	subs	r5, #16
  402e86:	2d10      	cmp	r5, #16
  402e88:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  402e8a:	9b26      	ldr	r3, [sp, #152]	; 0x98
  402e8c:	46c8      	mov	r8, r9
  402e8e:	dce8      	bgt.n	402e62 <_svfprintf_r+0x3ea>
  402e90:	3301      	adds	r3, #1
  402e92:	4a53      	ldr	r2, [pc, #332]	; (402fe0 <_svfprintf_r+0x568>)
  402e94:	9326      	str	r3, [sp, #152]	; 0x98
  402e96:	442c      	add	r4, r5
  402e98:	2b07      	cmp	r3, #7
  402e9a:	9427      	str	r4, [sp, #156]	; 0x9c
  402e9c:	e888 0024 	stmia.w	r8, {r2, r5}
  402ea0:	dd08      	ble.n	402eb4 <_svfprintf_r+0x43c>
  402ea2:	aa25      	add	r2, sp, #148	; 0x94
  402ea4:	990b      	ldr	r1, [sp, #44]	; 0x2c
  402ea6:	980c      	ldr	r0, [sp, #48]	; 0x30
  402ea8:	f003 fa38 	bl	40631c <__ssprint_r>
  402eac:	2800      	cmp	r0, #0
  402eae:	f47f aeb5 	bne.w	402c1c <_svfprintf_r+0x1a4>
  402eb2:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  402eb4:	9b09      	ldr	r3, [sp, #36]	; 0x24
  402eb6:	9a0d      	ldr	r2, [sp, #52]	; 0x34
  402eb8:	9908      	ldr	r1, [sp, #32]
  402eba:	428a      	cmp	r2, r1
  402ebc:	bfac      	ite	ge
  402ebe:	189b      	addge	r3, r3, r2
  402ec0:	185b      	addlt	r3, r3, r1
  402ec2:	9309      	str	r3, [sp, #36]	; 0x24
  402ec4:	2c00      	cmp	r4, #0
  402ec6:	f040 830a 	bne.w	4034de <_svfprintf_r+0xa66>
  402eca:	2300      	movs	r3, #0
  402ecc:	9326      	str	r3, [sp, #152]	; 0x98
  402ece:	46c8      	mov	r8, r9
  402ed0:	e5f9      	b.n	402ac6 <_svfprintf_r+0x4e>
  402ed2:	9311      	str	r3, [sp, #68]	; 0x44
  402ed4:	f01b 0320 	ands.w	r3, fp, #32
  402ed8:	f040 81e2 	bne.w	4032a0 <_svfprintf_r+0x828>
  402edc:	f01b 0210 	ands.w	r2, fp, #16
  402ee0:	f040 842c 	bne.w	40373c <_svfprintf_r+0xcc4>
  402ee4:	f01b 0340 	ands.w	r3, fp, #64	; 0x40
  402ee8:	f000 8428 	beq.w	40373c <_svfprintf_r+0xcc4>
  402eec:	990f      	ldr	r1, [sp, #60]	; 0x3c
  402eee:	4613      	mov	r3, r2
  402ef0:	460a      	mov	r2, r1
  402ef2:	3204      	adds	r2, #4
  402ef4:	880c      	ldrh	r4, [r1, #0]
  402ef6:	920f      	str	r2, [sp, #60]	; 0x3c
  402ef8:	2500      	movs	r5, #0
  402efa:	e6b0      	b.n	402c5e <_svfprintf_r+0x1e6>
  402efc:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  402efe:	9311      	str	r3, [sp, #68]	; 0x44
  402f00:	6816      	ldr	r6, [r2, #0]
  402f02:	2400      	movs	r4, #0
  402f04:	f88d 4077 	strb.w	r4, [sp, #119]	; 0x77
  402f08:	1d15      	adds	r5, r2, #4
  402f0a:	2e00      	cmp	r6, #0
  402f0c:	f000 86a5 	beq.w	403c5a <_svfprintf_r+0x11e2>
  402f10:	9a0a      	ldr	r2, [sp, #40]	; 0x28
  402f12:	1c53      	adds	r3, r2, #1
  402f14:	f000 8607 	beq.w	403b26 <_svfprintf_r+0x10ae>
  402f18:	4621      	mov	r1, r4
  402f1a:	4630      	mov	r0, r6
  402f1c:	f002 fd50 	bl	4059c0 <memchr>
  402f20:	2800      	cmp	r0, #0
  402f22:	f000 86df 	beq.w	403ce4 <_svfprintf_r+0x126c>
  402f26:	1b83      	subs	r3, r0, r6
  402f28:	930e      	str	r3, [sp, #56]	; 0x38
  402f2a:	940a      	str	r4, [sp, #40]	; 0x28
  402f2c:	950f      	str	r5, [sp, #60]	; 0x3c
  402f2e:	f8cd b01c 	str.w	fp, [sp, #28]
  402f32:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
  402f36:	9308      	str	r3, [sp, #32]
  402f38:	9412      	str	r4, [sp, #72]	; 0x48
  402f3a:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
  402f3e:	e6b3      	b.n	402ca8 <_svfprintf_r+0x230>
  402f40:	f89a 3000 	ldrb.w	r3, [sl]
  402f44:	2201      	movs	r2, #1
  402f46:	212b      	movs	r1, #43	; 0x2b
  402f48:	e5ee      	b.n	402b28 <_svfprintf_r+0xb0>
  402f4a:	f04b 0b20 	orr.w	fp, fp, #32
  402f4e:	f89a 3000 	ldrb.w	r3, [sl]
  402f52:	e5e9      	b.n	402b28 <_svfprintf_r+0xb0>
  402f54:	9311      	str	r3, [sp, #68]	; 0x44
  402f56:	2a00      	cmp	r2, #0
  402f58:	f040 878d 	bne.w	403e76 <_svfprintf_r+0x13fe>
  402f5c:	4b22      	ldr	r3, [pc, #136]	; (402fe8 <_svfprintf_r+0x570>)
  402f5e:	9318      	str	r3, [sp, #96]	; 0x60
  402f60:	f01b 0f20 	tst.w	fp, #32
  402f64:	f040 8111 	bne.w	40318a <_svfprintf_r+0x712>
  402f68:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  402f6a:	f01b 0f10 	tst.w	fp, #16
  402f6e:	4613      	mov	r3, r2
  402f70:	f040 83df 	bne.w	403732 <_svfprintf_r+0xcba>
  402f74:	f01b 0f40 	tst.w	fp, #64	; 0x40
  402f78:	f000 83db 	beq.w	403732 <_svfprintf_r+0xcba>
  402f7c:	3304      	adds	r3, #4
  402f7e:	8814      	ldrh	r4, [r2, #0]
  402f80:	930f      	str	r3, [sp, #60]	; 0x3c
  402f82:	2500      	movs	r5, #0
  402f84:	f01b 0f01 	tst.w	fp, #1
  402f88:	f000 810c 	beq.w	4031a4 <_svfprintf_r+0x72c>
  402f8c:	ea54 0305 	orrs.w	r3, r4, r5
  402f90:	f000 8108 	beq.w	4031a4 <_svfprintf_r+0x72c>
  402f94:	2330      	movs	r3, #48	; 0x30
  402f96:	f89d 2044 	ldrb.w	r2, [sp, #68]	; 0x44
  402f9a:	f88d 3078 	strb.w	r3, [sp, #120]	; 0x78
  402f9e:	f88d 2079 	strb.w	r2, [sp, #121]	; 0x79
  402fa2:	f04b 0b02 	orr.w	fp, fp, #2
  402fa6:	2302      	movs	r3, #2
  402fa8:	e659      	b.n	402c5e <_svfprintf_r+0x1e6>
  402faa:	f89a 3000 	ldrb.w	r3, [sl]
  402fae:	2900      	cmp	r1, #0
  402fb0:	f47f adba 	bne.w	402b28 <_svfprintf_r+0xb0>
  402fb4:	2201      	movs	r2, #1
  402fb6:	2120      	movs	r1, #32
  402fb8:	e5b6      	b.n	402b28 <_svfprintf_r+0xb0>
  402fba:	f04b 0b01 	orr.w	fp, fp, #1
  402fbe:	f89a 3000 	ldrb.w	r3, [sl]
  402fc2:	e5b1      	b.n	402b28 <_svfprintf_r+0xb0>
  402fc4:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
  402fc6:	6823      	ldr	r3, [r4, #0]
  402fc8:	930d      	str	r3, [sp, #52]	; 0x34
  402fca:	4618      	mov	r0, r3
  402fcc:	2800      	cmp	r0, #0
  402fce:	4623      	mov	r3, r4
  402fd0:	f103 0304 	add.w	r3, r3, #4
  402fd4:	f6ff ae0a 	blt.w	402bec <_svfprintf_r+0x174>
  402fd8:	930f      	str	r3, [sp, #60]	; 0x3c
  402fda:	f89a 3000 	ldrb.w	r3, [sl]
  402fde:	e5a3      	b.n	402b28 <_svfprintf_r+0xb0>
  402fe0:	00407768 	.word	0x00407768
  402fe4:	00407778 	.word	0x00407778
  402fe8:	00407748 	.word	0x00407748
  402fec:	f04b 0b10 	orr.w	fp, fp, #16
  402ff0:	f01b 0f20 	tst.w	fp, #32
  402ff4:	9311      	str	r3, [sp, #68]	; 0x44
  402ff6:	f43f ae23 	beq.w	402c40 <_svfprintf_r+0x1c8>
  402ffa:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
  402ffc:	3507      	adds	r5, #7
  402ffe:	f025 0307 	bic.w	r3, r5, #7
  403002:	f103 0208 	add.w	r2, r3, #8
  403006:	e9d3 4500 	ldrd	r4, r5, [r3]
  40300a:	920f      	str	r2, [sp, #60]	; 0x3c
  40300c:	2301      	movs	r3, #1
  40300e:	e626      	b.n	402c5e <_svfprintf_r+0x1e6>
  403010:	f89a 3000 	ldrb.w	r3, [sl]
  403014:	2b2a      	cmp	r3, #42	; 0x2a
  403016:	f10a 0401 	add.w	r4, sl, #1
  40301a:	f000 871f 	beq.w	403e5c <_svfprintf_r+0x13e4>
  40301e:	f1a3 0030 	sub.w	r0, r3, #48	; 0x30
  403022:	2809      	cmp	r0, #9
  403024:	46a2      	mov	sl, r4
  403026:	f200 86ab 	bhi.w	403d80 <_svfprintf_r+0x1308>
  40302a:	2300      	movs	r3, #0
  40302c:	461c      	mov	r4, r3
  40302e:	f81a 3b01 	ldrb.w	r3, [sl], #1
  403032:	eb04 0484 	add.w	r4, r4, r4, lsl #2
  403036:	eb00 0444 	add.w	r4, r0, r4, lsl #1
  40303a:	f1a3 0030 	sub.w	r0, r3, #48	; 0x30
  40303e:	2809      	cmp	r0, #9
  403040:	d9f5      	bls.n	40302e <_svfprintf_r+0x5b6>
  403042:	940a      	str	r4, [sp, #40]	; 0x28
  403044:	e572      	b.n	402b2c <_svfprintf_r+0xb4>
  403046:	f04b 0b80 	orr.w	fp, fp, #128	; 0x80
  40304a:	f89a 3000 	ldrb.w	r3, [sl]
  40304e:	e56b      	b.n	402b28 <_svfprintf_r+0xb0>
  403050:	f04b 0b40 	orr.w	fp, fp, #64	; 0x40
  403054:	f89a 3000 	ldrb.w	r3, [sl]
  403058:	e566      	b.n	402b28 <_svfprintf_r+0xb0>
  40305a:	f89a 3000 	ldrb.w	r3, [sl]
  40305e:	2b6c      	cmp	r3, #108	; 0x6c
  403060:	bf03      	ittte	eq
  403062:	f89a 3001 	ldrbeq.w	r3, [sl, #1]
  403066:	f04b 0b20 	orreq.w	fp, fp, #32
  40306a:	f10a 0a01 	addeq.w	sl, sl, #1
  40306e:	f04b 0b10 	orrne.w	fp, fp, #16
  403072:	e559      	b.n	402b28 <_svfprintf_r+0xb0>
  403074:	2a00      	cmp	r2, #0
  403076:	f040 8709 	bne.w	403e8c <_svfprintf_r+0x1414>
  40307a:	f01b 0f20 	tst.w	fp, #32
  40307e:	f040 84f7 	bne.w	403a70 <_svfprintf_r+0xff8>
  403082:	f01b 0f10 	tst.w	fp, #16
  403086:	f040 84aa 	bne.w	4039de <_svfprintf_r+0xf66>
  40308a:	f01b 0f40 	tst.w	fp, #64	; 0x40
  40308e:	f000 84a6 	beq.w	4039de <_svfprintf_r+0xf66>
  403092:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  403094:	6813      	ldr	r3, [r2, #0]
  403096:	3204      	adds	r2, #4
  403098:	920f      	str	r2, [sp, #60]	; 0x3c
  40309a:	f8bd 2024 	ldrh.w	r2, [sp, #36]	; 0x24
  40309e:	801a      	strh	r2, [r3, #0]
  4030a0:	e511      	b.n	402ac6 <_svfprintf_r+0x4e>
  4030a2:	990f      	ldr	r1, [sp, #60]	; 0x3c
  4030a4:	4bb2      	ldr	r3, [pc, #712]	; (403370 <_svfprintf_r+0x8f8>)
  4030a6:	680c      	ldr	r4, [r1, #0]
  4030a8:	9318      	str	r3, [sp, #96]	; 0x60
  4030aa:	2230      	movs	r2, #48	; 0x30
  4030ac:	2378      	movs	r3, #120	; 0x78
  4030ae:	3104      	adds	r1, #4
  4030b0:	f88d 3079 	strb.w	r3, [sp, #121]	; 0x79
  4030b4:	9311      	str	r3, [sp, #68]	; 0x44
  4030b6:	f04b 0b02 	orr.w	fp, fp, #2
  4030ba:	910f      	str	r1, [sp, #60]	; 0x3c
  4030bc:	2500      	movs	r5, #0
  4030be:	f88d 2078 	strb.w	r2, [sp, #120]	; 0x78
  4030c2:	2302      	movs	r3, #2
  4030c4:	e5cb      	b.n	402c5e <_svfprintf_r+0x1e6>
  4030c6:	990f      	ldr	r1, [sp, #60]	; 0x3c
  4030c8:	9311      	str	r3, [sp, #68]	; 0x44
  4030ca:	680a      	ldr	r2, [r1, #0]
  4030cc:	f88d 20a0 	strb.w	r2, [sp, #160]	; 0xa0
  4030d0:	2300      	movs	r3, #0
  4030d2:	460a      	mov	r2, r1
  4030d4:	461f      	mov	r7, r3
  4030d6:	f88d 3077 	strb.w	r3, [sp, #119]	; 0x77
  4030da:	3204      	adds	r2, #4
  4030dc:	2301      	movs	r3, #1
  4030de:	9308      	str	r3, [sp, #32]
  4030e0:	f8cd b01c 	str.w	fp, [sp, #28]
  4030e4:	970a      	str	r7, [sp, #40]	; 0x28
  4030e6:	9712      	str	r7, [sp, #72]	; 0x48
  4030e8:	920f      	str	r2, [sp, #60]	; 0x3c
  4030ea:	930e      	str	r3, [sp, #56]	; 0x38
  4030ec:	ae28      	add	r6, sp, #160	; 0xa0
  4030ee:	e5df      	b.n	402cb0 <_svfprintf_r+0x238>
  4030f0:	9311      	str	r3, [sp, #68]	; 0x44
  4030f2:	2a00      	cmp	r2, #0
  4030f4:	f040 86e2 	bne.w	403ebc <_svfprintf_r+0x1444>
  4030f8:	f01b 0f20 	tst.w	fp, #32
  4030fc:	d15d      	bne.n	4031ba <_svfprintf_r+0x742>
  4030fe:	f01b 0f10 	tst.w	fp, #16
  403102:	f040 8306 	bne.w	403712 <_svfprintf_r+0xc9a>
  403106:	f01b 0f40 	tst.w	fp, #64	; 0x40
  40310a:	f000 8302 	beq.w	403712 <_svfprintf_r+0xc9a>
  40310e:	990f      	ldr	r1, [sp, #60]	; 0x3c
  403110:	f9b1 4000 	ldrsh.w	r4, [r1]
  403114:	3104      	adds	r1, #4
  403116:	17e5      	asrs	r5, r4, #31
  403118:	4622      	mov	r2, r4
  40311a:	462b      	mov	r3, r5
  40311c:	910f      	str	r1, [sp, #60]	; 0x3c
  40311e:	2a00      	cmp	r2, #0
  403120:	f173 0300 	sbcs.w	r3, r3, #0
  403124:	db58      	blt.n	4031d8 <_svfprintf_r+0x760>
  403126:	990a      	ldr	r1, [sp, #40]	; 0x28
  403128:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
  40312c:	1c4a      	adds	r2, r1, #1
  40312e:	f04f 0301 	mov.w	r3, #1
  403132:	f47f ad9b 	bne.w	402c6c <_svfprintf_r+0x1f4>
  403136:	ea54 0205 	orrs.w	r2, r4, r5
  40313a:	f000 81dc 	beq.w	4034f6 <_svfprintf_r+0xa7e>
  40313e:	f8cd b01c 	str.w	fp, [sp, #28]
  403142:	2b01      	cmp	r3, #1
  403144:	f000 8278 	beq.w	403638 <_svfprintf_r+0xbc0>
  403148:	2b02      	cmp	r3, #2
  40314a:	f040 8203 	bne.w	403554 <_svfprintf_r+0xadc>
  40314e:	9818      	ldr	r0, [sp, #96]	; 0x60
  403150:	464e      	mov	r6, r9
  403152:	0923      	lsrs	r3, r4, #4
  403154:	f004 010f 	and.w	r1, r4, #15
  403158:	ea43 7305 	orr.w	r3, r3, r5, lsl #28
  40315c:	092a      	lsrs	r2, r5, #4
  40315e:	461c      	mov	r4, r3
  403160:	4615      	mov	r5, r2
  403162:	5c43      	ldrb	r3, [r0, r1]
  403164:	f806 3d01 	strb.w	r3, [r6, #-1]!
  403168:	ea54 0305 	orrs.w	r3, r4, r5
  40316c:	d1f1      	bne.n	403152 <_svfprintf_r+0x6da>
  40316e:	eba9 0306 	sub.w	r3, r9, r6
  403172:	930e      	str	r3, [sp, #56]	; 0x38
  403174:	e590      	b.n	402c98 <_svfprintf_r+0x220>
  403176:	9311      	str	r3, [sp, #68]	; 0x44
  403178:	2a00      	cmp	r2, #0
  40317a:	f040 869b 	bne.w	403eb4 <_svfprintf_r+0x143c>
  40317e:	4b7d      	ldr	r3, [pc, #500]	; (403374 <_svfprintf_r+0x8fc>)
  403180:	9318      	str	r3, [sp, #96]	; 0x60
  403182:	f01b 0f20 	tst.w	fp, #32
  403186:	f43f aeef 	beq.w	402f68 <_svfprintf_r+0x4f0>
  40318a:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
  40318c:	3507      	adds	r5, #7
  40318e:	f025 0307 	bic.w	r3, r5, #7
  403192:	f103 0208 	add.w	r2, r3, #8
  403196:	f01b 0f01 	tst.w	fp, #1
  40319a:	920f      	str	r2, [sp, #60]	; 0x3c
  40319c:	e9d3 4500 	ldrd	r4, r5, [r3]
  4031a0:	f47f aef4 	bne.w	402f8c <_svfprintf_r+0x514>
  4031a4:	2302      	movs	r3, #2
  4031a6:	e55a      	b.n	402c5e <_svfprintf_r+0x1e6>
  4031a8:	9311      	str	r3, [sp, #68]	; 0x44
  4031aa:	2a00      	cmp	r2, #0
  4031ac:	f040 867e 	bne.w	403eac <_svfprintf_r+0x1434>
  4031b0:	f04b 0b10 	orr.w	fp, fp, #16
  4031b4:	f01b 0f20 	tst.w	fp, #32
  4031b8:	d0a1      	beq.n	4030fe <_svfprintf_r+0x686>
  4031ba:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
  4031bc:	3507      	adds	r5, #7
  4031be:	f025 0507 	bic.w	r5, r5, #7
  4031c2:	e9d5 2300 	ldrd	r2, r3, [r5]
  4031c6:	2a00      	cmp	r2, #0
  4031c8:	f105 0108 	add.w	r1, r5, #8
  4031cc:	461d      	mov	r5, r3
  4031ce:	f173 0300 	sbcs.w	r3, r3, #0
  4031d2:	910f      	str	r1, [sp, #60]	; 0x3c
  4031d4:	4614      	mov	r4, r2
  4031d6:	daa6      	bge.n	403126 <_svfprintf_r+0x6ae>
  4031d8:	272d      	movs	r7, #45	; 0x2d
  4031da:	4264      	negs	r4, r4
  4031dc:	eb65 0545 	sbc.w	r5, r5, r5, lsl #1
  4031e0:	f88d 7077 	strb.w	r7, [sp, #119]	; 0x77
  4031e4:	2301      	movs	r3, #1
  4031e6:	e53d      	b.n	402c64 <_svfprintf_r+0x1ec>
  4031e8:	9311      	str	r3, [sp, #68]	; 0x44
  4031ea:	2a00      	cmp	r2, #0
  4031ec:	f040 865a 	bne.w	403ea4 <_svfprintf_r+0x142c>
  4031f0:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
  4031f2:	3507      	adds	r5, #7
  4031f4:	f025 0307 	bic.w	r3, r5, #7
  4031f8:	f103 0208 	add.w	r2, r3, #8
  4031fc:	920f      	str	r2, [sp, #60]	; 0x3c
  4031fe:	681a      	ldr	r2, [r3, #0]
  403200:	9214      	str	r2, [sp, #80]	; 0x50
  403202:	685b      	ldr	r3, [r3, #4]
  403204:	9315      	str	r3, [sp, #84]	; 0x54
  403206:	9b15      	ldr	r3, [sp, #84]	; 0x54
  403208:	9d14      	ldr	r5, [sp, #80]	; 0x50
  40320a:	f023 4400 	bic.w	r4, r3, #2147483648	; 0x80000000
  40320e:	4628      	mov	r0, r5
  403210:	4621      	mov	r1, r4
  403212:	f04f 32ff 	mov.w	r2, #4294967295
  403216:	4b58      	ldr	r3, [pc, #352]	; (403378 <_svfprintf_r+0x900>)
  403218:	f003 fcde 	bl	406bd8 <__aeabi_dcmpun>
  40321c:	2800      	cmp	r0, #0
  40321e:	f040 8348 	bne.w	4038b2 <_svfprintf_r+0xe3a>
  403222:	4628      	mov	r0, r5
  403224:	4621      	mov	r1, r4
  403226:	f04f 32ff 	mov.w	r2, #4294967295
  40322a:	4b53      	ldr	r3, [pc, #332]	; (403378 <_svfprintf_r+0x900>)
  40322c:	f003 fcb6 	bl	406b9c <__aeabi_dcmple>
  403230:	2800      	cmp	r0, #0
  403232:	f040 833e 	bne.w	4038b2 <_svfprintf_r+0xe3a>
  403236:	a814      	add	r0, sp, #80	; 0x50
  403238:	c80f      	ldmia	r0, {r0, r1, r2, r3}
  40323a:	f003 fca5 	bl	406b88 <__aeabi_dcmplt>
  40323e:	2800      	cmp	r0, #0
  403240:	f040 852f 	bne.w	403ca2 <_svfprintf_r+0x122a>
  403244:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
  403248:	4e4c      	ldr	r6, [pc, #304]	; (40337c <_svfprintf_r+0x904>)
  40324a:	4b4d      	ldr	r3, [pc, #308]	; (403380 <_svfprintf_r+0x908>)
  40324c:	f02b 0080 	bic.w	r0, fp, #128	; 0x80
  403250:	9007      	str	r0, [sp, #28]
  403252:	9811      	ldr	r0, [sp, #68]	; 0x44
  403254:	2203      	movs	r2, #3
  403256:	2100      	movs	r1, #0
  403258:	9208      	str	r2, [sp, #32]
  40325a:	910a      	str	r1, [sp, #40]	; 0x28
  40325c:	2847      	cmp	r0, #71	; 0x47
  40325e:	bfd8      	it	le
  403260:	461e      	movle	r6, r3
  403262:	920e      	str	r2, [sp, #56]	; 0x38
  403264:	9112      	str	r1, [sp, #72]	; 0x48
  403266:	e51f      	b.n	402ca8 <_svfprintf_r+0x230>
  403268:	f04b 0b08 	orr.w	fp, fp, #8
  40326c:	f89a 3000 	ldrb.w	r3, [sl]
  403270:	e45a      	b.n	402b28 <_svfprintf_r+0xb0>
  403272:	f1a3 0030 	sub.w	r0, r3, #48	; 0x30
  403276:	2300      	movs	r3, #0
  403278:	461c      	mov	r4, r3
  40327a:	f81a 3b01 	ldrb.w	r3, [sl], #1
  40327e:	eb04 0484 	add.w	r4, r4, r4, lsl #2
  403282:	eb00 0444 	add.w	r4, r0, r4, lsl #1
  403286:	f1a3 0030 	sub.w	r0, r3, #48	; 0x30
  40328a:	2809      	cmp	r0, #9
  40328c:	d9f5      	bls.n	40327a <_svfprintf_r+0x802>
  40328e:	940d      	str	r4, [sp, #52]	; 0x34
  403290:	e44c      	b.n	402b2c <_svfprintf_r+0xb4>
  403292:	f04b 0b10 	orr.w	fp, fp, #16
  403296:	9311      	str	r3, [sp, #68]	; 0x44
  403298:	f01b 0320 	ands.w	r3, fp, #32
  40329c:	f43f ae1e 	beq.w	402edc <_svfprintf_r+0x464>
  4032a0:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
  4032a2:	3507      	adds	r5, #7
  4032a4:	f025 0307 	bic.w	r3, r5, #7
  4032a8:	f103 0208 	add.w	r2, r3, #8
  4032ac:	e9d3 4500 	ldrd	r4, r5, [r3]
  4032b0:	920f      	str	r2, [sp, #60]	; 0x3c
  4032b2:	2300      	movs	r3, #0
  4032b4:	e4d3      	b.n	402c5e <_svfprintf_r+0x1e6>
  4032b6:	9311      	str	r3, [sp, #68]	; 0x44
  4032b8:	2a00      	cmp	r2, #0
  4032ba:	f040 85e0 	bne.w	403e7e <_svfprintf_r+0x1406>
  4032be:	9a11      	ldr	r2, [sp, #68]	; 0x44
  4032c0:	2a00      	cmp	r2, #0
  4032c2:	f43f aca4 	beq.w	402c0e <_svfprintf_r+0x196>
  4032c6:	2300      	movs	r3, #0
  4032c8:	2101      	movs	r1, #1
  4032ca:	461f      	mov	r7, r3
  4032cc:	9108      	str	r1, [sp, #32]
  4032ce:	f88d 20a0 	strb.w	r2, [sp, #160]	; 0xa0
  4032d2:	f8cd b01c 	str.w	fp, [sp, #28]
  4032d6:	f88d 3077 	strb.w	r3, [sp, #119]	; 0x77
  4032da:	930a      	str	r3, [sp, #40]	; 0x28
  4032dc:	9312      	str	r3, [sp, #72]	; 0x48
  4032de:	910e      	str	r1, [sp, #56]	; 0x38
  4032e0:	ae28      	add	r6, sp, #160	; 0xa0
  4032e2:	e4e5      	b.n	402cb0 <_svfprintf_r+0x238>
  4032e4:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  4032e6:	e535      	b.n	402d54 <_svfprintf_r+0x2dc>
  4032e8:	9b11      	ldr	r3, [sp, #68]	; 0x44
  4032ea:	2b65      	cmp	r3, #101	; 0x65
  4032ec:	f340 80a6 	ble.w	40343c <_svfprintf_r+0x9c4>
  4032f0:	a814      	add	r0, sp, #80	; 0x50
  4032f2:	c80f      	ldmia	r0, {r0, r1, r2, r3}
  4032f4:	f003 fc3e 	bl	406b74 <__aeabi_dcmpeq>
  4032f8:	2800      	cmp	r0, #0
  4032fa:	f000 814f 	beq.w	40359c <_svfprintf_r+0xb24>
  4032fe:	9b26      	ldr	r3, [sp, #152]	; 0x98
  403300:	4a20      	ldr	r2, [pc, #128]	; (403384 <_svfprintf_r+0x90c>)
  403302:	f8c8 2000 	str.w	r2, [r8]
  403306:	3301      	adds	r3, #1
  403308:	3401      	adds	r4, #1
  40330a:	2201      	movs	r2, #1
  40330c:	2b07      	cmp	r3, #7
  40330e:	9427      	str	r4, [sp, #156]	; 0x9c
  403310:	9326      	str	r3, [sp, #152]	; 0x98
  403312:	f8c8 2004 	str.w	r2, [r8, #4]
  403316:	f300 836a 	bgt.w	4039ee <_svfprintf_r+0xf76>
  40331a:	f108 0808 	add.w	r8, r8, #8
  40331e:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
  403320:	9a13      	ldr	r2, [sp, #76]	; 0x4c
  403322:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  403324:	4293      	cmp	r3, r2
  403326:	db03      	blt.n	403330 <_svfprintf_r+0x8b8>
  403328:	9b07      	ldr	r3, [sp, #28]
  40332a:	07dd      	lsls	r5, r3, #31
  40332c:	f57f ad84 	bpl.w	402e38 <_svfprintf_r+0x3c0>
  403330:	9b26      	ldr	r3, [sp, #152]	; 0x98
  403332:	9919      	ldr	r1, [sp, #100]	; 0x64
  403334:	9a1a      	ldr	r2, [sp, #104]	; 0x68
  403336:	f8c8 2000 	str.w	r2, [r8]
  40333a:	3301      	adds	r3, #1
  40333c:	440c      	add	r4, r1
  40333e:	2b07      	cmp	r3, #7
  403340:	f8c8 1004 	str.w	r1, [r8, #4]
  403344:	9427      	str	r4, [sp, #156]	; 0x9c
  403346:	9326      	str	r3, [sp, #152]	; 0x98
  403348:	f300 839e 	bgt.w	403a88 <_svfprintf_r+0x1010>
  40334c:	f108 0808 	add.w	r8, r8, #8
  403350:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  403352:	1e5e      	subs	r6, r3, #1
  403354:	2e00      	cmp	r6, #0
  403356:	f77f ad6f 	ble.w	402e38 <_svfprintf_r+0x3c0>
  40335a:	2e10      	cmp	r6, #16
  40335c:	9b26      	ldr	r3, [sp, #152]	; 0x98
  40335e:	4d0a      	ldr	r5, [pc, #40]	; (403388 <_svfprintf_r+0x910>)
  403360:	f340 81f5 	ble.w	40374e <_svfprintf_r+0xcd6>
  403364:	4622      	mov	r2, r4
  403366:	2710      	movs	r7, #16
  403368:	f8dd b030 	ldr.w	fp, [sp, #48]	; 0x30
  40336c:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
  40336e:	e013      	b.n	403398 <_svfprintf_r+0x920>
  403370:	00407748 	.word	0x00407748
  403374:	00407734 	.word	0x00407734
  403378:	7fefffff 	.word	0x7fefffff
  40337c:	00407728 	.word	0x00407728
  403380:	00407724 	.word	0x00407724
  403384:	00407764 	.word	0x00407764
  403388:	00407778 	.word	0x00407778
  40338c:	f108 0808 	add.w	r8, r8, #8
  403390:	3e10      	subs	r6, #16
  403392:	2e10      	cmp	r6, #16
  403394:	f340 81da 	ble.w	40374c <_svfprintf_r+0xcd4>
  403398:	3301      	adds	r3, #1
  40339a:	3210      	adds	r2, #16
  40339c:	2b07      	cmp	r3, #7
  40339e:	9227      	str	r2, [sp, #156]	; 0x9c
  4033a0:	9326      	str	r3, [sp, #152]	; 0x98
  4033a2:	e888 00a0 	stmia.w	r8, {r5, r7}
  4033a6:	ddf1      	ble.n	40338c <_svfprintf_r+0x914>
  4033a8:	aa25      	add	r2, sp, #148	; 0x94
  4033aa:	4621      	mov	r1, r4
  4033ac:	4658      	mov	r0, fp
  4033ae:	f002 ffb5 	bl	40631c <__ssprint_r>
  4033b2:	2800      	cmp	r0, #0
  4033b4:	f47f ac32 	bne.w	402c1c <_svfprintf_r+0x1a4>
  4033b8:	9a27      	ldr	r2, [sp, #156]	; 0x9c
  4033ba:	9b26      	ldr	r3, [sp, #152]	; 0x98
  4033bc:	46c8      	mov	r8, r9
  4033be:	e7e7      	b.n	403390 <_svfprintf_r+0x918>
  4033c0:	9b0d      	ldr	r3, [sp, #52]	; 0x34
  4033c2:	9a08      	ldr	r2, [sp, #32]
  4033c4:	1a9f      	subs	r7, r3, r2
  4033c6:	2f00      	cmp	r7, #0
  4033c8:	f77f ace7 	ble.w	402d9a <_svfprintf_r+0x322>
  4033cc:	2f10      	cmp	r7, #16
  4033ce:	9b26      	ldr	r3, [sp, #152]	; 0x98
  4033d0:	4db6      	ldr	r5, [pc, #728]	; (4036ac <_svfprintf_r+0xc34>)
  4033d2:	dd27      	ble.n	403424 <_svfprintf_r+0x9ac>
  4033d4:	4642      	mov	r2, r8
  4033d6:	4621      	mov	r1, r4
  4033d8:	46b0      	mov	r8, r6
  4033da:	f04f 0b10 	mov.w	fp, #16
  4033de:	462e      	mov	r6, r5
  4033e0:	9c0c      	ldr	r4, [sp, #48]	; 0x30
  4033e2:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
  4033e4:	e004      	b.n	4033f0 <_svfprintf_r+0x978>
  4033e6:	3f10      	subs	r7, #16
  4033e8:	2f10      	cmp	r7, #16
  4033ea:	f102 0208 	add.w	r2, r2, #8
  4033ee:	dd15      	ble.n	40341c <_svfprintf_r+0x9a4>
  4033f0:	3301      	adds	r3, #1
  4033f2:	3110      	adds	r1, #16
  4033f4:	2b07      	cmp	r3, #7
  4033f6:	9127      	str	r1, [sp, #156]	; 0x9c
  4033f8:	9326      	str	r3, [sp, #152]	; 0x98
  4033fa:	e882 0840 	stmia.w	r2, {r6, fp}
  4033fe:	ddf2      	ble.n	4033e6 <_svfprintf_r+0x96e>
  403400:	aa25      	add	r2, sp, #148	; 0x94
  403402:	4629      	mov	r1, r5
  403404:	4620      	mov	r0, r4
  403406:	f002 ff89 	bl	40631c <__ssprint_r>
  40340a:	2800      	cmp	r0, #0
  40340c:	f47f ac06 	bne.w	402c1c <_svfprintf_r+0x1a4>
  403410:	3f10      	subs	r7, #16
  403412:	2f10      	cmp	r7, #16
  403414:	9927      	ldr	r1, [sp, #156]	; 0x9c
  403416:	9b26      	ldr	r3, [sp, #152]	; 0x98
  403418:	464a      	mov	r2, r9
  40341a:	dce9      	bgt.n	4033f0 <_svfprintf_r+0x978>
  40341c:	4635      	mov	r5, r6
  40341e:	460c      	mov	r4, r1
  403420:	4646      	mov	r6, r8
  403422:	4690      	mov	r8, r2
  403424:	3301      	adds	r3, #1
  403426:	443c      	add	r4, r7
  403428:	2b07      	cmp	r3, #7
  40342a:	9427      	str	r4, [sp, #156]	; 0x9c
  40342c:	9326      	str	r3, [sp, #152]	; 0x98
  40342e:	e888 00a0 	stmia.w	r8, {r5, r7}
  403432:	f300 8232 	bgt.w	40389a <_svfprintf_r+0xe22>
  403436:	f108 0808 	add.w	r8, r8, #8
  40343a:	e4ae      	b.n	402d9a <_svfprintf_r+0x322>
  40343c:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  40343e:	9f26      	ldr	r7, [sp, #152]	; 0x98
  403440:	2b01      	cmp	r3, #1
  403442:	f340 81fe 	ble.w	403842 <_svfprintf_r+0xdca>
  403446:	3701      	adds	r7, #1
  403448:	3401      	adds	r4, #1
  40344a:	2301      	movs	r3, #1
  40344c:	2f07      	cmp	r7, #7
  40344e:	9427      	str	r4, [sp, #156]	; 0x9c
  403450:	9726      	str	r7, [sp, #152]	; 0x98
  403452:	f8c8 6000 	str.w	r6, [r8]
  403456:	f8c8 3004 	str.w	r3, [r8, #4]
  40345a:	f300 8203 	bgt.w	403864 <_svfprintf_r+0xdec>
  40345e:	f108 0808 	add.w	r8, r8, #8
  403462:	9a19      	ldr	r2, [sp, #100]	; 0x64
  403464:	9b1a      	ldr	r3, [sp, #104]	; 0x68
  403466:	f8c8 3000 	str.w	r3, [r8]
  40346a:	3701      	adds	r7, #1
  40346c:	4414      	add	r4, r2
  40346e:	2f07      	cmp	r7, #7
  403470:	9427      	str	r4, [sp, #156]	; 0x9c
  403472:	9726      	str	r7, [sp, #152]	; 0x98
  403474:	f8c8 2004 	str.w	r2, [r8, #4]
  403478:	f300 8200 	bgt.w	40387c <_svfprintf_r+0xe04>
  40347c:	f108 0808 	add.w	r8, r8, #8
  403480:	a814      	add	r0, sp, #80	; 0x50
  403482:	c80f      	ldmia	r0, {r0, r1, r2, r3}
  403484:	f003 fb76 	bl	406b74 <__aeabi_dcmpeq>
  403488:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  40348a:	2800      	cmp	r0, #0
  40348c:	f040 8101 	bne.w	403692 <_svfprintf_r+0xc1a>
  403490:	3b01      	subs	r3, #1
  403492:	3701      	adds	r7, #1
  403494:	3601      	adds	r6, #1
  403496:	441c      	add	r4, r3
  403498:	2f07      	cmp	r7, #7
  40349a:	9726      	str	r7, [sp, #152]	; 0x98
  40349c:	9427      	str	r4, [sp, #156]	; 0x9c
  40349e:	f8c8 6000 	str.w	r6, [r8]
  4034a2:	f8c8 3004 	str.w	r3, [r8, #4]
  4034a6:	f300 8128 	bgt.w	4036fa <_svfprintf_r+0xc82>
  4034aa:	f108 0808 	add.w	r8, r8, #8
  4034ae:	9a1b      	ldr	r2, [sp, #108]	; 0x6c
  4034b0:	f8c8 2004 	str.w	r2, [r8, #4]
  4034b4:	3701      	adds	r7, #1
  4034b6:	4414      	add	r4, r2
  4034b8:	ab21      	add	r3, sp, #132	; 0x84
  4034ba:	2f07      	cmp	r7, #7
  4034bc:	9427      	str	r4, [sp, #156]	; 0x9c
  4034be:	9726      	str	r7, [sp, #152]	; 0x98
  4034c0:	f8c8 3000 	str.w	r3, [r8]
  4034c4:	f77f acb6 	ble.w	402e34 <_svfprintf_r+0x3bc>
  4034c8:	aa25      	add	r2, sp, #148	; 0x94
  4034ca:	990b      	ldr	r1, [sp, #44]	; 0x2c
  4034cc:	980c      	ldr	r0, [sp, #48]	; 0x30
  4034ce:	f002 ff25 	bl	40631c <__ssprint_r>
  4034d2:	2800      	cmp	r0, #0
  4034d4:	f47f aba2 	bne.w	402c1c <_svfprintf_r+0x1a4>
  4034d8:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  4034da:	46c8      	mov	r8, r9
  4034dc:	e4ac      	b.n	402e38 <_svfprintf_r+0x3c0>
  4034de:	aa25      	add	r2, sp, #148	; 0x94
  4034e0:	990b      	ldr	r1, [sp, #44]	; 0x2c
  4034e2:	980c      	ldr	r0, [sp, #48]	; 0x30
  4034e4:	f002 ff1a 	bl	40631c <__ssprint_r>
  4034e8:	2800      	cmp	r0, #0
  4034ea:	f43f acee 	beq.w	402eca <_svfprintf_r+0x452>
  4034ee:	f7ff bb95 	b.w	402c1c <_svfprintf_r+0x1a4>
  4034f2:	f8dd b01c 	ldr.w	fp, [sp, #28]
  4034f6:	2b01      	cmp	r3, #1
  4034f8:	f000 8135 	beq.w	403766 <_svfprintf_r+0xcee>
  4034fc:	2b02      	cmp	r3, #2
  4034fe:	d125      	bne.n	40354c <_svfprintf_r+0xad4>
  403500:	f8cd b01c 	str.w	fp, [sp, #28]
  403504:	2400      	movs	r4, #0
  403506:	2500      	movs	r5, #0
  403508:	e621      	b.n	40314e <_svfprintf_r+0x6d6>
  40350a:	aa25      	add	r2, sp, #148	; 0x94
  40350c:	990b      	ldr	r1, [sp, #44]	; 0x2c
  40350e:	980c      	ldr	r0, [sp, #48]	; 0x30
  403510:	f002 ff04 	bl	40631c <__ssprint_r>
  403514:	2800      	cmp	r0, #0
  403516:	f47f ab81 	bne.w	402c1c <_svfprintf_r+0x1a4>
  40351a:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  40351c:	46c8      	mov	r8, r9
  40351e:	e478      	b.n	402e12 <_svfprintf_r+0x39a>
  403520:	aa25      	add	r2, sp, #148	; 0x94
  403522:	990b      	ldr	r1, [sp, #44]	; 0x2c
  403524:	980c      	ldr	r0, [sp, #48]	; 0x30
  403526:	f002 fef9 	bl	40631c <__ssprint_r>
  40352a:	2800      	cmp	r0, #0
  40352c:	f47f ab76 	bne.w	402c1c <_svfprintf_r+0x1a4>
  403530:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  403532:	46c8      	mov	r8, r9
  403534:	e41e      	b.n	402d74 <_svfprintf_r+0x2fc>
  403536:	aa25      	add	r2, sp, #148	; 0x94
  403538:	990b      	ldr	r1, [sp, #44]	; 0x2c
  40353a:	980c      	ldr	r0, [sp, #48]	; 0x30
  40353c:	f002 feee 	bl	40631c <__ssprint_r>
  403540:	2800      	cmp	r0, #0
  403542:	f47f ab6b 	bne.w	402c1c <_svfprintf_r+0x1a4>
  403546:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  403548:	46c8      	mov	r8, r9
  40354a:	e423      	b.n	402d94 <_svfprintf_r+0x31c>
  40354c:	f8cd b01c 	str.w	fp, [sp, #28]
  403550:	2400      	movs	r4, #0
  403552:	2500      	movs	r5, #0
  403554:	4649      	mov	r1, r9
  403556:	e000      	b.n	40355a <_svfprintf_r+0xae2>
  403558:	4631      	mov	r1, r6
  40355a:	08e2      	lsrs	r2, r4, #3
  40355c:	ea42 7245 	orr.w	r2, r2, r5, lsl #29
  403560:	08e8      	lsrs	r0, r5, #3
  403562:	f004 0307 	and.w	r3, r4, #7
  403566:	4605      	mov	r5, r0
  403568:	4614      	mov	r4, r2
  40356a:	3330      	adds	r3, #48	; 0x30
  40356c:	ea54 0205 	orrs.w	r2, r4, r5
  403570:	f801 3c01 	strb.w	r3, [r1, #-1]
  403574:	f101 36ff 	add.w	r6, r1, #4294967295
  403578:	d1ee      	bne.n	403558 <_svfprintf_r+0xae0>
  40357a:	9a07      	ldr	r2, [sp, #28]
  40357c:	07d2      	lsls	r2, r2, #31
  40357e:	f57f adf6 	bpl.w	40316e <_svfprintf_r+0x6f6>
  403582:	2b30      	cmp	r3, #48	; 0x30
  403584:	f43f adf3 	beq.w	40316e <_svfprintf_r+0x6f6>
  403588:	3902      	subs	r1, #2
  40358a:	2330      	movs	r3, #48	; 0x30
  40358c:	f806 3c01 	strb.w	r3, [r6, #-1]
  403590:	eba9 0301 	sub.w	r3, r9, r1
  403594:	930e      	str	r3, [sp, #56]	; 0x38
  403596:	460e      	mov	r6, r1
  403598:	f7ff bb7e 	b.w	402c98 <_svfprintf_r+0x220>
  40359c:	991f      	ldr	r1, [sp, #124]	; 0x7c
  40359e:	2900      	cmp	r1, #0
  4035a0:	f340 822f 	ble.w	403a02 <_svfprintf_r+0xf8a>
  4035a4:	9b12      	ldr	r3, [sp, #72]	; 0x48
  4035a6:	9a13      	ldr	r2, [sp, #76]	; 0x4c
  4035a8:	4293      	cmp	r3, r2
  4035aa:	bfa8      	it	ge
  4035ac:	4613      	movge	r3, r2
  4035ae:	2b00      	cmp	r3, #0
  4035b0:	461f      	mov	r7, r3
  4035b2:	dd0d      	ble.n	4035d0 <_svfprintf_r+0xb58>
  4035b4:	9b26      	ldr	r3, [sp, #152]	; 0x98
  4035b6:	f8c8 6000 	str.w	r6, [r8]
  4035ba:	3301      	adds	r3, #1
  4035bc:	443c      	add	r4, r7
  4035be:	2b07      	cmp	r3, #7
  4035c0:	9427      	str	r4, [sp, #156]	; 0x9c
  4035c2:	f8c8 7004 	str.w	r7, [r8, #4]
  4035c6:	9326      	str	r3, [sp, #152]	; 0x98
  4035c8:	f300 8320 	bgt.w	403c0c <_svfprintf_r+0x1194>
  4035cc:	f108 0808 	add.w	r8, r8, #8
  4035d0:	9b12      	ldr	r3, [sp, #72]	; 0x48
  4035d2:	2f00      	cmp	r7, #0
  4035d4:	bfa8      	it	ge
  4035d6:	1bdb      	subge	r3, r3, r7
  4035d8:	2b00      	cmp	r3, #0
  4035da:	461f      	mov	r7, r3
  4035dc:	f340 80d7 	ble.w	40378e <_svfprintf_r+0xd16>
  4035e0:	2f10      	cmp	r7, #16
  4035e2:	9b26      	ldr	r3, [sp, #152]	; 0x98
  4035e4:	4d31      	ldr	r5, [pc, #196]	; (4036ac <_svfprintf_r+0xc34>)
  4035e6:	f340 81ee 	ble.w	4039c6 <_svfprintf_r+0xf4e>
  4035ea:	4642      	mov	r2, r8
  4035ec:	4621      	mov	r1, r4
  4035ee:	46b0      	mov	r8, r6
  4035f0:	f04f 0b10 	mov.w	fp, #16
  4035f4:	462e      	mov	r6, r5
  4035f6:	9c0c      	ldr	r4, [sp, #48]	; 0x30
  4035f8:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
  4035fa:	e004      	b.n	403606 <_svfprintf_r+0xb8e>
  4035fc:	3208      	adds	r2, #8
  4035fe:	3f10      	subs	r7, #16
  403600:	2f10      	cmp	r7, #16
  403602:	f340 81dc 	ble.w	4039be <_svfprintf_r+0xf46>
  403606:	3301      	adds	r3, #1
  403608:	3110      	adds	r1, #16
  40360a:	2b07      	cmp	r3, #7
  40360c:	9127      	str	r1, [sp, #156]	; 0x9c
  40360e:	9326      	str	r3, [sp, #152]	; 0x98
  403610:	e882 0840 	stmia.w	r2, {r6, fp}
  403614:	ddf2      	ble.n	4035fc <_svfprintf_r+0xb84>
  403616:	aa25      	add	r2, sp, #148	; 0x94
  403618:	4629      	mov	r1, r5
  40361a:	4620      	mov	r0, r4
  40361c:	f002 fe7e 	bl	40631c <__ssprint_r>
  403620:	2800      	cmp	r0, #0
  403622:	f47f aafb 	bne.w	402c1c <_svfprintf_r+0x1a4>
  403626:	9927      	ldr	r1, [sp, #156]	; 0x9c
  403628:	9b26      	ldr	r3, [sp, #152]	; 0x98
  40362a:	464a      	mov	r2, r9
  40362c:	e7e7      	b.n	4035fe <_svfprintf_r+0xb86>
  40362e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  403630:	930e      	str	r3, [sp, #56]	; 0x38
  403632:	464e      	mov	r6, r9
  403634:	f7ff bb30 	b.w	402c98 <_svfprintf_r+0x220>
  403638:	2d00      	cmp	r5, #0
  40363a:	bf08      	it	eq
  40363c:	2c0a      	cmpeq	r4, #10
  40363e:	f0c0 8090 	bcc.w	403762 <_svfprintf_r+0xcea>
  403642:	464e      	mov	r6, r9
  403644:	4620      	mov	r0, r4
  403646:	4629      	mov	r1, r5
  403648:	220a      	movs	r2, #10
  40364a:	2300      	movs	r3, #0
  40364c:	f003 fada 	bl	406c04 <__aeabi_uldivmod>
  403650:	3230      	adds	r2, #48	; 0x30
  403652:	f806 2d01 	strb.w	r2, [r6, #-1]!
  403656:	4620      	mov	r0, r4
  403658:	4629      	mov	r1, r5
  40365a:	2300      	movs	r3, #0
  40365c:	220a      	movs	r2, #10
  40365e:	f003 fad1 	bl	406c04 <__aeabi_uldivmod>
  403662:	4604      	mov	r4, r0
  403664:	460d      	mov	r5, r1
  403666:	ea54 0305 	orrs.w	r3, r4, r5
  40366a:	d1eb      	bne.n	403644 <_svfprintf_r+0xbcc>
  40366c:	eba9 0306 	sub.w	r3, r9, r6
  403670:	930e      	str	r3, [sp, #56]	; 0x38
  403672:	f7ff bb11 	b.w	402c98 <_svfprintf_r+0x220>
  403676:	aa25      	add	r2, sp, #148	; 0x94
  403678:	990b      	ldr	r1, [sp, #44]	; 0x2c
  40367a:	980c      	ldr	r0, [sp, #48]	; 0x30
  40367c:	f002 fe4e 	bl	40631c <__ssprint_r>
  403680:	2800      	cmp	r0, #0
  403682:	f47f aacb 	bne.w	402c1c <_svfprintf_r+0x1a4>
  403686:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
  40368a:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  40368c:	46c8      	mov	r8, r9
  40368e:	f7ff bb61 	b.w	402d54 <_svfprintf_r+0x2dc>
  403692:	1e5e      	subs	r6, r3, #1
  403694:	2e00      	cmp	r6, #0
  403696:	f77f af0a 	ble.w	4034ae <_svfprintf_r+0xa36>
  40369a:	2e10      	cmp	r6, #16
  40369c:	4d03      	ldr	r5, [pc, #12]	; (4036ac <_svfprintf_r+0xc34>)
  40369e:	dd23      	ble.n	4036e8 <_svfprintf_r+0xc70>
  4036a0:	4622      	mov	r2, r4
  4036a2:	f04f 0b10 	mov.w	fp, #16
  4036a6:	9c0c      	ldr	r4, [sp, #48]	; 0x30
  4036a8:	e007      	b.n	4036ba <_svfprintf_r+0xc42>
  4036aa:	bf00      	nop
  4036ac:	00407778 	.word	0x00407778
  4036b0:	3e10      	subs	r6, #16
  4036b2:	2e10      	cmp	r6, #16
  4036b4:	f108 0808 	add.w	r8, r8, #8
  4036b8:	dd15      	ble.n	4036e6 <_svfprintf_r+0xc6e>
  4036ba:	3701      	adds	r7, #1
  4036bc:	3210      	adds	r2, #16
  4036be:	2f07      	cmp	r7, #7
  4036c0:	9227      	str	r2, [sp, #156]	; 0x9c
  4036c2:	9726      	str	r7, [sp, #152]	; 0x98
  4036c4:	e888 0820 	stmia.w	r8, {r5, fp}
  4036c8:	ddf2      	ble.n	4036b0 <_svfprintf_r+0xc38>
  4036ca:	aa25      	add	r2, sp, #148	; 0x94
  4036cc:	990b      	ldr	r1, [sp, #44]	; 0x2c
  4036ce:	4620      	mov	r0, r4
  4036d0:	f002 fe24 	bl	40631c <__ssprint_r>
  4036d4:	2800      	cmp	r0, #0
  4036d6:	f47f aaa1 	bne.w	402c1c <_svfprintf_r+0x1a4>
  4036da:	3e10      	subs	r6, #16
  4036dc:	2e10      	cmp	r6, #16
  4036de:	9a27      	ldr	r2, [sp, #156]	; 0x9c
  4036e0:	9f26      	ldr	r7, [sp, #152]	; 0x98
  4036e2:	46c8      	mov	r8, r9
  4036e4:	dce9      	bgt.n	4036ba <_svfprintf_r+0xc42>
  4036e6:	4614      	mov	r4, r2
  4036e8:	3701      	adds	r7, #1
  4036ea:	4434      	add	r4, r6
  4036ec:	2f07      	cmp	r7, #7
  4036ee:	9427      	str	r4, [sp, #156]	; 0x9c
  4036f0:	9726      	str	r7, [sp, #152]	; 0x98
  4036f2:	e888 0060 	stmia.w	r8, {r5, r6}
  4036f6:	f77f aed8 	ble.w	4034aa <_svfprintf_r+0xa32>
  4036fa:	aa25      	add	r2, sp, #148	; 0x94
  4036fc:	990b      	ldr	r1, [sp, #44]	; 0x2c
  4036fe:	980c      	ldr	r0, [sp, #48]	; 0x30
  403700:	f002 fe0c 	bl	40631c <__ssprint_r>
  403704:	2800      	cmp	r0, #0
  403706:	f47f aa89 	bne.w	402c1c <_svfprintf_r+0x1a4>
  40370a:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  40370c:	9f26      	ldr	r7, [sp, #152]	; 0x98
  40370e:	46c8      	mov	r8, r9
  403710:	e6cd      	b.n	4034ae <_svfprintf_r+0xa36>
  403712:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  403714:	6814      	ldr	r4, [r2, #0]
  403716:	4613      	mov	r3, r2
  403718:	3304      	adds	r3, #4
  40371a:	17e5      	asrs	r5, r4, #31
  40371c:	930f      	str	r3, [sp, #60]	; 0x3c
  40371e:	4622      	mov	r2, r4
  403720:	462b      	mov	r3, r5
  403722:	e4fc      	b.n	40311e <_svfprintf_r+0x6a6>
  403724:	3204      	adds	r2, #4
  403726:	681c      	ldr	r4, [r3, #0]
  403728:	920f      	str	r2, [sp, #60]	; 0x3c
  40372a:	2301      	movs	r3, #1
  40372c:	2500      	movs	r5, #0
  40372e:	f7ff ba96 	b.w	402c5e <_svfprintf_r+0x1e6>
  403732:	681c      	ldr	r4, [r3, #0]
  403734:	3304      	adds	r3, #4
  403736:	930f      	str	r3, [sp, #60]	; 0x3c
  403738:	2500      	movs	r5, #0
  40373a:	e423      	b.n	402f84 <_svfprintf_r+0x50c>
  40373c:	990f      	ldr	r1, [sp, #60]	; 0x3c
  40373e:	460a      	mov	r2, r1
  403740:	3204      	adds	r2, #4
  403742:	680c      	ldr	r4, [r1, #0]
  403744:	920f      	str	r2, [sp, #60]	; 0x3c
  403746:	2500      	movs	r5, #0
  403748:	f7ff ba89 	b.w	402c5e <_svfprintf_r+0x1e6>
  40374c:	4614      	mov	r4, r2
  40374e:	3301      	adds	r3, #1
  403750:	4434      	add	r4, r6
  403752:	2b07      	cmp	r3, #7
  403754:	9427      	str	r4, [sp, #156]	; 0x9c
  403756:	9326      	str	r3, [sp, #152]	; 0x98
  403758:	e888 0060 	stmia.w	r8, {r5, r6}
  40375c:	f77f ab6a 	ble.w	402e34 <_svfprintf_r+0x3bc>
  403760:	e6b2      	b.n	4034c8 <_svfprintf_r+0xa50>
  403762:	f8dd b01c 	ldr.w	fp, [sp, #28]
  403766:	f8cd b01c 	str.w	fp, [sp, #28]
  40376a:	ae42      	add	r6, sp, #264	; 0x108
  40376c:	3430      	adds	r4, #48	; 0x30
  40376e:	2301      	movs	r3, #1
  403770:	f806 4d41 	strb.w	r4, [r6, #-65]!
  403774:	930e      	str	r3, [sp, #56]	; 0x38
  403776:	f7ff ba8f 	b.w	402c98 <_svfprintf_r+0x220>
  40377a:	aa25      	add	r2, sp, #148	; 0x94
  40377c:	990b      	ldr	r1, [sp, #44]	; 0x2c
  40377e:	980c      	ldr	r0, [sp, #48]	; 0x30
  403780:	f002 fdcc 	bl	40631c <__ssprint_r>
  403784:	2800      	cmp	r0, #0
  403786:	f47f aa49 	bne.w	402c1c <_svfprintf_r+0x1a4>
  40378a:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  40378c:	46c8      	mov	r8, r9
  40378e:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
  403790:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  403792:	429a      	cmp	r2, r3
  403794:	db44      	blt.n	403820 <_svfprintf_r+0xda8>
  403796:	9b07      	ldr	r3, [sp, #28]
  403798:	07d9      	lsls	r1, r3, #31
  40379a:	d441      	bmi.n	403820 <_svfprintf_r+0xda8>
  40379c:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  40379e:	9812      	ldr	r0, [sp, #72]	; 0x48
  4037a0:	1a9a      	subs	r2, r3, r2
  4037a2:	1a1d      	subs	r5, r3, r0
  4037a4:	4295      	cmp	r5, r2
  4037a6:	bfa8      	it	ge
  4037a8:	4615      	movge	r5, r2
  4037aa:	2d00      	cmp	r5, #0
  4037ac:	dd0e      	ble.n	4037cc <_svfprintf_r+0xd54>
  4037ae:	9926      	ldr	r1, [sp, #152]	; 0x98
  4037b0:	f8c8 5004 	str.w	r5, [r8, #4]
  4037b4:	3101      	adds	r1, #1
  4037b6:	4406      	add	r6, r0
  4037b8:	442c      	add	r4, r5
  4037ba:	2907      	cmp	r1, #7
  4037bc:	f8c8 6000 	str.w	r6, [r8]
  4037c0:	9427      	str	r4, [sp, #156]	; 0x9c
  4037c2:	9126      	str	r1, [sp, #152]	; 0x98
  4037c4:	f300 823b 	bgt.w	403c3e <_svfprintf_r+0x11c6>
  4037c8:	f108 0808 	add.w	r8, r8, #8
  4037cc:	2d00      	cmp	r5, #0
  4037ce:	bfac      	ite	ge
  4037d0:	1b56      	subge	r6, r2, r5
  4037d2:	4616      	movlt	r6, r2
  4037d4:	2e00      	cmp	r6, #0
  4037d6:	f77f ab2f 	ble.w	402e38 <_svfprintf_r+0x3c0>
  4037da:	2e10      	cmp	r6, #16
  4037dc:	9b26      	ldr	r3, [sp, #152]	; 0x98
  4037de:	4db0      	ldr	r5, [pc, #704]	; (403aa0 <_svfprintf_r+0x1028>)
  4037e0:	ddb5      	ble.n	40374e <_svfprintf_r+0xcd6>
  4037e2:	4622      	mov	r2, r4
  4037e4:	2710      	movs	r7, #16
  4037e6:	f8dd b030 	ldr.w	fp, [sp, #48]	; 0x30
  4037ea:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
  4037ec:	e004      	b.n	4037f8 <_svfprintf_r+0xd80>
  4037ee:	f108 0808 	add.w	r8, r8, #8
  4037f2:	3e10      	subs	r6, #16
  4037f4:	2e10      	cmp	r6, #16
  4037f6:	dda9      	ble.n	40374c <_svfprintf_r+0xcd4>
  4037f8:	3301      	adds	r3, #1
  4037fa:	3210      	adds	r2, #16
  4037fc:	2b07      	cmp	r3, #7
  4037fe:	9227      	str	r2, [sp, #156]	; 0x9c
  403800:	9326      	str	r3, [sp, #152]	; 0x98
  403802:	e888 00a0 	stmia.w	r8, {r5, r7}
  403806:	ddf2      	ble.n	4037ee <_svfprintf_r+0xd76>
  403808:	aa25      	add	r2, sp, #148	; 0x94
  40380a:	4621      	mov	r1, r4
  40380c:	4658      	mov	r0, fp
  40380e:	f002 fd85 	bl	40631c <__ssprint_r>
  403812:	2800      	cmp	r0, #0
  403814:	f47f aa02 	bne.w	402c1c <_svfprintf_r+0x1a4>
  403818:	9a27      	ldr	r2, [sp, #156]	; 0x9c
  40381a:	9b26      	ldr	r3, [sp, #152]	; 0x98
  40381c:	46c8      	mov	r8, r9
  40381e:	e7e8      	b.n	4037f2 <_svfprintf_r+0xd7a>
  403820:	9b26      	ldr	r3, [sp, #152]	; 0x98
  403822:	9819      	ldr	r0, [sp, #100]	; 0x64
  403824:	991a      	ldr	r1, [sp, #104]	; 0x68
  403826:	f8c8 1000 	str.w	r1, [r8]
  40382a:	3301      	adds	r3, #1
  40382c:	4404      	add	r4, r0
  40382e:	2b07      	cmp	r3, #7
  403830:	9427      	str	r4, [sp, #156]	; 0x9c
  403832:	f8c8 0004 	str.w	r0, [r8, #4]
  403836:	9326      	str	r3, [sp, #152]	; 0x98
  403838:	f300 81f5 	bgt.w	403c26 <_svfprintf_r+0x11ae>
  40383c:	f108 0808 	add.w	r8, r8, #8
  403840:	e7ac      	b.n	40379c <_svfprintf_r+0xd24>
  403842:	9b07      	ldr	r3, [sp, #28]
  403844:	07da      	lsls	r2, r3, #31
  403846:	f53f adfe 	bmi.w	403446 <_svfprintf_r+0x9ce>
  40384a:	3701      	adds	r7, #1
  40384c:	3401      	adds	r4, #1
  40384e:	2301      	movs	r3, #1
  403850:	2f07      	cmp	r7, #7
  403852:	9427      	str	r4, [sp, #156]	; 0x9c
  403854:	9726      	str	r7, [sp, #152]	; 0x98
  403856:	f8c8 6000 	str.w	r6, [r8]
  40385a:	f8c8 3004 	str.w	r3, [r8, #4]
  40385e:	f77f ae24 	ble.w	4034aa <_svfprintf_r+0xa32>
  403862:	e74a      	b.n	4036fa <_svfprintf_r+0xc82>
  403864:	aa25      	add	r2, sp, #148	; 0x94
  403866:	990b      	ldr	r1, [sp, #44]	; 0x2c
  403868:	980c      	ldr	r0, [sp, #48]	; 0x30
  40386a:	f002 fd57 	bl	40631c <__ssprint_r>
  40386e:	2800      	cmp	r0, #0
  403870:	f47f a9d4 	bne.w	402c1c <_svfprintf_r+0x1a4>
  403874:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  403876:	9f26      	ldr	r7, [sp, #152]	; 0x98
  403878:	46c8      	mov	r8, r9
  40387a:	e5f2      	b.n	403462 <_svfprintf_r+0x9ea>
  40387c:	aa25      	add	r2, sp, #148	; 0x94
  40387e:	990b      	ldr	r1, [sp, #44]	; 0x2c
  403880:	980c      	ldr	r0, [sp, #48]	; 0x30
  403882:	f002 fd4b 	bl	40631c <__ssprint_r>
  403886:	2800      	cmp	r0, #0
  403888:	f47f a9c8 	bne.w	402c1c <_svfprintf_r+0x1a4>
  40388c:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  40388e:	9f26      	ldr	r7, [sp, #152]	; 0x98
  403890:	46c8      	mov	r8, r9
  403892:	e5f5      	b.n	403480 <_svfprintf_r+0xa08>
  403894:	464e      	mov	r6, r9
  403896:	f7ff b9ff 	b.w	402c98 <_svfprintf_r+0x220>
  40389a:	aa25      	add	r2, sp, #148	; 0x94
  40389c:	990b      	ldr	r1, [sp, #44]	; 0x2c
  40389e:	980c      	ldr	r0, [sp, #48]	; 0x30
  4038a0:	f002 fd3c 	bl	40631c <__ssprint_r>
  4038a4:	2800      	cmp	r0, #0
  4038a6:	f47f a9b9 	bne.w	402c1c <_svfprintf_r+0x1a4>
  4038aa:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  4038ac:	46c8      	mov	r8, r9
  4038ae:	f7ff ba74 	b.w	402d9a <_svfprintf_r+0x322>
  4038b2:	9c14      	ldr	r4, [sp, #80]	; 0x50
  4038b4:	4622      	mov	r2, r4
  4038b6:	4620      	mov	r0, r4
  4038b8:	9c15      	ldr	r4, [sp, #84]	; 0x54
  4038ba:	4623      	mov	r3, r4
  4038bc:	4621      	mov	r1, r4
  4038be:	f003 f98b 	bl	406bd8 <__aeabi_dcmpun>
  4038c2:	2800      	cmp	r0, #0
  4038c4:	f040 8286 	bne.w	403dd4 <_svfprintf_r+0x135c>
  4038c8:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  4038ca:	3301      	adds	r3, #1
  4038cc:	9b11      	ldr	r3, [sp, #68]	; 0x44
  4038ce:	f023 0320 	bic.w	r3, r3, #32
  4038d2:	930e      	str	r3, [sp, #56]	; 0x38
  4038d4:	f000 81e2 	beq.w	403c9c <_svfprintf_r+0x1224>
  4038d8:	2b47      	cmp	r3, #71	; 0x47
  4038da:	f000 811e 	beq.w	403b1a <_svfprintf_r+0x10a2>
  4038de:	f44b 7380 	orr.w	r3, fp, #256	; 0x100
  4038e2:	9307      	str	r3, [sp, #28]
  4038e4:	9b15      	ldr	r3, [sp, #84]	; 0x54
  4038e6:	1e1f      	subs	r7, r3, #0
  4038e8:	9b14      	ldr	r3, [sp, #80]	; 0x50
  4038ea:	9308      	str	r3, [sp, #32]
  4038ec:	bfbb      	ittet	lt
  4038ee:	463b      	movlt	r3, r7
  4038f0:	f103 4700 	addlt.w	r7, r3, #2147483648	; 0x80000000
  4038f4:	2300      	movge	r3, #0
  4038f6:	232d      	movlt	r3, #45	; 0x2d
  4038f8:	9310      	str	r3, [sp, #64]	; 0x40
  4038fa:	9b11      	ldr	r3, [sp, #68]	; 0x44
  4038fc:	2b66      	cmp	r3, #102	; 0x66
  4038fe:	f000 81bb 	beq.w	403c78 <_svfprintf_r+0x1200>
  403902:	2b46      	cmp	r3, #70	; 0x46
  403904:	f000 80df 	beq.w	403ac6 <_svfprintf_r+0x104e>
  403908:	9b0e      	ldr	r3, [sp, #56]	; 0x38
  40390a:	9a08      	ldr	r2, [sp, #32]
  40390c:	2b45      	cmp	r3, #69	; 0x45
  40390e:	bf0c      	ite	eq
  403910:	9b0a      	ldreq	r3, [sp, #40]	; 0x28
  403912:	9d0a      	ldrne	r5, [sp, #40]	; 0x28
  403914:	a823      	add	r0, sp, #140	; 0x8c
  403916:	a920      	add	r1, sp, #128	; 0x80
  403918:	bf08      	it	eq
  40391a:	1c5d      	addeq	r5, r3, #1
  40391c:	9004      	str	r0, [sp, #16]
  40391e:	9103      	str	r1, [sp, #12]
  403920:	a81f      	add	r0, sp, #124	; 0x7c
  403922:	2102      	movs	r1, #2
  403924:	463b      	mov	r3, r7
  403926:	9002      	str	r0, [sp, #8]
  403928:	9501      	str	r5, [sp, #4]
  40392a:	9100      	str	r1, [sp, #0]
  40392c:	980c      	ldr	r0, [sp, #48]	; 0x30
  40392e:	f000 fb6f 	bl	404010 <_dtoa_r>
  403932:	9b11      	ldr	r3, [sp, #68]	; 0x44
  403934:	2b67      	cmp	r3, #103	; 0x67
  403936:	4606      	mov	r6, r0
  403938:	f040 81e0 	bne.w	403cfc <_svfprintf_r+0x1284>
  40393c:	f01b 0f01 	tst.w	fp, #1
  403940:	f000 8246 	beq.w	403dd0 <_svfprintf_r+0x1358>
  403944:	1974      	adds	r4, r6, r5
  403946:	9a16      	ldr	r2, [sp, #88]	; 0x58
  403948:	9808      	ldr	r0, [sp, #32]
  40394a:	9b17      	ldr	r3, [sp, #92]	; 0x5c
  40394c:	4639      	mov	r1, r7
  40394e:	f003 f911 	bl	406b74 <__aeabi_dcmpeq>
  403952:	2800      	cmp	r0, #0
  403954:	f040 8165 	bne.w	403c22 <_svfprintf_r+0x11aa>
  403958:	9b23      	ldr	r3, [sp, #140]	; 0x8c
  40395a:	42a3      	cmp	r3, r4
  40395c:	d206      	bcs.n	40396c <_svfprintf_r+0xef4>
  40395e:	2130      	movs	r1, #48	; 0x30
  403960:	1c5a      	adds	r2, r3, #1
  403962:	9223      	str	r2, [sp, #140]	; 0x8c
  403964:	7019      	strb	r1, [r3, #0]
  403966:	9b23      	ldr	r3, [sp, #140]	; 0x8c
  403968:	429c      	cmp	r4, r3
  40396a:	d8f9      	bhi.n	403960 <_svfprintf_r+0xee8>
  40396c:	1b9b      	subs	r3, r3, r6
  40396e:	9313      	str	r3, [sp, #76]	; 0x4c
  403970:	9b0e      	ldr	r3, [sp, #56]	; 0x38
  403972:	2b47      	cmp	r3, #71	; 0x47
  403974:	f000 80e9 	beq.w	403b4a <_svfprintf_r+0x10d2>
  403978:	9b11      	ldr	r3, [sp, #68]	; 0x44
  40397a:	2b65      	cmp	r3, #101	; 0x65
  40397c:	f340 81cd 	ble.w	403d1a <_svfprintf_r+0x12a2>
  403980:	9b11      	ldr	r3, [sp, #68]	; 0x44
  403982:	2b66      	cmp	r3, #102	; 0x66
  403984:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
  403986:	9312      	str	r3, [sp, #72]	; 0x48
  403988:	f000 819e 	beq.w	403cc8 <_svfprintf_r+0x1250>
  40398c:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  40398e:	9a12      	ldr	r2, [sp, #72]	; 0x48
  403990:	4619      	mov	r1, r3
  403992:	4291      	cmp	r1, r2
  403994:	f300 818a 	bgt.w	403cac <_svfprintf_r+0x1234>
  403998:	f01b 0f01 	tst.w	fp, #1
  40399c:	f040 8213 	bne.w	403dc6 <_svfprintf_r+0x134e>
  4039a0:	ea22 73e2 	bic.w	r3, r2, r2, asr #31
  4039a4:	9308      	str	r3, [sp, #32]
  4039a6:	2367      	movs	r3, #103	; 0x67
  4039a8:	920e      	str	r2, [sp, #56]	; 0x38
  4039aa:	9311      	str	r3, [sp, #68]	; 0x44
  4039ac:	9b10      	ldr	r3, [sp, #64]	; 0x40
  4039ae:	2b00      	cmp	r3, #0
  4039b0:	f040 80c4 	bne.w	403b3c <_svfprintf_r+0x10c4>
  4039b4:	930a      	str	r3, [sp, #40]	; 0x28
  4039b6:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
  4039ba:	f7ff b975 	b.w	402ca8 <_svfprintf_r+0x230>
  4039be:	4635      	mov	r5, r6
  4039c0:	460c      	mov	r4, r1
  4039c2:	4646      	mov	r6, r8
  4039c4:	4690      	mov	r8, r2
  4039c6:	3301      	adds	r3, #1
  4039c8:	443c      	add	r4, r7
  4039ca:	2b07      	cmp	r3, #7
  4039cc:	9427      	str	r4, [sp, #156]	; 0x9c
  4039ce:	9326      	str	r3, [sp, #152]	; 0x98
  4039d0:	e888 00a0 	stmia.w	r8, {r5, r7}
  4039d4:	f73f aed1 	bgt.w	40377a <_svfprintf_r+0xd02>
  4039d8:	f108 0808 	add.w	r8, r8, #8
  4039dc:	e6d7      	b.n	40378e <_svfprintf_r+0xd16>
  4039de:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  4039e0:	6813      	ldr	r3, [r2, #0]
  4039e2:	3204      	adds	r2, #4
  4039e4:	920f      	str	r2, [sp, #60]	; 0x3c
  4039e6:	9a09      	ldr	r2, [sp, #36]	; 0x24
  4039e8:	601a      	str	r2, [r3, #0]
  4039ea:	f7ff b86c 	b.w	402ac6 <_svfprintf_r+0x4e>
  4039ee:	aa25      	add	r2, sp, #148	; 0x94
  4039f0:	990b      	ldr	r1, [sp, #44]	; 0x2c
  4039f2:	980c      	ldr	r0, [sp, #48]	; 0x30
  4039f4:	f002 fc92 	bl	40631c <__ssprint_r>
  4039f8:	2800      	cmp	r0, #0
  4039fa:	f47f a90f 	bne.w	402c1c <_svfprintf_r+0x1a4>
  4039fe:	46c8      	mov	r8, r9
  403a00:	e48d      	b.n	40331e <_svfprintf_r+0x8a6>
  403a02:	9b26      	ldr	r3, [sp, #152]	; 0x98
  403a04:	4a27      	ldr	r2, [pc, #156]	; (403aa4 <_svfprintf_r+0x102c>)
  403a06:	f8c8 2000 	str.w	r2, [r8]
  403a0a:	3301      	adds	r3, #1
  403a0c:	3401      	adds	r4, #1
  403a0e:	2201      	movs	r2, #1
  403a10:	2b07      	cmp	r3, #7
  403a12:	9427      	str	r4, [sp, #156]	; 0x9c
  403a14:	9326      	str	r3, [sp, #152]	; 0x98
  403a16:	f8c8 2004 	str.w	r2, [r8, #4]
  403a1a:	dc72      	bgt.n	403b02 <_svfprintf_r+0x108a>
  403a1c:	f108 0808 	add.w	r8, r8, #8
  403a20:	b929      	cbnz	r1, 403a2e <_svfprintf_r+0xfb6>
  403a22:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  403a24:	b91b      	cbnz	r3, 403a2e <_svfprintf_r+0xfb6>
  403a26:	9b07      	ldr	r3, [sp, #28]
  403a28:	07d8      	lsls	r0, r3, #31
  403a2a:	f57f aa05 	bpl.w	402e38 <_svfprintf_r+0x3c0>
  403a2e:	9b26      	ldr	r3, [sp, #152]	; 0x98
  403a30:	9819      	ldr	r0, [sp, #100]	; 0x64
  403a32:	9a1a      	ldr	r2, [sp, #104]	; 0x68
  403a34:	f8c8 2000 	str.w	r2, [r8]
  403a38:	3301      	adds	r3, #1
  403a3a:	4602      	mov	r2, r0
  403a3c:	4422      	add	r2, r4
  403a3e:	2b07      	cmp	r3, #7
  403a40:	9227      	str	r2, [sp, #156]	; 0x9c
  403a42:	f8c8 0004 	str.w	r0, [r8, #4]
  403a46:	9326      	str	r3, [sp, #152]	; 0x98
  403a48:	f300 818d 	bgt.w	403d66 <_svfprintf_r+0x12ee>
  403a4c:	f108 0808 	add.w	r8, r8, #8
  403a50:	2900      	cmp	r1, #0
  403a52:	f2c0 8165 	blt.w	403d20 <_svfprintf_r+0x12a8>
  403a56:	9913      	ldr	r1, [sp, #76]	; 0x4c
  403a58:	f8c8 6000 	str.w	r6, [r8]
  403a5c:	3301      	adds	r3, #1
  403a5e:	188c      	adds	r4, r1, r2
  403a60:	2b07      	cmp	r3, #7
  403a62:	9427      	str	r4, [sp, #156]	; 0x9c
  403a64:	9326      	str	r3, [sp, #152]	; 0x98
  403a66:	f8c8 1004 	str.w	r1, [r8, #4]
  403a6a:	f77f a9e3 	ble.w	402e34 <_svfprintf_r+0x3bc>
  403a6e:	e52b      	b.n	4034c8 <_svfprintf_r+0xa50>
  403a70:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  403a72:	9909      	ldr	r1, [sp, #36]	; 0x24
  403a74:	6813      	ldr	r3, [r2, #0]
  403a76:	17cd      	asrs	r5, r1, #31
  403a78:	4608      	mov	r0, r1
  403a7a:	3204      	adds	r2, #4
  403a7c:	4629      	mov	r1, r5
  403a7e:	920f      	str	r2, [sp, #60]	; 0x3c
  403a80:	e9c3 0100 	strd	r0, r1, [r3]
  403a84:	f7ff b81f 	b.w	402ac6 <_svfprintf_r+0x4e>
  403a88:	aa25      	add	r2, sp, #148	; 0x94
  403a8a:	990b      	ldr	r1, [sp, #44]	; 0x2c
  403a8c:	980c      	ldr	r0, [sp, #48]	; 0x30
  403a8e:	f002 fc45 	bl	40631c <__ssprint_r>
  403a92:	2800      	cmp	r0, #0
  403a94:	f47f a8c2 	bne.w	402c1c <_svfprintf_r+0x1a4>
  403a98:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  403a9a:	46c8      	mov	r8, r9
  403a9c:	e458      	b.n	403350 <_svfprintf_r+0x8d8>
  403a9e:	bf00      	nop
  403aa0:	00407778 	.word	0x00407778
  403aa4:	00407764 	.word	0x00407764
  403aa8:	2140      	movs	r1, #64	; 0x40
  403aaa:	980c      	ldr	r0, [sp, #48]	; 0x30
  403aac:	f001 fcd6 	bl	40545c <_malloc_r>
  403ab0:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
  403ab2:	6010      	str	r0, [r2, #0]
  403ab4:	6110      	str	r0, [r2, #16]
  403ab6:	2800      	cmp	r0, #0
  403ab8:	f000 81ec 	beq.w	403e94 <_svfprintf_r+0x141c>
  403abc:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
  403abe:	2340      	movs	r3, #64	; 0x40
  403ac0:	6153      	str	r3, [r2, #20]
  403ac2:	f7fe bff0 	b.w	402aa6 <_svfprintf_r+0x2e>
  403ac6:	a823      	add	r0, sp, #140	; 0x8c
  403ac8:	a920      	add	r1, sp, #128	; 0x80
  403aca:	9c0a      	ldr	r4, [sp, #40]	; 0x28
  403acc:	9004      	str	r0, [sp, #16]
  403ace:	9103      	str	r1, [sp, #12]
  403ad0:	a81f      	add	r0, sp, #124	; 0x7c
  403ad2:	2103      	movs	r1, #3
  403ad4:	9002      	str	r0, [sp, #8]
  403ad6:	9a08      	ldr	r2, [sp, #32]
  403ad8:	9401      	str	r4, [sp, #4]
  403ada:	463b      	mov	r3, r7
  403adc:	9100      	str	r1, [sp, #0]
  403ade:	980c      	ldr	r0, [sp, #48]	; 0x30
  403ae0:	f000 fa96 	bl	404010 <_dtoa_r>
  403ae4:	4625      	mov	r5, r4
  403ae6:	4606      	mov	r6, r0
  403ae8:	9b11      	ldr	r3, [sp, #68]	; 0x44
  403aea:	2b46      	cmp	r3, #70	; 0x46
  403aec:	eb06 0405 	add.w	r4, r6, r5
  403af0:	f47f af29 	bne.w	403946 <_svfprintf_r+0xece>
  403af4:	7833      	ldrb	r3, [r6, #0]
  403af6:	2b30      	cmp	r3, #48	; 0x30
  403af8:	f000 8172 	beq.w	403de0 <_svfprintf_r+0x1368>
  403afc:	9d1f      	ldr	r5, [sp, #124]	; 0x7c
  403afe:	442c      	add	r4, r5
  403b00:	e721      	b.n	403946 <_svfprintf_r+0xece>
  403b02:	aa25      	add	r2, sp, #148	; 0x94
  403b04:	990b      	ldr	r1, [sp, #44]	; 0x2c
  403b06:	980c      	ldr	r0, [sp, #48]	; 0x30
  403b08:	f002 fc08 	bl	40631c <__ssprint_r>
  403b0c:	2800      	cmp	r0, #0
  403b0e:	f47f a885 	bne.w	402c1c <_svfprintf_r+0x1a4>
  403b12:	991f      	ldr	r1, [sp, #124]	; 0x7c
  403b14:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  403b16:	46c8      	mov	r8, r9
  403b18:	e782      	b.n	403a20 <_svfprintf_r+0xfa8>
  403b1a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  403b1c:	2b00      	cmp	r3, #0
  403b1e:	bf08      	it	eq
  403b20:	2301      	moveq	r3, #1
  403b22:	930a      	str	r3, [sp, #40]	; 0x28
  403b24:	e6db      	b.n	4038de <_svfprintf_r+0xe66>
  403b26:	4630      	mov	r0, r6
  403b28:	940a      	str	r4, [sp, #40]	; 0x28
  403b2a:	f002 fb89 	bl	406240 <strlen>
  403b2e:	950f      	str	r5, [sp, #60]	; 0x3c
  403b30:	900e      	str	r0, [sp, #56]	; 0x38
  403b32:	f8cd b01c 	str.w	fp, [sp, #28]
  403b36:	4603      	mov	r3, r0
  403b38:	f7ff b9fb 	b.w	402f32 <_svfprintf_r+0x4ba>
  403b3c:	272d      	movs	r7, #45	; 0x2d
  403b3e:	2300      	movs	r3, #0
  403b40:	f88d 7077 	strb.w	r7, [sp, #119]	; 0x77
  403b44:	930a      	str	r3, [sp, #40]	; 0x28
  403b46:	f7ff b8b0 	b.w	402caa <_svfprintf_r+0x232>
  403b4a:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
  403b4c:	9312      	str	r3, [sp, #72]	; 0x48
  403b4e:	461a      	mov	r2, r3
  403b50:	3303      	adds	r3, #3
  403b52:	db04      	blt.n	403b5e <_svfprintf_r+0x10e6>
  403b54:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  403b56:	4619      	mov	r1, r3
  403b58:	4291      	cmp	r1, r2
  403b5a:	f6bf af17 	bge.w	40398c <_svfprintf_r+0xf14>
  403b5e:	9b11      	ldr	r3, [sp, #68]	; 0x44
  403b60:	3b02      	subs	r3, #2
  403b62:	9311      	str	r3, [sp, #68]	; 0x44
  403b64:	f89d 3044 	ldrb.w	r3, [sp, #68]	; 0x44
  403b68:	f88d 3084 	strb.w	r3, [sp, #132]	; 0x84
  403b6c:	9b12      	ldr	r3, [sp, #72]	; 0x48
  403b6e:	3b01      	subs	r3, #1
  403b70:	2b00      	cmp	r3, #0
  403b72:	931f      	str	r3, [sp, #124]	; 0x7c
  403b74:	bfbd      	ittte	lt
  403b76:	9b12      	ldrlt	r3, [sp, #72]	; 0x48
  403b78:	f1c3 0301 	rsblt	r3, r3, #1
  403b7c:	222d      	movlt	r2, #45	; 0x2d
  403b7e:	222b      	movge	r2, #43	; 0x2b
  403b80:	2b09      	cmp	r3, #9
  403b82:	f88d 2085 	strb.w	r2, [sp, #133]	; 0x85
  403b86:	f340 8116 	ble.w	403db6 <_svfprintf_r+0x133e>
  403b8a:	f10d 0493 	add.w	r4, sp, #147	; 0x93
  403b8e:	4620      	mov	r0, r4
  403b90:	4dad      	ldr	r5, [pc, #692]	; (403e48 <_svfprintf_r+0x13d0>)
  403b92:	e000      	b.n	403b96 <_svfprintf_r+0x111e>
  403b94:	4610      	mov	r0, r2
  403b96:	fb85 1203 	smull	r1, r2, r5, r3
  403b9a:	17d9      	asrs	r1, r3, #31
  403b9c:	ebc1 01a2 	rsb	r1, r1, r2, asr #2
  403ba0:	eb01 0281 	add.w	r2, r1, r1, lsl #2
  403ba4:	eba3 0242 	sub.w	r2, r3, r2, lsl #1
  403ba8:	3230      	adds	r2, #48	; 0x30
  403baa:	2909      	cmp	r1, #9
  403bac:	f800 2c01 	strb.w	r2, [r0, #-1]
  403bb0:	460b      	mov	r3, r1
  403bb2:	f100 32ff 	add.w	r2, r0, #4294967295
  403bb6:	dced      	bgt.n	403b94 <_svfprintf_r+0x111c>
  403bb8:	3330      	adds	r3, #48	; 0x30
  403bba:	3802      	subs	r0, #2
  403bbc:	b2d9      	uxtb	r1, r3
  403bbe:	4284      	cmp	r4, r0
  403bc0:	f802 1c01 	strb.w	r1, [r2, #-1]
  403bc4:	f240 815f 	bls.w	403e86 <_svfprintf_r+0x140e>
  403bc8:	f10d 0086 	add.w	r0, sp, #134	; 0x86
  403bcc:	4613      	mov	r3, r2
  403bce:	e001      	b.n	403bd4 <_svfprintf_r+0x115c>
  403bd0:	f813 1b01 	ldrb.w	r1, [r3], #1
  403bd4:	f800 1b01 	strb.w	r1, [r0], #1
  403bd8:	42a3      	cmp	r3, r4
  403bda:	d1f9      	bne.n	403bd0 <_svfprintf_r+0x1158>
  403bdc:	3301      	adds	r3, #1
  403bde:	1a9b      	subs	r3, r3, r2
  403be0:	f10d 0286 	add.w	r2, sp, #134	; 0x86
  403be4:	4413      	add	r3, r2
  403be6:	aa21      	add	r2, sp, #132	; 0x84
  403be8:	1a9b      	subs	r3, r3, r2
  403bea:	9a13      	ldr	r2, [sp, #76]	; 0x4c
  403bec:	931b      	str	r3, [sp, #108]	; 0x6c
  403bee:	2a01      	cmp	r2, #1
  403bf0:	4413      	add	r3, r2
  403bf2:	930e      	str	r3, [sp, #56]	; 0x38
  403bf4:	f340 8113 	ble.w	403e1e <_svfprintf_r+0x13a6>
  403bf8:	9b0e      	ldr	r3, [sp, #56]	; 0x38
  403bfa:	9a19      	ldr	r2, [sp, #100]	; 0x64
  403bfc:	4413      	add	r3, r2
  403bfe:	930e      	str	r3, [sp, #56]	; 0x38
  403c00:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
  403c04:	9308      	str	r3, [sp, #32]
  403c06:	2300      	movs	r3, #0
  403c08:	9312      	str	r3, [sp, #72]	; 0x48
  403c0a:	e6cf      	b.n	4039ac <_svfprintf_r+0xf34>
  403c0c:	aa25      	add	r2, sp, #148	; 0x94
  403c0e:	990b      	ldr	r1, [sp, #44]	; 0x2c
  403c10:	980c      	ldr	r0, [sp, #48]	; 0x30
  403c12:	f002 fb83 	bl	40631c <__ssprint_r>
  403c16:	2800      	cmp	r0, #0
  403c18:	f47f a800 	bne.w	402c1c <_svfprintf_r+0x1a4>
  403c1c:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  403c1e:	46c8      	mov	r8, r9
  403c20:	e4d6      	b.n	4035d0 <_svfprintf_r+0xb58>
  403c22:	4623      	mov	r3, r4
  403c24:	e6a2      	b.n	40396c <_svfprintf_r+0xef4>
  403c26:	aa25      	add	r2, sp, #148	; 0x94
  403c28:	990b      	ldr	r1, [sp, #44]	; 0x2c
  403c2a:	980c      	ldr	r0, [sp, #48]	; 0x30
  403c2c:	f002 fb76 	bl	40631c <__ssprint_r>
  403c30:	2800      	cmp	r0, #0
  403c32:	f47e aff3 	bne.w	402c1c <_svfprintf_r+0x1a4>
  403c36:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
  403c38:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  403c3a:	46c8      	mov	r8, r9
  403c3c:	e5ae      	b.n	40379c <_svfprintf_r+0xd24>
  403c3e:	aa25      	add	r2, sp, #148	; 0x94
  403c40:	990b      	ldr	r1, [sp, #44]	; 0x2c
  403c42:	980c      	ldr	r0, [sp, #48]	; 0x30
  403c44:	f002 fb6a 	bl	40631c <__ssprint_r>
  403c48:	2800      	cmp	r0, #0
  403c4a:	f47e afe7 	bne.w	402c1c <_svfprintf_r+0x1a4>
  403c4e:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
  403c50:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  403c52:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  403c54:	1a9a      	subs	r2, r3, r2
  403c56:	46c8      	mov	r8, r9
  403c58:	e5b8      	b.n	4037cc <_svfprintf_r+0xd54>
  403c5a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  403c5c:	9612      	str	r6, [sp, #72]	; 0x48
  403c5e:	2b06      	cmp	r3, #6
  403c60:	bf28      	it	cs
  403c62:	2306      	movcs	r3, #6
  403c64:	960a      	str	r6, [sp, #40]	; 0x28
  403c66:	4637      	mov	r7, r6
  403c68:	9308      	str	r3, [sp, #32]
  403c6a:	950f      	str	r5, [sp, #60]	; 0x3c
  403c6c:	f8cd b01c 	str.w	fp, [sp, #28]
  403c70:	930e      	str	r3, [sp, #56]	; 0x38
  403c72:	4e76      	ldr	r6, [pc, #472]	; (403e4c <_svfprintf_r+0x13d4>)
  403c74:	f7ff b818 	b.w	402ca8 <_svfprintf_r+0x230>
  403c78:	a823      	add	r0, sp, #140	; 0x8c
  403c7a:	a920      	add	r1, sp, #128	; 0x80
  403c7c:	9d0a      	ldr	r5, [sp, #40]	; 0x28
  403c7e:	9004      	str	r0, [sp, #16]
  403c80:	9103      	str	r1, [sp, #12]
  403c82:	a81f      	add	r0, sp, #124	; 0x7c
  403c84:	2103      	movs	r1, #3
  403c86:	9002      	str	r0, [sp, #8]
  403c88:	9a08      	ldr	r2, [sp, #32]
  403c8a:	9501      	str	r5, [sp, #4]
  403c8c:	463b      	mov	r3, r7
  403c8e:	9100      	str	r1, [sp, #0]
  403c90:	980c      	ldr	r0, [sp, #48]	; 0x30
  403c92:	f000 f9bd 	bl	404010 <_dtoa_r>
  403c96:	4606      	mov	r6, r0
  403c98:	1944      	adds	r4, r0, r5
  403c9a:	e72b      	b.n	403af4 <_svfprintf_r+0x107c>
  403c9c:	2306      	movs	r3, #6
  403c9e:	930a      	str	r3, [sp, #40]	; 0x28
  403ca0:	e61d      	b.n	4038de <_svfprintf_r+0xe66>
  403ca2:	272d      	movs	r7, #45	; 0x2d
  403ca4:	f88d 7077 	strb.w	r7, [sp, #119]	; 0x77
  403ca8:	f7ff bace 	b.w	403248 <_svfprintf_r+0x7d0>
  403cac:	9a19      	ldr	r2, [sp, #100]	; 0x64
  403cae:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  403cb0:	4413      	add	r3, r2
  403cb2:	9a12      	ldr	r2, [sp, #72]	; 0x48
  403cb4:	930e      	str	r3, [sp, #56]	; 0x38
  403cb6:	2a00      	cmp	r2, #0
  403cb8:	f340 80aa 	ble.w	403e10 <_svfprintf_r+0x1398>
  403cbc:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
  403cc0:	9308      	str	r3, [sp, #32]
  403cc2:	2367      	movs	r3, #103	; 0x67
  403cc4:	9311      	str	r3, [sp, #68]	; 0x44
  403cc6:	e671      	b.n	4039ac <_svfprintf_r+0xf34>
  403cc8:	2b00      	cmp	r3, #0
  403cca:	f340 80b2 	ble.w	403e32 <_svfprintf_r+0x13ba>
  403cce:	9a0a      	ldr	r2, [sp, #40]	; 0x28
  403cd0:	2a00      	cmp	r2, #0
  403cd2:	f040 8093 	bne.w	403dfc <_svfprintf_r+0x1384>
  403cd6:	f01b 0f01 	tst.w	fp, #1
  403cda:	f040 808f 	bne.w	403dfc <_svfprintf_r+0x1384>
  403cde:	9308      	str	r3, [sp, #32]
  403ce0:	930e      	str	r3, [sp, #56]	; 0x38
  403ce2:	e663      	b.n	4039ac <_svfprintf_r+0xf34>
  403ce4:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  403ce6:	9308      	str	r3, [sp, #32]
  403ce8:	930e      	str	r3, [sp, #56]	; 0x38
  403cea:	900a      	str	r0, [sp, #40]	; 0x28
  403cec:	950f      	str	r5, [sp, #60]	; 0x3c
  403cee:	f8cd b01c 	str.w	fp, [sp, #28]
  403cf2:	9012      	str	r0, [sp, #72]	; 0x48
  403cf4:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
  403cf8:	f7fe bfd6 	b.w	402ca8 <_svfprintf_r+0x230>
  403cfc:	9b11      	ldr	r3, [sp, #68]	; 0x44
  403cfe:	2b47      	cmp	r3, #71	; 0x47
  403d00:	f47f ae20 	bne.w	403944 <_svfprintf_r+0xecc>
  403d04:	f01b 0f01 	tst.w	fp, #1
  403d08:	f47f aeee 	bne.w	403ae8 <_svfprintf_r+0x1070>
  403d0c:	9b23      	ldr	r3, [sp, #140]	; 0x8c
  403d0e:	1b9b      	subs	r3, r3, r6
  403d10:	9313      	str	r3, [sp, #76]	; 0x4c
  403d12:	9b0e      	ldr	r3, [sp, #56]	; 0x38
  403d14:	2b47      	cmp	r3, #71	; 0x47
  403d16:	f43f af18 	beq.w	403b4a <_svfprintf_r+0x10d2>
  403d1a:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
  403d1c:	9312      	str	r3, [sp, #72]	; 0x48
  403d1e:	e721      	b.n	403b64 <_svfprintf_r+0x10ec>
  403d20:	424f      	negs	r7, r1
  403d22:	3110      	adds	r1, #16
  403d24:	4d4a      	ldr	r5, [pc, #296]	; (403e50 <_svfprintf_r+0x13d8>)
  403d26:	da2f      	bge.n	403d88 <_svfprintf_r+0x1310>
  403d28:	2410      	movs	r4, #16
  403d2a:	f8dd b030 	ldr.w	fp, [sp, #48]	; 0x30
  403d2e:	e004      	b.n	403d3a <_svfprintf_r+0x12c2>
  403d30:	f108 0808 	add.w	r8, r8, #8
  403d34:	3f10      	subs	r7, #16
  403d36:	2f10      	cmp	r7, #16
  403d38:	dd26      	ble.n	403d88 <_svfprintf_r+0x1310>
  403d3a:	3301      	adds	r3, #1
  403d3c:	3210      	adds	r2, #16
  403d3e:	2b07      	cmp	r3, #7
  403d40:	9227      	str	r2, [sp, #156]	; 0x9c
  403d42:	9326      	str	r3, [sp, #152]	; 0x98
  403d44:	f8c8 5000 	str.w	r5, [r8]
  403d48:	f8c8 4004 	str.w	r4, [r8, #4]
  403d4c:	ddf0      	ble.n	403d30 <_svfprintf_r+0x12b8>
  403d4e:	aa25      	add	r2, sp, #148	; 0x94
  403d50:	990b      	ldr	r1, [sp, #44]	; 0x2c
  403d52:	4658      	mov	r0, fp
  403d54:	f002 fae2 	bl	40631c <__ssprint_r>
  403d58:	2800      	cmp	r0, #0
  403d5a:	f47e af5f 	bne.w	402c1c <_svfprintf_r+0x1a4>
  403d5e:	9a27      	ldr	r2, [sp, #156]	; 0x9c
  403d60:	9b26      	ldr	r3, [sp, #152]	; 0x98
  403d62:	46c8      	mov	r8, r9
  403d64:	e7e6      	b.n	403d34 <_svfprintf_r+0x12bc>
  403d66:	aa25      	add	r2, sp, #148	; 0x94
  403d68:	990b      	ldr	r1, [sp, #44]	; 0x2c
  403d6a:	980c      	ldr	r0, [sp, #48]	; 0x30
  403d6c:	f002 fad6 	bl	40631c <__ssprint_r>
  403d70:	2800      	cmp	r0, #0
  403d72:	f47e af53 	bne.w	402c1c <_svfprintf_r+0x1a4>
  403d76:	991f      	ldr	r1, [sp, #124]	; 0x7c
  403d78:	9a27      	ldr	r2, [sp, #156]	; 0x9c
  403d7a:	9b26      	ldr	r3, [sp, #152]	; 0x98
  403d7c:	46c8      	mov	r8, r9
  403d7e:	e667      	b.n	403a50 <_svfprintf_r+0xfd8>
  403d80:	2000      	movs	r0, #0
  403d82:	900a      	str	r0, [sp, #40]	; 0x28
  403d84:	f7fe bed2 	b.w	402b2c <_svfprintf_r+0xb4>
  403d88:	3301      	adds	r3, #1
  403d8a:	443a      	add	r2, r7
  403d8c:	2b07      	cmp	r3, #7
  403d8e:	e888 00a0 	stmia.w	r8, {r5, r7}
  403d92:	9227      	str	r2, [sp, #156]	; 0x9c
  403d94:	9326      	str	r3, [sp, #152]	; 0x98
  403d96:	f108 0808 	add.w	r8, r8, #8
  403d9a:	f77f ae5c 	ble.w	403a56 <_svfprintf_r+0xfde>
  403d9e:	aa25      	add	r2, sp, #148	; 0x94
  403da0:	990b      	ldr	r1, [sp, #44]	; 0x2c
  403da2:	980c      	ldr	r0, [sp, #48]	; 0x30
  403da4:	f002 faba 	bl	40631c <__ssprint_r>
  403da8:	2800      	cmp	r0, #0
  403daa:	f47e af37 	bne.w	402c1c <_svfprintf_r+0x1a4>
  403dae:	9a27      	ldr	r2, [sp, #156]	; 0x9c
  403db0:	9b26      	ldr	r3, [sp, #152]	; 0x98
  403db2:	46c8      	mov	r8, r9
  403db4:	e64f      	b.n	403a56 <_svfprintf_r+0xfde>
  403db6:	3330      	adds	r3, #48	; 0x30
  403db8:	2230      	movs	r2, #48	; 0x30
  403dba:	f88d 3087 	strb.w	r3, [sp, #135]	; 0x87
  403dbe:	f88d 2086 	strb.w	r2, [sp, #134]	; 0x86
  403dc2:	ab22      	add	r3, sp, #136	; 0x88
  403dc4:	e70f      	b.n	403be6 <_svfprintf_r+0x116e>
  403dc6:	9b12      	ldr	r3, [sp, #72]	; 0x48
  403dc8:	9a19      	ldr	r2, [sp, #100]	; 0x64
  403dca:	4413      	add	r3, r2
  403dcc:	930e      	str	r3, [sp, #56]	; 0x38
  403dce:	e775      	b.n	403cbc <_svfprintf_r+0x1244>
  403dd0:	9b23      	ldr	r3, [sp, #140]	; 0x8c
  403dd2:	e5cb      	b.n	40396c <_svfprintf_r+0xef4>
  403dd4:	4e1f      	ldr	r6, [pc, #124]	; (403e54 <_svfprintf_r+0x13dc>)
  403dd6:	4b20      	ldr	r3, [pc, #128]	; (403e58 <_svfprintf_r+0x13e0>)
  403dd8:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
  403ddc:	f7ff ba36 	b.w	40324c <_svfprintf_r+0x7d4>
  403de0:	9a16      	ldr	r2, [sp, #88]	; 0x58
  403de2:	9808      	ldr	r0, [sp, #32]
  403de4:	9b17      	ldr	r3, [sp, #92]	; 0x5c
  403de6:	4639      	mov	r1, r7
  403de8:	f002 fec4 	bl	406b74 <__aeabi_dcmpeq>
  403dec:	2800      	cmp	r0, #0
  403dee:	f47f ae85 	bne.w	403afc <_svfprintf_r+0x1084>
  403df2:	f1c5 0501 	rsb	r5, r5, #1
  403df6:	951f      	str	r5, [sp, #124]	; 0x7c
  403df8:	442c      	add	r4, r5
  403dfa:	e5a4      	b.n	403946 <_svfprintf_r+0xece>
  403dfc:	9b12      	ldr	r3, [sp, #72]	; 0x48
  403dfe:	9a19      	ldr	r2, [sp, #100]	; 0x64
  403e00:	4413      	add	r3, r2
  403e02:	9a0a      	ldr	r2, [sp, #40]	; 0x28
  403e04:	441a      	add	r2, r3
  403e06:	ea22 73e2 	bic.w	r3, r2, r2, asr #31
  403e0a:	920e      	str	r2, [sp, #56]	; 0x38
  403e0c:	9308      	str	r3, [sp, #32]
  403e0e:	e5cd      	b.n	4039ac <_svfprintf_r+0xf34>
  403e10:	9b12      	ldr	r3, [sp, #72]	; 0x48
  403e12:	9a0e      	ldr	r2, [sp, #56]	; 0x38
  403e14:	f1c3 0301 	rsb	r3, r3, #1
  403e18:	441a      	add	r2, r3
  403e1a:	4613      	mov	r3, r2
  403e1c:	e7d6      	b.n	403dcc <_svfprintf_r+0x1354>
  403e1e:	f01b 0301 	ands.w	r3, fp, #1
  403e22:	9312      	str	r3, [sp, #72]	; 0x48
  403e24:	f47f aee8 	bne.w	403bf8 <_svfprintf_r+0x1180>
  403e28:	9b0e      	ldr	r3, [sp, #56]	; 0x38
  403e2a:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
  403e2e:	9308      	str	r3, [sp, #32]
  403e30:	e5bc      	b.n	4039ac <_svfprintf_r+0xf34>
  403e32:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  403e34:	b913      	cbnz	r3, 403e3c <_svfprintf_r+0x13c4>
  403e36:	f01b 0f01 	tst.w	fp, #1
  403e3a:	d002      	beq.n	403e42 <_svfprintf_r+0x13ca>
  403e3c:	9b19      	ldr	r3, [sp, #100]	; 0x64
  403e3e:	3301      	adds	r3, #1
  403e40:	e7df      	b.n	403e02 <_svfprintf_r+0x138a>
  403e42:	2301      	movs	r3, #1
  403e44:	e74b      	b.n	403cde <_svfprintf_r+0x1266>
  403e46:	bf00      	nop
  403e48:	66666667 	.word	0x66666667
  403e4c:	0040775c 	.word	0x0040775c
  403e50:	00407778 	.word	0x00407778
  403e54:	00407730 	.word	0x00407730
  403e58:	0040772c 	.word	0x0040772c
  403e5c:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
  403e5e:	f89a 3001 	ldrb.w	r3, [sl, #1]
  403e62:	6828      	ldr	r0, [r5, #0]
  403e64:	ea40 70e0 	orr.w	r0, r0, r0, asr #31
  403e68:	900a      	str	r0, [sp, #40]	; 0x28
  403e6a:	4628      	mov	r0, r5
  403e6c:	3004      	adds	r0, #4
  403e6e:	46a2      	mov	sl, r4
  403e70:	900f      	str	r0, [sp, #60]	; 0x3c
  403e72:	f7fe be59 	b.w	402b28 <_svfprintf_r+0xb0>
  403e76:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
  403e7a:	f7ff b86f 	b.w	402f5c <_svfprintf_r+0x4e4>
  403e7e:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
  403e82:	f7ff ba1c 	b.w	4032be <_svfprintf_r+0x846>
  403e86:	f10d 0386 	add.w	r3, sp, #134	; 0x86
  403e8a:	e6ac      	b.n	403be6 <_svfprintf_r+0x116e>
  403e8c:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
  403e90:	f7ff b8f3 	b.w	40307a <_svfprintf_r+0x602>
  403e94:	9a0c      	ldr	r2, [sp, #48]	; 0x30
  403e96:	230c      	movs	r3, #12
  403e98:	6013      	str	r3, [r2, #0]
  403e9a:	f04f 33ff 	mov.w	r3, #4294967295
  403e9e:	9309      	str	r3, [sp, #36]	; 0x24
  403ea0:	f7fe bec5 	b.w	402c2e <_svfprintf_r+0x1b6>
  403ea4:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
  403ea8:	f7ff b9a2 	b.w	4031f0 <_svfprintf_r+0x778>
  403eac:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
  403eb0:	f7ff b97e 	b.w	4031b0 <_svfprintf_r+0x738>
  403eb4:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
  403eb8:	f7ff b961 	b.w	40317e <_svfprintf_r+0x706>
  403ebc:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
  403ec0:	f7ff b91a 	b.w	4030f8 <_svfprintf_r+0x680>

00403ec4 <register_fini>:
  403ec4:	4b02      	ldr	r3, [pc, #8]	; (403ed0 <register_fini+0xc>)
  403ec6:	b113      	cbz	r3, 403ece <register_fini+0xa>
  403ec8:	4802      	ldr	r0, [pc, #8]	; (403ed4 <register_fini+0x10>)
  403eca:	f000 b805 	b.w	403ed8 <atexit>
  403ece:	4770      	bx	lr
  403ed0:	00000000 	.word	0x00000000
  403ed4:	004050e1 	.word	0x004050e1

00403ed8 <atexit>:
  403ed8:	2300      	movs	r3, #0
  403eda:	4601      	mov	r1, r0
  403edc:	461a      	mov	r2, r3
  403ede:	4618      	mov	r0, r3
  403ee0:	f002 bab0 	b.w	406444 <__register_exitproc>

00403ee4 <quorem>:
  403ee4:	6902      	ldr	r2, [r0, #16]
  403ee6:	690b      	ldr	r3, [r1, #16]
  403ee8:	4293      	cmp	r3, r2
  403eea:	f300 808d 	bgt.w	404008 <quorem+0x124>
  403eee:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  403ef2:	f103 38ff 	add.w	r8, r3, #4294967295
  403ef6:	f101 0714 	add.w	r7, r1, #20
  403efa:	f100 0b14 	add.w	fp, r0, #20
  403efe:	f857 2028 	ldr.w	r2, [r7, r8, lsl #2]
  403f02:	f85b 3028 	ldr.w	r3, [fp, r8, lsl #2]
  403f06:	ea4f 0488 	mov.w	r4, r8, lsl #2
  403f0a:	b083      	sub	sp, #12
  403f0c:	3201      	adds	r2, #1
  403f0e:	fbb3 f9f2 	udiv	r9, r3, r2
  403f12:	eb0b 0304 	add.w	r3, fp, r4
  403f16:	9400      	str	r4, [sp, #0]
  403f18:	eb07 0a04 	add.w	sl, r7, r4
  403f1c:	9301      	str	r3, [sp, #4]
  403f1e:	f1b9 0f00 	cmp.w	r9, #0
  403f22:	d039      	beq.n	403f98 <quorem+0xb4>
  403f24:	2500      	movs	r5, #0
  403f26:	462e      	mov	r6, r5
  403f28:	46bc      	mov	ip, r7
  403f2a:	46de      	mov	lr, fp
  403f2c:	f85c 4b04 	ldr.w	r4, [ip], #4
  403f30:	f8de 3000 	ldr.w	r3, [lr]
  403f34:	b2a2      	uxth	r2, r4
  403f36:	fb09 5502 	mla	r5, r9, r2, r5
  403f3a:	0c22      	lsrs	r2, r4, #16
  403f3c:	0c2c      	lsrs	r4, r5, #16
  403f3e:	fb09 4202 	mla	r2, r9, r2, r4
  403f42:	b2ad      	uxth	r5, r5
  403f44:	1b75      	subs	r5, r6, r5
  403f46:	b296      	uxth	r6, r2
  403f48:	ebc6 4613 	rsb	r6, r6, r3, lsr #16
  403f4c:	fa15 f383 	uxtah	r3, r5, r3
  403f50:	eb06 4623 	add.w	r6, r6, r3, asr #16
  403f54:	b29b      	uxth	r3, r3
  403f56:	ea43 4306 	orr.w	r3, r3, r6, lsl #16
  403f5a:	45e2      	cmp	sl, ip
  403f5c:	ea4f 4512 	mov.w	r5, r2, lsr #16
  403f60:	f84e 3b04 	str.w	r3, [lr], #4
  403f64:	ea4f 4626 	mov.w	r6, r6, asr #16
  403f68:	d2e0      	bcs.n	403f2c <quorem+0x48>
  403f6a:	9b00      	ldr	r3, [sp, #0]
  403f6c:	f85b 3003 	ldr.w	r3, [fp, r3]
  403f70:	b993      	cbnz	r3, 403f98 <quorem+0xb4>
  403f72:	9c01      	ldr	r4, [sp, #4]
  403f74:	1f23      	subs	r3, r4, #4
  403f76:	459b      	cmp	fp, r3
  403f78:	d20c      	bcs.n	403f94 <quorem+0xb0>
  403f7a:	f854 3c04 	ldr.w	r3, [r4, #-4]
  403f7e:	b94b      	cbnz	r3, 403f94 <quorem+0xb0>
  403f80:	f1a4 0308 	sub.w	r3, r4, #8
  403f84:	e002      	b.n	403f8c <quorem+0xa8>
  403f86:	681a      	ldr	r2, [r3, #0]
  403f88:	3b04      	subs	r3, #4
  403f8a:	b91a      	cbnz	r2, 403f94 <quorem+0xb0>
  403f8c:	459b      	cmp	fp, r3
  403f8e:	f108 38ff 	add.w	r8, r8, #4294967295
  403f92:	d3f8      	bcc.n	403f86 <quorem+0xa2>
  403f94:	f8c0 8010 	str.w	r8, [r0, #16]
  403f98:	4604      	mov	r4, r0
  403f9a:	f001 fffd 	bl	405f98 <__mcmp>
  403f9e:	2800      	cmp	r0, #0
  403fa0:	db2e      	blt.n	404000 <quorem+0x11c>
  403fa2:	f109 0901 	add.w	r9, r9, #1
  403fa6:	465d      	mov	r5, fp
  403fa8:	2300      	movs	r3, #0
  403faa:	f857 1b04 	ldr.w	r1, [r7], #4
  403fae:	6828      	ldr	r0, [r5, #0]
  403fb0:	b28a      	uxth	r2, r1
  403fb2:	1a9a      	subs	r2, r3, r2
  403fb4:	0c0b      	lsrs	r3, r1, #16
  403fb6:	fa12 f280 	uxtah	r2, r2, r0
  403fba:	ebc3 4310 	rsb	r3, r3, r0, lsr #16
  403fbe:	eb03 4322 	add.w	r3, r3, r2, asr #16
  403fc2:	b292      	uxth	r2, r2
  403fc4:	ea42 4203 	orr.w	r2, r2, r3, lsl #16
  403fc8:	45ba      	cmp	sl, r7
  403fca:	f845 2b04 	str.w	r2, [r5], #4
  403fce:	ea4f 4323 	mov.w	r3, r3, asr #16
  403fd2:	d2ea      	bcs.n	403faa <quorem+0xc6>
  403fd4:	f85b 2028 	ldr.w	r2, [fp, r8, lsl #2]
  403fd8:	eb0b 0388 	add.w	r3, fp, r8, lsl #2
  403fdc:	b982      	cbnz	r2, 404000 <quorem+0x11c>
  403fde:	1f1a      	subs	r2, r3, #4
  403fe0:	4593      	cmp	fp, r2
  403fe2:	d20b      	bcs.n	403ffc <quorem+0x118>
  403fe4:	f853 2c04 	ldr.w	r2, [r3, #-4]
  403fe8:	b942      	cbnz	r2, 403ffc <quorem+0x118>
  403fea:	3b08      	subs	r3, #8
  403fec:	e002      	b.n	403ff4 <quorem+0x110>
  403fee:	681a      	ldr	r2, [r3, #0]
  403ff0:	3b04      	subs	r3, #4
  403ff2:	b91a      	cbnz	r2, 403ffc <quorem+0x118>
  403ff4:	459b      	cmp	fp, r3
  403ff6:	f108 38ff 	add.w	r8, r8, #4294967295
  403ffa:	d3f8      	bcc.n	403fee <quorem+0x10a>
  403ffc:	f8c4 8010 	str.w	r8, [r4, #16]
  404000:	4648      	mov	r0, r9
  404002:	b003      	add	sp, #12
  404004:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  404008:	2000      	movs	r0, #0
  40400a:	4770      	bx	lr
  40400c:	0000      	movs	r0, r0
	...

00404010 <_dtoa_r>:
  404010:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  404014:	6c01      	ldr	r1, [r0, #64]	; 0x40
  404016:	b09b      	sub	sp, #108	; 0x6c
  404018:	4604      	mov	r4, r0
  40401a:	9e27      	ldr	r6, [sp, #156]	; 0x9c
  40401c:	4692      	mov	sl, r2
  40401e:	469b      	mov	fp, r3
  404020:	b141      	cbz	r1, 404034 <_dtoa_r+0x24>
  404022:	6c42      	ldr	r2, [r0, #68]	; 0x44
  404024:	604a      	str	r2, [r1, #4]
  404026:	2301      	movs	r3, #1
  404028:	4093      	lsls	r3, r2
  40402a:	608b      	str	r3, [r1, #8]
  40402c:	f001 fddc 	bl	405be8 <_Bfree>
  404030:	2300      	movs	r3, #0
  404032:	6423      	str	r3, [r4, #64]	; 0x40
  404034:	f1bb 0f00 	cmp.w	fp, #0
  404038:	465d      	mov	r5, fp
  40403a:	db35      	blt.n	4040a8 <_dtoa_r+0x98>
  40403c:	2300      	movs	r3, #0
  40403e:	6033      	str	r3, [r6, #0]
  404040:	4b9d      	ldr	r3, [pc, #628]	; (4042b8 <_dtoa_r+0x2a8>)
  404042:	43ab      	bics	r3, r5
  404044:	d015      	beq.n	404072 <_dtoa_r+0x62>
  404046:	4650      	mov	r0, sl
  404048:	4659      	mov	r1, fp
  40404a:	2200      	movs	r2, #0
  40404c:	2300      	movs	r3, #0
  40404e:	f002 fd91 	bl	406b74 <__aeabi_dcmpeq>
  404052:	4680      	mov	r8, r0
  404054:	2800      	cmp	r0, #0
  404056:	d02d      	beq.n	4040b4 <_dtoa_r+0xa4>
  404058:	9a26      	ldr	r2, [sp, #152]	; 0x98
  40405a:	2301      	movs	r3, #1
  40405c:	6013      	str	r3, [r2, #0]
  40405e:	9b28      	ldr	r3, [sp, #160]	; 0xa0
  404060:	2b00      	cmp	r3, #0
  404062:	f000 80bd 	beq.w	4041e0 <_dtoa_r+0x1d0>
  404066:	4895      	ldr	r0, [pc, #596]	; (4042bc <_dtoa_r+0x2ac>)
  404068:	6018      	str	r0, [r3, #0]
  40406a:	3801      	subs	r0, #1
  40406c:	b01b      	add	sp, #108	; 0x6c
  40406e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  404072:	9a26      	ldr	r2, [sp, #152]	; 0x98
  404074:	f242 730f 	movw	r3, #9999	; 0x270f
  404078:	6013      	str	r3, [r2, #0]
  40407a:	f1ba 0f00 	cmp.w	sl, #0
  40407e:	d10d      	bne.n	40409c <_dtoa_r+0x8c>
  404080:	f3c5 0513 	ubfx	r5, r5, #0, #20
  404084:	b955      	cbnz	r5, 40409c <_dtoa_r+0x8c>
  404086:	9b28      	ldr	r3, [sp, #160]	; 0xa0
  404088:	488d      	ldr	r0, [pc, #564]	; (4042c0 <_dtoa_r+0x2b0>)
  40408a:	2b00      	cmp	r3, #0
  40408c:	d0ee      	beq.n	40406c <_dtoa_r+0x5c>
  40408e:	f100 0308 	add.w	r3, r0, #8
  404092:	9a28      	ldr	r2, [sp, #160]	; 0xa0
  404094:	6013      	str	r3, [r2, #0]
  404096:	b01b      	add	sp, #108	; 0x6c
  404098:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  40409c:	9b28      	ldr	r3, [sp, #160]	; 0xa0
  40409e:	4889      	ldr	r0, [pc, #548]	; (4042c4 <_dtoa_r+0x2b4>)
  4040a0:	2b00      	cmp	r3, #0
  4040a2:	d0e3      	beq.n	40406c <_dtoa_r+0x5c>
  4040a4:	1cc3      	adds	r3, r0, #3
  4040a6:	e7f4      	b.n	404092 <_dtoa_r+0x82>
  4040a8:	2301      	movs	r3, #1
  4040aa:	f02b 4500 	bic.w	r5, fp, #2147483648	; 0x80000000
  4040ae:	6033      	str	r3, [r6, #0]
  4040b0:	46ab      	mov	fp, r5
  4040b2:	e7c5      	b.n	404040 <_dtoa_r+0x30>
  4040b4:	aa18      	add	r2, sp, #96	; 0x60
  4040b6:	ab19      	add	r3, sp, #100	; 0x64
  4040b8:	9201      	str	r2, [sp, #4]
  4040ba:	9300      	str	r3, [sp, #0]
  4040bc:	4652      	mov	r2, sl
  4040be:	465b      	mov	r3, fp
  4040c0:	4620      	mov	r0, r4
  4040c2:	f002 f809 	bl	4060d8 <__d2b>
  4040c6:	0d2b      	lsrs	r3, r5, #20
  4040c8:	4681      	mov	r9, r0
  4040ca:	d071      	beq.n	4041b0 <_dtoa_r+0x1a0>
  4040cc:	f3cb 0213 	ubfx	r2, fp, #0, #20
  4040d0:	f042 517f 	orr.w	r1, r2, #1069547520	; 0x3fc00000
  4040d4:	9f18      	ldr	r7, [sp, #96]	; 0x60
  4040d6:	f8cd 8050 	str.w	r8, [sp, #80]	; 0x50
  4040da:	4650      	mov	r0, sl
  4040dc:	f2a3 36ff 	subw	r6, r3, #1023	; 0x3ff
  4040e0:	f441 1140 	orr.w	r1, r1, #3145728	; 0x300000
  4040e4:	2200      	movs	r2, #0
  4040e6:	4b78      	ldr	r3, [pc, #480]	; (4042c8 <_dtoa_r+0x2b8>)
  4040e8:	f7fd ff8e 	bl	402008 <__aeabi_dsub>
  4040ec:	a36c      	add	r3, pc, #432	; (adr r3, 4042a0 <_dtoa_r+0x290>)
  4040ee:	e9d3 2300 	ldrd	r2, r3, [r3]
  4040f2:	f7fe f93d 	bl	402370 <__aeabi_dmul>
  4040f6:	a36c      	add	r3, pc, #432	; (adr r3, 4042a8 <_dtoa_r+0x298>)
  4040f8:	e9d3 2300 	ldrd	r2, r3, [r3]
  4040fc:	f7fd ff86 	bl	40200c <__adddf3>
  404100:	e9cd 0102 	strd	r0, r1, [sp, #8]
  404104:	4630      	mov	r0, r6
  404106:	f7fe f8cd 	bl	4022a4 <__aeabi_i2d>
  40410a:	a369      	add	r3, pc, #420	; (adr r3, 4042b0 <_dtoa_r+0x2a0>)
  40410c:	e9d3 2300 	ldrd	r2, r3, [r3]
  404110:	f7fe f92e 	bl	402370 <__aeabi_dmul>
  404114:	4602      	mov	r2, r0
  404116:	460b      	mov	r3, r1
  404118:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
  40411c:	f7fd ff76 	bl	40200c <__adddf3>
  404120:	e9cd 0104 	strd	r0, r1, [sp, #16]
  404124:	f7fe fb36 	bl	402794 <__aeabi_d2iz>
  404128:	2200      	movs	r2, #0
  40412a:	9002      	str	r0, [sp, #8]
  40412c:	2300      	movs	r3, #0
  40412e:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
  404132:	f002 fd29 	bl	406b88 <__aeabi_dcmplt>
  404136:	2800      	cmp	r0, #0
  404138:	f040 8173 	bne.w	404422 <_dtoa_r+0x412>
  40413c:	9d02      	ldr	r5, [sp, #8]
  40413e:	2d16      	cmp	r5, #22
  404140:	f200 815d 	bhi.w	4043fe <_dtoa_r+0x3ee>
  404144:	4b61      	ldr	r3, [pc, #388]	; (4042cc <_dtoa_r+0x2bc>)
  404146:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
  40414a:	e9d3 0100 	ldrd	r0, r1, [r3]
  40414e:	4652      	mov	r2, sl
  404150:	465b      	mov	r3, fp
  404152:	f002 fd37 	bl	406bc4 <__aeabi_dcmpgt>
  404156:	2800      	cmp	r0, #0
  404158:	f000 81c5 	beq.w	4044e6 <_dtoa_r+0x4d6>
  40415c:	1e6b      	subs	r3, r5, #1
  40415e:	9302      	str	r3, [sp, #8]
  404160:	2300      	movs	r3, #0
  404162:	930e      	str	r3, [sp, #56]	; 0x38
  404164:	1bbf      	subs	r7, r7, r6
  404166:	1e7b      	subs	r3, r7, #1
  404168:	9306      	str	r3, [sp, #24]
  40416a:	f100 8154 	bmi.w	404416 <_dtoa_r+0x406>
  40416e:	2300      	movs	r3, #0
  404170:	9308      	str	r3, [sp, #32]
  404172:	9b02      	ldr	r3, [sp, #8]
  404174:	2b00      	cmp	r3, #0
  404176:	f2c0 8145 	blt.w	404404 <_dtoa_r+0x3f4>
  40417a:	9a06      	ldr	r2, [sp, #24]
  40417c:	930d      	str	r3, [sp, #52]	; 0x34
  40417e:	4611      	mov	r1, r2
  404180:	4419      	add	r1, r3
  404182:	2300      	movs	r3, #0
  404184:	9106      	str	r1, [sp, #24]
  404186:	930c      	str	r3, [sp, #48]	; 0x30
  404188:	9b24      	ldr	r3, [sp, #144]	; 0x90
  40418a:	2b09      	cmp	r3, #9
  40418c:	d82a      	bhi.n	4041e4 <_dtoa_r+0x1d4>
  40418e:	2b05      	cmp	r3, #5
  404190:	f340 865b 	ble.w	404e4a <_dtoa_r+0xe3a>
  404194:	3b04      	subs	r3, #4
  404196:	9324      	str	r3, [sp, #144]	; 0x90
  404198:	2500      	movs	r5, #0
  40419a:	9b24      	ldr	r3, [sp, #144]	; 0x90
  40419c:	3b02      	subs	r3, #2
  40419e:	2b03      	cmp	r3, #3
  4041a0:	f200 8642 	bhi.w	404e28 <_dtoa_r+0xe18>
  4041a4:	e8df f013 	tbh	[pc, r3, lsl #1]
  4041a8:	02c903d4 	.word	0x02c903d4
  4041ac:	046103df 	.word	0x046103df
  4041b0:	9f18      	ldr	r7, [sp, #96]	; 0x60
  4041b2:	9e19      	ldr	r6, [sp, #100]	; 0x64
  4041b4:	443e      	add	r6, r7
  4041b6:	f206 4332 	addw	r3, r6, #1074	; 0x432
  4041ba:	2b20      	cmp	r3, #32
  4041bc:	f340 818e 	ble.w	4044dc <_dtoa_r+0x4cc>
  4041c0:	f1c3 0340 	rsb	r3, r3, #64	; 0x40
  4041c4:	f206 4012 	addw	r0, r6, #1042	; 0x412
  4041c8:	409d      	lsls	r5, r3
  4041ca:	fa2a f000 	lsr.w	r0, sl, r0
  4041ce:	4328      	orrs	r0, r5
  4041d0:	f7fe f858 	bl	402284 <__aeabi_ui2d>
  4041d4:	2301      	movs	r3, #1
  4041d6:	3e01      	subs	r6, #1
  4041d8:	f1a1 71f8 	sub.w	r1, r1, #32505856	; 0x1f00000
  4041dc:	9314      	str	r3, [sp, #80]	; 0x50
  4041de:	e781      	b.n	4040e4 <_dtoa_r+0xd4>
  4041e0:	483b      	ldr	r0, [pc, #236]	; (4042d0 <_dtoa_r+0x2c0>)
  4041e2:	e743      	b.n	40406c <_dtoa_r+0x5c>
  4041e4:	2100      	movs	r1, #0
  4041e6:	6461      	str	r1, [r4, #68]	; 0x44
  4041e8:	4620      	mov	r0, r4
  4041ea:	9125      	str	r1, [sp, #148]	; 0x94
  4041ec:	f001 fcd6 	bl	405b9c <_Balloc>
  4041f0:	f04f 33ff 	mov.w	r3, #4294967295
  4041f4:	930a      	str	r3, [sp, #40]	; 0x28
  4041f6:	9a25      	ldr	r2, [sp, #148]	; 0x94
  4041f8:	930f      	str	r3, [sp, #60]	; 0x3c
  4041fa:	2301      	movs	r3, #1
  4041fc:	9004      	str	r0, [sp, #16]
  4041fe:	6420      	str	r0, [r4, #64]	; 0x40
  404200:	9224      	str	r2, [sp, #144]	; 0x90
  404202:	930b      	str	r3, [sp, #44]	; 0x2c
  404204:	9b19      	ldr	r3, [sp, #100]	; 0x64
  404206:	2b00      	cmp	r3, #0
  404208:	f2c0 80d9 	blt.w	4043be <_dtoa_r+0x3ae>
  40420c:	9a02      	ldr	r2, [sp, #8]
  40420e:	2a0e      	cmp	r2, #14
  404210:	f300 80d5 	bgt.w	4043be <_dtoa_r+0x3ae>
  404214:	4b2d      	ldr	r3, [pc, #180]	; (4042cc <_dtoa_r+0x2bc>)
  404216:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
  40421a:	e9d3 2300 	ldrd	r2, r3, [r3]
  40421e:	e9cd 2308 	strd	r2, r3, [sp, #32]
  404222:	9b25      	ldr	r3, [sp, #148]	; 0x94
  404224:	2b00      	cmp	r3, #0
  404226:	f2c0 83ba 	blt.w	40499e <_dtoa_r+0x98e>
  40422a:	e9dd 5608 	ldrd	r5, r6, [sp, #32]
  40422e:	4650      	mov	r0, sl
  404230:	462a      	mov	r2, r5
  404232:	4633      	mov	r3, r6
  404234:	4659      	mov	r1, fp
  404236:	f7fe f9c5 	bl	4025c4 <__aeabi_ddiv>
  40423a:	f7fe faab 	bl	402794 <__aeabi_d2iz>
  40423e:	4680      	mov	r8, r0
  404240:	f7fe f830 	bl	4022a4 <__aeabi_i2d>
  404244:	462a      	mov	r2, r5
  404246:	4633      	mov	r3, r6
  404248:	f7fe f892 	bl	402370 <__aeabi_dmul>
  40424c:	460b      	mov	r3, r1
  40424e:	4602      	mov	r2, r0
  404250:	4659      	mov	r1, fp
  404252:	4650      	mov	r0, sl
  404254:	f7fd fed8 	bl	402008 <__aeabi_dsub>
  404258:	9d04      	ldr	r5, [sp, #16]
  40425a:	f108 0330 	add.w	r3, r8, #48	; 0x30
  40425e:	702b      	strb	r3, [r5, #0]
  404260:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  404262:	2b01      	cmp	r3, #1
  404264:	4606      	mov	r6, r0
  404266:	460f      	mov	r7, r1
  404268:	f105 0501 	add.w	r5, r5, #1
  40426c:	d068      	beq.n	404340 <_dtoa_r+0x330>
  40426e:	2200      	movs	r2, #0
  404270:	4b18      	ldr	r3, [pc, #96]	; (4042d4 <_dtoa_r+0x2c4>)
  404272:	f7fe f87d 	bl	402370 <__aeabi_dmul>
  404276:	2200      	movs	r2, #0
  404278:	2300      	movs	r3, #0
  40427a:	4606      	mov	r6, r0
  40427c:	460f      	mov	r7, r1
  40427e:	f002 fc79 	bl	406b74 <__aeabi_dcmpeq>
  404282:	2800      	cmp	r0, #0
  404284:	f040 8088 	bne.w	404398 <_dtoa_r+0x388>
  404288:	f8cd 902c 	str.w	r9, [sp, #44]	; 0x2c
  40428c:	f04f 0a00 	mov.w	sl, #0
  404290:	f8df b040 	ldr.w	fp, [pc, #64]	; 4042d4 <_dtoa_r+0x2c4>
  404294:	940c      	str	r4, [sp, #48]	; 0x30
  404296:	e9dd 8908 	ldrd	r8, r9, [sp, #32]
  40429a:	e028      	b.n	4042ee <_dtoa_r+0x2de>
  40429c:	f3af 8000 	nop.w
  4042a0:	636f4361 	.word	0x636f4361
  4042a4:	3fd287a7 	.word	0x3fd287a7
  4042a8:	8b60c8b3 	.word	0x8b60c8b3
  4042ac:	3fc68a28 	.word	0x3fc68a28
  4042b0:	509f79fb 	.word	0x509f79fb
  4042b4:	3fd34413 	.word	0x3fd34413
  4042b8:	7ff00000 	.word	0x7ff00000
  4042bc:	00407765 	.word	0x00407765
  4042c0:	00407788 	.word	0x00407788
  4042c4:	00407794 	.word	0x00407794
  4042c8:	3ff80000 	.word	0x3ff80000
  4042cc:	004077c0 	.word	0x004077c0
  4042d0:	00407764 	.word	0x00407764
  4042d4:	40240000 	.word	0x40240000
  4042d8:	f7fe f84a 	bl	402370 <__aeabi_dmul>
  4042dc:	2200      	movs	r2, #0
  4042de:	2300      	movs	r3, #0
  4042e0:	4606      	mov	r6, r0
  4042e2:	460f      	mov	r7, r1
  4042e4:	f002 fc46 	bl	406b74 <__aeabi_dcmpeq>
  4042e8:	2800      	cmp	r0, #0
  4042ea:	f040 83c1 	bne.w	404a70 <_dtoa_r+0xa60>
  4042ee:	4642      	mov	r2, r8
  4042f0:	464b      	mov	r3, r9
  4042f2:	4630      	mov	r0, r6
  4042f4:	4639      	mov	r1, r7
  4042f6:	f7fe f965 	bl	4025c4 <__aeabi_ddiv>
  4042fa:	f7fe fa4b 	bl	402794 <__aeabi_d2iz>
  4042fe:	4604      	mov	r4, r0
  404300:	f7fd ffd0 	bl	4022a4 <__aeabi_i2d>
  404304:	4642      	mov	r2, r8
  404306:	464b      	mov	r3, r9
  404308:	f7fe f832 	bl	402370 <__aeabi_dmul>
  40430c:	4602      	mov	r2, r0
  40430e:	460b      	mov	r3, r1
  404310:	4630      	mov	r0, r6
  404312:	4639      	mov	r1, r7
  404314:	f7fd fe78 	bl	402008 <__aeabi_dsub>
  404318:	f104 0e30 	add.w	lr, r4, #48	; 0x30
  40431c:	9e04      	ldr	r6, [sp, #16]
  40431e:	f805 eb01 	strb.w	lr, [r5], #1
  404322:	eba5 0e06 	sub.w	lr, r5, r6
  404326:	9e0a      	ldr	r6, [sp, #40]	; 0x28
  404328:	45b6      	cmp	lr, r6
  40432a:	e9cd 0106 	strd	r0, r1, [sp, #24]
  40432e:	4652      	mov	r2, sl
  404330:	465b      	mov	r3, fp
  404332:	d1d1      	bne.n	4042d8 <_dtoa_r+0x2c8>
  404334:	46a0      	mov	r8, r4
  404336:	f8dd 902c 	ldr.w	r9, [sp, #44]	; 0x2c
  40433a:	9c0c      	ldr	r4, [sp, #48]	; 0x30
  40433c:	4606      	mov	r6, r0
  40433e:	460f      	mov	r7, r1
  404340:	4632      	mov	r2, r6
  404342:	463b      	mov	r3, r7
  404344:	4630      	mov	r0, r6
  404346:	4639      	mov	r1, r7
  404348:	f7fd fe60 	bl	40200c <__adddf3>
  40434c:	4606      	mov	r6, r0
  40434e:	460f      	mov	r7, r1
  404350:	4602      	mov	r2, r0
  404352:	460b      	mov	r3, r1
  404354:	e9dd 0108 	ldrd	r0, r1, [sp, #32]
  404358:	f002 fc16 	bl	406b88 <__aeabi_dcmplt>
  40435c:	b948      	cbnz	r0, 404372 <_dtoa_r+0x362>
  40435e:	4632      	mov	r2, r6
  404360:	463b      	mov	r3, r7
  404362:	e9dd 0108 	ldrd	r0, r1, [sp, #32]
  404366:	f002 fc05 	bl	406b74 <__aeabi_dcmpeq>
  40436a:	b1a8      	cbz	r0, 404398 <_dtoa_r+0x388>
  40436c:	f018 0f01 	tst.w	r8, #1
  404370:	d012      	beq.n	404398 <_dtoa_r+0x388>
  404372:	f815 8c01 	ldrb.w	r8, [r5, #-1]
  404376:	9a04      	ldr	r2, [sp, #16]
  404378:	1e6b      	subs	r3, r5, #1
  40437a:	e004      	b.n	404386 <_dtoa_r+0x376>
  40437c:	429a      	cmp	r2, r3
  40437e:	f000 8401 	beq.w	404b84 <_dtoa_r+0xb74>
  404382:	f813 8d01 	ldrb.w	r8, [r3, #-1]!
  404386:	f1b8 0f39 	cmp.w	r8, #57	; 0x39
  40438a:	f103 0501 	add.w	r5, r3, #1
  40438e:	d0f5      	beq.n	40437c <_dtoa_r+0x36c>
  404390:	f108 0801 	add.w	r8, r8, #1
  404394:	f883 8000 	strb.w	r8, [r3]
  404398:	4649      	mov	r1, r9
  40439a:	4620      	mov	r0, r4
  40439c:	f001 fc24 	bl	405be8 <_Bfree>
  4043a0:	2200      	movs	r2, #0
  4043a2:	9b02      	ldr	r3, [sp, #8]
  4043a4:	702a      	strb	r2, [r5, #0]
  4043a6:	9a26      	ldr	r2, [sp, #152]	; 0x98
  4043a8:	3301      	adds	r3, #1
  4043aa:	6013      	str	r3, [r2, #0]
  4043ac:	9b28      	ldr	r3, [sp, #160]	; 0xa0
  4043ae:	2b00      	cmp	r3, #0
  4043b0:	f000 839e 	beq.w	404af0 <_dtoa_r+0xae0>
  4043b4:	9804      	ldr	r0, [sp, #16]
  4043b6:	601d      	str	r5, [r3, #0]
  4043b8:	b01b      	add	sp, #108	; 0x6c
  4043ba:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  4043be:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
  4043c0:	2a00      	cmp	r2, #0
  4043c2:	d03e      	beq.n	404442 <_dtoa_r+0x432>
  4043c4:	9a24      	ldr	r2, [sp, #144]	; 0x90
  4043c6:	2a01      	cmp	r2, #1
  4043c8:	f340 8311 	ble.w	4049ee <_dtoa_r+0x9de>
  4043cc:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  4043ce:	9a0c      	ldr	r2, [sp, #48]	; 0x30
  4043d0:	1e5f      	subs	r7, r3, #1
  4043d2:	42ba      	cmp	r2, r7
  4043d4:	f2c0 838f 	blt.w	404af6 <_dtoa_r+0xae6>
  4043d8:	1bd7      	subs	r7, r2, r7
  4043da:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  4043dc:	2b00      	cmp	r3, #0
  4043de:	f2c0 848b 	blt.w	404cf8 <_dtoa_r+0xce8>
  4043e2:	9d08      	ldr	r5, [sp, #32]
  4043e4:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  4043e6:	9a08      	ldr	r2, [sp, #32]
  4043e8:	441a      	add	r2, r3
  4043ea:	9208      	str	r2, [sp, #32]
  4043ec:	9a06      	ldr	r2, [sp, #24]
  4043ee:	2101      	movs	r1, #1
  4043f0:	441a      	add	r2, r3
  4043f2:	4620      	mov	r0, r4
  4043f4:	9206      	str	r2, [sp, #24]
  4043f6:	f001 fc91 	bl	405d1c <__i2b>
  4043fa:	4606      	mov	r6, r0
  4043fc:	e024      	b.n	404448 <_dtoa_r+0x438>
  4043fe:	2301      	movs	r3, #1
  404400:	930e      	str	r3, [sp, #56]	; 0x38
  404402:	e6af      	b.n	404164 <_dtoa_r+0x154>
  404404:	9a08      	ldr	r2, [sp, #32]
  404406:	9b02      	ldr	r3, [sp, #8]
  404408:	1ad2      	subs	r2, r2, r3
  40440a:	425b      	negs	r3, r3
  40440c:	930c      	str	r3, [sp, #48]	; 0x30
  40440e:	2300      	movs	r3, #0
  404410:	9208      	str	r2, [sp, #32]
  404412:	930d      	str	r3, [sp, #52]	; 0x34
  404414:	e6b8      	b.n	404188 <_dtoa_r+0x178>
  404416:	f1c7 0301 	rsb	r3, r7, #1
  40441a:	9308      	str	r3, [sp, #32]
  40441c:	2300      	movs	r3, #0
  40441e:	9306      	str	r3, [sp, #24]
  404420:	e6a7      	b.n	404172 <_dtoa_r+0x162>
  404422:	9d02      	ldr	r5, [sp, #8]
  404424:	4628      	mov	r0, r5
  404426:	f7fd ff3d 	bl	4022a4 <__aeabi_i2d>
  40442a:	4602      	mov	r2, r0
  40442c:	460b      	mov	r3, r1
  40442e:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
  404432:	f002 fb9f 	bl	406b74 <__aeabi_dcmpeq>
  404436:	2800      	cmp	r0, #0
  404438:	f47f ae80 	bne.w	40413c <_dtoa_r+0x12c>
  40443c:	1e6b      	subs	r3, r5, #1
  40443e:	9302      	str	r3, [sp, #8]
  404440:	e67c      	b.n	40413c <_dtoa_r+0x12c>
  404442:	9f0c      	ldr	r7, [sp, #48]	; 0x30
  404444:	9d08      	ldr	r5, [sp, #32]
  404446:	9e0b      	ldr	r6, [sp, #44]	; 0x2c
  404448:	2d00      	cmp	r5, #0
  40444a:	dd0c      	ble.n	404466 <_dtoa_r+0x456>
  40444c:	9906      	ldr	r1, [sp, #24]
  40444e:	2900      	cmp	r1, #0
  404450:	460b      	mov	r3, r1
  404452:	dd08      	ble.n	404466 <_dtoa_r+0x456>
  404454:	42a9      	cmp	r1, r5
  404456:	9a08      	ldr	r2, [sp, #32]
  404458:	bfa8      	it	ge
  40445a:	462b      	movge	r3, r5
  40445c:	1ad2      	subs	r2, r2, r3
  40445e:	1aed      	subs	r5, r5, r3
  404460:	1acb      	subs	r3, r1, r3
  404462:	9208      	str	r2, [sp, #32]
  404464:	9306      	str	r3, [sp, #24]
  404466:	9b0c      	ldr	r3, [sp, #48]	; 0x30
  404468:	b1d3      	cbz	r3, 4044a0 <_dtoa_r+0x490>
  40446a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
  40446c:	2b00      	cmp	r3, #0
  40446e:	f000 82b7 	beq.w	4049e0 <_dtoa_r+0x9d0>
  404472:	2f00      	cmp	r7, #0
  404474:	dd10      	ble.n	404498 <_dtoa_r+0x488>
  404476:	4631      	mov	r1, r6
  404478:	463a      	mov	r2, r7
  40447a:	4620      	mov	r0, r4
  40447c:	f001 fcea 	bl	405e54 <__pow5mult>
  404480:	464a      	mov	r2, r9
  404482:	4601      	mov	r1, r0
  404484:	4606      	mov	r6, r0
  404486:	4620      	mov	r0, r4
  404488:	f001 fc52 	bl	405d30 <__multiply>
  40448c:	4649      	mov	r1, r9
  40448e:	4680      	mov	r8, r0
  404490:	4620      	mov	r0, r4
  404492:	f001 fba9 	bl	405be8 <_Bfree>
  404496:	46c1      	mov	r9, r8
  404498:	9b0c      	ldr	r3, [sp, #48]	; 0x30
  40449a:	1bda      	subs	r2, r3, r7
  40449c:	f040 82a1 	bne.w	4049e2 <_dtoa_r+0x9d2>
  4044a0:	2101      	movs	r1, #1
  4044a2:	4620      	mov	r0, r4
  4044a4:	f001 fc3a 	bl	405d1c <__i2b>
  4044a8:	9b0d      	ldr	r3, [sp, #52]	; 0x34
  4044aa:	2b00      	cmp	r3, #0
  4044ac:	4680      	mov	r8, r0
  4044ae:	dd1c      	ble.n	4044ea <_dtoa_r+0x4da>
  4044b0:	4601      	mov	r1, r0
  4044b2:	461a      	mov	r2, r3
  4044b4:	4620      	mov	r0, r4
  4044b6:	f001 fccd 	bl	405e54 <__pow5mult>
  4044ba:	9b24      	ldr	r3, [sp, #144]	; 0x90
  4044bc:	2b01      	cmp	r3, #1
  4044be:	4680      	mov	r8, r0
  4044c0:	f340 8254 	ble.w	40496c <_dtoa_r+0x95c>
  4044c4:	2300      	movs	r3, #0
  4044c6:	930c      	str	r3, [sp, #48]	; 0x30
  4044c8:	f8d8 3010 	ldr.w	r3, [r8, #16]
  4044cc:	eb08 0383 	add.w	r3, r8, r3, lsl #2
  4044d0:	6918      	ldr	r0, [r3, #16]
  4044d2:	f001 fbd3 	bl	405c7c <__hi0bits>
  4044d6:	f1c0 0020 	rsb	r0, r0, #32
  4044da:	e010      	b.n	4044fe <_dtoa_r+0x4ee>
  4044dc:	f1c3 0520 	rsb	r5, r3, #32
  4044e0:	fa0a f005 	lsl.w	r0, sl, r5
  4044e4:	e674      	b.n	4041d0 <_dtoa_r+0x1c0>
  4044e6:	900e      	str	r0, [sp, #56]	; 0x38
  4044e8:	e63c      	b.n	404164 <_dtoa_r+0x154>
  4044ea:	9b24      	ldr	r3, [sp, #144]	; 0x90
  4044ec:	2b01      	cmp	r3, #1
  4044ee:	f340 8287 	ble.w	404a00 <_dtoa_r+0x9f0>
  4044f2:	2300      	movs	r3, #0
  4044f4:	930c      	str	r3, [sp, #48]	; 0x30
  4044f6:	9b0d      	ldr	r3, [sp, #52]	; 0x34
  4044f8:	2001      	movs	r0, #1
  4044fa:	2b00      	cmp	r3, #0
  4044fc:	d1e4      	bne.n	4044c8 <_dtoa_r+0x4b8>
  4044fe:	9a06      	ldr	r2, [sp, #24]
  404500:	4410      	add	r0, r2
  404502:	f010 001f 	ands.w	r0, r0, #31
  404506:	f000 80a1 	beq.w	40464c <_dtoa_r+0x63c>
  40450a:	f1c0 0320 	rsb	r3, r0, #32
  40450e:	2b04      	cmp	r3, #4
  404510:	f340 849e 	ble.w	404e50 <_dtoa_r+0xe40>
  404514:	9b08      	ldr	r3, [sp, #32]
  404516:	f1c0 001c 	rsb	r0, r0, #28
  40451a:	4403      	add	r3, r0
  40451c:	9308      	str	r3, [sp, #32]
  40451e:	4613      	mov	r3, r2
  404520:	4403      	add	r3, r0
  404522:	4405      	add	r5, r0
  404524:	9306      	str	r3, [sp, #24]
  404526:	9b08      	ldr	r3, [sp, #32]
  404528:	2b00      	cmp	r3, #0
  40452a:	dd05      	ble.n	404538 <_dtoa_r+0x528>
  40452c:	4649      	mov	r1, r9
  40452e:	461a      	mov	r2, r3
  404530:	4620      	mov	r0, r4
  404532:	f001 fcdf 	bl	405ef4 <__lshift>
  404536:	4681      	mov	r9, r0
  404538:	9b06      	ldr	r3, [sp, #24]
  40453a:	2b00      	cmp	r3, #0
  40453c:	dd05      	ble.n	40454a <_dtoa_r+0x53a>
  40453e:	4641      	mov	r1, r8
  404540:	461a      	mov	r2, r3
  404542:	4620      	mov	r0, r4
  404544:	f001 fcd6 	bl	405ef4 <__lshift>
  404548:	4680      	mov	r8, r0
  40454a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
  40454c:	2b00      	cmp	r3, #0
  40454e:	f040 8086 	bne.w	40465e <_dtoa_r+0x64e>
  404552:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  404554:	2b00      	cmp	r3, #0
  404556:	f340 8266 	ble.w	404a26 <_dtoa_r+0xa16>
  40455a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
  40455c:	2b00      	cmp	r3, #0
  40455e:	f000 8098 	beq.w	404692 <_dtoa_r+0x682>
  404562:	2d00      	cmp	r5, #0
  404564:	dd05      	ble.n	404572 <_dtoa_r+0x562>
  404566:	4631      	mov	r1, r6
  404568:	462a      	mov	r2, r5
  40456a:	4620      	mov	r0, r4
  40456c:	f001 fcc2 	bl	405ef4 <__lshift>
  404570:	4606      	mov	r6, r0
  404572:	9b0c      	ldr	r3, [sp, #48]	; 0x30
  404574:	2b00      	cmp	r3, #0
  404576:	f040 8337 	bne.w	404be8 <_dtoa_r+0xbd8>
  40457a:	9606      	str	r6, [sp, #24]
  40457c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  40457e:	9a04      	ldr	r2, [sp, #16]
  404580:	f8dd b018 	ldr.w	fp, [sp, #24]
  404584:	3b01      	subs	r3, #1
  404586:	18d3      	adds	r3, r2, r3
  404588:	930b      	str	r3, [sp, #44]	; 0x2c
  40458a:	f00a 0301 	and.w	r3, sl, #1
  40458e:	930c      	str	r3, [sp, #48]	; 0x30
  404590:	4617      	mov	r7, r2
  404592:	46c2      	mov	sl, r8
  404594:	4651      	mov	r1, sl
  404596:	4648      	mov	r0, r9
  404598:	f7ff fca4 	bl	403ee4 <quorem>
  40459c:	4631      	mov	r1, r6
  40459e:	4605      	mov	r5, r0
  4045a0:	4648      	mov	r0, r9
  4045a2:	f001 fcf9 	bl	405f98 <__mcmp>
  4045a6:	465a      	mov	r2, fp
  4045a8:	900a      	str	r0, [sp, #40]	; 0x28
  4045aa:	4651      	mov	r1, sl
  4045ac:	4620      	mov	r0, r4
  4045ae:	f001 fd0f 	bl	405fd0 <__mdiff>
  4045b2:	68c2      	ldr	r2, [r0, #12]
  4045b4:	4680      	mov	r8, r0
  4045b6:	f105 0330 	add.w	r3, r5, #48	; 0x30
  4045ba:	2a00      	cmp	r2, #0
  4045bc:	f040 822b 	bne.w	404a16 <_dtoa_r+0xa06>
  4045c0:	4601      	mov	r1, r0
  4045c2:	4648      	mov	r0, r9
  4045c4:	9308      	str	r3, [sp, #32]
  4045c6:	f001 fce7 	bl	405f98 <__mcmp>
  4045ca:	4641      	mov	r1, r8
  4045cc:	9006      	str	r0, [sp, #24]
  4045ce:	4620      	mov	r0, r4
  4045d0:	f001 fb0a 	bl	405be8 <_Bfree>
  4045d4:	9a06      	ldr	r2, [sp, #24]
  4045d6:	9b08      	ldr	r3, [sp, #32]
  4045d8:	b932      	cbnz	r2, 4045e8 <_dtoa_r+0x5d8>
  4045da:	9924      	ldr	r1, [sp, #144]	; 0x90
  4045dc:	b921      	cbnz	r1, 4045e8 <_dtoa_r+0x5d8>
  4045de:	9a0c      	ldr	r2, [sp, #48]	; 0x30
  4045e0:	2a00      	cmp	r2, #0
  4045e2:	f000 83ef 	beq.w	404dc4 <_dtoa_r+0xdb4>
  4045e6:	9a24      	ldr	r2, [sp, #144]	; 0x90
  4045e8:	990a      	ldr	r1, [sp, #40]	; 0x28
  4045ea:	2900      	cmp	r1, #0
  4045ec:	f2c0 829f 	blt.w	404b2e <_dtoa_r+0xb1e>
  4045f0:	d105      	bne.n	4045fe <_dtoa_r+0x5ee>
  4045f2:	9924      	ldr	r1, [sp, #144]	; 0x90
  4045f4:	b919      	cbnz	r1, 4045fe <_dtoa_r+0x5ee>
  4045f6:	990c      	ldr	r1, [sp, #48]	; 0x30
  4045f8:	2900      	cmp	r1, #0
  4045fa:	f000 8298 	beq.w	404b2e <_dtoa_r+0xb1e>
  4045fe:	2a00      	cmp	r2, #0
  404600:	f300 8306 	bgt.w	404c10 <_dtoa_r+0xc00>
  404604:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
  404606:	703b      	strb	r3, [r7, #0]
  404608:	f107 0801 	add.w	r8, r7, #1
  40460c:	4297      	cmp	r7, r2
  40460e:	4645      	mov	r5, r8
  404610:	f000 830c 	beq.w	404c2c <_dtoa_r+0xc1c>
  404614:	4649      	mov	r1, r9
  404616:	2300      	movs	r3, #0
  404618:	220a      	movs	r2, #10
  40461a:	4620      	mov	r0, r4
  40461c:	f001 faee 	bl	405bfc <__multadd>
  404620:	455e      	cmp	r6, fp
  404622:	4681      	mov	r9, r0
  404624:	4631      	mov	r1, r6
  404626:	f04f 0300 	mov.w	r3, #0
  40462a:	f04f 020a 	mov.w	r2, #10
  40462e:	4620      	mov	r0, r4
  404630:	f000 81eb 	beq.w	404a0a <_dtoa_r+0x9fa>
  404634:	f001 fae2 	bl	405bfc <__multadd>
  404638:	4659      	mov	r1, fp
  40463a:	4606      	mov	r6, r0
  40463c:	2300      	movs	r3, #0
  40463e:	220a      	movs	r2, #10
  404640:	4620      	mov	r0, r4
  404642:	f001 fadb 	bl	405bfc <__multadd>
  404646:	4647      	mov	r7, r8
  404648:	4683      	mov	fp, r0
  40464a:	e7a3      	b.n	404594 <_dtoa_r+0x584>
  40464c:	201c      	movs	r0, #28
  40464e:	9b08      	ldr	r3, [sp, #32]
  404650:	4403      	add	r3, r0
  404652:	9308      	str	r3, [sp, #32]
  404654:	9b06      	ldr	r3, [sp, #24]
  404656:	4403      	add	r3, r0
  404658:	4405      	add	r5, r0
  40465a:	9306      	str	r3, [sp, #24]
  40465c:	e763      	b.n	404526 <_dtoa_r+0x516>
  40465e:	4641      	mov	r1, r8
  404660:	4648      	mov	r0, r9
  404662:	f001 fc99 	bl	405f98 <__mcmp>
  404666:	2800      	cmp	r0, #0
  404668:	f6bf af73 	bge.w	404552 <_dtoa_r+0x542>
  40466c:	9f02      	ldr	r7, [sp, #8]
  40466e:	4649      	mov	r1, r9
  404670:	2300      	movs	r3, #0
  404672:	220a      	movs	r2, #10
  404674:	4620      	mov	r0, r4
  404676:	3f01      	subs	r7, #1
  404678:	9702      	str	r7, [sp, #8]
  40467a:	f001 fabf 	bl	405bfc <__multadd>
  40467e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
  404680:	4681      	mov	r9, r0
  404682:	2b00      	cmp	r3, #0
  404684:	f040 83b6 	bne.w	404df4 <_dtoa_r+0xde4>
  404688:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
  40468a:	2b00      	cmp	r3, #0
  40468c:	f340 83bf 	ble.w	404e0e <_dtoa_r+0xdfe>
  404690:	930a      	str	r3, [sp, #40]	; 0x28
  404692:	f8dd b010 	ldr.w	fp, [sp, #16]
  404696:	9f0a      	ldr	r7, [sp, #40]	; 0x28
  404698:	465d      	mov	r5, fp
  40469a:	e002      	b.n	4046a2 <_dtoa_r+0x692>
  40469c:	f001 faae 	bl	405bfc <__multadd>
  4046a0:	4681      	mov	r9, r0
  4046a2:	4641      	mov	r1, r8
  4046a4:	4648      	mov	r0, r9
  4046a6:	f7ff fc1d 	bl	403ee4 <quorem>
  4046aa:	f100 0a30 	add.w	sl, r0, #48	; 0x30
  4046ae:	f805 ab01 	strb.w	sl, [r5], #1
  4046b2:	eba5 030b 	sub.w	r3, r5, fp
  4046b6:	42bb      	cmp	r3, r7
  4046b8:	f04f 020a 	mov.w	r2, #10
  4046bc:	f04f 0300 	mov.w	r3, #0
  4046c0:	4649      	mov	r1, r9
  4046c2:	4620      	mov	r0, r4
  4046c4:	dbea      	blt.n	40469c <_dtoa_r+0x68c>
  4046c6:	9b04      	ldr	r3, [sp, #16]
  4046c8:	9a0a      	ldr	r2, [sp, #40]	; 0x28
  4046ca:	2a01      	cmp	r2, #1
  4046cc:	bfac      	ite	ge
  4046ce:	189b      	addge	r3, r3, r2
  4046d0:	3301      	addlt	r3, #1
  4046d2:	461d      	mov	r5, r3
  4046d4:	f04f 0b00 	mov.w	fp, #0
  4046d8:	4649      	mov	r1, r9
  4046da:	2201      	movs	r2, #1
  4046dc:	4620      	mov	r0, r4
  4046de:	f001 fc09 	bl	405ef4 <__lshift>
  4046e2:	4641      	mov	r1, r8
  4046e4:	4681      	mov	r9, r0
  4046e6:	f001 fc57 	bl	405f98 <__mcmp>
  4046ea:	2800      	cmp	r0, #0
  4046ec:	f340 823d 	ble.w	404b6a <_dtoa_r+0xb5a>
  4046f0:	f815 2c01 	ldrb.w	r2, [r5, #-1]
  4046f4:	9904      	ldr	r1, [sp, #16]
  4046f6:	1e6b      	subs	r3, r5, #1
  4046f8:	e004      	b.n	404704 <_dtoa_r+0x6f4>
  4046fa:	428b      	cmp	r3, r1
  4046fc:	f000 81ae 	beq.w	404a5c <_dtoa_r+0xa4c>
  404700:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
  404704:	2a39      	cmp	r2, #57	; 0x39
  404706:	f103 0501 	add.w	r5, r3, #1
  40470a:	d0f6      	beq.n	4046fa <_dtoa_r+0x6ea>
  40470c:	3201      	adds	r2, #1
  40470e:	701a      	strb	r2, [r3, #0]
  404710:	4641      	mov	r1, r8
  404712:	4620      	mov	r0, r4
  404714:	f001 fa68 	bl	405be8 <_Bfree>
  404718:	2e00      	cmp	r6, #0
  40471a:	f43f ae3d 	beq.w	404398 <_dtoa_r+0x388>
  40471e:	f1bb 0f00 	cmp.w	fp, #0
  404722:	d005      	beq.n	404730 <_dtoa_r+0x720>
  404724:	45b3      	cmp	fp, r6
  404726:	d003      	beq.n	404730 <_dtoa_r+0x720>
  404728:	4659      	mov	r1, fp
  40472a:	4620      	mov	r0, r4
  40472c:	f001 fa5c 	bl	405be8 <_Bfree>
  404730:	4631      	mov	r1, r6
  404732:	4620      	mov	r0, r4
  404734:	f001 fa58 	bl	405be8 <_Bfree>
  404738:	e62e      	b.n	404398 <_dtoa_r+0x388>
  40473a:	2300      	movs	r3, #0
  40473c:	930b      	str	r3, [sp, #44]	; 0x2c
  40473e:	9b02      	ldr	r3, [sp, #8]
  404740:	9a25      	ldr	r2, [sp, #148]	; 0x94
  404742:	4413      	add	r3, r2
  404744:	930f      	str	r3, [sp, #60]	; 0x3c
  404746:	3301      	adds	r3, #1
  404748:	2b01      	cmp	r3, #1
  40474a:	461f      	mov	r7, r3
  40474c:	461e      	mov	r6, r3
  40474e:	930a      	str	r3, [sp, #40]	; 0x28
  404750:	bfb8      	it	lt
  404752:	2701      	movlt	r7, #1
  404754:	2100      	movs	r1, #0
  404756:	2f17      	cmp	r7, #23
  404758:	6461      	str	r1, [r4, #68]	; 0x44
  40475a:	d90a      	bls.n	404772 <_dtoa_r+0x762>
  40475c:	2201      	movs	r2, #1
  40475e:	2304      	movs	r3, #4
  404760:	005b      	lsls	r3, r3, #1
  404762:	f103 0014 	add.w	r0, r3, #20
  404766:	4287      	cmp	r7, r0
  404768:	4611      	mov	r1, r2
  40476a:	f102 0201 	add.w	r2, r2, #1
  40476e:	d2f7      	bcs.n	404760 <_dtoa_r+0x750>
  404770:	6461      	str	r1, [r4, #68]	; 0x44
  404772:	4620      	mov	r0, r4
  404774:	f001 fa12 	bl	405b9c <_Balloc>
  404778:	2e0e      	cmp	r6, #14
  40477a:	9004      	str	r0, [sp, #16]
  40477c:	6420      	str	r0, [r4, #64]	; 0x40
  40477e:	f63f ad41 	bhi.w	404204 <_dtoa_r+0x1f4>
  404782:	2d00      	cmp	r5, #0
  404784:	f43f ad3e 	beq.w	404204 <_dtoa_r+0x1f4>
  404788:	9902      	ldr	r1, [sp, #8]
  40478a:	2900      	cmp	r1, #0
  40478c:	e9cd ab10 	strd	sl, fp, [sp, #64]	; 0x40
  404790:	f340 8202 	ble.w	404b98 <_dtoa_r+0xb88>
  404794:	4bb8      	ldr	r3, [pc, #736]	; (404a78 <_dtoa_r+0xa68>)
  404796:	f001 020f 	and.w	r2, r1, #15
  40479a:	110d      	asrs	r5, r1, #4
  40479c:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
  4047a0:	06e9      	lsls	r1, r5, #27
  4047a2:	e9d3 6700 	ldrd	r6, r7, [r3]
  4047a6:	f140 81ae 	bpl.w	404b06 <_dtoa_r+0xaf6>
  4047aa:	4bb4      	ldr	r3, [pc, #720]	; (404a7c <_dtoa_r+0xa6c>)
  4047ac:	4650      	mov	r0, sl
  4047ae:	4659      	mov	r1, fp
  4047b0:	e9d3 2308 	ldrd	r2, r3, [r3, #32]
  4047b4:	f7fd ff06 	bl	4025c4 <__aeabi_ddiv>
  4047b8:	e9cd 0112 	strd	r0, r1, [sp, #72]	; 0x48
  4047bc:	f005 050f 	and.w	r5, r5, #15
  4047c0:	f04f 0a03 	mov.w	sl, #3
  4047c4:	b18d      	cbz	r5, 4047ea <_dtoa_r+0x7da>
  4047c6:	f8df 82b4 	ldr.w	r8, [pc, #692]	; 404a7c <_dtoa_r+0xa6c>
  4047ca:	07ea      	lsls	r2, r5, #31
  4047cc:	d509      	bpl.n	4047e2 <_dtoa_r+0x7d2>
  4047ce:	4630      	mov	r0, r6
  4047d0:	4639      	mov	r1, r7
  4047d2:	e9d8 2300 	ldrd	r2, r3, [r8]
  4047d6:	f7fd fdcb 	bl	402370 <__aeabi_dmul>
  4047da:	f10a 0a01 	add.w	sl, sl, #1
  4047de:	4606      	mov	r6, r0
  4047e0:	460f      	mov	r7, r1
  4047e2:	106d      	asrs	r5, r5, #1
  4047e4:	f108 0808 	add.w	r8, r8, #8
  4047e8:	d1ef      	bne.n	4047ca <_dtoa_r+0x7ba>
  4047ea:	463b      	mov	r3, r7
  4047ec:	4632      	mov	r2, r6
  4047ee:	e9dd 0112 	ldrd	r0, r1, [sp, #72]	; 0x48
  4047f2:	f7fd fee7 	bl	4025c4 <__aeabi_ddiv>
  4047f6:	4607      	mov	r7, r0
  4047f8:	4688      	mov	r8, r1
  4047fa:	9b0e      	ldr	r3, [sp, #56]	; 0x38
  4047fc:	b143      	cbz	r3, 404810 <_dtoa_r+0x800>
  4047fe:	2200      	movs	r2, #0
  404800:	4b9f      	ldr	r3, [pc, #636]	; (404a80 <_dtoa_r+0xa70>)
  404802:	4638      	mov	r0, r7
  404804:	4641      	mov	r1, r8
  404806:	f002 f9bf 	bl	406b88 <__aeabi_dcmplt>
  40480a:	2800      	cmp	r0, #0
  40480c:	f040 8286 	bne.w	404d1c <_dtoa_r+0xd0c>
  404810:	4650      	mov	r0, sl
  404812:	f7fd fd47 	bl	4022a4 <__aeabi_i2d>
  404816:	463a      	mov	r2, r7
  404818:	4643      	mov	r3, r8
  40481a:	f7fd fda9 	bl	402370 <__aeabi_dmul>
  40481e:	4b99      	ldr	r3, [pc, #612]	; (404a84 <_dtoa_r+0xa74>)
  404820:	2200      	movs	r2, #0
  404822:	f7fd fbf3 	bl	40200c <__adddf3>
  404826:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  404828:	4605      	mov	r5, r0
  40482a:	f1a1 7650 	sub.w	r6, r1, #54525952	; 0x3400000
  40482e:	2b00      	cmp	r3, #0
  404830:	f000 813e 	beq.w	404ab0 <_dtoa_r+0xaa0>
  404834:	9b02      	ldr	r3, [sp, #8]
  404836:	9315      	str	r3, [sp, #84]	; 0x54
  404838:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  40483a:	9312      	str	r3, [sp, #72]	; 0x48
  40483c:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
  40483e:	2b00      	cmp	r3, #0
  404840:	f000 81fa 	beq.w	404c38 <_dtoa_r+0xc28>
  404844:	9a12      	ldr	r2, [sp, #72]	; 0x48
  404846:	4b8c      	ldr	r3, [pc, #560]	; (404a78 <_dtoa_r+0xa68>)
  404848:	498f      	ldr	r1, [pc, #572]	; (404a88 <_dtoa_r+0xa78>)
  40484a:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
  40484e:	e953 2302 	ldrd	r2, r3, [r3, #-8]
  404852:	2000      	movs	r0, #0
  404854:	f7fd feb6 	bl	4025c4 <__aeabi_ddiv>
  404858:	462a      	mov	r2, r5
  40485a:	4633      	mov	r3, r6
  40485c:	f7fd fbd4 	bl	402008 <__aeabi_dsub>
  404860:	4682      	mov	sl, r0
  404862:	468b      	mov	fp, r1
  404864:	4638      	mov	r0, r7
  404866:	4641      	mov	r1, r8
  404868:	f7fd ff94 	bl	402794 <__aeabi_d2iz>
  40486c:	4605      	mov	r5, r0
  40486e:	f7fd fd19 	bl	4022a4 <__aeabi_i2d>
  404872:	4602      	mov	r2, r0
  404874:	460b      	mov	r3, r1
  404876:	4638      	mov	r0, r7
  404878:	4641      	mov	r1, r8
  40487a:	f7fd fbc5 	bl	402008 <__aeabi_dsub>
  40487e:	3530      	adds	r5, #48	; 0x30
  404880:	fa5f f885 	uxtb.w	r8, r5
  404884:	9d04      	ldr	r5, [sp, #16]
  404886:	4606      	mov	r6, r0
  404888:	460f      	mov	r7, r1
  40488a:	f885 8000 	strb.w	r8, [r5]
  40488e:	4602      	mov	r2, r0
  404890:	460b      	mov	r3, r1
  404892:	4650      	mov	r0, sl
  404894:	4659      	mov	r1, fp
  404896:	3501      	adds	r5, #1
  404898:	f002 f994 	bl	406bc4 <__aeabi_dcmpgt>
  40489c:	2800      	cmp	r0, #0
  40489e:	d154      	bne.n	40494a <_dtoa_r+0x93a>
  4048a0:	4632      	mov	r2, r6
  4048a2:	463b      	mov	r3, r7
  4048a4:	2000      	movs	r0, #0
  4048a6:	4976      	ldr	r1, [pc, #472]	; (404a80 <_dtoa_r+0xa70>)
  4048a8:	f7fd fbae 	bl	402008 <__aeabi_dsub>
  4048ac:	4602      	mov	r2, r0
  4048ae:	460b      	mov	r3, r1
  4048b0:	4650      	mov	r0, sl
  4048b2:	4659      	mov	r1, fp
  4048b4:	f002 f986 	bl	406bc4 <__aeabi_dcmpgt>
  4048b8:	2800      	cmp	r0, #0
  4048ba:	f040 8270 	bne.w	404d9e <_dtoa_r+0xd8e>
  4048be:	9a12      	ldr	r2, [sp, #72]	; 0x48
  4048c0:	2a01      	cmp	r2, #1
  4048c2:	f000 8111 	beq.w	404ae8 <_dtoa_r+0xad8>
  4048c6:	9b12      	ldr	r3, [sp, #72]	; 0x48
  4048c8:	9a04      	ldr	r2, [sp, #16]
  4048ca:	f8cd 9048 	str.w	r9, [sp, #72]	; 0x48
  4048ce:	4413      	add	r3, r2
  4048d0:	4699      	mov	r9, r3
  4048d2:	e00d      	b.n	4048f0 <_dtoa_r+0x8e0>
  4048d4:	2000      	movs	r0, #0
  4048d6:	496a      	ldr	r1, [pc, #424]	; (404a80 <_dtoa_r+0xa70>)
  4048d8:	f7fd fb96 	bl	402008 <__aeabi_dsub>
  4048dc:	4652      	mov	r2, sl
  4048de:	465b      	mov	r3, fp
  4048e0:	f002 f952 	bl	406b88 <__aeabi_dcmplt>
  4048e4:	2800      	cmp	r0, #0
  4048e6:	f040 8258 	bne.w	404d9a <_dtoa_r+0xd8a>
  4048ea:	454d      	cmp	r5, r9
  4048ec:	f000 80fa 	beq.w	404ae4 <_dtoa_r+0xad4>
  4048f0:	4650      	mov	r0, sl
  4048f2:	4659      	mov	r1, fp
  4048f4:	2200      	movs	r2, #0
  4048f6:	4b65      	ldr	r3, [pc, #404]	; (404a8c <_dtoa_r+0xa7c>)
  4048f8:	f7fd fd3a 	bl	402370 <__aeabi_dmul>
  4048fc:	2200      	movs	r2, #0
  4048fe:	4b63      	ldr	r3, [pc, #396]	; (404a8c <_dtoa_r+0xa7c>)
  404900:	4682      	mov	sl, r0
  404902:	468b      	mov	fp, r1
  404904:	4630      	mov	r0, r6
  404906:	4639      	mov	r1, r7
  404908:	f7fd fd32 	bl	402370 <__aeabi_dmul>
  40490c:	460f      	mov	r7, r1
  40490e:	4606      	mov	r6, r0
  404910:	f7fd ff40 	bl	402794 <__aeabi_d2iz>
  404914:	4680      	mov	r8, r0
  404916:	f7fd fcc5 	bl	4022a4 <__aeabi_i2d>
  40491a:	4602      	mov	r2, r0
  40491c:	460b      	mov	r3, r1
  40491e:	4630      	mov	r0, r6
  404920:	4639      	mov	r1, r7
  404922:	f7fd fb71 	bl	402008 <__aeabi_dsub>
  404926:	f108 0830 	add.w	r8, r8, #48	; 0x30
  40492a:	fa5f f888 	uxtb.w	r8, r8
  40492e:	4652      	mov	r2, sl
  404930:	465b      	mov	r3, fp
  404932:	f805 8b01 	strb.w	r8, [r5], #1
  404936:	4606      	mov	r6, r0
  404938:	460f      	mov	r7, r1
  40493a:	f002 f925 	bl	406b88 <__aeabi_dcmplt>
  40493e:	4632      	mov	r2, r6
  404940:	463b      	mov	r3, r7
  404942:	2800      	cmp	r0, #0
  404944:	d0c6      	beq.n	4048d4 <_dtoa_r+0x8c4>
  404946:	f8dd 9048 	ldr.w	r9, [sp, #72]	; 0x48
  40494a:	9b15      	ldr	r3, [sp, #84]	; 0x54
  40494c:	9302      	str	r3, [sp, #8]
  40494e:	e523      	b.n	404398 <_dtoa_r+0x388>
  404950:	2300      	movs	r3, #0
  404952:	930b      	str	r3, [sp, #44]	; 0x2c
  404954:	9b25      	ldr	r3, [sp, #148]	; 0x94
  404956:	2b00      	cmp	r3, #0
  404958:	f340 80dc 	ble.w	404b14 <_dtoa_r+0xb04>
  40495c:	461f      	mov	r7, r3
  40495e:	461e      	mov	r6, r3
  404960:	930f      	str	r3, [sp, #60]	; 0x3c
  404962:	930a      	str	r3, [sp, #40]	; 0x28
  404964:	e6f6      	b.n	404754 <_dtoa_r+0x744>
  404966:	2301      	movs	r3, #1
  404968:	930b      	str	r3, [sp, #44]	; 0x2c
  40496a:	e7f3      	b.n	404954 <_dtoa_r+0x944>
  40496c:	f1ba 0f00 	cmp.w	sl, #0
  404970:	f47f ada8 	bne.w	4044c4 <_dtoa_r+0x4b4>
  404974:	f3cb 0313 	ubfx	r3, fp, #0, #20
  404978:	2b00      	cmp	r3, #0
  40497a:	f47f adba 	bne.w	4044f2 <_dtoa_r+0x4e2>
  40497e:	f02b 4700 	bic.w	r7, fp, #2147483648	; 0x80000000
  404982:	0d3f      	lsrs	r7, r7, #20
  404984:	053f      	lsls	r7, r7, #20
  404986:	2f00      	cmp	r7, #0
  404988:	f000 820d 	beq.w	404da6 <_dtoa_r+0xd96>
  40498c:	9b08      	ldr	r3, [sp, #32]
  40498e:	3301      	adds	r3, #1
  404990:	9308      	str	r3, [sp, #32]
  404992:	9b06      	ldr	r3, [sp, #24]
  404994:	3301      	adds	r3, #1
  404996:	9306      	str	r3, [sp, #24]
  404998:	2301      	movs	r3, #1
  40499a:	930c      	str	r3, [sp, #48]	; 0x30
  40499c:	e5ab      	b.n	4044f6 <_dtoa_r+0x4e6>
  40499e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  4049a0:	2b00      	cmp	r3, #0
  4049a2:	f73f ac42 	bgt.w	40422a <_dtoa_r+0x21a>
  4049a6:	f040 8221 	bne.w	404dec <_dtoa_r+0xddc>
  4049aa:	2200      	movs	r2, #0
  4049ac:	4b38      	ldr	r3, [pc, #224]	; (404a90 <_dtoa_r+0xa80>)
  4049ae:	e9dd 0108 	ldrd	r0, r1, [sp, #32]
  4049b2:	f7fd fcdd 	bl	402370 <__aeabi_dmul>
  4049b6:	4652      	mov	r2, sl
  4049b8:	465b      	mov	r3, fp
  4049ba:	f002 f8f9 	bl	406bb0 <__aeabi_dcmpge>
  4049be:	f8dd 8028 	ldr.w	r8, [sp, #40]	; 0x28
  4049c2:	4646      	mov	r6, r8
  4049c4:	2800      	cmp	r0, #0
  4049c6:	d041      	beq.n	404a4c <_dtoa_r+0xa3c>
  4049c8:	9b25      	ldr	r3, [sp, #148]	; 0x94
  4049ca:	9d04      	ldr	r5, [sp, #16]
  4049cc:	43db      	mvns	r3, r3
  4049ce:	9302      	str	r3, [sp, #8]
  4049d0:	4641      	mov	r1, r8
  4049d2:	4620      	mov	r0, r4
  4049d4:	f001 f908 	bl	405be8 <_Bfree>
  4049d8:	2e00      	cmp	r6, #0
  4049da:	f43f acdd 	beq.w	404398 <_dtoa_r+0x388>
  4049de:	e6a7      	b.n	404730 <_dtoa_r+0x720>
  4049e0:	9a0c      	ldr	r2, [sp, #48]	; 0x30
  4049e2:	4649      	mov	r1, r9
  4049e4:	4620      	mov	r0, r4
  4049e6:	f001 fa35 	bl	405e54 <__pow5mult>
  4049ea:	4681      	mov	r9, r0
  4049ec:	e558      	b.n	4044a0 <_dtoa_r+0x490>
  4049ee:	9a14      	ldr	r2, [sp, #80]	; 0x50
  4049f0:	2a00      	cmp	r2, #0
  4049f2:	f000 8187 	beq.w	404d04 <_dtoa_r+0xcf4>
  4049f6:	f203 4333 	addw	r3, r3, #1075	; 0x433
  4049fa:	9f0c      	ldr	r7, [sp, #48]	; 0x30
  4049fc:	9d08      	ldr	r5, [sp, #32]
  4049fe:	e4f2      	b.n	4043e6 <_dtoa_r+0x3d6>
  404a00:	f1ba 0f00 	cmp.w	sl, #0
  404a04:	f47f ad75 	bne.w	4044f2 <_dtoa_r+0x4e2>
  404a08:	e7b4      	b.n	404974 <_dtoa_r+0x964>
  404a0a:	f001 f8f7 	bl	405bfc <__multadd>
  404a0e:	4647      	mov	r7, r8
  404a10:	4606      	mov	r6, r0
  404a12:	4683      	mov	fp, r0
  404a14:	e5be      	b.n	404594 <_dtoa_r+0x584>
  404a16:	4601      	mov	r1, r0
  404a18:	4620      	mov	r0, r4
  404a1a:	9306      	str	r3, [sp, #24]
  404a1c:	f001 f8e4 	bl	405be8 <_Bfree>
  404a20:	2201      	movs	r2, #1
  404a22:	9b06      	ldr	r3, [sp, #24]
  404a24:	e5e0      	b.n	4045e8 <_dtoa_r+0x5d8>
  404a26:	9b24      	ldr	r3, [sp, #144]	; 0x90
  404a28:	2b02      	cmp	r3, #2
  404a2a:	f77f ad96 	ble.w	40455a <_dtoa_r+0x54a>
  404a2e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  404a30:	2b00      	cmp	r3, #0
  404a32:	d1c9      	bne.n	4049c8 <_dtoa_r+0x9b8>
  404a34:	4641      	mov	r1, r8
  404a36:	2205      	movs	r2, #5
  404a38:	4620      	mov	r0, r4
  404a3a:	f001 f8df 	bl	405bfc <__multadd>
  404a3e:	4601      	mov	r1, r0
  404a40:	4680      	mov	r8, r0
  404a42:	4648      	mov	r0, r9
  404a44:	f001 faa8 	bl	405f98 <__mcmp>
  404a48:	2800      	cmp	r0, #0
  404a4a:	ddbd      	ble.n	4049c8 <_dtoa_r+0x9b8>
  404a4c:	9a02      	ldr	r2, [sp, #8]
  404a4e:	9904      	ldr	r1, [sp, #16]
  404a50:	2331      	movs	r3, #49	; 0x31
  404a52:	3201      	adds	r2, #1
  404a54:	9202      	str	r2, [sp, #8]
  404a56:	700b      	strb	r3, [r1, #0]
  404a58:	1c4d      	adds	r5, r1, #1
  404a5a:	e7b9      	b.n	4049d0 <_dtoa_r+0x9c0>
  404a5c:	9a02      	ldr	r2, [sp, #8]
  404a5e:	3201      	adds	r2, #1
  404a60:	9202      	str	r2, [sp, #8]
  404a62:	9a04      	ldr	r2, [sp, #16]
  404a64:	2331      	movs	r3, #49	; 0x31
  404a66:	7013      	strb	r3, [r2, #0]
  404a68:	e652      	b.n	404710 <_dtoa_r+0x700>
  404a6a:	2301      	movs	r3, #1
  404a6c:	930b      	str	r3, [sp, #44]	; 0x2c
  404a6e:	e666      	b.n	40473e <_dtoa_r+0x72e>
  404a70:	f8dd 902c 	ldr.w	r9, [sp, #44]	; 0x2c
  404a74:	9c0c      	ldr	r4, [sp, #48]	; 0x30
  404a76:	e48f      	b.n	404398 <_dtoa_r+0x388>
  404a78:	004077c0 	.word	0x004077c0
  404a7c:	00407798 	.word	0x00407798
  404a80:	3ff00000 	.word	0x3ff00000
  404a84:	401c0000 	.word	0x401c0000
  404a88:	3fe00000 	.word	0x3fe00000
  404a8c:	40240000 	.word	0x40240000
  404a90:	40140000 	.word	0x40140000
  404a94:	4650      	mov	r0, sl
  404a96:	f7fd fc05 	bl	4022a4 <__aeabi_i2d>
  404a9a:	463a      	mov	r2, r7
  404a9c:	4643      	mov	r3, r8
  404a9e:	f7fd fc67 	bl	402370 <__aeabi_dmul>
  404aa2:	2200      	movs	r2, #0
  404aa4:	4bc1      	ldr	r3, [pc, #772]	; (404dac <_dtoa_r+0xd9c>)
  404aa6:	f7fd fab1 	bl	40200c <__adddf3>
  404aaa:	4605      	mov	r5, r0
  404aac:	f1a1 7650 	sub.w	r6, r1, #54525952	; 0x3400000
  404ab0:	4641      	mov	r1, r8
  404ab2:	2200      	movs	r2, #0
  404ab4:	4bbe      	ldr	r3, [pc, #760]	; (404db0 <_dtoa_r+0xda0>)
  404ab6:	4638      	mov	r0, r7
  404ab8:	f7fd faa6 	bl	402008 <__aeabi_dsub>
  404abc:	462a      	mov	r2, r5
  404abe:	4633      	mov	r3, r6
  404ac0:	4682      	mov	sl, r0
  404ac2:	468b      	mov	fp, r1
  404ac4:	f002 f87e 	bl	406bc4 <__aeabi_dcmpgt>
  404ac8:	4680      	mov	r8, r0
  404aca:	2800      	cmp	r0, #0
  404acc:	f040 8110 	bne.w	404cf0 <_dtoa_r+0xce0>
  404ad0:	462a      	mov	r2, r5
  404ad2:	f106 4300 	add.w	r3, r6, #2147483648	; 0x80000000
  404ad6:	4650      	mov	r0, sl
  404ad8:	4659      	mov	r1, fp
  404ada:	f002 f855 	bl	406b88 <__aeabi_dcmplt>
  404ade:	b118      	cbz	r0, 404ae8 <_dtoa_r+0xad8>
  404ae0:	4646      	mov	r6, r8
  404ae2:	e771      	b.n	4049c8 <_dtoa_r+0x9b8>
  404ae4:	f8dd 9048 	ldr.w	r9, [sp, #72]	; 0x48
  404ae8:	e9dd ab10 	ldrd	sl, fp, [sp, #64]	; 0x40
  404aec:	f7ff bb8a 	b.w	404204 <_dtoa_r+0x1f4>
  404af0:	9804      	ldr	r0, [sp, #16]
  404af2:	f7ff babb 	b.w	40406c <_dtoa_r+0x5c>
  404af6:	9b0c      	ldr	r3, [sp, #48]	; 0x30
  404af8:	9a0d      	ldr	r2, [sp, #52]	; 0x34
  404afa:	970c      	str	r7, [sp, #48]	; 0x30
  404afc:	1afb      	subs	r3, r7, r3
  404afe:	441a      	add	r2, r3
  404b00:	920d      	str	r2, [sp, #52]	; 0x34
  404b02:	2700      	movs	r7, #0
  404b04:	e469      	b.n	4043da <_dtoa_r+0x3ca>
  404b06:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	; 0x40
  404b0a:	f04f 0a02 	mov.w	sl, #2
  404b0e:	e9cd 2312 	strd	r2, r3, [sp, #72]	; 0x48
  404b12:	e657      	b.n	4047c4 <_dtoa_r+0x7b4>
  404b14:	2100      	movs	r1, #0
  404b16:	2301      	movs	r3, #1
  404b18:	6461      	str	r1, [r4, #68]	; 0x44
  404b1a:	4620      	mov	r0, r4
  404b1c:	9325      	str	r3, [sp, #148]	; 0x94
  404b1e:	f001 f83d 	bl	405b9c <_Balloc>
  404b22:	9b25      	ldr	r3, [sp, #148]	; 0x94
  404b24:	9004      	str	r0, [sp, #16]
  404b26:	6420      	str	r0, [r4, #64]	; 0x40
  404b28:	930a      	str	r3, [sp, #40]	; 0x28
  404b2a:	930f      	str	r3, [sp, #60]	; 0x3c
  404b2c:	e629      	b.n	404782 <_dtoa_r+0x772>
  404b2e:	2a00      	cmp	r2, #0
  404b30:	46d0      	mov	r8, sl
  404b32:	f8cd b018 	str.w	fp, [sp, #24]
  404b36:	469a      	mov	sl, r3
  404b38:	dd11      	ble.n	404b5e <_dtoa_r+0xb4e>
  404b3a:	4649      	mov	r1, r9
  404b3c:	2201      	movs	r2, #1
  404b3e:	4620      	mov	r0, r4
  404b40:	f001 f9d8 	bl	405ef4 <__lshift>
  404b44:	4641      	mov	r1, r8
  404b46:	4681      	mov	r9, r0
  404b48:	f001 fa26 	bl	405f98 <__mcmp>
  404b4c:	2800      	cmp	r0, #0
  404b4e:	f340 8146 	ble.w	404dde <_dtoa_r+0xdce>
  404b52:	f1ba 0f39 	cmp.w	sl, #57	; 0x39
  404b56:	f000 8106 	beq.w	404d66 <_dtoa_r+0xd56>
  404b5a:	f105 0a31 	add.w	sl, r5, #49	; 0x31
  404b5e:	46b3      	mov	fp, r6
  404b60:	f887 a000 	strb.w	sl, [r7]
  404b64:	1c7d      	adds	r5, r7, #1
  404b66:	9e06      	ldr	r6, [sp, #24]
  404b68:	e5d2      	b.n	404710 <_dtoa_r+0x700>
  404b6a:	d104      	bne.n	404b76 <_dtoa_r+0xb66>
  404b6c:	f01a 0f01 	tst.w	sl, #1
  404b70:	d001      	beq.n	404b76 <_dtoa_r+0xb66>
  404b72:	e5bd      	b.n	4046f0 <_dtoa_r+0x6e0>
  404b74:	4615      	mov	r5, r2
  404b76:	f815 3c01 	ldrb.w	r3, [r5, #-1]
  404b7a:	2b30      	cmp	r3, #48	; 0x30
  404b7c:	f105 32ff 	add.w	r2, r5, #4294967295
  404b80:	d0f8      	beq.n	404b74 <_dtoa_r+0xb64>
  404b82:	e5c5      	b.n	404710 <_dtoa_r+0x700>
  404b84:	9904      	ldr	r1, [sp, #16]
  404b86:	2230      	movs	r2, #48	; 0x30
  404b88:	700a      	strb	r2, [r1, #0]
  404b8a:	9a02      	ldr	r2, [sp, #8]
  404b8c:	f815 8c01 	ldrb.w	r8, [r5, #-1]
  404b90:	3201      	adds	r2, #1
  404b92:	9202      	str	r2, [sp, #8]
  404b94:	f7ff bbfc 	b.w	404390 <_dtoa_r+0x380>
  404b98:	f000 80bb 	beq.w	404d12 <_dtoa_r+0xd02>
  404b9c:	9b02      	ldr	r3, [sp, #8]
  404b9e:	425d      	negs	r5, r3
  404ba0:	4b84      	ldr	r3, [pc, #528]	; (404db4 <_dtoa_r+0xda4>)
  404ba2:	f005 020f 	and.w	r2, r5, #15
  404ba6:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
  404baa:	e9d3 2300 	ldrd	r2, r3, [r3]
  404bae:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	; 0x40
  404bb2:	f7fd fbdd 	bl	402370 <__aeabi_dmul>
  404bb6:	112d      	asrs	r5, r5, #4
  404bb8:	4607      	mov	r7, r0
  404bba:	4688      	mov	r8, r1
  404bbc:	f000 812c 	beq.w	404e18 <_dtoa_r+0xe08>
  404bc0:	4e7d      	ldr	r6, [pc, #500]	; (404db8 <_dtoa_r+0xda8>)
  404bc2:	f04f 0a02 	mov.w	sl, #2
  404bc6:	07eb      	lsls	r3, r5, #31
  404bc8:	d509      	bpl.n	404bde <_dtoa_r+0xbce>
  404bca:	4638      	mov	r0, r7
  404bcc:	4641      	mov	r1, r8
  404bce:	e9d6 2300 	ldrd	r2, r3, [r6]
  404bd2:	f7fd fbcd 	bl	402370 <__aeabi_dmul>
  404bd6:	f10a 0a01 	add.w	sl, sl, #1
  404bda:	4607      	mov	r7, r0
  404bdc:	4688      	mov	r8, r1
  404bde:	106d      	asrs	r5, r5, #1
  404be0:	f106 0608 	add.w	r6, r6, #8
  404be4:	d1ef      	bne.n	404bc6 <_dtoa_r+0xbb6>
  404be6:	e608      	b.n	4047fa <_dtoa_r+0x7ea>
  404be8:	6871      	ldr	r1, [r6, #4]
  404bea:	4620      	mov	r0, r4
  404bec:	f000 ffd6 	bl	405b9c <_Balloc>
  404bf0:	6933      	ldr	r3, [r6, #16]
  404bf2:	3302      	adds	r3, #2
  404bf4:	009a      	lsls	r2, r3, #2
  404bf6:	4605      	mov	r5, r0
  404bf8:	f106 010c 	add.w	r1, r6, #12
  404bfc:	300c      	adds	r0, #12
  404bfe:	f000 ff2f 	bl	405a60 <memcpy>
  404c02:	4629      	mov	r1, r5
  404c04:	2201      	movs	r2, #1
  404c06:	4620      	mov	r0, r4
  404c08:	f001 f974 	bl	405ef4 <__lshift>
  404c0c:	9006      	str	r0, [sp, #24]
  404c0e:	e4b5      	b.n	40457c <_dtoa_r+0x56c>
  404c10:	2b39      	cmp	r3, #57	; 0x39
  404c12:	f8cd b018 	str.w	fp, [sp, #24]
  404c16:	46d0      	mov	r8, sl
  404c18:	f000 80a5 	beq.w	404d66 <_dtoa_r+0xd56>
  404c1c:	f103 0a01 	add.w	sl, r3, #1
  404c20:	46b3      	mov	fp, r6
  404c22:	f887 a000 	strb.w	sl, [r7]
  404c26:	1c7d      	adds	r5, r7, #1
  404c28:	9e06      	ldr	r6, [sp, #24]
  404c2a:	e571      	b.n	404710 <_dtoa_r+0x700>
  404c2c:	465a      	mov	r2, fp
  404c2e:	46d0      	mov	r8, sl
  404c30:	46b3      	mov	fp, r6
  404c32:	469a      	mov	sl, r3
  404c34:	4616      	mov	r6, r2
  404c36:	e54f      	b.n	4046d8 <_dtoa_r+0x6c8>
  404c38:	9b12      	ldr	r3, [sp, #72]	; 0x48
  404c3a:	495e      	ldr	r1, [pc, #376]	; (404db4 <_dtoa_r+0xda4>)
  404c3c:	eb01 01c3 	add.w	r1, r1, r3, lsl #3
  404c40:	462a      	mov	r2, r5
  404c42:	4633      	mov	r3, r6
  404c44:	e951 0102 	ldrd	r0, r1, [r1, #-8]
  404c48:	f7fd fb92 	bl	402370 <__aeabi_dmul>
  404c4c:	e9cd 0116 	strd	r0, r1, [sp, #88]	; 0x58
  404c50:	4638      	mov	r0, r7
  404c52:	4641      	mov	r1, r8
  404c54:	f7fd fd9e 	bl	402794 <__aeabi_d2iz>
  404c58:	4605      	mov	r5, r0
  404c5a:	f7fd fb23 	bl	4022a4 <__aeabi_i2d>
  404c5e:	460b      	mov	r3, r1
  404c60:	4602      	mov	r2, r0
  404c62:	4641      	mov	r1, r8
  404c64:	4638      	mov	r0, r7
  404c66:	f7fd f9cf 	bl	402008 <__aeabi_dsub>
  404c6a:	9b12      	ldr	r3, [sp, #72]	; 0x48
  404c6c:	460f      	mov	r7, r1
  404c6e:	9904      	ldr	r1, [sp, #16]
  404c70:	3530      	adds	r5, #48	; 0x30
  404c72:	2b01      	cmp	r3, #1
  404c74:	700d      	strb	r5, [r1, #0]
  404c76:	4606      	mov	r6, r0
  404c78:	f101 0501 	add.w	r5, r1, #1
  404c7c:	d026      	beq.n	404ccc <_dtoa_r+0xcbc>
  404c7e:	9b12      	ldr	r3, [sp, #72]	; 0x48
  404c80:	9a04      	ldr	r2, [sp, #16]
  404c82:	f8df b13c 	ldr.w	fp, [pc, #316]	; 404dc0 <_dtoa_r+0xdb0>
  404c86:	f8cd 9048 	str.w	r9, [sp, #72]	; 0x48
  404c8a:	4413      	add	r3, r2
  404c8c:	f04f 0a00 	mov.w	sl, #0
  404c90:	4699      	mov	r9, r3
  404c92:	4652      	mov	r2, sl
  404c94:	465b      	mov	r3, fp
  404c96:	4630      	mov	r0, r6
  404c98:	4639      	mov	r1, r7
  404c9a:	f7fd fb69 	bl	402370 <__aeabi_dmul>
  404c9e:	460f      	mov	r7, r1
  404ca0:	4606      	mov	r6, r0
  404ca2:	f7fd fd77 	bl	402794 <__aeabi_d2iz>
  404ca6:	4680      	mov	r8, r0
  404ca8:	f7fd fafc 	bl	4022a4 <__aeabi_i2d>
  404cac:	f108 0830 	add.w	r8, r8, #48	; 0x30
  404cb0:	4602      	mov	r2, r0
  404cb2:	460b      	mov	r3, r1
  404cb4:	4630      	mov	r0, r6
  404cb6:	4639      	mov	r1, r7
  404cb8:	f7fd f9a6 	bl	402008 <__aeabi_dsub>
  404cbc:	f805 8b01 	strb.w	r8, [r5], #1
  404cc0:	454d      	cmp	r5, r9
  404cc2:	4606      	mov	r6, r0
  404cc4:	460f      	mov	r7, r1
  404cc6:	d1e4      	bne.n	404c92 <_dtoa_r+0xc82>
  404cc8:	f8dd 9048 	ldr.w	r9, [sp, #72]	; 0x48
  404ccc:	4b3b      	ldr	r3, [pc, #236]	; (404dbc <_dtoa_r+0xdac>)
  404cce:	2200      	movs	r2, #0
  404cd0:	e9dd 0116 	ldrd	r0, r1, [sp, #88]	; 0x58
  404cd4:	f7fd f99a 	bl	40200c <__adddf3>
  404cd8:	4632      	mov	r2, r6
  404cda:	463b      	mov	r3, r7
  404cdc:	f001 ff54 	bl	406b88 <__aeabi_dcmplt>
  404ce0:	2800      	cmp	r0, #0
  404ce2:	d046      	beq.n	404d72 <_dtoa_r+0xd62>
  404ce4:	9b15      	ldr	r3, [sp, #84]	; 0x54
  404ce6:	9302      	str	r3, [sp, #8]
  404ce8:	f815 8c01 	ldrb.w	r8, [r5, #-1]
  404cec:	f7ff bb43 	b.w	404376 <_dtoa_r+0x366>
  404cf0:	f04f 0800 	mov.w	r8, #0
  404cf4:	4646      	mov	r6, r8
  404cf6:	e6a9      	b.n	404a4c <_dtoa_r+0xa3c>
  404cf8:	9b08      	ldr	r3, [sp, #32]
  404cfa:	9a0a      	ldr	r2, [sp, #40]	; 0x28
  404cfc:	1a9d      	subs	r5, r3, r2
  404cfe:	2300      	movs	r3, #0
  404d00:	f7ff bb71 	b.w	4043e6 <_dtoa_r+0x3d6>
  404d04:	9b18      	ldr	r3, [sp, #96]	; 0x60
  404d06:	9f0c      	ldr	r7, [sp, #48]	; 0x30
  404d08:	9d08      	ldr	r5, [sp, #32]
  404d0a:	f1c3 0336 	rsb	r3, r3, #54	; 0x36
  404d0e:	f7ff bb6a 	b.w	4043e6 <_dtoa_r+0x3d6>
  404d12:	e9dd 7810 	ldrd	r7, r8, [sp, #64]	; 0x40
  404d16:	f04f 0a02 	mov.w	sl, #2
  404d1a:	e56e      	b.n	4047fa <_dtoa_r+0x7ea>
  404d1c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  404d1e:	2b00      	cmp	r3, #0
  404d20:	f43f aeb8 	beq.w	404a94 <_dtoa_r+0xa84>
  404d24:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
  404d26:	2b00      	cmp	r3, #0
  404d28:	f77f aede 	ble.w	404ae8 <_dtoa_r+0xad8>
  404d2c:	2200      	movs	r2, #0
  404d2e:	4b24      	ldr	r3, [pc, #144]	; (404dc0 <_dtoa_r+0xdb0>)
  404d30:	4638      	mov	r0, r7
  404d32:	4641      	mov	r1, r8
  404d34:	f7fd fb1c 	bl	402370 <__aeabi_dmul>
  404d38:	4607      	mov	r7, r0
  404d3a:	4688      	mov	r8, r1
  404d3c:	f10a 0001 	add.w	r0, sl, #1
  404d40:	f7fd fab0 	bl	4022a4 <__aeabi_i2d>
  404d44:	463a      	mov	r2, r7
  404d46:	4643      	mov	r3, r8
  404d48:	f7fd fb12 	bl	402370 <__aeabi_dmul>
  404d4c:	2200      	movs	r2, #0
  404d4e:	4b17      	ldr	r3, [pc, #92]	; (404dac <_dtoa_r+0xd9c>)
  404d50:	f7fd f95c 	bl	40200c <__adddf3>
  404d54:	9a02      	ldr	r2, [sp, #8]
  404d56:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
  404d58:	9312      	str	r3, [sp, #72]	; 0x48
  404d5a:	3a01      	subs	r2, #1
  404d5c:	4605      	mov	r5, r0
  404d5e:	f1a1 7650 	sub.w	r6, r1, #54525952	; 0x3400000
  404d62:	9215      	str	r2, [sp, #84]	; 0x54
  404d64:	e56a      	b.n	40483c <_dtoa_r+0x82c>
  404d66:	2239      	movs	r2, #57	; 0x39
  404d68:	46b3      	mov	fp, r6
  404d6a:	703a      	strb	r2, [r7, #0]
  404d6c:	9e06      	ldr	r6, [sp, #24]
  404d6e:	1c7d      	adds	r5, r7, #1
  404d70:	e4c0      	b.n	4046f4 <_dtoa_r+0x6e4>
  404d72:	e9dd 2316 	ldrd	r2, r3, [sp, #88]	; 0x58
  404d76:	2000      	movs	r0, #0
  404d78:	4910      	ldr	r1, [pc, #64]	; (404dbc <_dtoa_r+0xdac>)
  404d7a:	f7fd f945 	bl	402008 <__aeabi_dsub>
  404d7e:	4632      	mov	r2, r6
  404d80:	463b      	mov	r3, r7
  404d82:	f001 ff1f 	bl	406bc4 <__aeabi_dcmpgt>
  404d86:	b908      	cbnz	r0, 404d8c <_dtoa_r+0xd7c>
  404d88:	e6ae      	b.n	404ae8 <_dtoa_r+0xad8>
  404d8a:	4615      	mov	r5, r2
  404d8c:	f815 3c01 	ldrb.w	r3, [r5, #-1]
  404d90:	2b30      	cmp	r3, #48	; 0x30
  404d92:	f105 32ff 	add.w	r2, r5, #4294967295
  404d96:	d0f8      	beq.n	404d8a <_dtoa_r+0xd7a>
  404d98:	e5d7      	b.n	40494a <_dtoa_r+0x93a>
  404d9a:	f8dd 9048 	ldr.w	r9, [sp, #72]	; 0x48
  404d9e:	9b15      	ldr	r3, [sp, #84]	; 0x54
  404da0:	9302      	str	r3, [sp, #8]
  404da2:	f7ff bae8 	b.w	404376 <_dtoa_r+0x366>
  404da6:	970c      	str	r7, [sp, #48]	; 0x30
  404da8:	f7ff bba5 	b.w	4044f6 <_dtoa_r+0x4e6>
  404dac:	401c0000 	.word	0x401c0000
  404db0:	40140000 	.word	0x40140000
  404db4:	004077c0 	.word	0x004077c0
  404db8:	00407798 	.word	0x00407798
  404dbc:	3fe00000 	.word	0x3fe00000
  404dc0:	40240000 	.word	0x40240000
  404dc4:	2b39      	cmp	r3, #57	; 0x39
  404dc6:	f8cd b018 	str.w	fp, [sp, #24]
  404dca:	46d0      	mov	r8, sl
  404dcc:	f8dd b028 	ldr.w	fp, [sp, #40]	; 0x28
  404dd0:	469a      	mov	sl, r3
  404dd2:	d0c8      	beq.n	404d66 <_dtoa_r+0xd56>
  404dd4:	f1bb 0f00 	cmp.w	fp, #0
  404dd8:	f73f aebf 	bgt.w	404b5a <_dtoa_r+0xb4a>
  404ddc:	e6bf      	b.n	404b5e <_dtoa_r+0xb4e>
  404dde:	f47f aebe 	bne.w	404b5e <_dtoa_r+0xb4e>
  404de2:	f01a 0f01 	tst.w	sl, #1
  404de6:	f43f aeba 	beq.w	404b5e <_dtoa_r+0xb4e>
  404dea:	e6b2      	b.n	404b52 <_dtoa_r+0xb42>
  404dec:	f04f 0800 	mov.w	r8, #0
  404df0:	4646      	mov	r6, r8
  404df2:	e5e9      	b.n	4049c8 <_dtoa_r+0x9b8>
  404df4:	4631      	mov	r1, r6
  404df6:	2300      	movs	r3, #0
  404df8:	220a      	movs	r2, #10
  404dfa:	4620      	mov	r0, r4
  404dfc:	f000 fefe 	bl	405bfc <__multadd>
  404e00:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
  404e02:	2b00      	cmp	r3, #0
  404e04:	4606      	mov	r6, r0
  404e06:	dd0a      	ble.n	404e1e <_dtoa_r+0xe0e>
  404e08:	930a      	str	r3, [sp, #40]	; 0x28
  404e0a:	f7ff bbaa 	b.w	404562 <_dtoa_r+0x552>
  404e0e:	9b24      	ldr	r3, [sp, #144]	; 0x90
  404e10:	2b02      	cmp	r3, #2
  404e12:	dc23      	bgt.n	404e5c <_dtoa_r+0xe4c>
  404e14:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
  404e16:	e43b      	b.n	404690 <_dtoa_r+0x680>
  404e18:	f04f 0a02 	mov.w	sl, #2
  404e1c:	e4ed      	b.n	4047fa <_dtoa_r+0x7ea>
  404e1e:	9b24      	ldr	r3, [sp, #144]	; 0x90
  404e20:	2b02      	cmp	r3, #2
  404e22:	dc1b      	bgt.n	404e5c <_dtoa_r+0xe4c>
  404e24:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
  404e26:	e7ef      	b.n	404e08 <_dtoa_r+0xdf8>
  404e28:	2500      	movs	r5, #0
  404e2a:	6465      	str	r5, [r4, #68]	; 0x44
  404e2c:	4629      	mov	r1, r5
  404e2e:	4620      	mov	r0, r4
  404e30:	f000 feb4 	bl	405b9c <_Balloc>
  404e34:	f04f 33ff 	mov.w	r3, #4294967295
  404e38:	930a      	str	r3, [sp, #40]	; 0x28
  404e3a:	930f      	str	r3, [sp, #60]	; 0x3c
  404e3c:	2301      	movs	r3, #1
  404e3e:	9004      	str	r0, [sp, #16]
  404e40:	9525      	str	r5, [sp, #148]	; 0x94
  404e42:	6420      	str	r0, [r4, #64]	; 0x40
  404e44:	930b      	str	r3, [sp, #44]	; 0x2c
  404e46:	f7ff b9dd 	b.w	404204 <_dtoa_r+0x1f4>
  404e4a:	2501      	movs	r5, #1
  404e4c:	f7ff b9a5 	b.w	40419a <_dtoa_r+0x18a>
  404e50:	f43f ab69 	beq.w	404526 <_dtoa_r+0x516>
  404e54:	f1c0 003c 	rsb	r0, r0, #60	; 0x3c
  404e58:	f7ff bbf9 	b.w	40464e <_dtoa_r+0x63e>
  404e5c:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
  404e5e:	930a      	str	r3, [sp, #40]	; 0x28
  404e60:	e5e5      	b.n	404a2e <_dtoa_r+0xa1e>
  404e62:	bf00      	nop

00404e64 <__sflush_r>:
  404e64:	f9b1 300c 	ldrsh.w	r3, [r1, #12]
  404e68:	b29a      	uxth	r2, r3
  404e6a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  404e6e:	460d      	mov	r5, r1
  404e70:	0711      	lsls	r1, r2, #28
  404e72:	4680      	mov	r8, r0
  404e74:	d43a      	bmi.n	404eec <__sflush_r+0x88>
  404e76:	686a      	ldr	r2, [r5, #4]
  404e78:	f443 6300 	orr.w	r3, r3, #2048	; 0x800
  404e7c:	2a00      	cmp	r2, #0
  404e7e:	81ab      	strh	r3, [r5, #12]
  404e80:	dd6f      	ble.n	404f62 <__sflush_r+0xfe>
  404e82:	6aac      	ldr	r4, [r5, #40]	; 0x28
  404e84:	2c00      	cmp	r4, #0
  404e86:	d049      	beq.n	404f1c <__sflush_r+0xb8>
  404e88:	2200      	movs	r2, #0
  404e8a:	b29b      	uxth	r3, r3
  404e8c:	f8d8 6000 	ldr.w	r6, [r8]
  404e90:	f8c8 2000 	str.w	r2, [r8]
  404e94:	f413 5280 	ands.w	r2, r3, #4096	; 0x1000
  404e98:	d067      	beq.n	404f6a <__sflush_r+0x106>
  404e9a:	6d2a      	ldr	r2, [r5, #80]	; 0x50
  404e9c:	075f      	lsls	r7, r3, #29
  404e9e:	d505      	bpl.n	404eac <__sflush_r+0x48>
  404ea0:	6869      	ldr	r1, [r5, #4]
  404ea2:	6b2b      	ldr	r3, [r5, #48]	; 0x30
  404ea4:	1a52      	subs	r2, r2, r1
  404ea6:	b10b      	cbz	r3, 404eac <__sflush_r+0x48>
  404ea8:	6beb      	ldr	r3, [r5, #60]	; 0x3c
  404eaa:	1ad2      	subs	r2, r2, r3
  404eac:	2300      	movs	r3, #0
  404eae:	69e9      	ldr	r1, [r5, #28]
  404eb0:	4640      	mov	r0, r8
  404eb2:	47a0      	blx	r4
  404eb4:	1c44      	adds	r4, r0, #1
  404eb6:	d03c      	beq.n	404f32 <__sflush_r+0xce>
  404eb8:	f9b5 300c 	ldrsh.w	r3, [r5, #12]
  404ebc:	692a      	ldr	r2, [r5, #16]
  404ebe:	602a      	str	r2, [r5, #0]
  404ec0:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
  404ec4:	2200      	movs	r2, #0
  404ec6:	81ab      	strh	r3, [r5, #12]
  404ec8:	04db      	lsls	r3, r3, #19
  404eca:	606a      	str	r2, [r5, #4]
  404ecc:	d447      	bmi.n	404f5e <__sflush_r+0xfa>
  404ece:	6b29      	ldr	r1, [r5, #48]	; 0x30
  404ed0:	f8c8 6000 	str.w	r6, [r8]
  404ed4:	b311      	cbz	r1, 404f1c <__sflush_r+0xb8>
  404ed6:	f105 0340 	add.w	r3, r5, #64	; 0x40
  404eda:	4299      	cmp	r1, r3
  404edc:	d002      	beq.n	404ee4 <__sflush_r+0x80>
  404ede:	4640      	mov	r0, r8
  404ee0:	f000 f968 	bl	4051b4 <_free_r>
  404ee4:	2000      	movs	r0, #0
  404ee6:	6328      	str	r0, [r5, #48]	; 0x30
  404ee8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  404eec:	692e      	ldr	r6, [r5, #16]
  404eee:	b1ae      	cbz	r6, 404f1c <__sflush_r+0xb8>
  404ef0:	682c      	ldr	r4, [r5, #0]
  404ef2:	602e      	str	r6, [r5, #0]
  404ef4:	0791      	lsls	r1, r2, #30
  404ef6:	bf0c      	ite	eq
  404ef8:	696b      	ldreq	r3, [r5, #20]
  404efa:	2300      	movne	r3, #0
  404efc:	1ba4      	subs	r4, r4, r6
  404efe:	60ab      	str	r3, [r5, #8]
  404f00:	e00a      	b.n	404f18 <__sflush_r+0xb4>
  404f02:	4623      	mov	r3, r4
  404f04:	4632      	mov	r2, r6
  404f06:	6a6f      	ldr	r7, [r5, #36]	; 0x24
  404f08:	69e9      	ldr	r1, [r5, #28]
  404f0a:	4640      	mov	r0, r8
  404f0c:	47b8      	blx	r7
  404f0e:	2800      	cmp	r0, #0
  404f10:	eba4 0400 	sub.w	r4, r4, r0
  404f14:	4406      	add	r6, r0
  404f16:	dd04      	ble.n	404f22 <__sflush_r+0xbe>
  404f18:	2c00      	cmp	r4, #0
  404f1a:	dcf2      	bgt.n	404f02 <__sflush_r+0x9e>
  404f1c:	2000      	movs	r0, #0
  404f1e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  404f22:	89ab      	ldrh	r3, [r5, #12]
  404f24:	f043 0340 	orr.w	r3, r3, #64	; 0x40
  404f28:	81ab      	strh	r3, [r5, #12]
  404f2a:	f04f 30ff 	mov.w	r0, #4294967295
  404f2e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  404f32:	f8d8 4000 	ldr.w	r4, [r8]
  404f36:	2c1d      	cmp	r4, #29
  404f38:	d8f3      	bhi.n	404f22 <__sflush_r+0xbe>
  404f3a:	4b19      	ldr	r3, [pc, #100]	; (404fa0 <__sflush_r+0x13c>)
  404f3c:	40e3      	lsrs	r3, r4
  404f3e:	43db      	mvns	r3, r3
  404f40:	f013 0301 	ands.w	r3, r3, #1
  404f44:	d1ed      	bne.n	404f22 <__sflush_r+0xbe>
  404f46:	f9b5 200c 	ldrsh.w	r2, [r5, #12]
  404f4a:	606b      	str	r3, [r5, #4]
  404f4c:	f422 6300 	bic.w	r3, r2, #2048	; 0x800
  404f50:	6929      	ldr	r1, [r5, #16]
  404f52:	81ab      	strh	r3, [r5, #12]
  404f54:	04da      	lsls	r2, r3, #19
  404f56:	6029      	str	r1, [r5, #0]
  404f58:	d5b9      	bpl.n	404ece <__sflush_r+0x6a>
  404f5a:	2c00      	cmp	r4, #0
  404f5c:	d1b7      	bne.n	404ece <__sflush_r+0x6a>
  404f5e:	6528      	str	r0, [r5, #80]	; 0x50
  404f60:	e7b5      	b.n	404ece <__sflush_r+0x6a>
  404f62:	6bea      	ldr	r2, [r5, #60]	; 0x3c
  404f64:	2a00      	cmp	r2, #0
  404f66:	dc8c      	bgt.n	404e82 <__sflush_r+0x1e>
  404f68:	e7d8      	b.n	404f1c <__sflush_r+0xb8>
  404f6a:	2301      	movs	r3, #1
  404f6c:	69e9      	ldr	r1, [r5, #28]
  404f6e:	4640      	mov	r0, r8
  404f70:	47a0      	blx	r4
  404f72:	1c43      	adds	r3, r0, #1
  404f74:	4602      	mov	r2, r0
  404f76:	d002      	beq.n	404f7e <__sflush_r+0x11a>
  404f78:	89ab      	ldrh	r3, [r5, #12]
  404f7a:	6aac      	ldr	r4, [r5, #40]	; 0x28
  404f7c:	e78e      	b.n	404e9c <__sflush_r+0x38>
  404f7e:	f8d8 3000 	ldr.w	r3, [r8]
  404f82:	2b00      	cmp	r3, #0
  404f84:	d0f8      	beq.n	404f78 <__sflush_r+0x114>
  404f86:	2b1d      	cmp	r3, #29
  404f88:	d001      	beq.n	404f8e <__sflush_r+0x12a>
  404f8a:	2b16      	cmp	r3, #22
  404f8c:	d102      	bne.n	404f94 <__sflush_r+0x130>
  404f8e:	f8c8 6000 	str.w	r6, [r8]
  404f92:	e7c3      	b.n	404f1c <__sflush_r+0xb8>
  404f94:	89ab      	ldrh	r3, [r5, #12]
  404f96:	f043 0340 	orr.w	r3, r3, #64	; 0x40
  404f9a:	81ab      	strh	r3, [r5, #12]
  404f9c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  404fa0:	20400001 	.word	0x20400001

00404fa4 <_fflush_r>:
  404fa4:	b510      	push	{r4, lr}
  404fa6:	4604      	mov	r4, r0
  404fa8:	b082      	sub	sp, #8
  404faa:	b108      	cbz	r0, 404fb0 <_fflush_r+0xc>
  404fac:	6b83      	ldr	r3, [r0, #56]	; 0x38
  404fae:	b153      	cbz	r3, 404fc6 <_fflush_r+0x22>
  404fb0:	f9b1 000c 	ldrsh.w	r0, [r1, #12]
  404fb4:	b908      	cbnz	r0, 404fba <_fflush_r+0x16>
  404fb6:	b002      	add	sp, #8
  404fb8:	bd10      	pop	{r4, pc}
  404fba:	4620      	mov	r0, r4
  404fbc:	b002      	add	sp, #8
  404fbe:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  404fc2:	f7ff bf4f 	b.w	404e64 <__sflush_r>
  404fc6:	9101      	str	r1, [sp, #4]
  404fc8:	f000 f880 	bl	4050cc <__sinit>
  404fcc:	9901      	ldr	r1, [sp, #4]
  404fce:	e7ef      	b.n	404fb0 <_fflush_r+0xc>

00404fd0 <_cleanup_r>:
  404fd0:	4901      	ldr	r1, [pc, #4]	; (404fd8 <_cleanup_r+0x8>)
  404fd2:	f000 b9d5 	b.w	405380 <_fwalk_reent>
  404fd6:	bf00      	nop
  404fd8:	0040656d 	.word	0x0040656d

00404fdc <__sinit.part.1>:
  404fdc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  404fe0:	4b35      	ldr	r3, [pc, #212]	; (4050b8 <__sinit.part.1+0xdc>)
  404fe2:	6845      	ldr	r5, [r0, #4]
  404fe4:	63c3      	str	r3, [r0, #60]	; 0x3c
  404fe6:	2400      	movs	r4, #0
  404fe8:	4607      	mov	r7, r0
  404fea:	f500 723b 	add.w	r2, r0, #748	; 0x2ec
  404fee:	2304      	movs	r3, #4
  404ff0:	2103      	movs	r1, #3
  404ff2:	f8c0 12e4 	str.w	r1, [r0, #740]	; 0x2e4
  404ff6:	f8c0 22e8 	str.w	r2, [r0, #744]	; 0x2e8
  404ffa:	f8c0 42e0 	str.w	r4, [r0, #736]	; 0x2e0
  404ffe:	b083      	sub	sp, #12
  405000:	602c      	str	r4, [r5, #0]
  405002:	606c      	str	r4, [r5, #4]
  405004:	60ac      	str	r4, [r5, #8]
  405006:	666c      	str	r4, [r5, #100]	; 0x64
  405008:	81ec      	strh	r4, [r5, #14]
  40500a:	612c      	str	r4, [r5, #16]
  40500c:	616c      	str	r4, [r5, #20]
  40500e:	61ac      	str	r4, [r5, #24]
  405010:	81ab      	strh	r3, [r5, #12]
  405012:	4621      	mov	r1, r4
  405014:	f105 005c 	add.w	r0, r5, #92	; 0x5c
  405018:	2208      	movs	r2, #8
  40501a:	f7fd fc0b 	bl	402834 <memset>
  40501e:	68be      	ldr	r6, [r7, #8]
  405020:	f8df b098 	ldr.w	fp, [pc, #152]	; 4050bc <__sinit.part.1+0xe0>
  405024:	f8df a098 	ldr.w	sl, [pc, #152]	; 4050c0 <__sinit.part.1+0xe4>
  405028:	f8df 9098 	ldr.w	r9, [pc, #152]	; 4050c4 <__sinit.part.1+0xe8>
  40502c:	f8df 8098 	ldr.w	r8, [pc, #152]	; 4050c8 <__sinit.part.1+0xec>
  405030:	f8c5 b020 	str.w	fp, [r5, #32]
  405034:	2301      	movs	r3, #1
  405036:	2209      	movs	r2, #9
  405038:	f8c5 a024 	str.w	sl, [r5, #36]	; 0x24
  40503c:	f8c5 9028 	str.w	r9, [r5, #40]	; 0x28
  405040:	f8c5 802c 	str.w	r8, [r5, #44]	; 0x2c
  405044:	61ed      	str	r5, [r5, #28]
  405046:	4621      	mov	r1, r4
  405048:	81f3      	strh	r3, [r6, #14]
  40504a:	81b2      	strh	r2, [r6, #12]
  40504c:	f106 005c 	add.w	r0, r6, #92	; 0x5c
  405050:	6034      	str	r4, [r6, #0]
  405052:	6074      	str	r4, [r6, #4]
  405054:	60b4      	str	r4, [r6, #8]
  405056:	6674      	str	r4, [r6, #100]	; 0x64
  405058:	6134      	str	r4, [r6, #16]
  40505a:	6174      	str	r4, [r6, #20]
  40505c:	61b4      	str	r4, [r6, #24]
  40505e:	2208      	movs	r2, #8
  405060:	9301      	str	r3, [sp, #4]
  405062:	f7fd fbe7 	bl	402834 <memset>
  405066:	68fd      	ldr	r5, [r7, #12]
  405068:	61f6      	str	r6, [r6, #28]
  40506a:	2012      	movs	r0, #18
  40506c:	2202      	movs	r2, #2
  40506e:	f8c6 b020 	str.w	fp, [r6, #32]
  405072:	f8c6 a024 	str.w	sl, [r6, #36]	; 0x24
  405076:	f8c6 9028 	str.w	r9, [r6, #40]	; 0x28
  40507a:	f8c6 802c 	str.w	r8, [r6, #44]	; 0x2c
  40507e:	4621      	mov	r1, r4
  405080:	81a8      	strh	r0, [r5, #12]
  405082:	81ea      	strh	r2, [r5, #14]
  405084:	602c      	str	r4, [r5, #0]
  405086:	606c      	str	r4, [r5, #4]
  405088:	60ac      	str	r4, [r5, #8]
  40508a:	666c      	str	r4, [r5, #100]	; 0x64
  40508c:	612c      	str	r4, [r5, #16]
  40508e:	616c      	str	r4, [r5, #20]
  405090:	61ac      	str	r4, [r5, #24]
  405092:	f105 005c 	add.w	r0, r5, #92	; 0x5c
  405096:	2208      	movs	r2, #8
  405098:	f7fd fbcc 	bl	402834 <memset>
  40509c:	9b01      	ldr	r3, [sp, #4]
  40509e:	61ed      	str	r5, [r5, #28]
  4050a0:	f8c5 b020 	str.w	fp, [r5, #32]
  4050a4:	f8c5 a024 	str.w	sl, [r5, #36]	; 0x24
  4050a8:	f8c5 9028 	str.w	r9, [r5, #40]	; 0x28
  4050ac:	f8c5 802c 	str.w	r8, [r5, #44]	; 0x2c
  4050b0:	63bb      	str	r3, [r7, #56]	; 0x38
  4050b2:	b003      	add	sp, #12
  4050b4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  4050b8:	00404fd1 	.word	0x00404fd1
  4050bc:	004061b5 	.word	0x004061b5
  4050c0:	004061d9 	.word	0x004061d9
  4050c4:	00406215 	.word	0x00406215
  4050c8:	00406235 	.word	0x00406235

004050cc <__sinit>:
  4050cc:	6b83      	ldr	r3, [r0, #56]	; 0x38
  4050ce:	b103      	cbz	r3, 4050d2 <__sinit+0x6>
  4050d0:	4770      	bx	lr
  4050d2:	f7ff bf83 	b.w	404fdc <__sinit.part.1>
  4050d6:	bf00      	nop

004050d8 <__sfp_lock_acquire>:
  4050d8:	4770      	bx	lr
  4050da:	bf00      	nop

004050dc <__sfp_lock_release>:
  4050dc:	4770      	bx	lr
  4050de:	bf00      	nop

004050e0 <__libc_fini_array>:
  4050e0:	b538      	push	{r3, r4, r5, lr}
  4050e2:	4c0a      	ldr	r4, [pc, #40]	; (40510c <__libc_fini_array+0x2c>)
  4050e4:	4d0a      	ldr	r5, [pc, #40]	; (405110 <__libc_fini_array+0x30>)
  4050e6:	1b64      	subs	r4, r4, r5
  4050e8:	10a4      	asrs	r4, r4, #2
  4050ea:	d00a      	beq.n	405102 <__libc_fini_array+0x22>
  4050ec:	f104 4380 	add.w	r3, r4, #1073741824	; 0x40000000
  4050f0:	3b01      	subs	r3, #1
  4050f2:	eb05 0583 	add.w	r5, r5, r3, lsl #2
  4050f6:	3c01      	subs	r4, #1
  4050f8:	f855 3904 	ldr.w	r3, [r5], #-4
  4050fc:	4798      	blx	r3
  4050fe:	2c00      	cmp	r4, #0
  405100:	d1f9      	bne.n	4050f6 <__libc_fini_array+0x16>
  405102:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  405106:	f002 bc59 	b.w	4079bc <_fini>
  40510a:	bf00      	nop
  40510c:	004079cc 	.word	0x004079cc
  405110:	004079c8 	.word	0x004079c8

00405114 <_malloc_trim_r>:
  405114:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  405116:	4f24      	ldr	r7, [pc, #144]	; (4051a8 <_malloc_trim_r+0x94>)
  405118:	460c      	mov	r4, r1
  40511a:	4606      	mov	r6, r0
  40511c:	f000 fd3a 	bl	405b94 <__malloc_lock>
  405120:	68bb      	ldr	r3, [r7, #8]
  405122:	685d      	ldr	r5, [r3, #4]
  405124:	f5c4 617e 	rsb	r1, r4, #4064	; 0xfe0
  405128:	310f      	adds	r1, #15
  40512a:	f025 0503 	bic.w	r5, r5, #3
  40512e:	4429      	add	r1, r5
  405130:	f421 617f 	bic.w	r1, r1, #4080	; 0xff0
  405134:	f021 010f 	bic.w	r1, r1, #15
  405138:	f5a1 5480 	sub.w	r4, r1, #4096	; 0x1000
  40513c:	f5b4 5f80 	cmp.w	r4, #4096	; 0x1000
  405140:	db07      	blt.n	405152 <_malloc_trim_r+0x3e>
  405142:	2100      	movs	r1, #0
  405144:	4630      	mov	r0, r6
  405146:	f001 f823 	bl	406190 <_sbrk_r>
  40514a:	68bb      	ldr	r3, [r7, #8]
  40514c:	442b      	add	r3, r5
  40514e:	4298      	cmp	r0, r3
  405150:	d004      	beq.n	40515c <_malloc_trim_r+0x48>
  405152:	4630      	mov	r0, r6
  405154:	f000 fd20 	bl	405b98 <__malloc_unlock>
  405158:	2000      	movs	r0, #0
  40515a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  40515c:	4261      	negs	r1, r4
  40515e:	4630      	mov	r0, r6
  405160:	f001 f816 	bl	406190 <_sbrk_r>
  405164:	3001      	adds	r0, #1
  405166:	d00d      	beq.n	405184 <_malloc_trim_r+0x70>
  405168:	4b10      	ldr	r3, [pc, #64]	; (4051ac <_malloc_trim_r+0x98>)
  40516a:	68ba      	ldr	r2, [r7, #8]
  40516c:	6819      	ldr	r1, [r3, #0]
  40516e:	1b2d      	subs	r5, r5, r4
  405170:	f045 0501 	orr.w	r5, r5, #1
  405174:	4630      	mov	r0, r6
  405176:	1b09      	subs	r1, r1, r4
  405178:	6055      	str	r5, [r2, #4]
  40517a:	6019      	str	r1, [r3, #0]
  40517c:	f000 fd0c 	bl	405b98 <__malloc_unlock>
  405180:	2001      	movs	r0, #1
  405182:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  405184:	2100      	movs	r1, #0
  405186:	4630      	mov	r0, r6
  405188:	f001 f802 	bl	406190 <_sbrk_r>
  40518c:	68ba      	ldr	r2, [r7, #8]
  40518e:	1a83      	subs	r3, r0, r2
  405190:	2b0f      	cmp	r3, #15
  405192:	ddde      	ble.n	405152 <_malloc_trim_r+0x3e>
  405194:	4c06      	ldr	r4, [pc, #24]	; (4051b0 <_malloc_trim_r+0x9c>)
  405196:	4905      	ldr	r1, [pc, #20]	; (4051ac <_malloc_trim_r+0x98>)
  405198:	6824      	ldr	r4, [r4, #0]
  40519a:	f043 0301 	orr.w	r3, r3, #1
  40519e:	1b00      	subs	r0, r0, r4
  4051a0:	6053      	str	r3, [r2, #4]
  4051a2:	6008      	str	r0, [r1, #0]
  4051a4:	e7d5      	b.n	405152 <_malloc_trim_r+0x3e>
  4051a6:	bf00      	nop
  4051a8:	20000470 	.word	0x20000470
  4051ac:	20000e58 	.word	0x20000e58
  4051b0:	20000878 	.word	0x20000878

004051b4 <_free_r>:
  4051b4:	2900      	cmp	r1, #0
  4051b6:	d044      	beq.n	405242 <_free_r+0x8e>
  4051b8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  4051bc:	460d      	mov	r5, r1
  4051be:	4680      	mov	r8, r0
  4051c0:	f000 fce8 	bl	405b94 <__malloc_lock>
  4051c4:	f855 7c04 	ldr.w	r7, [r5, #-4]
  4051c8:	4969      	ldr	r1, [pc, #420]	; (405370 <_free_r+0x1bc>)
  4051ca:	f027 0301 	bic.w	r3, r7, #1
  4051ce:	f1a5 0408 	sub.w	r4, r5, #8
  4051d2:	18e2      	adds	r2, r4, r3
  4051d4:	688e      	ldr	r6, [r1, #8]
  4051d6:	6850      	ldr	r0, [r2, #4]
  4051d8:	42b2      	cmp	r2, r6
  4051da:	f020 0003 	bic.w	r0, r0, #3
  4051de:	d05e      	beq.n	40529e <_free_r+0xea>
  4051e0:	07fe      	lsls	r6, r7, #31
  4051e2:	6050      	str	r0, [r2, #4]
  4051e4:	d40b      	bmi.n	4051fe <_free_r+0x4a>
  4051e6:	f855 7c08 	ldr.w	r7, [r5, #-8]
  4051ea:	1be4      	subs	r4, r4, r7
  4051ec:	f101 0e08 	add.w	lr, r1, #8
  4051f0:	68a5      	ldr	r5, [r4, #8]
  4051f2:	4575      	cmp	r5, lr
  4051f4:	443b      	add	r3, r7
  4051f6:	d06d      	beq.n	4052d4 <_free_r+0x120>
  4051f8:	68e7      	ldr	r7, [r4, #12]
  4051fa:	60ef      	str	r7, [r5, #12]
  4051fc:	60bd      	str	r5, [r7, #8]
  4051fe:	1815      	adds	r5, r2, r0
  405200:	686d      	ldr	r5, [r5, #4]
  405202:	07ed      	lsls	r5, r5, #31
  405204:	d53e      	bpl.n	405284 <_free_r+0xd0>
  405206:	f043 0201 	orr.w	r2, r3, #1
  40520a:	6062      	str	r2, [r4, #4]
  40520c:	50e3      	str	r3, [r4, r3]
  40520e:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
  405212:	d217      	bcs.n	405244 <_free_r+0x90>
  405214:	08db      	lsrs	r3, r3, #3
  405216:	1c58      	adds	r0, r3, #1
  405218:	109a      	asrs	r2, r3, #2
  40521a:	684d      	ldr	r5, [r1, #4]
  40521c:	f851 7030 	ldr.w	r7, [r1, r0, lsl #3]
  405220:	60a7      	str	r7, [r4, #8]
  405222:	2301      	movs	r3, #1
  405224:	4093      	lsls	r3, r2
  405226:	eb01 02c0 	add.w	r2, r1, r0, lsl #3
  40522a:	432b      	orrs	r3, r5
  40522c:	3a08      	subs	r2, #8
  40522e:	60e2      	str	r2, [r4, #12]
  405230:	604b      	str	r3, [r1, #4]
  405232:	f841 4030 	str.w	r4, [r1, r0, lsl #3]
  405236:	60fc      	str	r4, [r7, #12]
  405238:	4640      	mov	r0, r8
  40523a:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
  40523e:	f000 bcab 	b.w	405b98 <__malloc_unlock>
  405242:	4770      	bx	lr
  405244:	0a5a      	lsrs	r2, r3, #9
  405246:	2a04      	cmp	r2, #4
  405248:	d852      	bhi.n	4052f0 <_free_r+0x13c>
  40524a:	099a      	lsrs	r2, r3, #6
  40524c:	f102 0739 	add.w	r7, r2, #57	; 0x39
  405250:	00ff      	lsls	r7, r7, #3
  405252:	f102 0538 	add.w	r5, r2, #56	; 0x38
  405256:	19c8      	adds	r0, r1, r7
  405258:	59ca      	ldr	r2, [r1, r7]
  40525a:	3808      	subs	r0, #8
  40525c:	4290      	cmp	r0, r2
  40525e:	d04f      	beq.n	405300 <_free_r+0x14c>
  405260:	6851      	ldr	r1, [r2, #4]
  405262:	f021 0103 	bic.w	r1, r1, #3
  405266:	428b      	cmp	r3, r1
  405268:	d232      	bcs.n	4052d0 <_free_r+0x11c>
  40526a:	6892      	ldr	r2, [r2, #8]
  40526c:	4290      	cmp	r0, r2
  40526e:	d1f7      	bne.n	405260 <_free_r+0xac>
  405270:	68c3      	ldr	r3, [r0, #12]
  405272:	60a0      	str	r0, [r4, #8]
  405274:	60e3      	str	r3, [r4, #12]
  405276:	609c      	str	r4, [r3, #8]
  405278:	60c4      	str	r4, [r0, #12]
  40527a:	4640      	mov	r0, r8
  40527c:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
  405280:	f000 bc8a 	b.w	405b98 <__malloc_unlock>
  405284:	6895      	ldr	r5, [r2, #8]
  405286:	4f3b      	ldr	r7, [pc, #236]	; (405374 <_free_r+0x1c0>)
  405288:	42bd      	cmp	r5, r7
  40528a:	4403      	add	r3, r0
  40528c:	d040      	beq.n	405310 <_free_r+0x15c>
  40528e:	68d0      	ldr	r0, [r2, #12]
  405290:	60e8      	str	r0, [r5, #12]
  405292:	f043 0201 	orr.w	r2, r3, #1
  405296:	6085      	str	r5, [r0, #8]
  405298:	6062      	str	r2, [r4, #4]
  40529a:	50e3      	str	r3, [r4, r3]
  40529c:	e7b7      	b.n	40520e <_free_r+0x5a>
  40529e:	07ff      	lsls	r7, r7, #31
  4052a0:	4403      	add	r3, r0
  4052a2:	d407      	bmi.n	4052b4 <_free_r+0x100>
  4052a4:	f855 2c08 	ldr.w	r2, [r5, #-8]
  4052a8:	1aa4      	subs	r4, r4, r2
  4052aa:	4413      	add	r3, r2
  4052ac:	68a0      	ldr	r0, [r4, #8]
  4052ae:	68e2      	ldr	r2, [r4, #12]
  4052b0:	60c2      	str	r2, [r0, #12]
  4052b2:	6090      	str	r0, [r2, #8]
  4052b4:	4a30      	ldr	r2, [pc, #192]	; (405378 <_free_r+0x1c4>)
  4052b6:	6812      	ldr	r2, [r2, #0]
  4052b8:	f043 0001 	orr.w	r0, r3, #1
  4052bc:	4293      	cmp	r3, r2
  4052be:	6060      	str	r0, [r4, #4]
  4052c0:	608c      	str	r4, [r1, #8]
  4052c2:	d3b9      	bcc.n	405238 <_free_r+0x84>
  4052c4:	4b2d      	ldr	r3, [pc, #180]	; (40537c <_free_r+0x1c8>)
  4052c6:	4640      	mov	r0, r8
  4052c8:	6819      	ldr	r1, [r3, #0]
  4052ca:	f7ff ff23 	bl	405114 <_malloc_trim_r>
  4052ce:	e7b3      	b.n	405238 <_free_r+0x84>
  4052d0:	4610      	mov	r0, r2
  4052d2:	e7cd      	b.n	405270 <_free_r+0xbc>
  4052d4:	1811      	adds	r1, r2, r0
  4052d6:	6849      	ldr	r1, [r1, #4]
  4052d8:	07c9      	lsls	r1, r1, #31
  4052da:	d444      	bmi.n	405366 <_free_r+0x1b2>
  4052dc:	6891      	ldr	r1, [r2, #8]
  4052de:	68d2      	ldr	r2, [r2, #12]
  4052e0:	60ca      	str	r2, [r1, #12]
  4052e2:	4403      	add	r3, r0
  4052e4:	f043 0001 	orr.w	r0, r3, #1
  4052e8:	6091      	str	r1, [r2, #8]
  4052ea:	6060      	str	r0, [r4, #4]
  4052ec:	50e3      	str	r3, [r4, r3]
  4052ee:	e7a3      	b.n	405238 <_free_r+0x84>
  4052f0:	2a14      	cmp	r2, #20
  4052f2:	d816      	bhi.n	405322 <_free_r+0x16e>
  4052f4:	f102 075c 	add.w	r7, r2, #92	; 0x5c
  4052f8:	00ff      	lsls	r7, r7, #3
  4052fa:	f102 055b 	add.w	r5, r2, #91	; 0x5b
  4052fe:	e7aa      	b.n	405256 <_free_r+0xa2>
  405300:	10aa      	asrs	r2, r5, #2
  405302:	2301      	movs	r3, #1
  405304:	684d      	ldr	r5, [r1, #4]
  405306:	4093      	lsls	r3, r2
  405308:	432b      	orrs	r3, r5
  40530a:	604b      	str	r3, [r1, #4]
  40530c:	4603      	mov	r3, r0
  40530e:	e7b0      	b.n	405272 <_free_r+0xbe>
  405310:	f043 0201 	orr.w	r2, r3, #1
  405314:	614c      	str	r4, [r1, #20]
  405316:	610c      	str	r4, [r1, #16]
  405318:	60e5      	str	r5, [r4, #12]
  40531a:	60a5      	str	r5, [r4, #8]
  40531c:	6062      	str	r2, [r4, #4]
  40531e:	50e3      	str	r3, [r4, r3]
  405320:	e78a      	b.n	405238 <_free_r+0x84>
  405322:	2a54      	cmp	r2, #84	; 0x54
  405324:	d806      	bhi.n	405334 <_free_r+0x180>
  405326:	0b1a      	lsrs	r2, r3, #12
  405328:	f102 076f 	add.w	r7, r2, #111	; 0x6f
  40532c:	00ff      	lsls	r7, r7, #3
  40532e:	f102 056e 	add.w	r5, r2, #110	; 0x6e
  405332:	e790      	b.n	405256 <_free_r+0xa2>
  405334:	f5b2 7faa 	cmp.w	r2, #340	; 0x154
  405338:	d806      	bhi.n	405348 <_free_r+0x194>
  40533a:	0bda      	lsrs	r2, r3, #15
  40533c:	f102 0778 	add.w	r7, r2, #120	; 0x78
  405340:	00ff      	lsls	r7, r7, #3
  405342:	f102 0577 	add.w	r5, r2, #119	; 0x77
  405346:	e786      	b.n	405256 <_free_r+0xa2>
  405348:	f240 5054 	movw	r0, #1364	; 0x554
  40534c:	4282      	cmp	r2, r0
  40534e:	d806      	bhi.n	40535e <_free_r+0x1aa>
  405350:	0c9a      	lsrs	r2, r3, #18
  405352:	f102 077d 	add.w	r7, r2, #125	; 0x7d
  405356:	00ff      	lsls	r7, r7, #3
  405358:	f102 057c 	add.w	r5, r2, #124	; 0x7c
  40535c:	e77b      	b.n	405256 <_free_r+0xa2>
  40535e:	f44f 777e 	mov.w	r7, #1016	; 0x3f8
  405362:	257e      	movs	r5, #126	; 0x7e
  405364:	e777      	b.n	405256 <_free_r+0xa2>
  405366:	f043 0101 	orr.w	r1, r3, #1
  40536a:	6061      	str	r1, [r4, #4]
  40536c:	6013      	str	r3, [r2, #0]
  40536e:	e763      	b.n	405238 <_free_r+0x84>
  405370:	20000470 	.word	0x20000470
  405374:	20000478 	.word	0x20000478
  405378:	2000087c 	.word	0x2000087c
  40537c:	20000e88 	.word	0x20000e88

00405380 <_fwalk_reent>:
  405380:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
  405384:	f510 7738 	adds.w	r7, r0, #736	; 0x2e0
  405388:	d01f      	beq.n	4053ca <_fwalk_reent+0x4a>
  40538a:	4688      	mov	r8, r1
  40538c:	4606      	mov	r6, r0
  40538e:	f04f 0900 	mov.w	r9, #0
  405392:	687d      	ldr	r5, [r7, #4]
  405394:	68bc      	ldr	r4, [r7, #8]
  405396:	3d01      	subs	r5, #1
  405398:	d411      	bmi.n	4053be <_fwalk_reent+0x3e>
  40539a:	89a3      	ldrh	r3, [r4, #12]
  40539c:	2b01      	cmp	r3, #1
  40539e:	f105 35ff 	add.w	r5, r5, #4294967295
  4053a2:	d908      	bls.n	4053b6 <_fwalk_reent+0x36>
  4053a4:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
  4053a8:	3301      	adds	r3, #1
  4053aa:	4621      	mov	r1, r4
  4053ac:	4630      	mov	r0, r6
  4053ae:	d002      	beq.n	4053b6 <_fwalk_reent+0x36>
  4053b0:	47c0      	blx	r8
  4053b2:	ea49 0900 	orr.w	r9, r9, r0
  4053b6:	1c6b      	adds	r3, r5, #1
  4053b8:	f104 0468 	add.w	r4, r4, #104	; 0x68
  4053bc:	d1ed      	bne.n	40539a <_fwalk_reent+0x1a>
  4053be:	683f      	ldr	r7, [r7, #0]
  4053c0:	2f00      	cmp	r7, #0
  4053c2:	d1e6      	bne.n	405392 <_fwalk_reent+0x12>
  4053c4:	4648      	mov	r0, r9
  4053c6:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  4053ca:	46b9      	mov	r9, r7
  4053cc:	4648      	mov	r0, r9
  4053ce:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  4053d2:	bf00      	nop

004053d4 <_localeconv_r>:
  4053d4:	4a04      	ldr	r2, [pc, #16]	; (4053e8 <_localeconv_r+0x14>)
  4053d6:	4b05      	ldr	r3, [pc, #20]	; (4053ec <_localeconv_r+0x18>)
  4053d8:	6812      	ldr	r2, [r2, #0]
  4053da:	6b50      	ldr	r0, [r2, #52]	; 0x34
  4053dc:	2800      	cmp	r0, #0
  4053de:	bf08      	it	eq
  4053e0:	4618      	moveq	r0, r3
  4053e2:	30f0      	adds	r0, #240	; 0xf0
  4053e4:	4770      	bx	lr
  4053e6:	bf00      	nop
  4053e8:	20000040 	.word	0x20000040
  4053ec:	20000880 	.word	0x20000880

004053f0 <__swhatbuf_r>:
  4053f0:	b570      	push	{r4, r5, r6, lr}
  4053f2:	460c      	mov	r4, r1
  4053f4:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
  4053f8:	2900      	cmp	r1, #0
  4053fa:	b090      	sub	sp, #64	; 0x40
  4053fc:	4615      	mov	r5, r2
  4053fe:	461e      	mov	r6, r3
  405400:	db14      	blt.n	40542c <__swhatbuf_r+0x3c>
  405402:	aa01      	add	r2, sp, #4
  405404:	f001 f8f2 	bl	4065ec <_fstat_r>
  405408:	2800      	cmp	r0, #0
  40540a:	db0f      	blt.n	40542c <__swhatbuf_r+0x3c>
  40540c:	9a02      	ldr	r2, [sp, #8]
  40540e:	f402 4270 	and.w	r2, r2, #61440	; 0xf000
  405412:	f5a2 5200 	sub.w	r2, r2, #8192	; 0x2000
  405416:	fab2 f282 	clz	r2, r2
  40541a:	0952      	lsrs	r2, r2, #5
  40541c:	f44f 6380 	mov.w	r3, #1024	; 0x400
  405420:	f44f 6000 	mov.w	r0, #2048	; 0x800
  405424:	6032      	str	r2, [r6, #0]
  405426:	602b      	str	r3, [r5, #0]
  405428:	b010      	add	sp, #64	; 0x40
  40542a:	bd70      	pop	{r4, r5, r6, pc}
  40542c:	89a2      	ldrh	r2, [r4, #12]
  40542e:	2300      	movs	r3, #0
  405430:	f012 0080 	ands.w	r0, r2, #128	; 0x80
  405434:	6033      	str	r3, [r6, #0]
  405436:	d004      	beq.n	405442 <__swhatbuf_r+0x52>
  405438:	2240      	movs	r2, #64	; 0x40
  40543a:	4618      	mov	r0, r3
  40543c:	602a      	str	r2, [r5, #0]
  40543e:	b010      	add	sp, #64	; 0x40
  405440:	bd70      	pop	{r4, r5, r6, pc}
  405442:	f44f 6380 	mov.w	r3, #1024	; 0x400
  405446:	602b      	str	r3, [r5, #0]
  405448:	b010      	add	sp, #64	; 0x40
  40544a:	bd70      	pop	{r4, r5, r6, pc}

0040544c <malloc>:
  40544c:	4b02      	ldr	r3, [pc, #8]	; (405458 <malloc+0xc>)
  40544e:	4601      	mov	r1, r0
  405450:	6818      	ldr	r0, [r3, #0]
  405452:	f000 b803 	b.w	40545c <_malloc_r>
  405456:	bf00      	nop
  405458:	20000040 	.word	0x20000040

0040545c <_malloc_r>:
  40545c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  405460:	f101 060b 	add.w	r6, r1, #11
  405464:	2e16      	cmp	r6, #22
  405466:	b083      	sub	sp, #12
  405468:	4605      	mov	r5, r0
  40546a:	f240 809e 	bls.w	4055aa <_malloc_r+0x14e>
  40546e:	f036 0607 	bics.w	r6, r6, #7
  405472:	f100 80bd 	bmi.w	4055f0 <_malloc_r+0x194>
  405476:	42b1      	cmp	r1, r6
  405478:	f200 80ba 	bhi.w	4055f0 <_malloc_r+0x194>
  40547c:	f000 fb8a 	bl	405b94 <__malloc_lock>
  405480:	f5b6 7ffc 	cmp.w	r6, #504	; 0x1f8
  405484:	f0c0 8293 	bcc.w	4059ae <_malloc_r+0x552>
  405488:	0a73      	lsrs	r3, r6, #9
  40548a:	f000 80b8 	beq.w	4055fe <_malloc_r+0x1a2>
  40548e:	2b04      	cmp	r3, #4
  405490:	f200 8179 	bhi.w	405786 <_malloc_r+0x32a>
  405494:	09b3      	lsrs	r3, r6, #6
  405496:	f103 0039 	add.w	r0, r3, #57	; 0x39
  40549a:	f103 0e38 	add.w	lr, r3, #56	; 0x38
  40549e:	00c3      	lsls	r3, r0, #3
  4054a0:	4fbf      	ldr	r7, [pc, #764]	; (4057a0 <_malloc_r+0x344>)
  4054a2:	443b      	add	r3, r7
  4054a4:	f1a3 0108 	sub.w	r1, r3, #8
  4054a8:	685c      	ldr	r4, [r3, #4]
  4054aa:	42a1      	cmp	r1, r4
  4054ac:	d106      	bne.n	4054bc <_malloc_r+0x60>
  4054ae:	e00c      	b.n	4054ca <_malloc_r+0x6e>
  4054b0:	2a00      	cmp	r2, #0
  4054b2:	f280 80aa 	bge.w	40560a <_malloc_r+0x1ae>
  4054b6:	68e4      	ldr	r4, [r4, #12]
  4054b8:	42a1      	cmp	r1, r4
  4054ba:	d006      	beq.n	4054ca <_malloc_r+0x6e>
  4054bc:	6863      	ldr	r3, [r4, #4]
  4054be:	f023 0303 	bic.w	r3, r3, #3
  4054c2:	1b9a      	subs	r2, r3, r6
  4054c4:	2a0f      	cmp	r2, #15
  4054c6:	ddf3      	ble.n	4054b0 <_malloc_r+0x54>
  4054c8:	4670      	mov	r0, lr
  4054ca:	693c      	ldr	r4, [r7, #16]
  4054cc:	f8df e2e4 	ldr.w	lr, [pc, #740]	; 4057b4 <_malloc_r+0x358>
  4054d0:	4574      	cmp	r4, lr
  4054d2:	f000 81ab 	beq.w	40582c <_malloc_r+0x3d0>
  4054d6:	6863      	ldr	r3, [r4, #4]
  4054d8:	f023 0303 	bic.w	r3, r3, #3
  4054dc:	1b9a      	subs	r2, r3, r6
  4054de:	2a0f      	cmp	r2, #15
  4054e0:	f300 8190 	bgt.w	405804 <_malloc_r+0x3a8>
  4054e4:	2a00      	cmp	r2, #0
  4054e6:	f8c7 e014 	str.w	lr, [r7, #20]
  4054ea:	f8c7 e010 	str.w	lr, [r7, #16]
  4054ee:	f280 809d 	bge.w	40562c <_malloc_r+0x1d0>
  4054f2:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
  4054f6:	f080 8161 	bcs.w	4057bc <_malloc_r+0x360>
  4054fa:	08db      	lsrs	r3, r3, #3
  4054fc:	f103 0c01 	add.w	ip, r3, #1
  405500:	1099      	asrs	r1, r3, #2
  405502:	687a      	ldr	r2, [r7, #4]
  405504:	f857 803c 	ldr.w	r8, [r7, ip, lsl #3]
  405508:	f8c4 8008 	str.w	r8, [r4, #8]
  40550c:	2301      	movs	r3, #1
  40550e:	408b      	lsls	r3, r1
  405510:	eb07 01cc 	add.w	r1, r7, ip, lsl #3
  405514:	4313      	orrs	r3, r2
  405516:	3908      	subs	r1, #8
  405518:	60e1      	str	r1, [r4, #12]
  40551a:	607b      	str	r3, [r7, #4]
  40551c:	f847 403c 	str.w	r4, [r7, ip, lsl #3]
  405520:	f8c8 400c 	str.w	r4, [r8, #12]
  405524:	1082      	asrs	r2, r0, #2
  405526:	2401      	movs	r4, #1
  405528:	4094      	lsls	r4, r2
  40552a:	429c      	cmp	r4, r3
  40552c:	f200 808b 	bhi.w	405646 <_malloc_r+0x1ea>
  405530:	421c      	tst	r4, r3
  405532:	d106      	bne.n	405542 <_malloc_r+0xe6>
  405534:	f020 0003 	bic.w	r0, r0, #3
  405538:	0064      	lsls	r4, r4, #1
  40553a:	421c      	tst	r4, r3
  40553c:	f100 0004 	add.w	r0, r0, #4
  405540:	d0fa      	beq.n	405538 <_malloc_r+0xdc>
  405542:	eb07 09c0 	add.w	r9, r7, r0, lsl #3
  405546:	46cc      	mov	ip, r9
  405548:	4680      	mov	r8, r0
  40554a:	f8dc 300c 	ldr.w	r3, [ip, #12]
  40554e:	459c      	cmp	ip, r3
  405550:	d107      	bne.n	405562 <_malloc_r+0x106>
  405552:	e16d      	b.n	405830 <_malloc_r+0x3d4>
  405554:	2a00      	cmp	r2, #0
  405556:	f280 817b 	bge.w	405850 <_malloc_r+0x3f4>
  40555a:	68db      	ldr	r3, [r3, #12]
  40555c:	459c      	cmp	ip, r3
  40555e:	f000 8167 	beq.w	405830 <_malloc_r+0x3d4>
  405562:	6859      	ldr	r1, [r3, #4]
  405564:	f021 0103 	bic.w	r1, r1, #3
  405568:	1b8a      	subs	r2, r1, r6
  40556a:	2a0f      	cmp	r2, #15
  40556c:	ddf2      	ble.n	405554 <_malloc_r+0xf8>
  40556e:	f8d3 c00c 	ldr.w	ip, [r3, #12]
  405572:	f8d3 8008 	ldr.w	r8, [r3, #8]
  405576:	9300      	str	r3, [sp, #0]
  405578:	199c      	adds	r4, r3, r6
  40557a:	4628      	mov	r0, r5
  40557c:	f046 0601 	orr.w	r6, r6, #1
  405580:	f042 0501 	orr.w	r5, r2, #1
  405584:	605e      	str	r6, [r3, #4]
  405586:	f8c8 c00c 	str.w	ip, [r8, #12]
  40558a:	f8cc 8008 	str.w	r8, [ip, #8]
  40558e:	617c      	str	r4, [r7, #20]
  405590:	613c      	str	r4, [r7, #16]
  405592:	f8c4 e00c 	str.w	lr, [r4, #12]
  405596:	f8c4 e008 	str.w	lr, [r4, #8]
  40559a:	6065      	str	r5, [r4, #4]
  40559c:	505a      	str	r2, [r3, r1]
  40559e:	f000 fafb 	bl	405b98 <__malloc_unlock>
  4055a2:	9b00      	ldr	r3, [sp, #0]
  4055a4:	f103 0408 	add.w	r4, r3, #8
  4055a8:	e01e      	b.n	4055e8 <_malloc_r+0x18c>
  4055aa:	2910      	cmp	r1, #16
  4055ac:	d820      	bhi.n	4055f0 <_malloc_r+0x194>
  4055ae:	f000 faf1 	bl	405b94 <__malloc_lock>
  4055b2:	2610      	movs	r6, #16
  4055b4:	2318      	movs	r3, #24
  4055b6:	2002      	movs	r0, #2
  4055b8:	4f79      	ldr	r7, [pc, #484]	; (4057a0 <_malloc_r+0x344>)
  4055ba:	443b      	add	r3, r7
  4055bc:	f1a3 0208 	sub.w	r2, r3, #8
  4055c0:	685c      	ldr	r4, [r3, #4]
  4055c2:	4294      	cmp	r4, r2
  4055c4:	f000 813d 	beq.w	405842 <_malloc_r+0x3e6>
  4055c8:	6863      	ldr	r3, [r4, #4]
  4055ca:	68e1      	ldr	r1, [r4, #12]
  4055cc:	68a6      	ldr	r6, [r4, #8]
  4055ce:	f023 0303 	bic.w	r3, r3, #3
  4055d2:	4423      	add	r3, r4
  4055d4:	4628      	mov	r0, r5
  4055d6:	685a      	ldr	r2, [r3, #4]
  4055d8:	60f1      	str	r1, [r6, #12]
  4055da:	f042 0201 	orr.w	r2, r2, #1
  4055de:	608e      	str	r6, [r1, #8]
  4055e0:	605a      	str	r2, [r3, #4]
  4055e2:	f000 fad9 	bl	405b98 <__malloc_unlock>
  4055e6:	3408      	adds	r4, #8
  4055e8:	4620      	mov	r0, r4
  4055ea:	b003      	add	sp, #12
  4055ec:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  4055f0:	2400      	movs	r4, #0
  4055f2:	230c      	movs	r3, #12
  4055f4:	4620      	mov	r0, r4
  4055f6:	602b      	str	r3, [r5, #0]
  4055f8:	b003      	add	sp, #12
  4055fa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  4055fe:	2040      	movs	r0, #64	; 0x40
  405600:	f44f 7300 	mov.w	r3, #512	; 0x200
  405604:	f04f 0e3f 	mov.w	lr, #63	; 0x3f
  405608:	e74a      	b.n	4054a0 <_malloc_r+0x44>
  40560a:	4423      	add	r3, r4
  40560c:	68e1      	ldr	r1, [r4, #12]
  40560e:	685a      	ldr	r2, [r3, #4]
  405610:	68a6      	ldr	r6, [r4, #8]
  405612:	f042 0201 	orr.w	r2, r2, #1
  405616:	60f1      	str	r1, [r6, #12]
  405618:	4628      	mov	r0, r5
  40561a:	608e      	str	r6, [r1, #8]
  40561c:	605a      	str	r2, [r3, #4]
  40561e:	f000 fabb 	bl	405b98 <__malloc_unlock>
  405622:	3408      	adds	r4, #8
  405624:	4620      	mov	r0, r4
  405626:	b003      	add	sp, #12
  405628:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  40562c:	4423      	add	r3, r4
  40562e:	4628      	mov	r0, r5
  405630:	685a      	ldr	r2, [r3, #4]
  405632:	f042 0201 	orr.w	r2, r2, #1
  405636:	605a      	str	r2, [r3, #4]
  405638:	f000 faae 	bl	405b98 <__malloc_unlock>
  40563c:	3408      	adds	r4, #8
  40563e:	4620      	mov	r0, r4
  405640:	b003      	add	sp, #12
  405642:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  405646:	68bc      	ldr	r4, [r7, #8]
  405648:	6863      	ldr	r3, [r4, #4]
  40564a:	f023 0803 	bic.w	r8, r3, #3
  40564e:	45b0      	cmp	r8, r6
  405650:	d304      	bcc.n	40565c <_malloc_r+0x200>
  405652:	eba8 0306 	sub.w	r3, r8, r6
  405656:	2b0f      	cmp	r3, #15
  405658:	f300 8085 	bgt.w	405766 <_malloc_r+0x30a>
  40565c:	f8df 9158 	ldr.w	r9, [pc, #344]	; 4057b8 <_malloc_r+0x35c>
  405660:	4b50      	ldr	r3, [pc, #320]	; (4057a4 <_malloc_r+0x348>)
  405662:	f8d9 2000 	ldr.w	r2, [r9]
  405666:	681b      	ldr	r3, [r3, #0]
  405668:	3201      	adds	r2, #1
  40566a:	4433      	add	r3, r6
  40566c:	eb04 0a08 	add.w	sl, r4, r8
  405670:	f000 8155 	beq.w	40591e <_malloc_r+0x4c2>
  405674:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
  405678:	330f      	adds	r3, #15
  40567a:	f423 6b7f 	bic.w	fp, r3, #4080	; 0xff0
  40567e:	f02b 0b0f 	bic.w	fp, fp, #15
  405682:	4659      	mov	r1, fp
  405684:	4628      	mov	r0, r5
  405686:	f000 fd83 	bl	406190 <_sbrk_r>
  40568a:	1c41      	adds	r1, r0, #1
  40568c:	4602      	mov	r2, r0
  40568e:	f000 80fc 	beq.w	40588a <_malloc_r+0x42e>
  405692:	4582      	cmp	sl, r0
  405694:	f200 80f7 	bhi.w	405886 <_malloc_r+0x42a>
  405698:	4b43      	ldr	r3, [pc, #268]	; (4057a8 <_malloc_r+0x34c>)
  40569a:	6819      	ldr	r1, [r3, #0]
  40569c:	4459      	add	r1, fp
  40569e:	6019      	str	r1, [r3, #0]
  4056a0:	f000 814d 	beq.w	40593e <_malloc_r+0x4e2>
  4056a4:	f8d9 0000 	ldr.w	r0, [r9]
  4056a8:	3001      	adds	r0, #1
  4056aa:	bf1b      	ittet	ne
  4056ac:	eba2 0a0a 	subne.w	sl, r2, sl
  4056b0:	4451      	addne	r1, sl
  4056b2:	f8c9 2000 	streq.w	r2, [r9]
  4056b6:	6019      	strne	r1, [r3, #0]
  4056b8:	f012 0107 	ands.w	r1, r2, #7
  4056bc:	f000 8115 	beq.w	4058ea <_malloc_r+0x48e>
  4056c0:	f1c1 0008 	rsb	r0, r1, #8
  4056c4:	f5c1 5180 	rsb	r1, r1, #4096	; 0x1000
  4056c8:	4402      	add	r2, r0
  4056ca:	3108      	adds	r1, #8
  4056cc:	eb02 090b 	add.w	r9, r2, fp
  4056d0:	f3c9 090b 	ubfx	r9, r9, #0, #12
  4056d4:	eba1 0909 	sub.w	r9, r1, r9
  4056d8:	4649      	mov	r1, r9
  4056da:	4628      	mov	r0, r5
  4056dc:	9301      	str	r3, [sp, #4]
  4056de:	9200      	str	r2, [sp, #0]
  4056e0:	f000 fd56 	bl	406190 <_sbrk_r>
  4056e4:	1c43      	adds	r3, r0, #1
  4056e6:	e89d 000c 	ldmia.w	sp, {r2, r3}
  4056ea:	f000 8143 	beq.w	405974 <_malloc_r+0x518>
  4056ee:	1a80      	subs	r0, r0, r2
  4056f0:	4448      	add	r0, r9
  4056f2:	f040 0001 	orr.w	r0, r0, #1
  4056f6:	6819      	ldr	r1, [r3, #0]
  4056f8:	60ba      	str	r2, [r7, #8]
  4056fa:	4449      	add	r1, r9
  4056fc:	42bc      	cmp	r4, r7
  4056fe:	6050      	str	r0, [r2, #4]
  405700:	6019      	str	r1, [r3, #0]
  405702:	d017      	beq.n	405734 <_malloc_r+0x2d8>
  405704:	f1b8 0f0f 	cmp.w	r8, #15
  405708:	f240 80fb 	bls.w	405902 <_malloc_r+0x4a6>
  40570c:	6860      	ldr	r0, [r4, #4]
  40570e:	f1a8 020c 	sub.w	r2, r8, #12
  405712:	f022 0207 	bic.w	r2, r2, #7
  405716:	eb04 0e02 	add.w	lr, r4, r2
  40571a:	f000 0001 	and.w	r0, r0, #1
  40571e:	f04f 0c05 	mov.w	ip, #5
  405722:	4310      	orrs	r0, r2
  405724:	2a0f      	cmp	r2, #15
  405726:	6060      	str	r0, [r4, #4]
  405728:	f8ce c004 	str.w	ip, [lr, #4]
  40572c:	f8ce c008 	str.w	ip, [lr, #8]
  405730:	f200 8117 	bhi.w	405962 <_malloc_r+0x506>
  405734:	4b1d      	ldr	r3, [pc, #116]	; (4057ac <_malloc_r+0x350>)
  405736:	68bc      	ldr	r4, [r7, #8]
  405738:	681a      	ldr	r2, [r3, #0]
  40573a:	4291      	cmp	r1, r2
  40573c:	bf88      	it	hi
  40573e:	6019      	strhi	r1, [r3, #0]
  405740:	4b1b      	ldr	r3, [pc, #108]	; (4057b0 <_malloc_r+0x354>)
  405742:	681a      	ldr	r2, [r3, #0]
  405744:	4291      	cmp	r1, r2
  405746:	6862      	ldr	r2, [r4, #4]
  405748:	bf88      	it	hi
  40574a:	6019      	strhi	r1, [r3, #0]
  40574c:	f022 0203 	bic.w	r2, r2, #3
  405750:	4296      	cmp	r6, r2
  405752:	eba2 0306 	sub.w	r3, r2, r6
  405756:	d801      	bhi.n	40575c <_malloc_r+0x300>
  405758:	2b0f      	cmp	r3, #15
  40575a:	dc04      	bgt.n	405766 <_malloc_r+0x30a>
  40575c:	4628      	mov	r0, r5
  40575e:	f000 fa1b 	bl	405b98 <__malloc_unlock>
  405762:	2400      	movs	r4, #0
  405764:	e740      	b.n	4055e8 <_malloc_r+0x18c>
  405766:	19a2      	adds	r2, r4, r6
  405768:	f043 0301 	orr.w	r3, r3, #1
  40576c:	f046 0601 	orr.w	r6, r6, #1
  405770:	6066      	str	r6, [r4, #4]
  405772:	4628      	mov	r0, r5
  405774:	60ba      	str	r2, [r7, #8]
  405776:	6053      	str	r3, [r2, #4]
  405778:	f000 fa0e 	bl	405b98 <__malloc_unlock>
  40577c:	3408      	adds	r4, #8
  40577e:	4620      	mov	r0, r4
  405780:	b003      	add	sp, #12
  405782:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  405786:	2b14      	cmp	r3, #20
  405788:	d971      	bls.n	40586e <_malloc_r+0x412>
  40578a:	2b54      	cmp	r3, #84	; 0x54
  40578c:	f200 80a3 	bhi.w	4058d6 <_malloc_r+0x47a>
  405790:	0b33      	lsrs	r3, r6, #12
  405792:	f103 006f 	add.w	r0, r3, #111	; 0x6f
  405796:	f103 0e6e 	add.w	lr, r3, #110	; 0x6e
  40579a:	00c3      	lsls	r3, r0, #3
  40579c:	e680      	b.n	4054a0 <_malloc_r+0x44>
  40579e:	bf00      	nop
  4057a0:	20000470 	.word	0x20000470
  4057a4:	20000e88 	.word	0x20000e88
  4057a8:	20000e58 	.word	0x20000e58
  4057ac:	20000e80 	.word	0x20000e80
  4057b0:	20000e84 	.word	0x20000e84
  4057b4:	20000478 	.word	0x20000478
  4057b8:	20000878 	.word	0x20000878
  4057bc:	0a5a      	lsrs	r2, r3, #9
  4057be:	2a04      	cmp	r2, #4
  4057c0:	d95b      	bls.n	40587a <_malloc_r+0x41e>
  4057c2:	2a14      	cmp	r2, #20
  4057c4:	f200 80ae 	bhi.w	405924 <_malloc_r+0x4c8>
  4057c8:	f102 015c 	add.w	r1, r2, #92	; 0x5c
  4057cc:	00c9      	lsls	r1, r1, #3
  4057ce:	325b      	adds	r2, #91	; 0x5b
  4057d0:	eb07 0c01 	add.w	ip, r7, r1
  4057d4:	5879      	ldr	r1, [r7, r1]
  4057d6:	f1ac 0c08 	sub.w	ip, ip, #8
  4057da:	458c      	cmp	ip, r1
  4057dc:	f000 8088 	beq.w	4058f0 <_malloc_r+0x494>
  4057e0:	684a      	ldr	r2, [r1, #4]
  4057e2:	f022 0203 	bic.w	r2, r2, #3
  4057e6:	4293      	cmp	r3, r2
  4057e8:	d273      	bcs.n	4058d2 <_malloc_r+0x476>
  4057ea:	6889      	ldr	r1, [r1, #8]
  4057ec:	458c      	cmp	ip, r1
  4057ee:	d1f7      	bne.n	4057e0 <_malloc_r+0x384>
  4057f0:	f8dc 200c 	ldr.w	r2, [ip, #12]
  4057f4:	687b      	ldr	r3, [r7, #4]
  4057f6:	60e2      	str	r2, [r4, #12]
  4057f8:	f8c4 c008 	str.w	ip, [r4, #8]
  4057fc:	6094      	str	r4, [r2, #8]
  4057fe:	f8cc 400c 	str.w	r4, [ip, #12]
  405802:	e68f      	b.n	405524 <_malloc_r+0xc8>
  405804:	19a1      	adds	r1, r4, r6
  405806:	f046 0c01 	orr.w	ip, r6, #1
  40580a:	f042 0601 	orr.w	r6, r2, #1
  40580e:	f8c4 c004 	str.w	ip, [r4, #4]
  405812:	4628      	mov	r0, r5
  405814:	6179      	str	r1, [r7, #20]
  405816:	6139      	str	r1, [r7, #16]
  405818:	f8c1 e00c 	str.w	lr, [r1, #12]
  40581c:	f8c1 e008 	str.w	lr, [r1, #8]
  405820:	604e      	str	r6, [r1, #4]
  405822:	50e2      	str	r2, [r4, r3]
  405824:	f000 f9b8 	bl	405b98 <__malloc_unlock>
  405828:	3408      	adds	r4, #8
  40582a:	e6dd      	b.n	4055e8 <_malloc_r+0x18c>
  40582c:	687b      	ldr	r3, [r7, #4]
  40582e:	e679      	b.n	405524 <_malloc_r+0xc8>
  405830:	f108 0801 	add.w	r8, r8, #1
  405834:	f018 0f03 	tst.w	r8, #3
  405838:	f10c 0c08 	add.w	ip, ip, #8
  40583c:	f47f ae85 	bne.w	40554a <_malloc_r+0xee>
  405840:	e02d      	b.n	40589e <_malloc_r+0x442>
  405842:	68dc      	ldr	r4, [r3, #12]
  405844:	42a3      	cmp	r3, r4
  405846:	bf08      	it	eq
  405848:	3002      	addeq	r0, #2
  40584a:	f43f ae3e 	beq.w	4054ca <_malloc_r+0x6e>
  40584e:	e6bb      	b.n	4055c8 <_malloc_r+0x16c>
  405850:	4419      	add	r1, r3
  405852:	461c      	mov	r4, r3
  405854:	684a      	ldr	r2, [r1, #4]
  405856:	68db      	ldr	r3, [r3, #12]
  405858:	f854 6f08 	ldr.w	r6, [r4, #8]!
  40585c:	f042 0201 	orr.w	r2, r2, #1
  405860:	604a      	str	r2, [r1, #4]
  405862:	4628      	mov	r0, r5
  405864:	60f3      	str	r3, [r6, #12]
  405866:	609e      	str	r6, [r3, #8]
  405868:	f000 f996 	bl	405b98 <__malloc_unlock>
  40586c:	e6bc      	b.n	4055e8 <_malloc_r+0x18c>
  40586e:	f103 005c 	add.w	r0, r3, #92	; 0x5c
  405872:	f103 0e5b 	add.w	lr, r3, #91	; 0x5b
  405876:	00c3      	lsls	r3, r0, #3
  405878:	e612      	b.n	4054a0 <_malloc_r+0x44>
  40587a:	099a      	lsrs	r2, r3, #6
  40587c:	f102 0139 	add.w	r1, r2, #57	; 0x39
  405880:	00c9      	lsls	r1, r1, #3
  405882:	3238      	adds	r2, #56	; 0x38
  405884:	e7a4      	b.n	4057d0 <_malloc_r+0x374>
  405886:	42bc      	cmp	r4, r7
  405888:	d054      	beq.n	405934 <_malloc_r+0x4d8>
  40588a:	68bc      	ldr	r4, [r7, #8]
  40588c:	6862      	ldr	r2, [r4, #4]
  40588e:	f022 0203 	bic.w	r2, r2, #3
  405892:	e75d      	b.n	405750 <_malloc_r+0x2f4>
  405894:	f859 3908 	ldr.w	r3, [r9], #-8
  405898:	4599      	cmp	r9, r3
  40589a:	f040 8086 	bne.w	4059aa <_malloc_r+0x54e>
  40589e:	f010 0f03 	tst.w	r0, #3
  4058a2:	f100 30ff 	add.w	r0, r0, #4294967295
  4058a6:	d1f5      	bne.n	405894 <_malloc_r+0x438>
  4058a8:	687b      	ldr	r3, [r7, #4]
  4058aa:	ea23 0304 	bic.w	r3, r3, r4
  4058ae:	607b      	str	r3, [r7, #4]
  4058b0:	0064      	lsls	r4, r4, #1
  4058b2:	429c      	cmp	r4, r3
  4058b4:	f63f aec7 	bhi.w	405646 <_malloc_r+0x1ea>
  4058b8:	2c00      	cmp	r4, #0
  4058ba:	f43f aec4 	beq.w	405646 <_malloc_r+0x1ea>
  4058be:	421c      	tst	r4, r3
  4058c0:	4640      	mov	r0, r8
  4058c2:	f47f ae3e 	bne.w	405542 <_malloc_r+0xe6>
  4058c6:	0064      	lsls	r4, r4, #1
  4058c8:	421c      	tst	r4, r3
  4058ca:	f100 0004 	add.w	r0, r0, #4
  4058ce:	d0fa      	beq.n	4058c6 <_malloc_r+0x46a>
  4058d0:	e637      	b.n	405542 <_malloc_r+0xe6>
  4058d2:	468c      	mov	ip, r1
  4058d4:	e78c      	b.n	4057f0 <_malloc_r+0x394>
  4058d6:	f5b3 7faa 	cmp.w	r3, #340	; 0x154
  4058da:	d815      	bhi.n	405908 <_malloc_r+0x4ac>
  4058dc:	0bf3      	lsrs	r3, r6, #15
  4058de:	f103 0078 	add.w	r0, r3, #120	; 0x78
  4058e2:	f103 0e77 	add.w	lr, r3, #119	; 0x77
  4058e6:	00c3      	lsls	r3, r0, #3
  4058e8:	e5da      	b.n	4054a0 <_malloc_r+0x44>
  4058ea:	f44f 5180 	mov.w	r1, #4096	; 0x1000
  4058ee:	e6ed      	b.n	4056cc <_malloc_r+0x270>
  4058f0:	687b      	ldr	r3, [r7, #4]
  4058f2:	1092      	asrs	r2, r2, #2
  4058f4:	2101      	movs	r1, #1
  4058f6:	fa01 f202 	lsl.w	r2, r1, r2
  4058fa:	4313      	orrs	r3, r2
  4058fc:	607b      	str	r3, [r7, #4]
  4058fe:	4662      	mov	r2, ip
  405900:	e779      	b.n	4057f6 <_malloc_r+0x39a>
  405902:	2301      	movs	r3, #1
  405904:	6053      	str	r3, [r2, #4]
  405906:	e729      	b.n	40575c <_malloc_r+0x300>
  405908:	f240 5254 	movw	r2, #1364	; 0x554
  40590c:	4293      	cmp	r3, r2
  40590e:	d822      	bhi.n	405956 <_malloc_r+0x4fa>
  405910:	0cb3      	lsrs	r3, r6, #18
  405912:	f103 007d 	add.w	r0, r3, #125	; 0x7d
  405916:	f103 0e7c 	add.w	lr, r3, #124	; 0x7c
  40591a:	00c3      	lsls	r3, r0, #3
  40591c:	e5c0      	b.n	4054a0 <_malloc_r+0x44>
  40591e:	f103 0b10 	add.w	fp, r3, #16
  405922:	e6ae      	b.n	405682 <_malloc_r+0x226>
  405924:	2a54      	cmp	r2, #84	; 0x54
  405926:	d829      	bhi.n	40597c <_malloc_r+0x520>
  405928:	0b1a      	lsrs	r2, r3, #12
  40592a:	f102 016f 	add.w	r1, r2, #111	; 0x6f
  40592e:	00c9      	lsls	r1, r1, #3
  405930:	326e      	adds	r2, #110	; 0x6e
  405932:	e74d      	b.n	4057d0 <_malloc_r+0x374>
  405934:	4b20      	ldr	r3, [pc, #128]	; (4059b8 <_malloc_r+0x55c>)
  405936:	6819      	ldr	r1, [r3, #0]
  405938:	4459      	add	r1, fp
  40593a:	6019      	str	r1, [r3, #0]
  40593c:	e6b2      	b.n	4056a4 <_malloc_r+0x248>
  40593e:	f3ca 000b 	ubfx	r0, sl, #0, #12
  405942:	2800      	cmp	r0, #0
  405944:	f47f aeae 	bne.w	4056a4 <_malloc_r+0x248>
  405948:	eb08 030b 	add.w	r3, r8, fp
  40594c:	68ba      	ldr	r2, [r7, #8]
  40594e:	f043 0301 	orr.w	r3, r3, #1
  405952:	6053      	str	r3, [r2, #4]
  405954:	e6ee      	b.n	405734 <_malloc_r+0x2d8>
  405956:	207f      	movs	r0, #127	; 0x7f
  405958:	f44f 737e 	mov.w	r3, #1016	; 0x3f8
  40595c:	f04f 0e7e 	mov.w	lr, #126	; 0x7e
  405960:	e59e      	b.n	4054a0 <_malloc_r+0x44>
  405962:	f104 0108 	add.w	r1, r4, #8
  405966:	4628      	mov	r0, r5
  405968:	9300      	str	r3, [sp, #0]
  40596a:	f7ff fc23 	bl	4051b4 <_free_r>
  40596e:	9b00      	ldr	r3, [sp, #0]
  405970:	6819      	ldr	r1, [r3, #0]
  405972:	e6df      	b.n	405734 <_malloc_r+0x2d8>
  405974:	2001      	movs	r0, #1
  405976:	f04f 0900 	mov.w	r9, #0
  40597a:	e6bc      	b.n	4056f6 <_malloc_r+0x29a>
  40597c:	f5b2 7faa 	cmp.w	r2, #340	; 0x154
  405980:	d805      	bhi.n	40598e <_malloc_r+0x532>
  405982:	0bda      	lsrs	r2, r3, #15
  405984:	f102 0178 	add.w	r1, r2, #120	; 0x78
  405988:	00c9      	lsls	r1, r1, #3
  40598a:	3277      	adds	r2, #119	; 0x77
  40598c:	e720      	b.n	4057d0 <_malloc_r+0x374>
  40598e:	f240 5154 	movw	r1, #1364	; 0x554
  405992:	428a      	cmp	r2, r1
  405994:	d805      	bhi.n	4059a2 <_malloc_r+0x546>
  405996:	0c9a      	lsrs	r2, r3, #18
  405998:	f102 017d 	add.w	r1, r2, #125	; 0x7d
  40599c:	00c9      	lsls	r1, r1, #3
  40599e:	327c      	adds	r2, #124	; 0x7c
  4059a0:	e716      	b.n	4057d0 <_malloc_r+0x374>
  4059a2:	f44f 717e 	mov.w	r1, #1016	; 0x3f8
  4059a6:	227e      	movs	r2, #126	; 0x7e
  4059a8:	e712      	b.n	4057d0 <_malloc_r+0x374>
  4059aa:	687b      	ldr	r3, [r7, #4]
  4059ac:	e780      	b.n	4058b0 <_malloc_r+0x454>
  4059ae:	08f0      	lsrs	r0, r6, #3
  4059b0:	f106 0308 	add.w	r3, r6, #8
  4059b4:	e600      	b.n	4055b8 <_malloc_r+0x15c>
  4059b6:	bf00      	nop
  4059b8:	20000e58 	.word	0x20000e58
  4059bc:	00000000 	.word	0x00000000

004059c0 <memchr>:
  4059c0:	f001 01ff 	and.w	r1, r1, #255	; 0xff
  4059c4:	2a10      	cmp	r2, #16
  4059c6:	db2b      	blt.n	405a20 <memchr+0x60>
  4059c8:	f010 0f07 	tst.w	r0, #7
  4059cc:	d008      	beq.n	4059e0 <memchr+0x20>
  4059ce:	f810 3b01 	ldrb.w	r3, [r0], #1
  4059d2:	3a01      	subs	r2, #1
  4059d4:	428b      	cmp	r3, r1
  4059d6:	d02d      	beq.n	405a34 <memchr+0x74>
  4059d8:	f010 0f07 	tst.w	r0, #7
  4059dc:	b342      	cbz	r2, 405a30 <memchr+0x70>
  4059de:	d1f6      	bne.n	4059ce <memchr+0xe>
  4059e0:	b4f0      	push	{r4, r5, r6, r7}
  4059e2:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
  4059e6:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
  4059ea:	f022 0407 	bic.w	r4, r2, #7
  4059ee:	f07f 0700 	mvns.w	r7, #0
  4059f2:	2300      	movs	r3, #0
  4059f4:	e8f0 5602 	ldrd	r5, r6, [r0], #8
  4059f8:	3c08      	subs	r4, #8
  4059fa:	ea85 0501 	eor.w	r5, r5, r1
  4059fe:	ea86 0601 	eor.w	r6, r6, r1
  405a02:	fa85 f547 	uadd8	r5, r5, r7
  405a06:	faa3 f587 	sel	r5, r3, r7
  405a0a:	fa86 f647 	uadd8	r6, r6, r7
  405a0e:	faa5 f687 	sel	r6, r5, r7
  405a12:	b98e      	cbnz	r6, 405a38 <memchr+0x78>
  405a14:	d1ee      	bne.n	4059f4 <memchr+0x34>
  405a16:	bcf0      	pop	{r4, r5, r6, r7}
  405a18:	f001 01ff 	and.w	r1, r1, #255	; 0xff
  405a1c:	f002 0207 	and.w	r2, r2, #7
  405a20:	b132      	cbz	r2, 405a30 <memchr+0x70>
  405a22:	f810 3b01 	ldrb.w	r3, [r0], #1
  405a26:	3a01      	subs	r2, #1
  405a28:	ea83 0301 	eor.w	r3, r3, r1
  405a2c:	b113      	cbz	r3, 405a34 <memchr+0x74>
  405a2e:	d1f8      	bne.n	405a22 <memchr+0x62>
  405a30:	2000      	movs	r0, #0
  405a32:	4770      	bx	lr
  405a34:	3801      	subs	r0, #1
  405a36:	4770      	bx	lr
  405a38:	2d00      	cmp	r5, #0
  405a3a:	bf06      	itte	eq
  405a3c:	4635      	moveq	r5, r6
  405a3e:	3803      	subeq	r0, #3
  405a40:	3807      	subne	r0, #7
  405a42:	f015 0f01 	tst.w	r5, #1
  405a46:	d107      	bne.n	405a58 <memchr+0x98>
  405a48:	3001      	adds	r0, #1
  405a4a:	f415 7f80 	tst.w	r5, #256	; 0x100
  405a4e:	bf02      	ittt	eq
  405a50:	3001      	addeq	r0, #1
  405a52:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
  405a56:	3001      	addeq	r0, #1
  405a58:	bcf0      	pop	{r4, r5, r6, r7}
  405a5a:	3801      	subs	r0, #1
  405a5c:	4770      	bx	lr
  405a5e:	bf00      	nop

00405a60 <memcpy>:
  405a60:	4684      	mov	ip, r0
  405a62:	ea41 0300 	orr.w	r3, r1, r0
  405a66:	f013 0303 	ands.w	r3, r3, #3
  405a6a:	d16d      	bne.n	405b48 <memcpy+0xe8>
  405a6c:	3a40      	subs	r2, #64	; 0x40
  405a6e:	d341      	bcc.n	405af4 <memcpy+0x94>
  405a70:	f851 3b04 	ldr.w	r3, [r1], #4
  405a74:	f840 3b04 	str.w	r3, [r0], #4
  405a78:	f851 3b04 	ldr.w	r3, [r1], #4
  405a7c:	f840 3b04 	str.w	r3, [r0], #4
  405a80:	f851 3b04 	ldr.w	r3, [r1], #4
  405a84:	f840 3b04 	str.w	r3, [r0], #4
  405a88:	f851 3b04 	ldr.w	r3, [r1], #4
  405a8c:	f840 3b04 	str.w	r3, [r0], #4
  405a90:	f851 3b04 	ldr.w	r3, [r1], #4
  405a94:	f840 3b04 	str.w	r3, [r0], #4
  405a98:	f851 3b04 	ldr.w	r3, [r1], #4
  405a9c:	f840 3b04 	str.w	r3, [r0], #4
  405aa0:	f851 3b04 	ldr.w	r3, [r1], #4
  405aa4:	f840 3b04 	str.w	r3, [r0], #4
  405aa8:	f851 3b04 	ldr.w	r3, [r1], #4
  405aac:	f840 3b04 	str.w	r3, [r0], #4
  405ab0:	f851 3b04 	ldr.w	r3, [r1], #4
  405ab4:	f840 3b04 	str.w	r3, [r0], #4
  405ab8:	f851 3b04 	ldr.w	r3, [r1], #4
  405abc:	f840 3b04 	str.w	r3, [r0], #4
  405ac0:	f851 3b04 	ldr.w	r3, [r1], #4
  405ac4:	f840 3b04 	str.w	r3, [r0], #4
  405ac8:	f851 3b04 	ldr.w	r3, [r1], #4
  405acc:	f840 3b04 	str.w	r3, [r0], #4
  405ad0:	f851 3b04 	ldr.w	r3, [r1], #4
  405ad4:	f840 3b04 	str.w	r3, [r0], #4
  405ad8:	f851 3b04 	ldr.w	r3, [r1], #4
  405adc:	f840 3b04 	str.w	r3, [r0], #4
  405ae0:	f851 3b04 	ldr.w	r3, [r1], #4
  405ae4:	f840 3b04 	str.w	r3, [r0], #4
  405ae8:	f851 3b04 	ldr.w	r3, [r1], #4
  405aec:	f840 3b04 	str.w	r3, [r0], #4
  405af0:	3a40      	subs	r2, #64	; 0x40
  405af2:	d2bd      	bcs.n	405a70 <memcpy+0x10>
  405af4:	3230      	adds	r2, #48	; 0x30
  405af6:	d311      	bcc.n	405b1c <memcpy+0xbc>
  405af8:	f851 3b04 	ldr.w	r3, [r1], #4
  405afc:	f840 3b04 	str.w	r3, [r0], #4
  405b00:	f851 3b04 	ldr.w	r3, [r1], #4
  405b04:	f840 3b04 	str.w	r3, [r0], #4
  405b08:	f851 3b04 	ldr.w	r3, [r1], #4
  405b0c:	f840 3b04 	str.w	r3, [r0], #4
  405b10:	f851 3b04 	ldr.w	r3, [r1], #4
  405b14:	f840 3b04 	str.w	r3, [r0], #4
  405b18:	3a10      	subs	r2, #16
  405b1a:	d2ed      	bcs.n	405af8 <memcpy+0x98>
  405b1c:	320c      	adds	r2, #12
  405b1e:	d305      	bcc.n	405b2c <memcpy+0xcc>
  405b20:	f851 3b04 	ldr.w	r3, [r1], #4
  405b24:	f840 3b04 	str.w	r3, [r0], #4
  405b28:	3a04      	subs	r2, #4
  405b2a:	d2f9      	bcs.n	405b20 <memcpy+0xc0>
  405b2c:	3204      	adds	r2, #4
  405b2e:	d008      	beq.n	405b42 <memcpy+0xe2>
  405b30:	07d2      	lsls	r2, r2, #31
  405b32:	bf1c      	itt	ne
  405b34:	f811 3b01 	ldrbne.w	r3, [r1], #1
  405b38:	f800 3b01 	strbne.w	r3, [r0], #1
  405b3c:	d301      	bcc.n	405b42 <memcpy+0xe2>
  405b3e:	880b      	ldrh	r3, [r1, #0]
  405b40:	8003      	strh	r3, [r0, #0]
  405b42:	4660      	mov	r0, ip
  405b44:	4770      	bx	lr
  405b46:	bf00      	nop
  405b48:	2a08      	cmp	r2, #8
  405b4a:	d313      	bcc.n	405b74 <memcpy+0x114>
  405b4c:	078b      	lsls	r3, r1, #30
  405b4e:	d08d      	beq.n	405a6c <memcpy+0xc>
  405b50:	f010 0303 	ands.w	r3, r0, #3
  405b54:	d08a      	beq.n	405a6c <memcpy+0xc>
  405b56:	f1c3 0304 	rsb	r3, r3, #4
  405b5a:	1ad2      	subs	r2, r2, r3
  405b5c:	07db      	lsls	r3, r3, #31
  405b5e:	bf1c      	itt	ne
  405b60:	f811 3b01 	ldrbne.w	r3, [r1], #1
  405b64:	f800 3b01 	strbne.w	r3, [r0], #1
  405b68:	d380      	bcc.n	405a6c <memcpy+0xc>
  405b6a:	f831 3b02 	ldrh.w	r3, [r1], #2
  405b6e:	f820 3b02 	strh.w	r3, [r0], #2
  405b72:	e77b      	b.n	405a6c <memcpy+0xc>
  405b74:	3a04      	subs	r2, #4
  405b76:	d3d9      	bcc.n	405b2c <memcpy+0xcc>
  405b78:	3a01      	subs	r2, #1
  405b7a:	f811 3b01 	ldrb.w	r3, [r1], #1
  405b7e:	f800 3b01 	strb.w	r3, [r0], #1
  405b82:	d2f9      	bcs.n	405b78 <memcpy+0x118>
  405b84:	780b      	ldrb	r3, [r1, #0]
  405b86:	7003      	strb	r3, [r0, #0]
  405b88:	784b      	ldrb	r3, [r1, #1]
  405b8a:	7043      	strb	r3, [r0, #1]
  405b8c:	788b      	ldrb	r3, [r1, #2]
  405b8e:	7083      	strb	r3, [r0, #2]
  405b90:	4660      	mov	r0, ip
  405b92:	4770      	bx	lr

00405b94 <__malloc_lock>:
  405b94:	4770      	bx	lr
  405b96:	bf00      	nop

00405b98 <__malloc_unlock>:
  405b98:	4770      	bx	lr
  405b9a:	bf00      	nop

00405b9c <_Balloc>:
  405b9c:	6cc3      	ldr	r3, [r0, #76]	; 0x4c
  405b9e:	b570      	push	{r4, r5, r6, lr}
  405ba0:	4605      	mov	r5, r0
  405ba2:	460c      	mov	r4, r1
  405ba4:	b14b      	cbz	r3, 405bba <_Balloc+0x1e>
  405ba6:	f853 0024 	ldr.w	r0, [r3, r4, lsl #2]
  405baa:	b180      	cbz	r0, 405bce <_Balloc+0x32>
  405bac:	6802      	ldr	r2, [r0, #0]
  405bae:	f843 2024 	str.w	r2, [r3, r4, lsl #2]
  405bb2:	2300      	movs	r3, #0
  405bb4:	6103      	str	r3, [r0, #16]
  405bb6:	60c3      	str	r3, [r0, #12]
  405bb8:	bd70      	pop	{r4, r5, r6, pc}
  405bba:	2221      	movs	r2, #33	; 0x21
  405bbc:	2104      	movs	r1, #4
  405bbe:	f000 fc93 	bl	4064e8 <_calloc_r>
  405bc2:	64e8      	str	r0, [r5, #76]	; 0x4c
  405bc4:	4603      	mov	r3, r0
  405bc6:	2800      	cmp	r0, #0
  405bc8:	d1ed      	bne.n	405ba6 <_Balloc+0xa>
  405bca:	2000      	movs	r0, #0
  405bcc:	bd70      	pop	{r4, r5, r6, pc}
  405bce:	2101      	movs	r1, #1
  405bd0:	fa01 f604 	lsl.w	r6, r1, r4
  405bd4:	1d72      	adds	r2, r6, #5
  405bd6:	4628      	mov	r0, r5
  405bd8:	0092      	lsls	r2, r2, #2
  405bda:	f000 fc85 	bl	4064e8 <_calloc_r>
  405bde:	2800      	cmp	r0, #0
  405be0:	d0f3      	beq.n	405bca <_Balloc+0x2e>
  405be2:	6044      	str	r4, [r0, #4]
  405be4:	6086      	str	r6, [r0, #8]
  405be6:	e7e4      	b.n	405bb2 <_Balloc+0x16>

00405be8 <_Bfree>:
  405be8:	b131      	cbz	r1, 405bf8 <_Bfree+0x10>
  405bea:	6cc3      	ldr	r3, [r0, #76]	; 0x4c
  405bec:	684a      	ldr	r2, [r1, #4]
  405bee:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
  405bf2:	6008      	str	r0, [r1, #0]
  405bf4:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
  405bf8:	4770      	bx	lr
  405bfa:	bf00      	nop

00405bfc <__multadd>:
  405bfc:	b5f0      	push	{r4, r5, r6, r7, lr}
  405bfe:	690c      	ldr	r4, [r1, #16]
  405c00:	b083      	sub	sp, #12
  405c02:	460d      	mov	r5, r1
  405c04:	4606      	mov	r6, r0
  405c06:	f101 0e14 	add.w	lr, r1, #20
  405c0a:	2700      	movs	r7, #0
  405c0c:	f8de 0000 	ldr.w	r0, [lr]
  405c10:	b281      	uxth	r1, r0
  405c12:	fb02 3301 	mla	r3, r2, r1, r3
  405c16:	0c01      	lsrs	r1, r0, #16
  405c18:	0c18      	lsrs	r0, r3, #16
  405c1a:	fb02 0101 	mla	r1, r2, r1, r0
  405c1e:	b29b      	uxth	r3, r3
  405c20:	3701      	adds	r7, #1
  405c22:	eb03 4301 	add.w	r3, r3, r1, lsl #16
  405c26:	42bc      	cmp	r4, r7
  405c28:	f84e 3b04 	str.w	r3, [lr], #4
  405c2c:	ea4f 4311 	mov.w	r3, r1, lsr #16
  405c30:	dcec      	bgt.n	405c0c <__multadd+0x10>
  405c32:	b13b      	cbz	r3, 405c44 <__multadd+0x48>
  405c34:	68aa      	ldr	r2, [r5, #8]
  405c36:	4294      	cmp	r4, r2
  405c38:	da07      	bge.n	405c4a <__multadd+0x4e>
  405c3a:	eb05 0284 	add.w	r2, r5, r4, lsl #2
  405c3e:	3401      	adds	r4, #1
  405c40:	6153      	str	r3, [r2, #20]
  405c42:	612c      	str	r4, [r5, #16]
  405c44:	4628      	mov	r0, r5
  405c46:	b003      	add	sp, #12
  405c48:	bdf0      	pop	{r4, r5, r6, r7, pc}
  405c4a:	6869      	ldr	r1, [r5, #4]
  405c4c:	9301      	str	r3, [sp, #4]
  405c4e:	3101      	adds	r1, #1
  405c50:	4630      	mov	r0, r6
  405c52:	f7ff ffa3 	bl	405b9c <_Balloc>
  405c56:	692a      	ldr	r2, [r5, #16]
  405c58:	3202      	adds	r2, #2
  405c5a:	f105 010c 	add.w	r1, r5, #12
  405c5e:	4607      	mov	r7, r0
  405c60:	0092      	lsls	r2, r2, #2
  405c62:	300c      	adds	r0, #12
  405c64:	f7ff fefc 	bl	405a60 <memcpy>
  405c68:	6cf2      	ldr	r2, [r6, #76]	; 0x4c
  405c6a:	6869      	ldr	r1, [r5, #4]
  405c6c:	9b01      	ldr	r3, [sp, #4]
  405c6e:	f852 0021 	ldr.w	r0, [r2, r1, lsl #2]
  405c72:	6028      	str	r0, [r5, #0]
  405c74:	f842 5021 	str.w	r5, [r2, r1, lsl #2]
  405c78:	463d      	mov	r5, r7
  405c7a:	e7de      	b.n	405c3a <__multadd+0x3e>

00405c7c <__hi0bits>:
  405c7c:	0c02      	lsrs	r2, r0, #16
  405c7e:	0412      	lsls	r2, r2, #16
  405c80:	4603      	mov	r3, r0
  405c82:	b9b2      	cbnz	r2, 405cb2 <__hi0bits+0x36>
  405c84:	0403      	lsls	r3, r0, #16
  405c86:	2010      	movs	r0, #16
  405c88:	f013 4f7f 	tst.w	r3, #4278190080	; 0xff000000
  405c8c:	bf04      	itt	eq
  405c8e:	021b      	lsleq	r3, r3, #8
  405c90:	3008      	addeq	r0, #8
  405c92:	f013 4f70 	tst.w	r3, #4026531840	; 0xf0000000
  405c96:	bf04      	itt	eq
  405c98:	011b      	lsleq	r3, r3, #4
  405c9a:	3004      	addeq	r0, #4
  405c9c:	f013 4f40 	tst.w	r3, #3221225472	; 0xc0000000
  405ca0:	bf04      	itt	eq
  405ca2:	009b      	lsleq	r3, r3, #2
  405ca4:	3002      	addeq	r0, #2
  405ca6:	2b00      	cmp	r3, #0
  405ca8:	db02      	blt.n	405cb0 <__hi0bits+0x34>
  405caa:	005b      	lsls	r3, r3, #1
  405cac:	d403      	bmi.n	405cb6 <__hi0bits+0x3a>
  405cae:	2020      	movs	r0, #32
  405cb0:	4770      	bx	lr
  405cb2:	2000      	movs	r0, #0
  405cb4:	e7e8      	b.n	405c88 <__hi0bits+0xc>
  405cb6:	3001      	adds	r0, #1
  405cb8:	4770      	bx	lr
  405cba:	bf00      	nop

00405cbc <__lo0bits>:
  405cbc:	6803      	ldr	r3, [r0, #0]
  405cbe:	f013 0207 	ands.w	r2, r3, #7
  405cc2:	4601      	mov	r1, r0
  405cc4:	d007      	beq.n	405cd6 <__lo0bits+0x1a>
  405cc6:	07da      	lsls	r2, r3, #31
  405cc8:	d421      	bmi.n	405d0e <__lo0bits+0x52>
  405cca:	0798      	lsls	r0, r3, #30
  405ccc:	d421      	bmi.n	405d12 <__lo0bits+0x56>
  405cce:	089b      	lsrs	r3, r3, #2
  405cd0:	600b      	str	r3, [r1, #0]
  405cd2:	2002      	movs	r0, #2
  405cd4:	4770      	bx	lr
  405cd6:	b298      	uxth	r0, r3
  405cd8:	b198      	cbz	r0, 405d02 <__lo0bits+0x46>
  405cda:	4610      	mov	r0, r2
  405cdc:	f013 0fff 	tst.w	r3, #255	; 0xff
  405ce0:	bf04      	itt	eq
  405ce2:	0a1b      	lsreq	r3, r3, #8
  405ce4:	3008      	addeq	r0, #8
  405ce6:	071a      	lsls	r2, r3, #28
  405ce8:	bf04      	itt	eq
  405cea:	091b      	lsreq	r3, r3, #4
  405cec:	3004      	addeq	r0, #4
  405cee:	079a      	lsls	r2, r3, #30
  405cf0:	bf04      	itt	eq
  405cf2:	089b      	lsreq	r3, r3, #2
  405cf4:	3002      	addeq	r0, #2
  405cf6:	07da      	lsls	r2, r3, #31
  405cf8:	d407      	bmi.n	405d0a <__lo0bits+0x4e>
  405cfa:	085b      	lsrs	r3, r3, #1
  405cfc:	d104      	bne.n	405d08 <__lo0bits+0x4c>
  405cfe:	2020      	movs	r0, #32
  405d00:	4770      	bx	lr
  405d02:	0c1b      	lsrs	r3, r3, #16
  405d04:	2010      	movs	r0, #16
  405d06:	e7e9      	b.n	405cdc <__lo0bits+0x20>
  405d08:	3001      	adds	r0, #1
  405d0a:	600b      	str	r3, [r1, #0]
  405d0c:	4770      	bx	lr
  405d0e:	2000      	movs	r0, #0
  405d10:	4770      	bx	lr
  405d12:	085b      	lsrs	r3, r3, #1
  405d14:	600b      	str	r3, [r1, #0]
  405d16:	2001      	movs	r0, #1
  405d18:	4770      	bx	lr
  405d1a:	bf00      	nop

00405d1c <__i2b>:
  405d1c:	b510      	push	{r4, lr}
  405d1e:	460c      	mov	r4, r1
  405d20:	2101      	movs	r1, #1
  405d22:	f7ff ff3b 	bl	405b9c <_Balloc>
  405d26:	2201      	movs	r2, #1
  405d28:	6144      	str	r4, [r0, #20]
  405d2a:	6102      	str	r2, [r0, #16]
  405d2c:	bd10      	pop	{r4, pc}
  405d2e:	bf00      	nop

00405d30 <__multiply>:
  405d30:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  405d34:	690c      	ldr	r4, [r1, #16]
  405d36:	6915      	ldr	r5, [r2, #16]
  405d38:	42ac      	cmp	r4, r5
  405d3a:	b083      	sub	sp, #12
  405d3c:	468b      	mov	fp, r1
  405d3e:	4616      	mov	r6, r2
  405d40:	da04      	bge.n	405d4c <__multiply+0x1c>
  405d42:	4622      	mov	r2, r4
  405d44:	46b3      	mov	fp, r6
  405d46:	462c      	mov	r4, r5
  405d48:	460e      	mov	r6, r1
  405d4a:	4615      	mov	r5, r2
  405d4c:	f8db 3008 	ldr.w	r3, [fp, #8]
  405d50:	f8db 1004 	ldr.w	r1, [fp, #4]
  405d54:	eb04 0805 	add.w	r8, r4, r5
  405d58:	4598      	cmp	r8, r3
  405d5a:	bfc8      	it	gt
  405d5c:	3101      	addgt	r1, #1
  405d5e:	f7ff ff1d 	bl	405b9c <_Balloc>
  405d62:	f100 0914 	add.w	r9, r0, #20
  405d66:	eb09 0a88 	add.w	sl, r9, r8, lsl #2
  405d6a:	45d1      	cmp	r9, sl
  405d6c:	9000      	str	r0, [sp, #0]
  405d6e:	d205      	bcs.n	405d7c <__multiply+0x4c>
  405d70:	464b      	mov	r3, r9
  405d72:	2100      	movs	r1, #0
  405d74:	f843 1b04 	str.w	r1, [r3], #4
  405d78:	459a      	cmp	sl, r3
  405d7a:	d8fb      	bhi.n	405d74 <__multiply+0x44>
  405d7c:	f106 0c14 	add.w	ip, r6, #20
  405d80:	eb0c 0385 	add.w	r3, ip, r5, lsl #2
  405d84:	f10b 0b14 	add.w	fp, fp, #20
  405d88:	459c      	cmp	ip, r3
  405d8a:	eb0b 0e84 	add.w	lr, fp, r4, lsl #2
  405d8e:	d24c      	bcs.n	405e2a <__multiply+0xfa>
  405d90:	f8cd a004 	str.w	sl, [sp, #4]
  405d94:	469a      	mov	sl, r3
  405d96:	f8dc 5000 	ldr.w	r5, [ip]
  405d9a:	b2af      	uxth	r7, r5
  405d9c:	b1ef      	cbz	r7, 405dda <__multiply+0xaa>
  405d9e:	2100      	movs	r1, #0
  405da0:	464d      	mov	r5, r9
  405da2:	465e      	mov	r6, fp
  405da4:	460c      	mov	r4, r1
  405da6:	f856 2b04 	ldr.w	r2, [r6], #4
  405daa:	6828      	ldr	r0, [r5, #0]
  405dac:	b293      	uxth	r3, r2
  405dae:	b281      	uxth	r1, r0
  405db0:	fb07 1303 	mla	r3, r7, r3, r1
  405db4:	0c12      	lsrs	r2, r2, #16
  405db6:	0c01      	lsrs	r1, r0, #16
  405db8:	4423      	add	r3, r4
  405dba:	fb07 1102 	mla	r1, r7, r2, r1
  405dbe:	eb01 4113 	add.w	r1, r1, r3, lsr #16
  405dc2:	b29b      	uxth	r3, r3
  405dc4:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
  405dc8:	45b6      	cmp	lr, r6
  405dca:	f845 3b04 	str.w	r3, [r5], #4
  405dce:	ea4f 4411 	mov.w	r4, r1, lsr #16
  405dd2:	d8e8      	bhi.n	405da6 <__multiply+0x76>
  405dd4:	602c      	str	r4, [r5, #0]
  405dd6:	f8dc 5000 	ldr.w	r5, [ip]
  405dda:	0c2d      	lsrs	r5, r5, #16
  405ddc:	d01d      	beq.n	405e1a <__multiply+0xea>
  405dde:	f8d9 3000 	ldr.w	r3, [r9]
  405de2:	4648      	mov	r0, r9
  405de4:	461c      	mov	r4, r3
  405de6:	4659      	mov	r1, fp
  405de8:	2200      	movs	r2, #0
  405dea:	880e      	ldrh	r6, [r1, #0]
  405dec:	0c24      	lsrs	r4, r4, #16
  405dee:	fb05 4406 	mla	r4, r5, r6, r4
  405df2:	4422      	add	r2, r4
  405df4:	b29b      	uxth	r3, r3
  405df6:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
  405dfa:	f840 3b04 	str.w	r3, [r0], #4
  405dfe:	f851 3b04 	ldr.w	r3, [r1], #4
  405e02:	6804      	ldr	r4, [r0, #0]
  405e04:	0c1b      	lsrs	r3, r3, #16
  405e06:	b2a6      	uxth	r6, r4
  405e08:	fb05 6303 	mla	r3, r5, r3, r6
  405e0c:	eb03 4312 	add.w	r3, r3, r2, lsr #16
  405e10:	458e      	cmp	lr, r1
  405e12:	ea4f 4213 	mov.w	r2, r3, lsr #16
  405e16:	d8e8      	bhi.n	405dea <__multiply+0xba>
  405e18:	6003      	str	r3, [r0, #0]
  405e1a:	f10c 0c04 	add.w	ip, ip, #4
  405e1e:	45e2      	cmp	sl, ip
  405e20:	f109 0904 	add.w	r9, r9, #4
  405e24:	d8b7      	bhi.n	405d96 <__multiply+0x66>
  405e26:	f8dd a004 	ldr.w	sl, [sp, #4]
  405e2a:	f1b8 0f00 	cmp.w	r8, #0
  405e2e:	dd0b      	ble.n	405e48 <__multiply+0x118>
  405e30:	f85a 3c04 	ldr.w	r3, [sl, #-4]
  405e34:	f1aa 0a04 	sub.w	sl, sl, #4
  405e38:	b11b      	cbz	r3, 405e42 <__multiply+0x112>
  405e3a:	e005      	b.n	405e48 <__multiply+0x118>
  405e3c:	f85a 3d04 	ldr.w	r3, [sl, #-4]!
  405e40:	b913      	cbnz	r3, 405e48 <__multiply+0x118>
  405e42:	f1b8 0801 	subs.w	r8, r8, #1
  405e46:	d1f9      	bne.n	405e3c <__multiply+0x10c>
  405e48:	9800      	ldr	r0, [sp, #0]
  405e4a:	f8c0 8010 	str.w	r8, [r0, #16]
  405e4e:	b003      	add	sp, #12
  405e50:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

00405e54 <__pow5mult>:
  405e54:	f012 0303 	ands.w	r3, r2, #3
  405e58:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  405e5c:	4614      	mov	r4, r2
  405e5e:	4607      	mov	r7, r0
  405e60:	d12e      	bne.n	405ec0 <__pow5mult+0x6c>
  405e62:	460d      	mov	r5, r1
  405e64:	10a4      	asrs	r4, r4, #2
  405e66:	d01c      	beq.n	405ea2 <__pow5mult+0x4e>
  405e68:	6cbe      	ldr	r6, [r7, #72]	; 0x48
  405e6a:	b396      	cbz	r6, 405ed2 <__pow5mult+0x7e>
  405e6c:	07e3      	lsls	r3, r4, #31
  405e6e:	f04f 0800 	mov.w	r8, #0
  405e72:	d406      	bmi.n	405e82 <__pow5mult+0x2e>
  405e74:	1064      	asrs	r4, r4, #1
  405e76:	d014      	beq.n	405ea2 <__pow5mult+0x4e>
  405e78:	6830      	ldr	r0, [r6, #0]
  405e7a:	b1a8      	cbz	r0, 405ea8 <__pow5mult+0x54>
  405e7c:	4606      	mov	r6, r0
  405e7e:	07e3      	lsls	r3, r4, #31
  405e80:	d5f8      	bpl.n	405e74 <__pow5mult+0x20>
  405e82:	4632      	mov	r2, r6
  405e84:	4629      	mov	r1, r5
  405e86:	4638      	mov	r0, r7
  405e88:	f7ff ff52 	bl	405d30 <__multiply>
  405e8c:	b1b5      	cbz	r5, 405ebc <__pow5mult+0x68>
  405e8e:	686a      	ldr	r2, [r5, #4]
  405e90:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
  405e92:	1064      	asrs	r4, r4, #1
  405e94:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
  405e98:	6029      	str	r1, [r5, #0]
  405e9a:	f843 5022 	str.w	r5, [r3, r2, lsl #2]
  405e9e:	4605      	mov	r5, r0
  405ea0:	d1ea      	bne.n	405e78 <__pow5mult+0x24>
  405ea2:	4628      	mov	r0, r5
  405ea4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  405ea8:	4632      	mov	r2, r6
  405eaa:	4631      	mov	r1, r6
  405eac:	4638      	mov	r0, r7
  405eae:	f7ff ff3f 	bl	405d30 <__multiply>
  405eb2:	6030      	str	r0, [r6, #0]
  405eb4:	f8c0 8000 	str.w	r8, [r0]
  405eb8:	4606      	mov	r6, r0
  405eba:	e7e0      	b.n	405e7e <__pow5mult+0x2a>
  405ebc:	4605      	mov	r5, r0
  405ebe:	e7d9      	b.n	405e74 <__pow5mult+0x20>
  405ec0:	1e5a      	subs	r2, r3, #1
  405ec2:	4d0b      	ldr	r5, [pc, #44]	; (405ef0 <__pow5mult+0x9c>)
  405ec4:	2300      	movs	r3, #0
  405ec6:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
  405eca:	f7ff fe97 	bl	405bfc <__multadd>
  405ece:	4605      	mov	r5, r0
  405ed0:	e7c8      	b.n	405e64 <__pow5mult+0x10>
  405ed2:	2101      	movs	r1, #1
  405ed4:	4638      	mov	r0, r7
  405ed6:	f7ff fe61 	bl	405b9c <_Balloc>
  405eda:	f240 2171 	movw	r1, #625	; 0x271
  405ede:	2201      	movs	r2, #1
  405ee0:	2300      	movs	r3, #0
  405ee2:	6141      	str	r1, [r0, #20]
  405ee4:	6102      	str	r2, [r0, #16]
  405ee6:	4606      	mov	r6, r0
  405ee8:	64b8      	str	r0, [r7, #72]	; 0x48
  405eea:	6003      	str	r3, [r0, #0]
  405eec:	e7be      	b.n	405e6c <__pow5mult+0x18>
  405eee:	bf00      	nop
  405ef0:	00407888 	.word	0x00407888

00405ef4 <__lshift>:
  405ef4:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
  405ef8:	4691      	mov	r9, r2
  405efa:	690a      	ldr	r2, [r1, #16]
  405efc:	688b      	ldr	r3, [r1, #8]
  405efe:	ea4f 1469 	mov.w	r4, r9, asr #5
  405f02:	eb04 0802 	add.w	r8, r4, r2
  405f06:	f108 0501 	add.w	r5, r8, #1
  405f0a:	429d      	cmp	r5, r3
  405f0c:	460e      	mov	r6, r1
  405f0e:	4607      	mov	r7, r0
  405f10:	6849      	ldr	r1, [r1, #4]
  405f12:	dd04      	ble.n	405f1e <__lshift+0x2a>
  405f14:	005b      	lsls	r3, r3, #1
  405f16:	429d      	cmp	r5, r3
  405f18:	f101 0101 	add.w	r1, r1, #1
  405f1c:	dcfa      	bgt.n	405f14 <__lshift+0x20>
  405f1e:	4638      	mov	r0, r7
  405f20:	f7ff fe3c 	bl	405b9c <_Balloc>
  405f24:	2c00      	cmp	r4, #0
  405f26:	f100 0314 	add.w	r3, r0, #20
  405f2a:	dd06      	ble.n	405f3a <__lshift+0x46>
  405f2c:	eb03 0284 	add.w	r2, r3, r4, lsl #2
  405f30:	2100      	movs	r1, #0
  405f32:	f843 1b04 	str.w	r1, [r3], #4
  405f36:	429a      	cmp	r2, r3
  405f38:	d1fb      	bne.n	405f32 <__lshift+0x3e>
  405f3a:	6934      	ldr	r4, [r6, #16]
  405f3c:	f106 0114 	add.w	r1, r6, #20
  405f40:	f019 091f 	ands.w	r9, r9, #31
  405f44:	eb01 0e84 	add.w	lr, r1, r4, lsl #2
  405f48:	d01d      	beq.n	405f86 <__lshift+0x92>
  405f4a:	f1c9 0c20 	rsb	ip, r9, #32
  405f4e:	2200      	movs	r2, #0
  405f50:	680c      	ldr	r4, [r1, #0]
  405f52:	fa04 f409 	lsl.w	r4, r4, r9
  405f56:	4314      	orrs	r4, r2
  405f58:	f843 4b04 	str.w	r4, [r3], #4
  405f5c:	f851 2b04 	ldr.w	r2, [r1], #4
  405f60:	458e      	cmp	lr, r1
  405f62:	fa22 f20c 	lsr.w	r2, r2, ip
  405f66:	d8f3      	bhi.n	405f50 <__lshift+0x5c>
  405f68:	601a      	str	r2, [r3, #0]
  405f6a:	b10a      	cbz	r2, 405f70 <__lshift+0x7c>
  405f6c:	f108 0502 	add.w	r5, r8, #2
  405f70:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
  405f72:	6872      	ldr	r2, [r6, #4]
  405f74:	3d01      	subs	r5, #1
  405f76:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
  405f7a:	6105      	str	r5, [r0, #16]
  405f7c:	6031      	str	r1, [r6, #0]
  405f7e:	f843 6022 	str.w	r6, [r3, r2, lsl #2]
  405f82:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  405f86:	3b04      	subs	r3, #4
  405f88:	f851 2b04 	ldr.w	r2, [r1], #4
  405f8c:	f843 2f04 	str.w	r2, [r3, #4]!
  405f90:	458e      	cmp	lr, r1
  405f92:	d8f9      	bhi.n	405f88 <__lshift+0x94>
  405f94:	e7ec      	b.n	405f70 <__lshift+0x7c>
  405f96:	bf00      	nop

00405f98 <__mcmp>:
  405f98:	b430      	push	{r4, r5}
  405f9a:	690b      	ldr	r3, [r1, #16]
  405f9c:	4605      	mov	r5, r0
  405f9e:	6900      	ldr	r0, [r0, #16]
  405fa0:	1ac0      	subs	r0, r0, r3
  405fa2:	d10f      	bne.n	405fc4 <__mcmp+0x2c>
  405fa4:	009b      	lsls	r3, r3, #2
  405fa6:	3514      	adds	r5, #20
  405fa8:	3114      	adds	r1, #20
  405faa:	4419      	add	r1, r3
  405fac:	442b      	add	r3, r5
  405fae:	e001      	b.n	405fb4 <__mcmp+0x1c>
  405fb0:	429d      	cmp	r5, r3
  405fb2:	d207      	bcs.n	405fc4 <__mcmp+0x2c>
  405fb4:	f853 4d04 	ldr.w	r4, [r3, #-4]!
  405fb8:	f851 2d04 	ldr.w	r2, [r1, #-4]!
  405fbc:	4294      	cmp	r4, r2
  405fbe:	d0f7      	beq.n	405fb0 <__mcmp+0x18>
  405fc0:	d302      	bcc.n	405fc8 <__mcmp+0x30>
  405fc2:	2001      	movs	r0, #1
  405fc4:	bc30      	pop	{r4, r5}
  405fc6:	4770      	bx	lr
  405fc8:	f04f 30ff 	mov.w	r0, #4294967295
  405fcc:	e7fa      	b.n	405fc4 <__mcmp+0x2c>
  405fce:	bf00      	nop

00405fd0 <__mdiff>:
  405fd0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  405fd4:	690f      	ldr	r7, [r1, #16]
  405fd6:	460e      	mov	r6, r1
  405fd8:	6911      	ldr	r1, [r2, #16]
  405fda:	1a7f      	subs	r7, r7, r1
  405fdc:	2f00      	cmp	r7, #0
  405fde:	4690      	mov	r8, r2
  405fe0:	d117      	bne.n	406012 <__mdiff+0x42>
  405fe2:	0089      	lsls	r1, r1, #2
  405fe4:	f106 0514 	add.w	r5, r6, #20
  405fe8:	f102 0e14 	add.w	lr, r2, #20
  405fec:	186b      	adds	r3, r5, r1
  405fee:	4471      	add	r1, lr
  405ff0:	e001      	b.n	405ff6 <__mdiff+0x26>
  405ff2:	429d      	cmp	r5, r3
  405ff4:	d25c      	bcs.n	4060b0 <__mdiff+0xe0>
  405ff6:	f853 2d04 	ldr.w	r2, [r3, #-4]!
  405ffa:	f851 4d04 	ldr.w	r4, [r1, #-4]!
  405ffe:	42a2      	cmp	r2, r4
  406000:	d0f7      	beq.n	405ff2 <__mdiff+0x22>
  406002:	d25e      	bcs.n	4060c2 <__mdiff+0xf2>
  406004:	4633      	mov	r3, r6
  406006:	462c      	mov	r4, r5
  406008:	4646      	mov	r6, r8
  40600a:	4675      	mov	r5, lr
  40600c:	4698      	mov	r8, r3
  40600e:	2701      	movs	r7, #1
  406010:	e005      	b.n	40601e <__mdiff+0x4e>
  406012:	db58      	blt.n	4060c6 <__mdiff+0xf6>
  406014:	f106 0514 	add.w	r5, r6, #20
  406018:	f108 0414 	add.w	r4, r8, #20
  40601c:	2700      	movs	r7, #0
  40601e:	6871      	ldr	r1, [r6, #4]
  406020:	f7ff fdbc 	bl	405b9c <_Balloc>
  406024:	f8d8 3010 	ldr.w	r3, [r8, #16]
  406028:	6936      	ldr	r6, [r6, #16]
  40602a:	60c7      	str	r7, [r0, #12]
  40602c:	eb04 0c83 	add.w	ip, r4, r3, lsl #2
  406030:	46a6      	mov	lr, r4
  406032:	eb05 0786 	add.w	r7, r5, r6, lsl #2
  406036:	f100 0414 	add.w	r4, r0, #20
  40603a:	2300      	movs	r3, #0
  40603c:	f85e 1b04 	ldr.w	r1, [lr], #4
  406040:	f855 8b04 	ldr.w	r8, [r5], #4
  406044:	b28a      	uxth	r2, r1
  406046:	fa13 f388 	uxtah	r3, r3, r8
  40604a:	0c09      	lsrs	r1, r1, #16
  40604c:	1a9a      	subs	r2, r3, r2
  40604e:	ebc1 4318 	rsb	r3, r1, r8, lsr #16
  406052:	eb03 4322 	add.w	r3, r3, r2, asr #16
  406056:	b292      	uxth	r2, r2
  406058:	ea42 4203 	orr.w	r2, r2, r3, lsl #16
  40605c:	45f4      	cmp	ip, lr
  40605e:	f844 2b04 	str.w	r2, [r4], #4
  406062:	ea4f 4323 	mov.w	r3, r3, asr #16
  406066:	d8e9      	bhi.n	40603c <__mdiff+0x6c>
  406068:	42af      	cmp	r7, r5
  40606a:	d917      	bls.n	40609c <__mdiff+0xcc>
  40606c:	46a4      	mov	ip, r4
  40606e:	46ae      	mov	lr, r5
  406070:	f85e 2b04 	ldr.w	r2, [lr], #4
  406074:	fa13 f382 	uxtah	r3, r3, r2
  406078:	1419      	asrs	r1, r3, #16
  40607a:	eb01 4112 	add.w	r1, r1, r2, lsr #16
  40607e:	b29b      	uxth	r3, r3
  406080:	ea43 4201 	orr.w	r2, r3, r1, lsl #16
  406084:	4577      	cmp	r7, lr
  406086:	f84c 2b04 	str.w	r2, [ip], #4
  40608a:	ea4f 4321 	mov.w	r3, r1, asr #16
  40608e:	d8ef      	bhi.n	406070 <__mdiff+0xa0>
  406090:	43ed      	mvns	r5, r5
  406092:	442f      	add	r7, r5
  406094:	f027 0703 	bic.w	r7, r7, #3
  406098:	3704      	adds	r7, #4
  40609a:	443c      	add	r4, r7
  40609c:	3c04      	subs	r4, #4
  40609e:	b922      	cbnz	r2, 4060aa <__mdiff+0xda>
  4060a0:	f854 3d04 	ldr.w	r3, [r4, #-4]!
  4060a4:	3e01      	subs	r6, #1
  4060a6:	2b00      	cmp	r3, #0
  4060a8:	d0fa      	beq.n	4060a0 <__mdiff+0xd0>
  4060aa:	6106      	str	r6, [r0, #16]
  4060ac:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  4060b0:	2100      	movs	r1, #0
  4060b2:	f7ff fd73 	bl	405b9c <_Balloc>
  4060b6:	2201      	movs	r2, #1
  4060b8:	2300      	movs	r3, #0
  4060ba:	6102      	str	r2, [r0, #16]
  4060bc:	6143      	str	r3, [r0, #20]
  4060be:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  4060c2:	4674      	mov	r4, lr
  4060c4:	e7ab      	b.n	40601e <__mdiff+0x4e>
  4060c6:	4633      	mov	r3, r6
  4060c8:	f106 0414 	add.w	r4, r6, #20
  4060cc:	f102 0514 	add.w	r5, r2, #20
  4060d0:	4616      	mov	r6, r2
  4060d2:	2701      	movs	r7, #1
  4060d4:	4698      	mov	r8, r3
  4060d6:	e7a2      	b.n	40601e <__mdiff+0x4e>

004060d8 <__d2b>:
  4060d8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  4060dc:	b082      	sub	sp, #8
  4060de:	2101      	movs	r1, #1
  4060e0:	461c      	mov	r4, r3
  4060e2:	f3c3 570a 	ubfx	r7, r3, #20, #11
  4060e6:	4615      	mov	r5, r2
  4060e8:	9e08      	ldr	r6, [sp, #32]
  4060ea:	f7ff fd57 	bl	405b9c <_Balloc>
  4060ee:	f3c4 0413 	ubfx	r4, r4, #0, #20
  4060f2:	4680      	mov	r8, r0
  4060f4:	b10f      	cbz	r7, 4060fa <__d2b+0x22>
  4060f6:	f444 1480 	orr.w	r4, r4, #1048576	; 0x100000
  4060fa:	9401      	str	r4, [sp, #4]
  4060fc:	b31d      	cbz	r5, 406146 <__d2b+0x6e>
  4060fe:	a802      	add	r0, sp, #8
  406100:	f840 5d08 	str.w	r5, [r0, #-8]!
  406104:	f7ff fdda 	bl	405cbc <__lo0bits>
  406108:	2800      	cmp	r0, #0
  40610a:	d134      	bne.n	406176 <__d2b+0x9e>
  40610c:	e89d 000c 	ldmia.w	sp, {r2, r3}
  406110:	f8c8 2014 	str.w	r2, [r8, #20]
  406114:	2b00      	cmp	r3, #0
  406116:	bf0c      	ite	eq
  406118:	2101      	moveq	r1, #1
  40611a:	2102      	movne	r1, #2
  40611c:	f8c8 3018 	str.w	r3, [r8, #24]
  406120:	f8c8 1010 	str.w	r1, [r8, #16]
  406124:	b9df      	cbnz	r7, 40615e <__d2b+0x86>
  406126:	eb08 0381 	add.w	r3, r8, r1, lsl #2
  40612a:	f2a0 4032 	subw	r0, r0, #1074	; 0x432
  40612e:	6030      	str	r0, [r6, #0]
  406130:	6918      	ldr	r0, [r3, #16]
  406132:	f7ff fda3 	bl	405c7c <__hi0bits>
  406136:	9b09      	ldr	r3, [sp, #36]	; 0x24
  406138:	ebc0 1041 	rsb	r0, r0, r1, lsl #5
  40613c:	6018      	str	r0, [r3, #0]
  40613e:	4640      	mov	r0, r8
  406140:	b002      	add	sp, #8
  406142:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  406146:	a801      	add	r0, sp, #4
  406148:	f7ff fdb8 	bl	405cbc <__lo0bits>
  40614c:	9b01      	ldr	r3, [sp, #4]
  40614e:	f8c8 3014 	str.w	r3, [r8, #20]
  406152:	2101      	movs	r1, #1
  406154:	3020      	adds	r0, #32
  406156:	f8c8 1010 	str.w	r1, [r8, #16]
  40615a:	2f00      	cmp	r7, #0
  40615c:	d0e3      	beq.n	406126 <__d2b+0x4e>
  40615e:	9b09      	ldr	r3, [sp, #36]	; 0x24
  406160:	f2a7 4733 	subw	r7, r7, #1075	; 0x433
  406164:	4407      	add	r7, r0
  406166:	f1c0 0035 	rsb	r0, r0, #53	; 0x35
  40616a:	6037      	str	r7, [r6, #0]
  40616c:	6018      	str	r0, [r3, #0]
  40616e:	4640      	mov	r0, r8
  406170:	b002      	add	sp, #8
  406172:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  406176:	e89d 000a 	ldmia.w	sp, {r1, r3}
  40617a:	f1c0 0220 	rsb	r2, r0, #32
  40617e:	fa03 f202 	lsl.w	r2, r3, r2
  406182:	430a      	orrs	r2, r1
  406184:	40c3      	lsrs	r3, r0
  406186:	9301      	str	r3, [sp, #4]
  406188:	f8c8 2014 	str.w	r2, [r8, #20]
  40618c:	e7c2      	b.n	406114 <__d2b+0x3c>
  40618e:	bf00      	nop

00406190 <_sbrk_r>:
  406190:	b538      	push	{r3, r4, r5, lr}
  406192:	4c07      	ldr	r4, [pc, #28]	; (4061b0 <_sbrk_r+0x20>)
  406194:	2300      	movs	r3, #0
  406196:	4605      	mov	r5, r0
  406198:	4608      	mov	r0, r1
  40619a:	6023      	str	r3, [r4, #0]
  40619c:	f7fb fa62 	bl	401664 <_sbrk>
  4061a0:	1c43      	adds	r3, r0, #1
  4061a2:	d000      	beq.n	4061a6 <_sbrk_r+0x16>
  4061a4:	bd38      	pop	{r3, r4, r5, pc}
  4061a6:	6823      	ldr	r3, [r4, #0]
  4061a8:	2b00      	cmp	r3, #0
  4061aa:	d0fb      	beq.n	4061a4 <_sbrk_r+0x14>
  4061ac:	602b      	str	r3, [r5, #0]
  4061ae:	bd38      	pop	{r3, r4, r5, pc}
  4061b0:	20000f0c 	.word	0x20000f0c

004061b4 <__sread>:
  4061b4:	b510      	push	{r4, lr}
  4061b6:	460c      	mov	r4, r1
  4061b8:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
  4061bc:	f000 faba 	bl	406734 <_read_r>
  4061c0:	2800      	cmp	r0, #0
  4061c2:	db03      	blt.n	4061cc <__sread+0x18>
  4061c4:	6d23      	ldr	r3, [r4, #80]	; 0x50
  4061c6:	4403      	add	r3, r0
  4061c8:	6523      	str	r3, [r4, #80]	; 0x50
  4061ca:	bd10      	pop	{r4, pc}
  4061cc:	89a3      	ldrh	r3, [r4, #12]
  4061ce:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
  4061d2:	81a3      	strh	r3, [r4, #12]
  4061d4:	bd10      	pop	{r4, pc}
  4061d6:	bf00      	nop

004061d8 <__swrite>:
  4061d8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  4061dc:	4616      	mov	r6, r2
  4061de:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
  4061e2:	461f      	mov	r7, r3
  4061e4:	05d3      	lsls	r3, r2, #23
  4061e6:	460c      	mov	r4, r1
  4061e8:	4605      	mov	r5, r0
  4061ea:	d507      	bpl.n	4061fc <__swrite+0x24>
  4061ec:	2200      	movs	r2, #0
  4061ee:	2302      	movs	r3, #2
  4061f0:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
  4061f4:	f000 fa0e 	bl	406614 <_lseek_r>
  4061f8:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
  4061fc:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
  406200:	f422 5280 	bic.w	r2, r2, #4096	; 0x1000
  406204:	81a2      	strh	r2, [r4, #12]
  406206:	463b      	mov	r3, r7
  406208:	4632      	mov	r2, r6
  40620a:	4628      	mov	r0, r5
  40620c:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
  406210:	f000 b902 	b.w	406418 <_write_r>

00406214 <__sseek>:
  406214:	b510      	push	{r4, lr}
  406216:	460c      	mov	r4, r1
  406218:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
  40621c:	f000 f9fa 	bl	406614 <_lseek_r>
  406220:	89a3      	ldrh	r3, [r4, #12]
  406222:	1c42      	adds	r2, r0, #1
  406224:	bf0e      	itee	eq
  406226:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
  40622a:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
  40622e:	6520      	strne	r0, [r4, #80]	; 0x50
  406230:	81a3      	strh	r3, [r4, #12]
  406232:	bd10      	pop	{r4, pc}

00406234 <__sclose>:
  406234:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
  406238:	f000 b986 	b.w	406548 <_close_r>
  40623c:	0000      	movs	r0, r0
	...

00406240 <strlen>:
  406240:	f890 f000 	pld	[r0]
  406244:	e96d 4502 	strd	r4, r5, [sp, #-8]!
  406248:	f020 0107 	bic.w	r1, r0, #7
  40624c:	f06f 0c00 	mvn.w	ip, #0
  406250:	f010 0407 	ands.w	r4, r0, #7
  406254:	f891 f020 	pld	[r1, #32]
  406258:	f040 8049 	bne.w	4062ee <strlen+0xae>
  40625c:	f04f 0400 	mov.w	r4, #0
  406260:	f06f 0007 	mvn.w	r0, #7
  406264:	e9d1 2300 	ldrd	r2, r3, [r1]
  406268:	f891 f040 	pld	[r1, #64]	; 0x40
  40626c:	f100 0008 	add.w	r0, r0, #8
  406270:	fa82 f24c 	uadd8	r2, r2, ip
  406274:	faa4 f28c 	sel	r2, r4, ip
  406278:	fa83 f34c 	uadd8	r3, r3, ip
  40627c:	faa2 f38c 	sel	r3, r2, ip
  406280:	bb4b      	cbnz	r3, 4062d6 <strlen+0x96>
  406282:	e9d1 2302 	ldrd	r2, r3, [r1, #8]
  406286:	fa82 f24c 	uadd8	r2, r2, ip
  40628a:	f100 0008 	add.w	r0, r0, #8
  40628e:	faa4 f28c 	sel	r2, r4, ip
  406292:	fa83 f34c 	uadd8	r3, r3, ip
  406296:	faa2 f38c 	sel	r3, r2, ip
  40629a:	b9e3      	cbnz	r3, 4062d6 <strlen+0x96>
  40629c:	e9d1 2304 	ldrd	r2, r3, [r1, #16]
  4062a0:	fa82 f24c 	uadd8	r2, r2, ip
  4062a4:	f100 0008 	add.w	r0, r0, #8
  4062a8:	faa4 f28c 	sel	r2, r4, ip
  4062ac:	fa83 f34c 	uadd8	r3, r3, ip
  4062b0:	faa2 f38c 	sel	r3, r2, ip
  4062b4:	b97b      	cbnz	r3, 4062d6 <strlen+0x96>
  4062b6:	e9d1 2306 	ldrd	r2, r3, [r1, #24]
  4062ba:	f101 0120 	add.w	r1, r1, #32
  4062be:	fa82 f24c 	uadd8	r2, r2, ip
  4062c2:	f100 0008 	add.w	r0, r0, #8
  4062c6:	faa4 f28c 	sel	r2, r4, ip
  4062ca:	fa83 f34c 	uadd8	r3, r3, ip
  4062ce:	faa2 f38c 	sel	r3, r2, ip
  4062d2:	2b00      	cmp	r3, #0
  4062d4:	d0c6      	beq.n	406264 <strlen+0x24>
  4062d6:	2a00      	cmp	r2, #0
  4062d8:	bf04      	itt	eq
  4062da:	3004      	addeq	r0, #4
  4062dc:	461a      	moveq	r2, r3
  4062de:	ba12      	rev	r2, r2
  4062e0:	fab2 f282 	clz	r2, r2
  4062e4:	e8fd 4502 	ldrd	r4, r5, [sp], #8
  4062e8:	eb00 00d2 	add.w	r0, r0, r2, lsr #3
  4062ec:	4770      	bx	lr
  4062ee:	e9d1 2300 	ldrd	r2, r3, [r1]
  4062f2:	f004 0503 	and.w	r5, r4, #3
  4062f6:	f1c4 0000 	rsb	r0, r4, #0
  4062fa:	ea4f 05c5 	mov.w	r5, r5, lsl #3
  4062fe:	f014 0f04 	tst.w	r4, #4
  406302:	f891 f040 	pld	[r1, #64]	; 0x40
  406306:	fa0c f505 	lsl.w	r5, ip, r5
  40630a:	ea62 0205 	orn	r2, r2, r5
  40630e:	bf1c      	itt	ne
  406310:	ea63 0305 	ornne	r3, r3, r5
  406314:	4662      	movne	r2, ip
  406316:	f04f 0400 	mov.w	r4, #0
  40631a:	e7a9      	b.n	406270 <strlen+0x30>

0040631c <__ssprint_r>:
  40631c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  406320:	6893      	ldr	r3, [r2, #8]
  406322:	b083      	sub	sp, #12
  406324:	4690      	mov	r8, r2
  406326:	2b00      	cmp	r3, #0
  406328:	d070      	beq.n	40640c <__ssprint_r+0xf0>
  40632a:	4682      	mov	sl, r0
  40632c:	460c      	mov	r4, r1
  40632e:	6817      	ldr	r7, [r2, #0]
  406330:	688d      	ldr	r5, [r1, #8]
  406332:	6808      	ldr	r0, [r1, #0]
  406334:	e042      	b.n	4063bc <__ssprint_r+0xa0>
  406336:	89a3      	ldrh	r3, [r4, #12]
  406338:	f413 6f90 	tst.w	r3, #1152	; 0x480
  40633c:	d02e      	beq.n	40639c <__ssprint_r+0x80>
  40633e:	6965      	ldr	r5, [r4, #20]
  406340:	6921      	ldr	r1, [r4, #16]
  406342:	eb05 0545 	add.w	r5, r5, r5, lsl #1
  406346:	eba0 0b01 	sub.w	fp, r0, r1
  40634a:	eb05 75d5 	add.w	r5, r5, r5, lsr #31
  40634e:	f10b 0001 	add.w	r0, fp, #1
  406352:	106d      	asrs	r5, r5, #1
  406354:	4430      	add	r0, r6
  406356:	42a8      	cmp	r0, r5
  406358:	462a      	mov	r2, r5
  40635a:	bf84      	itt	hi
  40635c:	4605      	movhi	r5, r0
  40635e:	462a      	movhi	r2, r5
  406360:	055b      	lsls	r3, r3, #21
  406362:	d538      	bpl.n	4063d6 <__ssprint_r+0xba>
  406364:	4611      	mov	r1, r2
  406366:	4650      	mov	r0, sl
  406368:	f7ff f878 	bl	40545c <_malloc_r>
  40636c:	2800      	cmp	r0, #0
  40636e:	d03c      	beq.n	4063ea <__ssprint_r+0xce>
  406370:	465a      	mov	r2, fp
  406372:	6921      	ldr	r1, [r4, #16]
  406374:	9001      	str	r0, [sp, #4]
  406376:	f7ff fb73 	bl	405a60 <memcpy>
  40637a:	89a2      	ldrh	r2, [r4, #12]
  40637c:	9b01      	ldr	r3, [sp, #4]
  40637e:	f422 6290 	bic.w	r2, r2, #1152	; 0x480
  406382:	f042 0280 	orr.w	r2, r2, #128	; 0x80
  406386:	81a2      	strh	r2, [r4, #12]
  406388:	eba5 020b 	sub.w	r2, r5, fp
  40638c:	eb03 000b 	add.w	r0, r3, fp
  406390:	6165      	str	r5, [r4, #20]
  406392:	6123      	str	r3, [r4, #16]
  406394:	6020      	str	r0, [r4, #0]
  406396:	60a2      	str	r2, [r4, #8]
  406398:	4635      	mov	r5, r6
  40639a:	46b3      	mov	fp, r6
  40639c:	465a      	mov	r2, fp
  40639e:	4649      	mov	r1, r9
  4063a0:	f000 f964 	bl	40666c <memmove>
  4063a4:	f8d8 3008 	ldr.w	r3, [r8, #8]
  4063a8:	68a2      	ldr	r2, [r4, #8]
  4063aa:	6820      	ldr	r0, [r4, #0]
  4063ac:	1b55      	subs	r5, r2, r5
  4063ae:	4458      	add	r0, fp
  4063b0:	1b9e      	subs	r6, r3, r6
  4063b2:	60a5      	str	r5, [r4, #8]
  4063b4:	6020      	str	r0, [r4, #0]
  4063b6:	f8c8 6008 	str.w	r6, [r8, #8]
  4063ba:	b33e      	cbz	r6, 40640c <__ssprint_r+0xf0>
  4063bc:	687e      	ldr	r6, [r7, #4]
  4063be:	463b      	mov	r3, r7
  4063c0:	3708      	adds	r7, #8
  4063c2:	2e00      	cmp	r6, #0
  4063c4:	d0fa      	beq.n	4063bc <__ssprint_r+0xa0>
  4063c6:	42ae      	cmp	r6, r5
  4063c8:	f8d3 9000 	ldr.w	r9, [r3]
  4063cc:	46ab      	mov	fp, r5
  4063ce:	d2b2      	bcs.n	406336 <__ssprint_r+0x1a>
  4063d0:	4635      	mov	r5, r6
  4063d2:	46b3      	mov	fp, r6
  4063d4:	e7e2      	b.n	40639c <__ssprint_r+0x80>
  4063d6:	4650      	mov	r0, sl
  4063d8:	f000 f9c2 	bl	406760 <_realloc_r>
  4063dc:	4603      	mov	r3, r0
  4063de:	2800      	cmp	r0, #0
  4063e0:	d1d2      	bne.n	406388 <__ssprint_r+0x6c>
  4063e2:	6921      	ldr	r1, [r4, #16]
  4063e4:	4650      	mov	r0, sl
  4063e6:	f7fe fee5 	bl	4051b4 <_free_r>
  4063ea:	230c      	movs	r3, #12
  4063ec:	f8ca 3000 	str.w	r3, [sl]
  4063f0:	89a3      	ldrh	r3, [r4, #12]
  4063f2:	2200      	movs	r2, #0
  4063f4:	f043 0340 	orr.w	r3, r3, #64	; 0x40
  4063f8:	f04f 30ff 	mov.w	r0, #4294967295
  4063fc:	81a3      	strh	r3, [r4, #12]
  4063fe:	f8c8 2008 	str.w	r2, [r8, #8]
  406402:	f8c8 2004 	str.w	r2, [r8, #4]
  406406:	b003      	add	sp, #12
  406408:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  40640c:	2000      	movs	r0, #0
  40640e:	f8c8 0004 	str.w	r0, [r8, #4]
  406412:	b003      	add	sp, #12
  406414:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

00406418 <_write_r>:
  406418:	b570      	push	{r4, r5, r6, lr}
  40641a:	460d      	mov	r5, r1
  40641c:	4c08      	ldr	r4, [pc, #32]	; (406440 <_write_r+0x28>)
  40641e:	4611      	mov	r1, r2
  406420:	4606      	mov	r6, r0
  406422:	461a      	mov	r2, r3
  406424:	4628      	mov	r0, r5
  406426:	2300      	movs	r3, #0
  406428:	6023      	str	r3, [r4, #0]
  40642a:	f7f9 fed5 	bl	4001d8 <_write>
  40642e:	1c43      	adds	r3, r0, #1
  406430:	d000      	beq.n	406434 <_write_r+0x1c>
  406432:	bd70      	pop	{r4, r5, r6, pc}
  406434:	6823      	ldr	r3, [r4, #0]
  406436:	2b00      	cmp	r3, #0
  406438:	d0fb      	beq.n	406432 <_write_r+0x1a>
  40643a:	6033      	str	r3, [r6, #0]
  40643c:	bd70      	pop	{r4, r5, r6, pc}
  40643e:	bf00      	nop
  406440:	20000f0c 	.word	0x20000f0c

00406444 <__register_exitproc>:
  406444:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
  406448:	4c25      	ldr	r4, [pc, #148]	; (4064e0 <__register_exitproc+0x9c>)
  40644a:	6825      	ldr	r5, [r4, #0]
  40644c:	f8d5 4148 	ldr.w	r4, [r5, #328]	; 0x148
  406450:	4606      	mov	r6, r0
  406452:	4688      	mov	r8, r1
  406454:	4692      	mov	sl, r2
  406456:	4699      	mov	r9, r3
  406458:	b3c4      	cbz	r4, 4064cc <__register_exitproc+0x88>
  40645a:	6860      	ldr	r0, [r4, #4]
  40645c:	281f      	cmp	r0, #31
  40645e:	dc17      	bgt.n	406490 <__register_exitproc+0x4c>
  406460:	1c43      	adds	r3, r0, #1
  406462:	b176      	cbz	r6, 406482 <__register_exitproc+0x3e>
  406464:	eb04 0580 	add.w	r5, r4, r0, lsl #2
  406468:	2201      	movs	r2, #1
  40646a:	f8c5 a088 	str.w	sl, [r5, #136]	; 0x88
  40646e:	f8d4 1188 	ldr.w	r1, [r4, #392]	; 0x188
  406472:	4082      	lsls	r2, r0
  406474:	4311      	orrs	r1, r2
  406476:	2e02      	cmp	r6, #2
  406478:	f8c4 1188 	str.w	r1, [r4, #392]	; 0x188
  40647c:	f8c5 9108 	str.w	r9, [r5, #264]	; 0x108
  406480:	d01e      	beq.n	4064c0 <__register_exitproc+0x7c>
  406482:	3002      	adds	r0, #2
  406484:	6063      	str	r3, [r4, #4]
  406486:	f844 8020 	str.w	r8, [r4, r0, lsl #2]
  40648a:	2000      	movs	r0, #0
  40648c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  406490:	4b14      	ldr	r3, [pc, #80]	; (4064e4 <__register_exitproc+0xa0>)
  406492:	b303      	cbz	r3, 4064d6 <__register_exitproc+0x92>
  406494:	f44f 70c8 	mov.w	r0, #400	; 0x190
  406498:	f7fe ffd8 	bl	40544c <malloc>
  40649c:	4604      	mov	r4, r0
  40649e:	b1d0      	cbz	r0, 4064d6 <__register_exitproc+0x92>
  4064a0:	f8d5 3148 	ldr.w	r3, [r5, #328]	; 0x148
  4064a4:	2700      	movs	r7, #0
  4064a6:	e880 0088 	stmia.w	r0, {r3, r7}
  4064aa:	f8c5 4148 	str.w	r4, [r5, #328]	; 0x148
  4064ae:	4638      	mov	r0, r7
  4064b0:	2301      	movs	r3, #1
  4064b2:	f8c4 7188 	str.w	r7, [r4, #392]	; 0x188
  4064b6:	f8c4 718c 	str.w	r7, [r4, #396]	; 0x18c
  4064ba:	2e00      	cmp	r6, #0
  4064bc:	d0e1      	beq.n	406482 <__register_exitproc+0x3e>
  4064be:	e7d1      	b.n	406464 <__register_exitproc+0x20>
  4064c0:	f8d4 118c 	ldr.w	r1, [r4, #396]	; 0x18c
  4064c4:	430a      	orrs	r2, r1
  4064c6:	f8c4 218c 	str.w	r2, [r4, #396]	; 0x18c
  4064ca:	e7da      	b.n	406482 <__register_exitproc+0x3e>
  4064cc:	f505 74a6 	add.w	r4, r5, #332	; 0x14c
  4064d0:	f8c5 4148 	str.w	r4, [r5, #328]	; 0x148
  4064d4:	e7c1      	b.n	40645a <__register_exitproc+0x16>
  4064d6:	f04f 30ff 	mov.w	r0, #4294967295
  4064da:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  4064de:	bf00      	nop
  4064e0:	00407720 	.word	0x00407720
  4064e4:	0040544d 	.word	0x0040544d

004064e8 <_calloc_r>:
  4064e8:	b510      	push	{r4, lr}
  4064ea:	fb02 f101 	mul.w	r1, r2, r1
  4064ee:	f7fe ffb5 	bl	40545c <_malloc_r>
  4064f2:	4604      	mov	r4, r0
  4064f4:	b1d8      	cbz	r0, 40652e <_calloc_r+0x46>
  4064f6:	f850 2c04 	ldr.w	r2, [r0, #-4]
  4064fa:	f022 0203 	bic.w	r2, r2, #3
  4064fe:	3a04      	subs	r2, #4
  406500:	2a24      	cmp	r2, #36	; 0x24
  406502:	d818      	bhi.n	406536 <_calloc_r+0x4e>
  406504:	2a13      	cmp	r2, #19
  406506:	d914      	bls.n	406532 <_calloc_r+0x4a>
  406508:	2300      	movs	r3, #0
  40650a:	2a1b      	cmp	r2, #27
  40650c:	6003      	str	r3, [r0, #0]
  40650e:	6043      	str	r3, [r0, #4]
  406510:	d916      	bls.n	406540 <_calloc_r+0x58>
  406512:	2a24      	cmp	r2, #36	; 0x24
  406514:	6083      	str	r3, [r0, #8]
  406516:	60c3      	str	r3, [r0, #12]
  406518:	bf11      	iteee	ne
  40651a:	f100 0210 	addne.w	r2, r0, #16
  40651e:	6103      	streq	r3, [r0, #16]
  406520:	6143      	streq	r3, [r0, #20]
  406522:	f100 0218 	addeq.w	r2, r0, #24
  406526:	2300      	movs	r3, #0
  406528:	6013      	str	r3, [r2, #0]
  40652a:	6053      	str	r3, [r2, #4]
  40652c:	6093      	str	r3, [r2, #8]
  40652e:	4620      	mov	r0, r4
  406530:	bd10      	pop	{r4, pc}
  406532:	4602      	mov	r2, r0
  406534:	e7f7      	b.n	406526 <_calloc_r+0x3e>
  406536:	2100      	movs	r1, #0
  406538:	f7fc f97c 	bl	402834 <memset>
  40653c:	4620      	mov	r0, r4
  40653e:	bd10      	pop	{r4, pc}
  406540:	f100 0208 	add.w	r2, r0, #8
  406544:	e7ef      	b.n	406526 <_calloc_r+0x3e>
  406546:	bf00      	nop

00406548 <_close_r>:
  406548:	b538      	push	{r3, r4, r5, lr}
  40654a:	4c07      	ldr	r4, [pc, #28]	; (406568 <_close_r+0x20>)
  40654c:	2300      	movs	r3, #0
  40654e:	4605      	mov	r5, r0
  406550:	4608      	mov	r0, r1
  406552:	6023      	str	r3, [r4, #0]
  406554:	f7fb f8a2 	bl	40169c <_close>
  406558:	1c43      	adds	r3, r0, #1
  40655a:	d000      	beq.n	40655e <_close_r+0x16>
  40655c:	bd38      	pop	{r3, r4, r5, pc}
  40655e:	6823      	ldr	r3, [r4, #0]
  406560:	2b00      	cmp	r3, #0
  406562:	d0fb      	beq.n	40655c <_close_r+0x14>
  406564:	602b      	str	r3, [r5, #0]
  406566:	bd38      	pop	{r3, r4, r5, pc}
  406568:	20000f0c 	.word	0x20000f0c

0040656c <_fclose_r>:
  40656c:	b570      	push	{r4, r5, r6, lr}
  40656e:	b139      	cbz	r1, 406580 <_fclose_r+0x14>
  406570:	4605      	mov	r5, r0
  406572:	460c      	mov	r4, r1
  406574:	b108      	cbz	r0, 40657a <_fclose_r+0xe>
  406576:	6b83      	ldr	r3, [r0, #56]	; 0x38
  406578:	b383      	cbz	r3, 4065dc <_fclose_r+0x70>
  40657a:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  40657e:	b913      	cbnz	r3, 406586 <_fclose_r+0x1a>
  406580:	2600      	movs	r6, #0
  406582:	4630      	mov	r0, r6
  406584:	bd70      	pop	{r4, r5, r6, pc}
  406586:	4621      	mov	r1, r4
  406588:	4628      	mov	r0, r5
  40658a:	f7fe fc6b 	bl	404e64 <__sflush_r>
  40658e:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
  406590:	4606      	mov	r6, r0
  406592:	b133      	cbz	r3, 4065a2 <_fclose_r+0x36>
  406594:	69e1      	ldr	r1, [r4, #28]
  406596:	4628      	mov	r0, r5
  406598:	4798      	blx	r3
  40659a:	2800      	cmp	r0, #0
  40659c:	bfb8      	it	lt
  40659e:	f04f 36ff 	movlt.w	r6, #4294967295
  4065a2:	89a3      	ldrh	r3, [r4, #12]
  4065a4:	061b      	lsls	r3, r3, #24
  4065a6:	d41c      	bmi.n	4065e2 <_fclose_r+0x76>
  4065a8:	6b21      	ldr	r1, [r4, #48]	; 0x30
  4065aa:	b141      	cbz	r1, 4065be <_fclose_r+0x52>
  4065ac:	f104 0340 	add.w	r3, r4, #64	; 0x40
  4065b0:	4299      	cmp	r1, r3
  4065b2:	d002      	beq.n	4065ba <_fclose_r+0x4e>
  4065b4:	4628      	mov	r0, r5
  4065b6:	f7fe fdfd 	bl	4051b4 <_free_r>
  4065ba:	2300      	movs	r3, #0
  4065bc:	6323      	str	r3, [r4, #48]	; 0x30
  4065be:	6c61      	ldr	r1, [r4, #68]	; 0x44
  4065c0:	b121      	cbz	r1, 4065cc <_fclose_r+0x60>
  4065c2:	4628      	mov	r0, r5
  4065c4:	f7fe fdf6 	bl	4051b4 <_free_r>
  4065c8:	2300      	movs	r3, #0
  4065ca:	6463      	str	r3, [r4, #68]	; 0x44
  4065cc:	f7fe fd84 	bl	4050d8 <__sfp_lock_acquire>
  4065d0:	2300      	movs	r3, #0
  4065d2:	81a3      	strh	r3, [r4, #12]
  4065d4:	f7fe fd82 	bl	4050dc <__sfp_lock_release>
  4065d8:	4630      	mov	r0, r6
  4065da:	bd70      	pop	{r4, r5, r6, pc}
  4065dc:	f7fe fd76 	bl	4050cc <__sinit>
  4065e0:	e7cb      	b.n	40657a <_fclose_r+0xe>
  4065e2:	6921      	ldr	r1, [r4, #16]
  4065e4:	4628      	mov	r0, r5
  4065e6:	f7fe fde5 	bl	4051b4 <_free_r>
  4065ea:	e7dd      	b.n	4065a8 <_fclose_r+0x3c>

004065ec <_fstat_r>:
  4065ec:	b538      	push	{r3, r4, r5, lr}
  4065ee:	460b      	mov	r3, r1
  4065f0:	4c07      	ldr	r4, [pc, #28]	; (406610 <_fstat_r+0x24>)
  4065f2:	4605      	mov	r5, r0
  4065f4:	4611      	mov	r1, r2
  4065f6:	4618      	mov	r0, r3
  4065f8:	2300      	movs	r3, #0
  4065fa:	6023      	str	r3, [r4, #0]
  4065fc:	f7fb f851 	bl	4016a2 <_fstat>
  406600:	1c43      	adds	r3, r0, #1
  406602:	d000      	beq.n	406606 <_fstat_r+0x1a>
  406604:	bd38      	pop	{r3, r4, r5, pc}
  406606:	6823      	ldr	r3, [r4, #0]
  406608:	2b00      	cmp	r3, #0
  40660a:	d0fb      	beq.n	406604 <_fstat_r+0x18>
  40660c:	602b      	str	r3, [r5, #0]
  40660e:	bd38      	pop	{r3, r4, r5, pc}
  406610:	20000f0c 	.word	0x20000f0c

00406614 <_lseek_r>:
  406614:	b570      	push	{r4, r5, r6, lr}
  406616:	460d      	mov	r5, r1
  406618:	4c08      	ldr	r4, [pc, #32]	; (40663c <_lseek_r+0x28>)
  40661a:	4611      	mov	r1, r2
  40661c:	4606      	mov	r6, r0
  40661e:	461a      	mov	r2, r3
  406620:	4628      	mov	r0, r5
  406622:	2300      	movs	r3, #0
  406624:	6023      	str	r3, [r4, #0]
  406626:	f7fb f841 	bl	4016ac <_lseek>
  40662a:	1c43      	adds	r3, r0, #1
  40662c:	d000      	beq.n	406630 <_lseek_r+0x1c>
  40662e:	bd70      	pop	{r4, r5, r6, pc}
  406630:	6823      	ldr	r3, [r4, #0]
  406632:	2b00      	cmp	r3, #0
  406634:	d0fb      	beq.n	40662e <_lseek_r+0x1a>
  406636:	6033      	str	r3, [r6, #0]
  406638:	bd70      	pop	{r4, r5, r6, pc}
  40663a:	bf00      	nop
  40663c:	20000f0c 	.word	0x20000f0c

00406640 <__ascii_mbtowc>:
  406640:	b082      	sub	sp, #8
  406642:	b149      	cbz	r1, 406658 <__ascii_mbtowc+0x18>
  406644:	b15a      	cbz	r2, 40665e <__ascii_mbtowc+0x1e>
  406646:	b16b      	cbz	r3, 406664 <__ascii_mbtowc+0x24>
  406648:	7813      	ldrb	r3, [r2, #0]
  40664a:	600b      	str	r3, [r1, #0]
  40664c:	7812      	ldrb	r2, [r2, #0]
  40664e:	1c10      	adds	r0, r2, #0
  406650:	bf18      	it	ne
  406652:	2001      	movne	r0, #1
  406654:	b002      	add	sp, #8
  406656:	4770      	bx	lr
  406658:	a901      	add	r1, sp, #4
  40665a:	2a00      	cmp	r2, #0
  40665c:	d1f3      	bne.n	406646 <__ascii_mbtowc+0x6>
  40665e:	4610      	mov	r0, r2
  406660:	b002      	add	sp, #8
  406662:	4770      	bx	lr
  406664:	f06f 0001 	mvn.w	r0, #1
  406668:	e7f4      	b.n	406654 <__ascii_mbtowc+0x14>
  40666a:	bf00      	nop

0040666c <memmove>:
  40666c:	4288      	cmp	r0, r1
  40666e:	b5f0      	push	{r4, r5, r6, r7, lr}
  406670:	d90d      	bls.n	40668e <memmove+0x22>
  406672:	188b      	adds	r3, r1, r2
  406674:	4298      	cmp	r0, r3
  406676:	d20a      	bcs.n	40668e <memmove+0x22>
  406678:	1884      	adds	r4, r0, r2
  40667a:	2a00      	cmp	r2, #0
  40667c:	d051      	beq.n	406722 <memmove+0xb6>
  40667e:	4622      	mov	r2, r4
  406680:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
  406684:	f802 4d01 	strb.w	r4, [r2, #-1]!
  406688:	4299      	cmp	r1, r3
  40668a:	d1f9      	bne.n	406680 <memmove+0x14>
  40668c:	bdf0      	pop	{r4, r5, r6, r7, pc}
  40668e:	2a0f      	cmp	r2, #15
  406690:	d948      	bls.n	406724 <memmove+0xb8>
  406692:	ea41 0300 	orr.w	r3, r1, r0
  406696:	079b      	lsls	r3, r3, #30
  406698:	d146      	bne.n	406728 <memmove+0xbc>
  40669a:	f100 0410 	add.w	r4, r0, #16
  40669e:	f101 0310 	add.w	r3, r1, #16
  4066a2:	4615      	mov	r5, r2
  4066a4:	f853 6c10 	ldr.w	r6, [r3, #-16]
  4066a8:	f844 6c10 	str.w	r6, [r4, #-16]
  4066ac:	f853 6c0c 	ldr.w	r6, [r3, #-12]
  4066b0:	f844 6c0c 	str.w	r6, [r4, #-12]
  4066b4:	f853 6c08 	ldr.w	r6, [r3, #-8]
  4066b8:	f844 6c08 	str.w	r6, [r4, #-8]
  4066bc:	3d10      	subs	r5, #16
  4066be:	f853 6c04 	ldr.w	r6, [r3, #-4]
  4066c2:	f844 6c04 	str.w	r6, [r4, #-4]
  4066c6:	2d0f      	cmp	r5, #15
  4066c8:	f103 0310 	add.w	r3, r3, #16
  4066cc:	f104 0410 	add.w	r4, r4, #16
  4066d0:	d8e8      	bhi.n	4066a4 <memmove+0x38>
  4066d2:	f1a2 0310 	sub.w	r3, r2, #16
  4066d6:	f023 030f 	bic.w	r3, r3, #15
  4066da:	f002 0e0f 	and.w	lr, r2, #15
  4066de:	3310      	adds	r3, #16
  4066e0:	f1be 0f03 	cmp.w	lr, #3
  4066e4:	4419      	add	r1, r3
  4066e6:	4403      	add	r3, r0
  4066e8:	d921      	bls.n	40672e <memmove+0xc2>
  4066ea:	1f1e      	subs	r6, r3, #4
  4066ec:	460d      	mov	r5, r1
  4066ee:	4674      	mov	r4, lr
  4066f0:	3c04      	subs	r4, #4
  4066f2:	f855 7b04 	ldr.w	r7, [r5], #4
  4066f6:	f846 7f04 	str.w	r7, [r6, #4]!
  4066fa:	2c03      	cmp	r4, #3
  4066fc:	d8f8      	bhi.n	4066f0 <memmove+0x84>
  4066fe:	f1ae 0404 	sub.w	r4, lr, #4
  406702:	f024 0403 	bic.w	r4, r4, #3
  406706:	3404      	adds	r4, #4
  406708:	4421      	add	r1, r4
  40670a:	4423      	add	r3, r4
  40670c:	f002 0203 	and.w	r2, r2, #3
  406710:	b162      	cbz	r2, 40672c <memmove+0xc0>
  406712:	3b01      	subs	r3, #1
  406714:	440a      	add	r2, r1
  406716:	f811 4b01 	ldrb.w	r4, [r1], #1
  40671a:	f803 4f01 	strb.w	r4, [r3, #1]!
  40671e:	428a      	cmp	r2, r1
  406720:	d1f9      	bne.n	406716 <memmove+0xaa>
  406722:	bdf0      	pop	{r4, r5, r6, r7, pc}
  406724:	4603      	mov	r3, r0
  406726:	e7f3      	b.n	406710 <memmove+0xa4>
  406728:	4603      	mov	r3, r0
  40672a:	e7f2      	b.n	406712 <memmove+0xa6>
  40672c:	bdf0      	pop	{r4, r5, r6, r7, pc}
  40672e:	4672      	mov	r2, lr
  406730:	e7ee      	b.n	406710 <memmove+0xa4>
  406732:	bf00      	nop

00406734 <_read_r>:
  406734:	b570      	push	{r4, r5, r6, lr}
  406736:	460d      	mov	r5, r1
  406738:	4c08      	ldr	r4, [pc, #32]	; (40675c <_read_r+0x28>)
  40673a:	4611      	mov	r1, r2
  40673c:	4606      	mov	r6, r0
  40673e:	461a      	mov	r2, r3
  406740:	4628      	mov	r0, r5
  406742:	2300      	movs	r3, #0
  406744:	6023      	str	r3, [r4, #0]
  406746:	f7f9 fd29 	bl	40019c <_read>
  40674a:	1c43      	adds	r3, r0, #1
  40674c:	d000      	beq.n	406750 <_read_r+0x1c>
  40674e:	bd70      	pop	{r4, r5, r6, pc}
  406750:	6823      	ldr	r3, [r4, #0]
  406752:	2b00      	cmp	r3, #0
  406754:	d0fb      	beq.n	40674e <_read_r+0x1a>
  406756:	6033      	str	r3, [r6, #0]
  406758:	bd70      	pop	{r4, r5, r6, pc}
  40675a:	bf00      	nop
  40675c:	20000f0c 	.word	0x20000f0c

00406760 <_realloc_r>:
  406760:	2900      	cmp	r1, #0
  406762:	f000 8095 	beq.w	406890 <_realloc_r+0x130>
  406766:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  40676a:	460d      	mov	r5, r1
  40676c:	4616      	mov	r6, r2
  40676e:	b083      	sub	sp, #12
  406770:	4680      	mov	r8, r0
  406772:	f106 070b 	add.w	r7, r6, #11
  406776:	f7ff fa0d 	bl	405b94 <__malloc_lock>
  40677a:	f855 ec04 	ldr.w	lr, [r5, #-4]
  40677e:	2f16      	cmp	r7, #22
  406780:	f02e 0403 	bic.w	r4, lr, #3
  406784:	f1a5 0908 	sub.w	r9, r5, #8
  406788:	d83c      	bhi.n	406804 <_realloc_r+0xa4>
  40678a:	2210      	movs	r2, #16
  40678c:	4617      	mov	r7, r2
  40678e:	42be      	cmp	r6, r7
  406790:	d83d      	bhi.n	40680e <_realloc_r+0xae>
  406792:	4294      	cmp	r4, r2
  406794:	da43      	bge.n	40681e <_realloc_r+0xbe>
  406796:	4bc4      	ldr	r3, [pc, #784]	; (406aa8 <_realloc_r+0x348>)
  406798:	6899      	ldr	r1, [r3, #8]
  40679a:	eb09 0004 	add.w	r0, r9, r4
  40679e:	4288      	cmp	r0, r1
  4067a0:	f000 80b4 	beq.w	40690c <_realloc_r+0x1ac>
  4067a4:	6843      	ldr	r3, [r0, #4]
  4067a6:	f023 0101 	bic.w	r1, r3, #1
  4067aa:	4401      	add	r1, r0
  4067ac:	6849      	ldr	r1, [r1, #4]
  4067ae:	07c9      	lsls	r1, r1, #31
  4067b0:	d54c      	bpl.n	40684c <_realloc_r+0xec>
  4067b2:	f01e 0f01 	tst.w	lr, #1
  4067b6:	f000 809b 	beq.w	4068f0 <_realloc_r+0x190>
  4067ba:	4631      	mov	r1, r6
  4067bc:	4640      	mov	r0, r8
  4067be:	f7fe fe4d 	bl	40545c <_malloc_r>
  4067c2:	4606      	mov	r6, r0
  4067c4:	2800      	cmp	r0, #0
  4067c6:	d03a      	beq.n	40683e <_realloc_r+0xde>
  4067c8:	f855 3c04 	ldr.w	r3, [r5, #-4]
  4067cc:	f023 0301 	bic.w	r3, r3, #1
  4067d0:	444b      	add	r3, r9
  4067d2:	f1a0 0208 	sub.w	r2, r0, #8
  4067d6:	429a      	cmp	r2, r3
  4067d8:	f000 8121 	beq.w	406a1e <_realloc_r+0x2be>
  4067dc:	1f22      	subs	r2, r4, #4
  4067de:	2a24      	cmp	r2, #36	; 0x24
  4067e0:	f200 8107 	bhi.w	4069f2 <_realloc_r+0x292>
  4067e4:	2a13      	cmp	r2, #19
  4067e6:	f200 80db 	bhi.w	4069a0 <_realloc_r+0x240>
  4067ea:	4603      	mov	r3, r0
  4067ec:	462a      	mov	r2, r5
  4067ee:	6811      	ldr	r1, [r2, #0]
  4067f0:	6019      	str	r1, [r3, #0]
  4067f2:	6851      	ldr	r1, [r2, #4]
  4067f4:	6059      	str	r1, [r3, #4]
  4067f6:	6892      	ldr	r2, [r2, #8]
  4067f8:	609a      	str	r2, [r3, #8]
  4067fa:	4629      	mov	r1, r5
  4067fc:	4640      	mov	r0, r8
  4067fe:	f7fe fcd9 	bl	4051b4 <_free_r>
  406802:	e01c      	b.n	40683e <_realloc_r+0xde>
  406804:	f027 0707 	bic.w	r7, r7, #7
  406808:	2f00      	cmp	r7, #0
  40680a:	463a      	mov	r2, r7
  40680c:	dabf      	bge.n	40678e <_realloc_r+0x2e>
  40680e:	2600      	movs	r6, #0
  406810:	230c      	movs	r3, #12
  406812:	4630      	mov	r0, r6
  406814:	f8c8 3000 	str.w	r3, [r8]
  406818:	b003      	add	sp, #12
  40681a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  40681e:	462e      	mov	r6, r5
  406820:	1be3      	subs	r3, r4, r7
  406822:	2b0f      	cmp	r3, #15
  406824:	d81e      	bhi.n	406864 <_realloc_r+0x104>
  406826:	f8d9 3004 	ldr.w	r3, [r9, #4]
  40682a:	f003 0301 	and.w	r3, r3, #1
  40682e:	4323      	orrs	r3, r4
  406830:	444c      	add	r4, r9
  406832:	f8c9 3004 	str.w	r3, [r9, #4]
  406836:	6863      	ldr	r3, [r4, #4]
  406838:	f043 0301 	orr.w	r3, r3, #1
  40683c:	6063      	str	r3, [r4, #4]
  40683e:	4640      	mov	r0, r8
  406840:	f7ff f9aa 	bl	405b98 <__malloc_unlock>
  406844:	4630      	mov	r0, r6
  406846:	b003      	add	sp, #12
  406848:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  40684c:	f023 0303 	bic.w	r3, r3, #3
  406850:	18e1      	adds	r1, r4, r3
  406852:	4291      	cmp	r1, r2
  406854:	db1f      	blt.n	406896 <_realloc_r+0x136>
  406856:	68c3      	ldr	r3, [r0, #12]
  406858:	6882      	ldr	r2, [r0, #8]
  40685a:	462e      	mov	r6, r5
  40685c:	60d3      	str	r3, [r2, #12]
  40685e:	460c      	mov	r4, r1
  406860:	609a      	str	r2, [r3, #8]
  406862:	e7dd      	b.n	406820 <_realloc_r+0xc0>
  406864:	f8d9 2004 	ldr.w	r2, [r9, #4]
  406868:	eb09 0107 	add.w	r1, r9, r7
  40686c:	f002 0201 	and.w	r2, r2, #1
  406870:	444c      	add	r4, r9
  406872:	f043 0301 	orr.w	r3, r3, #1
  406876:	4317      	orrs	r7, r2
  406878:	f8c9 7004 	str.w	r7, [r9, #4]
  40687c:	604b      	str	r3, [r1, #4]
  40687e:	6863      	ldr	r3, [r4, #4]
  406880:	f043 0301 	orr.w	r3, r3, #1
  406884:	3108      	adds	r1, #8
  406886:	6063      	str	r3, [r4, #4]
  406888:	4640      	mov	r0, r8
  40688a:	f7fe fc93 	bl	4051b4 <_free_r>
  40688e:	e7d6      	b.n	40683e <_realloc_r+0xde>
  406890:	4611      	mov	r1, r2
  406892:	f7fe bde3 	b.w	40545c <_malloc_r>
  406896:	f01e 0f01 	tst.w	lr, #1
  40689a:	d18e      	bne.n	4067ba <_realloc_r+0x5a>
  40689c:	f855 1c08 	ldr.w	r1, [r5, #-8]
  4068a0:	eba9 0a01 	sub.w	sl, r9, r1
  4068a4:	f8da 1004 	ldr.w	r1, [sl, #4]
  4068a8:	f021 0103 	bic.w	r1, r1, #3
  4068ac:	440b      	add	r3, r1
  4068ae:	4423      	add	r3, r4
  4068b0:	4293      	cmp	r3, r2
  4068b2:	db25      	blt.n	406900 <_realloc_r+0x1a0>
  4068b4:	68c2      	ldr	r2, [r0, #12]
  4068b6:	6881      	ldr	r1, [r0, #8]
  4068b8:	4656      	mov	r6, sl
  4068ba:	60ca      	str	r2, [r1, #12]
  4068bc:	6091      	str	r1, [r2, #8]
  4068be:	f8da 100c 	ldr.w	r1, [sl, #12]
  4068c2:	f856 0f08 	ldr.w	r0, [r6, #8]!
  4068c6:	1f22      	subs	r2, r4, #4
  4068c8:	2a24      	cmp	r2, #36	; 0x24
  4068ca:	60c1      	str	r1, [r0, #12]
  4068cc:	6088      	str	r0, [r1, #8]
  4068ce:	f200 8094 	bhi.w	4069fa <_realloc_r+0x29a>
  4068d2:	2a13      	cmp	r2, #19
  4068d4:	d96f      	bls.n	4069b6 <_realloc_r+0x256>
  4068d6:	6829      	ldr	r1, [r5, #0]
  4068d8:	f8ca 1008 	str.w	r1, [sl, #8]
  4068dc:	6869      	ldr	r1, [r5, #4]
  4068de:	f8ca 100c 	str.w	r1, [sl, #12]
  4068e2:	2a1b      	cmp	r2, #27
  4068e4:	f200 80a2 	bhi.w	406a2c <_realloc_r+0x2cc>
  4068e8:	3508      	adds	r5, #8
  4068ea:	f10a 0210 	add.w	r2, sl, #16
  4068ee:	e063      	b.n	4069b8 <_realloc_r+0x258>
  4068f0:	f855 3c08 	ldr.w	r3, [r5, #-8]
  4068f4:	eba9 0a03 	sub.w	sl, r9, r3
  4068f8:	f8da 1004 	ldr.w	r1, [sl, #4]
  4068fc:	f021 0103 	bic.w	r1, r1, #3
  406900:	1863      	adds	r3, r4, r1
  406902:	4293      	cmp	r3, r2
  406904:	f6ff af59 	blt.w	4067ba <_realloc_r+0x5a>
  406908:	4656      	mov	r6, sl
  40690a:	e7d8      	b.n	4068be <_realloc_r+0x15e>
  40690c:	6841      	ldr	r1, [r0, #4]
  40690e:	f021 0b03 	bic.w	fp, r1, #3
  406912:	44a3      	add	fp, r4
  406914:	f107 0010 	add.w	r0, r7, #16
  406918:	4583      	cmp	fp, r0
  40691a:	da56      	bge.n	4069ca <_realloc_r+0x26a>
  40691c:	f01e 0f01 	tst.w	lr, #1
  406920:	f47f af4b 	bne.w	4067ba <_realloc_r+0x5a>
  406924:	f855 1c08 	ldr.w	r1, [r5, #-8]
  406928:	eba9 0a01 	sub.w	sl, r9, r1
  40692c:	f8da 1004 	ldr.w	r1, [sl, #4]
  406930:	f021 0103 	bic.w	r1, r1, #3
  406934:	448b      	add	fp, r1
  406936:	4558      	cmp	r0, fp
  406938:	dce2      	bgt.n	406900 <_realloc_r+0x1a0>
  40693a:	4656      	mov	r6, sl
  40693c:	f8da 100c 	ldr.w	r1, [sl, #12]
  406940:	f856 0f08 	ldr.w	r0, [r6, #8]!
  406944:	1f22      	subs	r2, r4, #4
  406946:	2a24      	cmp	r2, #36	; 0x24
  406948:	60c1      	str	r1, [r0, #12]
  40694a:	6088      	str	r0, [r1, #8]
  40694c:	f200 808f 	bhi.w	406a6e <_realloc_r+0x30e>
  406950:	2a13      	cmp	r2, #19
  406952:	f240 808a 	bls.w	406a6a <_realloc_r+0x30a>
  406956:	6829      	ldr	r1, [r5, #0]
  406958:	f8ca 1008 	str.w	r1, [sl, #8]
  40695c:	6869      	ldr	r1, [r5, #4]
  40695e:	f8ca 100c 	str.w	r1, [sl, #12]
  406962:	2a1b      	cmp	r2, #27
  406964:	f200 808a 	bhi.w	406a7c <_realloc_r+0x31c>
  406968:	3508      	adds	r5, #8
  40696a:	f10a 0210 	add.w	r2, sl, #16
  40696e:	6829      	ldr	r1, [r5, #0]
  406970:	6011      	str	r1, [r2, #0]
  406972:	6869      	ldr	r1, [r5, #4]
  406974:	6051      	str	r1, [r2, #4]
  406976:	68a9      	ldr	r1, [r5, #8]
  406978:	6091      	str	r1, [r2, #8]
  40697a:	eb0a 0107 	add.w	r1, sl, r7
  40697e:	ebab 0207 	sub.w	r2, fp, r7
  406982:	f042 0201 	orr.w	r2, r2, #1
  406986:	6099      	str	r1, [r3, #8]
  406988:	604a      	str	r2, [r1, #4]
  40698a:	f8da 3004 	ldr.w	r3, [sl, #4]
  40698e:	f003 0301 	and.w	r3, r3, #1
  406992:	431f      	orrs	r7, r3
  406994:	4640      	mov	r0, r8
  406996:	f8ca 7004 	str.w	r7, [sl, #4]
  40699a:	f7ff f8fd 	bl	405b98 <__malloc_unlock>
  40699e:	e751      	b.n	406844 <_realloc_r+0xe4>
  4069a0:	682b      	ldr	r3, [r5, #0]
  4069a2:	6003      	str	r3, [r0, #0]
  4069a4:	686b      	ldr	r3, [r5, #4]
  4069a6:	6043      	str	r3, [r0, #4]
  4069a8:	2a1b      	cmp	r2, #27
  4069aa:	d82d      	bhi.n	406a08 <_realloc_r+0x2a8>
  4069ac:	f100 0308 	add.w	r3, r0, #8
  4069b0:	f105 0208 	add.w	r2, r5, #8
  4069b4:	e71b      	b.n	4067ee <_realloc_r+0x8e>
  4069b6:	4632      	mov	r2, r6
  4069b8:	6829      	ldr	r1, [r5, #0]
  4069ba:	6011      	str	r1, [r2, #0]
  4069bc:	6869      	ldr	r1, [r5, #4]
  4069be:	6051      	str	r1, [r2, #4]
  4069c0:	68a9      	ldr	r1, [r5, #8]
  4069c2:	6091      	str	r1, [r2, #8]
  4069c4:	461c      	mov	r4, r3
  4069c6:	46d1      	mov	r9, sl
  4069c8:	e72a      	b.n	406820 <_realloc_r+0xc0>
  4069ca:	eb09 0107 	add.w	r1, r9, r7
  4069ce:	ebab 0b07 	sub.w	fp, fp, r7
  4069d2:	f04b 0201 	orr.w	r2, fp, #1
  4069d6:	6099      	str	r1, [r3, #8]
  4069d8:	604a      	str	r2, [r1, #4]
  4069da:	f855 3c04 	ldr.w	r3, [r5, #-4]
  4069de:	f003 0301 	and.w	r3, r3, #1
  4069e2:	431f      	orrs	r7, r3
  4069e4:	4640      	mov	r0, r8
  4069e6:	f845 7c04 	str.w	r7, [r5, #-4]
  4069ea:	f7ff f8d5 	bl	405b98 <__malloc_unlock>
  4069ee:	462e      	mov	r6, r5
  4069f0:	e728      	b.n	406844 <_realloc_r+0xe4>
  4069f2:	4629      	mov	r1, r5
  4069f4:	f7ff fe3a 	bl	40666c <memmove>
  4069f8:	e6ff      	b.n	4067fa <_realloc_r+0x9a>
  4069fa:	4629      	mov	r1, r5
  4069fc:	4630      	mov	r0, r6
  4069fe:	461c      	mov	r4, r3
  406a00:	46d1      	mov	r9, sl
  406a02:	f7ff fe33 	bl	40666c <memmove>
  406a06:	e70b      	b.n	406820 <_realloc_r+0xc0>
  406a08:	68ab      	ldr	r3, [r5, #8]
  406a0a:	6083      	str	r3, [r0, #8]
  406a0c:	68eb      	ldr	r3, [r5, #12]
  406a0e:	60c3      	str	r3, [r0, #12]
  406a10:	2a24      	cmp	r2, #36	; 0x24
  406a12:	d017      	beq.n	406a44 <_realloc_r+0x2e4>
  406a14:	f100 0310 	add.w	r3, r0, #16
  406a18:	f105 0210 	add.w	r2, r5, #16
  406a1c:	e6e7      	b.n	4067ee <_realloc_r+0x8e>
  406a1e:	f850 3c04 	ldr.w	r3, [r0, #-4]
  406a22:	f023 0303 	bic.w	r3, r3, #3
  406a26:	441c      	add	r4, r3
  406a28:	462e      	mov	r6, r5
  406a2a:	e6f9      	b.n	406820 <_realloc_r+0xc0>
  406a2c:	68a9      	ldr	r1, [r5, #8]
  406a2e:	f8ca 1010 	str.w	r1, [sl, #16]
  406a32:	68e9      	ldr	r1, [r5, #12]
  406a34:	f8ca 1014 	str.w	r1, [sl, #20]
  406a38:	2a24      	cmp	r2, #36	; 0x24
  406a3a:	d00c      	beq.n	406a56 <_realloc_r+0x2f6>
  406a3c:	3510      	adds	r5, #16
  406a3e:	f10a 0218 	add.w	r2, sl, #24
  406a42:	e7b9      	b.n	4069b8 <_realloc_r+0x258>
  406a44:	692b      	ldr	r3, [r5, #16]
  406a46:	6103      	str	r3, [r0, #16]
  406a48:	696b      	ldr	r3, [r5, #20]
  406a4a:	6143      	str	r3, [r0, #20]
  406a4c:	f105 0218 	add.w	r2, r5, #24
  406a50:	f100 0318 	add.w	r3, r0, #24
  406a54:	e6cb      	b.n	4067ee <_realloc_r+0x8e>
  406a56:	692a      	ldr	r2, [r5, #16]
  406a58:	f8ca 2018 	str.w	r2, [sl, #24]
  406a5c:	696a      	ldr	r2, [r5, #20]
  406a5e:	f8ca 201c 	str.w	r2, [sl, #28]
  406a62:	3518      	adds	r5, #24
  406a64:	f10a 0220 	add.w	r2, sl, #32
  406a68:	e7a6      	b.n	4069b8 <_realloc_r+0x258>
  406a6a:	4632      	mov	r2, r6
  406a6c:	e77f      	b.n	40696e <_realloc_r+0x20e>
  406a6e:	4629      	mov	r1, r5
  406a70:	4630      	mov	r0, r6
  406a72:	9301      	str	r3, [sp, #4]
  406a74:	f7ff fdfa 	bl	40666c <memmove>
  406a78:	9b01      	ldr	r3, [sp, #4]
  406a7a:	e77e      	b.n	40697a <_realloc_r+0x21a>
  406a7c:	68a9      	ldr	r1, [r5, #8]
  406a7e:	f8ca 1010 	str.w	r1, [sl, #16]
  406a82:	68e9      	ldr	r1, [r5, #12]
  406a84:	f8ca 1014 	str.w	r1, [sl, #20]
  406a88:	2a24      	cmp	r2, #36	; 0x24
  406a8a:	d003      	beq.n	406a94 <_realloc_r+0x334>
  406a8c:	3510      	adds	r5, #16
  406a8e:	f10a 0218 	add.w	r2, sl, #24
  406a92:	e76c      	b.n	40696e <_realloc_r+0x20e>
  406a94:	692a      	ldr	r2, [r5, #16]
  406a96:	f8ca 2018 	str.w	r2, [sl, #24]
  406a9a:	696a      	ldr	r2, [r5, #20]
  406a9c:	f8ca 201c 	str.w	r2, [sl, #28]
  406aa0:	3518      	adds	r5, #24
  406aa2:	f10a 0220 	add.w	r2, sl, #32
  406aa6:	e762      	b.n	40696e <_realloc_r+0x20e>
  406aa8:	20000470 	.word	0x20000470

00406aac <__ascii_wctomb>:
  406aac:	b121      	cbz	r1, 406ab8 <__ascii_wctomb+0xc>
  406aae:	2aff      	cmp	r2, #255	; 0xff
  406ab0:	d804      	bhi.n	406abc <__ascii_wctomb+0x10>
  406ab2:	700a      	strb	r2, [r1, #0]
  406ab4:	2001      	movs	r0, #1
  406ab6:	4770      	bx	lr
  406ab8:	4608      	mov	r0, r1
  406aba:	4770      	bx	lr
  406abc:	238a      	movs	r3, #138	; 0x8a
  406abe:	6003      	str	r3, [r0, #0]
  406ac0:	f04f 30ff 	mov.w	r0, #4294967295
  406ac4:	4770      	bx	lr
  406ac6:	bf00      	nop

00406ac8 <__gedf2>:
  406ac8:	f04f 3cff 	mov.w	ip, #4294967295
  406acc:	e006      	b.n	406adc <__cmpdf2+0x4>
  406ace:	bf00      	nop

00406ad0 <__ledf2>:
  406ad0:	f04f 0c01 	mov.w	ip, #1
  406ad4:	e002      	b.n	406adc <__cmpdf2+0x4>
  406ad6:	bf00      	nop

00406ad8 <__cmpdf2>:
  406ad8:	f04f 0c01 	mov.w	ip, #1
  406adc:	f84d cd04 	str.w	ip, [sp, #-4]!
  406ae0:	ea4f 0c41 	mov.w	ip, r1, lsl #1
  406ae4:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
  406ae8:	ea4f 0c43 	mov.w	ip, r3, lsl #1
  406aec:	bf18      	it	ne
  406aee:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
  406af2:	d01b      	beq.n	406b2c <__cmpdf2+0x54>
  406af4:	b001      	add	sp, #4
  406af6:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
  406afa:	bf0c      	ite	eq
  406afc:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
  406b00:	ea91 0f03 	teqne	r1, r3
  406b04:	bf02      	ittt	eq
  406b06:	ea90 0f02 	teqeq	r0, r2
  406b0a:	2000      	moveq	r0, #0
  406b0c:	4770      	bxeq	lr
  406b0e:	f110 0f00 	cmn.w	r0, #0
  406b12:	ea91 0f03 	teq	r1, r3
  406b16:	bf58      	it	pl
  406b18:	4299      	cmppl	r1, r3
  406b1a:	bf08      	it	eq
  406b1c:	4290      	cmpeq	r0, r2
  406b1e:	bf2c      	ite	cs
  406b20:	17d8      	asrcs	r0, r3, #31
  406b22:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
  406b26:	f040 0001 	orr.w	r0, r0, #1
  406b2a:	4770      	bx	lr
  406b2c:	ea4f 0c41 	mov.w	ip, r1, lsl #1
  406b30:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
  406b34:	d102      	bne.n	406b3c <__cmpdf2+0x64>
  406b36:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
  406b3a:	d107      	bne.n	406b4c <__cmpdf2+0x74>
  406b3c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
  406b40:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
  406b44:	d1d6      	bne.n	406af4 <__cmpdf2+0x1c>
  406b46:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
  406b4a:	d0d3      	beq.n	406af4 <__cmpdf2+0x1c>
  406b4c:	f85d 0b04 	ldr.w	r0, [sp], #4
  406b50:	4770      	bx	lr
  406b52:	bf00      	nop

00406b54 <__aeabi_cdrcmple>:
  406b54:	4684      	mov	ip, r0
  406b56:	4610      	mov	r0, r2
  406b58:	4662      	mov	r2, ip
  406b5a:	468c      	mov	ip, r1
  406b5c:	4619      	mov	r1, r3
  406b5e:	4663      	mov	r3, ip
  406b60:	e000      	b.n	406b64 <__aeabi_cdcmpeq>
  406b62:	bf00      	nop

00406b64 <__aeabi_cdcmpeq>:
  406b64:	b501      	push	{r0, lr}
  406b66:	f7ff ffb7 	bl	406ad8 <__cmpdf2>
  406b6a:	2800      	cmp	r0, #0
  406b6c:	bf48      	it	mi
  406b6e:	f110 0f00 	cmnmi.w	r0, #0
  406b72:	bd01      	pop	{r0, pc}

00406b74 <__aeabi_dcmpeq>:
  406b74:	f84d ed08 	str.w	lr, [sp, #-8]!
  406b78:	f7ff fff4 	bl	406b64 <__aeabi_cdcmpeq>
  406b7c:	bf0c      	ite	eq
  406b7e:	2001      	moveq	r0, #1
  406b80:	2000      	movne	r0, #0
  406b82:	f85d fb08 	ldr.w	pc, [sp], #8
  406b86:	bf00      	nop

00406b88 <__aeabi_dcmplt>:
  406b88:	f84d ed08 	str.w	lr, [sp, #-8]!
  406b8c:	f7ff ffea 	bl	406b64 <__aeabi_cdcmpeq>
  406b90:	bf34      	ite	cc
  406b92:	2001      	movcc	r0, #1
  406b94:	2000      	movcs	r0, #0
  406b96:	f85d fb08 	ldr.w	pc, [sp], #8
  406b9a:	bf00      	nop

00406b9c <__aeabi_dcmple>:
  406b9c:	f84d ed08 	str.w	lr, [sp, #-8]!
  406ba0:	f7ff ffe0 	bl	406b64 <__aeabi_cdcmpeq>
  406ba4:	bf94      	ite	ls
  406ba6:	2001      	movls	r0, #1
  406ba8:	2000      	movhi	r0, #0
  406baa:	f85d fb08 	ldr.w	pc, [sp], #8
  406bae:	bf00      	nop

00406bb0 <__aeabi_dcmpge>:
  406bb0:	f84d ed08 	str.w	lr, [sp, #-8]!
  406bb4:	f7ff ffce 	bl	406b54 <__aeabi_cdrcmple>
  406bb8:	bf94      	ite	ls
  406bba:	2001      	movls	r0, #1
  406bbc:	2000      	movhi	r0, #0
  406bbe:	f85d fb08 	ldr.w	pc, [sp], #8
  406bc2:	bf00      	nop

00406bc4 <__aeabi_dcmpgt>:
  406bc4:	f84d ed08 	str.w	lr, [sp, #-8]!
  406bc8:	f7ff ffc4 	bl	406b54 <__aeabi_cdrcmple>
  406bcc:	bf34      	ite	cc
  406bce:	2001      	movcc	r0, #1
  406bd0:	2000      	movcs	r0, #0
  406bd2:	f85d fb08 	ldr.w	pc, [sp], #8
  406bd6:	bf00      	nop

00406bd8 <__aeabi_dcmpun>:
  406bd8:	ea4f 0c41 	mov.w	ip, r1, lsl #1
  406bdc:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
  406be0:	d102      	bne.n	406be8 <__aeabi_dcmpun+0x10>
  406be2:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
  406be6:	d10a      	bne.n	406bfe <__aeabi_dcmpun+0x26>
  406be8:	ea4f 0c43 	mov.w	ip, r3, lsl #1
  406bec:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
  406bf0:	d102      	bne.n	406bf8 <__aeabi_dcmpun+0x20>
  406bf2:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
  406bf6:	d102      	bne.n	406bfe <__aeabi_dcmpun+0x26>
  406bf8:	f04f 0000 	mov.w	r0, #0
  406bfc:	4770      	bx	lr
  406bfe:	f04f 0001 	mov.w	r0, #1
  406c02:	4770      	bx	lr

00406c04 <__aeabi_uldivmod>:
  406c04:	b953      	cbnz	r3, 406c1c <__aeabi_uldivmod+0x18>
  406c06:	b94a      	cbnz	r2, 406c1c <__aeabi_uldivmod+0x18>
  406c08:	2900      	cmp	r1, #0
  406c0a:	bf08      	it	eq
  406c0c:	2800      	cmpeq	r0, #0
  406c0e:	bf1c      	itt	ne
  406c10:	f04f 31ff 	movne.w	r1, #4294967295
  406c14:	f04f 30ff 	movne.w	r0, #4294967295
  406c18:	f000 b97a 	b.w	406f10 <__aeabi_idiv0>
  406c1c:	f1ad 0c08 	sub.w	ip, sp, #8
  406c20:	e96d ce04 	strd	ip, lr, [sp, #-16]!
  406c24:	f000 f806 	bl	406c34 <__udivmoddi4>
  406c28:	f8dd e004 	ldr.w	lr, [sp, #4]
  406c2c:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
  406c30:	b004      	add	sp, #16
  406c32:	4770      	bx	lr

00406c34 <__udivmoddi4>:
  406c34:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
  406c38:	468c      	mov	ip, r1
  406c3a:	460d      	mov	r5, r1
  406c3c:	4604      	mov	r4, r0
  406c3e:	9e08      	ldr	r6, [sp, #32]
  406c40:	2b00      	cmp	r3, #0
  406c42:	d151      	bne.n	406ce8 <__udivmoddi4+0xb4>
  406c44:	428a      	cmp	r2, r1
  406c46:	4617      	mov	r7, r2
  406c48:	d96d      	bls.n	406d26 <__udivmoddi4+0xf2>
  406c4a:	fab2 fe82 	clz	lr, r2
  406c4e:	f1be 0f00 	cmp.w	lr, #0
  406c52:	d00b      	beq.n	406c6c <__udivmoddi4+0x38>
  406c54:	f1ce 0c20 	rsb	ip, lr, #32
  406c58:	fa01 f50e 	lsl.w	r5, r1, lr
  406c5c:	fa20 fc0c 	lsr.w	ip, r0, ip
  406c60:	fa02 f70e 	lsl.w	r7, r2, lr
  406c64:	ea4c 0c05 	orr.w	ip, ip, r5
  406c68:	fa00 f40e 	lsl.w	r4, r0, lr
  406c6c:	ea4f 4a17 	mov.w	sl, r7, lsr #16
  406c70:	0c25      	lsrs	r5, r4, #16
  406c72:	fbbc f8fa 	udiv	r8, ip, sl
  406c76:	fa1f f987 	uxth.w	r9, r7
  406c7a:	fb0a cc18 	mls	ip, sl, r8, ip
  406c7e:	ea45 450c 	orr.w	r5, r5, ip, lsl #16
  406c82:	fb08 f309 	mul.w	r3, r8, r9
  406c86:	42ab      	cmp	r3, r5
  406c88:	d90a      	bls.n	406ca0 <__udivmoddi4+0x6c>
  406c8a:	19ed      	adds	r5, r5, r7
  406c8c:	f108 32ff 	add.w	r2, r8, #4294967295
  406c90:	f080 8123 	bcs.w	406eda <__udivmoddi4+0x2a6>
  406c94:	42ab      	cmp	r3, r5
  406c96:	f240 8120 	bls.w	406eda <__udivmoddi4+0x2a6>
  406c9a:	f1a8 0802 	sub.w	r8, r8, #2
  406c9e:	443d      	add	r5, r7
  406ca0:	1aed      	subs	r5, r5, r3
  406ca2:	b2a4      	uxth	r4, r4
  406ca4:	fbb5 f0fa 	udiv	r0, r5, sl
  406ca8:	fb0a 5510 	mls	r5, sl, r0, r5
  406cac:	ea44 4405 	orr.w	r4, r4, r5, lsl #16
  406cb0:	fb00 f909 	mul.w	r9, r0, r9
  406cb4:	45a1      	cmp	r9, r4
  406cb6:	d909      	bls.n	406ccc <__udivmoddi4+0x98>
  406cb8:	19e4      	adds	r4, r4, r7
  406cba:	f100 33ff 	add.w	r3, r0, #4294967295
  406cbe:	f080 810a 	bcs.w	406ed6 <__udivmoddi4+0x2a2>
  406cc2:	45a1      	cmp	r9, r4
  406cc4:	f240 8107 	bls.w	406ed6 <__udivmoddi4+0x2a2>
  406cc8:	3802      	subs	r0, #2
  406cca:	443c      	add	r4, r7
  406ccc:	eba4 0409 	sub.w	r4, r4, r9
  406cd0:	ea40 4008 	orr.w	r0, r0, r8, lsl #16
  406cd4:	2100      	movs	r1, #0
  406cd6:	2e00      	cmp	r6, #0
  406cd8:	d061      	beq.n	406d9e <__udivmoddi4+0x16a>
  406cda:	fa24 f40e 	lsr.w	r4, r4, lr
  406cde:	2300      	movs	r3, #0
  406ce0:	6034      	str	r4, [r6, #0]
  406ce2:	6073      	str	r3, [r6, #4]
  406ce4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  406ce8:	428b      	cmp	r3, r1
  406cea:	d907      	bls.n	406cfc <__udivmoddi4+0xc8>
  406cec:	2e00      	cmp	r6, #0
  406cee:	d054      	beq.n	406d9a <__udivmoddi4+0x166>
  406cf0:	2100      	movs	r1, #0
  406cf2:	e886 0021 	stmia.w	r6, {r0, r5}
  406cf6:	4608      	mov	r0, r1
  406cf8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  406cfc:	fab3 f183 	clz	r1, r3
  406d00:	2900      	cmp	r1, #0
  406d02:	f040 808e 	bne.w	406e22 <__udivmoddi4+0x1ee>
  406d06:	42ab      	cmp	r3, r5
  406d08:	d302      	bcc.n	406d10 <__udivmoddi4+0xdc>
  406d0a:	4282      	cmp	r2, r0
  406d0c:	f200 80fa 	bhi.w	406f04 <__udivmoddi4+0x2d0>
  406d10:	1a84      	subs	r4, r0, r2
  406d12:	eb65 0503 	sbc.w	r5, r5, r3
  406d16:	2001      	movs	r0, #1
  406d18:	46ac      	mov	ip, r5
  406d1a:	2e00      	cmp	r6, #0
  406d1c:	d03f      	beq.n	406d9e <__udivmoddi4+0x16a>
  406d1e:	e886 1010 	stmia.w	r6, {r4, ip}
  406d22:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  406d26:	b912      	cbnz	r2, 406d2e <__udivmoddi4+0xfa>
  406d28:	2701      	movs	r7, #1
  406d2a:	fbb7 f7f2 	udiv	r7, r7, r2
  406d2e:	fab7 fe87 	clz	lr, r7
  406d32:	f1be 0f00 	cmp.w	lr, #0
  406d36:	d134      	bne.n	406da2 <__udivmoddi4+0x16e>
  406d38:	1beb      	subs	r3, r5, r7
  406d3a:	0c3a      	lsrs	r2, r7, #16
  406d3c:	fa1f fc87 	uxth.w	ip, r7
  406d40:	2101      	movs	r1, #1
  406d42:	fbb3 f8f2 	udiv	r8, r3, r2
  406d46:	0c25      	lsrs	r5, r4, #16
  406d48:	fb02 3318 	mls	r3, r2, r8, r3
  406d4c:	ea45 4503 	orr.w	r5, r5, r3, lsl #16
  406d50:	fb0c f308 	mul.w	r3, ip, r8
  406d54:	42ab      	cmp	r3, r5
  406d56:	d907      	bls.n	406d68 <__udivmoddi4+0x134>
  406d58:	19ed      	adds	r5, r5, r7
  406d5a:	f108 30ff 	add.w	r0, r8, #4294967295
  406d5e:	d202      	bcs.n	406d66 <__udivmoddi4+0x132>
  406d60:	42ab      	cmp	r3, r5
  406d62:	f200 80d1 	bhi.w	406f08 <__udivmoddi4+0x2d4>
  406d66:	4680      	mov	r8, r0
  406d68:	1aed      	subs	r5, r5, r3
  406d6a:	b2a3      	uxth	r3, r4
  406d6c:	fbb5 f0f2 	udiv	r0, r5, r2
  406d70:	fb02 5510 	mls	r5, r2, r0, r5
  406d74:	ea43 4405 	orr.w	r4, r3, r5, lsl #16
  406d78:	fb0c fc00 	mul.w	ip, ip, r0
  406d7c:	45a4      	cmp	ip, r4
  406d7e:	d907      	bls.n	406d90 <__udivmoddi4+0x15c>
  406d80:	19e4      	adds	r4, r4, r7
  406d82:	f100 33ff 	add.w	r3, r0, #4294967295
  406d86:	d202      	bcs.n	406d8e <__udivmoddi4+0x15a>
  406d88:	45a4      	cmp	ip, r4
  406d8a:	f200 80b8 	bhi.w	406efe <__udivmoddi4+0x2ca>
  406d8e:	4618      	mov	r0, r3
  406d90:	eba4 040c 	sub.w	r4, r4, ip
  406d94:	ea40 4008 	orr.w	r0, r0, r8, lsl #16
  406d98:	e79d      	b.n	406cd6 <__udivmoddi4+0xa2>
  406d9a:	4631      	mov	r1, r6
  406d9c:	4630      	mov	r0, r6
  406d9e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  406da2:	f1ce 0420 	rsb	r4, lr, #32
  406da6:	fa05 f30e 	lsl.w	r3, r5, lr
  406daa:	fa07 f70e 	lsl.w	r7, r7, lr
  406dae:	fa20 f804 	lsr.w	r8, r0, r4
  406db2:	0c3a      	lsrs	r2, r7, #16
  406db4:	fa25 f404 	lsr.w	r4, r5, r4
  406db8:	ea48 0803 	orr.w	r8, r8, r3
  406dbc:	fbb4 f1f2 	udiv	r1, r4, r2
  406dc0:	ea4f 4518 	mov.w	r5, r8, lsr #16
  406dc4:	fb02 4411 	mls	r4, r2, r1, r4
  406dc8:	fa1f fc87 	uxth.w	ip, r7
  406dcc:	ea45 4504 	orr.w	r5, r5, r4, lsl #16
  406dd0:	fb01 f30c 	mul.w	r3, r1, ip
  406dd4:	42ab      	cmp	r3, r5
  406dd6:	fa00 f40e 	lsl.w	r4, r0, lr
  406dda:	d909      	bls.n	406df0 <__udivmoddi4+0x1bc>
  406ddc:	19ed      	adds	r5, r5, r7
  406dde:	f101 30ff 	add.w	r0, r1, #4294967295
  406de2:	f080 808a 	bcs.w	406efa <__udivmoddi4+0x2c6>
  406de6:	42ab      	cmp	r3, r5
  406de8:	f240 8087 	bls.w	406efa <__udivmoddi4+0x2c6>
  406dec:	3902      	subs	r1, #2
  406dee:	443d      	add	r5, r7
  406df0:	1aeb      	subs	r3, r5, r3
  406df2:	fa1f f588 	uxth.w	r5, r8
  406df6:	fbb3 f0f2 	udiv	r0, r3, r2
  406dfa:	fb02 3310 	mls	r3, r2, r0, r3
  406dfe:	ea45 4503 	orr.w	r5, r5, r3, lsl #16
  406e02:	fb00 f30c 	mul.w	r3, r0, ip
  406e06:	42ab      	cmp	r3, r5
  406e08:	d907      	bls.n	406e1a <__udivmoddi4+0x1e6>
  406e0a:	19ed      	adds	r5, r5, r7
  406e0c:	f100 38ff 	add.w	r8, r0, #4294967295
  406e10:	d26f      	bcs.n	406ef2 <__udivmoddi4+0x2be>
  406e12:	42ab      	cmp	r3, r5
  406e14:	d96d      	bls.n	406ef2 <__udivmoddi4+0x2be>
  406e16:	3802      	subs	r0, #2
  406e18:	443d      	add	r5, r7
  406e1a:	1aeb      	subs	r3, r5, r3
  406e1c:	ea40 4101 	orr.w	r1, r0, r1, lsl #16
  406e20:	e78f      	b.n	406d42 <__udivmoddi4+0x10e>
  406e22:	f1c1 0720 	rsb	r7, r1, #32
  406e26:	fa22 f807 	lsr.w	r8, r2, r7
  406e2a:	408b      	lsls	r3, r1
  406e2c:	fa05 f401 	lsl.w	r4, r5, r1
  406e30:	ea48 0303 	orr.w	r3, r8, r3
  406e34:	fa20 fe07 	lsr.w	lr, r0, r7
  406e38:	ea4f 4c13 	mov.w	ip, r3, lsr #16
  406e3c:	40fd      	lsrs	r5, r7
  406e3e:	ea4e 0e04 	orr.w	lr, lr, r4
  406e42:	fbb5 f9fc 	udiv	r9, r5, ip
  406e46:	ea4f 441e 	mov.w	r4, lr, lsr #16
  406e4a:	fb0c 5519 	mls	r5, ip, r9, r5
  406e4e:	fa1f f883 	uxth.w	r8, r3
  406e52:	ea44 4505 	orr.w	r5, r4, r5, lsl #16
  406e56:	fb09 f408 	mul.w	r4, r9, r8
  406e5a:	42ac      	cmp	r4, r5
  406e5c:	fa02 f201 	lsl.w	r2, r2, r1
  406e60:	fa00 fa01 	lsl.w	sl, r0, r1
  406e64:	d908      	bls.n	406e78 <__udivmoddi4+0x244>
  406e66:	18ed      	adds	r5, r5, r3
  406e68:	f109 30ff 	add.w	r0, r9, #4294967295
  406e6c:	d243      	bcs.n	406ef6 <__udivmoddi4+0x2c2>
  406e6e:	42ac      	cmp	r4, r5
  406e70:	d941      	bls.n	406ef6 <__udivmoddi4+0x2c2>
  406e72:	f1a9 0902 	sub.w	r9, r9, #2
  406e76:	441d      	add	r5, r3
  406e78:	1b2d      	subs	r5, r5, r4
  406e7a:	fa1f fe8e 	uxth.w	lr, lr
  406e7e:	fbb5 f0fc 	udiv	r0, r5, ip
  406e82:	fb0c 5510 	mls	r5, ip, r0, r5
  406e86:	ea4e 4405 	orr.w	r4, lr, r5, lsl #16
  406e8a:	fb00 f808 	mul.w	r8, r0, r8
  406e8e:	45a0      	cmp	r8, r4
  406e90:	d907      	bls.n	406ea2 <__udivmoddi4+0x26e>
  406e92:	18e4      	adds	r4, r4, r3
  406e94:	f100 35ff 	add.w	r5, r0, #4294967295
  406e98:	d229      	bcs.n	406eee <__udivmoddi4+0x2ba>
  406e9a:	45a0      	cmp	r8, r4
  406e9c:	d927      	bls.n	406eee <__udivmoddi4+0x2ba>
  406e9e:	3802      	subs	r0, #2
  406ea0:	441c      	add	r4, r3
  406ea2:	ea40 4009 	orr.w	r0, r0, r9, lsl #16
  406ea6:	eba4 0408 	sub.w	r4, r4, r8
  406eaa:	fba0 8902 	umull	r8, r9, r0, r2
  406eae:	454c      	cmp	r4, r9
  406eb0:	46c6      	mov	lr, r8
  406eb2:	464d      	mov	r5, r9
  406eb4:	d315      	bcc.n	406ee2 <__udivmoddi4+0x2ae>
  406eb6:	d012      	beq.n	406ede <__udivmoddi4+0x2aa>
  406eb8:	b156      	cbz	r6, 406ed0 <__udivmoddi4+0x29c>
  406eba:	ebba 030e 	subs.w	r3, sl, lr
  406ebe:	eb64 0405 	sbc.w	r4, r4, r5
  406ec2:	fa04 f707 	lsl.w	r7, r4, r7
  406ec6:	40cb      	lsrs	r3, r1
  406ec8:	431f      	orrs	r7, r3
  406eca:	40cc      	lsrs	r4, r1
  406ecc:	6037      	str	r7, [r6, #0]
  406ece:	6074      	str	r4, [r6, #4]
  406ed0:	2100      	movs	r1, #0
  406ed2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  406ed6:	4618      	mov	r0, r3
  406ed8:	e6f8      	b.n	406ccc <__udivmoddi4+0x98>
  406eda:	4690      	mov	r8, r2
  406edc:	e6e0      	b.n	406ca0 <__udivmoddi4+0x6c>
  406ede:	45c2      	cmp	sl, r8
  406ee0:	d2ea      	bcs.n	406eb8 <__udivmoddi4+0x284>
  406ee2:	ebb8 0e02 	subs.w	lr, r8, r2
  406ee6:	eb69 0503 	sbc.w	r5, r9, r3
  406eea:	3801      	subs	r0, #1
  406eec:	e7e4      	b.n	406eb8 <__udivmoddi4+0x284>
  406eee:	4628      	mov	r0, r5
  406ef0:	e7d7      	b.n	406ea2 <__udivmoddi4+0x26e>
  406ef2:	4640      	mov	r0, r8
  406ef4:	e791      	b.n	406e1a <__udivmoddi4+0x1e6>
  406ef6:	4681      	mov	r9, r0
  406ef8:	e7be      	b.n	406e78 <__udivmoddi4+0x244>
  406efa:	4601      	mov	r1, r0
  406efc:	e778      	b.n	406df0 <__udivmoddi4+0x1bc>
  406efe:	3802      	subs	r0, #2
  406f00:	443c      	add	r4, r7
  406f02:	e745      	b.n	406d90 <__udivmoddi4+0x15c>
  406f04:	4608      	mov	r0, r1
  406f06:	e708      	b.n	406d1a <__udivmoddi4+0xe6>
  406f08:	f1a8 0802 	sub.w	r8, r8, #2
  406f0c:	443d      	add	r5, r7
  406f0e:	e72b      	b.n	406d68 <__udivmoddi4+0x134>

00406f10 <__aeabi_idiv0>:
  406f10:	4770      	bx	lr
  406f12:	bf00      	nop

00406f14 <p_uc_charset10x14>:
	...
  406f30:	ccff ccff 0000 0000 0000 0000 0000 0000     ................
  406f40:	00f0 00f0 0000 0000 00f0 00f0 0000 0000     ................
  406f50:	c00c c00c fcff fcff c00c c00c fcff fcff     ................
  406f60:	c00c c00c 600c 701e 303f 3033 fcff fcff     .....`.p?030....
  406f70:	3033 f033 e039 c018 0060 0cf0 3cf0 f060     303.9...`....<`.
  406f80:	c003 000f 183c 3cf0 3cc0 1800 f03c f87f     ....<..<.<..<...
  406f90:	1cc3 8cc7 cccf ecdc 7878 3030 fc00 cc00     ........xx00....
  406fa0:	0000 0000 0000 0044 00ec 00f8 0070 0000     ......D.....p...
	...
  406fb8:	c00f f03f 7878 1860 0cc0 0cc0 0000 0000     ..?.xx`.........
  406fc8:	0000 0000 0cc0 0cc0 1860 7878 f03f c00f     ........`.xx?...
  406fd8:	0000 0000 600c e00e c007 8003 f83f f83f     .....`......?.?.
  406fe8:	8003 c007 e00e 600c 0003 0003 0003 0003     .......`........
  406ff8:	f03f f03f 0003 0003 0003 0003 4400 ec00     ?.?..........D..
  407008:	f800 7000 0000 0000 0000 0000 0000 0000     ...p............
  407018:	0003 0003 0003 0003 0003 0003 0003 0003     ................
  407028:	0003 0003 1800 3c00 3c00 1800 0000 0000     .......<.<......
	...
  407040:	0000 0c00 3c00 f000 c003 000f 003c 00f0     .....<......<...
  407050:	00c0 0000 f03f f87f fce0 ccc1 8cc3 0cc7     ....?...........
  407060:	0cce 1cfc f87f f03f 0000 0000 0c30 0c70     ......?.....0.p.
  407070:	fcff fcff 0c00 0c00 0000 0000 0c30 1c70     ............0.p.
  407080:	3ce0 7cc0 ecc0 ccc1 8cc3 0ce7 0c7e 0c3c     .<.|........~.<.
  407090:	3030 3870 1ce0 0cc0 0cc0 0cc3 0cc3 1ce3     00p8............
  4070a0:	f87f f03c c003 c007 c00e c01c c038 c070     ..<.........8.p.
  4070b0:	fcff fcff c000 c000 30fc 38fc 1ccc 0ccc     .........0.8....
  4070c0:	0ccc 0ccc 0ccc 1cce f8c7 f0c3 f03f f87f     ............?...
  4070d0:	1ce3 0cc3 0cc3 0cc3 0cc3 9ce3 f871 f030     ............q.0.
  4070e0:	00c0 00c0 00c0 00c0 fcc3 fcc7 00ce 00dc     ................
  4070f0:	00f8 00f0 f03c f87f 9ce7 0cc3 0cc3 0cc3     ....<...........
  407100:	0cc3 9ce7 f87f f03c 003c 007e 0ce7 0cc3     ......<.<.~.....
  407110:	1cc3 38c3 70c3 e0e7 c07f 803f 0000 0000     ...8.p....?.....
  407120:	0000 6018 f03c f03c 6018 0000 0000 0000     ...`<.<..`......
  407130:	0000 0000 0000 4418 ec3c f83c 7018 0000     .......D<.<..p..
  407140:	0000 0000 0000 0003 8007 c00f e01c 7038     ..............8p
  407150:	3870 1ce0 0cc0 0000 c00c c00c c00c c00c     p8..............
  407160:	c00c c00c c00c c00c c00c c00c 0000 0cc0     ................
  407170:	1ce0 3870 7038 e01c c00f 8007 0003 0000     ..p88p..........
  407180:	0030 0070 00e0 00c0 ecc1 ecc3 00c3 00e6     0.p.............
  407190:	007e 003c f030 f871 9ce3 0cc3 fcc3 fcc3     ~.<.0.q.........
  4071a0:	0cc0 1ce0 f87f f03f fc3f fc7f c0e0 c0c0     ......?.?.......
  4071b0:	c0c0 c0c0 c0c0 c0e0 fc7f fc3f fcff fcff     ..........?.....
  4071c0:	0cc3 0cc3 0cc3 0cc3 0cc3 9ce7 f87f f03c     ..............<.
  4071d0:	f03f f87f 1ce0 0cc0 0cc0 0cc0 0cc0 1ce0     ?...............
  4071e0:	3870 3030 fcff fcff 0cc0 0cc0 0cc0 0cc0     p800............
  4071f0:	0cc0 1ce0 f87f f03f fcff fcff 0cc3 0cc3     ......?.........
  407200:	0cc3 0cc3 0cc3 0cc3 0cc0 0cc0 fcff fcff     ................
  407210:	00c3 00c3 00c3 00c3 00c3 00c3 00c0 00c0     ................
  407220:	f03f f87f 1ce0 0cc0 0cc0 0cc3 0cc3 1ce3     ?...............
  407230:	f873 f033 fcff fcff 0003 0003 0003 0003     s.3.............
  407240:	0003 0003 fcff fcff 0000 0000 0cc0 0cc0     ................
  407250:	fcff fcff 0cc0 0cc0 0000 0000 3000 3800     .............0.8
  407260:	1cc0 0cc0 0cc0 1cc0 f8ff f0ff 00c0 00c0     ................
  407270:	fcff fcff 8007 8007 c00f e01c 7038 3870     ............8pp8
  407280:	1ce0 0cc0 fcff fcff 0c00 0c00 0c00 0c00     ................
  407290:	0c00 0c00 0c00 0c00 fcff fcff 0070 0038     ............p.8.
  4072a0:	001f 001f 0038 0070 fcff fcff fcff fcff     ....8.p.........
  4072b0:	001c 000e 0007 8003 c001 e000 fcff fcff     ................
  4072c0:	f03f f87f 1ce0 0cc0 0cc0 0cc0 0cc0 1ce0     ?...............
  4072d0:	f87f f03f fcff fcff 00c3 00c3 00c3 00c3     ..?.............
  4072e0:	00c3 00e7 007e 003c f03f f87f 1ce0 0cc0     ....~.<.?.......
  4072f0:	ccc0 ecc0 7cc0 38e0 fc7f ec3f fcff fcff     .....|.8..?.....
  407300:	00c3 80c3 80c3 c0c3 c0c3 70e7 3c7e 1c3c     ...........p~<<.
  407310:	183c 1c7e 0ce7 0cc3 0cc3 0cc3 0cc3 9cc3     <.~.............
  407320:	f8e1 f060 00c0 00c0 00c0 00c0 fcff fcff     ..`.............
  407330:	00c0 00c0 00c0 00c0 f0ff f8ff 1c00 0c00     ................
  407340:	0c00 0c00 0c00 1c00 f8ff f0ff c0ff e0ff     ................
  407350:	7000 3800 1c00 1c00 3800 7000 e0ff c0ff     .p.8.....8.p....
  407360:	f0ff f8ff 1c00 3c00 f800 f800 3c00 1c00     .......<.....<..
  407370:	f8ff f0ff 3cf0 7cf8 e01c c00f 8007 8007     .....<.|........
  407380:	c00f e01c 7cf8 3cf0 00fc 00fe 0007 8003     .....|.<........
  407390:	fc01 fc01 8003 0007 00fe 00fc 3cc0 7cc0     .............<.|
  4073a0:	ecc0 ccc1 8cc3 0cc7 0cce 0cdc 0cf8 0cf0     ................
  4073b0:	0000 0000 fcff fcff 0cc0 0cc0 0cc0 0000     ................
  4073c0:	0000 0000 0030 0030 000c 000c 0003 0003     ....0.0.........
  4073d0:	c000 c000 3000 3000 0000 0000 0cc0 0cc0     .....0.0........
  4073e0:	0cc0 fcff fcff 0000 0000 0000 000c 001c     ................
  4073f0:	0038 0070 00e0 00e0 0070 0038 001c 000c     8.p.....p.8.....
  407400:	0c00 0c00 0c00 0c00 0c00 0c00 0c00 0c00     ................
  407410:	0c00 0c00 0000 0000 00c0 00e0 0070 0038     ............p.8.
  407420:	0018 0000 0000 0000 3000 7806 fc0e cc0c     .........0.x....
  407430:	cc0c cc0c cc0c cc0e fc07 f803 fcff fcff     ................
  407440:	0c03 0c03 0c03 0c03 0c03 9c03 f801 f000     ................
  407450:	f003 f807 1c0e 0c0c 0c0c 0c0c 0c0c 1c0e     ................
  407460:	3807 3003 f000 f801 9c03 0c03 0c03 0c03     .8.0............
  407470:	0c03 0c03 fcff fcff f003 f807 dc0e cc0c     ................
  407480:	cc0c cc0c cc0c dc0e d807 9003 0000 0003     ................
  407490:	fc3f fc7f 00e3 00e3 0070 0030 0000 0000     ?.......p.0.....
  4074a0:	1803 9c07 cc0f cc0c cc0c cc0c cc0c dc0c     ................
  4074b0:	f80f f007 fcff fcff 0003 0003 0003 0003     ................
  4074c0:	8003 fc01 fc00 0000 0000 0000 0000 0000     ................
  4074d0:	fc1b fc1b 0000 0000 0000 0000 0000 3000     ...............0
  4074e0:	3800 1c00 0c00 0c00 1c00 f8cf f0cf 0000     .8..............
  4074f0:	0000 fcff fcff e000 e001 f003 3807 1c0e     .............8..
  407500:	0c0c 0000 0000 0000 0cc0 0cc0 fcff fcff     ................
  407510:	0c00 0c00 0000 0000 fc0f fc0f 000e 0007     ................
  407520:	c003 c003 0007 000e fc0f fc0f fc0f fc0f     ................
  407530:	0003 0007 000e 000c 000c 000e fc07 fc03     ................
  407540:	f003 f807 1c0e 0c0c 0c0c 0c0c 0c0c 1c0e     ................
  407550:	f807 f003 fc0f fc0f c00c c00c c00c c00c     ................
  407560:	c00c c00f 8007 0003 0003 8007 c00f c00c     ................
  407570:	c00c c00c c00c c00c fc0f fc0f fc0f fc0f     ................
  407580:	8003 0007 000e 000c 000c 000e 0007 0003     ................
  407590:	1803 9c07 cc0f cc0c cc0c cc0c cc0c fc0c     ................
  4075a0:	780e 3006 0000 000c 000c f0ff f8ff 1c0c     .x.0............
  4075b0:	1c0c 380c 300c 0000 f00f f80f 1c00 0c00     ...8.0..........
  4075c0:	0c00 0c00 0c00 1c00 f80f f00f c00f e00f     ................
  4075d0:	7000 3800 1c00 1c00 3800 7000 e00f c00f     .p.8.....8.p....
  4075e0:	f00f f80f 1c00 1c00 f800 f800 1c00 1c00     ................
  4075f0:	f80f f00f 0c0c 1c0e 3807 f003 e001 e001     .........8......
  407600:	f003 3807 1c0e 0c0c 000c 000e 0c07 9c03     ...8............
  407610:	f801 f001 8003 0007 000e 000c 0c0c 1c0c     ................
  407620:	3c0c 7c0c ec0c cc0d 8c0f 0c0f 0c0e 0c0c     .<.|............
  407630:	0000 0003 8007 f03f f87c 1ce0 0cc0 0cc0     ......?.|.......
  407640:	0cc0 0000 0c03 0c03 fc3f fc7f 0ce3 0cc3     ........?.......
  407650:	0cc0 0ce0 0c70 0c30 0000 0cc0 0cc0 0cc0     ....p.0.........
  407660:	1ce0 f87c f03f 8007 0003 0000 00c0 00c0     ..|.?...........
  407670:	00c0 00c0 00c0 00c0 00c0 00c0 00c0 00c0     ................
  407680:	fcff fcff fcff fcff fcff fcff fcff fcff     ................
  407690:	fcff fcff 0001 0000 0002 0000 0004 0000     ................
  4076a0:	0008 0000 0010 0000 0020 0000 0040 0000     ........ ...@...
  4076b0:	0080 0000 0100 0000 0200 0000 0400 0000     ................
  4076c0:	6425 0000 7525 0000 504b 0000 2e25 6631     %d..%u..KP..%.1f
  4076d0:	0000 0000 494b 0000 444b 0000 6542 6d61     ....KI..KD..Beam
  4076e0:	6142 6c6c 000a 0000 5750 204d 7544 7974     Ball....PWM Duty
  4076f0:	203a 0000 6944 7473 6e61 6963 3a61 0020     : ..Distancia: .
  407700:	6954 656d 3a72 0020 6c49 6e61 4c0a 6375     Timer: .Ilan.Luc
  407710:	7361 430a 7261 6f6c 0073 0000 6c25 0075     as.Carlos...%lu.

00407720 <_global_impure_ptr>:
  407720:	0048 2000 4e49 0046 6e69 0066 414e 004e     H.. INF.inf.NAN.
  407730:	616e 006e 3130 3332 3534 3736 3938 4241     nan.0123456789AB
  407740:	4443 4645 0000 0000 3130 3332 3534 3736     CDEF....01234567
  407750:	3938 6261 6463 6665 0000 0000 6e28 6c75     89abcdef....(nul
  407760:	296c 0000 0030 0000                         l)..0...

00407768 <blanks.7208>:
  407768:	2020 2020 2020 2020 2020 2020 2020 2020                     

00407778 <zeroes.7209>:
  407778:	3030 3030 3030 3030 3030 3030 3030 3030     0000000000000000
  407788:	6e49 6966 696e 7974 0000 0000 614e 004e     Infinity....NaN.

00407798 <__mprec_bigtens>:
  407798:	8000 37e0 c379 4341 6e17 b505 b8b5 4693     ...7y.AC.n.....F
  4077a8:	f9f5 e93f 4f03 4d38 1d32 f930 7748 5a82     ..?..O8M2.0.Hw.Z
  4077b8:	bf3c 7f73 4fdd 7515                         <.s..O.u

004077c0 <__mprec_tens>:
  4077c0:	0000 0000 0000 3ff0 0000 0000 0000 4024     .......?......$@
  4077d0:	0000 0000 0000 4059 0000 0000 4000 408f     ......Y@.....@.@
  4077e0:	0000 0000 8800 40c3 0000 0000 6a00 40f8     .......@.....j.@
  4077f0:	0000 0000 8480 412e 0000 0000 12d0 4163     .......A......cA
  407800:	0000 0000 d784 4197 0000 0000 cd65 41cd     .......A....e..A
  407810:	0000 2000 a05f 4202 0000 e800 4876 4237     ... _..B....vH7B
  407820:	0000 a200 1a94 426d 0000 e540 309c 42a2     ......mB..@..0.B
  407830:	0000 1e90 bcc4 42d6 0000 2634 6bf5 430c     .......B..4&.k.C
  407840:	8000 37e0 c379 4341 a000 85d8 3457 4376     ...7y.AC....W4vC
  407850:	c800 674e c16d 43ab 3d00 6091 58e4 43e1     ..Ngm..C.=.`.X.C
  407860:	8c40 78b5 af1d 4415 ef50 d6e2 1ae4 444b     @..x...DP.....KD
  407870:	d592 064d f0cf 4480 4af6 c7e1 2d02 44b5     ..M....D.J...-.D
  407880:	9db4 79d9 7843 44ea                         ...yCx.D

00407888 <p05.6040>:
  407888:	0005 0000 0019 0000 007d 0000 0043 0000     ........}...C...
  407898:	4f50 4953 0058 0000 002e 0000               POSIX.......

004078a4 <_ctype_>:
  4078a4:	2000 2020 2020 2020 2020 2828 2828 2028     .         ((((( 
  4078b4:	2020 2020 2020 2020 2020 2020 2020 2020                     
  4078c4:	8820 1010 1010 1010 1010 1010 1010 1010      ...............
  4078d4:	0410 0404 0404 0404 0404 1004 1010 1010     ................
  4078e4:	1010 4141 4141 4141 0101 0101 0101 0101     ..AAAAAA........
  4078f4:	0101 0101 0101 0101 0101 0101 1010 1010     ................
  407904:	1010 4242 4242 4242 0202 0202 0202 0202     ..BBBBBB........
  407914:	0202 0202 0202 0202 0202 0202 1010 1010     ................
  407924:	0020 0000 0000 0000 0000 0000 0000 0000      ...............
	...

004079a8 <_init>:
  4079a8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  4079aa:	bf00      	nop
  4079ac:	bcf8      	pop	{r3, r4, r5, r6, r7}
  4079ae:	bc08      	pop	{r3}
  4079b0:	469e      	mov	lr, r3
  4079b2:	4770      	bx	lr

004079b4 <__init_array_start>:
  4079b4:	00403ec5 	.word	0x00403ec5

004079b8 <__frame_dummy_init_array_entry>:
  4079b8:	004000f1                                ..@.

004079bc <_fini>:
  4079bc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  4079be:	bf00      	nop
  4079c0:	bcf8      	pop	{r3, r4, r5, r6, r7}
  4079c2:	bc08      	pop	{r3}
  4079c4:	469e      	mov	lr, r3
  4079c6:	4770      	bx	lr

004079c8 <__fini_array_start>:
  4079c8:	004000cd 	.word	0x004000cd

Disassembly of section .relocate:

20000000 <portable_delay_cycles>:
RAMFUNC
void portable_delay_cycles(unsigned long n)
{
	UNUSED(n);

	__asm (
20000000:	f3bf 8f5f 	dmb	sy
20000004:	3801      	subs	r0, #1
20000006:	d1fb      	bne.n	20000000 <portable_delay_cycles>
20000008:	4770      	bx	lr
	...

2000000c <g_ul_lcd_x_length>:
2000000c:	00f0 0000                                   ....

20000010 <g_ul_lcd_y_length>:
20000010:	0140 0000                                   @...

20000014 <SystemCoreClock>:
20000014:	0900 003d                                   ..=.

20000018 <KD>:
20000018:	3333 3333 3333 3fe3                         333333.?

20000020 <KI>:
20000020:	999a 9999 9999 3fb9                         .......?

20000028 <KP>:
20000028:	3333 3333 3333 3fd3                         333333.?

20000030 <usart_options.8807>:
20000030:	c200 0001 00c0 0000 0800 0000 0000 0000     ................

20000040 <_impure_ptr>:
20000040:	0048 2000 0000 0000                         H.. ....

20000048 <impure_data>:
20000048:	0000 0000 0334 2000 039c 2000 0404 2000     ....4.. ... ... 
	...
200000f0:	0001 0000 0000 0000 330e abcd 1234 e66d     .........3..4.m.
20000100:	deec 0005 000b 0000 0000 0000 0000 0000     ................
	...

20000470 <__malloc_av_>:
	...
20000478:	0470 2000 0470 2000 0478 2000 0478 2000     p.. p.. x.. x.. 
20000488:	0480 2000 0480 2000 0488 2000 0488 2000     ... ... ... ... 
20000498:	0490 2000 0490 2000 0498 2000 0498 2000     ... ... ... ... 
200004a8:	04a0 2000 04a0 2000 04a8 2000 04a8 2000     ... ... ... ... 
200004b8:	04b0 2000 04b0 2000 04b8 2000 04b8 2000     ... ... ... ... 
200004c8:	04c0 2000 04c0 2000 04c8 2000 04c8 2000     ... ... ... ... 
200004d8:	04d0 2000 04d0 2000 04d8 2000 04d8 2000     ... ... ... ... 
200004e8:	04e0 2000 04e0 2000 04e8 2000 04e8 2000     ... ... ... ... 
200004f8:	04f0 2000 04f0 2000 04f8 2000 04f8 2000     ... ... ... ... 
20000508:	0500 2000 0500 2000 0508 2000 0508 2000     ... ... ... ... 
20000518:	0510 2000 0510 2000 0518 2000 0518 2000     ... ... ... ... 
20000528:	0520 2000 0520 2000 0528 2000 0528 2000      ..  .. (.. (.. 
20000538:	0530 2000 0530 2000 0538 2000 0538 2000     0.. 0.. 8.. 8.. 
20000548:	0540 2000 0540 2000 0548 2000 0548 2000     @.. @.. H.. H.. 
20000558:	0550 2000 0550 2000 0558 2000 0558 2000     P.. P.. X.. X.. 
20000568:	0560 2000 0560 2000 0568 2000 0568 2000     `.. `.. h.. h.. 
20000578:	0570 2000 0570 2000 0578 2000 0578 2000     p.. p.. x.. x.. 
20000588:	0580 2000 0580 2000 0588 2000 0588 2000     ... ... ... ... 
20000598:	0590 2000 0590 2000 0598 2000 0598 2000     ... ... ... ... 
200005a8:	05a0 2000 05a0 2000 05a8 2000 05a8 2000     ... ... ... ... 
200005b8:	05b0 2000 05b0 2000 05b8 2000 05b8 2000     ... ... ... ... 
200005c8:	05c0 2000 05c0 2000 05c8 2000 05c8 2000     ... ... ... ... 
200005d8:	05d0 2000 05d0 2000 05d8 2000 05d8 2000     ... ... ... ... 
200005e8:	05e0 2000 05e0 2000 05e8 2000 05e8 2000     ... ... ... ... 
200005f8:	05f0 2000 05f0 2000 05f8 2000 05f8 2000     ... ... ... ... 
20000608:	0600 2000 0600 2000 0608 2000 0608 2000     ... ... ... ... 
20000618:	0610 2000 0610 2000 0618 2000 0618 2000     ... ... ... ... 
20000628:	0620 2000 0620 2000 0628 2000 0628 2000      ..  .. (.. (.. 
20000638:	0630 2000 0630 2000 0638 2000 0638 2000     0.. 0.. 8.. 8.. 
20000648:	0640 2000 0640 2000 0648 2000 0648 2000     @.. @.. H.. H.. 
20000658:	0650 2000 0650 2000 0658 2000 0658 2000     P.. P.. X.. X.. 
20000668:	0660 2000 0660 2000 0668 2000 0668 2000     `.. `.. h.. h.. 
20000678:	0670 2000 0670 2000 0678 2000 0678 2000     p.. p.. x.. x.. 
20000688:	0680 2000 0680 2000 0688 2000 0688 2000     ... ... ... ... 
20000698:	0690 2000 0690 2000 0698 2000 0698 2000     ... ... ... ... 
200006a8:	06a0 2000 06a0 2000 06a8 2000 06a8 2000     ... ... ... ... 
200006b8:	06b0 2000 06b0 2000 06b8 2000 06b8 2000     ... ... ... ... 
200006c8:	06c0 2000 06c0 2000 06c8 2000 06c8 2000     ... ... ... ... 
200006d8:	06d0 2000 06d0 2000 06d8 2000 06d8 2000     ... ... ... ... 
200006e8:	06e0 2000 06e0 2000 06e8 2000 06e8 2000     ... ... ... ... 
200006f8:	06f0 2000 06f0 2000 06f8 2000 06f8 2000     ... ... ... ... 
20000708:	0700 2000 0700 2000 0708 2000 0708 2000     ... ... ... ... 
20000718:	0710 2000 0710 2000 0718 2000 0718 2000     ... ... ... ... 
20000728:	0720 2000 0720 2000 0728 2000 0728 2000      ..  .. (.. (.. 
20000738:	0730 2000 0730 2000 0738 2000 0738 2000     0.. 0.. 8.. 8.. 
20000748:	0740 2000 0740 2000 0748 2000 0748 2000     @.. @.. H.. H.. 
20000758:	0750 2000 0750 2000 0758 2000 0758 2000     P.. P.. X.. X.. 
20000768:	0760 2000 0760 2000 0768 2000 0768 2000     `.. `.. h.. h.. 
20000778:	0770 2000 0770 2000 0778 2000 0778 2000     p.. p.. x.. x.. 
20000788:	0780 2000 0780 2000 0788 2000 0788 2000     ... ... ... ... 
20000798:	0790 2000 0790 2000 0798 2000 0798 2000     ... ... ... ... 
200007a8:	07a0 2000 07a0 2000 07a8 2000 07a8 2000     ... ... ... ... 
200007b8:	07b0 2000 07b0 2000 07b8 2000 07b8 2000     ... ... ... ... 
200007c8:	07c0 2000 07c0 2000 07c8 2000 07c8 2000     ... ... ... ... 
200007d8:	07d0 2000 07d0 2000 07d8 2000 07d8 2000     ... ... ... ... 
200007e8:	07e0 2000 07e0 2000 07e8 2000 07e8 2000     ... ... ... ... 
200007f8:	07f0 2000 07f0 2000 07f8 2000 07f8 2000     ... ... ... ... 
20000808:	0800 2000 0800 2000 0808 2000 0808 2000     ... ... ... ... 
20000818:	0810 2000 0810 2000 0818 2000 0818 2000     ... ... ... ... 
20000828:	0820 2000 0820 2000 0828 2000 0828 2000      ..  .. (.. (.. 
20000838:	0830 2000 0830 2000 0838 2000 0838 2000     0.. 0.. 8.. 8.. 
20000848:	0840 2000 0840 2000 0848 2000 0848 2000     @.. @.. H.. H.. 
20000858:	0850 2000 0850 2000 0858 2000 0858 2000     P.. P.. X.. X.. 
20000868:	0860 2000 0860 2000 0868 2000 0868 2000     `.. `.. h.. h.. 

20000878 <__malloc_sbrk_base>:
20000878:	ffff ffff                                   ....

2000087c <__malloc_trim_threshold>:
2000087c:	0000 0002                                   ....

20000880 <__global_locale>:
20000880:	0043 0000 0000 0000 0000 0000 0000 0000     C...............
	...
200008a0:	0043 0000 0000 0000 0000 0000 0000 0000     C...............
	...
200008c0:	0043 0000 0000 0000 0000 0000 0000 0000     C...............
	...
200008e0:	0043 0000 0000 0000 0000 0000 0000 0000     C...............
	...
20000900:	0043 0000 0000 0000 0000 0000 0000 0000     C...............
	...
20000920:	0043 0000 0000 0000 0000 0000 0000 0000     C...............
	...
20000940:	0043 0000 0000 0000 0000 0000 0000 0000     C...............
	...
20000960:	6aad 0040 6641 0040 0000 0000 78a4 0040     .j@.Af@......x@.
20000970:	78a0 0040 7744 0040 7744 0040 7744 0040     .x@.Dw@.Dw@.Dw@.
20000980:	7744 0040 7744 0040 7744 0040 7744 0040     Dw@.Dw@.Dw@.Dw@.
20000990:	7744 0040 7744 0040 ffff ffff ffff ffff     Dw@.Dw@.........
200009a0:	ffff ffff ffff 0000 0001 5341 4943 0049     ..........ASCII.
	...
200009c8:	0000 5341 4943 0049 0000 0000 0000 0000     ..ASCII.........
	...
