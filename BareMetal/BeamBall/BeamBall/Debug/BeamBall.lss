
BeamBall.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000467c  00400000  00400000  00010000  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .ARM.exidx    00000008  0040467c  0040467c  0001467c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  2 .relocate     00000ab4  20000000  00404684  00020000  2**3
                  CONTENTS, ALLOC, LOAD, CODE
  3 .bss          000000e0  20000ab4  00405138  00020ab4  2**2
                  ALLOC
  4 .stack        00000804  20000b94  00405218  00020ab4  2**0
                  ALLOC
  5 .ARM.attributes 00000029  00000000  00000000  00020ab4  2**0
                  CONTENTS, READONLY
  6 .comment      00000059  00000000  00000000  00020add  2**0
                  CONTENTS, READONLY
  7 .debug_info   000184e0  00000000  00000000  00020b36  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 0000372b  00000000  00000000  00039016  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_loc    000056ed  00000000  00000000  0003c741  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_aranges 00000ad0  00000000  00000000  00041e2e  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 000009f8  00000000  00000000  000428fe  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_macro  0000704e  00000000  00000000  000432f6  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_line   0000e8dc  00000000  00000000  0004a344  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_str    0004340d  00000000  00000000  00058c20  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_frame  000025d8  00000000  00000000  0009c030  2**2
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00400000 <exception_table>:
  400000:	98 13 00 20 65 0e 40 00 61 0e 40 00 61 0e 40 00     ... e.@.a.@.a.@.
  400010:	61 0e 40 00 61 0e 40 00 61 0e 40 00 00 00 00 00     a.@.a.@.a.@.....
	...
  40002c:	61 0e 40 00 61 0e 40 00 00 00 00 00 61 0e 40 00     a.@.a.@.....a.@.
  40003c:	61 0e 40 00 61 0e 40 00 61 0e 40 00 61 0e 40 00     a.@.a.@.a.@.a.@.
  40004c:	61 0e 40 00 61 0e 40 00 61 0e 40 00 61 0e 40 00     a.@.a.@.a.@.a.@.
  40005c:	61 0e 40 00 61 0e 40 00 61 0e 40 00 61 0e 40 00     a.@.a.@.a.@.a.@.
  40006c:	11 0d 40 00 25 0d 40 00 39 0d 40 00 61 0e 40 00     ..@.%.@.9.@.a.@.
  40007c:	61 0e 40 00 61 0e 40 00 61 0e 40 00 61 0e 40 00     a.@.a.@.a.@.a.@.
  40008c:	61 0e 40 00 61 0e 40 00 91 05 40 00 61 0e 40 00     a.@.a.@...@.a.@.
  40009c:	9d 05 40 00 b9 05 40 00 61 0e 40 00 61 0e 40 00     ..@...@.a.@.a.@.
  4000ac:	61 0e 40 00 61 0e 40 00 61 0e 40 00 61 0e 40 00     a.@.a.@.a.@.a.@.
  4000bc:	61 07 40 00 61 0e 40 00                             a.@.a.@.

004000c4 <__do_global_dtors_aux>:
  4000c4:	b510      	push	{r4, lr}
  4000c6:	4c05      	ldr	r4, [pc, #20]	; (4000dc <__do_global_dtors_aux+0x18>)
  4000c8:	7823      	ldrb	r3, [r4, #0]
  4000ca:	b933      	cbnz	r3, 4000da <__do_global_dtors_aux+0x16>
  4000cc:	4b04      	ldr	r3, [pc, #16]	; (4000e0 <__do_global_dtors_aux+0x1c>)
  4000ce:	b113      	cbz	r3, 4000d6 <__do_global_dtors_aux+0x12>
  4000d0:	4804      	ldr	r0, [pc, #16]	; (4000e4 <__do_global_dtors_aux+0x20>)
  4000d2:	f3af 8000 	nop.w
  4000d6:	2301      	movs	r3, #1
  4000d8:	7023      	strb	r3, [r4, #0]
  4000da:	bd10      	pop	{r4, pc}
  4000dc:	20000ab4 	.word	0x20000ab4
  4000e0:	00000000 	.word	0x00000000
  4000e4:	00404684 	.word	0x00404684

004000e8 <frame_dummy>:
  4000e8:	4b0c      	ldr	r3, [pc, #48]	; (40011c <frame_dummy+0x34>)
  4000ea:	b143      	cbz	r3, 4000fe <frame_dummy+0x16>
  4000ec:	480c      	ldr	r0, [pc, #48]	; (400120 <frame_dummy+0x38>)
  4000ee:	b510      	push	{r4, lr}
  4000f0:	490c      	ldr	r1, [pc, #48]	; (400124 <frame_dummy+0x3c>)
  4000f2:	f3af 8000 	nop.w
  4000f6:	480c      	ldr	r0, [pc, #48]	; (400128 <frame_dummy+0x40>)
  4000f8:	6803      	ldr	r3, [r0, #0]
  4000fa:	b923      	cbnz	r3, 400106 <frame_dummy+0x1e>
  4000fc:	bd10      	pop	{r4, pc}
  4000fe:	480a      	ldr	r0, [pc, #40]	; (400128 <frame_dummy+0x40>)
  400100:	6803      	ldr	r3, [r0, #0]
  400102:	b933      	cbnz	r3, 400112 <frame_dummy+0x2a>
  400104:	4770      	bx	lr
  400106:	4b09      	ldr	r3, [pc, #36]	; (40012c <frame_dummy+0x44>)
  400108:	2b00      	cmp	r3, #0
  40010a:	d0f7      	beq.n	4000fc <frame_dummy+0x14>
  40010c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  400110:	4718      	bx	r3
  400112:	4b06      	ldr	r3, [pc, #24]	; (40012c <frame_dummy+0x44>)
  400114:	2b00      	cmp	r3, #0
  400116:	d0f5      	beq.n	400104 <frame_dummy+0x1c>
  400118:	4718      	bx	r3
  40011a:	bf00      	nop
  40011c:	00000000 	.word	0x00000000
  400120:	00404684 	.word	0x00404684
  400124:	20000ab8 	.word	0x20000ab8
  400128:	00404684 	.word	0x00404684
  40012c:	00000000 	.word	0x00000000

00400130 <_read>:
int __attribute__((weak))
_read (int file, char * ptr, int len); // Remove GCC compiler warning

int __attribute__((weak))
_read (int file, char * ptr, int len)
{
  400130:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
	int nChars = 0;

	if (file != 0) {
  400134:	b980      	cbnz	r0, 400158 <_read+0x28>
  400136:	460c      	mov	r4, r1
  400138:	4690      	mov	r8, r2
		return -1;
	}

	for (; len > 0; --len) {
  40013a:	2a00      	cmp	r2, #0
  40013c:	dd0f      	ble.n	40015e <_read+0x2e>
  40013e:	188f      	adds	r7, r1, r2
		ptr_get(stdio_base, ptr);
  400140:	4e08      	ldr	r6, [pc, #32]	; (400164 <_read+0x34>)
  400142:	4d09      	ldr	r5, [pc, #36]	; (400168 <_read+0x38>)
  400144:	6830      	ldr	r0, [r6, #0]
  400146:	4621      	mov	r1, r4
  400148:	682b      	ldr	r3, [r5, #0]
  40014a:	4798      	blx	r3
		ptr++;
  40014c:	3401      	adds	r4, #1
	for (; len > 0; --len) {
  40014e:	42bc      	cmp	r4, r7
  400150:	d1f8      	bne.n	400144 <_read+0x14>
		nChars++;
	}
	return nChars;
}
  400152:	4640      	mov	r0, r8
  400154:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
		return -1;
  400158:	f04f 38ff 	mov.w	r8, #4294967295
  40015c:	e7f9      	b.n	400152 <_read+0x22>
	for (; len > 0; --len) {
  40015e:	4680      	mov	r8, r0
  400160:	e7f7      	b.n	400152 <_read+0x22>
  400162:	bf00      	nop
  400164:	20000b8c 	.word	0x20000b8c
  400168:	20000b84 	.word	0x20000b84

0040016c <usart_write>:
 * \retval 0 on success.
 * \retval 1 on failure.
 */
uint32_t usart_write(Usart *p_usart, uint32_t c)
{
	if (!(p_usart->US_CSR & US_CSR_TXRDY)) {
  40016c:	6943      	ldr	r3, [r0, #20]
  40016e:	f013 0f02 	tst.w	r3, #2
		return 1;
	}

	p_usart->US_THR = US_THR_TXCHR(c);
  400172:	bf1d      	ittte	ne
  400174:	f3c1 0108 	ubfxne	r1, r1, #0, #9
  400178:	61c1      	strne	r1, [r0, #28]
	return 0;
  40017a:	2000      	movne	r0, #0
		return 1;
  40017c:	2001      	moveq	r0, #1
}
  40017e:	4770      	bx	lr

00400180 <usart_read>:
 * \retval 0 on success.
 * \retval 1 if no data is available or errors.
 */
uint32_t usart_read(Usart *p_usart, uint32_t *c)
{
	if (!(p_usart->US_CSR & US_CSR_RXRDY)) {
  400180:	6943      	ldr	r3, [r0, #20]
  400182:	f013 0f01 	tst.w	r3, #1
  400186:	d005      	beq.n	400194 <usart_read+0x14>
		return 1;
	}

	/* Read character */
	*c = p_usart->US_RHR & US_RHR_RXCHR_Msk;
  400188:	6983      	ldr	r3, [r0, #24]
  40018a:	f3c3 0308 	ubfx	r3, r3, #0, #9
  40018e:	600b      	str	r3, [r1, #0]

	return 0;
  400190:	2000      	movs	r0, #0
  400192:	4770      	bx	lr
		return 1;
  400194:	2001      	movs	r0, #1
}
  400196:	4770      	bx	lr

00400198 <_write>:
int __attribute__((weak))
_write (int file, const char *ptr, int len)
{
	int nChars = 0;

	if ((file != 1) && (file != 2) && (file!=3)) {
  400198:	3801      	subs	r0, #1
  40019a:	2802      	cmp	r0, #2
  40019c:	d815      	bhi.n	4001ca <_write+0x32>
{
  40019e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  4001a2:	460e      	mov	r6, r1
  4001a4:	4614      	mov	r4, r2
		return -1;
	}

	for (; len != 0; --len) {
  4001a6:	b19a      	cbz	r2, 4001d0 <_write+0x38>
  4001a8:	460d      	mov	r5, r1
		if (ptr_put(stdio_base, *ptr++) < 0) {
  4001aa:	f8df 8038 	ldr.w	r8, [pc, #56]	; 4001e4 <_write+0x4c>
  4001ae:	4f0c      	ldr	r7, [pc, #48]	; (4001e0 <_write+0x48>)
  4001b0:	f8d8 0000 	ldr.w	r0, [r8]
  4001b4:	f815 1b01 	ldrb.w	r1, [r5], #1
  4001b8:	683b      	ldr	r3, [r7, #0]
  4001ba:	4798      	blx	r3
  4001bc:	2800      	cmp	r0, #0
  4001be:	db0a      	blt.n	4001d6 <_write+0x3e>
  4001c0:	1ba8      	subs	r0, r5, r6
	for (; len != 0; --len) {
  4001c2:	3c01      	subs	r4, #1
  4001c4:	d1f4      	bne.n	4001b0 <_write+0x18>
  4001c6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
		return -1;
  4001ca:	f04f 30ff 	mov.w	r0, #4294967295
  4001ce:	4770      	bx	lr
	for (; len != 0; --len) {
  4001d0:	4610      	mov	r0, r2
  4001d2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
			return -1;
  4001d6:	f04f 30ff 	mov.w	r0, #4294967295
		}
		++nChars;
	}
	return nChars;
}
  4001da:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  4001de:	bf00      	nop
  4001e0:	20000b88 	.word	0x20000b88
  4001e4:	20000b8c 	.word	0x20000b8c

004001e8 <ili9225_spi_handler>:
 *
 * \return The interrupt mask value.
 */
static inline uint32_t spi_read_interrupt_mask(Spi *p_spi)
{
	return p_spi->SPI_IMR;
  4001e8:	4b03      	ldr	r3, [pc, #12]	; (4001f8 <ili9225_spi_handler+0x10>)
  4001ea:	69da      	ldr	r2, [r3, #28]
	p_spi->SPI_IDR = ul_sources;
  4001ec:	619a      	str	r2, [r3, #24]
	/* Disable interrupts */
	ul_spi_reg = spi_read_interrupt_mask(BOARD_ILI9225_SPI);
	spi_disable_interrupt(BOARD_ILI9225_SPI, ul_spi_reg);

	/* Set the flag to notify the end of transfer */
	g_by_transfend_flag = 1;
  4001ee:	2201      	movs	r2, #1
  4001f0:	4b02      	ldr	r3, [pc, #8]	; (4001fc <ili9225_spi_handler+0x14>)
  4001f2:	701a      	strb	r2, [r3, #0]
  4001f4:	4770      	bx	lr
  4001f6:	bf00      	nop
  4001f8:	40008000 	.word	0x40008000
  4001fc:	20000ad0 	.word	0x20000ad0

00400200 <pwm_channel_get_interrupt_status>:
 * \return Channel counter event and fault protection trigger interrupt status.
 */
uint32_t pwm_channel_get_interrupt_status(Pwm *p_pwm)
{
#if (SAM3N || SAM4N || SAM4C || SAM4CP || SAM4CM)
	return p_pwm->PWM_ISR;
  400200:	69c0      	ldr	r0, [r0, #28]
#else
	return p_pwm->PWM_ISR1;
#endif
}
  400202:	4770      	bx	lr

00400204 <tc_init>:
 */
void tc_init(
		Tc *p_tc,
		uint32_t ul_channel,
		uint32_t ul_mode)
{
  400204:	b410      	push	{r4}

	/* Validate inputs. */
	Assert(p_tc);
	Assert(ul_channel <
			(sizeof(p_tc->TC_CHANNEL) / sizeof(p_tc->TC_CHANNEL[0])));
	tc_channel = p_tc->TC_CHANNEL + ul_channel;
  400206:	0189      	lsls	r1, r1, #6
  400208:	1843      	adds	r3, r0, r1

	/*  Disable TC clock. */
	tc_channel->TC_CCR = TC_CCR_CLKDIS;
  40020a:	2402      	movs	r4, #2
  40020c:	5044      	str	r4, [r0, r1]

	/*  Disable interrupts. */
	tc_channel->TC_IDR = 0xFFFFFFFF;
  40020e:	f04f 31ff 	mov.w	r1, #4294967295
  400212:	6299      	str	r1, [r3, #40]	; 0x28

	/*  Clear status register. */
	tc_channel->TC_SR;
  400214:	6a19      	ldr	r1, [r3, #32]

	/*  Set mode. */
	tc_channel->TC_CMR = ul_mode;
  400216:	605a      	str	r2, [r3, #4]
}
  400218:	bc10      	pop	{r4}
  40021a:	4770      	bx	lr

0040021c <tc_start>:
	/* Validate inputs. */
	Assert(p_tc);
	Assert(ul_channel <
			(sizeof(p_tc->TC_CHANNEL) / sizeof(p_tc->TC_CHANNEL[0])));

	p_tc->TC_CHANNEL[ul_channel].TC_CCR = TC_CCR_CLKEN | TC_CCR_SWTRG;
  40021c:	0189      	lsls	r1, r1, #6
  40021e:	2305      	movs	r3, #5
  400220:	5043      	str	r3, [r0, r1]
  400222:	4770      	bx	lr

00400224 <tc_write_rc>:
	/* Validate inputs. */
	Assert(p_tc);
	Assert(ul_channel <
			(sizeof(p_tc->TC_CHANNEL) / sizeof(p_tc->TC_CHANNEL[0])));

	p_tc->TC_CHANNEL[ul_channel].TC_RC = ul_value;
  400224:	eb00 1181 	add.w	r1, r0, r1, lsl #6
  400228:	61ca      	str	r2, [r1, #28]
  40022a:	4770      	bx	lr

0040022c <tc_enable_interrupt>:

	/* Validate inputs. */
	Assert(p_tc);
	Assert(ul_channel <
			(sizeof(p_tc->TC_CHANNEL) / sizeof(p_tc->TC_CHANNEL[0])));
	tc_channel = p_tc->TC_CHANNEL + ul_channel;
  40022c:	eb00 1181 	add.w	r1, r0, r1, lsl #6
	tc_channel->TC_IER = ul_sources;
  400230:	624a      	str	r2, [r1, #36]	; 0x24
  400232:	4770      	bx	lr

00400234 <tc_get_status>:
	/* Validate inputs. */
	Assert(p_tc);
	Assert(ul_channel <
			(sizeof(p_tc->TC_CHANNEL) / sizeof(p_tc->TC_CHANNEL[0])));
			
	tc_channel = p_tc->TC_CHANNEL + ul_channel;
  400234:	eb00 1181 	add.w	r1, r0, r1, lsl #6
	return tc_channel->TC_SR;
  400238:	6a08      	ldr	r0, [r1, #32]
}
  40023a:	4770      	bx	lr

0040023c <tc_find_mck_divisor>:
		uint32_t ul_freq,
		uint32_t ul_mck,
		uint32_t *p_uldiv,
		uint32_t *p_ultcclks,
		uint32_t ul_boardmck)
{
  40023c:	b4f0      	push	{r4, r5, r6, r7}
  40023e:	b086      	sub	sp, #24
	const uint32_t divisors[5] = { 2, 8, 32, 128,
  400240:	2402      	movs	r4, #2
  400242:	9401      	str	r4, [sp, #4]
  400244:	2408      	movs	r4, #8
  400246:	9402      	str	r4, [sp, #8]
  400248:	2420      	movs	r4, #32
  40024a:	9403      	str	r4, [sp, #12]
  40024c:	2480      	movs	r4, #128	; 0x80
  40024e:	9404      	str	r4, [sp, #16]
			ul_boardmck / FREQ_SLOW_CLOCK_EXT };
  400250:	9c0a      	ldr	r4, [sp, #40]	; 0x28
  400252:	0be4      	lsrs	r4, r4, #15
	const uint32_t divisors[5] = { 2, 8, 32, 128,
  400254:	9405      	str	r4, [sp, #20]
	for (ul_index = 0;
			ul_index < (sizeof(divisors) / sizeof(divisors[0]));
			ul_index++) {
		ul_high = ul_mck / divisors[ul_index];
		ul_low  = ul_high / TC_DIV_FACTOR;
		if (ul_freq > ul_high) {
  400256:	ebb0 0f51 	cmp.w	r0, r1, lsr #1
  40025a:	d814      	bhi.n	400286 <tc_find_mck_divisor+0x4a>
  40025c:	0c4c      	lsrs	r4, r1, #17
			return 0;
		} else if (ul_freq >= ul_low) {
  40025e:	42a0      	cmp	r0, r4
  400260:	d217      	bcs.n	400292 <tc_find_mck_divisor+0x56>
  400262:	2501      	movs	r5, #1
		ul_high = ul_mck / divisors[ul_index];
  400264:	af01      	add	r7, sp, #4
  400266:	f857 4025 	ldr.w	r4, [r7, r5, lsl #2]
  40026a:	fbb1 f4f4 	udiv	r4, r1, r4
		ul_low  = ul_high / TC_DIV_FACTOR;
  40026e:	0c26      	lsrs	r6, r4, #16
		if (ul_freq > ul_high) {
  400270:	4284      	cmp	r4, r0
  400272:	d30a      	bcc.n	40028a <tc_find_mck_divisor+0x4e>
		} else if (ul_freq >= ul_low) {
  400274:	4286      	cmp	r6, r0
  400276:	d90d      	bls.n	400294 <tc_find_mck_divisor+0x58>
			ul_index++) {
  400278:	3501      	adds	r5, #1
	for (ul_index = 0;
  40027a:	2d05      	cmp	r5, #5
  40027c:	d1f3      	bne.n	400266 <tc_find_mck_divisor+0x2a>
			break;
		}
	}
	if (ul_index >= (sizeof(divisors) / sizeof(divisors[0]))) {
		return 0;
  40027e:	2000      	movs	r0, #0
	if (p_ultcclks) {
		*p_ultcclks = ul_index;
	}

	return 1;
}
  400280:	b006      	add	sp, #24
  400282:	bcf0      	pop	{r4, r5, r6, r7}
  400284:	4770      	bx	lr
			return 0;
  400286:	2000      	movs	r0, #0
  400288:	e7fa      	b.n	400280 <tc_find_mck_divisor+0x44>
  40028a:	2000      	movs	r0, #0
  40028c:	e7f8      	b.n	400280 <tc_find_mck_divisor+0x44>
	return 1;
  40028e:	2001      	movs	r0, #1
  400290:	e7f6      	b.n	400280 <tc_find_mck_divisor+0x44>
	for (ul_index = 0;
  400292:	2500      	movs	r5, #0
	if (p_uldiv) {
  400294:	b12a      	cbz	r2, 4002a2 <tc_find_mck_divisor+0x66>
		*p_uldiv = divisors[ul_index];
  400296:	a906      	add	r1, sp, #24
  400298:	eb01 0185 	add.w	r1, r1, r5, lsl #2
  40029c:	f851 1c14 	ldr.w	r1, [r1, #-20]
  4002a0:	6011      	str	r1, [r2, #0]
	if (p_ultcclks) {
  4002a2:	2b00      	cmp	r3, #0
  4002a4:	d0f3      	beq.n	40028e <tc_find_mck_divisor+0x52>
		*p_ultcclks = ul_index;
  4002a6:	601d      	str	r5, [r3, #0]
	return 1;
  4002a8:	2001      	movs	r0, #1
  4002aa:	e7e9      	b.n	400280 <tc_find_mck_divisor+0x44>

004002ac <uart_init>:
 *
 * \retval 0 Success.
 * \retval 1 Bad baud rate generator value.
 */
uint32_t uart_init(Uart *p_uart, const sam_uart_opt_t *p_uart_opt)
{
  4002ac:	b410      	push	{r4}
	uint32_t cd = 0;

	/* Reset and disable receiver & transmitter */
	p_uart->UART_CR = UART_CR_RSTRX | UART_CR_RSTTX
  4002ae:	23ac      	movs	r3, #172	; 0xac
  4002b0:	6003      	str	r3, [r0, #0]
			| UART_CR_RXDIS | UART_CR_TXDIS;

	/* Check and configure baudrate */
	/* Asynchronous, no oversampling */
	cd = (p_uart_opt->ul_mck / p_uart_opt->ul_baudrate) / UART_MCK_DIV;
  4002b2:	680b      	ldr	r3, [r1, #0]
  4002b4:	684a      	ldr	r2, [r1, #4]
  4002b6:	fbb3 f3f2 	udiv	r3, r3, r2
  4002ba:	091b      	lsrs	r3, r3, #4
	if (cd < UART_MCK_DIV_MIN_FACTOR || cd > UART_MCK_DIV_MAX_FACTOR)
  4002bc:	1e5c      	subs	r4, r3, #1
  4002be:	f64f 72fe 	movw	r2, #65534	; 0xfffe
  4002c2:	4294      	cmp	r4, r2
  4002c4:	d80b      	bhi.n	4002de <uart_init+0x32>
		return 1;

	p_uart->UART_BRGR = cd;
  4002c6:	6203      	str	r3, [r0, #32]
	/* Configure mode */
	p_uart->UART_MR = p_uart_opt->ul_mode;
  4002c8:	688b      	ldr	r3, [r1, #8]
  4002ca:	6043      	str	r3, [r0, #4]

#if (!SAMV71 && !SAMV70 && !SAME70 && !SAMS70)
	/* Disable PDC channel */
	p_uart->UART_PTCR = UART_PTCR_RXTDIS | UART_PTCR_TXTDIS;
  4002cc:	f240 2302 	movw	r3, #514	; 0x202
  4002d0:	f8c0 3120 	str.w	r3, [r0, #288]	; 0x120
#endif

	/* Enable receiver and transmitter */
	p_uart->UART_CR = UART_CR_RXEN | UART_CR_TXEN;
  4002d4:	2350      	movs	r3, #80	; 0x50
  4002d6:	6003      	str	r3, [r0, #0]

	return 0;
  4002d8:	2000      	movs	r0, #0
}
  4002da:	bc10      	pop	{r4}
  4002dc:	4770      	bx	lr
		return 1;
  4002de:	2001      	movs	r0, #1
  4002e0:	e7fb      	b.n	4002da <uart_init+0x2e>

004002e2 <uart_write>:
 * \retval 1 I/O Failure, UART is not ready.
 */
uint32_t uart_write(Uart *p_uart, const uint8_t uc_data)
{
	/* Check if the transmitter is ready */
	if (!(p_uart->UART_SR & UART_SR_TXRDY))
  4002e2:	6943      	ldr	r3, [r0, #20]
  4002e4:	f013 0f02 	tst.w	r3, #2
		return 1;

	/* Send character */
	p_uart->UART_THR = uc_data;
  4002e8:	bf1a      	itte	ne
  4002ea:	61c1      	strne	r1, [r0, #28]
	return 0;
  4002ec:	2000      	movne	r0, #0
		return 1;
  4002ee:	2001      	moveq	r0, #1
}
  4002f0:	4770      	bx	lr

004002f2 <uart_read>:
 * \retval 1 I/O Failure, UART is not ready.
 */
uint32_t uart_read(Uart *p_uart, uint8_t *puc_data)
{
	/* Check if the receiver is ready */
	if ((p_uart->UART_SR & UART_SR_RXRDY) == 0)
  4002f2:	6943      	ldr	r3, [r0, #20]
  4002f4:	f013 0f01 	tst.w	r3, #1
		return 1;

	/* Read character */
	*puc_data = (uint8_t) p_uart->UART_RHR;
  4002f8:	bf1d      	ittte	ne
  4002fa:	6983      	ldrne	r3, [r0, #24]
  4002fc:	700b      	strbne	r3, [r1, #0]
	return 0;
  4002fe:	2000      	movne	r0, #0
		return 1;
  400300:	2001      	moveq	r0, #1
}
  400302:	4770      	bx	lr

00400304 <vReadSensor>:

#include <asf.h>
#include "BeamBall.h"


void vReadSensor(void) {
  400304:	b508      	push	{r3, lr}
	// clear timer
	//tc_get_status(TC_SENSOR,CHANNEL_SENSOR);
	vClearSensorCounter();
  400306:	4b06      	ldr	r3, [pc, #24]	; (400320 <vReadSensor+0x1c>)
  400308:	4798      	blx	r3
	gpio_set_pin_high(PIO_TRIGGER);
  40030a:	202e      	movs	r0, #46	; 0x2e
  40030c:	4b05      	ldr	r3, [pc, #20]	; (400324 <vReadSensor+0x20>)
  40030e:	4798      	blx	r3
	delay_us(10);
  400310:	2023      	movs	r0, #35	; 0x23
  400312:	4b05      	ldr	r3, [pc, #20]	; (400328 <vReadSensor+0x24>)
  400314:	4798      	blx	r3
	gpio_set_pin_low(PIO_TRIGGER);
  400316:	202e      	movs	r0, #46	; 0x2e
  400318:	4b04      	ldr	r3, [pc, #16]	; (40032c <vReadSensor+0x28>)
  40031a:	4798      	blx	r3
  40031c:	bd08      	pop	{r3, pc}
  40031e:	bf00      	nop
  400320:	004004cd 	.word	0x004004cd
  400324:	00400a05 	.word	0x00400a05
  400328:	20000001 	.word	0x20000001
  40032c:	00400a1f 	.word	0x00400a1f

00400330 <vMalhaControle>:
}

void vMalhaControle(double distance) {
  400330:	b538      	push	{r3, r4, r5, lr}
  400332:	4604      	mov	r4, r0
  400334:	460d      	mov	r5, r1
	puts("Executando Malha de Controle\r\n");
  400336:	4807      	ldr	r0, [pc, #28]	; (400354 <vMalhaControle+0x24>)
  400338:	4b07      	ldr	r3, [pc, #28]	; (400358 <vMalhaControle+0x28>)
  40033a:	4798      	blx	r3
	
	double motorPos;
	char buffer[50];
	
	printf("motorPos: %d\r\n",motorPos);
  40033c:	2200      	movs	r2, #0
  40033e:	2300      	movs	r3, #0
  400340:	4806      	ldr	r0, [pc, #24]	; (40035c <vMalhaControle+0x2c>)
  400342:	4907      	ldr	r1, [pc, #28]	; (400360 <vMalhaControle+0x30>)
  400344:	4788      	blx	r1
	//ili9225_set_foreground_color(COLOR_BLUE);
	//ili9225_draw_string(10,115,(uint8_t *) "P: ");
	//sprintf (buffer, "%.2f", pos);
	//ili9225_draw_string(95,115,(uint8_t *) buffer);

	vPWMUpdateDuty(pos);
  400346:	4620      	mov	r0, r4
  400348:	4629      	mov	r1, r5
  40034a:	4b06      	ldr	r3, [pc, #24]	; (400364 <vMalhaControle+0x34>)
  40034c:	4798      	blx	r3
  40034e:	4b06      	ldr	r3, [pc, #24]	; (400368 <vMalhaControle+0x38>)
  400350:	4798      	blx	r3
  400352:	bd38      	pop	{r3, r4, r5, pc}
  400354:	004043a0 	.word	0x004043a0
  400358:	004017d1 	.word	0x004017d1
  40035c:	004043c0 	.word	0x004043c0
  400360:	004016a5 	.word	0x004016a5
  400364:	004013f9 	.word	0x004013f9
  400368:	00400701 	.word	0x00400701

0040036c <usart_serial_getchar>:
 * \param p_usart   Base address of the USART instance.
 * \param data   Data to read
 *
 */
static inline void usart_serial_getchar(usart_if p_usart, uint8_t *data)
{
  40036c:	b5f0      	push	{r4, r5, r6, r7, lr}
  40036e:	b083      	sub	sp, #12
  400370:	4605      	mov	r5, r0
  400372:	460c      	mov	r4, r1
	uint32_t val = 0;
  400374:	2300      	movs	r3, #0
  400376:	9301      	str	r3, [sp, #4]
	if (UART == (Uart*)p_usart) {
		while (uart_read((Uart*)p_usart, data));
	}
#else
# ifdef UART0
	if (UART0 == (Uart*)p_usart) {
  400378:	4b18      	ldr	r3, [pc, #96]	; (4003dc <usart_serial_getchar+0x70>)
  40037a:	4298      	cmp	r0, r3
  40037c:	d00a      	beq.n	400394 <usart_serial_getchar+0x28>
		while (uart_read((Uart*)p_usart, data));
	}
# endif
# ifdef UART1
	if (UART1 == (Uart*)p_usart) {
  40037e:	4b18      	ldr	r3, [pc, #96]	; (4003e0 <usart_serial_getchar+0x74>)
  400380:	4298      	cmp	r0, r3
  400382:	d00f      	beq.n	4003a4 <usart_serial_getchar+0x38>
		while (usart_read(p_usart, &val));
		*data = (uint8_t)(val & 0xFF);
	}
#else
# ifdef USART0
	if (USART0 == p_usart) {
  400384:	4b17      	ldr	r3, [pc, #92]	; (4003e4 <usart_serial_getchar+0x78>)
  400386:	4298      	cmp	r0, r3
  400388:	d014      	beq.n	4003b4 <usart_serial_getchar+0x48>
		while (usart_read(p_usart, &val));
		*data = (uint8_t)(val & 0xFF);
	}
# endif
# ifdef USART1
	if (USART1 == p_usart) {
  40038a:	4b17      	ldr	r3, [pc, #92]	; (4003e8 <usart_serial_getchar+0x7c>)
  40038c:	429d      	cmp	r5, r3
  40038e:	d01b      	beq.n	4003c8 <usart_serial_getchar+0x5c>
		*data = (uint8_t)(val & 0xFF);
	}
# endif
#endif /* ifdef USART */

}
  400390:	b003      	add	sp, #12
  400392:	bdf0      	pop	{r4, r5, r6, r7, pc}
		while (uart_read((Uart*)p_usart, data));
  400394:	461f      	mov	r7, r3
  400396:	4e15      	ldr	r6, [pc, #84]	; (4003ec <usart_serial_getchar+0x80>)
  400398:	4621      	mov	r1, r4
  40039a:	4638      	mov	r0, r7
  40039c:	47b0      	blx	r6
  40039e:	2800      	cmp	r0, #0
  4003a0:	d1fa      	bne.n	400398 <usart_serial_getchar+0x2c>
  4003a2:	e7f2      	b.n	40038a <usart_serial_getchar+0x1e>
		while (uart_read((Uart*)p_usart, data));
  4003a4:	461e      	mov	r6, r3
  4003a6:	4d11      	ldr	r5, [pc, #68]	; (4003ec <usart_serial_getchar+0x80>)
  4003a8:	4621      	mov	r1, r4
  4003aa:	4630      	mov	r0, r6
  4003ac:	47a8      	blx	r5
  4003ae:	2800      	cmp	r0, #0
  4003b0:	d1fa      	bne.n	4003a8 <usart_serial_getchar+0x3c>
  4003b2:	e7ed      	b.n	400390 <usart_serial_getchar+0x24>
		while (usart_read(p_usart, &val));
  4003b4:	461e      	mov	r6, r3
  4003b6:	4d0e      	ldr	r5, [pc, #56]	; (4003f0 <usart_serial_getchar+0x84>)
  4003b8:	a901      	add	r1, sp, #4
  4003ba:	4630      	mov	r0, r6
  4003bc:	47a8      	blx	r5
  4003be:	2800      	cmp	r0, #0
  4003c0:	d1fa      	bne.n	4003b8 <usart_serial_getchar+0x4c>
		*data = (uint8_t)(val & 0xFF);
  4003c2:	9b01      	ldr	r3, [sp, #4]
  4003c4:	7023      	strb	r3, [r4, #0]
  4003c6:	e7e3      	b.n	400390 <usart_serial_getchar+0x24>
		while (usart_read(p_usart, &val));
  4003c8:	461e      	mov	r6, r3
  4003ca:	4d09      	ldr	r5, [pc, #36]	; (4003f0 <usart_serial_getchar+0x84>)
  4003cc:	a901      	add	r1, sp, #4
  4003ce:	4630      	mov	r0, r6
  4003d0:	47a8      	blx	r5
  4003d2:	2800      	cmp	r0, #0
  4003d4:	d1fa      	bne.n	4003cc <usart_serial_getchar+0x60>
		*data = (uint8_t)(val & 0xFF);
  4003d6:	9b01      	ldr	r3, [sp, #4]
  4003d8:	7023      	strb	r3, [r4, #0]
}
  4003da:	e7d9      	b.n	400390 <usart_serial_getchar+0x24>
  4003dc:	400e0600 	.word	0x400e0600
  4003e0:	400e0800 	.word	0x400e0800
  4003e4:	40024000 	.word	0x40024000
  4003e8:	40028000 	.word	0x40028000
  4003ec:	004002f3 	.word	0x004002f3
  4003f0:	00400181 	.word	0x00400181

004003f4 <usart_serial_putchar>:
{
  4003f4:	b570      	push	{r4, r5, r6, lr}
  4003f6:	460c      	mov	r4, r1
	if (UART0 == (Uart*)p_usart) {
  4003f8:	4b18      	ldr	r3, [pc, #96]	; (40045c <usart_serial_putchar+0x68>)
  4003fa:	4298      	cmp	r0, r3
  4003fc:	d00a      	beq.n	400414 <usart_serial_putchar+0x20>
	if (UART1 == (Uart*)p_usart) {
  4003fe:	4b18      	ldr	r3, [pc, #96]	; (400460 <usart_serial_putchar+0x6c>)
  400400:	4298      	cmp	r0, r3
  400402:	d010      	beq.n	400426 <usart_serial_putchar+0x32>
	if (USART0 == p_usart) {
  400404:	4b17      	ldr	r3, [pc, #92]	; (400464 <usart_serial_putchar+0x70>)
  400406:	4298      	cmp	r0, r3
  400408:	d016      	beq.n	400438 <usart_serial_putchar+0x44>
	if (USART1 == p_usart) {
  40040a:	4b17      	ldr	r3, [pc, #92]	; (400468 <usart_serial_putchar+0x74>)
  40040c:	4298      	cmp	r0, r3
  40040e:	d01c      	beq.n	40044a <usart_serial_putchar+0x56>
	return 0;
  400410:	2000      	movs	r0, #0
}
  400412:	bd70      	pop	{r4, r5, r6, pc}
		while (uart_write((Uart*)p_usart, c)!=0);
  400414:	461e      	mov	r6, r3
  400416:	4d15      	ldr	r5, [pc, #84]	; (40046c <usart_serial_putchar+0x78>)
  400418:	4621      	mov	r1, r4
  40041a:	4630      	mov	r0, r6
  40041c:	47a8      	blx	r5
  40041e:	2800      	cmp	r0, #0
  400420:	d1fa      	bne.n	400418 <usart_serial_putchar+0x24>
		return 1;
  400422:	2001      	movs	r0, #1
  400424:	bd70      	pop	{r4, r5, r6, pc}
		while (uart_write((Uart*)p_usart, c)!=0);
  400426:	461e      	mov	r6, r3
  400428:	4d10      	ldr	r5, [pc, #64]	; (40046c <usart_serial_putchar+0x78>)
  40042a:	4621      	mov	r1, r4
  40042c:	4630      	mov	r0, r6
  40042e:	47a8      	blx	r5
  400430:	2800      	cmp	r0, #0
  400432:	d1fa      	bne.n	40042a <usart_serial_putchar+0x36>
		return 1;
  400434:	2001      	movs	r0, #1
  400436:	bd70      	pop	{r4, r5, r6, pc}
		while (usart_write(p_usart, c)!=0);
  400438:	461e      	mov	r6, r3
  40043a:	4d0d      	ldr	r5, [pc, #52]	; (400470 <usart_serial_putchar+0x7c>)
  40043c:	4621      	mov	r1, r4
  40043e:	4630      	mov	r0, r6
  400440:	47a8      	blx	r5
  400442:	2800      	cmp	r0, #0
  400444:	d1fa      	bne.n	40043c <usart_serial_putchar+0x48>
		return 1;
  400446:	2001      	movs	r0, #1
  400448:	bd70      	pop	{r4, r5, r6, pc}
		while (usart_write(p_usart, c)!=0);
  40044a:	461e      	mov	r6, r3
  40044c:	4d08      	ldr	r5, [pc, #32]	; (400470 <usart_serial_putchar+0x7c>)
  40044e:	4621      	mov	r1, r4
  400450:	4630      	mov	r0, r6
  400452:	47a8      	blx	r5
  400454:	2800      	cmp	r0, #0
  400456:	d1fa      	bne.n	40044e <usart_serial_putchar+0x5a>
		return 1;
  400458:	2001      	movs	r0, #1
  40045a:	bd70      	pop	{r4, r5, r6, pc}
  40045c:	400e0600 	.word	0x400e0600
  400460:	400e0800 	.word	0x400e0800
  400464:	40024000 	.word	0x40024000
  400468:	40028000 	.word	0x40028000
  40046c:	004002e3 	.word	0x004002e3
  400470:	0040016d 	.word	0x0040016d

00400474 <vSensorISR>:
    //tc_start(TC_SENSOR,CHANNEL_SENSOR);
}

/* ISR Configuration */

void vSensorISR(const uint32_t id, const uint32_t index) {
  400474:	b538      	push	{r3, r4, r5, lr}
	puts("Entrou Sensor ISR \r\n");
  400476:	480d      	ldr	r0, [pc, #52]	; (4004ac <vSensorISR+0x38>)
  400478:	4b0d      	ldr	r3, [pc, #52]	; (4004b0 <vSensorISR+0x3c>)
  40047a:	4798      	blx	r3
	return (sensor_counter/58);
  40047c:	4b0d      	ldr	r3, [pc, #52]	; (4004b4 <vSensorISR+0x40>)
  40047e:	681b      	ldr	r3, [r3, #0]
  400480:	480d      	ldr	r0, [pc, #52]	; (4004b8 <vSensorISR+0x44>)
  400482:	fb80 2003 	smull	r2, r0, r0, r3
  400486:	4418      	add	r0, r3
  400488:	17db      	asrs	r3, r3, #31
  40048a:	ebc3 1060 	rsb	r0, r3, r0, asr #5
  40048e:	4b0b      	ldr	r3, [pc, #44]	; (4004bc <vSensorISR+0x48>)
  400490:	4798      	blx	r3
  400492:	4604      	mov	r4, r0
  400494:	460d      	mov	r5, r1
	double distance = dGetDistance();
	printf("Distance Sensor: %d\r\n",distance);
  400496:	4602      	mov	r2, r0
  400498:	460b      	mov	r3, r1
  40049a:	4809      	ldr	r0, [pc, #36]	; (4004c0 <vSensorISR+0x4c>)
  40049c:	4909      	ldr	r1, [pc, #36]	; (4004c4 <vSensorISR+0x50>)
  40049e:	4788      	blx	r1
	vMalhaControle(distance);
  4004a0:	4620      	mov	r0, r4
  4004a2:	4629      	mov	r1, r5
  4004a4:	4b08      	ldr	r3, [pc, #32]	; (4004c8 <vSensorISR+0x54>)
  4004a6:	4798      	blx	r3
  4004a8:	bd38      	pop	{r3, r4, r5, pc}
  4004aa:	bf00      	nop
  4004ac:	004044a4 	.word	0x004044a4
  4004b0:	004017d1 	.word	0x004017d1
  4004b4:	20000ad4 	.word	0x20000ad4
  4004b8:	8d3dcb09 	.word	0x8d3dcb09
  4004bc:	0040132d 	.word	0x0040132d
  4004c0:	004044bc 	.word	0x004044bc
  4004c4:	004016a5 	.word	0x004016a5
  4004c8:	00400331 	.word	0x00400331

004004cc <vClearSensorCounter>:
	sensor_counter = 0;
  4004cc:	2200      	movs	r2, #0
  4004ce:	4b01      	ldr	r3, [pc, #4]	; (4004d4 <vClearSensorCounter+0x8>)
  4004d0:	601a      	str	r2, [r3, #0]
  4004d2:	4770      	bx	lr
  4004d4:	20000ad4 	.word	0x20000ad4

004004d8 <vAddSensorCounter>:
void vAddSensorCounter() {
  4004d8:	b508      	push	{r3, lr}
	sensor_counter++;
  4004da:	4b04      	ldr	r3, [pc, #16]	; (4004ec <vAddSensorCounter+0x14>)
  4004dc:	6819      	ldr	r1, [r3, #0]
  4004de:	3101      	adds	r1, #1
  4004e0:	6019      	str	r1, [r3, #0]
	printf("contador sensor: %i\r\n",sensor_counter);
  4004e2:	4803      	ldr	r0, [pc, #12]	; (4004f0 <vAddSensorCounter+0x18>)
  4004e4:	4b03      	ldr	r3, [pc, #12]	; (4004f4 <vAddSensorCounter+0x1c>)
  4004e6:	4798      	blx	r3
  4004e8:	bd08      	pop	{r3, pc}
  4004ea:	bf00      	nop
  4004ec:	20000ad4 	.word	0x20000ad4
  4004f0:	004043f0 	.word	0x004043f0
  4004f4:	004016a5 	.word	0x004016a5

004004f8 <vConfigureUART>:
void vConfigureUART(void) {
  4004f8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  4004fc:	b084      	sub	sp, #16
	uart_settings.ul_mck = sysclk_get_peripheral_hz();
  4004fe:	f8df 808c 	ldr.w	r8, [pc, #140]	; 40058c <vConfigureUART+0x94>
  400502:	f8cd 8004 	str.w	r8, [sp, #4]
	uart_settings.ul_baudrate = opt->baudrate;
  400506:	4c16      	ldr	r4, [pc, #88]	; (400560 <vConfigureUART+0x68>)
  400508:	6823      	ldr	r3, [r4, #0]
  40050a:	9302      	str	r3, [sp, #8]
	uart_settings.ul_mode = opt->paritytype;
  40050c:	68a3      	ldr	r3, [r4, #8]
  40050e:	9303      	str	r3, [sp, #12]
 *
 * \param ul_id Id (number) of the peripheral clock.
 */
static inline void sysclk_enable_peripheral_clock(uint32_t ul_id)
{
	pmc_enable_periph_clk(ul_id);
  400510:	2008      	movs	r0, #8
  400512:	4f14      	ldr	r7, [pc, #80]	; (400564 <vConfigureUART+0x6c>)
  400514:	47b8      	blx	r7
		uart_init((Uart*)p_usart, &uart_settings);
  400516:	4d14      	ldr	r5, [pc, #80]	; (400568 <vConfigureUART+0x70>)
  400518:	a901      	add	r1, sp, #4
  40051a:	4628      	mov	r0, r5
  40051c:	4e13      	ldr	r6, [pc, #76]	; (40056c <vConfigureUART+0x74>)
  40051e:	47b0      	blx	r6
 * \param opt         Options needed to set up RS232 communication (see \ref usart_options_t).
 *
 */
static inline void stdio_serial_init(volatile void *usart, const usart_serial_options_t *opt)
{
	stdio_base = (void *)usart;
  400520:	4b13      	ldr	r3, [pc, #76]	; (400570 <vConfigureUART+0x78>)
  400522:	601d      	str	r5, [r3, #0]
	ptr_put = (int (*)(void volatile*,char))&usart_serial_putchar;
  400524:	4a13      	ldr	r2, [pc, #76]	; (400574 <vConfigureUART+0x7c>)
  400526:	4b14      	ldr	r3, [pc, #80]	; (400578 <vConfigureUART+0x80>)
  400528:	601a      	str	r2, [r3, #0]
	ptr_get = (void (*)(void volatile*,char*))&usart_serial_getchar;
  40052a:	4a14      	ldr	r2, [pc, #80]	; (40057c <vConfigureUART+0x84>)
  40052c:	4b14      	ldr	r3, [pc, #80]	; (400580 <vConfigureUART+0x88>)
  40052e:	601a      	str	r2, [r3, #0]
	uart_settings.ul_mck = sysclk_get_peripheral_hz();
  400530:	f8cd 8004 	str.w	r8, [sp, #4]
	uart_settings.ul_baudrate = opt->baudrate;
  400534:	6823      	ldr	r3, [r4, #0]
  400536:	9302      	str	r3, [sp, #8]
	uart_settings.ul_mode = opt->paritytype;
  400538:	68a3      	ldr	r3, [r4, #8]
  40053a:	9303      	str	r3, [sp, #12]
  40053c:	2008      	movs	r0, #8
  40053e:	47b8      	blx	r7
		uart_init((Uart*)p_usart, &uart_settings);
  400540:	a901      	add	r1, sp, #4
  400542:	4628      	mov	r0, r5
  400544:	47b0      	blx	r6
	fdevopen((int (*)(char, FILE*))(_write),(int (*)(FILE*))(_read));
#  endif
#  if UC3 || SAM
	// For AVR32 and SAM GCC
	// Specify that stdout and stdin should not be buffered.
	setbuf(stdout, NULL);
  400546:	4d0f      	ldr	r5, [pc, #60]	; (400584 <vConfigureUART+0x8c>)
  400548:	682b      	ldr	r3, [r5, #0]
  40054a:	2100      	movs	r1, #0
  40054c:	6898      	ldr	r0, [r3, #8]
  40054e:	4c0e      	ldr	r4, [pc, #56]	; (400588 <vConfigureUART+0x90>)
  400550:	47a0      	blx	r4
	setbuf(stdin, NULL);
  400552:	682b      	ldr	r3, [r5, #0]
  400554:	2100      	movs	r1, #0
  400556:	6858      	ldr	r0, [r3, #4]
  400558:	47a0      	blx	r4
}
  40055a:	b004      	add	sp, #16
  40055c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  400560:	200000f4 	.word	0x200000f4
  400564:	00400e35 	.word	0x00400e35
  400568:	400e0600 	.word	0x400e0600
  40056c:	004002ad 	.word	0x004002ad
  400570:	20000b8c 	.word	0x20000b8c
  400574:	004003f5 	.word	0x004003f5
  400578:	20000b88 	.word	0x20000b88
  40057c:	0040036d 	.word	0x0040036d
  400580:	20000b84 	.word	0x20000b84
  400584:	20000108 	.word	0x20000108
  400588:	004017e1 	.word	0x004017e1
  40058c:	02dc6c00 	.word	0x02dc6c00

00400590 <SPI_Handler>:
void SPI_Handler(void) {
  400590:	b508      	push	{r3, lr}
	ili9225_spi_handler();
  400592:	4b01      	ldr	r3, [pc, #4]	; (400598 <SPI_Handler+0x8>)
  400594:	4798      	blx	r3
  400596:	bd08      	pop	{r3, pc}
  400598:	004001e9 	.word	0x004001e9

0040059c <TC0_Handler>:
void TC0_Handler(void) {
  40059c:	b508      	push	{r3, lr}
	tc_get_status(TC,CHANNEL);
  40059e:	2100      	movs	r1, #0
  4005a0:	4802      	ldr	r0, [pc, #8]	; (4005ac <TC0_Handler+0x10>)
  4005a2:	4b03      	ldr	r3, [pc, #12]	; (4005b0 <TC0_Handler+0x14>)
  4005a4:	4798      	blx	r3
	vReadSensor();
  4005a6:	4b03      	ldr	r3, [pc, #12]	; (4005b4 <TC0_Handler+0x18>)
  4005a8:	4798      	blx	r3
  4005aa:	bd08      	pop	{r3, pc}
  4005ac:	40010000 	.word	0x40010000
  4005b0:	00400235 	.word	0x00400235
  4005b4:	00400305 	.word	0x00400305

004005b8 <TC1_Handler>:
void TC1_Handler(void) {
  4005b8:	b508      	push	{r3, lr}
	tc_get_status(TC_SENSOR,CHANNEL_SENSOR);	
  4005ba:	2101      	movs	r1, #1
  4005bc:	4804      	ldr	r0, [pc, #16]	; (4005d0 <TC1_Handler+0x18>)
  4005be:	4b05      	ldr	r3, [pc, #20]	; (4005d4 <TC1_Handler+0x1c>)
  4005c0:	4798      	blx	r3
	vAddSensorCounter();
  4005c2:	4b05      	ldr	r3, [pc, #20]	; (4005d8 <TC1_Handler+0x20>)
  4005c4:	4798      	blx	r3
	puts("Contando\r\n");
  4005c6:	4805      	ldr	r0, [pc, #20]	; (4005dc <TC1_Handler+0x24>)
  4005c8:	4b05      	ldr	r3, [pc, #20]	; (4005e0 <TC1_Handler+0x28>)
  4005ca:	4798      	blx	r3
  4005cc:	bd08      	pop	{r3, pc}
  4005ce:	bf00      	nop
  4005d0:	40014000 	.word	0x40014000
  4005d4:	00400235 	.word	0x00400235
  4005d8:	004004d9 	.word	0x004004d9
  4005dc:	004043e4 	.word	0x004043e4
  4005e0:	004017d1 	.word	0x004017d1

004005e4 <vConfigureTimer>:
void vConfigureTimer() {
  4005e4:	b530      	push	{r4, r5, lr}
  4005e6:	b085      	sub	sp, #20
	pmc_enable_periph_clk(ID_TC);
  4005e8:	2017      	movs	r0, #23
  4005ea:	4b1a      	ldr	r3, [pc, #104]	; (400654 <vConfigureTimer+0x70>)
  4005ec:	4798      	blx	r3
	tc_find_mck_divisor(TC_FREQ,ul_sysclk,&ul_div,&ul_tcclk,ul_sysclk);
  4005ee:	4c1a      	ldr	r4, [pc, #104]	; (400658 <vConfigureTimer+0x74>)
  4005f0:	9400      	str	r4, [sp, #0]
  4005f2:	ab03      	add	r3, sp, #12
  4005f4:	aa02      	add	r2, sp, #8
  4005f6:	4621      	mov	r1, r4
  4005f8:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
  4005fc:	4d17      	ldr	r5, [pc, #92]	; (40065c <vConfigureTimer+0x78>)
  4005fe:	47a8      	blx	r5
	tc_init(TC,CHANNEL,TC_CMR_CPCTRG|ul_tcclk);
  400600:	4d17      	ldr	r5, [pc, #92]	; (400660 <vConfigureTimer+0x7c>)
  400602:	9a03      	ldr	r2, [sp, #12]
  400604:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
  400608:	2100      	movs	r1, #0
  40060a:	4628      	mov	r0, r5
  40060c:	4b15      	ldr	r3, [pc, #84]	; (400664 <vConfigureTimer+0x80>)
  40060e:	4798      	blx	r3
	RC = (ul_sysclk/ul_div)/TC_FREQ;
  400610:	9a02      	ldr	r2, [sp, #8]
  400612:	fbb4 f4f2 	udiv	r4, r4, r2
  400616:	4a14      	ldr	r2, [pc, #80]	; (400668 <vConfigureTimer+0x84>)
  400618:	fba2 3204 	umull	r3, r2, r2, r4
    tc_write_rc(TC,CHANNEL,RC);
  40061c:	0992      	lsrs	r2, r2, #6
  40061e:	2100      	movs	r1, #0
  400620:	4628      	mov	r0, r5
  400622:	4b12      	ldr	r3, [pc, #72]	; (40066c <vConfigureTimer+0x88>)
  400624:	4798      	blx	r3
	tc_enable_interrupt(TC,CHANNEL,TC_IER_CPCS);
  400626:	2210      	movs	r2, #16
  400628:	2100      	movs	r1, #0
  40062a:	4628      	mov	r0, r5
  40062c:	4b10      	ldr	r3, [pc, #64]	; (400670 <vConfigureTimer+0x8c>)
  40062e:	4798      	blx	r3
__STATIC_INLINE void NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
  if(IRQn < 0) {
    SCB->SHP[((uint32_t)(IRQn) & 0xF)-4] = ((priority << (8 - __NVIC_PRIO_BITS)) & 0xff); } /* set Priority for Cortex-M  System Interrupts */
  else {
    NVIC->IP[(uint32_t)(IRQn)] = ((priority << (8 - __NVIC_PRIO_BITS)) & 0xff);    }        /* set Priority for device specific Interrupts  */
  400630:	4b10      	ldr	r3, [pc, #64]	; (400674 <vConfigureTimer+0x90>)
  400632:	2230      	movs	r2, #48	; 0x30
  400634:	f883 2318 	strb.w	r2, [r3, #792]	; 0x318
  NVIC->ISER[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); /* enable interrupt */
  400638:	f44f 0200 	mov.w	r2, #8388608	; 0x800000
  40063c:	601a      	str	r2, [r3, #0]
	puts("Timer Configurado para 100ms\r\n");
  40063e:	480e      	ldr	r0, [pc, #56]	; (400678 <vConfigureTimer+0x94>)
  400640:	4c0e      	ldr	r4, [pc, #56]	; (40067c <vConfigureTimer+0x98>)
  400642:	47a0      	blx	r4
	puts("Timer Configurado para 10us\r\n");
  400644:	480e      	ldr	r0, [pc, #56]	; (400680 <vConfigureTimer+0x9c>)
  400646:	47a0      	blx	r4
	tc_start(TC,CHANNEL);
  400648:	2100      	movs	r1, #0
  40064a:	4628      	mov	r0, r5
  40064c:	4b0d      	ldr	r3, [pc, #52]	; (400684 <vConfigureTimer+0xa0>)
  40064e:	4798      	blx	r3
}
  400650:	b005      	add	sp, #20
  400652:	bd30      	pop	{r4, r5, pc}
  400654:	00400e35 	.word	0x00400e35
  400658:	02dc6c00 	.word	0x02dc6c00
  40065c:	0040023d 	.word	0x0040023d
  400660:	40010000 	.word	0x40010000
  400664:	00400205 	.word	0x00400205
  400668:	10624dd3 	.word	0x10624dd3
  40066c:	00400225 	.word	0x00400225
  400670:	0040022d 	.word	0x0040022d
  400674:	e000e100 	.word	0xe000e100
  400678:	00404424 	.word	0x00404424
  40067c:	004017d1 	.word	0x004017d1
  400680:	00404444 	.word	0x00404444
  400684:	0040021d 	.word	0x0040021d

00400688 <vConfigureSensorISR>:
}


void vConfigureSensorISR() {
  400688:	b530      	push	{r4, r5, lr}
  40068a:	b083      	sub	sp, #12
	puts("Configuracao Sensor ISR \r\n");
  40068c:	4813      	ldr	r0, [pc, #76]	; (4006dc <vConfigureSensorISR+0x54>)
  40068e:	4b14      	ldr	r3, [pc, #80]	; (4006e0 <vConfigureSensorISR+0x58>)
  400690:	4798      	blx	r3
	/* Configuracao da ISR no PIO_ECHO do Sensor */
	
	// Descomente essas linhas para ativar a interrupcao do Sensor
	// OBS: Altere o PIO_ECHO para um PIO apropriado
	
	pio_set_input(PIOA, PIO_ECHO, PIO_DEBOUNCE);
  400692:	4c14      	ldr	r4, [pc, #80]	; (4006e4 <vConfigureSensorISR+0x5c>)
  400694:	2208      	movs	r2, #8
  400696:	f44f 4100 	mov.w	r1, #32768	; 0x8000
  40069a:	4620      	mov	r0, r4
  40069c:	4b12      	ldr	r3, [pc, #72]	; (4006e8 <vConfigureSensorISR+0x60>)
  40069e:	4798      	blx	r3
	pio_pull_down(PIOA,PIO_ECHO,1);
  4006a0:	2201      	movs	r2, #1
  4006a2:	f44f 4100 	mov.w	r1, #32768	; 0x8000
  4006a6:	4620      	mov	r0, r4
  4006a8:	4b10      	ldr	r3, [pc, #64]	; (4006ec <vConfigureSensorISR+0x64>)
  4006aa:	4798      	blx	r3
	//pio_set_input(PIOA, PIO_ECHO, PIO_PULLUP | PIO_DEBOUNCE);
	pio_handler_set(PIOA,ID_PIOA,PIO_ECHO,PIO_IT_RISE_EDGE,vSensorISR);
  4006ac:	4b10      	ldr	r3, [pc, #64]	; (4006f0 <vConfigureSensorISR+0x68>)
  4006ae:	9300      	str	r3, [sp, #0]
  4006b0:	2370      	movs	r3, #112	; 0x70
  4006b2:	f44f 4200 	mov.w	r2, #32768	; 0x8000
  4006b6:	210b      	movs	r1, #11
  4006b8:	4620      	mov	r0, r4
  4006ba:	4d0e      	ldr	r5, [pc, #56]	; (4006f4 <vConfigureSensorISR+0x6c>)
  4006bc:	47a8      	blx	r5
	pio_enable_interrupt(PIOA,PIO_ECHO);
  4006be:	f44f 4100 	mov.w	r1, #32768	; 0x8000
  4006c2:	4620      	mov	r0, r4
  4006c4:	4b0c      	ldr	r3, [pc, #48]	; (4006f8 <vConfigureSensorISR+0x70>)
  4006c6:	4798      	blx	r3
    NVIC->IP[(uint32_t)(IRQn)] = ((priority << (8 - __NVIC_PRIO_BITS)) & 0xff);    }        /* set Priority for device specific Interrupts  */
  4006c8:	4b0c      	ldr	r3, [pc, #48]	; (4006fc <vConfigureSensorISR+0x74>)
  4006ca:	2210      	movs	r2, #16
  4006cc:	f883 230b 	strb.w	r2, [r3, #779]	; 0x30b
  NVIC->ISER[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); /* enable interrupt */
  4006d0:	f44f 6200 	mov.w	r2, #2048	; 0x800
  4006d4:	601a      	str	r2, [r3, #0]
	NVIC_SetPriority(PIOA_IRQn, SENSOR_PRIORITY);
	NVIC_EnableIRQ(PIOA_IRQn);
}
  4006d6:	b003      	add	sp, #12
  4006d8:	bd30      	pop	{r4, r5, pc}
  4006da:	bf00      	nop
  4006dc:	00404408 	.word	0x00404408
  4006e0:	004017d1 	.word	0x004017d1
  4006e4:	400e0e00 	.word	0x400e0e00
  4006e8:	00400965 	.word	0x00400965
  4006ec:	004009bd 	.word	0x004009bd
  4006f0:	00400475 	.word	0x00400475
  4006f4:	00400ca1 	.word	0x00400ca1
  4006f8:	004009f9 	.word	0x004009f9
  4006fc:	e000e100 	.word	0xe000e100

00400700 <vPWMUpdateDuty>:
	PWM->PWM_ENA = PWM_ENA_CHID0;

}


void vPWMUpdateDuty (unsigned int duty) {
  400700:	b570      	push	{r4, r5, r6, lr}
  400702:	4604      	mov	r4, r0
	unsigned int uiD = 800;
	unsigned int DD = uiD * duty;
  400704:	f44f 7348 	mov.w	r3, #800	; 0x320
  400708:	fb03 f300 	mul.w	r3, r3, r0
	float d = PWM_PERIOD * (duty/100);

	PWM->PWM_CH_NUM[0].PWM_CDTY = PWM_PERIOD - DD; //PWM_PERIOD * (duty/100);
  40070c:	f64b 3580 	movw	r5, #48000	; 0xbb80
  400710:	1ae9      	subs	r1, r5, r3
  400712:	4a0c      	ldr	r2, [pc, #48]	; (400744 <vPWMUpdateDuty+0x44>)
  400714:	f8c2 1204 	str.w	r1, [r2, #516]	; 0x204

	printf("Period: %u // duty: %u // value: %u\r\n", PWM_PERIOD,duty,DD);
  400718:	4602      	mov	r2, r0
  40071a:	4629      	mov	r1, r5
  40071c:	480a      	ldr	r0, [pc, #40]	; (400748 <vPWMUpdateDuty+0x48>)
  40071e:	4e0b      	ldr	r6, [pc, #44]	; (40074c <vPWMUpdateDuty+0x4c>)
  400720:	47b0      	blx	r6
	float d = PWM_PERIOD * (duty/100);
  400722:	480b      	ldr	r0, [pc, #44]	; (400750 <vPWMUpdateDuty+0x50>)
  400724:	fba0 3004 	umull	r3, r0, r0, r4
  400728:	0940      	lsrs	r0, r0, #5
  40072a:	fb05 f000 	mul.w	r0, r5, r0
  40072e:	4b09      	ldr	r3, [pc, #36]	; (400754 <vPWMUpdateDuty+0x54>)
  400730:	4798      	blx	r3
	printf("PWM Update: %u // %f\r\n", duty, d);
  400732:	4b09      	ldr	r3, [pc, #36]	; (400758 <vPWMUpdateDuty+0x58>)
  400734:	4798      	blx	r3
  400736:	4602      	mov	r2, r0
  400738:	460b      	mov	r3, r1
  40073a:	4621      	mov	r1, r4
  40073c:	4807      	ldr	r0, [pc, #28]	; (40075c <vPWMUpdateDuty+0x5c>)
  40073e:	47b0      	blx	r6
  400740:	bd70      	pop	{r4, r5, r6, pc}
  400742:	bf00      	nop
  400744:	40020000 	.word	0x40020000
  400748:	00404464 	.word	0x00404464
  40074c:	004016a5 	.word	0x004016a5
  400750:	51eb851f 	.word	0x51eb851f
  400754:	004015a5 	.word	0x004015a5
  400758:	00401351 	.word	0x00401351
  40075c:	0040448c 	.word	0x0040448c

00400760 <PWM_Handler>:
}

// Descomente a funcao de baixo para ativar a interrupcao do PWM

void PWM_Handler(void) {
  400760:	b510      	push	{r4, lr}
	uint32_t events = pwm_channel_get_interrupt_status(PWM);
  400762:	4807      	ldr	r0, [pc, #28]	; (400780 <PWM_Handler+0x20>)
  400764:	4b07      	ldr	r3, [pc, #28]	; (400784 <PWM_Handler+0x24>)
  400766:	4798      	blx	r3
	gpio_toggle_pin(LED1_GPIO);
  400768:	202e      	movs	r0, #46	; 0x2e
  40076a:	4b07      	ldr	r3, [pc, #28]	; (400788 <PWM_Handler+0x28>)
  40076c:	4798      	blx	r3
	vPWMUpdateDuty(btn_duty);
  40076e:	4c07      	ldr	r4, [pc, #28]	; (40078c <PWM_Handler+0x2c>)
  400770:	6820      	ldr	r0, [r4, #0]
  400772:	4b07      	ldr	r3, [pc, #28]	; (400790 <PWM_Handler+0x30>)
  400774:	4798      	blx	r3
	printf("PWM Handler: %u\r\n", btn_duty);
  400776:	6821      	ldr	r1, [r4, #0]
  400778:	4806      	ldr	r0, [pc, #24]	; (400794 <PWM_Handler+0x34>)
  40077a:	4b07      	ldr	r3, [pc, #28]	; (400798 <PWM_Handler+0x38>)
  40077c:	4798      	blx	r3
  40077e:	bd10      	pop	{r4, pc}
  400780:	40020000 	.word	0x40020000
  400784:	00400201 	.word	0x00400201
  400788:	00400a39 	.word	0x00400a39
  40078c:	200000f0 	.word	0x200000f0
  400790:	00400701 	.word	0x00400701
  400794:	004043d0 	.word	0x004043d0
  400798:	004016a5 	.word	0x004016a5

0040079c <sysclk_init>:
{
}
#endif // CONFIG_USBCLK_SOURCE

void sysclk_init(void)
{
  40079c:	b510      	push	{r4, lr}
	/* Set flash wait state to max in case the below clock switching. */
	system_init_flash(CHIP_FREQ_CPU_MAX);
  40079e:	480e      	ldr	r0, [pc, #56]	; (4007d8 <sysclk_init+0x3c>)
  4007a0:	4b0e      	ldr	r3, [pc, #56]	; (4007dc <sysclk_init+0x40>)
  4007a2:	4798      	blx	r3
		pmc_switch_mainck_to_fastrc(CKGR_MOR_MOSCRCF_12_MHz);
		break;


	case OSC_MAINCK_XTAL:
		pmc_switch_mainck_to_xtal(PMC_OSC_XTAL,
  4007a4:	213e      	movs	r1, #62	; 0x3e
  4007a6:	2000      	movs	r0, #0
  4007a8:	4b0d      	ldr	r3, [pc, #52]	; (4007e0 <sysclk_init+0x44>)
  4007aa:	4798      	blx	r3
	case OSC_MAINCK_4M_RC:
	case OSC_MAINCK_8M_RC:
	case OSC_MAINCK_12M_RC:
	case OSC_MAINCK_XTAL:
	case OSC_MAINCK_BYPASS:
		return pmc_osc_is_ready_mainck();
  4007ac:	4c0d      	ldr	r4, [pc, #52]	; (4007e4 <sysclk_init+0x48>)
  4007ae:	47a0      	blx	r4
 *
 * \param id A number identifying the oscillator to wait for.
 */
static inline void osc_wait_ready(uint8_t id)
{
	while (!osc_is_ready(id)) {
  4007b0:	2800      	cmp	r0, #0
  4007b2:	d0fc      	beq.n	4007ae <sysclk_init+0x12>
static inline void pll_enable(const struct pll_config *p_cfg, uint32_t ul_pll_id)
{
	Assert(ul_pll_id < NR_PLLS);

	if (ul_pll_id == PLLA_ID) {
		pmc_disable_pllack(); // Always stop PLL first!
  4007b4:	4b0c      	ldr	r3, [pc, #48]	; (4007e8 <sysclk_init+0x4c>)
  4007b6:	4798      	blx	r3
		PMC->CKGR_PLLAR = CKGR_PLLAR_ONE | p_cfg->ctrl;
  4007b8:	4a0c      	ldr	r2, [pc, #48]	; (4007ec <sysclk_init+0x50>)
  4007ba:	4b0d      	ldr	r3, [pc, #52]	; (4007f0 <sysclk_init+0x54>)
  4007bc:	629a      	str	r2, [r3, #40]	; 0x28
static inline uint32_t pll_is_locked(uint32_t ul_pll_id)
{
	Assert(ul_pll_id < NR_PLLS);

	if (ul_pll_id == PLLA_ID) {
		return pmc_is_locked_pllack();
  4007be:	4c0d      	ldr	r4, [pc, #52]	; (4007f4 <sysclk_init+0x58>)
  4007c0:	47a0      	blx	r4
 */
static inline int pll_wait_for_lock(unsigned int pll_id)
{
	Assert(pll_id < NR_PLLS);

	while (!pll_is_locked(pll_id)) {
  4007c2:	2800      	cmp	r0, #0
  4007c4:	d0fc      	beq.n	4007c0 <sysclk_init+0x24>

		pll_enable_source(CONFIG_PLL0_SOURCE);
		pll_config_defaults(&pllcfg, 0);
		pll_enable(&pllcfg, 0);
		pll_wait_for_lock(0);
		pmc_switch_mck_to_pllack(CONFIG_SYSCLK_PRES);
  4007c6:	2010      	movs	r0, #16
  4007c8:	4b0b      	ldr	r3, [pc, #44]	; (4007f8 <sysclk_init+0x5c>)
  4007ca:	4798      	blx	r3
	}
#endif

	/* Update the SystemFrequency variable */
	SystemCoreClockUpdate();
  4007cc:	4b0b      	ldr	r3, [pc, #44]	; (4007fc <sysclk_init+0x60>)
  4007ce:	4798      	blx	r3

	/* Set a flash wait state depending on the new cpu frequency */
	system_init_flash(sysclk_get_cpu_hz());
  4007d0:	4801      	ldr	r0, [pc, #4]	; (4007d8 <sysclk_init+0x3c>)
  4007d2:	4b02      	ldr	r3, [pc, #8]	; (4007dc <sysclk_init+0x40>)
  4007d4:	4798      	blx	r3
  4007d6:	bd10      	pop	{r4, pc}
  4007d8:	02dc6c00 	.word	0x02dc6c00
  4007dc:	200000ad 	.word	0x200000ad
  4007e0:	00400db1 	.word	0x00400db1
  4007e4:	00400e05 	.word	0x00400e05
  4007e8:	00400e15 	.word	0x00400e15
  4007ec:	20073f01 	.word	0x20073f01
  4007f0:	400e0400 	.word	0x400e0400
  4007f4:	00400e25 	.word	0x00400e25
  4007f8:	00400d4d 	.word	0x00400d4d
  4007fc:	00400efd 	.word	0x00400efd

00400800 <board_init>:
#include "conf_board.h"
#include "gpio.h"
#include "ioport.h"

void board_init(void)
{
  400800:	b510      	push	{r4, lr}
#ifndef CONF_BOARD_KEEP_WATCHDOG_AT_INIT
	/* Disable the watchdog */
	WDT->WDT_MR = WDT_MR_WDDIS;
  400802:	f44f 4200 	mov.w	r2, #32768	; 0x8000
  400806:	4b2c      	ldr	r3, [pc, #176]	; (4008b8 <board_init+0xb8>)
  400808:	605a      	str	r2, [r3, #4]
  40080a:	200b      	movs	r0, #11
  40080c:	4c2b      	ldr	r4, [pc, #172]	; (4008bc <board_init+0xbc>)
  40080e:	47a0      	blx	r4
  400810:	200c      	movs	r0, #12
  400812:	47a0      	blx	r4
  400814:	200d      	movs	r0, #13
  400816:	47a0      	blx	r4
	 * Here IOPORT must be initialized for others to use before setting up IO.
	 */
	ioport_init();

	/* Configure LED pins */
	gpio_configure_pin(LED0_GPIO, LED0_FLAGS);
  400818:	f04f 5160 	mov.w	r1, #939524096	; 0x38000000
  40081c:	2017      	movs	r0, #23
  40081e:	4c28      	ldr	r4, [pc, #160]	; (4008c0 <board_init+0xc0>)
  400820:	47a0      	blx	r4
	gpio_configure_pin(LED1_GPIO, LED1_FLAGS);
  400822:	f04f 5160 	mov.w	r1, #939524096	; 0x38000000
  400826:	202e      	movs	r0, #46	; 0x2e
  400828:	47a0      	blx	r4

	/* Configure Push Button pins */
	gpio_configure_pin(GPIO_PUSH_BUTTON_1, GPIO_PUSH_BUTTON_1_FLAGS);
  40082a:	4926      	ldr	r1, [pc, #152]	; (4008c4 <board_init+0xc4>)
  40082c:	200f      	movs	r0, #15
  40082e:	47a0      	blx	r4
	gpio_configure_pin(GPIO_PUSH_BUTTON_2, GPIO_PUSH_BUTTON_2_FLAGS);
  400830:	4925      	ldr	r1, [pc, #148]	; (4008c8 <board_init+0xc8>)
  400832:	2010      	movs	r0, #16
  400834:	47a0      	blx	r4

#ifdef CONF_BOARD_UART_CONSOLE
	/* Configure UART pins */
	gpio_configure_group(PINS_UART0_PIO, PINS_UART0, PINS_UART0_FLAGS);
  400836:	f04f 6200 	mov.w	r2, #134217728	; 0x8000000
  40083a:	f44f 61c0 	mov.w	r1, #1536	; 0x600
  40083e:	4823      	ldr	r0, [pc, #140]	; (4008cc <board_init+0xcc>)
  400840:	4b23      	ldr	r3, [pc, #140]	; (4008d0 <board_init+0xd0>)
  400842:	4798      	blx	r3
#endif

	/* Configure ADC example pins */
#ifdef CONF_BOARD_ADC
	/* TC TIOA configuration */
	gpio_configure_pin(PIN_TC0_TIOA0,PIN_TC0_TIOA0_FLAGS);
  400844:	f04f 5180 	mov.w	r1, #268435456	; 0x10000000
  400848:	2000      	movs	r0, #0
  40084a:	47a0      	blx	r4

	/* ADC Trigger configuration */
	gpio_configure_pin(PINS_ADC_TRIG, PINS_ADC_TRIG_FLAG);
  40084c:	f04f 5180 	mov.w	r1, #268435456	; 0x10000000
  400850:	2008      	movs	r0, #8
  400852:	47a0      	blx	r4
		gpio_configure_pin(TWI1_CLK_GPIO, TWI1_CLK_FLAGS);
#endif

	/* Configure SPI pins */
#if (defined CONF_BOARD_SPI) || (defined CONF_BOARD_SD_MMC_SPI)
	gpio_configure_pin(SPI_MISO_GPIO, SPI_MISO_FLAGS);
  400854:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
  400858:	200c      	movs	r0, #12
  40085a:	47a0      	blx	r4
	gpio_configure_pin(SPI_MOSI_GPIO, SPI_MOSI_FLAGS);
  40085c:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
  400860:	200d      	movs	r0, #13
  400862:	47a0      	blx	r4
	gpio_configure_pin(SPI_SPCK_GPIO, SPI_SPCK_FLAGS);
  400864:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
  400868:	200e      	movs	r0, #14
  40086a:	47a0      	blx	r4

	#ifdef CONF_BOARD_SPI_NPCS1
		#if defined(CONF_BOARD_SPI_NPCS1_GPIO) && defined(CONF_BOARD_SPI_NPCS1_FLAGS)
			gpio_configure_pin(CONF_BOARD_SPI_NPCS1_GPIO, CONF_BOARD_SPI_NPCS1_FLAGS);
		#else
			gpio_configure_pin(SPI_NPCS1_PA31_GPIO, SPI_NPCS1_PA31_FLAGS);
  40086c:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
  400870:	201f      	movs	r0, #31
  400872:	47a0      	blx	r4

	#ifdef CONF_BOARD_SPI_NPCS2
		#if defined(CONF_BOARD_SPI_NPCS2_GPIO) && defined(CONF_BOARD_SPI_NPCS2_FLAGS)
			gpio_configure_pin(CONF_BOARD_SPI_NPCS2_GPIO, CONF_BOARD_SPI_NPCS2_FLAGS);
		#else
			gpio_configure_pin(SPI_NPCS2_PA30_GPIO, SPI_NPCS2_PA30_FLAGS);
  400874:	f04f 5180 	mov.w	r1, #268435456	; 0x10000000
  400878:	201e      	movs	r0, #30
  40087a:	47a0      	blx	r4
	gpio_set_pin_low(PIN_RE_IDX);
#endif

#ifdef CONF_BOARD_ILI9225
	/* Configure SPI LCD control pin */
	gpio_configure_pin(SPI_MISO_GPIO, SPI_MISO_FLAGS);
  40087c:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
  400880:	200c      	movs	r0, #12
  400882:	47a0      	blx	r4
	gpio_configure_pin(SPI_MOSI_GPIO, SPI_MOSI_FLAGS);
  400884:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
  400888:	200d      	movs	r0, #13
  40088a:	47a0      	blx	r4
	gpio_configure_pin(SPI_SPCK_GPIO, SPI_SPCK_FLAGS);
  40088c:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
  400890:	200e      	movs	r0, #14
  400892:	47a0      	blx	r4
	gpio_configure_pin(SPI_NPCS2_PA30_GPIO, SPI_NPCS2_PA30_FLAGS);
  400894:	f04f 5180 	mov.w	r1, #268435456	; 0x10000000
  400898:	201e      	movs	r0, #30
  40089a:	47a0      	blx	r4
	gpio_configure_pin(BOARD_ILI9225_RS_GPIO, BOARD_ILI9225_RS_FLAGS);
  40089c:	f04f 5160 	mov.w	r1, #939524096	; 0x38000000
  4008a0:	201c      	movs	r0, #28
  4008a2:	47a0      	blx	r4
	gpio_configure_pin(BOARD_ILI9225_RSTN_GPIO, BOARD_ILI9225_RSTN_FLAGS);
  4008a4:	f04f 5160 	mov.w	r1, #939524096	; 0x38000000
  4008a8:	201d      	movs	r0, #29
  4008aa:	47a0      	blx	r4
#endif

#ifdef CONF_BOARD_AAT3193
	/* Configure Backlight control pin */
	gpio_configure_pin(BOARD_AAT31XX_SET_GPIO, BOARD_AAT31XX_SET_FLAGS);
  4008ac:	f04f 5160 	mov.w	r1, #939524096	; 0x38000000
  4008b0:	204d      	movs	r0, #77	; 0x4d
  4008b2:	47a0      	blx	r4
  4008b4:	bd10      	pop	{r4, pc}
  4008b6:	bf00      	nop
  4008b8:	400e1450 	.word	0x400e1450
  4008bc:	00400e35 	.word	0x00400e35
  4008c0:	00400a59 	.word	0x00400a59
  4008c4:	28000079 	.word	0x28000079
  4008c8:	28000059 	.word	0x28000059
  4008cc:	400e0e00 	.word	0x400e0e00
  4008d0:	00400b79 	.word	0x00400b79

004008d4 <pio_set_peripheral>:
		const uint32_t ul_mask)
{
	uint32_t ul_sr;

	/* Disable interrupts on the pin(s) */
	p_pio->PIO_IDR = ul_mask;
  4008d4:	6442      	str	r2, [r0, #68]	; 0x44

#if (SAM3S || SAM3N || SAM4S || SAM4E || SAM4N || SAM4C || SAMG || SAM4CP || SAM4CM || SAMV71 || SAMV70 || SAME70 || SAMS70)
	switch (ul_type) {
  4008d6:	f1b1 5fc0 	cmp.w	r1, #402653184	; 0x18000000
  4008da:	d039      	beq.n	400950 <pio_set_peripheral+0x7c>
  4008dc:	d813      	bhi.n	400906 <pio_set_peripheral+0x32>
  4008de:	f1b1 6f00 	cmp.w	r1, #134217728	; 0x8000000
  4008e2:	d025      	beq.n	400930 <pio_set_peripheral+0x5c>
  4008e4:	f1b1 5f80 	cmp.w	r1, #268435456	; 0x10000000
  4008e8:	d10a      	bne.n	400900 <pio_set_peripheral+0x2c>

		ul_sr = p_pio->PIO_ABCDSR[1];
		p_pio->PIO_ABCDSR[1] &= (~ul_mask & ul_sr);
		break;
	case PIO_PERIPH_B:
		ul_sr = p_pio->PIO_ABCDSR[0];
  4008ea:	6f03      	ldr	r3, [r0, #112]	; 0x70
		p_pio->PIO_ABCDSR[0] = (ul_mask | ul_sr);
  4008ec:	4313      	orrs	r3, r2
  4008ee:	6703      	str	r3, [r0, #112]	; 0x70

		ul_sr = p_pio->PIO_ABCDSR[1];
  4008f0:	6f43      	ldr	r3, [r0, #116]	; 0x74
		p_pio->PIO_ABCDSR[1] &= (~ul_mask & ul_sr);
  4008f2:	6f41      	ldr	r1, [r0, #116]	; 0x74
  4008f4:	400b      	ands	r3, r1
  4008f6:	ea23 0302 	bic.w	r3, r3, r2
  4008fa:	6743      	str	r3, [r0, #116]	; 0x74
#else
#error "Unsupported device"
#endif

	/* Remove the pins from under the control of PIO */
	p_pio->PIO_PDR = ul_mask;
  4008fc:	6042      	str	r2, [r0, #4]
  4008fe:	4770      	bx	lr
	switch (ul_type) {
  400900:	2900      	cmp	r1, #0
  400902:	d1fb      	bne.n	4008fc <pio_set_peripheral+0x28>
  400904:	4770      	bx	lr
  400906:	f1b1 5f20 	cmp.w	r1, #671088640	; 0x28000000
  40090a:	d020      	beq.n	40094e <pio_set_peripheral+0x7a>
  40090c:	d809      	bhi.n	400922 <pio_set_peripheral+0x4e>
  40090e:	f1b1 5f00 	cmp.w	r1, #536870912	; 0x20000000
  400912:	d1f3      	bne.n	4008fc <pio_set_peripheral+0x28>
		ul_sr = p_pio->PIO_ABCDSR[0];
  400914:	6f03      	ldr	r3, [r0, #112]	; 0x70
		p_pio->PIO_ABCDSR[0] = (ul_mask | ul_sr);
  400916:	4313      	orrs	r3, r2
  400918:	6703      	str	r3, [r0, #112]	; 0x70
		ul_sr = p_pio->PIO_ABCDSR[1];
  40091a:	6f43      	ldr	r3, [r0, #116]	; 0x74
		p_pio->PIO_ABCDSR[1] = (ul_mask | ul_sr);
  40091c:	4313      	orrs	r3, r2
  40091e:	6743      	str	r3, [r0, #116]	; 0x74
		break;
  400920:	e7ec      	b.n	4008fc <pio_set_peripheral+0x28>
	switch (ul_type) {
  400922:	f1b1 5f40 	cmp.w	r1, #805306368	; 0x30000000
  400926:	d012      	beq.n	40094e <pio_set_peripheral+0x7a>
  400928:	f1b1 5f60 	cmp.w	r1, #939524096	; 0x38000000
  40092c:	d00f      	beq.n	40094e <pio_set_peripheral+0x7a>
  40092e:	e7e5      	b.n	4008fc <pio_set_peripheral+0x28>
{
  400930:	b410      	push	{r4}
		ul_sr = p_pio->PIO_ABCDSR[0];
  400932:	6f01      	ldr	r1, [r0, #112]	; 0x70
		p_pio->PIO_ABCDSR[0] &= (~ul_mask & ul_sr);
  400934:	6f04      	ldr	r4, [r0, #112]	; 0x70
  400936:	43d3      	mvns	r3, r2
  400938:	4021      	ands	r1, r4
  40093a:	461c      	mov	r4, r3
  40093c:	4019      	ands	r1, r3
  40093e:	6701      	str	r1, [r0, #112]	; 0x70
		ul_sr = p_pio->PIO_ABCDSR[1];
  400940:	6f43      	ldr	r3, [r0, #116]	; 0x74
		p_pio->PIO_ABCDSR[1] &= (~ul_mask & ul_sr);
  400942:	6f41      	ldr	r1, [r0, #116]	; 0x74
  400944:	400b      	ands	r3, r1
  400946:	4023      	ands	r3, r4
  400948:	6743      	str	r3, [r0, #116]	; 0x74
	p_pio->PIO_PDR = ul_mask;
  40094a:	6042      	str	r2, [r0, #4]
}
  40094c:	bc10      	pop	{r4}
  40094e:	4770      	bx	lr
		ul_sr = p_pio->PIO_ABCDSR[0];
  400950:	6f03      	ldr	r3, [r0, #112]	; 0x70
		p_pio->PIO_ABCDSR[0] &= (~ul_mask & ul_sr);
  400952:	6f01      	ldr	r1, [r0, #112]	; 0x70
  400954:	400b      	ands	r3, r1
  400956:	ea23 0302 	bic.w	r3, r3, r2
  40095a:	6703      	str	r3, [r0, #112]	; 0x70
		ul_sr = p_pio->PIO_ABCDSR[1];
  40095c:	6f43      	ldr	r3, [r0, #116]	; 0x74
		p_pio->PIO_ABCDSR[1] = (ul_mask | ul_sr);
  40095e:	4313      	orrs	r3, r2
  400960:	6743      	str	r3, [r0, #116]	; 0x74
		break;
  400962:	e7cb      	b.n	4008fc <pio_set_peripheral+0x28>

00400964 <pio_set_input>:
 * \param p_pio Pointer to a PIO instance.
 * \param ul_mask Interrupt sources bit map.
 */
void pio_disable_interrupt(Pio *p_pio, const uint32_t ul_mask)
{
	p_pio->PIO_IDR = ul_mask;
  400964:	6441      	str	r1, [r0, #68]	; 0x44
	if (ul_pull_up_enable) {
  400966:	f012 0f01 	tst.w	r2, #1
		p_pio->PIO_PUER = ul_mask;
  40096a:	bf14      	ite	ne
  40096c:	6641      	strne	r1, [r0, #100]	; 0x64
		p_pio->PIO_PUDR = ul_mask;
  40096e:	6601      	streq	r1, [r0, #96]	; 0x60
	if (ul_attribute & (PIO_DEGLITCH | PIO_DEBOUNCE)) {
  400970:	f012 0f0a 	tst.w	r2, #10
		p_pio->PIO_IFER = ul_mask;
  400974:	bf14      	ite	ne
  400976:	6201      	strne	r1, [r0, #32]
		p_pio->PIO_IFDR = ul_mask;
  400978:	6241      	streq	r1, [r0, #36]	; 0x24
	if (ul_attribute & PIO_DEGLITCH) {
  40097a:	f012 0f02 	tst.w	r2, #2
  40097e:	d107      	bne.n	400990 <pio_set_input+0x2c>
		if (ul_attribute & PIO_DEBOUNCE) {
  400980:	f012 0f08 	tst.w	r2, #8
			p_pio->PIO_IFSCER = ul_mask;
  400984:	bf18      	it	ne
  400986:	f8c0 1084 	strne.w	r1, [r0, #132]	; 0x84
	p_pio->PIO_ODR = ul_mask;
  40098a:	6141      	str	r1, [r0, #20]
	p_pio->PIO_PER = ul_mask;
  40098c:	6001      	str	r1, [r0, #0]
  40098e:	4770      	bx	lr
		p_pio->PIO_IFSCDR = ul_mask;
  400990:	f8c0 1080 	str.w	r1, [r0, #128]	; 0x80
  400994:	e7f9      	b.n	40098a <pio_set_input+0x26>

00400996 <pio_set_output>:
{
  400996:	b410      	push	{r4}
  400998:	9c01      	ldr	r4, [sp, #4]
	p_pio->PIO_IDR = ul_mask;
  40099a:	6441      	str	r1, [r0, #68]	; 0x44
	if (ul_pull_up_enable) {
  40099c:	b944      	cbnz	r4, 4009b0 <pio_set_output+0x1a>
		p_pio->PIO_PUDR = ul_mask;
  40099e:	6601      	str	r1, [r0, #96]	; 0x60
	if (ul_multidrive_enable) {
  4009a0:	b143      	cbz	r3, 4009b4 <pio_set_output+0x1e>
		p_pio->PIO_MDER = ul_mask;
  4009a2:	6501      	str	r1, [r0, #80]	; 0x50
	if (ul_default_level) {
  4009a4:	b942      	cbnz	r2, 4009b8 <pio_set_output+0x22>
		p_pio->PIO_CODR = ul_mask;
  4009a6:	6341      	str	r1, [r0, #52]	; 0x34
	p_pio->PIO_OER = ul_mask;
  4009a8:	6101      	str	r1, [r0, #16]
	p_pio->PIO_PER = ul_mask;
  4009aa:	6001      	str	r1, [r0, #0]
}
  4009ac:	bc10      	pop	{r4}
  4009ae:	4770      	bx	lr
		p_pio->PIO_PUER = ul_mask;
  4009b0:	6641      	str	r1, [r0, #100]	; 0x64
  4009b2:	e7f5      	b.n	4009a0 <pio_set_output+0xa>
		p_pio->PIO_MDDR = ul_mask;
  4009b4:	6541      	str	r1, [r0, #84]	; 0x54
  4009b6:	e7f5      	b.n	4009a4 <pio_set_output+0xe>
		p_pio->PIO_SODR = ul_mask;
  4009b8:	6301      	str	r1, [r0, #48]	; 0x30
  4009ba:	e7f5      	b.n	4009a8 <pio_set_output+0x12>

004009bc <pio_pull_down>:
	if (ul_pull_down_enable) {
  4009bc:	b912      	cbnz	r2, 4009c4 <pio_pull_down+0x8>
		p_pio->PIO_PPDDR = ul_mask;
  4009be:	f8c0 1090 	str.w	r1, [r0, #144]	; 0x90
  4009c2:	4770      	bx	lr
		p_pio->PIO_PPDER = ul_mask;
  4009c4:	f8c0 1094 	str.w	r1, [r0, #148]	; 0x94
  4009c8:	4770      	bx	lr

004009ca <pio_configure_interrupt>:
	if (ul_attr & PIO_IT_AIME) {
  4009ca:	f012 0f10 	tst.w	r2, #16
  4009ce:	d010      	beq.n	4009f2 <pio_configure_interrupt+0x28>
		p_pio->PIO_AIMER = ul_mask;
  4009d0:	f8c0 10b0 	str.w	r1, [r0, #176]	; 0xb0
		if (ul_attr & PIO_IT_RE_OR_HL) {
  4009d4:	f012 0f20 	tst.w	r2, #32
			p_pio->PIO_REHLSR = ul_mask;
  4009d8:	bf14      	ite	ne
  4009da:	f8c0 10d4 	strne.w	r1, [r0, #212]	; 0xd4
			p_pio->PIO_FELLSR = ul_mask;
  4009de:	f8c0 10d0 	streq.w	r1, [r0, #208]	; 0xd0
		if (ul_attr & PIO_IT_EDGE) {
  4009e2:	f012 0f40 	tst.w	r2, #64	; 0x40
			p_pio->PIO_ESR = ul_mask;
  4009e6:	bf14      	ite	ne
  4009e8:	f8c0 10c0 	strne.w	r1, [r0, #192]	; 0xc0
			p_pio->PIO_LSR = ul_mask;
  4009ec:	f8c0 10c4 	streq.w	r1, [r0, #196]	; 0xc4
  4009f0:	4770      	bx	lr
		p_pio->PIO_AIMDR = ul_mask;
  4009f2:	f8c0 10b4 	str.w	r1, [r0, #180]	; 0xb4
  4009f6:	4770      	bx	lr

004009f8 <pio_enable_interrupt>:
	p_pio->PIO_IER = ul_mask;
  4009f8:	6401      	str	r1, [r0, #64]	; 0x40
  4009fa:	4770      	bx	lr

004009fc <pio_get_interrupt_status>:
 *
 * \return The interrupt status value.
 */
uint32_t pio_get_interrupt_status(const Pio *p_pio)
{
	return p_pio->PIO_ISR;
  4009fc:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
}
  4009fe:	4770      	bx	lr

00400a00 <pio_get_interrupt_mask>:
 *
 * \return The interrupt mask value.
 */
uint32_t pio_get_interrupt_mask(const Pio *p_pio)
{
	return p_pio->PIO_IMR;
  400a00:	6c80      	ldr	r0, [r0, #72]	; 0x48
}
  400a02:	4770      	bx	lr

00400a04 <pio_set_pin_high>:
		p_pio = PIOC;
	} else {
		p_pio = (Pio *)((uint32_t)PIOA + (PIO_DELTA * (ul_pin >> 5)));
	}
#else
	p_pio = (Pio *)((uint32_t)PIOA + (PIO_DELTA * (ul_pin >> 5)));
  400a04:	0943      	lsrs	r3, r0, #5
  400a06:	f503 1300 	add.w	r3, r3, #2097152	; 0x200000
  400a0a:	f203 7307 	addw	r3, r3, #1799	; 0x707
  400a0e:	025b      	lsls	r3, r3, #9
	p_pio->PIO_SODR = 1 << (ul_pin & 0x1F);
  400a10:	f000 001f 	and.w	r0, r0, #31
  400a14:	2201      	movs	r2, #1
  400a16:	fa02 f000 	lsl.w	r0, r2, r0
  400a1a:	6318      	str	r0, [r3, #48]	; 0x30
  400a1c:	4770      	bx	lr

00400a1e <pio_set_pin_low>:
	p_pio = (Pio *)((uint32_t)PIOA + (PIO_DELTA * (ul_pin >> 5)));
  400a1e:	0943      	lsrs	r3, r0, #5
  400a20:	f503 1300 	add.w	r3, r3, #2097152	; 0x200000
  400a24:	f203 7307 	addw	r3, r3, #1799	; 0x707
  400a28:	025b      	lsls	r3, r3, #9
	p_pio->PIO_CODR = 1 << (ul_pin & 0x1F);
  400a2a:	f000 001f 	and.w	r0, r0, #31
  400a2e:	2201      	movs	r2, #1
  400a30:	fa02 f000 	lsl.w	r0, r2, r0
  400a34:	6358      	str	r0, [r3, #52]	; 0x34
  400a36:	4770      	bx	lr

00400a38 <pio_toggle_pin>:
	p_pio = (Pio *)((uint32_t)PIOA + (PIO_DELTA * (ul_pin >> 5)));
  400a38:	0943      	lsrs	r3, r0, #5
  400a3a:	f503 1300 	add.w	r3, r3, #2097152	; 0x200000
  400a3e:	f203 7307 	addw	r3, r3, #1799	; 0x707
  400a42:	025b      	lsls	r3, r3, #9
	if (p_pio->PIO_ODSR & (1 << (ul_pin & 0x1F))) {
  400a44:	6b99      	ldr	r1, [r3, #56]	; 0x38
  400a46:	f000 021f 	and.w	r2, r0, #31
  400a4a:	2001      	movs	r0, #1
  400a4c:	4090      	lsls	r0, r2
  400a4e:	4201      	tst	r1, r0
		p_pio->PIO_CODR = 1 << (ul_pin & 0x1F);
  400a50:	bf14      	ite	ne
  400a52:	6358      	strne	r0, [r3, #52]	; 0x34
		p_pio->PIO_SODR = 1 << (ul_pin & 0x1F);
  400a54:	6318      	streq	r0, [r3, #48]	; 0x30
  400a56:	4770      	bx	lr

00400a58 <pio_configure_pin>:
{
  400a58:	b570      	push	{r4, r5, r6, lr}
  400a5a:	b082      	sub	sp, #8
  400a5c:	460d      	mov	r5, r1
	p_pio = (Pio *)((uint32_t)PIOA + (PIO_DELTA * (ul_pin >> 5)));
  400a5e:	0943      	lsrs	r3, r0, #5
  400a60:	f503 1300 	add.w	r3, r3, #2097152	; 0x200000
  400a64:	f203 7307 	addw	r3, r3, #1799	; 0x707
  400a68:	025c      	lsls	r4, r3, #9
	switch (ul_flags & PIO_TYPE_Msk) {
  400a6a:	f001 43f0 	and.w	r3, r1, #2013265920	; 0x78000000
  400a6e:	f1b3 5f00 	cmp.w	r3, #536870912	; 0x20000000
  400a72:	d053      	beq.n	400b1c <pio_configure_pin+0xc4>
  400a74:	d80a      	bhi.n	400a8c <pio_configure_pin+0x34>
  400a76:	f1b3 5f80 	cmp.w	r3, #268435456	; 0x10000000
  400a7a:	d02d      	beq.n	400ad8 <pio_configure_pin+0x80>
  400a7c:	f1b3 5fc0 	cmp.w	r3, #402653184	; 0x18000000
  400a80:	d03b      	beq.n	400afa <pio_configure_pin+0xa2>
  400a82:	f1b3 6f00 	cmp.w	r3, #134217728	; 0x8000000
  400a86:	d015      	beq.n	400ab4 <pio_configure_pin+0x5c>
		return 0;
  400a88:	2000      	movs	r0, #0
  400a8a:	e023      	b.n	400ad4 <pio_configure_pin+0x7c>
	switch (ul_flags & PIO_TYPE_Msk) {
  400a8c:	f1b3 5f40 	cmp.w	r3, #805306368	; 0x30000000
  400a90:	d055      	beq.n	400b3e <pio_configure_pin+0xe6>
  400a92:	f1b3 5f60 	cmp.w	r3, #939524096	; 0x38000000
  400a96:	d052      	beq.n	400b3e <pio_configure_pin+0xe6>
  400a98:	f1b3 5f20 	cmp.w	r3, #671088640	; 0x28000000
  400a9c:	d1f4      	bne.n	400a88 <pio_configure_pin+0x30>
		pio_set_input(p_pio, (1 << (ul_pin & 0x1F)), ul_flags);
  400a9e:	f000 011f 	and.w	r1, r0, #31
  400aa2:	2601      	movs	r6, #1
  400aa4:	462a      	mov	r2, r5
  400aa6:	fa06 f101 	lsl.w	r1, r6, r1
  400aaa:	4620      	mov	r0, r4
  400aac:	4b2f      	ldr	r3, [pc, #188]	; (400b6c <pio_configure_pin+0x114>)
  400aae:	4798      	blx	r3
	return 1;
  400ab0:	4630      	mov	r0, r6
		break;
  400ab2:	e00f      	b.n	400ad4 <pio_configure_pin+0x7c>
		pio_set_peripheral(p_pio, PIO_PERIPH_A, (1 << (ul_pin & 0x1F)));
  400ab4:	f000 001f 	and.w	r0, r0, #31
  400ab8:	2601      	movs	r6, #1
  400aba:	4086      	lsls	r6, r0
  400abc:	4632      	mov	r2, r6
  400abe:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
  400ac2:	4620      	mov	r0, r4
  400ac4:	4b2a      	ldr	r3, [pc, #168]	; (400b70 <pio_configure_pin+0x118>)
  400ac6:	4798      	blx	r3
	if (ul_pull_up_enable) {
  400ac8:	f015 0f01 	tst.w	r5, #1
		p_pio->PIO_PUER = ul_mask;
  400acc:	bf14      	ite	ne
  400ace:	6666      	strne	r6, [r4, #100]	; 0x64
		p_pio->PIO_PUDR = ul_mask;
  400ad0:	6626      	streq	r6, [r4, #96]	; 0x60
	return 1;
  400ad2:	2001      	movs	r0, #1
}
  400ad4:	b002      	add	sp, #8
  400ad6:	bd70      	pop	{r4, r5, r6, pc}
		pio_set_peripheral(p_pio, PIO_PERIPH_B, (1 << (ul_pin & 0x1F)));
  400ad8:	f000 001f 	and.w	r0, r0, #31
  400adc:	2601      	movs	r6, #1
  400ade:	4086      	lsls	r6, r0
  400ae0:	4632      	mov	r2, r6
  400ae2:	f04f 5180 	mov.w	r1, #268435456	; 0x10000000
  400ae6:	4620      	mov	r0, r4
  400ae8:	4b21      	ldr	r3, [pc, #132]	; (400b70 <pio_configure_pin+0x118>)
  400aea:	4798      	blx	r3
	if (ul_pull_up_enable) {
  400aec:	f015 0f01 	tst.w	r5, #1
		p_pio->PIO_PUER = ul_mask;
  400af0:	bf14      	ite	ne
  400af2:	6666      	strne	r6, [r4, #100]	; 0x64
		p_pio->PIO_PUDR = ul_mask;
  400af4:	6626      	streq	r6, [r4, #96]	; 0x60
	return 1;
  400af6:	2001      	movs	r0, #1
  400af8:	e7ec      	b.n	400ad4 <pio_configure_pin+0x7c>
		pio_set_peripheral(p_pio, PIO_PERIPH_C, (1 << (ul_pin & 0x1F)));
  400afa:	f000 001f 	and.w	r0, r0, #31
  400afe:	2601      	movs	r6, #1
  400b00:	4086      	lsls	r6, r0
  400b02:	4632      	mov	r2, r6
  400b04:	f04f 51c0 	mov.w	r1, #402653184	; 0x18000000
  400b08:	4620      	mov	r0, r4
  400b0a:	4b19      	ldr	r3, [pc, #100]	; (400b70 <pio_configure_pin+0x118>)
  400b0c:	4798      	blx	r3
	if (ul_pull_up_enable) {
  400b0e:	f015 0f01 	tst.w	r5, #1
		p_pio->PIO_PUER = ul_mask;
  400b12:	bf14      	ite	ne
  400b14:	6666      	strne	r6, [r4, #100]	; 0x64
		p_pio->PIO_PUDR = ul_mask;
  400b16:	6626      	streq	r6, [r4, #96]	; 0x60
	return 1;
  400b18:	2001      	movs	r0, #1
  400b1a:	e7db      	b.n	400ad4 <pio_configure_pin+0x7c>
		pio_set_peripheral(p_pio, PIO_PERIPH_D, (1 << (ul_pin & 0x1F)));
  400b1c:	f000 001f 	and.w	r0, r0, #31
  400b20:	2601      	movs	r6, #1
  400b22:	4086      	lsls	r6, r0
  400b24:	4632      	mov	r2, r6
  400b26:	f04f 5100 	mov.w	r1, #536870912	; 0x20000000
  400b2a:	4620      	mov	r0, r4
  400b2c:	4b10      	ldr	r3, [pc, #64]	; (400b70 <pio_configure_pin+0x118>)
  400b2e:	4798      	blx	r3
	if (ul_pull_up_enable) {
  400b30:	f015 0f01 	tst.w	r5, #1
		p_pio->PIO_PUER = ul_mask;
  400b34:	bf14      	ite	ne
  400b36:	6666      	strne	r6, [r4, #100]	; 0x64
		p_pio->PIO_PUDR = ul_mask;
  400b38:	6626      	streq	r6, [r4, #96]	; 0x60
	return 1;
  400b3a:	2001      	movs	r0, #1
  400b3c:	e7ca      	b.n	400ad4 <pio_configure_pin+0x7c>
				((ul_flags & PIO_TYPE_PIO_OUTPUT_1)
  400b3e:	f005 5260 	and.w	r2, r5, #939524096	; 0x38000000
		pio_set_output(p_pio, (1 << (ul_pin & 0x1F)),
  400b42:	f000 011f 	and.w	r1, r0, #31
  400b46:	2601      	movs	r6, #1
  400b48:	ea05 0306 	and.w	r3, r5, r6
  400b4c:	9300      	str	r3, [sp, #0]
  400b4e:	f3c5 0380 	ubfx	r3, r5, #2, #1
  400b52:	f1b2 5f60 	cmp.w	r2, #939524096	; 0x38000000
  400b56:	bf14      	ite	ne
  400b58:	2200      	movne	r2, #0
  400b5a:	2201      	moveq	r2, #1
  400b5c:	fa06 f101 	lsl.w	r1, r6, r1
  400b60:	4620      	mov	r0, r4
  400b62:	4c04      	ldr	r4, [pc, #16]	; (400b74 <pio_configure_pin+0x11c>)
  400b64:	47a0      	blx	r4
	return 1;
  400b66:	4630      	mov	r0, r6
		break;
  400b68:	e7b4      	b.n	400ad4 <pio_configure_pin+0x7c>
  400b6a:	bf00      	nop
  400b6c:	00400965 	.word	0x00400965
  400b70:	004008d5 	.word	0x004008d5
  400b74:	00400997 	.word	0x00400997

00400b78 <pio_configure_pin_group>:
{
  400b78:	b570      	push	{r4, r5, r6, lr}
  400b7a:	b082      	sub	sp, #8
  400b7c:	4605      	mov	r5, r0
  400b7e:	460e      	mov	r6, r1
  400b80:	4614      	mov	r4, r2
	switch (ul_flags & PIO_TYPE_Msk) {
  400b82:	f002 43f0 	and.w	r3, r2, #2013265920	; 0x78000000
  400b86:	f1b3 5f00 	cmp.w	r3, #536870912	; 0x20000000
  400b8a:	d03d      	beq.n	400c08 <pio_configure_pin_group+0x90>
  400b8c:	d80a      	bhi.n	400ba4 <pio_configure_pin_group+0x2c>
  400b8e:	f1b3 5f80 	cmp.w	r3, #268435456	; 0x10000000
  400b92:	d021      	beq.n	400bd8 <pio_configure_pin_group+0x60>
  400b94:	f1b3 5fc0 	cmp.w	r3, #402653184	; 0x18000000
  400b98:	d02a      	beq.n	400bf0 <pio_configure_pin_group+0x78>
  400b9a:	f1b3 6f00 	cmp.w	r3, #134217728	; 0x8000000
  400b9e:	d00e      	beq.n	400bbe <pio_configure_pin_group+0x46>
		return 0;
  400ba0:	2000      	movs	r0, #0
  400ba2:	e017      	b.n	400bd4 <pio_configure_pin_group+0x5c>
	switch (ul_flags & PIO_TYPE_Msk) {
  400ba4:	f1b3 5f40 	cmp.w	r3, #805306368	; 0x30000000
  400ba8:	d03a      	beq.n	400c20 <pio_configure_pin_group+0xa8>
  400baa:	f1b3 5f60 	cmp.w	r3, #939524096	; 0x38000000
  400bae:	d037      	beq.n	400c20 <pio_configure_pin_group+0xa8>
  400bb0:	f1b3 5f20 	cmp.w	r3, #671088640	; 0x28000000
  400bb4:	d1f4      	bne.n	400ba0 <pio_configure_pin_group+0x28>
		pio_set_input(p_pio, ul_mask, ul_flags);
  400bb6:	4b23      	ldr	r3, [pc, #140]	; (400c44 <pio_configure_pin_group+0xcc>)
  400bb8:	4798      	blx	r3
	return 1;
  400bba:	2001      	movs	r0, #1
		break;
  400bbc:	e00a      	b.n	400bd4 <pio_configure_pin_group+0x5c>
		pio_set_peripheral(p_pio, PIO_PERIPH_A, ul_mask);
  400bbe:	460a      	mov	r2, r1
  400bc0:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
  400bc4:	4b20      	ldr	r3, [pc, #128]	; (400c48 <pio_configure_pin_group+0xd0>)
  400bc6:	4798      	blx	r3
	if (ul_pull_up_enable) {
  400bc8:	f014 0f01 	tst.w	r4, #1
		p_pio->PIO_PUER = ul_mask;
  400bcc:	bf14      	ite	ne
  400bce:	666e      	strne	r6, [r5, #100]	; 0x64
		p_pio->PIO_PUDR = ul_mask;
  400bd0:	662e      	streq	r6, [r5, #96]	; 0x60
	return 1;
  400bd2:	2001      	movs	r0, #1
}
  400bd4:	b002      	add	sp, #8
  400bd6:	bd70      	pop	{r4, r5, r6, pc}
		pio_set_peripheral(p_pio, PIO_PERIPH_B, ul_mask);
  400bd8:	460a      	mov	r2, r1
  400bda:	f04f 5180 	mov.w	r1, #268435456	; 0x10000000
  400bde:	4b1a      	ldr	r3, [pc, #104]	; (400c48 <pio_configure_pin_group+0xd0>)
  400be0:	4798      	blx	r3
	if (ul_pull_up_enable) {
  400be2:	f014 0f01 	tst.w	r4, #1
		p_pio->PIO_PUER = ul_mask;
  400be6:	bf14      	ite	ne
  400be8:	666e      	strne	r6, [r5, #100]	; 0x64
		p_pio->PIO_PUDR = ul_mask;
  400bea:	662e      	streq	r6, [r5, #96]	; 0x60
	return 1;
  400bec:	2001      	movs	r0, #1
  400bee:	e7f1      	b.n	400bd4 <pio_configure_pin_group+0x5c>
		pio_set_peripheral(p_pio, PIO_PERIPH_C, ul_mask);
  400bf0:	460a      	mov	r2, r1
  400bf2:	f04f 51c0 	mov.w	r1, #402653184	; 0x18000000
  400bf6:	4b14      	ldr	r3, [pc, #80]	; (400c48 <pio_configure_pin_group+0xd0>)
  400bf8:	4798      	blx	r3
	if (ul_pull_up_enable) {
  400bfa:	f014 0f01 	tst.w	r4, #1
		p_pio->PIO_PUER = ul_mask;
  400bfe:	bf14      	ite	ne
  400c00:	666e      	strne	r6, [r5, #100]	; 0x64
		p_pio->PIO_PUDR = ul_mask;
  400c02:	662e      	streq	r6, [r5, #96]	; 0x60
	return 1;
  400c04:	2001      	movs	r0, #1
  400c06:	e7e5      	b.n	400bd4 <pio_configure_pin_group+0x5c>
		pio_set_peripheral(p_pio, PIO_PERIPH_D, ul_mask);
  400c08:	460a      	mov	r2, r1
  400c0a:	f04f 5100 	mov.w	r1, #536870912	; 0x20000000
  400c0e:	4b0e      	ldr	r3, [pc, #56]	; (400c48 <pio_configure_pin_group+0xd0>)
  400c10:	4798      	blx	r3
	if (ul_pull_up_enable) {
  400c12:	f014 0f01 	tst.w	r4, #1
		p_pio->PIO_PUER = ul_mask;
  400c16:	bf14      	ite	ne
  400c18:	666e      	strne	r6, [r5, #100]	; 0x64
		p_pio->PIO_PUDR = ul_mask;
  400c1a:	662e      	streq	r6, [r5, #96]	; 0x60
	return 1;
  400c1c:	2001      	movs	r0, #1
  400c1e:	e7d9      	b.n	400bd4 <pio_configure_pin_group+0x5c>
				((ul_flags & PIO_TYPE_PIO_OUTPUT_1)
  400c20:	f004 5260 	and.w	r2, r4, #939524096	; 0x38000000
		pio_set_output(p_pio, ul_mask,
  400c24:	f004 0301 	and.w	r3, r4, #1
  400c28:	9300      	str	r3, [sp, #0]
  400c2a:	f3c4 0380 	ubfx	r3, r4, #2, #1
  400c2e:	f1b2 5f60 	cmp.w	r2, #939524096	; 0x38000000
  400c32:	bf14      	ite	ne
  400c34:	2200      	movne	r2, #0
  400c36:	2201      	moveq	r2, #1
  400c38:	4631      	mov	r1, r6
  400c3a:	4628      	mov	r0, r5
  400c3c:	4c03      	ldr	r4, [pc, #12]	; (400c4c <pio_configure_pin_group+0xd4>)
  400c3e:	47a0      	blx	r4
	return 1;
  400c40:	2001      	movs	r0, #1
		break;
  400c42:	e7c7      	b.n	400bd4 <pio_configure_pin_group+0x5c>
  400c44:	00400965 	.word	0x00400965
  400c48:	004008d5 	.word	0x004008d5
  400c4c:	00400997 	.word	0x00400997

00400c50 <pio_handler_process>:
 *
 * \param p_pio PIO controller base address.
 * \param ul_id PIO controller ID.
 */
void pio_handler_process(Pio *p_pio, uint32_t ul_id)
{
  400c50:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  400c54:	4604      	mov	r4, r0
  400c56:	4688      	mov	r8, r1
	uint32_t status;
	uint32_t i;

	/* Read PIO controller status */
	status = pio_get_interrupt_status(p_pio);
  400c58:	4b0e      	ldr	r3, [pc, #56]	; (400c94 <pio_handler_process+0x44>)
  400c5a:	4798      	blx	r3
  400c5c:	4605      	mov	r5, r0
	status &= pio_get_interrupt_mask(p_pio);
  400c5e:	4620      	mov	r0, r4
  400c60:	4b0d      	ldr	r3, [pc, #52]	; (400c98 <pio_handler_process+0x48>)
  400c62:	4798      	blx	r3

	/* Check pending events */
	if (status != 0) {
  400c64:	4005      	ands	r5, r0
  400c66:	d013      	beq.n	400c90 <pio_handler_process+0x40>
  400c68:	4c0c      	ldr	r4, [pc, #48]	; (400c9c <pio_handler_process+0x4c>)
  400c6a:	f104 0660 	add.w	r6, r4, #96	; 0x60
  400c6e:	e003      	b.n	400c78 <pio_handler_process+0x28>
							gs_interrupt_sources[i].mask);
					status &= ~(gs_interrupt_sources[i].mask);
				}
			}
			i++;
			if (i >= MAX_INTERRUPT_SOURCES) {
  400c70:	42b4      	cmp	r4, r6
  400c72:	d00d      	beq.n	400c90 <pio_handler_process+0x40>
  400c74:	3410      	adds	r4, #16
		while (status != 0) {
  400c76:	b15d      	cbz	r5, 400c90 <pio_handler_process+0x40>
			if (gs_interrupt_sources[i].id == ul_id) {
  400c78:	6820      	ldr	r0, [r4, #0]
  400c7a:	4540      	cmp	r0, r8
  400c7c:	d1f8      	bne.n	400c70 <pio_handler_process+0x20>
				if ((status & gs_interrupt_sources[i].mask) != 0) {
  400c7e:	6861      	ldr	r1, [r4, #4]
  400c80:	4229      	tst	r1, r5
  400c82:	d0f5      	beq.n	400c70 <pio_handler_process+0x20>
					gs_interrupt_sources[i].handler(gs_interrupt_sources[i].id,
  400c84:	68e3      	ldr	r3, [r4, #12]
  400c86:	4798      	blx	r3
					status &= ~(gs_interrupt_sources[i].mask);
  400c88:	6863      	ldr	r3, [r4, #4]
  400c8a:	ea25 0503 	bic.w	r5, r5, r3
  400c8e:	e7ef      	b.n	400c70 <pio_handler_process+0x20>
  400c90:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  400c94:	004009fd 	.word	0x004009fd
  400c98:	00400a01 	.word	0x00400a01
  400c9c:	20000ad8 	.word	0x20000ad8

00400ca0 <pio_handler_set>:
 *
 * \return 0 if successful, 1 if the maximum number of sources has been defined.
 */
uint32_t pio_handler_set(Pio *p_pio, uint32_t ul_id, uint32_t ul_mask,
		uint32_t ul_attr, void (*p_handler) (uint32_t, uint32_t))
{
  400ca0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    uint8_t i;
	struct s_interrupt_source *pSource;

	if (gs_ul_nb_sources >= MAX_INTERRUPT_SOURCES)
  400ca2:	4c18      	ldr	r4, [pc, #96]	; (400d04 <pio_handler_set+0x64>)
  400ca4:	6826      	ldr	r6, [r4, #0]
  400ca6:	2e06      	cmp	r6, #6
  400ca8:	d829      	bhi.n	400cfe <pio_handler_set+0x5e>
  400caa:	f04f 0c00 	mov.w	ip, #0
  400cae:	4664      	mov	r4, ip
		return 1;

    /* Check interrupt for this pin, if already defined, redefine it. */
	for (i = 0; i <= gs_ul_nb_sources; i++) {
		pSource = &(gs_interrupt_sources[i]);
		if (pSource->id == ul_id && pSource->mask == ul_mask) {
  400cb0:	4f15      	ldr	r7, [pc, #84]	; (400d08 <pio_handler_set+0x68>)
  400cb2:	e004      	b.n	400cbe <pio_handler_set+0x1e>
	for (i = 0; i <= gs_ul_nb_sources; i++) {
  400cb4:	3401      	adds	r4, #1
  400cb6:	b2e4      	uxtb	r4, r4
  400cb8:	46a4      	mov	ip, r4
  400cba:	42a6      	cmp	r6, r4
  400cbc:	d309      	bcc.n	400cd2 <pio_handler_set+0x32>
		pSource = &(gs_interrupt_sources[i]);
  400cbe:	46a6      	mov	lr, r4
		if (pSource->id == ul_id && pSource->mask == ul_mask) {
  400cc0:	0125      	lsls	r5, r4, #4
  400cc2:	597d      	ldr	r5, [r7, r5]
  400cc4:	428d      	cmp	r5, r1
  400cc6:	d1f5      	bne.n	400cb4 <pio_handler_set+0x14>
  400cc8:	eb07 1504 	add.w	r5, r7, r4, lsl #4
  400ccc:	686d      	ldr	r5, [r5, #4]
  400cce:	4295      	cmp	r5, r2
  400cd0:	d1f0      	bne.n	400cb4 <pio_handler_set+0x14>
			break;
		}
	}

	/* Define new source */
	pSource->id = ul_id;
  400cd2:	4d0d      	ldr	r5, [pc, #52]	; (400d08 <pio_handler_set+0x68>)
  400cd4:	ea4f 1e0e 	mov.w	lr, lr, lsl #4
  400cd8:	eb05 040e 	add.w	r4, r5, lr
  400cdc:	f845 100e 	str.w	r1, [r5, lr]
	pSource->mask = ul_mask;
  400ce0:	6062      	str	r2, [r4, #4]
	pSource->attr = ul_attr;
  400ce2:	60a3      	str	r3, [r4, #8]
	pSource->handler = p_handler;
  400ce4:	9906      	ldr	r1, [sp, #24]
  400ce6:	60e1      	str	r1, [r4, #12]
	if (i == gs_ul_nb_sources + 1) {
  400ce8:	3601      	adds	r6, #1
  400cea:	4566      	cmp	r6, ip
		gs_ul_nb_sources++;
  400cec:	bf04      	itt	eq
  400cee:	4905      	ldreq	r1, [pc, #20]	; (400d04 <pio_handler_set+0x64>)
  400cf0:	600e      	streq	r6, [r1, #0]
  400cf2:	4611      	mov	r1, r2
	}

	/* Configure interrupt mode */
	pio_configure_interrupt(p_pio, ul_mask, ul_attr);
  400cf4:	461a      	mov	r2, r3
  400cf6:	4b05      	ldr	r3, [pc, #20]	; (400d0c <pio_handler_set+0x6c>)
  400cf8:	4798      	blx	r3

	return 0;
  400cfa:	2000      	movs	r0, #0
  400cfc:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
		return 1;
  400cfe:	2001      	movs	r0, #1
}
  400d00:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  400d02:	bf00      	nop
  400d04:	20000b48 	.word	0x20000b48
  400d08:	20000ad8 	.word	0x20000ad8
  400d0c:	004009cb 	.word	0x004009cb

00400d10 <PIOA_Handler>:
/**
 * \brief Parallel IO Controller A interrupt handler.
 * Redefined PIOA interrupt handler for NVIC interrupt table.
 */
void PIOA_Handler(void)
{
  400d10:	b508      	push	{r3, lr}
	pio_handler_process(PIOA, ID_PIOA);
  400d12:	210b      	movs	r1, #11
  400d14:	4801      	ldr	r0, [pc, #4]	; (400d1c <PIOA_Handler+0xc>)
  400d16:	4b02      	ldr	r3, [pc, #8]	; (400d20 <PIOA_Handler+0x10>)
  400d18:	4798      	blx	r3
  400d1a:	bd08      	pop	{r3, pc}
  400d1c:	400e0e00 	.word	0x400e0e00
  400d20:	00400c51 	.word	0x00400c51

00400d24 <PIOB_Handler>:
/**
 * \brief Parallel IO Controller B interrupt handler
 * Redefined PIOB interrupt handler for NVIC interrupt table.
 */
void PIOB_Handler(void)
{
  400d24:	b508      	push	{r3, lr}
    pio_handler_process(PIOB, ID_PIOB);
  400d26:	210c      	movs	r1, #12
  400d28:	4801      	ldr	r0, [pc, #4]	; (400d30 <PIOB_Handler+0xc>)
  400d2a:	4b02      	ldr	r3, [pc, #8]	; (400d34 <PIOB_Handler+0x10>)
  400d2c:	4798      	blx	r3
  400d2e:	bd08      	pop	{r3, pc}
  400d30:	400e1000 	.word	0x400e1000
  400d34:	00400c51 	.word	0x00400c51

00400d38 <PIOC_Handler>:
/**
 * \brief Parallel IO Controller C interrupt handler.
 * Redefined PIOC interrupt handler for NVIC interrupt table.
 */
void PIOC_Handler(void)
{
  400d38:	b508      	push	{r3, lr}
	pio_handler_process(PIOC, ID_PIOC);
  400d3a:	210d      	movs	r1, #13
  400d3c:	4801      	ldr	r0, [pc, #4]	; (400d44 <PIOC_Handler+0xc>)
  400d3e:	4b02      	ldr	r3, [pc, #8]	; (400d48 <PIOC_Handler+0x10>)
  400d40:	4798      	blx	r3
  400d42:	bd08      	pop	{r3, pc}
  400d44:	400e1200 	.word	0x400e1200
  400d48:	00400c51 	.word	0x00400c51

00400d4c <pmc_switch_mck_to_pllack>:
 */
uint32_t pmc_switch_mck_to_pllack(uint32_t ul_pres)
{
	uint32_t ul_timeout;

	PMC->PMC_MCKR = (PMC->PMC_MCKR & (~PMC_MCKR_PRES_Msk)) | ul_pres;
  400d4c:	4a17      	ldr	r2, [pc, #92]	; (400dac <pmc_switch_mck_to_pllack+0x60>)
  400d4e:	6b13      	ldr	r3, [r2, #48]	; 0x30
  400d50:	f023 0370 	bic.w	r3, r3, #112	; 0x70
  400d54:	4318      	orrs	r0, r3
  400d56:	6310      	str	r0, [r2, #48]	; 0x30
	for (ul_timeout = PMC_TIMEOUT; !(PMC->PMC_SR & PMC_SR_MCKRDY);
  400d58:	6e93      	ldr	r3, [r2, #104]	; 0x68
  400d5a:	f013 0f08 	tst.w	r3, #8
  400d5e:	d10a      	bne.n	400d76 <pmc_switch_mck_to_pllack+0x2a>
  400d60:	f44f 6300 	mov.w	r3, #2048	; 0x800
  400d64:	4911      	ldr	r1, [pc, #68]	; (400dac <pmc_switch_mck_to_pllack+0x60>)
  400d66:	6e8a      	ldr	r2, [r1, #104]	; 0x68
  400d68:	f012 0f08 	tst.w	r2, #8
  400d6c:	d103      	bne.n	400d76 <pmc_switch_mck_to_pllack+0x2a>
			--ul_timeout) {
		if (ul_timeout == 0) {
  400d6e:	3b01      	subs	r3, #1
  400d70:	d1f9      	bne.n	400d66 <pmc_switch_mck_to_pllack+0x1a>
			return 1;
  400d72:	2001      	movs	r0, #1
  400d74:	4770      	bx	lr
		}
	}

	PMC->PMC_MCKR = (PMC->PMC_MCKR & (~PMC_MCKR_CSS_Msk)) |
  400d76:	4a0d      	ldr	r2, [pc, #52]	; (400dac <pmc_switch_mck_to_pllack+0x60>)
  400d78:	6b13      	ldr	r3, [r2, #48]	; 0x30
  400d7a:	f023 0303 	bic.w	r3, r3, #3
  400d7e:	f043 0302 	orr.w	r3, r3, #2
  400d82:	6313      	str	r3, [r2, #48]	; 0x30
			PMC_MCKR_CSS_PLLA_CLK;

	for (ul_timeout = PMC_TIMEOUT; !(PMC->PMC_SR & PMC_SR_MCKRDY);
  400d84:	6e93      	ldr	r3, [r2, #104]	; 0x68
  400d86:	f013 0f08 	tst.w	r3, #8
  400d8a:	d10a      	bne.n	400da2 <pmc_switch_mck_to_pllack+0x56>
  400d8c:	f44f 6300 	mov.w	r3, #2048	; 0x800
  400d90:	4906      	ldr	r1, [pc, #24]	; (400dac <pmc_switch_mck_to_pllack+0x60>)
  400d92:	6e8a      	ldr	r2, [r1, #104]	; 0x68
  400d94:	f012 0f08 	tst.w	r2, #8
  400d98:	d105      	bne.n	400da6 <pmc_switch_mck_to_pllack+0x5a>
			--ul_timeout) {
		if (ul_timeout == 0) {
  400d9a:	3b01      	subs	r3, #1
  400d9c:	d1f9      	bne.n	400d92 <pmc_switch_mck_to_pllack+0x46>
			return 1;
  400d9e:	2001      	movs	r0, #1
		}
	}

	return 0;
}
  400da0:	4770      	bx	lr
	return 0;
  400da2:	2000      	movs	r0, #0
  400da4:	4770      	bx	lr
  400da6:	2000      	movs	r0, #0
  400da8:	4770      	bx	lr
  400daa:	bf00      	nop
  400dac:	400e0400 	.word	0x400e0400

00400db0 <pmc_switch_mainck_to_xtal>:
 */
void pmc_switch_mainck_to_xtal(uint32_t ul_bypass,
		uint32_t ul_xtal_startup_time)
{
	/* Enable Main Xtal oscillator */
	if (ul_bypass) {
  400db0:	b9c8      	cbnz	r0, 400de6 <pmc_switch_mainck_to_xtal+0x36>
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTEN) |
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTBY |
				CKGR_MOR_MOSCSEL;
	} else {
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTBY) |
  400db2:	4a11      	ldr	r2, [pc, #68]	; (400df8 <pmc_switch_mainck_to_xtal+0x48>)
  400db4:	6a13      	ldr	r3, [r2, #32]
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTEN |
				CKGR_MOR_MOSCXTST(ul_xtal_startup_time);
  400db6:	0209      	lsls	r1, r1, #8
  400db8:	b289      	uxth	r1, r1
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTEN |
  400dba:	f423 135c 	bic.w	r3, r3, #3604480	; 0x370000
  400dbe:	f023 0303 	bic.w	r3, r3, #3
  400dc2:	f443 135c 	orr.w	r3, r3, #3604480	; 0x370000
  400dc6:	f043 0301 	orr.w	r3, r3, #1
  400dca:	430b      	orrs	r3, r1
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTBY) |
  400dcc:	6213      	str	r3, [r2, #32]
		/* Wait the Xtal to stabilize */
		while (!(PMC->PMC_SR & PMC_SR_MOSCXTS));
  400dce:	6e93      	ldr	r3, [r2, #104]	; 0x68
  400dd0:	f013 0f01 	tst.w	r3, #1
  400dd4:	d0fb      	beq.n	400dce <pmc_switch_mainck_to_xtal+0x1e>

		PMC->CKGR_MOR |= CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCSEL;
  400dd6:	4a08      	ldr	r2, [pc, #32]	; (400df8 <pmc_switch_mainck_to_xtal+0x48>)
  400dd8:	6a13      	ldr	r3, [r2, #32]
  400dda:	f043 739b 	orr.w	r3, r3, #20316160	; 0x1360000
  400dde:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
  400de2:	6213      	str	r3, [r2, #32]
  400de4:	4770      	bx	lr
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTEN) |
  400de6:	4904      	ldr	r1, [pc, #16]	; (400df8 <pmc_switch_mainck_to_xtal+0x48>)
  400de8:	6a0b      	ldr	r3, [r1, #32]
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTBY |
  400dea:	4a04      	ldr	r2, [pc, #16]	; (400dfc <pmc_switch_mainck_to_xtal+0x4c>)
  400dec:	401a      	ands	r2, r3
  400dee:	4b04      	ldr	r3, [pc, #16]	; (400e00 <pmc_switch_mainck_to_xtal+0x50>)
  400df0:	4313      	orrs	r3, r2
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTEN) |
  400df2:	620b      	str	r3, [r1, #32]
  400df4:	4770      	bx	lr
  400df6:	bf00      	nop
  400df8:	400e0400 	.word	0x400e0400
  400dfc:	fec8fffc 	.word	0xfec8fffc
  400e00:	01370002 	.word	0x01370002

00400e04 <pmc_osc_is_ready_mainck>:
 * \retval 1 Xtal is ready.
 * \retval 0 Xtal is not ready.
 */
uint32_t pmc_osc_is_ready_mainck(void)
{
	return PMC->PMC_SR & PMC_SR_MOSCSELS;
  400e04:	4b02      	ldr	r3, [pc, #8]	; (400e10 <pmc_osc_is_ready_mainck+0xc>)
  400e06:	6e98      	ldr	r0, [r3, #104]	; 0x68
}
  400e08:	f400 3080 	and.w	r0, r0, #65536	; 0x10000
  400e0c:	4770      	bx	lr
  400e0e:	bf00      	nop
  400e10:	400e0400 	.word	0x400e0400

00400e14 <pmc_disable_pllack>:
void pmc_disable_pllack(void)
{
#if (SAM4C || SAM4CM || SAM4CP || SAMG)
	PMC->CKGR_PLLAR = CKGR_PLLAR_MULA(0);
#else
	PMC->CKGR_PLLAR = CKGR_PLLAR_ONE | CKGR_PLLAR_MULA(0);
  400e14:	f04f 5200 	mov.w	r2, #536870912	; 0x20000000
  400e18:	4b01      	ldr	r3, [pc, #4]	; (400e20 <pmc_disable_pllack+0xc>)
  400e1a:	629a      	str	r2, [r3, #40]	; 0x28
  400e1c:	4770      	bx	lr
  400e1e:	bf00      	nop
  400e20:	400e0400 	.word	0x400e0400

00400e24 <pmc_is_locked_pllack>:
 * \retval 0 Not locked.
 * \retval 1 Locked.
 */
uint32_t pmc_is_locked_pllack(void)
{
	return (PMC->PMC_SR & PMC_SR_LOCKA);
  400e24:	4b02      	ldr	r3, [pc, #8]	; (400e30 <pmc_is_locked_pllack+0xc>)
  400e26:	6e98      	ldr	r0, [r3, #104]	; 0x68
}
  400e28:	f000 0002 	and.w	r0, r0, #2
  400e2c:	4770      	bx	lr
  400e2e:	bf00      	nop
  400e30:	400e0400 	.word	0x400e0400

00400e34 <pmc_enable_periph_clk>:
 * \retval 0 Success.
 * \retval 1 Invalid parameter.
 */
uint32_t pmc_enable_periph_clk(uint32_t ul_id)
{
	if (ul_id > MAX_PERIPH_ID) {
  400e34:	281f      	cmp	r0, #31
  400e36:	d80c      	bhi.n	400e52 <pmc_enable_periph_clk+0x1e>
		return 1;
	}

	if (ul_id < 32) {
		if ((PMC->PMC_PCSR0 & (1u << ul_id)) != (1u << ul_id)) {
  400e38:	4b08      	ldr	r3, [pc, #32]	; (400e5c <pmc_enable_periph_clk+0x28>)
  400e3a:	699a      	ldr	r2, [r3, #24]
  400e3c:	2301      	movs	r3, #1
  400e3e:	4083      	lsls	r3, r0
  400e40:	4393      	bics	r3, r2
  400e42:	d008      	beq.n	400e56 <pmc_enable_periph_clk+0x22>
			PMC->PMC_PCER0 = 1 << ul_id;
  400e44:	2301      	movs	r3, #1
  400e46:	fa03 f000 	lsl.w	r0, r3, r0
  400e4a:	4b04      	ldr	r3, [pc, #16]	; (400e5c <pmc_enable_periph_clk+0x28>)
  400e4c:	6118      	str	r0, [r3, #16]
			PMC->PMC_PCER1 = 1 << ul_id;
		}
#endif
	}

	return 0;
  400e4e:	2000      	movs	r0, #0
  400e50:	4770      	bx	lr
		return 1;
  400e52:	2001      	movs	r0, #1
  400e54:	4770      	bx	lr
	return 0;
  400e56:	2000      	movs	r0, #0
}
  400e58:	4770      	bx	lr
  400e5a:	bf00      	nop
  400e5c:	400e0400 	.word	0x400e0400

00400e60 <Dummy_Handler>:

/**
 * \brief Default interrupt handler for unused IRQs.
 */
void Dummy_Handler(void)
{
  400e60:	e7fe      	b.n	400e60 <Dummy_Handler>
	...

00400e64 <Reset_Handler>:
/**
 * \brief This is the code that gets called on processor reset.
 * To initialize the device, and call the main() routine.
 */
void Reset_Handler(void)
{
  400e64:	b508      	push	{r3, lr}

	/* Initialize the relocate segment */
	pSrc = &_etext;
	pDest = &_srelocate;

	if (pSrc != pDest) {
  400e66:	4b1c      	ldr	r3, [pc, #112]	; (400ed8 <Reset_Handler+0x74>)
  400e68:	4a1c      	ldr	r2, [pc, #112]	; (400edc <Reset_Handler+0x78>)
  400e6a:	429a      	cmp	r2, r3
  400e6c:	d010      	beq.n	400e90 <Reset_Handler+0x2c>
		for (; pDest < &_erelocate;) {
  400e6e:	4b1c      	ldr	r3, [pc, #112]	; (400ee0 <Reset_Handler+0x7c>)
  400e70:	4a19      	ldr	r2, [pc, #100]	; (400ed8 <Reset_Handler+0x74>)
  400e72:	429a      	cmp	r2, r3
  400e74:	d20c      	bcs.n	400e90 <Reset_Handler+0x2c>
  400e76:	3b01      	subs	r3, #1
  400e78:	1a9b      	subs	r3, r3, r2
  400e7a:	f023 0303 	bic.w	r3, r3, #3
  400e7e:	3304      	adds	r3, #4
  400e80:	4413      	add	r3, r2
  400e82:	4916      	ldr	r1, [pc, #88]	; (400edc <Reset_Handler+0x78>)
			*pDest++ = *pSrc++;
  400e84:	f851 0b04 	ldr.w	r0, [r1], #4
  400e88:	f842 0b04 	str.w	r0, [r2], #4
		for (; pDest < &_erelocate;) {
  400e8c:	429a      	cmp	r2, r3
  400e8e:	d1f9      	bne.n	400e84 <Reset_Handler+0x20>
		}
	}

	/* Clear the zero segment */
	for (pDest = &_szero; pDest < &_ezero;) {
  400e90:	4b14      	ldr	r3, [pc, #80]	; (400ee4 <Reset_Handler+0x80>)
  400e92:	4a15      	ldr	r2, [pc, #84]	; (400ee8 <Reset_Handler+0x84>)
  400e94:	429a      	cmp	r2, r3
  400e96:	d20a      	bcs.n	400eae <Reset_Handler+0x4a>
  400e98:	3b01      	subs	r3, #1
  400e9a:	1a9b      	subs	r3, r3, r2
  400e9c:	f023 0303 	bic.w	r3, r3, #3
  400ea0:	3304      	adds	r3, #4
  400ea2:	4413      	add	r3, r2
		*pDest++ = 0;
  400ea4:	2100      	movs	r1, #0
  400ea6:	f842 1b04 	str.w	r1, [r2], #4
	for (pDest = &_szero; pDest < &_ezero;) {
  400eaa:	4293      	cmp	r3, r2
  400eac:	d1fb      	bne.n	400ea6 <Reset_Handler+0x42>
	}

	/* Set the vector table base address */
	pSrc = (uint32_t *) & _sfixed;
	SCB->VTOR = ((uint32_t) pSrc & SCB_VTOR_TBLOFF_Msk);
  400eae:	4b0f      	ldr	r3, [pc, #60]	; (400eec <Reset_Handler+0x88>)
  400eb0:	f023 4260 	bic.w	r2, r3, #3758096384	; 0xe0000000
  400eb4:	f022 027f 	bic.w	r2, r2, #127	; 0x7f
  400eb8:	490d      	ldr	r1, [pc, #52]	; (400ef0 <Reset_Handler+0x8c>)
  400eba:	608a      	str	r2, [r1, #8]

	if (((uint32_t) pSrc >= IRAM_ADDR) && ((uint32_t) pSrc < IRAM_ADDR + IRAM_SIZE)) {
  400ebc:	f103 4360 	add.w	r3, r3, #3758096384	; 0xe0000000
  400ec0:	f5b3 4fc0 	cmp.w	r3, #24576	; 0x6000
  400ec4:	d203      	bcs.n	400ece <Reset_Handler+0x6a>
		SCB->VTOR |= 1 << SCB_VTOR_TBLBASE_Pos;
  400ec6:	688b      	ldr	r3, [r1, #8]
  400ec8:	f043 5300 	orr.w	r3, r3, #536870912	; 0x20000000
  400ecc:	608b      	str	r3, [r1, #8]
	}

	/* Initialize the C library */
	__libc_init_array();
  400ece:	4b09      	ldr	r3, [pc, #36]	; (400ef4 <Reset_Handler+0x90>)
  400ed0:	4798      	blx	r3

	/* Branch to main function */
	main();
  400ed2:	4b09      	ldr	r3, [pc, #36]	; (400ef8 <Reset_Handler+0x94>)
  400ed4:	4798      	blx	r3
  400ed6:	e7fe      	b.n	400ed6 <Reset_Handler+0x72>
  400ed8:	20000000 	.word	0x20000000
  400edc:	00404684 	.word	0x00404684
  400ee0:	20000ab4 	.word	0x20000ab4
  400ee4:	20000b94 	.word	0x20000b94
  400ee8:	20000ab4 	.word	0x20000ab4
  400eec:	00400000 	.word	0x00400000
  400ef0:	e000ed00 	.word	0xe000ed00
  400ef4:	00401655 	.word	0x00401655
  400ef8:	0040104d 	.word	0x0040104d

00400efc <SystemCoreClockUpdate>:
}

void SystemCoreClockUpdate(void)
{
	/* Determine clock frequency according to clock register values */
	switch (PMC->PMC_MCKR & PMC_MCKR_CSS_Msk) {
  400efc:	4b38      	ldr	r3, [pc, #224]	; (400fe0 <SystemCoreClockUpdate+0xe4>)
  400efe:	6b1b      	ldr	r3, [r3, #48]	; 0x30
  400f00:	f003 0303 	and.w	r3, r3, #3
  400f04:	2b01      	cmp	r3, #1
  400f06:	d01d      	beq.n	400f44 <SystemCoreClockUpdate+0x48>
  400f08:	b183      	cbz	r3, 400f2c <SystemCoreClockUpdate+0x30>
  400f0a:	2b02      	cmp	r3, #2
  400f0c:	d036      	beq.n	400f7c <SystemCoreClockUpdate+0x80>
		SystemCoreClock /= ((((PMC->CKGR_PLLAR) & CKGR_PLLAR_DIVA_Msk) >> 
			                         CKGR_PLLAR_DIVA_Pos));
		break;
	}

	if ((PMC->PMC_MCKR & PMC_MCKR_PRES_Msk) == PMC_MCKR_PRES_CLK_3) {
  400f0e:	4b34      	ldr	r3, [pc, #208]	; (400fe0 <SystemCoreClockUpdate+0xe4>)
  400f10:	6b1b      	ldr	r3, [r3, #48]	; 0x30
  400f12:	f003 0370 	and.w	r3, r3, #112	; 0x70
  400f16:	2b70      	cmp	r3, #112	; 0x70
  400f18:	d059      	beq.n	400fce <SystemCoreClockUpdate+0xd2>
		SystemCoreClock /= 3U;
	} else { 
		SystemCoreClock >>= ((PMC->PMC_MCKR & PMC_MCKR_PRES_Msk) >> 
  400f1a:	4b31      	ldr	r3, [pc, #196]	; (400fe0 <SystemCoreClockUpdate+0xe4>)
  400f1c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
  400f1e:	4931      	ldr	r1, [pc, #196]	; (400fe4 <SystemCoreClockUpdate+0xe8>)
  400f20:	f3c2 1202 	ubfx	r2, r2, #4, #3
  400f24:	680b      	ldr	r3, [r1, #0]
  400f26:	40d3      	lsrs	r3, r2
  400f28:	600b      	str	r3, [r1, #0]
  400f2a:	4770      	bx	lr
		if (SUPC->SUPC_SR & SUPC_SR_OSCSEL) {
  400f2c:	4b2e      	ldr	r3, [pc, #184]	; (400fe8 <SystemCoreClockUpdate+0xec>)
  400f2e:	695b      	ldr	r3, [r3, #20]
  400f30:	f013 0f80 	tst.w	r3, #128	; 0x80
			SystemCoreClock = CHIP_FREQ_XTAL_32K;
  400f34:	bf14      	ite	ne
  400f36:	f44f 4200 	movne.w	r2, #32768	; 0x8000
			SystemCoreClock = CHIP_FREQ_SLCK_RC;
  400f3a:	f44f 42fa 	moveq.w	r2, #32000	; 0x7d00
  400f3e:	4b29      	ldr	r3, [pc, #164]	; (400fe4 <SystemCoreClockUpdate+0xe8>)
  400f40:	601a      	str	r2, [r3, #0]
  400f42:	e7e4      	b.n	400f0e <SystemCoreClockUpdate+0x12>
		if (PMC->CKGR_MOR & CKGR_MOR_MOSCSEL) {
  400f44:	4b26      	ldr	r3, [pc, #152]	; (400fe0 <SystemCoreClockUpdate+0xe4>)
  400f46:	6a1b      	ldr	r3, [r3, #32]
  400f48:	f013 7f80 	tst.w	r3, #16777216	; 0x1000000
  400f4c:	d003      	beq.n	400f56 <SystemCoreClockUpdate+0x5a>
			SystemCoreClock = CHIP_FREQ_XTAL_12M;
  400f4e:	4a27      	ldr	r2, [pc, #156]	; (400fec <SystemCoreClockUpdate+0xf0>)
  400f50:	4b24      	ldr	r3, [pc, #144]	; (400fe4 <SystemCoreClockUpdate+0xe8>)
  400f52:	601a      	str	r2, [r3, #0]
  400f54:	e7db      	b.n	400f0e <SystemCoreClockUpdate+0x12>
			SystemCoreClock = CHIP_FREQ_MAINCK_RC_4MHZ;
  400f56:	4a26      	ldr	r2, [pc, #152]	; (400ff0 <SystemCoreClockUpdate+0xf4>)
  400f58:	4b22      	ldr	r3, [pc, #136]	; (400fe4 <SystemCoreClockUpdate+0xe8>)
  400f5a:	601a      	str	r2, [r3, #0]
			switch (PMC->CKGR_MOR & CKGR_MOR_MOSCRCF_Msk) {
  400f5c:	4b20      	ldr	r3, [pc, #128]	; (400fe0 <SystemCoreClockUpdate+0xe4>)
  400f5e:	6a1b      	ldr	r3, [r3, #32]
  400f60:	f003 0370 	and.w	r3, r3, #112	; 0x70
  400f64:	2b10      	cmp	r3, #16
  400f66:	d005      	beq.n	400f74 <SystemCoreClockUpdate+0x78>
  400f68:	2b20      	cmp	r3, #32
  400f6a:	d1d0      	bne.n	400f0e <SystemCoreClockUpdate+0x12>
				SystemCoreClock *= 3U;
  400f6c:	4a1f      	ldr	r2, [pc, #124]	; (400fec <SystemCoreClockUpdate+0xf0>)
  400f6e:	4b1d      	ldr	r3, [pc, #116]	; (400fe4 <SystemCoreClockUpdate+0xe8>)
  400f70:	601a      	str	r2, [r3, #0]
				break;
  400f72:	e7cc      	b.n	400f0e <SystemCoreClockUpdate+0x12>
				SystemCoreClock *= 2U;
  400f74:	4a1f      	ldr	r2, [pc, #124]	; (400ff4 <SystemCoreClockUpdate+0xf8>)
  400f76:	4b1b      	ldr	r3, [pc, #108]	; (400fe4 <SystemCoreClockUpdate+0xe8>)
  400f78:	601a      	str	r2, [r3, #0]
				break;
  400f7a:	e7c8      	b.n	400f0e <SystemCoreClockUpdate+0x12>
		if (PMC->CKGR_MOR & CKGR_MOR_MOSCSEL) {
  400f7c:	4b18      	ldr	r3, [pc, #96]	; (400fe0 <SystemCoreClockUpdate+0xe4>)
  400f7e:	6a1b      	ldr	r3, [r3, #32]
  400f80:	f013 7f80 	tst.w	r3, #16777216	; 0x1000000
  400f84:	d010      	beq.n	400fa8 <SystemCoreClockUpdate+0xac>
			SystemCoreClock = CHIP_FREQ_XTAL_12M;
  400f86:	4a19      	ldr	r2, [pc, #100]	; (400fec <SystemCoreClockUpdate+0xf0>)
  400f88:	4b16      	ldr	r3, [pc, #88]	; (400fe4 <SystemCoreClockUpdate+0xe8>)
  400f8a:	601a      	str	r2, [r3, #0]
		SystemCoreClock *= ((((PMC->CKGR_PLLAR) & CKGR_PLLAR_MULA_Msk) >> 
  400f8c:	4a14      	ldr	r2, [pc, #80]	; (400fe0 <SystemCoreClockUpdate+0xe4>)
  400f8e:	6a91      	ldr	r1, [r2, #40]	; 0x28
		SystemCoreClock /= ((((PMC->CKGR_PLLAR) & CKGR_PLLAR_DIVA_Msk) >> 
  400f90:	6a92      	ldr	r2, [r2, #40]	; 0x28
  400f92:	4814      	ldr	r0, [pc, #80]	; (400fe4 <SystemCoreClockUpdate+0xe8>)
		SystemCoreClock *= ((((PMC->CKGR_PLLAR) & CKGR_PLLAR_MULA_Msk) >> 
  400f94:	f3c1 410a 	ubfx	r1, r1, #16, #11
  400f98:	6803      	ldr	r3, [r0, #0]
  400f9a:	fb01 3303 	mla	r3, r1, r3, r3
		SystemCoreClock /= ((((PMC->CKGR_PLLAR) & CKGR_PLLAR_DIVA_Msk) >> 
  400f9e:	b2d2      	uxtb	r2, r2
  400fa0:	fbb3 f3f2 	udiv	r3, r3, r2
  400fa4:	6003      	str	r3, [r0, #0]
		break;
  400fa6:	e7b2      	b.n	400f0e <SystemCoreClockUpdate+0x12>
			SystemCoreClock = CHIP_FREQ_MAINCK_RC_4MHZ;
  400fa8:	4a11      	ldr	r2, [pc, #68]	; (400ff0 <SystemCoreClockUpdate+0xf4>)
  400faa:	4b0e      	ldr	r3, [pc, #56]	; (400fe4 <SystemCoreClockUpdate+0xe8>)
  400fac:	601a      	str	r2, [r3, #0]
			switch (PMC->CKGR_MOR & CKGR_MOR_MOSCRCF_Msk) {
  400fae:	4b0c      	ldr	r3, [pc, #48]	; (400fe0 <SystemCoreClockUpdate+0xe4>)
  400fb0:	6a1b      	ldr	r3, [r3, #32]
  400fb2:	f003 0370 	and.w	r3, r3, #112	; 0x70
  400fb6:	2b10      	cmp	r3, #16
  400fb8:	d005      	beq.n	400fc6 <SystemCoreClockUpdate+0xca>
  400fba:	2b20      	cmp	r3, #32
  400fbc:	d1e6      	bne.n	400f8c <SystemCoreClockUpdate+0x90>
				SystemCoreClock *= 3U;
  400fbe:	4a0b      	ldr	r2, [pc, #44]	; (400fec <SystemCoreClockUpdate+0xf0>)
  400fc0:	4b08      	ldr	r3, [pc, #32]	; (400fe4 <SystemCoreClockUpdate+0xe8>)
  400fc2:	601a      	str	r2, [r3, #0]
				break;
  400fc4:	e7e2      	b.n	400f8c <SystemCoreClockUpdate+0x90>
				SystemCoreClock *= 2U;
  400fc6:	4a0b      	ldr	r2, [pc, #44]	; (400ff4 <SystemCoreClockUpdate+0xf8>)
  400fc8:	4b06      	ldr	r3, [pc, #24]	; (400fe4 <SystemCoreClockUpdate+0xe8>)
  400fca:	601a      	str	r2, [r3, #0]
				break;
  400fcc:	e7de      	b.n	400f8c <SystemCoreClockUpdate+0x90>
		SystemCoreClock /= 3U;
  400fce:	4a05      	ldr	r2, [pc, #20]	; (400fe4 <SystemCoreClockUpdate+0xe8>)
  400fd0:	6813      	ldr	r3, [r2, #0]
  400fd2:	4909      	ldr	r1, [pc, #36]	; (400ff8 <SystemCoreClockUpdate+0xfc>)
  400fd4:	fba1 1303 	umull	r1, r3, r1, r3
  400fd8:	085b      	lsrs	r3, r3, #1
  400fda:	6013      	str	r3, [r2, #0]
  400fdc:	4770      	bx	lr
  400fde:	bf00      	nop
  400fe0:	400e0400 	.word	0x400e0400
  400fe4:	20000104 	.word	0x20000104
  400fe8:	400e1410 	.word	0x400e1410
  400fec:	00b71b00 	.word	0x00b71b00
  400ff0:	003d0900 	.word	0x003d0900
  400ff4:	007a1200 	.word	0x007a1200
  400ff8:	aaaaaaab 	.word	0xaaaaaaab

00400ffc <_sbrk>:
{
	static unsigned char *heap = NULL;
	unsigned char *prev_heap;
	int ramend = (int)&__ram_end__;

	if (heap == NULL) {
  400ffc:	4b0a      	ldr	r3, [pc, #40]	; (401028 <_sbrk+0x2c>)
  400ffe:	681b      	ldr	r3, [r3, #0]
  401000:	b153      	cbz	r3, 401018 <_sbrk+0x1c>
		heap = (unsigned char *)&_end;
	}
	prev_heap = heap;
  401002:	4b09      	ldr	r3, [pc, #36]	; (401028 <_sbrk+0x2c>)
  401004:	681b      	ldr	r3, [r3, #0]

	if (((int)prev_heap + incr) > ramend) {
  401006:	181a      	adds	r2, r3, r0
  401008:	4908      	ldr	r1, [pc, #32]	; (40102c <_sbrk+0x30>)
  40100a:	4291      	cmp	r1, r2
  40100c:	db08      	blt.n	401020 <_sbrk+0x24>
		return (caddr_t) -1;	
	}

	heap += incr;
  40100e:	4610      	mov	r0, r2
  401010:	4a05      	ldr	r2, [pc, #20]	; (401028 <_sbrk+0x2c>)
  401012:	6010      	str	r0, [r2, #0]

	return (caddr_t) prev_heap;
  401014:	4618      	mov	r0, r3
  401016:	4770      	bx	lr
		heap = (unsigned char *)&_end;
  401018:	4a05      	ldr	r2, [pc, #20]	; (401030 <_sbrk+0x34>)
  40101a:	4b03      	ldr	r3, [pc, #12]	; (401028 <_sbrk+0x2c>)
  40101c:	601a      	str	r2, [r3, #0]
  40101e:	e7f0      	b.n	401002 <_sbrk+0x6>
		return (caddr_t) -1;	
  401020:	f04f 30ff 	mov.w	r0, #4294967295
}
  401024:	4770      	bx	lr
  401026:	bf00      	nop
  401028:	20000b4c 	.word	0x20000b4c
  40102c:	20005ffc 	.word	0x20005ffc
  401030:	20001398 	.word	0x20001398

00401034 <_close>:
}

extern int _close(int file)
{
	return -1;
}
  401034:	f04f 30ff 	mov.w	r0, #4294967295
  401038:	4770      	bx	lr

0040103a <_fstat>:

extern int _fstat(int file, struct stat *st)
{
	st->st_mode = S_IFCHR;
  40103a:	f44f 5300 	mov.w	r3, #8192	; 0x2000
  40103e:	604b      	str	r3, [r1, #4]

	return 0;
}
  401040:	2000      	movs	r0, #0
  401042:	4770      	bx	lr

00401044 <_isatty>:

extern int _isatty(int file)
{
	return 1;
}
  401044:	2001      	movs	r0, #1
  401046:	4770      	bx	lr

00401048 <_lseek>:

extern int _lseek(int file, int ptr, int dir)
{
	return 0;
}
  401048:	2000      	movs	r0, #0
  40104a:	4770      	bx	lr

0040104c <main>:
 */
#include <asf.h>
#include "BeamBall.h"

int main (void)
{
  40104c:	b508      	push	{r3, lr}
	sysclk_init();
  40104e:	4b07      	ldr	r3, [pc, #28]	; (40106c <main+0x20>)
  401050:	4798      	blx	r3
	board_init();
  401052:	4b07      	ldr	r3, [pc, #28]	; (401070 <main+0x24>)
  401054:	4798      	blx	r3
	vConfigureUART();
  401056:	4b07      	ldr	r3, [pc, #28]	; (401074 <main+0x28>)
  401058:	4798      	blx	r3

	puts("Inicializing Beam Ball\r\n");
  40105a:	4807      	ldr	r0, [pc, #28]	; (401078 <main+0x2c>)
  40105c:	4b07      	ldr	r3, [pc, #28]	; (40107c <main+0x30>)
  40105e:	4798      	blx	r3
	//vConfigureButton(); //novo
	//vConfigurePWM();
	//puts("PWM configured complete\r\n");
	vConfigureSensorISR();
  401060:	4b07      	ldr	r3, [pc, #28]	; (401080 <main+0x34>)
  401062:	4798      	blx	r3
	vConfigureTimer();
  401064:	4b07      	ldr	r3, [pc, #28]	; (401084 <main+0x38>)
  401066:	4798      	blx	r3
  401068:	e7fe      	b.n	401068 <main+0x1c>
  40106a:	bf00      	nop
  40106c:	0040079d 	.word	0x0040079d
  401070:	00400801 	.word	0x00400801
  401074:	004004f9 	.word	0x004004f9
  401078:	004044d4 	.word	0x004044d4
  40107c:	004017d1 	.word	0x004017d1
  401080:	00400689 	.word	0x00400689
  401084:	004005e5 	.word	0x004005e5

00401088 <__aeabi_drsub>:
  401088:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
  40108c:	e002      	b.n	401094 <__adddf3>
  40108e:	bf00      	nop

00401090 <__aeabi_dsub>:
  401090:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

00401094 <__adddf3>:
  401094:	b530      	push	{r4, r5, lr}
  401096:	ea4f 0441 	mov.w	r4, r1, lsl #1
  40109a:	ea4f 0543 	mov.w	r5, r3, lsl #1
  40109e:	ea94 0f05 	teq	r4, r5
  4010a2:	bf08      	it	eq
  4010a4:	ea90 0f02 	teqeq	r0, r2
  4010a8:	bf1f      	itttt	ne
  4010aa:	ea54 0c00 	orrsne.w	ip, r4, r0
  4010ae:	ea55 0c02 	orrsne.w	ip, r5, r2
  4010b2:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
  4010b6:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
  4010ba:	f000 80e2 	beq.w	401282 <__adddf3+0x1ee>
  4010be:	ea4f 5454 	mov.w	r4, r4, lsr #21
  4010c2:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
  4010c6:	bfb8      	it	lt
  4010c8:	426d      	neglt	r5, r5
  4010ca:	dd0c      	ble.n	4010e6 <__adddf3+0x52>
  4010cc:	442c      	add	r4, r5
  4010ce:	ea80 0202 	eor.w	r2, r0, r2
  4010d2:	ea81 0303 	eor.w	r3, r1, r3
  4010d6:	ea82 0000 	eor.w	r0, r2, r0
  4010da:	ea83 0101 	eor.w	r1, r3, r1
  4010de:	ea80 0202 	eor.w	r2, r0, r2
  4010e2:	ea81 0303 	eor.w	r3, r1, r3
  4010e6:	2d36      	cmp	r5, #54	; 0x36
  4010e8:	bf88      	it	hi
  4010ea:	bd30      	pophi	{r4, r5, pc}
  4010ec:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
  4010f0:	ea4f 3101 	mov.w	r1, r1, lsl #12
  4010f4:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
  4010f8:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
  4010fc:	d002      	beq.n	401104 <__adddf3+0x70>
  4010fe:	4240      	negs	r0, r0
  401100:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
  401104:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
  401108:	ea4f 3303 	mov.w	r3, r3, lsl #12
  40110c:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
  401110:	d002      	beq.n	401118 <__adddf3+0x84>
  401112:	4252      	negs	r2, r2
  401114:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
  401118:	ea94 0f05 	teq	r4, r5
  40111c:	f000 80a7 	beq.w	40126e <__adddf3+0x1da>
  401120:	f1a4 0401 	sub.w	r4, r4, #1
  401124:	f1d5 0e20 	rsbs	lr, r5, #32
  401128:	db0d      	blt.n	401146 <__adddf3+0xb2>
  40112a:	fa02 fc0e 	lsl.w	ip, r2, lr
  40112e:	fa22 f205 	lsr.w	r2, r2, r5
  401132:	1880      	adds	r0, r0, r2
  401134:	f141 0100 	adc.w	r1, r1, #0
  401138:	fa03 f20e 	lsl.w	r2, r3, lr
  40113c:	1880      	adds	r0, r0, r2
  40113e:	fa43 f305 	asr.w	r3, r3, r5
  401142:	4159      	adcs	r1, r3
  401144:	e00e      	b.n	401164 <__adddf3+0xd0>
  401146:	f1a5 0520 	sub.w	r5, r5, #32
  40114a:	f10e 0e20 	add.w	lr, lr, #32
  40114e:	2a01      	cmp	r2, #1
  401150:	fa03 fc0e 	lsl.w	ip, r3, lr
  401154:	bf28      	it	cs
  401156:	f04c 0c02 	orrcs.w	ip, ip, #2
  40115a:	fa43 f305 	asr.w	r3, r3, r5
  40115e:	18c0      	adds	r0, r0, r3
  401160:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
  401164:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
  401168:	d507      	bpl.n	40117a <__adddf3+0xe6>
  40116a:	f04f 0e00 	mov.w	lr, #0
  40116e:	f1dc 0c00 	rsbs	ip, ip, #0
  401172:	eb7e 0000 	sbcs.w	r0, lr, r0
  401176:	eb6e 0101 	sbc.w	r1, lr, r1
  40117a:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
  40117e:	d31b      	bcc.n	4011b8 <__adddf3+0x124>
  401180:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
  401184:	d30c      	bcc.n	4011a0 <__adddf3+0x10c>
  401186:	0849      	lsrs	r1, r1, #1
  401188:	ea5f 0030 	movs.w	r0, r0, rrx
  40118c:	ea4f 0c3c 	mov.w	ip, ip, rrx
  401190:	f104 0401 	add.w	r4, r4, #1
  401194:	ea4f 5244 	mov.w	r2, r4, lsl #21
  401198:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
  40119c:	f080 809a 	bcs.w	4012d4 <__adddf3+0x240>
  4011a0:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
  4011a4:	bf08      	it	eq
  4011a6:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
  4011aa:	f150 0000 	adcs.w	r0, r0, #0
  4011ae:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
  4011b2:	ea41 0105 	orr.w	r1, r1, r5
  4011b6:	bd30      	pop	{r4, r5, pc}
  4011b8:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
  4011bc:	4140      	adcs	r0, r0
  4011be:	eb41 0101 	adc.w	r1, r1, r1
  4011c2:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
  4011c6:	f1a4 0401 	sub.w	r4, r4, #1
  4011ca:	d1e9      	bne.n	4011a0 <__adddf3+0x10c>
  4011cc:	f091 0f00 	teq	r1, #0
  4011d0:	bf04      	itt	eq
  4011d2:	4601      	moveq	r1, r0
  4011d4:	2000      	moveq	r0, #0
  4011d6:	fab1 f381 	clz	r3, r1
  4011da:	bf08      	it	eq
  4011dc:	3320      	addeq	r3, #32
  4011de:	f1a3 030b 	sub.w	r3, r3, #11
  4011e2:	f1b3 0220 	subs.w	r2, r3, #32
  4011e6:	da0c      	bge.n	401202 <__adddf3+0x16e>
  4011e8:	320c      	adds	r2, #12
  4011ea:	dd08      	ble.n	4011fe <__adddf3+0x16a>
  4011ec:	f102 0c14 	add.w	ip, r2, #20
  4011f0:	f1c2 020c 	rsb	r2, r2, #12
  4011f4:	fa01 f00c 	lsl.w	r0, r1, ip
  4011f8:	fa21 f102 	lsr.w	r1, r1, r2
  4011fc:	e00c      	b.n	401218 <__adddf3+0x184>
  4011fe:	f102 0214 	add.w	r2, r2, #20
  401202:	bfd8      	it	le
  401204:	f1c2 0c20 	rsble	ip, r2, #32
  401208:	fa01 f102 	lsl.w	r1, r1, r2
  40120c:	fa20 fc0c 	lsr.w	ip, r0, ip
  401210:	bfdc      	itt	le
  401212:	ea41 010c 	orrle.w	r1, r1, ip
  401216:	4090      	lslle	r0, r2
  401218:	1ae4      	subs	r4, r4, r3
  40121a:	bfa2      	ittt	ge
  40121c:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
  401220:	4329      	orrge	r1, r5
  401222:	bd30      	popge	{r4, r5, pc}
  401224:	ea6f 0404 	mvn.w	r4, r4
  401228:	3c1f      	subs	r4, #31
  40122a:	da1c      	bge.n	401266 <__adddf3+0x1d2>
  40122c:	340c      	adds	r4, #12
  40122e:	dc0e      	bgt.n	40124e <__adddf3+0x1ba>
  401230:	f104 0414 	add.w	r4, r4, #20
  401234:	f1c4 0220 	rsb	r2, r4, #32
  401238:	fa20 f004 	lsr.w	r0, r0, r4
  40123c:	fa01 f302 	lsl.w	r3, r1, r2
  401240:	ea40 0003 	orr.w	r0, r0, r3
  401244:	fa21 f304 	lsr.w	r3, r1, r4
  401248:	ea45 0103 	orr.w	r1, r5, r3
  40124c:	bd30      	pop	{r4, r5, pc}
  40124e:	f1c4 040c 	rsb	r4, r4, #12
  401252:	f1c4 0220 	rsb	r2, r4, #32
  401256:	fa20 f002 	lsr.w	r0, r0, r2
  40125a:	fa01 f304 	lsl.w	r3, r1, r4
  40125e:	ea40 0003 	orr.w	r0, r0, r3
  401262:	4629      	mov	r1, r5
  401264:	bd30      	pop	{r4, r5, pc}
  401266:	fa21 f004 	lsr.w	r0, r1, r4
  40126a:	4629      	mov	r1, r5
  40126c:	bd30      	pop	{r4, r5, pc}
  40126e:	f094 0f00 	teq	r4, #0
  401272:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
  401276:	bf06      	itte	eq
  401278:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
  40127c:	3401      	addeq	r4, #1
  40127e:	3d01      	subne	r5, #1
  401280:	e74e      	b.n	401120 <__adddf3+0x8c>
  401282:	ea7f 5c64 	mvns.w	ip, r4, asr #21
  401286:	bf18      	it	ne
  401288:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
  40128c:	d029      	beq.n	4012e2 <__adddf3+0x24e>
  40128e:	ea94 0f05 	teq	r4, r5
  401292:	bf08      	it	eq
  401294:	ea90 0f02 	teqeq	r0, r2
  401298:	d005      	beq.n	4012a6 <__adddf3+0x212>
  40129a:	ea54 0c00 	orrs.w	ip, r4, r0
  40129e:	bf04      	itt	eq
  4012a0:	4619      	moveq	r1, r3
  4012a2:	4610      	moveq	r0, r2
  4012a4:	bd30      	pop	{r4, r5, pc}
  4012a6:	ea91 0f03 	teq	r1, r3
  4012aa:	bf1e      	ittt	ne
  4012ac:	2100      	movne	r1, #0
  4012ae:	2000      	movne	r0, #0
  4012b0:	bd30      	popne	{r4, r5, pc}
  4012b2:	ea5f 5c54 	movs.w	ip, r4, lsr #21
  4012b6:	d105      	bne.n	4012c4 <__adddf3+0x230>
  4012b8:	0040      	lsls	r0, r0, #1
  4012ba:	4149      	adcs	r1, r1
  4012bc:	bf28      	it	cs
  4012be:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
  4012c2:	bd30      	pop	{r4, r5, pc}
  4012c4:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
  4012c8:	bf3c      	itt	cc
  4012ca:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
  4012ce:	bd30      	popcc	{r4, r5, pc}
  4012d0:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
  4012d4:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
  4012d8:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
  4012dc:	f04f 0000 	mov.w	r0, #0
  4012e0:	bd30      	pop	{r4, r5, pc}
  4012e2:	ea7f 5c64 	mvns.w	ip, r4, asr #21
  4012e6:	bf1a      	itte	ne
  4012e8:	4619      	movne	r1, r3
  4012ea:	4610      	movne	r0, r2
  4012ec:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
  4012f0:	bf1c      	itt	ne
  4012f2:	460b      	movne	r3, r1
  4012f4:	4602      	movne	r2, r0
  4012f6:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
  4012fa:	bf06      	itte	eq
  4012fc:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
  401300:	ea91 0f03 	teqeq	r1, r3
  401304:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
  401308:	bd30      	pop	{r4, r5, pc}
  40130a:	bf00      	nop

0040130c <__aeabi_ui2d>:
  40130c:	f090 0f00 	teq	r0, #0
  401310:	bf04      	itt	eq
  401312:	2100      	moveq	r1, #0
  401314:	4770      	bxeq	lr
  401316:	b530      	push	{r4, r5, lr}
  401318:	f44f 6480 	mov.w	r4, #1024	; 0x400
  40131c:	f104 0432 	add.w	r4, r4, #50	; 0x32
  401320:	f04f 0500 	mov.w	r5, #0
  401324:	f04f 0100 	mov.w	r1, #0
  401328:	e750      	b.n	4011cc <__adddf3+0x138>
  40132a:	bf00      	nop

0040132c <__aeabi_i2d>:
  40132c:	f090 0f00 	teq	r0, #0
  401330:	bf04      	itt	eq
  401332:	2100      	moveq	r1, #0
  401334:	4770      	bxeq	lr
  401336:	b530      	push	{r4, r5, lr}
  401338:	f44f 6480 	mov.w	r4, #1024	; 0x400
  40133c:	f104 0432 	add.w	r4, r4, #50	; 0x32
  401340:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
  401344:	bf48      	it	mi
  401346:	4240      	negmi	r0, r0
  401348:	f04f 0100 	mov.w	r1, #0
  40134c:	e73e      	b.n	4011cc <__adddf3+0x138>
  40134e:	bf00      	nop

00401350 <__aeabi_f2d>:
  401350:	0042      	lsls	r2, r0, #1
  401352:	ea4f 01e2 	mov.w	r1, r2, asr #3
  401356:	ea4f 0131 	mov.w	r1, r1, rrx
  40135a:	ea4f 7002 	mov.w	r0, r2, lsl #28
  40135e:	bf1f      	itttt	ne
  401360:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
  401364:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
  401368:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
  40136c:	4770      	bxne	lr
  40136e:	f092 0f00 	teq	r2, #0
  401372:	bf14      	ite	ne
  401374:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
  401378:	4770      	bxeq	lr
  40137a:	b530      	push	{r4, r5, lr}
  40137c:	f44f 7460 	mov.w	r4, #896	; 0x380
  401380:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
  401384:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
  401388:	e720      	b.n	4011cc <__adddf3+0x138>
  40138a:	bf00      	nop

0040138c <__aeabi_ul2d>:
  40138c:	ea50 0201 	orrs.w	r2, r0, r1
  401390:	bf08      	it	eq
  401392:	4770      	bxeq	lr
  401394:	b530      	push	{r4, r5, lr}
  401396:	f04f 0500 	mov.w	r5, #0
  40139a:	e00a      	b.n	4013b2 <__aeabi_l2d+0x16>

0040139c <__aeabi_l2d>:
  40139c:	ea50 0201 	orrs.w	r2, r0, r1
  4013a0:	bf08      	it	eq
  4013a2:	4770      	bxeq	lr
  4013a4:	b530      	push	{r4, r5, lr}
  4013a6:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
  4013aa:	d502      	bpl.n	4013b2 <__aeabi_l2d+0x16>
  4013ac:	4240      	negs	r0, r0
  4013ae:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
  4013b2:	f44f 6480 	mov.w	r4, #1024	; 0x400
  4013b6:	f104 0432 	add.w	r4, r4, #50	; 0x32
  4013ba:	ea5f 5c91 	movs.w	ip, r1, lsr #22
  4013be:	f43f aedc 	beq.w	40117a <__adddf3+0xe6>
  4013c2:	f04f 0203 	mov.w	r2, #3
  4013c6:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
  4013ca:	bf18      	it	ne
  4013cc:	3203      	addne	r2, #3
  4013ce:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
  4013d2:	bf18      	it	ne
  4013d4:	3203      	addne	r2, #3
  4013d6:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
  4013da:	f1c2 0320 	rsb	r3, r2, #32
  4013de:	fa00 fc03 	lsl.w	ip, r0, r3
  4013e2:	fa20 f002 	lsr.w	r0, r0, r2
  4013e6:	fa01 fe03 	lsl.w	lr, r1, r3
  4013ea:	ea40 000e 	orr.w	r0, r0, lr
  4013ee:	fa21 f102 	lsr.w	r1, r1, r2
  4013f2:	4414      	add	r4, r2
  4013f4:	e6c1      	b.n	40117a <__adddf3+0xe6>
  4013f6:	bf00      	nop

004013f8 <__aeabi_d2uiz>:
  4013f8:	004a      	lsls	r2, r1, #1
  4013fa:	d211      	bcs.n	401420 <__aeabi_d2uiz+0x28>
  4013fc:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
  401400:	d211      	bcs.n	401426 <__aeabi_d2uiz+0x2e>
  401402:	d50d      	bpl.n	401420 <__aeabi_d2uiz+0x28>
  401404:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
  401408:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
  40140c:	d40e      	bmi.n	40142c <__aeabi_d2uiz+0x34>
  40140e:	ea4f 23c1 	mov.w	r3, r1, lsl #11
  401412:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
  401416:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
  40141a:	fa23 f002 	lsr.w	r0, r3, r2
  40141e:	4770      	bx	lr
  401420:	f04f 0000 	mov.w	r0, #0
  401424:	4770      	bx	lr
  401426:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
  40142a:	d102      	bne.n	401432 <__aeabi_d2uiz+0x3a>
  40142c:	f04f 30ff 	mov.w	r0, #4294967295
  401430:	4770      	bx	lr
  401432:	f04f 0000 	mov.w	r0, #0
  401436:	4770      	bx	lr

00401438 <__aeabi_frsub>:
  401438:	f080 4000 	eor.w	r0, r0, #2147483648	; 0x80000000
  40143c:	e002      	b.n	401444 <__addsf3>
  40143e:	bf00      	nop

00401440 <__aeabi_fsub>:
  401440:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000

00401444 <__addsf3>:
  401444:	0042      	lsls	r2, r0, #1
  401446:	bf1f      	itttt	ne
  401448:	ea5f 0341 	movsne.w	r3, r1, lsl #1
  40144c:	ea92 0f03 	teqne	r2, r3
  401450:	ea7f 6c22 	mvnsne.w	ip, r2, asr #24
  401454:	ea7f 6c23 	mvnsne.w	ip, r3, asr #24
  401458:	d06a      	beq.n	401530 <__addsf3+0xec>
  40145a:	ea4f 6212 	mov.w	r2, r2, lsr #24
  40145e:	ebd2 6313 	rsbs	r3, r2, r3, lsr #24
  401462:	bfc1      	itttt	gt
  401464:	18d2      	addgt	r2, r2, r3
  401466:	4041      	eorgt	r1, r0
  401468:	4048      	eorgt	r0, r1
  40146a:	4041      	eorgt	r1, r0
  40146c:	bfb8      	it	lt
  40146e:	425b      	neglt	r3, r3
  401470:	2b19      	cmp	r3, #25
  401472:	bf88      	it	hi
  401474:	4770      	bxhi	lr
  401476:	f010 4f00 	tst.w	r0, #2147483648	; 0x80000000
  40147a:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
  40147e:	f020 407f 	bic.w	r0, r0, #4278190080	; 0xff000000
  401482:	bf18      	it	ne
  401484:	4240      	negne	r0, r0
  401486:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
  40148a:	f441 0100 	orr.w	r1, r1, #8388608	; 0x800000
  40148e:	f021 417f 	bic.w	r1, r1, #4278190080	; 0xff000000
  401492:	bf18      	it	ne
  401494:	4249      	negne	r1, r1
  401496:	ea92 0f03 	teq	r2, r3
  40149a:	d03f      	beq.n	40151c <__addsf3+0xd8>
  40149c:	f1a2 0201 	sub.w	r2, r2, #1
  4014a0:	fa41 fc03 	asr.w	ip, r1, r3
  4014a4:	eb10 000c 	adds.w	r0, r0, ip
  4014a8:	f1c3 0320 	rsb	r3, r3, #32
  4014ac:	fa01 f103 	lsl.w	r1, r1, r3
  4014b0:	f000 4300 	and.w	r3, r0, #2147483648	; 0x80000000
  4014b4:	d502      	bpl.n	4014bc <__addsf3+0x78>
  4014b6:	4249      	negs	r1, r1
  4014b8:	eb60 0040 	sbc.w	r0, r0, r0, lsl #1
  4014bc:	f5b0 0f00 	cmp.w	r0, #8388608	; 0x800000
  4014c0:	d313      	bcc.n	4014ea <__addsf3+0xa6>
  4014c2:	f1b0 7f80 	cmp.w	r0, #16777216	; 0x1000000
  4014c6:	d306      	bcc.n	4014d6 <__addsf3+0x92>
  4014c8:	0840      	lsrs	r0, r0, #1
  4014ca:	ea4f 0131 	mov.w	r1, r1, rrx
  4014ce:	f102 0201 	add.w	r2, r2, #1
  4014d2:	2afe      	cmp	r2, #254	; 0xfe
  4014d4:	d251      	bcs.n	40157a <__addsf3+0x136>
  4014d6:	f1b1 4f00 	cmp.w	r1, #2147483648	; 0x80000000
  4014da:	eb40 50c2 	adc.w	r0, r0, r2, lsl #23
  4014de:	bf08      	it	eq
  4014e0:	f020 0001 	biceq.w	r0, r0, #1
  4014e4:	ea40 0003 	orr.w	r0, r0, r3
  4014e8:	4770      	bx	lr
  4014ea:	0049      	lsls	r1, r1, #1
  4014ec:	eb40 0000 	adc.w	r0, r0, r0
  4014f0:	f410 0f00 	tst.w	r0, #8388608	; 0x800000
  4014f4:	f1a2 0201 	sub.w	r2, r2, #1
  4014f8:	d1ed      	bne.n	4014d6 <__addsf3+0x92>
  4014fa:	fab0 fc80 	clz	ip, r0
  4014fe:	f1ac 0c08 	sub.w	ip, ip, #8
  401502:	ebb2 020c 	subs.w	r2, r2, ip
  401506:	fa00 f00c 	lsl.w	r0, r0, ip
  40150a:	bfaa      	itet	ge
  40150c:	eb00 50c2 	addge.w	r0, r0, r2, lsl #23
  401510:	4252      	neglt	r2, r2
  401512:	4318      	orrge	r0, r3
  401514:	bfbc      	itt	lt
  401516:	40d0      	lsrlt	r0, r2
  401518:	4318      	orrlt	r0, r3
  40151a:	4770      	bx	lr
  40151c:	f092 0f00 	teq	r2, #0
  401520:	f481 0100 	eor.w	r1, r1, #8388608	; 0x800000
  401524:	bf06      	itte	eq
  401526:	f480 0000 	eoreq.w	r0, r0, #8388608	; 0x800000
  40152a:	3201      	addeq	r2, #1
  40152c:	3b01      	subne	r3, #1
  40152e:	e7b5      	b.n	40149c <__addsf3+0x58>
  401530:	ea4f 0341 	mov.w	r3, r1, lsl #1
  401534:	ea7f 6c22 	mvns.w	ip, r2, asr #24
  401538:	bf18      	it	ne
  40153a:	ea7f 6c23 	mvnsne.w	ip, r3, asr #24
  40153e:	d021      	beq.n	401584 <__addsf3+0x140>
  401540:	ea92 0f03 	teq	r2, r3
  401544:	d004      	beq.n	401550 <__addsf3+0x10c>
  401546:	f092 0f00 	teq	r2, #0
  40154a:	bf08      	it	eq
  40154c:	4608      	moveq	r0, r1
  40154e:	4770      	bx	lr
  401550:	ea90 0f01 	teq	r0, r1
  401554:	bf1c      	itt	ne
  401556:	2000      	movne	r0, #0
  401558:	4770      	bxne	lr
  40155a:	f012 4f7f 	tst.w	r2, #4278190080	; 0xff000000
  40155e:	d104      	bne.n	40156a <__addsf3+0x126>
  401560:	0040      	lsls	r0, r0, #1
  401562:	bf28      	it	cs
  401564:	f040 4000 	orrcs.w	r0, r0, #2147483648	; 0x80000000
  401568:	4770      	bx	lr
  40156a:	f112 7200 	adds.w	r2, r2, #33554432	; 0x2000000
  40156e:	bf3c      	itt	cc
  401570:	f500 0000 	addcc.w	r0, r0, #8388608	; 0x800000
  401574:	4770      	bxcc	lr
  401576:	f000 4300 	and.w	r3, r0, #2147483648	; 0x80000000
  40157a:	f043 40fe 	orr.w	r0, r3, #2130706432	; 0x7f000000
  40157e:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
  401582:	4770      	bx	lr
  401584:	ea7f 6222 	mvns.w	r2, r2, asr #24
  401588:	bf16      	itet	ne
  40158a:	4608      	movne	r0, r1
  40158c:	ea7f 6323 	mvnseq.w	r3, r3, asr #24
  401590:	4601      	movne	r1, r0
  401592:	0242      	lsls	r2, r0, #9
  401594:	bf06      	itte	eq
  401596:	ea5f 2341 	movseq.w	r3, r1, lsl #9
  40159a:	ea90 0f01 	teqeq	r0, r1
  40159e:	f440 0080 	orrne.w	r0, r0, #4194304	; 0x400000
  4015a2:	4770      	bx	lr

004015a4 <__aeabi_ui2f>:
  4015a4:	f04f 0300 	mov.w	r3, #0
  4015a8:	e004      	b.n	4015b4 <__aeabi_i2f+0x8>
  4015aa:	bf00      	nop

004015ac <__aeabi_i2f>:
  4015ac:	f010 4300 	ands.w	r3, r0, #2147483648	; 0x80000000
  4015b0:	bf48      	it	mi
  4015b2:	4240      	negmi	r0, r0
  4015b4:	ea5f 0c00 	movs.w	ip, r0
  4015b8:	bf08      	it	eq
  4015ba:	4770      	bxeq	lr
  4015bc:	f043 4396 	orr.w	r3, r3, #1258291200	; 0x4b000000
  4015c0:	4601      	mov	r1, r0
  4015c2:	f04f 0000 	mov.w	r0, #0
  4015c6:	e01c      	b.n	401602 <__aeabi_l2f+0x2a>

004015c8 <__aeabi_ul2f>:
  4015c8:	ea50 0201 	orrs.w	r2, r0, r1
  4015cc:	bf08      	it	eq
  4015ce:	4770      	bxeq	lr
  4015d0:	f04f 0300 	mov.w	r3, #0
  4015d4:	e00a      	b.n	4015ec <__aeabi_l2f+0x14>
  4015d6:	bf00      	nop

004015d8 <__aeabi_l2f>:
  4015d8:	ea50 0201 	orrs.w	r2, r0, r1
  4015dc:	bf08      	it	eq
  4015de:	4770      	bxeq	lr
  4015e0:	f011 4300 	ands.w	r3, r1, #2147483648	; 0x80000000
  4015e4:	d502      	bpl.n	4015ec <__aeabi_l2f+0x14>
  4015e6:	4240      	negs	r0, r0
  4015e8:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
  4015ec:	ea5f 0c01 	movs.w	ip, r1
  4015f0:	bf02      	ittt	eq
  4015f2:	4684      	moveq	ip, r0
  4015f4:	4601      	moveq	r1, r0
  4015f6:	2000      	moveq	r0, #0
  4015f8:	f043 43b6 	orr.w	r3, r3, #1526726656	; 0x5b000000
  4015fc:	bf08      	it	eq
  4015fe:	f1a3 5380 	subeq.w	r3, r3, #268435456	; 0x10000000
  401602:	f5a3 0300 	sub.w	r3, r3, #8388608	; 0x800000
  401606:	fabc f28c 	clz	r2, ip
  40160a:	3a08      	subs	r2, #8
  40160c:	eba3 53c2 	sub.w	r3, r3, r2, lsl #23
  401610:	db10      	blt.n	401634 <__aeabi_l2f+0x5c>
  401612:	fa01 fc02 	lsl.w	ip, r1, r2
  401616:	4463      	add	r3, ip
  401618:	fa00 fc02 	lsl.w	ip, r0, r2
  40161c:	f1c2 0220 	rsb	r2, r2, #32
  401620:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
  401624:	fa20 f202 	lsr.w	r2, r0, r2
  401628:	eb43 0002 	adc.w	r0, r3, r2
  40162c:	bf08      	it	eq
  40162e:	f020 0001 	biceq.w	r0, r0, #1
  401632:	4770      	bx	lr
  401634:	f102 0220 	add.w	r2, r2, #32
  401638:	fa01 fc02 	lsl.w	ip, r1, r2
  40163c:	f1c2 0220 	rsb	r2, r2, #32
  401640:	ea50 004c 	orrs.w	r0, r0, ip, lsl #1
  401644:	fa21 f202 	lsr.w	r2, r1, r2
  401648:	eb43 0002 	adc.w	r0, r3, r2
  40164c:	bf08      	it	eq
  40164e:	ea20 70dc 	biceq.w	r0, r0, ip, lsr #31
  401652:	4770      	bx	lr

00401654 <__libc_init_array>:
  401654:	b570      	push	{r4, r5, r6, lr}
  401656:	4e0f      	ldr	r6, [pc, #60]	; (401694 <__libc_init_array+0x40>)
  401658:	4d0f      	ldr	r5, [pc, #60]	; (401698 <__libc_init_array+0x44>)
  40165a:	1b76      	subs	r6, r6, r5
  40165c:	10b6      	asrs	r6, r6, #2
  40165e:	bf18      	it	ne
  401660:	2400      	movne	r4, #0
  401662:	d005      	beq.n	401670 <__libc_init_array+0x1c>
  401664:	3401      	adds	r4, #1
  401666:	f855 3b04 	ldr.w	r3, [r5], #4
  40166a:	4798      	blx	r3
  40166c:	42a6      	cmp	r6, r4
  40166e:	d1f9      	bne.n	401664 <__libc_init_array+0x10>
  401670:	4e0a      	ldr	r6, [pc, #40]	; (40169c <__libc_init_array+0x48>)
  401672:	4d0b      	ldr	r5, [pc, #44]	; (4016a0 <__libc_init_array+0x4c>)
  401674:	f002 fff0 	bl	404658 <_init>
  401678:	1b76      	subs	r6, r6, r5
  40167a:	10b6      	asrs	r6, r6, #2
  40167c:	bf18      	it	ne
  40167e:	2400      	movne	r4, #0
  401680:	d006      	beq.n	401690 <__libc_init_array+0x3c>
  401682:	3401      	adds	r4, #1
  401684:	f855 3b04 	ldr.w	r3, [r5], #4
  401688:	4798      	blx	r3
  40168a:	42a6      	cmp	r6, r4
  40168c:	d1f9      	bne.n	401682 <__libc_init_array+0x2e>
  40168e:	bd70      	pop	{r4, r5, r6, pc}
  401690:	bd70      	pop	{r4, r5, r6, pc}
  401692:	bf00      	nop
  401694:	00404664 	.word	0x00404664
  401698:	00404664 	.word	0x00404664
  40169c:	0040466c 	.word	0x0040466c
  4016a0:	00404664 	.word	0x00404664

004016a4 <iprintf>:
  4016a4:	b40f      	push	{r0, r1, r2, r3}
  4016a6:	b510      	push	{r4, lr}
  4016a8:	4b07      	ldr	r3, [pc, #28]	; (4016c8 <iprintf+0x24>)
  4016aa:	b082      	sub	sp, #8
  4016ac:	ac04      	add	r4, sp, #16
  4016ae:	f854 2b04 	ldr.w	r2, [r4], #4
  4016b2:	6818      	ldr	r0, [r3, #0]
  4016b4:	4623      	mov	r3, r4
  4016b6:	6881      	ldr	r1, [r0, #8]
  4016b8:	9401      	str	r4, [sp, #4]
  4016ba:	f000 f9ad 	bl	401a18 <_vfiprintf_r>
  4016be:	b002      	add	sp, #8
  4016c0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  4016c4:	b004      	add	sp, #16
  4016c6:	4770      	bx	lr
  4016c8:	20000108 	.word	0x20000108

004016cc <memset>:
  4016cc:	b470      	push	{r4, r5, r6}
  4016ce:	0786      	lsls	r6, r0, #30
  4016d0:	d046      	beq.n	401760 <memset+0x94>
  4016d2:	1e54      	subs	r4, r2, #1
  4016d4:	2a00      	cmp	r2, #0
  4016d6:	d041      	beq.n	40175c <memset+0x90>
  4016d8:	b2ca      	uxtb	r2, r1
  4016da:	4603      	mov	r3, r0
  4016dc:	e002      	b.n	4016e4 <memset+0x18>
  4016de:	f114 34ff 	adds.w	r4, r4, #4294967295
  4016e2:	d33b      	bcc.n	40175c <memset+0x90>
  4016e4:	f803 2b01 	strb.w	r2, [r3], #1
  4016e8:	079d      	lsls	r5, r3, #30
  4016ea:	d1f8      	bne.n	4016de <memset+0x12>
  4016ec:	2c03      	cmp	r4, #3
  4016ee:	d92e      	bls.n	40174e <memset+0x82>
  4016f0:	b2cd      	uxtb	r5, r1
  4016f2:	ea45 2505 	orr.w	r5, r5, r5, lsl #8
  4016f6:	2c0f      	cmp	r4, #15
  4016f8:	ea45 4505 	orr.w	r5, r5, r5, lsl #16
  4016fc:	d919      	bls.n	401732 <memset+0x66>
  4016fe:	4626      	mov	r6, r4
  401700:	f103 0210 	add.w	r2, r3, #16
  401704:	3e10      	subs	r6, #16
  401706:	2e0f      	cmp	r6, #15
  401708:	f842 5c10 	str.w	r5, [r2, #-16]
  40170c:	f842 5c0c 	str.w	r5, [r2, #-12]
  401710:	f842 5c08 	str.w	r5, [r2, #-8]
  401714:	f842 5c04 	str.w	r5, [r2, #-4]
  401718:	f102 0210 	add.w	r2, r2, #16
  40171c:	d8f2      	bhi.n	401704 <memset+0x38>
  40171e:	f1a4 0210 	sub.w	r2, r4, #16
  401722:	f022 020f 	bic.w	r2, r2, #15
  401726:	f004 040f 	and.w	r4, r4, #15
  40172a:	3210      	adds	r2, #16
  40172c:	2c03      	cmp	r4, #3
  40172e:	4413      	add	r3, r2
  401730:	d90d      	bls.n	40174e <memset+0x82>
  401732:	461e      	mov	r6, r3
  401734:	4622      	mov	r2, r4
  401736:	3a04      	subs	r2, #4
  401738:	2a03      	cmp	r2, #3
  40173a:	f846 5b04 	str.w	r5, [r6], #4
  40173e:	d8fa      	bhi.n	401736 <memset+0x6a>
  401740:	1f22      	subs	r2, r4, #4
  401742:	f022 0203 	bic.w	r2, r2, #3
  401746:	3204      	adds	r2, #4
  401748:	4413      	add	r3, r2
  40174a:	f004 0403 	and.w	r4, r4, #3
  40174e:	b12c      	cbz	r4, 40175c <memset+0x90>
  401750:	b2c9      	uxtb	r1, r1
  401752:	441c      	add	r4, r3
  401754:	f803 1b01 	strb.w	r1, [r3], #1
  401758:	429c      	cmp	r4, r3
  40175a:	d1fb      	bne.n	401754 <memset+0x88>
  40175c:	bc70      	pop	{r4, r5, r6}
  40175e:	4770      	bx	lr
  401760:	4614      	mov	r4, r2
  401762:	4603      	mov	r3, r0
  401764:	e7c2      	b.n	4016ec <memset+0x20>
  401766:	bf00      	nop

00401768 <_puts_r>:
  401768:	b5f0      	push	{r4, r5, r6, r7, lr}
  40176a:	4605      	mov	r5, r0
  40176c:	b089      	sub	sp, #36	; 0x24
  40176e:	4608      	mov	r0, r1
  401770:	460c      	mov	r4, r1
  401772:	2701      	movs	r7, #1
  401774:	f000 f8e2 	bl	40193c <strlen>
  401778:	2602      	movs	r6, #2
  40177a:	19c3      	adds	r3, r0, r7
  40177c:	4913      	ldr	r1, [pc, #76]	; (4017cc <_puts_r+0x64>)
  40177e:	9303      	str	r3, [sp, #12]
  401780:	6bab      	ldr	r3, [r5, #56]	; 0x38
  401782:	aa04      	add	r2, sp, #16
  401784:	9404      	str	r4, [sp, #16]
  401786:	9005      	str	r0, [sp, #20]
  401788:	68ac      	ldr	r4, [r5, #8]
  40178a:	9707      	str	r7, [sp, #28]
  40178c:	9602      	str	r6, [sp, #8]
  40178e:	9106      	str	r1, [sp, #24]
  401790:	9201      	str	r2, [sp, #4]
  401792:	b1b3      	cbz	r3, 4017c2 <_puts_r+0x5a>
  401794:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  401798:	049a      	lsls	r2, r3, #18
  40179a:	d406      	bmi.n	4017aa <_puts_r+0x42>
  40179c:	6e62      	ldr	r2, [r4, #100]	; 0x64
  40179e:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
  4017a2:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
  4017a6:	81a3      	strh	r3, [r4, #12]
  4017a8:	6662      	str	r2, [r4, #100]	; 0x64
  4017aa:	4621      	mov	r1, r4
  4017ac:	4628      	mov	r0, r5
  4017ae:	aa01      	add	r2, sp, #4
  4017b0:	f001 fabe 	bl	402d30 <__sfvwrite_r>
  4017b4:	2800      	cmp	r0, #0
  4017b6:	bf14      	ite	ne
  4017b8:	f04f 30ff 	movne.w	r0, #4294967295
  4017bc:	200a      	moveq	r0, #10
  4017be:	b009      	add	sp, #36	; 0x24
  4017c0:	bdf0      	pop	{r4, r5, r6, r7, pc}
  4017c2:	4628      	mov	r0, r5
  4017c4:	f001 f8fc 	bl	4029c0 <__sinit>
  4017c8:	e7e4      	b.n	401794 <_puts_r+0x2c>
  4017ca:	bf00      	nop
  4017cc:	004044d0 	.word	0x004044d0

004017d0 <puts>:
  4017d0:	4b02      	ldr	r3, [pc, #8]	; (4017dc <puts+0xc>)
  4017d2:	4601      	mov	r1, r0
  4017d4:	6818      	ldr	r0, [r3, #0]
  4017d6:	f7ff bfc7 	b.w	401768 <_puts_r>
  4017da:	bf00      	nop
  4017dc:	20000108 	.word	0x20000108

004017e0 <setbuf>:
  4017e0:	2900      	cmp	r1, #0
  4017e2:	bf0c      	ite	eq
  4017e4:	2202      	moveq	r2, #2
  4017e6:	2200      	movne	r2, #0
  4017e8:	f44f 6380 	mov.w	r3, #1024	; 0x400
  4017ec:	f000 b800 	b.w	4017f0 <setvbuf>

004017f0 <setvbuf>:
  4017f0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
  4017f4:	4d50      	ldr	r5, [pc, #320]	; (401938 <setvbuf+0x148>)
  4017f6:	b083      	sub	sp, #12
  4017f8:	682d      	ldr	r5, [r5, #0]
  4017fa:	4604      	mov	r4, r0
  4017fc:	460f      	mov	r7, r1
  4017fe:	4690      	mov	r8, r2
  401800:	461e      	mov	r6, r3
  401802:	b115      	cbz	r5, 40180a <setvbuf+0x1a>
  401804:	6bab      	ldr	r3, [r5, #56]	; 0x38
  401806:	2b00      	cmp	r3, #0
  401808:	d077      	beq.n	4018fa <setvbuf+0x10a>
  40180a:	f1b8 0f02 	cmp.w	r8, #2
  40180e:	d004      	beq.n	40181a <setvbuf+0x2a>
  401810:	f1b8 0f01 	cmp.w	r8, #1
  401814:	d87d      	bhi.n	401912 <setvbuf+0x122>
  401816:	2e00      	cmp	r6, #0
  401818:	db7b      	blt.n	401912 <setvbuf+0x122>
  40181a:	4621      	mov	r1, r4
  40181c:	4628      	mov	r0, r5
  40181e:	f001 f83b 	bl	402898 <_fflush_r>
  401822:	6b21      	ldr	r1, [r4, #48]	; 0x30
  401824:	b141      	cbz	r1, 401838 <setvbuf+0x48>
  401826:	f104 0340 	add.w	r3, r4, #64	; 0x40
  40182a:	4299      	cmp	r1, r3
  40182c:	d002      	beq.n	401834 <setvbuf+0x44>
  40182e:	4628      	mov	r0, r5
  401830:	f001 f998 	bl	402b64 <_free_r>
  401834:	2300      	movs	r3, #0
  401836:	6323      	str	r3, [r4, #48]	; 0x30
  401838:	2200      	movs	r2, #0
  40183a:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  40183e:	61a2      	str	r2, [r4, #24]
  401840:	6062      	str	r2, [r4, #4]
  401842:	061a      	lsls	r2, r3, #24
  401844:	d452      	bmi.n	4018ec <setvbuf+0xfc>
  401846:	f423 634a 	bic.w	r3, r3, #3232	; 0xca0
  40184a:	f023 0303 	bic.w	r3, r3, #3
  40184e:	f1b8 0f02 	cmp.w	r8, #2
  401852:	81a3      	strh	r3, [r4, #12]
  401854:	d037      	beq.n	4018c6 <setvbuf+0xd6>
  401856:	ab01      	add	r3, sp, #4
  401858:	466a      	mov	r2, sp
  40185a:	4621      	mov	r1, r4
  40185c:	4628      	mov	r0, r5
  40185e:	f001 fc17 	bl	403090 <__swhatbuf_r>
  401862:	89a3      	ldrh	r3, [r4, #12]
  401864:	4318      	orrs	r0, r3
  401866:	81a0      	strh	r0, [r4, #12]
  401868:	b316      	cbz	r6, 4018b0 <setvbuf+0xc0>
  40186a:	b317      	cbz	r7, 4018b2 <setvbuf+0xc2>
  40186c:	6bab      	ldr	r3, [r5, #56]	; 0x38
  40186e:	2b00      	cmp	r3, #0
  401870:	d04b      	beq.n	40190a <setvbuf+0x11a>
  401872:	9b00      	ldr	r3, [sp, #0]
  401874:	6027      	str	r7, [r4, #0]
  401876:	429e      	cmp	r6, r3
  401878:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  40187c:	6127      	str	r7, [r4, #16]
  40187e:	bf1c      	itt	ne
  401880:	f443 6300 	orrne.w	r3, r3, #2048	; 0x800
  401884:	81a3      	strhne	r3, [r4, #12]
  401886:	f1b8 0f01 	cmp.w	r8, #1
  40188a:	bf04      	itt	eq
  40188c:	f043 0301 	orreq.w	r3, r3, #1
  401890:	81a3      	strheq	r3, [r4, #12]
  401892:	b29b      	uxth	r3, r3
  401894:	f013 0008 	ands.w	r0, r3, #8
  401898:	6166      	str	r6, [r4, #20]
  40189a:	d023      	beq.n	4018e4 <setvbuf+0xf4>
  40189c:	f013 0001 	ands.w	r0, r3, #1
  4018a0:	d02f      	beq.n	401902 <setvbuf+0x112>
  4018a2:	2000      	movs	r0, #0
  4018a4:	4276      	negs	r6, r6
  4018a6:	61a6      	str	r6, [r4, #24]
  4018a8:	60a0      	str	r0, [r4, #8]
  4018aa:	b003      	add	sp, #12
  4018ac:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
  4018b0:	9e00      	ldr	r6, [sp, #0]
  4018b2:	4630      	mov	r0, r6
  4018b4:	f001 fc5e 	bl	403174 <malloc>
  4018b8:	4607      	mov	r7, r0
  4018ba:	b368      	cbz	r0, 401918 <setvbuf+0x128>
  4018bc:	89a3      	ldrh	r3, [r4, #12]
  4018be:	f043 0380 	orr.w	r3, r3, #128	; 0x80
  4018c2:	81a3      	strh	r3, [r4, #12]
  4018c4:	e7d2      	b.n	40186c <setvbuf+0x7c>
  4018c6:	2000      	movs	r0, #0
  4018c8:	2500      	movs	r5, #0
  4018ca:	2101      	movs	r1, #1
  4018cc:	f104 0243 	add.w	r2, r4, #67	; 0x43
  4018d0:	f043 0302 	orr.w	r3, r3, #2
  4018d4:	81a3      	strh	r3, [r4, #12]
  4018d6:	60a5      	str	r5, [r4, #8]
  4018d8:	6161      	str	r1, [r4, #20]
  4018da:	6022      	str	r2, [r4, #0]
  4018dc:	6122      	str	r2, [r4, #16]
  4018de:	b003      	add	sp, #12
  4018e0:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
  4018e4:	60a0      	str	r0, [r4, #8]
  4018e6:	b003      	add	sp, #12
  4018e8:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
  4018ec:	6921      	ldr	r1, [r4, #16]
  4018ee:	4628      	mov	r0, r5
  4018f0:	f001 f938 	bl	402b64 <_free_r>
  4018f4:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  4018f8:	e7a5      	b.n	401846 <setvbuf+0x56>
  4018fa:	4628      	mov	r0, r5
  4018fc:	f001 f860 	bl	4029c0 <__sinit>
  401900:	e783      	b.n	40180a <setvbuf+0x1a>
  401902:	60a6      	str	r6, [r4, #8]
  401904:	b003      	add	sp, #12
  401906:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
  40190a:	4628      	mov	r0, r5
  40190c:	f001 f858 	bl	4029c0 <__sinit>
  401910:	e7af      	b.n	401872 <setvbuf+0x82>
  401912:	f04f 30ff 	mov.w	r0, #4294967295
  401916:	e7e2      	b.n	4018de <setvbuf+0xee>
  401918:	f8dd 9000 	ldr.w	r9, [sp]
  40191c:	45b1      	cmp	r9, r6
  40191e:	d006      	beq.n	40192e <setvbuf+0x13e>
  401920:	4648      	mov	r0, r9
  401922:	f001 fc27 	bl	403174 <malloc>
  401926:	4607      	mov	r7, r0
  401928:	b108      	cbz	r0, 40192e <setvbuf+0x13e>
  40192a:	464e      	mov	r6, r9
  40192c:	e7c6      	b.n	4018bc <setvbuf+0xcc>
  40192e:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  401932:	f04f 30ff 	mov.w	r0, #4294967295
  401936:	e7c7      	b.n	4018c8 <setvbuf+0xd8>
  401938:	20000108 	.word	0x20000108

0040193c <strlen>:
  40193c:	f020 0103 	bic.w	r1, r0, #3
  401940:	f010 0003 	ands.w	r0, r0, #3
  401944:	f1c0 0000 	rsb	r0, r0, #0
  401948:	f851 3b04 	ldr.w	r3, [r1], #4
  40194c:	f100 0c04 	add.w	ip, r0, #4
  401950:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
  401954:	f06f 0200 	mvn.w	r2, #0
  401958:	bf1c      	itt	ne
  40195a:	fa22 f20c 	lsrne.w	r2, r2, ip
  40195e:	4313      	orrne	r3, r2
  401960:	f04f 0c01 	mov.w	ip, #1
  401964:	ea4c 2c0c 	orr.w	ip, ip, ip, lsl #8
  401968:	ea4c 4c0c 	orr.w	ip, ip, ip, lsl #16
  40196c:	eba3 020c 	sub.w	r2, r3, ip
  401970:	ea22 0203 	bic.w	r2, r2, r3
  401974:	ea12 12cc 	ands.w	r2, r2, ip, lsl #7
  401978:	bf04      	itt	eq
  40197a:	f851 3b04 	ldreq.w	r3, [r1], #4
  40197e:	3004      	addeq	r0, #4
  401980:	d0f4      	beq.n	40196c <strlen+0x30>
  401982:	f1c2 0100 	rsb	r1, r2, #0
  401986:	ea02 0201 	and.w	r2, r2, r1
  40198a:	fab2 f282 	clz	r2, r2
  40198e:	f1c2 021f 	rsb	r2, r2, #31
  401992:	eb00 00d2 	add.w	r0, r0, r2, lsr #3
  401996:	4770      	bx	lr

00401998 <__sprint_r.part.0>:
  401998:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
  40199c:	6e4b      	ldr	r3, [r1, #100]	; 0x64
  40199e:	4693      	mov	fp, r2
  4019a0:	049c      	lsls	r4, r3, #18
  4019a2:	d52f      	bpl.n	401a04 <__sprint_r.part.0+0x6c>
  4019a4:	6893      	ldr	r3, [r2, #8]
  4019a6:	6812      	ldr	r2, [r2, #0]
  4019a8:	b353      	cbz	r3, 401a00 <__sprint_r.part.0+0x68>
  4019aa:	460e      	mov	r6, r1
  4019ac:	4607      	mov	r7, r0
  4019ae:	f102 0908 	add.w	r9, r2, #8
  4019b2:	e919 0420 	ldmdb	r9, {r5, sl}
  4019b6:	ea5f 089a 	movs.w	r8, sl, lsr #2
  4019ba:	d017      	beq.n	4019ec <__sprint_r.part.0+0x54>
  4019bc:	2400      	movs	r4, #0
  4019be:	3d04      	subs	r5, #4
  4019c0:	e001      	b.n	4019c6 <__sprint_r.part.0+0x2e>
  4019c2:	45a0      	cmp	r8, r4
  4019c4:	d010      	beq.n	4019e8 <__sprint_r.part.0+0x50>
  4019c6:	4632      	mov	r2, r6
  4019c8:	f855 1f04 	ldr.w	r1, [r5, #4]!
  4019cc:	4638      	mov	r0, r7
  4019ce:	f001 f867 	bl	402aa0 <_fputwc_r>
  4019d2:	1c43      	adds	r3, r0, #1
  4019d4:	f104 0401 	add.w	r4, r4, #1
  4019d8:	d1f3      	bne.n	4019c2 <__sprint_r.part.0+0x2a>
  4019da:	2300      	movs	r3, #0
  4019dc:	f8cb 3008 	str.w	r3, [fp, #8]
  4019e0:	f8cb 3004 	str.w	r3, [fp, #4]
  4019e4:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
  4019e8:	f8db 3008 	ldr.w	r3, [fp, #8]
  4019ec:	f02a 0a03 	bic.w	sl, sl, #3
  4019f0:	eba3 030a 	sub.w	r3, r3, sl
  4019f4:	f8cb 3008 	str.w	r3, [fp, #8]
  4019f8:	f109 0908 	add.w	r9, r9, #8
  4019fc:	2b00      	cmp	r3, #0
  4019fe:	d1d8      	bne.n	4019b2 <__sprint_r.part.0+0x1a>
  401a00:	2000      	movs	r0, #0
  401a02:	e7ea      	b.n	4019da <__sprint_r.part.0+0x42>
  401a04:	f001 f994 	bl	402d30 <__sfvwrite_r>
  401a08:	2300      	movs	r3, #0
  401a0a:	f8cb 3008 	str.w	r3, [fp, #8]
  401a0e:	f8cb 3004 	str.w	r3, [fp, #4]
  401a12:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
  401a16:	bf00      	nop

00401a18 <_vfiprintf_r>:
  401a18:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  401a1c:	b0ad      	sub	sp, #180	; 0xb4
  401a1e:	461d      	mov	r5, r3
  401a20:	9101      	str	r1, [sp, #4]
  401a22:	4691      	mov	r9, r2
  401a24:	9308      	str	r3, [sp, #32]
  401a26:	9006      	str	r0, [sp, #24]
  401a28:	b118      	cbz	r0, 401a32 <_vfiprintf_r+0x1a>
  401a2a:	6b83      	ldr	r3, [r0, #56]	; 0x38
  401a2c:	2b00      	cmp	r3, #0
  401a2e:	f000 80e0 	beq.w	401bf2 <_vfiprintf_r+0x1da>
  401a32:	9c01      	ldr	r4, [sp, #4]
  401a34:	f9b4 000c 	ldrsh.w	r0, [r4, #12]
  401a38:	b281      	uxth	r1, r0
  401a3a:	048b      	lsls	r3, r1, #18
  401a3c:	d407      	bmi.n	401a4e <_vfiprintf_r+0x36>
  401a3e:	6e63      	ldr	r3, [r4, #100]	; 0x64
  401a40:	f440 5100 	orr.w	r1, r0, #8192	; 0x2000
  401a44:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
  401a48:	81a1      	strh	r1, [r4, #12]
  401a4a:	6663      	str	r3, [r4, #100]	; 0x64
  401a4c:	b289      	uxth	r1, r1
  401a4e:	070f      	lsls	r7, r1, #28
  401a50:	f140 80b1 	bpl.w	401bb6 <_vfiprintf_r+0x19e>
  401a54:	9b01      	ldr	r3, [sp, #4]
  401a56:	691b      	ldr	r3, [r3, #16]
  401a58:	2b00      	cmp	r3, #0
  401a5a:	f000 80ac 	beq.w	401bb6 <_vfiprintf_r+0x19e>
  401a5e:	f001 011a 	and.w	r1, r1, #26
  401a62:	290a      	cmp	r1, #10
  401a64:	f000 80b5 	beq.w	401bd2 <_vfiprintf_r+0x1ba>
  401a68:	2300      	movs	r3, #0
  401a6a:	f10d 0a70 	add.w	sl, sp, #112	; 0x70
  401a6e:	46d3      	mov	fp, sl
  401a70:	930b      	str	r3, [sp, #44]	; 0x2c
  401a72:	9304      	str	r3, [sp, #16]
  401a74:	9311      	str	r3, [sp, #68]	; 0x44
  401a76:	9310      	str	r3, [sp, #64]	; 0x40
  401a78:	f8cd a03c 	str.w	sl, [sp, #60]	; 0x3c
  401a7c:	f899 3000 	ldrb.w	r3, [r9]
  401a80:	464c      	mov	r4, r9
  401a82:	b1fb      	cbz	r3, 401ac4 <_vfiprintf_r+0xac>
  401a84:	2b25      	cmp	r3, #37	; 0x25
  401a86:	d102      	bne.n	401a8e <_vfiprintf_r+0x76>
  401a88:	e01c      	b.n	401ac4 <_vfiprintf_r+0xac>
  401a8a:	2b25      	cmp	r3, #37	; 0x25
  401a8c:	d003      	beq.n	401a96 <_vfiprintf_r+0x7e>
  401a8e:	f814 3f01 	ldrb.w	r3, [r4, #1]!
  401a92:	2b00      	cmp	r3, #0
  401a94:	d1f9      	bne.n	401a8a <_vfiprintf_r+0x72>
  401a96:	eba4 0509 	sub.w	r5, r4, r9
  401a9a:	b19d      	cbz	r5, 401ac4 <_vfiprintf_r+0xac>
  401a9c:	9b10      	ldr	r3, [sp, #64]	; 0x40
  401a9e:	9a11      	ldr	r2, [sp, #68]	; 0x44
  401aa0:	3301      	adds	r3, #1
  401aa2:	442a      	add	r2, r5
  401aa4:	2b07      	cmp	r3, #7
  401aa6:	f8cb 9000 	str.w	r9, [fp]
  401aaa:	f8cb 5004 	str.w	r5, [fp, #4]
  401aae:	9211      	str	r2, [sp, #68]	; 0x44
  401ab0:	9310      	str	r3, [sp, #64]	; 0x40
  401ab2:	dd7a      	ble.n	401baa <_vfiprintf_r+0x192>
  401ab4:	2a00      	cmp	r2, #0
  401ab6:	f040 8493 	bne.w	4023e0 <_vfiprintf_r+0x9c8>
  401aba:	46d3      	mov	fp, sl
  401abc:	9b04      	ldr	r3, [sp, #16]
  401abe:	9210      	str	r2, [sp, #64]	; 0x40
  401ac0:	442b      	add	r3, r5
  401ac2:	9304      	str	r3, [sp, #16]
  401ac4:	7823      	ldrb	r3, [r4, #0]
  401ac6:	2b00      	cmp	r3, #0
  401ac8:	f000 83b6 	beq.w	402238 <_vfiprintf_r+0x820>
  401acc:	2000      	movs	r0, #0
  401ace:	f04f 0300 	mov.w	r3, #0
  401ad2:	f104 0901 	add.w	r9, r4, #1
  401ad6:	f88d 3037 	strb.w	r3, [sp, #55]	; 0x37
  401ada:	7862      	ldrb	r2, [r4, #1]
  401adc:	4606      	mov	r6, r0
  401ade:	4605      	mov	r5, r0
  401ae0:	4603      	mov	r3, r0
  401ae2:	f04f 34ff 	mov.w	r4, #4294967295
  401ae6:	f109 0901 	add.w	r9, r9, #1
  401aea:	f1a2 0120 	sub.w	r1, r2, #32
  401aee:	2958      	cmp	r1, #88	; 0x58
  401af0:	f200 830a 	bhi.w	402108 <_vfiprintf_r+0x6f0>
  401af4:	e8df f011 	tbh	[pc, r1, lsl #1]
  401af8:	0308023f 	.word	0x0308023f
  401afc:	02e70308 	.word	0x02e70308
  401b00:	03080308 	.word	0x03080308
  401b04:	03080308 	.word	0x03080308
  401b08:	03080308 	.word	0x03080308
  401b0c:	02ec0080 	.word	0x02ec0080
  401b10:	00880308 	.word	0x00880308
  401b14:	0308027f 	.word	0x0308027f
  401b18:	01db01d6 	.word	0x01db01d6
  401b1c:	01db01db 	.word	0x01db01db
  401b20:	01db01db 	.word	0x01db01db
  401b24:	01db01db 	.word	0x01db01db
  401b28:	01db01db 	.word	0x01db01db
  401b2c:	03080308 	.word	0x03080308
  401b30:	03080308 	.word	0x03080308
  401b34:	03080308 	.word	0x03080308
  401b38:	03080308 	.word	0x03080308
  401b3c:	03080308 	.word	0x03080308
  401b40:	03080247 	.word	0x03080247
  401b44:	03080308 	.word	0x03080308
  401b48:	03080308 	.word	0x03080308
  401b4c:	03080308 	.word	0x03080308
  401b50:	03080308 	.word	0x03080308
  401b54:	024e0308 	.word	0x024e0308
  401b58:	03080308 	.word	0x03080308
  401b5c:	03080308 	.word	0x03080308
  401b60:	02520308 	.word	0x02520308
  401b64:	03080308 	.word	0x03080308
  401b68:	0308025a 	.word	0x0308025a
  401b6c:	03080308 	.word	0x03080308
  401b70:	03080308 	.word	0x03080308
  401b74:	03080308 	.word	0x03080308
  401b78:	03080308 	.word	0x03080308
  401b7c:	01e90308 	.word	0x01e90308
  401b80:	030801fe 	.word	0x030801fe
  401b84:	03080308 	.word	0x03080308
  401b88:	01fe0303 	.word	0x01fe0303
  401b8c:	03080308 	.word	0x03080308
  401b90:	03080299 	.word	0x03080299
  401b94:	008d02f1 	.word	0x008d02f1
  401b98:	02bf02ad 	.word	0x02bf02ad
  401b9c:	02c40308 	.word	0x02c40308
  401ba0:	01c40308 	.word	0x01c40308
  401ba4:	03080308 	.word	0x03080308
  401ba8:	02a6      	.short	0x02a6
  401baa:	f10b 0b08 	add.w	fp, fp, #8
  401bae:	9b04      	ldr	r3, [sp, #16]
  401bb0:	442b      	add	r3, r5
  401bb2:	9304      	str	r3, [sp, #16]
  401bb4:	e786      	b.n	401ac4 <_vfiprintf_r+0xac>
  401bb6:	9c01      	ldr	r4, [sp, #4]
  401bb8:	9806      	ldr	r0, [sp, #24]
  401bba:	4621      	mov	r1, r4
  401bbc:	f000 fd5c 	bl	402678 <__swsetup_r>
  401bc0:	2800      	cmp	r0, #0
  401bc2:	f040 8345 	bne.w	402250 <_vfiprintf_r+0x838>
  401bc6:	89a1      	ldrh	r1, [r4, #12]
  401bc8:	f001 011a 	and.w	r1, r1, #26
  401bcc:	290a      	cmp	r1, #10
  401bce:	f47f af4b 	bne.w	401a68 <_vfiprintf_r+0x50>
  401bd2:	9901      	ldr	r1, [sp, #4]
  401bd4:	f9b1 300e 	ldrsh.w	r3, [r1, #14]
  401bd8:	2b00      	cmp	r3, #0
  401bda:	f6ff af45 	blt.w	401a68 <_vfiprintf_r+0x50>
  401bde:	462b      	mov	r3, r5
  401be0:	464a      	mov	r2, r9
  401be2:	9806      	ldr	r0, [sp, #24]
  401be4:	f000 fd12 	bl	40260c <__sbprintf>
  401be8:	9004      	str	r0, [sp, #16]
  401bea:	9804      	ldr	r0, [sp, #16]
  401bec:	b02d      	add	sp, #180	; 0xb4
  401bee:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  401bf2:	f000 fee5 	bl	4029c0 <__sinit>
  401bf6:	e71c      	b.n	401a32 <_vfiprintf_r+0x1a>
  401bf8:	9908      	ldr	r1, [sp, #32]
  401bfa:	460a      	mov	r2, r1
  401bfc:	680d      	ldr	r5, [r1, #0]
  401bfe:	3204      	adds	r2, #4
  401c00:	2d00      	cmp	r5, #0
  401c02:	9208      	str	r2, [sp, #32]
  401c04:	da02      	bge.n	401c0c <_vfiprintf_r+0x1f4>
  401c06:	426d      	negs	r5, r5
  401c08:	f043 0304 	orr.w	r3, r3, #4
  401c0c:	f899 2000 	ldrb.w	r2, [r9]
  401c10:	e769      	b.n	401ae6 <_vfiprintf_r+0xce>
  401c12:	9507      	str	r5, [sp, #28]
  401c14:	f013 0220 	ands.w	r2, r3, #32
  401c18:	f040 843d 	bne.w	402496 <_vfiprintf_r+0xa7e>
  401c1c:	f013 0110 	ands.w	r1, r3, #16
  401c20:	f040 83e9 	bne.w	4023f6 <_vfiprintf_r+0x9de>
  401c24:	f013 0240 	ands.w	r2, r3, #64	; 0x40
  401c28:	f000 83e5 	beq.w	4023f6 <_vfiprintf_r+0x9de>
  401c2c:	9808      	ldr	r0, [sp, #32]
  401c2e:	460a      	mov	r2, r1
  401c30:	4601      	mov	r1, r0
  401c32:	2700      	movs	r7, #0
  401c34:	3104      	adds	r1, #4
  401c36:	8806      	ldrh	r6, [r0, #0]
  401c38:	9108      	str	r1, [sp, #32]
  401c3a:	f04f 0100 	mov.w	r1, #0
  401c3e:	2500      	movs	r5, #0
  401c40:	f88d 1037 	strb.w	r1, [sp, #55]	; 0x37
  401c44:	1c61      	adds	r1, r4, #1
  401c46:	f000 8177 	beq.w	401f38 <_vfiprintf_r+0x520>
  401c4a:	f023 0180 	bic.w	r1, r3, #128	; 0x80
  401c4e:	9103      	str	r1, [sp, #12]
  401c50:	ea56 0107 	orrs.w	r1, r6, r7
  401c54:	f040 8175 	bne.w	401f42 <_vfiprintf_r+0x52a>
  401c58:	2c00      	cmp	r4, #0
  401c5a:	f040 8354 	bne.w	402306 <_vfiprintf_r+0x8ee>
  401c5e:	2a00      	cmp	r2, #0
  401c60:	f040 8393 	bne.w	40238a <_vfiprintf_r+0x972>
  401c64:	f013 0301 	ands.w	r3, r3, #1
  401c68:	9305      	str	r3, [sp, #20]
  401c6a:	f000 8442 	beq.w	4024f2 <_vfiprintf_r+0xada>
  401c6e:	2330      	movs	r3, #48	; 0x30
  401c70:	f10d 08b0 	add.w	r8, sp, #176	; 0xb0
  401c74:	f808 3d41 	strb.w	r3, [r8, #-65]!
  401c78:	9b05      	ldr	r3, [sp, #20]
  401c7a:	42a3      	cmp	r3, r4
  401c7c:	bfb8      	it	lt
  401c7e:	4623      	movlt	r3, r4
  401c80:	9302      	str	r3, [sp, #8]
  401c82:	b10d      	cbz	r5, 401c88 <_vfiprintf_r+0x270>
  401c84:	3301      	adds	r3, #1
  401c86:	9302      	str	r3, [sp, #8]
  401c88:	9b03      	ldr	r3, [sp, #12]
  401c8a:	f013 0302 	ands.w	r3, r3, #2
  401c8e:	9309      	str	r3, [sp, #36]	; 0x24
  401c90:	d002      	beq.n	401c98 <_vfiprintf_r+0x280>
  401c92:	9b02      	ldr	r3, [sp, #8]
  401c94:	3302      	adds	r3, #2
  401c96:	9302      	str	r3, [sp, #8]
  401c98:	9b03      	ldr	r3, [sp, #12]
  401c9a:	f013 0384 	ands.w	r3, r3, #132	; 0x84
  401c9e:	930a      	str	r3, [sp, #40]	; 0x28
  401ca0:	f040 8261 	bne.w	402166 <_vfiprintf_r+0x74e>
  401ca4:	9b07      	ldr	r3, [sp, #28]
  401ca6:	9a02      	ldr	r2, [sp, #8]
  401ca8:	1a9d      	subs	r5, r3, r2
  401caa:	2d00      	cmp	r5, #0
  401cac:	f340 825b 	ble.w	402166 <_vfiprintf_r+0x74e>
  401cb0:	2d10      	cmp	r5, #16
  401cb2:	f340 8468 	ble.w	402586 <_vfiprintf_r+0xb6e>
  401cb6:	9b10      	ldr	r3, [sp, #64]	; 0x40
  401cb8:	46de      	mov	lr, fp
  401cba:	2710      	movs	r7, #16
  401cbc:	46a3      	mov	fp, r4
  401cbe:	9a11      	ldr	r2, [sp, #68]	; 0x44
  401cc0:	4eb8      	ldr	r6, [pc, #736]	; (401fa4 <_vfiprintf_r+0x58c>)
  401cc2:	4619      	mov	r1, r3
  401cc4:	9c06      	ldr	r4, [sp, #24]
  401cc6:	e007      	b.n	401cd8 <_vfiprintf_r+0x2c0>
  401cc8:	f101 0c02 	add.w	ip, r1, #2
  401ccc:	4601      	mov	r1, r0
  401cce:	f10e 0e08 	add.w	lr, lr, #8
  401cd2:	3d10      	subs	r5, #16
  401cd4:	2d10      	cmp	r5, #16
  401cd6:	dd11      	ble.n	401cfc <_vfiprintf_r+0x2e4>
  401cd8:	1c48      	adds	r0, r1, #1
  401cda:	3210      	adds	r2, #16
  401cdc:	2807      	cmp	r0, #7
  401cde:	9211      	str	r2, [sp, #68]	; 0x44
  401ce0:	e88e 00c0 	stmia.w	lr, {r6, r7}
  401ce4:	9010      	str	r0, [sp, #64]	; 0x40
  401ce6:	ddef      	ble.n	401cc8 <_vfiprintf_r+0x2b0>
  401ce8:	2a00      	cmp	r2, #0
  401cea:	f040 8227 	bne.w	40213c <_vfiprintf_r+0x724>
  401cee:	3d10      	subs	r5, #16
  401cf0:	2d10      	cmp	r5, #16
  401cf2:	4611      	mov	r1, r2
  401cf4:	f04f 0c01 	mov.w	ip, #1
  401cf8:	46d6      	mov	lr, sl
  401cfa:	dced      	bgt.n	401cd8 <_vfiprintf_r+0x2c0>
  401cfc:	465c      	mov	r4, fp
  401cfe:	4661      	mov	r1, ip
  401d00:	46f3      	mov	fp, lr
  401d02:	442a      	add	r2, r5
  401d04:	2907      	cmp	r1, #7
  401d06:	9211      	str	r2, [sp, #68]	; 0x44
  401d08:	f8cb 6000 	str.w	r6, [fp]
  401d0c:	f8cb 5004 	str.w	r5, [fp, #4]
  401d10:	9110      	str	r1, [sp, #64]	; 0x40
  401d12:	f300 82e4 	bgt.w	4022de <_vfiprintf_r+0x8c6>
  401d16:	f89d 5037 	ldrb.w	r5, [sp, #55]	; 0x37
  401d1a:	f10b 0b08 	add.w	fp, fp, #8
  401d1e:	1c48      	adds	r0, r1, #1
  401d20:	2d00      	cmp	r5, #0
  401d22:	f040 8228 	bne.w	402176 <_vfiprintf_r+0x75e>
  401d26:	9b09      	ldr	r3, [sp, #36]	; 0x24
  401d28:	2b00      	cmp	r3, #0
  401d2a:	f000 8242 	beq.w	4021b2 <_vfiprintf_r+0x79a>
  401d2e:	2102      	movs	r1, #2
  401d30:	ab0e      	add	r3, sp, #56	; 0x38
  401d32:	440a      	add	r2, r1
  401d34:	2807      	cmp	r0, #7
  401d36:	9211      	str	r2, [sp, #68]	; 0x44
  401d38:	9010      	str	r0, [sp, #64]	; 0x40
  401d3a:	f8cb 1004 	str.w	r1, [fp, #4]
  401d3e:	f8cb 3000 	str.w	r3, [fp]
  401d42:	f340 8232 	ble.w	4021aa <_vfiprintf_r+0x792>
  401d46:	2a00      	cmp	r2, #0
  401d48:	f040 8378 	bne.w	40243c <_vfiprintf_r+0xa24>
  401d4c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  401d4e:	2001      	movs	r0, #1
  401d50:	2b80      	cmp	r3, #128	; 0x80
  401d52:	4611      	mov	r1, r2
  401d54:	46d3      	mov	fp, sl
  401d56:	f040 8230 	bne.w	4021ba <_vfiprintf_r+0x7a2>
  401d5a:	9b07      	ldr	r3, [sp, #28]
  401d5c:	9d02      	ldr	r5, [sp, #8]
  401d5e:	1b5e      	subs	r6, r3, r5
  401d60:	2e00      	cmp	r6, #0
  401d62:	f340 822a 	ble.w	4021ba <_vfiprintf_r+0x7a2>
  401d66:	2e10      	cmp	r6, #16
  401d68:	f340 8428 	ble.w	4025bc <_vfiprintf_r+0xba4>
  401d6c:	46dc      	mov	ip, fp
  401d6e:	2710      	movs	r7, #16
  401d70:	46a3      	mov	fp, r4
  401d72:	4d8d      	ldr	r5, [pc, #564]	; (401fa8 <_vfiprintf_r+0x590>)
  401d74:	9c06      	ldr	r4, [sp, #24]
  401d76:	e007      	b.n	401d88 <_vfiprintf_r+0x370>
  401d78:	f101 0e02 	add.w	lr, r1, #2
  401d7c:	4601      	mov	r1, r0
  401d7e:	f10c 0c08 	add.w	ip, ip, #8
  401d82:	3e10      	subs	r6, #16
  401d84:	2e10      	cmp	r6, #16
  401d86:	dd11      	ble.n	401dac <_vfiprintf_r+0x394>
  401d88:	1c48      	adds	r0, r1, #1
  401d8a:	3210      	adds	r2, #16
  401d8c:	2807      	cmp	r0, #7
  401d8e:	9211      	str	r2, [sp, #68]	; 0x44
  401d90:	e88c 00a0 	stmia.w	ip, {r5, r7}
  401d94:	9010      	str	r0, [sp, #64]	; 0x40
  401d96:	ddef      	ble.n	401d78 <_vfiprintf_r+0x360>
  401d98:	2a00      	cmp	r2, #0
  401d9a:	f040 8293 	bne.w	4022c4 <_vfiprintf_r+0x8ac>
  401d9e:	3e10      	subs	r6, #16
  401da0:	2e10      	cmp	r6, #16
  401da2:	f04f 0e01 	mov.w	lr, #1
  401da6:	4611      	mov	r1, r2
  401da8:	46d4      	mov	ip, sl
  401daa:	dced      	bgt.n	401d88 <_vfiprintf_r+0x370>
  401dac:	465c      	mov	r4, fp
  401dae:	46e3      	mov	fp, ip
  401db0:	4432      	add	r2, r6
  401db2:	f1be 0f07 	cmp.w	lr, #7
  401db6:	9211      	str	r2, [sp, #68]	; 0x44
  401db8:	e88b 0060 	stmia.w	fp, {r5, r6}
  401dbc:	f8cd e040 	str.w	lr, [sp, #64]	; 0x40
  401dc0:	f300 8356 	bgt.w	402470 <_vfiprintf_r+0xa58>
  401dc4:	9b05      	ldr	r3, [sp, #20]
  401dc6:	f10b 0b08 	add.w	fp, fp, #8
  401dca:	1ae4      	subs	r4, r4, r3
  401dcc:	2c00      	cmp	r4, #0
  401dce:	f10e 0001 	add.w	r0, lr, #1
  401dd2:	4671      	mov	r1, lr
  401dd4:	f300 81f6 	bgt.w	4021c4 <_vfiprintf_r+0x7ac>
  401dd8:	9905      	ldr	r1, [sp, #20]
  401dda:	2807      	cmp	r0, #7
  401ddc:	440a      	add	r2, r1
  401dde:	9211      	str	r2, [sp, #68]	; 0x44
  401de0:	f8cb 8000 	str.w	r8, [fp]
  401de4:	f8cb 1004 	str.w	r1, [fp, #4]
  401de8:	9010      	str	r0, [sp, #64]	; 0x40
  401dea:	f340 8252 	ble.w	402292 <_vfiprintf_r+0x87a>
  401dee:	2a00      	cmp	r2, #0
  401df0:	f040 82eb 	bne.w	4023ca <_vfiprintf_r+0x9b2>
  401df4:	9b03      	ldr	r3, [sp, #12]
  401df6:	9210      	str	r2, [sp, #64]	; 0x40
  401df8:	0758      	lsls	r0, r3, #29
  401dfa:	d538      	bpl.n	401e6e <_vfiprintf_r+0x456>
  401dfc:	9b07      	ldr	r3, [sp, #28]
  401dfe:	9902      	ldr	r1, [sp, #8]
  401e00:	1a5c      	subs	r4, r3, r1
  401e02:	2c00      	cmp	r4, #0
  401e04:	f340 82b7 	ble.w	402376 <_vfiprintf_r+0x95e>
  401e08:	46d3      	mov	fp, sl
  401e0a:	2c10      	cmp	r4, #16
  401e0c:	f340 83ca 	ble.w	4025a4 <_vfiprintf_r+0xb8c>
  401e10:	2510      	movs	r5, #16
  401e12:	9910      	ldr	r1, [sp, #64]	; 0x40
  401e14:	4e63      	ldr	r6, [pc, #396]	; (401fa4 <_vfiprintf_r+0x58c>)
  401e16:	9f06      	ldr	r7, [sp, #24]
  401e18:	f8dd 8004 	ldr.w	r8, [sp, #4]
  401e1c:	e006      	b.n	401e2c <_vfiprintf_r+0x414>
  401e1e:	1c88      	adds	r0, r1, #2
  401e20:	4619      	mov	r1, r3
  401e22:	f10b 0b08 	add.w	fp, fp, #8
  401e26:	3c10      	subs	r4, #16
  401e28:	2c10      	cmp	r4, #16
  401e2a:	dd13      	ble.n	401e54 <_vfiprintf_r+0x43c>
  401e2c:	1c4b      	adds	r3, r1, #1
  401e2e:	3210      	adds	r2, #16
  401e30:	2b07      	cmp	r3, #7
  401e32:	9211      	str	r2, [sp, #68]	; 0x44
  401e34:	f8cb 6000 	str.w	r6, [fp]
  401e38:	f8cb 5004 	str.w	r5, [fp, #4]
  401e3c:	9310      	str	r3, [sp, #64]	; 0x40
  401e3e:	ddee      	ble.n	401e1e <_vfiprintf_r+0x406>
  401e40:	2a00      	cmp	r2, #0
  401e42:	f040 8209 	bne.w	402258 <_vfiprintf_r+0x840>
  401e46:	3c10      	subs	r4, #16
  401e48:	2c10      	cmp	r4, #16
  401e4a:	f04f 0001 	mov.w	r0, #1
  401e4e:	4611      	mov	r1, r2
  401e50:	46d3      	mov	fp, sl
  401e52:	dceb      	bgt.n	401e2c <_vfiprintf_r+0x414>
  401e54:	4422      	add	r2, r4
  401e56:	2807      	cmp	r0, #7
  401e58:	9211      	str	r2, [sp, #68]	; 0x44
  401e5a:	f8cb 6000 	str.w	r6, [fp]
  401e5e:	f8cb 4004 	str.w	r4, [fp, #4]
  401e62:	9010      	str	r0, [sp, #64]	; 0x40
  401e64:	f340 8220 	ble.w	4022a8 <_vfiprintf_r+0x890>
  401e68:	2a00      	cmp	r2, #0
  401e6a:	f040 8354 	bne.w	402516 <_vfiprintf_r+0xafe>
  401e6e:	9b04      	ldr	r3, [sp, #16]
  401e70:	9a07      	ldr	r2, [sp, #28]
  401e72:	9902      	ldr	r1, [sp, #8]
  401e74:	428a      	cmp	r2, r1
  401e76:	bfac      	ite	ge
  401e78:	189b      	addge	r3, r3, r2
  401e7a:	185b      	addlt	r3, r3, r1
  401e7c:	9304      	str	r3, [sp, #16]
  401e7e:	e21c      	b.n	4022ba <_vfiprintf_r+0x8a2>
  401e80:	9507      	str	r5, [sp, #28]
  401e82:	069e      	lsls	r6, r3, #26
  401e84:	f100 8313 	bmi.w	4024ae <_vfiprintf_r+0xa96>
  401e88:	9908      	ldr	r1, [sp, #32]
  401e8a:	06dd      	lsls	r5, r3, #27
  401e8c:	460a      	mov	r2, r1
  401e8e:	f100 82c5 	bmi.w	40241c <_vfiprintf_r+0xa04>
  401e92:	0658      	lsls	r0, r3, #25
  401e94:	f140 82c2 	bpl.w	40241c <_vfiprintf_r+0xa04>
  401e98:	880e      	ldrh	r6, [r1, #0]
  401e9a:	3104      	adds	r1, #4
  401e9c:	2700      	movs	r7, #0
  401e9e:	2201      	movs	r2, #1
  401ea0:	9108      	str	r1, [sp, #32]
  401ea2:	e6ca      	b.n	401c3a <_vfiprintf_r+0x222>
  401ea4:	f043 0380 	orr.w	r3, r3, #128	; 0x80
  401ea8:	f899 2000 	ldrb.w	r2, [r9]
  401eac:	e61b      	b.n	401ae6 <_vfiprintf_r+0xce>
  401eae:	2500      	movs	r5, #0
  401eb0:	f1a2 0130 	sub.w	r1, r2, #48	; 0x30
  401eb4:	f819 2b01 	ldrb.w	r2, [r9], #1
  401eb8:	eb05 0585 	add.w	r5, r5, r5, lsl #2
  401ebc:	eb01 0545 	add.w	r5, r1, r5, lsl #1
  401ec0:	f1a2 0130 	sub.w	r1, r2, #48	; 0x30
  401ec4:	2909      	cmp	r1, #9
  401ec6:	d9f5      	bls.n	401eb4 <_vfiprintf_r+0x49c>
  401ec8:	e60f      	b.n	401aea <_vfiprintf_r+0xd2>
  401eca:	2201      	movs	r2, #1
  401ecc:	9808      	ldr	r0, [sp, #32]
  401ece:	4611      	mov	r1, r2
  401ed0:	9202      	str	r2, [sp, #8]
  401ed2:	6802      	ldr	r2, [r0, #0]
  401ed4:	f04f 0400 	mov.w	r4, #0
  401ed8:	f88d 2048 	strb.w	r2, [sp, #72]	; 0x48
  401edc:	4602      	mov	r2, r0
  401ede:	3204      	adds	r2, #4
  401ee0:	9507      	str	r5, [sp, #28]
  401ee2:	f88d 4037 	strb.w	r4, [sp, #55]	; 0x37
  401ee6:	9105      	str	r1, [sp, #20]
  401ee8:	9208      	str	r2, [sp, #32]
  401eea:	f10d 0848 	add.w	r8, sp, #72	; 0x48
  401eee:	9303      	str	r3, [sp, #12]
  401ef0:	2400      	movs	r4, #0
  401ef2:	e6c9      	b.n	401c88 <_vfiprintf_r+0x270>
  401ef4:	9507      	str	r5, [sp, #28]
  401ef6:	2800      	cmp	r0, #0
  401ef8:	f040 837e 	bne.w	4025f8 <_vfiprintf_r+0xbe0>
  401efc:	069e      	lsls	r6, r3, #26
  401efe:	f100 82ec 	bmi.w	4024da <_vfiprintf_r+0xac2>
  401f02:	9908      	ldr	r1, [sp, #32]
  401f04:	06dd      	lsls	r5, r3, #27
  401f06:	460a      	mov	r2, r1
  401f08:	f100 8281 	bmi.w	40240e <_vfiprintf_r+0x9f6>
  401f0c:	0658      	lsls	r0, r3, #25
  401f0e:	f140 827e 	bpl.w	40240e <_vfiprintf_r+0x9f6>
  401f12:	f9b1 6000 	ldrsh.w	r6, [r1]
  401f16:	3204      	adds	r2, #4
  401f18:	17f7      	asrs	r7, r6, #31
  401f1a:	4630      	mov	r0, r6
  401f1c:	4639      	mov	r1, r7
  401f1e:	9208      	str	r2, [sp, #32]
  401f20:	2800      	cmp	r0, #0
  401f22:	f171 0200 	sbcs.w	r2, r1, #0
  401f26:	f2c0 82e7 	blt.w	4024f8 <_vfiprintf_r+0xae0>
  401f2a:	1c61      	adds	r1, r4, #1
  401f2c:	f89d 5037 	ldrb.w	r5, [sp, #55]	; 0x37
  401f30:	f04f 0201 	mov.w	r2, #1
  401f34:	f47f ae89 	bne.w	401c4a <_vfiprintf_r+0x232>
  401f38:	ea56 0107 	orrs.w	r1, r6, r7
  401f3c:	f000 81e4 	beq.w	402308 <_vfiprintf_r+0x8f0>
  401f40:	9303      	str	r3, [sp, #12]
  401f42:	2a01      	cmp	r2, #1
  401f44:	f000 8224 	beq.w	402390 <_vfiprintf_r+0x978>
  401f48:	2a02      	cmp	r2, #2
  401f4a:	f040 81f1 	bne.w	402330 <_vfiprintf_r+0x918>
  401f4e:	46d0      	mov	r8, sl
  401f50:	980b      	ldr	r0, [sp, #44]	; 0x2c
  401f52:	0933      	lsrs	r3, r6, #4
  401f54:	ea43 7307 	orr.w	r3, r3, r7, lsl #28
  401f58:	0939      	lsrs	r1, r7, #4
  401f5a:	f006 020f 	and.w	r2, r6, #15
  401f5e:	460f      	mov	r7, r1
  401f60:	461e      	mov	r6, r3
  401f62:	5c83      	ldrb	r3, [r0, r2]
  401f64:	f808 3d01 	strb.w	r3, [r8, #-1]!
  401f68:	ea56 0307 	orrs.w	r3, r6, r7
  401f6c:	d1f1      	bne.n	401f52 <_vfiprintf_r+0x53a>
  401f6e:	ebaa 0308 	sub.w	r3, sl, r8
  401f72:	9305      	str	r3, [sp, #20]
  401f74:	e680      	b.n	401c78 <_vfiprintf_r+0x260>
  401f76:	f899 2000 	ldrb.w	r2, [r9]
  401f7a:	2e00      	cmp	r6, #0
  401f7c:	f47f adb3 	bne.w	401ae6 <_vfiprintf_r+0xce>
  401f80:	2001      	movs	r0, #1
  401f82:	2620      	movs	r6, #32
  401f84:	e5af      	b.n	401ae6 <_vfiprintf_r+0xce>
  401f86:	9507      	str	r5, [sp, #28]
  401f88:	2800      	cmp	r0, #0
  401f8a:	f040 8332 	bne.w	4025f2 <_vfiprintf_r+0xbda>
  401f8e:	f043 0310 	orr.w	r3, r3, #16
  401f92:	e7b3      	b.n	401efc <_vfiprintf_r+0x4e4>
  401f94:	9507      	str	r5, [sp, #28]
  401f96:	f043 0310 	orr.w	r3, r3, #16
  401f9a:	e63b      	b.n	401c14 <_vfiprintf_r+0x1fc>
  401f9c:	9507      	str	r5, [sp, #28]
  401f9e:	f043 0310 	orr.w	r3, r3, #16
  401fa2:	e76e      	b.n	401e82 <_vfiprintf_r+0x46a>
  401fa4:	00404524 	.word	0x00404524
  401fa8:	00404534 	.word	0x00404534
  401fac:	9507      	str	r5, [sp, #28]
  401fae:	2800      	cmp	r0, #0
  401fb0:	f040 8316 	bne.w	4025e0 <_vfiprintf_r+0xbc8>
  401fb4:	49ae      	ldr	r1, [pc, #696]	; (402270 <_vfiprintf_r+0x858>)
  401fb6:	910b      	str	r1, [sp, #44]	; 0x2c
  401fb8:	069f      	lsls	r7, r3, #26
  401fba:	f100 8284 	bmi.w	4024c6 <_vfiprintf_r+0xaae>
  401fbe:	9808      	ldr	r0, [sp, #32]
  401fc0:	06de      	lsls	r6, r3, #27
  401fc2:	4601      	mov	r1, r0
  401fc4:	f100 821e 	bmi.w	402404 <_vfiprintf_r+0x9ec>
  401fc8:	065d      	lsls	r5, r3, #25
  401fca:	f140 821b 	bpl.w	402404 <_vfiprintf_r+0x9ec>
  401fce:	2700      	movs	r7, #0
  401fd0:	3104      	adds	r1, #4
  401fd2:	8806      	ldrh	r6, [r0, #0]
  401fd4:	9108      	str	r1, [sp, #32]
  401fd6:	07d8      	lsls	r0, r3, #31
  401fd8:	f140 81d5 	bpl.w	402386 <_vfiprintf_r+0x96e>
  401fdc:	ea56 0107 	orrs.w	r1, r6, r7
  401fe0:	f000 81d1 	beq.w	402386 <_vfiprintf_r+0x96e>
  401fe4:	2130      	movs	r1, #48	; 0x30
  401fe6:	f88d 2039 	strb.w	r2, [sp, #57]	; 0x39
  401fea:	f043 0302 	orr.w	r3, r3, #2
  401fee:	f88d 1038 	strb.w	r1, [sp, #56]	; 0x38
  401ff2:	2202      	movs	r2, #2
  401ff4:	e621      	b.n	401c3a <_vfiprintf_r+0x222>
  401ff6:	f899 2000 	ldrb.w	r2, [r9]
  401ffa:	f109 0701 	add.w	r7, r9, #1
  401ffe:	2a2a      	cmp	r2, #42	; 0x2a
  402000:	f000 82e0 	beq.w	4025c4 <_vfiprintf_r+0xbac>
  402004:	f1a2 0130 	sub.w	r1, r2, #48	; 0x30
  402008:	2909      	cmp	r1, #9
  40200a:	46b9      	mov	r9, r7
  40200c:	f04f 0400 	mov.w	r4, #0
  402010:	f63f ad6b 	bhi.w	401aea <_vfiprintf_r+0xd2>
  402014:	f819 2b01 	ldrb.w	r2, [r9], #1
  402018:	eb04 0484 	add.w	r4, r4, r4, lsl #2
  40201c:	eb01 0444 	add.w	r4, r1, r4, lsl #1
  402020:	f1a2 0130 	sub.w	r1, r2, #48	; 0x30
  402024:	2909      	cmp	r1, #9
  402026:	d9f5      	bls.n	402014 <_vfiprintf_r+0x5fc>
  402028:	e55f      	b.n	401aea <_vfiprintf_r+0xd2>
  40202a:	f899 2000 	ldrb.w	r2, [r9]
  40202e:	2a6c      	cmp	r2, #108	; 0x6c
  402030:	bf03      	ittte	eq
  402032:	f899 2001 	ldrbeq.w	r2, [r9, #1]
  402036:	f043 0320 	orreq.w	r3, r3, #32
  40203a:	f109 0901 	addeq.w	r9, r9, #1
  40203e:	f043 0310 	orrne.w	r3, r3, #16
  402042:	e550      	b.n	401ae6 <_vfiprintf_r+0xce>
  402044:	9507      	str	r5, [sp, #28]
  402046:	2800      	cmp	r0, #0
  402048:	f040 82d0 	bne.w	4025ec <_vfiprintf_r+0xbd4>
  40204c:	4989      	ldr	r1, [pc, #548]	; (402274 <_vfiprintf_r+0x85c>)
  40204e:	910b      	str	r1, [sp, #44]	; 0x2c
  402050:	e7b2      	b.n	401fb8 <_vfiprintf_r+0x5a0>
  402052:	2278      	movs	r2, #120	; 0x78
  402054:	2130      	movs	r1, #48	; 0x30
  402056:	9507      	str	r5, [sp, #28]
  402058:	9d08      	ldr	r5, [sp, #32]
  40205a:	f88d 2039 	strb.w	r2, [sp, #57]	; 0x39
  40205e:	1d2a      	adds	r2, r5, #4
  402060:	9208      	str	r2, [sp, #32]
  402062:	4a84      	ldr	r2, [pc, #528]	; (402274 <_vfiprintf_r+0x85c>)
  402064:	682e      	ldr	r6, [r5, #0]
  402066:	920b      	str	r2, [sp, #44]	; 0x2c
  402068:	f043 0302 	orr.w	r3, r3, #2
  40206c:	f88d 1038 	strb.w	r1, [sp, #56]	; 0x38
  402070:	2700      	movs	r7, #0
  402072:	2202      	movs	r2, #2
  402074:	e5e1      	b.n	401c3a <_vfiprintf_r+0x222>
  402076:	f043 0320 	orr.w	r3, r3, #32
  40207a:	f899 2000 	ldrb.w	r2, [r9]
  40207e:	e532      	b.n	401ae6 <_vfiprintf_r+0xce>
  402080:	f04f 0200 	mov.w	r2, #0
  402084:	9908      	ldr	r1, [sp, #32]
  402086:	9507      	str	r5, [sp, #28]
  402088:	f8d1 8000 	ldr.w	r8, [r1]
  40208c:	f88d 2037 	strb.w	r2, [sp, #55]	; 0x37
  402090:	1d0d      	adds	r5, r1, #4
  402092:	f1b8 0f00 	cmp.w	r8, #0
  402096:	f000 827c 	beq.w	402592 <_vfiprintf_r+0xb7a>
  40209a:	1c67      	adds	r7, r4, #1
  40209c:	f000 825b 	beq.w	402556 <_vfiprintf_r+0xb3e>
  4020a0:	4622      	mov	r2, r4
  4020a2:	2100      	movs	r1, #0
  4020a4:	4640      	mov	r0, r8
  4020a6:	9302      	str	r3, [sp, #8]
  4020a8:	f001 fb24 	bl	4036f4 <memchr>
  4020ac:	9b02      	ldr	r3, [sp, #8]
  4020ae:	2800      	cmp	r0, #0
  4020b0:	f000 827c 	beq.w	4025ac <_vfiprintf_r+0xb94>
  4020b4:	eba0 0208 	sub.w	r2, r0, r8
  4020b8:	9508      	str	r5, [sp, #32]
  4020ba:	9205      	str	r2, [sp, #20]
  4020bc:	9303      	str	r3, [sp, #12]
  4020be:	f89d 5037 	ldrb.w	r5, [sp, #55]	; 0x37
  4020c2:	2400      	movs	r4, #0
  4020c4:	e5d8      	b.n	401c78 <_vfiprintf_r+0x260>
  4020c6:	f043 0301 	orr.w	r3, r3, #1
  4020ca:	f899 2000 	ldrb.w	r2, [r9]
  4020ce:	e50a      	b.n	401ae6 <_vfiprintf_r+0xce>
  4020d0:	f899 2000 	ldrb.w	r2, [r9]
  4020d4:	2001      	movs	r0, #1
  4020d6:	262b      	movs	r6, #43	; 0x2b
  4020d8:	e505      	b.n	401ae6 <_vfiprintf_r+0xce>
  4020da:	2800      	cmp	r0, #0
  4020dc:	f040 8283 	bne.w	4025e6 <_vfiprintf_r+0xbce>
  4020e0:	0699      	lsls	r1, r3, #26
  4020e2:	f100 822b 	bmi.w	40253c <_vfiprintf_r+0xb24>
  4020e6:	06da      	lsls	r2, r3, #27
  4020e8:	d421      	bmi.n	40212e <_vfiprintf_r+0x716>
  4020ea:	065b      	lsls	r3, r3, #25
  4020ec:	d51f      	bpl.n	40212e <_vfiprintf_r+0x716>
  4020ee:	9a08      	ldr	r2, [sp, #32]
  4020f0:	6813      	ldr	r3, [r2, #0]
  4020f2:	3204      	adds	r2, #4
  4020f4:	9208      	str	r2, [sp, #32]
  4020f6:	f8bd 2010 	ldrh.w	r2, [sp, #16]
  4020fa:	801a      	strh	r2, [r3, #0]
  4020fc:	e4be      	b.n	401a7c <_vfiprintf_r+0x64>
  4020fe:	f043 0340 	orr.w	r3, r3, #64	; 0x40
  402102:	f899 2000 	ldrb.w	r2, [r9]
  402106:	e4ee      	b.n	401ae6 <_vfiprintf_r+0xce>
  402108:	9507      	str	r5, [sp, #28]
  40210a:	2800      	cmp	r0, #0
  40210c:	f040 8265 	bne.w	4025da <_vfiprintf_r+0xbc2>
  402110:	2a00      	cmp	r2, #0
  402112:	f000 8091 	beq.w	402238 <_vfiprintf_r+0x820>
  402116:	2101      	movs	r1, #1
  402118:	f88d 2048 	strb.w	r2, [sp, #72]	; 0x48
  40211c:	f04f 0200 	mov.w	r2, #0
  402120:	9102      	str	r1, [sp, #8]
  402122:	f88d 2037 	strb.w	r2, [sp, #55]	; 0x37
  402126:	9105      	str	r1, [sp, #20]
  402128:	f10d 0848 	add.w	r8, sp, #72	; 0x48
  40212c:	e6df      	b.n	401eee <_vfiprintf_r+0x4d6>
  40212e:	9a08      	ldr	r2, [sp, #32]
  402130:	6813      	ldr	r3, [r2, #0]
  402132:	3204      	adds	r2, #4
  402134:	9208      	str	r2, [sp, #32]
  402136:	9a04      	ldr	r2, [sp, #16]
  402138:	601a      	str	r2, [r3, #0]
  40213a:	e49f      	b.n	401a7c <_vfiprintf_r+0x64>
  40213c:	aa0f      	add	r2, sp, #60	; 0x3c
  40213e:	9901      	ldr	r1, [sp, #4]
  402140:	4620      	mov	r0, r4
  402142:	f7ff fc29 	bl	401998 <__sprint_r.part.0>
  402146:	2800      	cmp	r0, #0
  402148:	d17d      	bne.n	402246 <_vfiprintf_r+0x82e>
  40214a:	9910      	ldr	r1, [sp, #64]	; 0x40
  40214c:	46d6      	mov	lr, sl
  40214e:	9a11      	ldr	r2, [sp, #68]	; 0x44
  402150:	f101 0c01 	add.w	ip, r1, #1
  402154:	e5bd      	b.n	401cd2 <_vfiprintf_r+0x2ba>
  402156:	aa0f      	add	r2, sp, #60	; 0x3c
  402158:	9901      	ldr	r1, [sp, #4]
  40215a:	9806      	ldr	r0, [sp, #24]
  40215c:	f7ff fc1c 	bl	401998 <__sprint_r.part.0>
  402160:	2800      	cmp	r0, #0
  402162:	d170      	bne.n	402246 <_vfiprintf_r+0x82e>
  402164:	46d3      	mov	fp, sl
  402166:	9910      	ldr	r1, [sp, #64]	; 0x40
  402168:	f89d 5037 	ldrb.w	r5, [sp, #55]	; 0x37
  40216c:	9a11      	ldr	r2, [sp, #68]	; 0x44
  40216e:	1c48      	adds	r0, r1, #1
  402170:	2d00      	cmp	r5, #0
  402172:	f43f add8 	beq.w	401d26 <_vfiprintf_r+0x30e>
  402176:	2101      	movs	r1, #1
  402178:	f10d 0537 	add.w	r5, sp, #55	; 0x37
  40217c:	440a      	add	r2, r1
  40217e:	2807      	cmp	r0, #7
  402180:	9211      	str	r2, [sp, #68]	; 0x44
  402182:	9010      	str	r0, [sp, #64]	; 0x40
  402184:	f8cb 1004 	str.w	r1, [fp, #4]
  402188:	f8cb 5000 	str.w	r5, [fp]
  40218c:	f340 80b6 	ble.w	4022fc <_vfiprintf_r+0x8e4>
  402190:	2a00      	cmp	r2, #0
  402192:	f040 8160 	bne.w	402456 <_vfiprintf_r+0xa3e>
  402196:	9b09      	ldr	r3, [sp, #36]	; 0x24
  402198:	2b00      	cmp	r3, #0
  40219a:	f43f add7 	beq.w	401d4c <_vfiprintf_r+0x334>
  40219e:	2202      	movs	r2, #2
  4021a0:	4608      	mov	r0, r1
  4021a2:	46d3      	mov	fp, sl
  4021a4:	ab0e      	add	r3, sp, #56	; 0x38
  4021a6:	921d      	str	r2, [sp, #116]	; 0x74
  4021a8:	931c      	str	r3, [sp, #112]	; 0x70
  4021aa:	4601      	mov	r1, r0
  4021ac:	f10b 0b08 	add.w	fp, fp, #8
  4021b0:	3001      	adds	r0, #1
  4021b2:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  4021b4:	2b80      	cmp	r3, #128	; 0x80
  4021b6:	f43f add0 	beq.w	401d5a <_vfiprintf_r+0x342>
  4021ba:	9b05      	ldr	r3, [sp, #20]
  4021bc:	1ae4      	subs	r4, r4, r3
  4021be:	2c00      	cmp	r4, #0
  4021c0:	f77f ae0a 	ble.w	401dd8 <_vfiprintf_r+0x3c0>
  4021c4:	2c10      	cmp	r4, #16
  4021c6:	f340 81b7 	ble.w	402538 <_vfiprintf_r+0xb20>
  4021ca:	46de      	mov	lr, fp
  4021cc:	2610      	movs	r6, #16
  4021ce:	4d2a      	ldr	r5, [pc, #168]	; (402278 <_vfiprintf_r+0x860>)
  4021d0:	9f06      	ldr	r7, [sp, #24]
  4021d2:	f8dd b004 	ldr.w	fp, [sp, #4]
  4021d6:	e006      	b.n	4021e6 <_vfiprintf_r+0x7ce>
  4021d8:	1c88      	adds	r0, r1, #2
  4021da:	4619      	mov	r1, r3
  4021dc:	f10e 0e08 	add.w	lr, lr, #8
  4021e0:	3c10      	subs	r4, #16
  4021e2:	2c10      	cmp	r4, #16
  4021e4:	dd0f      	ble.n	402206 <_vfiprintf_r+0x7ee>
  4021e6:	1c4b      	adds	r3, r1, #1
  4021e8:	3210      	adds	r2, #16
  4021ea:	2b07      	cmp	r3, #7
  4021ec:	9211      	str	r2, [sp, #68]	; 0x44
  4021ee:	e88e 0060 	stmia.w	lr, {r5, r6}
  4021f2:	9310      	str	r3, [sp, #64]	; 0x40
  4021f4:	ddf0      	ble.n	4021d8 <_vfiprintf_r+0x7c0>
  4021f6:	b9a2      	cbnz	r2, 402222 <_vfiprintf_r+0x80a>
  4021f8:	3c10      	subs	r4, #16
  4021fa:	2c10      	cmp	r4, #16
  4021fc:	f04f 0001 	mov.w	r0, #1
  402200:	4611      	mov	r1, r2
  402202:	46d6      	mov	lr, sl
  402204:	dcef      	bgt.n	4021e6 <_vfiprintf_r+0x7ce>
  402206:	46f3      	mov	fp, lr
  402208:	4422      	add	r2, r4
  40220a:	2807      	cmp	r0, #7
  40220c:	9211      	str	r2, [sp, #68]	; 0x44
  40220e:	f8cb 5000 	str.w	r5, [fp]
  402212:	f8cb 4004 	str.w	r4, [fp, #4]
  402216:	9010      	str	r0, [sp, #64]	; 0x40
  402218:	dc30      	bgt.n	40227c <_vfiprintf_r+0x864>
  40221a:	f10b 0b08 	add.w	fp, fp, #8
  40221e:	3001      	adds	r0, #1
  402220:	e5da      	b.n	401dd8 <_vfiprintf_r+0x3c0>
  402222:	aa0f      	add	r2, sp, #60	; 0x3c
  402224:	4659      	mov	r1, fp
  402226:	4638      	mov	r0, r7
  402228:	f7ff fbb6 	bl	401998 <__sprint_r.part.0>
  40222c:	b958      	cbnz	r0, 402246 <_vfiprintf_r+0x82e>
  40222e:	9910      	ldr	r1, [sp, #64]	; 0x40
  402230:	46d6      	mov	lr, sl
  402232:	9a11      	ldr	r2, [sp, #68]	; 0x44
  402234:	1c48      	adds	r0, r1, #1
  402236:	e7d3      	b.n	4021e0 <_vfiprintf_r+0x7c8>
  402238:	9b11      	ldr	r3, [sp, #68]	; 0x44
  40223a:	b123      	cbz	r3, 402246 <_vfiprintf_r+0x82e>
  40223c:	9806      	ldr	r0, [sp, #24]
  40223e:	aa0f      	add	r2, sp, #60	; 0x3c
  402240:	9901      	ldr	r1, [sp, #4]
  402242:	f7ff fba9 	bl	401998 <__sprint_r.part.0>
  402246:	9b01      	ldr	r3, [sp, #4]
  402248:	899b      	ldrh	r3, [r3, #12]
  40224a:	065b      	lsls	r3, r3, #25
  40224c:	f57f accd 	bpl.w	401bea <_vfiprintf_r+0x1d2>
  402250:	f04f 33ff 	mov.w	r3, #4294967295
  402254:	9304      	str	r3, [sp, #16]
  402256:	e4c8      	b.n	401bea <_vfiprintf_r+0x1d2>
  402258:	aa0f      	add	r2, sp, #60	; 0x3c
  40225a:	4641      	mov	r1, r8
  40225c:	4638      	mov	r0, r7
  40225e:	f7ff fb9b 	bl	401998 <__sprint_r.part.0>
  402262:	2800      	cmp	r0, #0
  402264:	d1ef      	bne.n	402246 <_vfiprintf_r+0x82e>
  402266:	9910      	ldr	r1, [sp, #64]	; 0x40
  402268:	46d3      	mov	fp, sl
  40226a:	9a11      	ldr	r2, [sp, #68]	; 0x44
  40226c:	1c48      	adds	r0, r1, #1
  40226e:	e5da      	b.n	401e26 <_vfiprintf_r+0x40e>
  402270:	004044f4 	.word	0x004044f4
  402274:	00404508 	.word	0x00404508
  402278:	00404534 	.word	0x00404534
  40227c:	2a00      	cmp	r2, #0
  40227e:	f040 80fd 	bne.w	40247c <_vfiprintf_r+0xa64>
  402282:	2301      	movs	r3, #1
  402284:	46d3      	mov	fp, sl
  402286:	9a05      	ldr	r2, [sp, #20]
  402288:	f8cd 8070 	str.w	r8, [sp, #112]	; 0x70
  40228c:	921d      	str	r2, [sp, #116]	; 0x74
  40228e:	9211      	str	r2, [sp, #68]	; 0x44
  402290:	9310      	str	r3, [sp, #64]	; 0x40
  402292:	f10b 0b08 	add.w	fp, fp, #8
  402296:	9b03      	ldr	r3, [sp, #12]
  402298:	0759      	lsls	r1, r3, #29
  40229a:	d505      	bpl.n	4022a8 <_vfiprintf_r+0x890>
  40229c:	9b07      	ldr	r3, [sp, #28]
  40229e:	9902      	ldr	r1, [sp, #8]
  4022a0:	1a5c      	subs	r4, r3, r1
  4022a2:	2c00      	cmp	r4, #0
  4022a4:	f73f adb1 	bgt.w	401e0a <_vfiprintf_r+0x3f2>
  4022a8:	9b04      	ldr	r3, [sp, #16]
  4022aa:	9907      	ldr	r1, [sp, #28]
  4022ac:	9802      	ldr	r0, [sp, #8]
  4022ae:	4281      	cmp	r1, r0
  4022b0:	bfac      	ite	ge
  4022b2:	185b      	addge	r3, r3, r1
  4022b4:	181b      	addlt	r3, r3, r0
  4022b6:	9304      	str	r3, [sp, #16]
  4022b8:	bb7a      	cbnz	r2, 40231a <_vfiprintf_r+0x902>
  4022ba:	2300      	movs	r3, #0
  4022bc:	46d3      	mov	fp, sl
  4022be:	9310      	str	r3, [sp, #64]	; 0x40
  4022c0:	f7ff bbdc 	b.w	401a7c <_vfiprintf_r+0x64>
  4022c4:	aa0f      	add	r2, sp, #60	; 0x3c
  4022c6:	9901      	ldr	r1, [sp, #4]
  4022c8:	4620      	mov	r0, r4
  4022ca:	f7ff fb65 	bl	401998 <__sprint_r.part.0>
  4022ce:	2800      	cmp	r0, #0
  4022d0:	d1b9      	bne.n	402246 <_vfiprintf_r+0x82e>
  4022d2:	9910      	ldr	r1, [sp, #64]	; 0x40
  4022d4:	46d4      	mov	ip, sl
  4022d6:	9a11      	ldr	r2, [sp, #68]	; 0x44
  4022d8:	f101 0e01 	add.w	lr, r1, #1
  4022dc:	e551      	b.n	401d82 <_vfiprintf_r+0x36a>
  4022de:	2a00      	cmp	r2, #0
  4022e0:	f47f af39 	bne.w	402156 <_vfiprintf_r+0x73e>
  4022e4:	f89d 1037 	ldrb.w	r1, [sp, #55]	; 0x37
  4022e8:	2900      	cmp	r1, #0
  4022ea:	f000 810e 	beq.w	40250a <_vfiprintf_r+0xaf2>
  4022ee:	2201      	movs	r2, #1
  4022f0:	46d3      	mov	fp, sl
  4022f2:	4610      	mov	r0, r2
  4022f4:	f10d 0137 	add.w	r1, sp, #55	; 0x37
  4022f8:	921d      	str	r2, [sp, #116]	; 0x74
  4022fa:	911c      	str	r1, [sp, #112]	; 0x70
  4022fc:	4601      	mov	r1, r0
  4022fe:	f10b 0b08 	add.w	fp, fp, #8
  402302:	3001      	adds	r0, #1
  402304:	e50f      	b.n	401d26 <_vfiprintf_r+0x30e>
  402306:	9b03      	ldr	r3, [sp, #12]
  402308:	2a01      	cmp	r2, #1
  40230a:	f000 808e 	beq.w	40242a <_vfiprintf_r+0xa12>
  40230e:	2a02      	cmp	r2, #2
  402310:	d10b      	bne.n	40232a <_vfiprintf_r+0x912>
  402312:	9303      	str	r3, [sp, #12]
  402314:	2600      	movs	r6, #0
  402316:	2700      	movs	r7, #0
  402318:	e619      	b.n	401f4e <_vfiprintf_r+0x536>
  40231a:	aa0f      	add	r2, sp, #60	; 0x3c
  40231c:	9901      	ldr	r1, [sp, #4]
  40231e:	9806      	ldr	r0, [sp, #24]
  402320:	f7ff fb3a 	bl	401998 <__sprint_r.part.0>
  402324:	2800      	cmp	r0, #0
  402326:	d0c8      	beq.n	4022ba <_vfiprintf_r+0x8a2>
  402328:	e78d      	b.n	402246 <_vfiprintf_r+0x82e>
  40232a:	2600      	movs	r6, #0
  40232c:	2700      	movs	r7, #0
  40232e:	9303      	str	r3, [sp, #12]
  402330:	4651      	mov	r1, sl
  402332:	e000      	b.n	402336 <_vfiprintf_r+0x91e>
  402334:	4641      	mov	r1, r8
  402336:	08f2      	lsrs	r2, r6, #3
  402338:	ea42 7247 	orr.w	r2, r2, r7, lsl #29
  40233c:	08f8      	lsrs	r0, r7, #3
  40233e:	f006 0307 	and.w	r3, r6, #7
  402342:	4607      	mov	r7, r0
  402344:	4616      	mov	r6, r2
  402346:	3330      	adds	r3, #48	; 0x30
  402348:	ea56 0207 	orrs.w	r2, r6, r7
  40234c:	f801 3c01 	strb.w	r3, [r1, #-1]
  402350:	f101 38ff 	add.w	r8, r1, #4294967295
  402354:	d1ee      	bne.n	402334 <_vfiprintf_r+0x91c>
  402356:	9a03      	ldr	r2, [sp, #12]
  402358:	07d6      	lsls	r6, r2, #31
  40235a:	f57f ae08 	bpl.w	401f6e <_vfiprintf_r+0x556>
  40235e:	2b30      	cmp	r3, #48	; 0x30
  402360:	f43f ae05 	beq.w	401f6e <_vfiprintf_r+0x556>
  402364:	2330      	movs	r3, #48	; 0x30
  402366:	3902      	subs	r1, #2
  402368:	f808 3c01 	strb.w	r3, [r8, #-1]
  40236c:	ebaa 0301 	sub.w	r3, sl, r1
  402370:	9305      	str	r3, [sp, #20]
  402372:	4688      	mov	r8, r1
  402374:	e480      	b.n	401c78 <_vfiprintf_r+0x260>
  402376:	9b04      	ldr	r3, [sp, #16]
  402378:	9a07      	ldr	r2, [sp, #28]
  40237a:	428a      	cmp	r2, r1
  40237c:	bfac      	ite	ge
  40237e:	189b      	addge	r3, r3, r2
  402380:	185b      	addlt	r3, r3, r1
  402382:	9304      	str	r3, [sp, #16]
  402384:	e799      	b.n	4022ba <_vfiprintf_r+0x8a2>
  402386:	2202      	movs	r2, #2
  402388:	e457      	b.n	401c3a <_vfiprintf_r+0x222>
  40238a:	9405      	str	r4, [sp, #20]
  40238c:	46d0      	mov	r8, sl
  40238e:	e473      	b.n	401c78 <_vfiprintf_r+0x260>
  402390:	2f00      	cmp	r7, #0
  402392:	bf08      	it	eq
  402394:	2e0a      	cmpeq	r6, #10
  402396:	d347      	bcc.n	402428 <_vfiprintf_r+0xa10>
  402398:	46d0      	mov	r8, sl
  40239a:	4630      	mov	r0, r6
  40239c:	4639      	mov	r1, r7
  40239e:	220a      	movs	r2, #10
  4023a0:	2300      	movs	r3, #0
  4023a2:	f001 fe75 	bl	404090 <__aeabi_uldivmod>
  4023a6:	3230      	adds	r2, #48	; 0x30
  4023a8:	f808 2d01 	strb.w	r2, [r8, #-1]!
  4023ac:	4630      	mov	r0, r6
  4023ae:	4639      	mov	r1, r7
  4023b0:	2300      	movs	r3, #0
  4023b2:	220a      	movs	r2, #10
  4023b4:	f001 fe6c 	bl	404090 <__aeabi_uldivmod>
  4023b8:	4606      	mov	r6, r0
  4023ba:	460f      	mov	r7, r1
  4023bc:	ea56 0307 	orrs.w	r3, r6, r7
  4023c0:	d1eb      	bne.n	40239a <_vfiprintf_r+0x982>
  4023c2:	ebaa 0308 	sub.w	r3, sl, r8
  4023c6:	9305      	str	r3, [sp, #20]
  4023c8:	e456      	b.n	401c78 <_vfiprintf_r+0x260>
  4023ca:	aa0f      	add	r2, sp, #60	; 0x3c
  4023cc:	9901      	ldr	r1, [sp, #4]
  4023ce:	9806      	ldr	r0, [sp, #24]
  4023d0:	f7ff fae2 	bl	401998 <__sprint_r.part.0>
  4023d4:	2800      	cmp	r0, #0
  4023d6:	f47f af36 	bne.w	402246 <_vfiprintf_r+0x82e>
  4023da:	46d3      	mov	fp, sl
  4023dc:	9a11      	ldr	r2, [sp, #68]	; 0x44
  4023de:	e75a      	b.n	402296 <_vfiprintf_r+0x87e>
  4023e0:	aa0f      	add	r2, sp, #60	; 0x3c
  4023e2:	9901      	ldr	r1, [sp, #4]
  4023e4:	9806      	ldr	r0, [sp, #24]
  4023e6:	f7ff fad7 	bl	401998 <__sprint_r.part.0>
  4023ea:	2800      	cmp	r0, #0
  4023ec:	f47f af2b 	bne.w	402246 <_vfiprintf_r+0x82e>
  4023f0:	46d3      	mov	fp, sl
  4023f2:	f7ff bbdc 	b.w	401bae <_vfiprintf_r+0x196>
  4023f6:	9808      	ldr	r0, [sp, #32]
  4023f8:	2700      	movs	r7, #0
  4023fa:	4601      	mov	r1, r0
  4023fc:	3104      	adds	r1, #4
  4023fe:	6806      	ldr	r6, [r0, #0]
  402400:	9108      	str	r1, [sp, #32]
  402402:	e41a      	b.n	401c3a <_vfiprintf_r+0x222>
  402404:	680e      	ldr	r6, [r1, #0]
  402406:	3104      	adds	r1, #4
  402408:	9108      	str	r1, [sp, #32]
  40240a:	2700      	movs	r7, #0
  40240c:	e5e3      	b.n	401fd6 <_vfiprintf_r+0x5be>
  40240e:	6816      	ldr	r6, [r2, #0]
  402410:	3204      	adds	r2, #4
  402412:	17f7      	asrs	r7, r6, #31
  402414:	9208      	str	r2, [sp, #32]
  402416:	4630      	mov	r0, r6
  402418:	4639      	mov	r1, r7
  40241a:	e581      	b.n	401f20 <_vfiprintf_r+0x508>
  40241c:	3104      	adds	r1, #4
  40241e:	6816      	ldr	r6, [r2, #0]
  402420:	2700      	movs	r7, #0
  402422:	2201      	movs	r2, #1
  402424:	9108      	str	r1, [sp, #32]
  402426:	e408      	b.n	401c3a <_vfiprintf_r+0x222>
  402428:	9b03      	ldr	r3, [sp, #12]
  40242a:	9303      	str	r3, [sp, #12]
  40242c:	2301      	movs	r3, #1
  40242e:	f10d 08b0 	add.w	r8, sp, #176	; 0xb0
  402432:	3630      	adds	r6, #48	; 0x30
  402434:	f808 6d41 	strb.w	r6, [r8, #-65]!
  402438:	9305      	str	r3, [sp, #20]
  40243a:	e41d      	b.n	401c78 <_vfiprintf_r+0x260>
  40243c:	aa0f      	add	r2, sp, #60	; 0x3c
  40243e:	9901      	ldr	r1, [sp, #4]
  402440:	9806      	ldr	r0, [sp, #24]
  402442:	f7ff faa9 	bl	401998 <__sprint_r.part.0>
  402446:	2800      	cmp	r0, #0
  402448:	f47f aefd 	bne.w	402246 <_vfiprintf_r+0x82e>
  40244c:	9910      	ldr	r1, [sp, #64]	; 0x40
  40244e:	46d3      	mov	fp, sl
  402450:	9a11      	ldr	r2, [sp, #68]	; 0x44
  402452:	1c48      	adds	r0, r1, #1
  402454:	e6ad      	b.n	4021b2 <_vfiprintf_r+0x79a>
  402456:	aa0f      	add	r2, sp, #60	; 0x3c
  402458:	9901      	ldr	r1, [sp, #4]
  40245a:	9806      	ldr	r0, [sp, #24]
  40245c:	f7ff fa9c 	bl	401998 <__sprint_r.part.0>
  402460:	2800      	cmp	r0, #0
  402462:	f47f aef0 	bne.w	402246 <_vfiprintf_r+0x82e>
  402466:	9910      	ldr	r1, [sp, #64]	; 0x40
  402468:	46d3      	mov	fp, sl
  40246a:	9a11      	ldr	r2, [sp, #68]	; 0x44
  40246c:	1c48      	adds	r0, r1, #1
  40246e:	e45a      	b.n	401d26 <_vfiprintf_r+0x30e>
  402470:	2a00      	cmp	r2, #0
  402472:	d17b      	bne.n	40256c <_vfiprintf_r+0xb54>
  402474:	2001      	movs	r0, #1
  402476:	4611      	mov	r1, r2
  402478:	46d3      	mov	fp, sl
  40247a:	e69e      	b.n	4021ba <_vfiprintf_r+0x7a2>
  40247c:	aa0f      	add	r2, sp, #60	; 0x3c
  40247e:	9901      	ldr	r1, [sp, #4]
  402480:	9806      	ldr	r0, [sp, #24]
  402482:	f7ff fa89 	bl	401998 <__sprint_r.part.0>
  402486:	2800      	cmp	r0, #0
  402488:	f47f aedd 	bne.w	402246 <_vfiprintf_r+0x82e>
  40248c:	9810      	ldr	r0, [sp, #64]	; 0x40
  40248e:	46d3      	mov	fp, sl
  402490:	9a11      	ldr	r2, [sp, #68]	; 0x44
  402492:	3001      	adds	r0, #1
  402494:	e4a0      	b.n	401dd8 <_vfiprintf_r+0x3c0>
  402496:	9d08      	ldr	r5, [sp, #32]
  402498:	3507      	adds	r5, #7
  40249a:	f025 0207 	bic.w	r2, r5, #7
  40249e:	f102 0108 	add.w	r1, r2, #8
  4024a2:	e9d2 6700 	ldrd	r6, r7, [r2]
  4024a6:	9108      	str	r1, [sp, #32]
  4024a8:	2200      	movs	r2, #0
  4024aa:	f7ff bbc6 	b.w	401c3a <_vfiprintf_r+0x222>
  4024ae:	9d08      	ldr	r5, [sp, #32]
  4024b0:	3507      	adds	r5, #7
  4024b2:	f025 0207 	bic.w	r2, r5, #7
  4024b6:	f102 0108 	add.w	r1, r2, #8
  4024ba:	e9d2 6700 	ldrd	r6, r7, [r2]
  4024be:	9108      	str	r1, [sp, #32]
  4024c0:	2201      	movs	r2, #1
  4024c2:	f7ff bbba 	b.w	401c3a <_vfiprintf_r+0x222>
  4024c6:	9d08      	ldr	r5, [sp, #32]
  4024c8:	3507      	adds	r5, #7
  4024ca:	f025 0107 	bic.w	r1, r5, #7
  4024ce:	f101 0008 	add.w	r0, r1, #8
  4024d2:	9008      	str	r0, [sp, #32]
  4024d4:	e9d1 6700 	ldrd	r6, r7, [r1]
  4024d8:	e57d      	b.n	401fd6 <_vfiprintf_r+0x5be>
  4024da:	9d08      	ldr	r5, [sp, #32]
  4024dc:	3507      	adds	r5, #7
  4024de:	f025 0507 	bic.w	r5, r5, #7
  4024e2:	f105 0208 	add.w	r2, r5, #8
  4024e6:	e9d5 0100 	ldrd	r0, r1, [r5]
  4024ea:	9208      	str	r2, [sp, #32]
  4024ec:	4606      	mov	r6, r0
  4024ee:	460f      	mov	r7, r1
  4024f0:	e516      	b.n	401f20 <_vfiprintf_r+0x508>
  4024f2:	46d0      	mov	r8, sl
  4024f4:	f7ff bbc0 	b.w	401c78 <_vfiprintf_r+0x260>
  4024f8:	252d      	movs	r5, #45	; 0x2d
  4024fa:	4276      	negs	r6, r6
  4024fc:	eb67 0747 	sbc.w	r7, r7, r7, lsl #1
  402500:	f88d 5037 	strb.w	r5, [sp, #55]	; 0x37
  402504:	2201      	movs	r2, #1
  402506:	f7ff bb9d 	b.w	401c44 <_vfiprintf_r+0x22c>
  40250a:	9b09      	ldr	r3, [sp, #36]	; 0x24
  40250c:	b96b      	cbnz	r3, 40252a <_vfiprintf_r+0xb12>
  40250e:	4611      	mov	r1, r2
  402510:	2001      	movs	r0, #1
  402512:	46d3      	mov	fp, sl
  402514:	e651      	b.n	4021ba <_vfiprintf_r+0x7a2>
  402516:	aa0f      	add	r2, sp, #60	; 0x3c
  402518:	9901      	ldr	r1, [sp, #4]
  40251a:	9806      	ldr	r0, [sp, #24]
  40251c:	f7ff fa3c 	bl	401998 <__sprint_r.part.0>
  402520:	2800      	cmp	r0, #0
  402522:	f47f ae90 	bne.w	402246 <_vfiprintf_r+0x82e>
  402526:	9a11      	ldr	r2, [sp, #68]	; 0x44
  402528:	e6be      	b.n	4022a8 <_vfiprintf_r+0x890>
  40252a:	2202      	movs	r2, #2
  40252c:	ab0e      	add	r3, sp, #56	; 0x38
  40252e:	921d      	str	r2, [sp, #116]	; 0x74
  402530:	931c      	str	r3, [sp, #112]	; 0x70
  402532:	2001      	movs	r0, #1
  402534:	46d3      	mov	fp, sl
  402536:	e638      	b.n	4021aa <_vfiprintf_r+0x792>
  402538:	4d31      	ldr	r5, [pc, #196]	; (402600 <_vfiprintf_r+0xbe8>)
  40253a:	e665      	b.n	402208 <_vfiprintf_r+0x7f0>
  40253c:	9a08      	ldr	r2, [sp, #32]
  40253e:	4613      	mov	r3, r2
  402540:	3304      	adds	r3, #4
  402542:	9308      	str	r3, [sp, #32]
  402544:	9b04      	ldr	r3, [sp, #16]
  402546:	6811      	ldr	r1, [r2, #0]
  402548:	17dd      	asrs	r5, r3, #31
  40254a:	461a      	mov	r2, r3
  40254c:	462b      	mov	r3, r5
  40254e:	e9c1 2300 	strd	r2, r3, [r1]
  402552:	f7ff ba93 	b.w	401a7c <_vfiprintf_r+0x64>
  402556:	4640      	mov	r0, r8
  402558:	9508      	str	r5, [sp, #32]
  40255a:	9303      	str	r3, [sp, #12]
  40255c:	f7ff f9ee 	bl	40193c <strlen>
  402560:	2400      	movs	r4, #0
  402562:	9005      	str	r0, [sp, #20]
  402564:	f89d 5037 	ldrb.w	r5, [sp, #55]	; 0x37
  402568:	f7ff bb86 	b.w	401c78 <_vfiprintf_r+0x260>
  40256c:	aa0f      	add	r2, sp, #60	; 0x3c
  40256e:	9901      	ldr	r1, [sp, #4]
  402570:	9806      	ldr	r0, [sp, #24]
  402572:	f7ff fa11 	bl	401998 <__sprint_r.part.0>
  402576:	2800      	cmp	r0, #0
  402578:	f47f ae65 	bne.w	402246 <_vfiprintf_r+0x82e>
  40257c:	9910      	ldr	r1, [sp, #64]	; 0x40
  40257e:	46d3      	mov	fp, sl
  402580:	9a11      	ldr	r2, [sp, #68]	; 0x44
  402582:	1c48      	adds	r0, r1, #1
  402584:	e619      	b.n	4021ba <_vfiprintf_r+0x7a2>
  402586:	9910      	ldr	r1, [sp, #64]	; 0x40
  402588:	9a11      	ldr	r2, [sp, #68]	; 0x44
  40258a:	3101      	adds	r1, #1
  40258c:	4e1d      	ldr	r6, [pc, #116]	; (402604 <_vfiprintf_r+0xbec>)
  40258e:	f7ff bbb8 	b.w	401d02 <_vfiprintf_r+0x2ea>
  402592:	2c06      	cmp	r4, #6
  402594:	bf28      	it	cs
  402596:	2406      	movcs	r4, #6
  402598:	9508      	str	r5, [sp, #32]
  40259a:	9405      	str	r4, [sp, #20]
  40259c:	9402      	str	r4, [sp, #8]
  40259e:	f8df 8068 	ldr.w	r8, [pc, #104]	; 402608 <_vfiprintf_r+0xbf0>
  4025a2:	e4a4      	b.n	401eee <_vfiprintf_r+0x4d6>
  4025a4:	9810      	ldr	r0, [sp, #64]	; 0x40
  4025a6:	4e17      	ldr	r6, [pc, #92]	; (402604 <_vfiprintf_r+0xbec>)
  4025a8:	3001      	adds	r0, #1
  4025aa:	e453      	b.n	401e54 <_vfiprintf_r+0x43c>
  4025ac:	9405      	str	r4, [sp, #20]
  4025ae:	9508      	str	r5, [sp, #32]
  4025b0:	9303      	str	r3, [sp, #12]
  4025b2:	4604      	mov	r4, r0
  4025b4:	f89d 5037 	ldrb.w	r5, [sp, #55]	; 0x37
  4025b8:	f7ff bb5e 	b.w	401c78 <_vfiprintf_r+0x260>
  4025bc:	4686      	mov	lr, r0
  4025be:	4d10      	ldr	r5, [pc, #64]	; (402600 <_vfiprintf_r+0xbe8>)
  4025c0:	f7ff bbf6 	b.w	401db0 <_vfiprintf_r+0x398>
  4025c4:	9908      	ldr	r1, [sp, #32]
  4025c6:	f899 2001 	ldrb.w	r2, [r9, #1]
  4025ca:	680c      	ldr	r4, [r1, #0]
  4025cc:	3104      	adds	r1, #4
  4025ce:	ea44 74e4 	orr.w	r4, r4, r4, asr #31
  4025d2:	46b9      	mov	r9, r7
  4025d4:	9108      	str	r1, [sp, #32]
  4025d6:	f7ff ba86 	b.w	401ae6 <_vfiprintf_r+0xce>
  4025da:	f88d 6037 	strb.w	r6, [sp, #55]	; 0x37
  4025de:	e597      	b.n	402110 <_vfiprintf_r+0x6f8>
  4025e0:	f88d 6037 	strb.w	r6, [sp, #55]	; 0x37
  4025e4:	e4e6      	b.n	401fb4 <_vfiprintf_r+0x59c>
  4025e6:	f88d 6037 	strb.w	r6, [sp, #55]	; 0x37
  4025ea:	e579      	b.n	4020e0 <_vfiprintf_r+0x6c8>
  4025ec:	f88d 6037 	strb.w	r6, [sp, #55]	; 0x37
  4025f0:	e52c      	b.n	40204c <_vfiprintf_r+0x634>
  4025f2:	f88d 6037 	strb.w	r6, [sp, #55]	; 0x37
  4025f6:	e4ca      	b.n	401f8e <_vfiprintf_r+0x576>
  4025f8:	f88d 6037 	strb.w	r6, [sp, #55]	; 0x37
  4025fc:	e47e      	b.n	401efc <_vfiprintf_r+0x4e4>
  4025fe:	bf00      	nop
  402600:	00404534 	.word	0x00404534
  402604:	00404524 	.word	0x00404524
  402608:	0040451c 	.word	0x0040451c

0040260c <__sbprintf>:
  40260c:	b570      	push	{r4, r5, r6, lr}
  40260e:	460c      	mov	r4, r1
  402610:	2600      	movs	r6, #0
  402612:	f44f 6580 	mov.w	r5, #1024	; 0x400
  402616:	8989      	ldrh	r1, [r1, #12]
  402618:	f5ad 6d8d 	sub.w	sp, sp, #1128	; 0x468
  40261c:	f021 0102 	bic.w	r1, r1, #2
  402620:	f8ad 100c 	strh.w	r1, [sp, #12]
  402624:	9606      	str	r6, [sp, #24]
  402626:	6e61      	ldr	r1, [r4, #100]	; 0x64
  402628:	89e6      	ldrh	r6, [r4, #14]
  40262a:	9119      	str	r1, [sp, #100]	; 0x64
  40262c:	f8ad 600e 	strh.w	r6, [sp, #14]
  402630:	69e1      	ldr	r1, [r4, #28]
  402632:	6a66      	ldr	r6, [r4, #36]	; 0x24
  402634:	9107      	str	r1, [sp, #28]
  402636:	9609      	str	r6, [sp, #36]	; 0x24
  402638:	4669      	mov	r1, sp
  40263a:	ae1a      	add	r6, sp, #104	; 0x68
  40263c:	9600      	str	r6, [sp, #0]
  40263e:	9604      	str	r6, [sp, #16]
  402640:	9502      	str	r5, [sp, #8]
  402642:	9505      	str	r5, [sp, #20]
  402644:	4606      	mov	r6, r0
  402646:	f7ff f9e7 	bl	401a18 <_vfiprintf_r>
  40264a:	1e05      	subs	r5, r0, #0
  40264c:	db07      	blt.n	40265e <__sbprintf+0x52>
  40264e:	4630      	mov	r0, r6
  402650:	4669      	mov	r1, sp
  402652:	f000 f921 	bl	402898 <_fflush_r>
  402656:	2800      	cmp	r0, #0
  402658:	bf18      	it	ne
  40265a:	f04f 35ff 	movne.w	r5, #4294967295
  40265e:	f8bd 300c 	ldrh.w	r3, [sp, #12]
  402662:	065b      	lsls	r3, r3, #25
  402664:	d503      	bpl.n	40266e <__sbprintf+0x62>
  402666:	89a3      	ldrh	r3, [r4, #12]
  402668:	f043 0340 	orr.w	r3, r3, #64	; 0x40
  40266c:	81a3      	strh	r3, [r4, #12]
  40266e:	4628      	mov	r0, r5
  402670:	f50d 6d8d 	add.w	sp, sp, #1128	; 0x468
  402674:	bd70      	pop	{r4, r5, r6, pc}
  402676:	bf00      	nop

00402678 <__swsetup_r>:
  402678:	b538      	push	{r3, r4, r5, lr}
  40267a:	4b30      	ldr	r3, [pc, #192]	; (40273c <__swsetup_r+0xc4>)
  40267c:	4605      	mov	r5, r0
  40267e:	6818      	ldr	r0, [r3, #0]
  402680:	460c      	mov	r4, r1
  402682:	b110      	cbz	r0, 40268a <__swsetup_r+0x12>
  402684:	6b83      	ldr	r3, [r0, #56]	; 0x38
  402686:	2b00      	cmp	r3, #0
  402688:	d038      	beq.n	4026fc <__swsetup_r+0x84>
  40268a:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
  40268e:	b293      	uxth	r3, r2
  402690:	0718      	lsls	r0, r3, #28
  402692:	d50c      	bpl.n	4026ae <__swsetup_r+0x36>
  402694:	6920      	ldr	r0, [r4, #16]
  402696:	b1a8      	cbz	r0, 4026c4 <__swsetup_r+0x4c>
  402698:	f013 0201 	ands.w	r2, r3, #1
  40269c:	d01e      	beq.n	4026dc <__swsetup_r+0x64>
  40269e:	2200      	movs	r2, #0
  4026a0:	6963      	ldr	r3, [r4, #20]
  4026a2:	60a2      	str	r2, [r4, #8]
  4026a4:	425b      	negs	r3, r3
  4026a6:	61a3      	str	r3, [r4, #24]
  4026a8:	b1f0      	cbz	r0, 4026e8 <__swsetup_r+0x70>
  4026aa:	2000      	movs	r0, #0
  4026ac:	bd38      	pop	{r3, r4, r5, pc}
  4026ae:	06d9      	lsls	r1, r3, #27
  4026b0:	d53b      	bpl.n	40272a <__swsetup_r+0xb2>
  4026b2:	0758      	lsls	r0, r3, #29
  4026b4:	d425      	bmi.n	402702 <__swsetup_r+0x8a>
  4026b6:	6920      	ldr	r0, [r4, #16]
  4026b8:	f042 0308 	orr.w	r3, r2, #8
  4026bc:	81a3      	strh	r3, [r4, #12]
  4026be:	b29b      	uxth	r3, r3
  4026c0:	2800      	cmp	r0, #0
  4026c2:	d1e9      	bne.n	402698 <__swsetup_r+0x20>
  4026c4:	f403 7220 	and.w	r2, r3, #640	; 0x280
  4026c8:	f5b2 7f00 	cmp.w	r2, #512	; 0x200
  4026cc:	d0e4      	beq.n	402698 <__swsetup_r+0x20>
  4026ce:	4628      	mov	r0, r5
  4026d0:	4621      	mov	r1, r4
  4026d2:	f000 fd0b 	bl	4030ec <__smakebuf_r>
  4026d6:	89a3      	ldrh	r3, [r4, #12]
  4026d8:	6920      	ldr	r0, [r4, #16]
  4026da:	e7dd      	b.n	402698 <__swsetup_r+0x20>
  4026dc:	0799      	lsls	r1, r3, #30
  4026de:	bf58      	it	pl
  4026e0:	6962      	ldrpl	r2, [r4, #20]
  4026e2:	60a2      	str	r2, [r4, #8]
  4026e4:	2800      	cmp	r0, #0
  4026e6:	d1e0      	bne.n	4026aa <__swsetup_r+0x32>
  4026e8:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  4026ec:	061a      	lsls	r2, r3, #24
  4026ee:	d5dd      	bpl.n	4026ac <__swsetup_r+0x34>
  4026f0:	f043 0340 	orr.w	r3, r3, #64	; 0x40
  4026f4:	81a3      	strh	r3, [r4, #12]
  4026f6:	f04f 30ff 	mov.w	r0, #4294967295
  4026fa:	bd38      	pop	{r3, r4, r5, pc}
  4026fc:	f000 f960 	bl	4029c0 <__sinit>
  402700:	e7c3      	b.n	40268a <__swsetup_r+0x12>
  402702:	6b21      	ldr	r1, [r4, #48]	; 0x30
  402704:	b151      	cbz	r1, 40271c <__swsetup_r+0xa4>
  402706:	f104 0340 	add.w	r3, r4, #64	; 0x40
  40270a:	4299      	cmp	r1, r3
  40270c:	d004      	beq.n	402718 <__swsetup_r+0xa0>
  40270e:	4628      	mov	r0, r5
  402710:	f000 fa28 	bl	402b64 <_free_r>
  402714:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
  402718:	2300      	movs	r3, #0
  40271a:	6323      	str	r3, [r4, #48]	; 0x30
  40271c:	2300      	movs	r3, #0
  40271e:	6920      	ldr	r0, [r4, #16]
  402720:	f022 0224 	bic.w	r2, r2, #36	; 0x24
  402724:	e884 0009 	stmia.w	r4, {r0, r3}
  402728:	e7c6      	b.n	4026b8 <__swsetup_r+0x40>
  40272a:	2309      	movs	r3, #9
  40272c:	f042 0240 	orr.w	r2, r2, #64	; 0x40
  402730:	602b      	str	r3, [r5, #0]
  402732:	f04f 30ff 	mov.w	r0, #4294967295
  402736:	81a2      	strh	r2, [r4, #12]
  402738:	bd38      	pop	{r3, r4, r5, pc}
  40273a:	bf00      	nop
  40273c:	20000108 	.word	0x20000108

00402740 <register_fini>:
  402740:	4b02      	ldr	r3, [pc, #8]	; (40274c <register_fini+0xc>)
  402742:	b113      	cbz	r3, 40274a <register_fini+0xa>
  402744:	4802      	ldr	r0, [pc, #8]	; (402750 <register_fini+0x10>)
  402746:	f000 b805 	b.w	402754 <atexit>
  40274a:	4770      	bx	lr
  40274c:	00000000 	.word	0x00000000
  402750:	004029d5 	.word	0x004029d5

00402754 <atexit>:
  402754:	2300      	movs	r3, #0
  402756:	4601      	mov	r1, r0
  402758:	461a      	mov	r2, r3
  40275a:	4618      	mov	r0, r3
  40275c:	f001 bb9e 	b.w	403e9c <__register_exitproc>

00402760 <__sflush_r>:
  402760:	f9b1 300c 	ldrsh.w	r3, [r1, #12]
  402764:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  402768:	b29a      	uxth	r2, r3
  40276a:	460d      	mov	r5, r1
  40276c:	0711      	lsls	r1, r2, #28
  40276e:	4680      	mov	r8, r0
  402770:	d43a      	bmi.n	4027e8 <__sflush_r+0x88>
  402772:	686a      	ldr	r2, [r5, #4]
  402774:	f443 6300 	orr.w	r3, r3, #2048	; 0x800
  402778:	2a00      	cmp	r2, #0
  40277a:	81ab      	strh	r3, [r5, #12]
  40277c:	dd70      	ble.n	402860 <__sflush_r+0x100>
  40277e:	6aac      	ldr	r4, [r5, #40]	; 0x28
  402780:	2c00      	cmp	r4, #0
  402782:	d04a      	beq.n	40281a <__sflush_r+0xba>
  402784:	2200      	movs	r2, #0
  402786:	b29b      	uxth	r3, r3
  402788:	f8d8 6000 	ldr.w	r6, [r8]
  40278c:	f8c8 2000 	str.w	r2, [r8]
  402790:	f413 5280 	ands.w	r2, r3, #4096	; 0x1000
  402794:	d068      	beq.n	402868 <__sflush_r+0x108>
  402796:	6d2a      	ldr	r2, [r5, #80]	; 0x50
  402798:	075f      	lsls	r7, r3, #29
  40279a:	d505      	bpl.n	4027a8 <__sflush_r+0x48>
  40279c:	6869      	ldr	r1, [r5, #4]
  40279e:	6b2b      	ldr	r3, [r5, #48]	; 0x30
  4027a0:	1a52      	subs	r2, r2, r1
  4027a2:	b10b      	cbz	r3, 4027a8 <__sflush_r+0x48>
  4027a4:	6beb      	ldr	r3, [r5, #60]	; 0x3c
  4027a6:	1ad2      	subs	r2, r2, r3
  4027a8:	2300      	movs	r3, #0
  4027aa:	69e9      	ldr	r1, [r5, #28]
  4027ac:	4640      	mov	r0, r8
  4027ae:	47a0      	blx	r4
  4027b0:	1c44      	adds	r4, r0, #1
  4027b2:	d03d      	beq.n	402830 <__sflush_r+0xd0>
  4027b4:	2100      	movs	r1, #0
  4027b6:	f9b5 300c 	ldrsh.w	r3, [r5, #12]
  4027ba:	692a      	ldr	r2, [r5, #16]
  4027bc:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
  4027c0:	81ab      	strh	r3, [r5, #12]
  4027c2:	04db      	lsls	r3, r3, #19
  4027c4:	6069      	str	r1, [r5, #4]
  4027c6:	602a      	str	r2, [r5, #0]
  4027c8:	d448      	bmi.n	40285c <__sflush_r+0xfc>
  4027ca:	6b29      	ldr	r1, [r5, #48]	; 0x30
  4027cc:	f8c8 6000 	str.w	r6, [r8]
  4027d0:	b319      	cbz	r1, 40281a <__sflush_r+0xba>
  4027d2:	f105 0340 	add.w	r3, r5, #64	; 0x40
  4027d6:	4299      	cmp	r1, r3
  4027d8:	d002      	beq.n	4027e0 <__sflush_r+0x80>
  4027da:	4640      	mov	r0, r8
  4027dc:	f000 f9c2 	bl	402b64 <_free_r>
  4027e0:	2000      	movs	r0, #0
  4027e2:	6328      	str	r0, [r5, #48]	; 0x30
  4027e4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  4027e8:	692e      	ldr	r6, [r5, #16]
  4027ea:	b1b6      	cbz	r6, 40281a <__sflush_r+0xba>
  4027ec:	0791      	lsls	r1, r2, #30
  4027ee:	bf18      	it	ne
  4027f0:	2300      	movne	r3, #0
  4027f2:	682c      	ldr	r4, [r5, #0]
  4027f4:	bf08      	it	eq
  4027f6:	696b      	ldreq	r3, [r5, #20]
  4027f8:	602e      	str	r6, [r5, #0]
  4027fa:	1ba4      	subs	r4, r4, r6
  4027fc:	60ab      	str	r3, [r5, #8]
  4027fe:	e00a      	b.n	402816 <__sflush_r+0xb6>
  402800:	4623      	mov	r3, r4
  402802:	4632      	mov	r2, r6
  402804:	6a6f      	ldr	r7, [r5, #36]	; 0x24
  402806:	69e9      	ldr	r1, [r5, #28]
  402808:	4640      	mov	r0, r8
  40280a:	47b8      	blx	r7
  40280c:	2800      	cmp	r0, #0
  40280e:	eba4 0400 	sub.w	r4, r4, r0
  402812:	4406      	add	r6, r0
  402814:	dd04      	ble.n	402820 <__sflush_r+0xc0>
  402816:	2c00      	cmp	r4, #0
  402818:	dcf2      	bgt.n	402800 <__sflush_r+0xa0>
  40281a:	2000      	movs	r0, #0
  40281c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  402820:	89ab      	ldrh	r3, [r5, #12]
  402822:	f04f 30ff 	mov.w	r0, #4294967295
  402826:	f043 0340 	orr.w	r3, r3, #64	; 0x40
  40282a:	81ab      	strh	r3, [r5, #12]
  40282c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  402830:	f8d8 4000 	ldr.w	r4, [r8]
  402834:	2c1d      	cmp	r4, #29
  402836:	d8f3      	bhi.n	402820 <__sflush_r+0xc0>
  402838:	4b16      	ldr	r3, [pc, #88]	; (402894 <__sflush_r+0x134>)
  40283a:	40e3      	lsrs	r3, r4
  40283c:	43db      	mvns	r3, r3
  40283e:	f013 0301 	ands.w	r3, r3, #1
  402842:	d1ed      	bne.n	402820 <__sflush_r+0xc0>
  402844:	f9b5 200c 	ldrsh.w	r2, [r5, #12]
  402848:	6929      	ldr	r1, [r5, #16]
  40284a:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
  40284e:	81aa      	strh	r2, [r5, #12]
  402850:	04d2      	lsls	r2, r2, #19
  402852:	606b      	str	r3, [r5, #4]
  402854:	6029      	str	r1, [r5, #0]
  402856:	d5b8      	bpl.n	4027ca <__sflush_r+0x6a>
  402858:	2c00      	cmp	r4, #0
  40285a:	d1b6      	bne.n	4027ca <__sflush_r+0x6a>
  40285c:	6528      	str	r0, [r5, #80]	; 0x50
  40285e:	e7b4      	b.n	4027ca <__sflush_r+0x6a>
  402860:	6bea      	ldr	r2, [r5, #60]	; 0x3c
  402862:	2a00      	cmp	r2, #0
  402864:	dc8b      	bgt.n	40277e <__sflush_r+0x1e>
  402866:	e7d8      	b.n	40281a <__sflush_r+0xba>
  402868:	2301      	movs	r3, #1
  40286a:	69e9      	ldr	r1, [r5, #28]
  40286c:	4640      	mov	r0, r8
  40286e:	47a0      	blx	r4
  402870:	1c43      	adds	r3, r0, #1
  402872:	4602      	mov	r2, r0
  402874:	d002      	beq.n	40287c <__sflush_r+0x11c>
  402876:	89ab      	ldrh	r3, [r5, #12]
  402878:	6aac      	ldr	r4, [r5, #40]	; 0x28
  40287a:	e78d      	b.n	402798 <__sflush_r+0x38>
  40287c:	f8d8 3000 	ldr.w	r3, [r8]
  402880:	2b00      	cmp	r3, #0
  402882:	d0f8      	beq.n	402876 <__sflush_r+0x116>
  402884:	2b1d      	cmp	r3, #29
  402886:	d001      	beq.n	40288c <__sflush_r+0x12c>
  402888:	2b16      	cmp	r3, #22
  40288a:	d1c9      	bne.n	402820 <__sflush_r+0xc0>
  40288c:	f8c8 6000 	str.w	r6, [r8]
  402890:	e7c3      	b.n	40281a <__sflush_r+0xba>
  402892:	bf00      	nop
  402894:	20400001 	.word	0x20400001

00402898 <_fflush_r>:
  402898:	b510      	push	{r4, lr}
  40289a:	4604      	mov	r4, r0
  40289c:	b082      	sub	sp, #8
  40289e:	b108      	cbz	r0, 4028a4 <_fflush_r+0xc>
  4028a0:	6b83      	ldr	r3, [r0, #56]	; 0x38
  4028a2:	b153      	cbz	r3, 4028ba <_fflush_r+0x22>
  4028a4:	f9b1 000c 	ldrsh.w	r0, [r1, #12]
  4028a8:	b908      	cbnz	r0, 4028ae <_fflush_r+0x16>
  4028aa:	b002      	add	sp, #8
  4028ac:	bd10      	pop	{r4, pc}
  4028ae:	4620      	mov	r0, r4
  4028b0:	b002      	add	sp, #8
  4028b2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  4028b6:	f7ff bf53 	b.w	402760 <__sflush_r>
  4028ba:	9101      	str	r1, [sp, #4]
  4028bc:	f000 f880 	bl	4029c0 <__sinit>
  4028c0:	9901      	ldr	r1, [sp, #4]
  4028c2:	e7ef      	b.n	4028a4 <_fflush_r+0xc>

004028c4 <_cleanup_r>:
  4028c4:	4901      	ldr	r1, [pc, #4]	; (4028cc <_cleanup_r+0x8>)
  4028c6:	f000 bbad 	b.w	403024 <_fwalk_reent>
  4028ca:	bf00      	nop
  4028cc:	00403f6d 	.word	0x00403f6d

004028d0 <__sinit.part.1>:
  4028d0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  4028d4:	4607      	mov	r7, r0
  4028d6:	2400      	movs	r4, #0
  4028d8:	2304      	movs	r3, #4
  4028da:	2103      	movs	r1, #3
  4028dc:	687d      	ldr	r5, [r7, #4]
  4028de:	4833      	ldr	r0, [pc, #204]	; (4029ac <__sinit.part.1+0xdc>)
  4028e0:	f507 723b 	add.w	r2, r7, #748	; 0x2ec
  4028e4:	63f8      	str	r0, [r7, #60]	; 0x3c
  4028e6:	f8c7 12e4 	str.w	r1, [r7, #740]	; 0x2e4
  4028ea:	f8c7 22e8 	str.w	r2, [r7, #744]	; 0x2e8
  4028ee:	f8c7 42e0 	str.w	r4, [r7, #736]	; 0x2e0
  4028f2:	b083      	sub	sp, #12
  4028f4:	602c      	str	r4, [r5, #0]
  4028f6:	606c      	str	r4, [r5, #4]
  4028f8:	60ac      	str	r4, [r5, #8]
  4028fa:	666c      	str	r4, [r5, #100]	; 0x64
  4028fc:	81ec      	strh	r4, [r5, #14]
  4028fe:	612c      	str	r4, [r5, #16]
  402900:	616c      	str	r4, [r5, #20]
  402902:	61ac      	str	r4, [r5, #24]
  402904:	81ab      	strh	r3, [r5, #12]
  402906:	4621      	mov	r1, r4
  402908:	f105 005c 	add.w	r0, r5, #92	; 0x5c
  40290c:	2208      	movs	r2, #8
  40290e:	f7fe fedd 	bl	4016cc <memset>
  402912:	2301      	movs	r3, #1
  402914:	2209      	movs	r2, #9
  402916:	68be      	ldr	r6, [r7, #8]
  402918:	f8df b094 	ldr.w	fp, [pc, #148]	; 4029b0 <__sinit.part.1+0xe0>
  40291c:	f8df a094 	ldr.w	sl, [pc, #148]	; 4029b4 <__sinit.part.1+0xe4>
  402920:	f8df 9094 	ldr.w	r9, [pc, #148]	; 4029b8 <__sinit.part.1+0xe8>
  402924:	f8df 8094 	ldr.w	r8, [pc, #148]	; 4029bc <__sinit.part.1+0xec>
  402928:	f8c5 b020 	str.w	fp, [r5, #32]
  40292c:	f8c5 a024 	str.w	sl, [r5, #36]	; 0x24
  402930:	f8c5 9028 	str.w	r9, [r5, #40]	; 0x28
  402934:	f8c5 802c 	str.w	r8, [r5, #44]	; 0x2c
  402938:	61ed      	str	r5, [r5, #28]
  40293a:	4621      	mov	r1, r4
  40293c:	81f3      	strh	r3, [r6, #14]
  40293e:	81b2      	strh	r2, [r6, #12]
  402940:	f106 005c 	add.w	r0, r6, #92	; 0x5c
  402944:	6034      	str	r4, [r6, #0]
  402946:	6074      	str	r4, [r6, #4]
  402948:	60b4      	str	r4, [r6, #8]
  40294a:	6674      	str	r4, [r6, #100]	; 0x64
  40294c:	6134      	str	r4, [r6, #16]
  40294e:	6174      	str	r4, [r6, #20]
  402950:	61b4      	str	r4, [r6, #24]
  402952:	2208      	movs	r2, #8
  402954:	9301      	str	r3, [sp, #4]
  402956:	f7fe feb9 	bl	4016cc <memset>
  40295a:	2012      	movs	r0, #18
  40295c:	2202      	movs	r2, #2
  40295e:	68fd      	ldr	r5, [r7, #12]
  402960:	4621      	mov	r1, r4
  402962:	61f6      	str	r6, [r6, #28]
  402964:	f8c6 b020 	str.w	fp, [r6, #32]
  402968:	f8c6 a024 	str.w	sl, [r6, #36]	; 0x24
  40296c:	f8c6 9028 	str.w	r9, [r6, #40]	; 0x28
  402970:	f8c6 802c 	str.w	r8, [r6, #44]	; 0x2c
  402974:	81a8      	strh	r0, [r5, #12]
  402976:	81ea      	strh	r2, [r5, #14]
  402978:	602c      	str	r4, [r5, #0]
  40297a:	606c      	str	r4, [r5, #4]
  40297c:	60ac      	str	r4, [r5, #8]
  40297e:	666c      	str	r4, [r5, #100]	; 0x64
  402980:	612c      	str	r4, [r5, #16]
  402982:	616c      	str	r4, [r5, #20]
  402984:	61ac      	str	r4, [r5, #24]
  402986:	f105 005c 	add.w	r0, r5, #92	; 0x5c
  40298a:	2208      	movs	r2, #8
  40298c:	f7fe fe9e 	bl	4016cc <memset>
  402990:	9b01      	ldr	r3, [sp, #4]
  402992:	61ed      	str	r5, [r5, #28]
  402994:	f8c5 b020 	str.w	fp, [r5, #32]
  402998:	f8c5 a024 	str.w	sl, [r5, #36]	; 0x24
  40299c:	f8c5 9028 	str.w	r9, [r5, #40]	; 0x28
  4029a0:	f8c5 802c 	str.w	r8, [r5, #44]	; 0x2c
  4029a4:	63bb      	str	r3, [r7, #56]	; 0x38
  4029a6:	b003      	add	sp, #12
  4029a8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  4029ac:	004028c5 	.word	0x004028c5
  4029b0:	00403ccd 	.word	0x00403ccd
  4029b4:	00403cf1 	.word	0x00403cf1
  4029b8:	00403d2d 	.word	0x00403d2d
  4029bc:	00403d4d 	.word	0x00403d4d

004029c0 <__sinit>:
  4029c0:	6b83      	ldr	r3, [r0, #56]	; 0x38
  4029c2:	b103      	cbz	r3, 4029c6 <__sinit+0x6>
  4029c4:	4770      	bx	lr
  4029c6:	f7ff bf83 	b.w	4028d0 <__sinit.part.1>
  4029ca:	bf00      	nop

004029cc <__sfp_lock_acquire>:
  4029cc:	4770      	bx	lr
  4029ce:	bf00      	nop

004029d0 <__sfp_lock_release>:
  4029d0:	4770      	bx	lr
  4029d2:	bf00      	nop

004029d4 <__libc_fini_array>:
  4029d4:	b538      	push	{r3, r4, r5, lr}
  4029d6:	4c0a      	ldr	r4, [pc, #40]	; (402a00 <__libc_fini_array+0x2c>)
  4029d8:	4d0a      	ldr	r5, [pc, #40]	; (402a04 <__libc_fini_array+0x30>)
  4029da:	1b64      	subs	r4, r4, r5
  4029dc:	10a4      	asrs	r4, r4, #2
  4029de:	d00a      	beq.n	4029f6 <__libc_fini_array+0x22>
  4029e0:	f104 4380 	add.w	r3, r4, #1073741824	; 0x40000000
  4029e4:	3b01      	subs	r3, #1
  4029e6:	eb05 0583 	add.w	r5, r5, r3, lsl #2
  4029ea:	3c01      	subs	r4, #1
  4029ec:	f855 3904 	ldr.w	r3, [r5], #-4
  4029f0:	4798      	blx	r3
  4029f2:	2c00      	cmp	r4, #0
  4029f4:	d1f9      	bne.n	4029ea <__libc_fini_array+0x16>
  4029f6:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  4029fa:	f001 be37 	b.w	40466c <_fini>
  4029fe:	bf00      	nop
  402a00:	0040467c 	.word	0x0040467c
  402a04:	00404678 	.word	0x00404678

00402a08 <__fputwc>:
  402a08:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
  402a0c:	b083      	sub	sp, #12
  402a0e:	4607      	mov	r7, r0
  402a10:	4688      	mov	r8, r1
  402a12:	4614      	mov	r4, r2
  402a14:	f000 fb2e 	bl	403074 <__locale_mb_cur_max>
  402a18:	2801      	cmp	r0, #1
  402a1a:	d033      	beq.n	402a84 <__fputwc+0x7c>
  402a1c:	4642      	mov	r2, r8
  402a1e:	f104 035c 	add.w	r3, r4, #92	; 0x5c
  402a22:	a901      	add	r1, sp, #4
  402a24:	4638      	mov	r0, r7
  402a26:	f001 f9ed 	bl	403e04 <_wcrtomb_r>
  402a2a:	1c42      	adds	r2, r0, #1
  402a2c:	4606      	mov	r6, r0
  402a2e:	d022      	beq.n	402a76 <__fputwc+0x6e>
  402a30:	b390      	cbz	r0, 402a98 <__fputwc+0x90>
  402a32:	f89d 1004 	ldrb.w	r1, [sp, #4]
  402a36:	2500      	movs	r5, #0
  402a38:	f10d 0904 	add.w	r9, sp, #4
  402a3c:	e008      	b.n	402a50 <__fputwc+0x48>
  402a3e:	6823      	ldr	r3, [r4, #0]
  402a40:	1c5a      	adds	r2, r3, #1
  402a42:	6022      	str	r2, [r4, #0]
  402a44:	7019      	strb	r1, [r3, #0]
  402a46:	3501      	adds	r5, #1
  402a48:	42b5      	cmp	r5, r6
  402a4a:	d225      	bcs.n	402a98 <__fputwc+0x90>
  402a4c:	f815 1009 	ldrb.w	r1, [r5, r9]
  402a50:	68a3      	ldr	r3, [r4, #8]
  402a52:	3b01      	subs	r3, #1
  402a54:	2b00      	cmp	r3, #0
  402a56:	60a3      	str	r3, [r4, #8]
  402a58:	daf1      	bge.n	402a3e <__fputwc+0x36>
  402a5a:	69a2      	ldr	r2, [r4, #24]
  402a5c:	4293      	cmp	r3, r2
  402a5e:	db01      	blt.n	402a64 <__fputwc+0x5c>
  402a60:	290a      	cmp	r1, #10
  402a62:	d1ec      	bne.n	402a3e <__fputwc+0x36>
  402a64:	4622      	mov	r2, r4
  402a66:	4638      	mov	r0, r7
  402a68:	f001 f974 	bl	403d54 <__swbuf_r>
  402a6c:	1c43      	adds	r3, r0, #1
  402a6e:	d1ea      	bne.n	402a46 <__fputwc+0x3e>
  402a70:	b003      	add	sp, #12
  402a72:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
  402a76:	89a3      	ldrh	r3, [r4, #12]
  402a78:	f043 0340 	orr.w	r3, r3, #64	; 0x40
  402a7c:	81a3      	strh	r3, [r4, #12]
  402a7e:	b003      	add	sp, #12
  402a80:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
  402a84:	f108 33ff 	add.w	r3, r8, #4294967295
  402a88:	2bfe      	cmp	r3, #254	; 0xfe
  402a8a:	d8c7      	bhi.n	402a1c <__fputwc+0x14>
  402a8c:	fa5f f188 	uxtb.w	r1, r8
  402a90:	4606      	mov	r6, r0
  402a92:	f88d 1004 	strb.w	r1, [sp, #4]
  402a96:	e7ce      	b.n	402a36 <__fputwc+0x2e>
  402a98:	4640      	mov	r0, r8
  402a9a:	b003      	add	sp, #12
  402a9c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}

00402aa0 <_fputwc_r>:
  402aa0:	f9b2 300c 	ldrsh.w	r3, [r2, #12]
  402aa4:	f413 5f00 	tst.w	r3, #8192	; 0x2000
  402aa8:	d10a      	bne.n	402ac0 <_fputwc_r+0x20>
  402aaa:	b410      	push	{r4}
  402aac:	6e54      	ldr	r4, [r2, #100]	; 0x64
  402aae:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
  402ab2:	f444 5400 	orr.w	r4, r4, #8192	; 0x2000
  402ab6:	6654      	str	r4, [r2, #100]	; 0x64
  402ab8:	8193      	strh	r3, [r2, #12]
  402aba:	bc10      	pop	{r4}
  402abc:	f7ff bfa4 	b.w	402a08 <__fputwc>
  402ac0:	f7ff bfa2 	b.w	402a08 <__fputwc>

00402ac4 <_malloc_trim_r>:
  402ac4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  402ac6:	460c      	mov	r4, r1
  402ac8:	4f23      	ldr	r7, [pc, #140]	; (402b58 <_malloc_trim_r+0x94>)
  402aca:	4606      	mov	r6, r0
  402acc:	f000 ff32 	bl	403934 <__malloc_lock>
  402ad0:	68bb      	ldr	r3, [r7, #8]
  402ad2:	f5c4 617e 	rsb	r1, r4, #4064	; 0xfe0
  402ad6:	685d      	ldr	r5, [r3, #4]
  402ad8:	310f      	adds	r1, #15
  402ada:	f025 0503 	bic.w	r5, r5, #3
  402ade:	4429      	add	r1, r5
  402ae0:	f421 617f 	bic.w	r1, r1, #4080	; 0xff0
  402ae4:	f021 010f 	bic.w	r1, r1, #15
  402ae8:	f5a1 5480 	sub.w	r4, r1, #4096	; 0x1000
  402aec:	f5b4 5f80 	cmp.w	r4, #4096	; 0x1000
  402af0:	db07      	blt.n	402b02 <_malloc_trim_r+0x3e>
  402af2:	2100      	movs	r1, #0
  402af4:	4630      	mov	r0, r6
  402af6:	f001 f8d7 	bl	403ca8 <_sbrk_r>
  402afa:	68bb      	ldr	r3, [r7, #8]
  402afc:	442b      	add	r3, r5
  402afe:	4298      	cmp	r0, r3
  402b00:	d004      	beq.n	402b0c <_malloc_trim_r+0x48>
  402b02:	4630      	mov	r0, r6
  402b04:	f000 ff18 	bl	403938 <__malloc_unlock>
  402b08:	2000      	movs	r0, #0
  402b0a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  402b0c:	4261      	negs	r1, r4
  402b0e:	4630      	mov	r0, r6
  402b10:	f001 f8ca 	bl	403ca8 <_sbrk_r>
  402b14:	3001      	adds	r0, #1
  402b16:	d00d      	beq.n	402b34 <_malloc_trim_r+0x70>
  402b18:	4b10      	ldr	r3, [pc, #64]	; (402b5c <_malloc_trim_r+0x98>)
  402b1a:	68ba      	ldr	r2, [r7, #8]
  402b1c:	6819      	ldr	r1, [r3, #0]
  402b1e:	1b2d      	subs	r5, r5, r4
  402b20:	f045 0501 	orr.w	r5, r5, #1
  402b24:	4630      	mov	r0, r6
  402b26:	1b09      	subs	r1, r1, r4
  402b28:	6055      	str	r5, [r2, #4]
  402b2a:	6019      	str	r1, [r3, #0]
  402b2c:	f000 ff04 	bl	403938 <__malloc_unlock>
  402b30:	2001      	movs	r0, #1
  402b32:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  402b34:	2100      	movs	r1, #0
  402b36:	4630      	mov	r0, r6
  402b38:	f001 f8b6 	bl	403ca8 <_sbrk_r>
  402b3c:	68ba      	ldr	r2, [r7, #8]
  402b3e:	1a83      	subs	r3, r0, r2
  402b40:	2b0f      	cmp	r3, #15
  402b42:	ddde      	ble.n	402b02 <_malloc_trim_r+0x3e>
  402b44:	4c06      	ldr	r4, [pc, #24]	; (402b60 <_malloc_trim_r+0x9c>)
  402b46:	4905      	ldr	r1, [pc, #20]	; (402b5c <_malloc_trim_r+0x98>)
  402b48:	6824      	ldr	r4, [r4, #0]
  402b4a:	f043 0301 	orr.w	r3, r3, #1
  402b4e:	1b00      	subs	r0, r0, r4
  402b50:	6053      	str	r3, [r2, #4]
  402b52:	6008      	str	r0, [r1, #0]
  402b54:	e7d5      	b.n	402b02 <_malloc_trim_r+0x3e>
  402b56:	bf00      	nop
  402b58:	200006a4 	.word	0x200006a4
  402b5c:	20000b50 	.word	0x20000b50
  402b60:	20000aac 	.word	0x20000aac

00402b64 <_free_r>:
  402b64:	2900      	cmp	r1, #0
  402b66:	d044      	beq.n	402bf2 <_free_r+0x8e>
  402b68:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  402b6c:	460d      	mov	r5, r1
  402b6e:	4680      	mov	r8, r0
  402b70:	f000 fee0 	bl	403934 <__malloc_lock>
  402b74:	f855 7c04 	ldr.w	r7, [r5, #-4]
  402b78:	4969      	ldr	r1, [pc, #420]	; (402d20 <_free_r+0x1bc>)
  402b7a:	f1a5 0408 	sub.w	r4, r5, #8
  402b7e:	f027 0301 	bic.w	r3, r7, #1
  402b82:	18e2      	adds	r2, r4, r3
  402b84:	688e      	ldr	r6, [r1, #8]
  402b86:	6850      	ldr	r0, [r2, #4]
  402b88:	42b2      	cmp	r2, r6
  402b8a:	f020 0003 	bic.w	r0, r0, #3
  402b8e:	d05e      	beq.n	402c4e <_free_r+0xea>
  402b90:	07fe      	lsls	r6, r7, #31
  402b92:	6050      	str	r0, [r2, #4]
  402b94:	d40b      	bmi.n	402bae <_free_r+0x4a>
  402b96:	f855 7c08 	ldr.w	r7, [r5, #-8]
  402b9a:	f101 0e08 	add.w	lr, r1, #8
  402b9e:	1be4      	subs	r4, r4, r7
  402ba0:	68a5      	ldr	r5, [r4, #8]
  402ba2:	443b      	add	r3, r7
  402ba4:	4575      	cmp	r5, lr
  402ba6:	d06d      	beq.n	402c84 <_free_r+0x120>
  402ba8:	68e7      	ldr	r7, [r4, #12]
  402baa:	60ef      	str	r7, [r5, #12]
  402bac:	60bd      	str	r5, [r7, #8]
  402bae:	1815      	adds	r5, r2, r0
  402bb0:	686d      	ldr	r5, [r5, #4]
  402bb2:	07ed      	lsls	r5, r5, #31
  402bb4:	d53e      	bpl.n	402c34 <_free_r+0xd0>
  402bb6:	f043 0201 	orr.w	r2, r3, #1
  402bba:	6062      	str	r2, [r4, #4]
  402bbc:	50e3      	str	r3, [r4, r3]
  402bbe:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
  402bc2:	d217      	bcs.n	402bf4 <_free_r+0x90>
  402bc4:	2201      	movs	r2, #1
  402bc6:	08db      	lsrs	r3, r3, #3
  402bc8:	1098      	asrs	r0, r3, #2
  402bca:	684d      	ldr	r5, [r1, #4]
  402bcc:	4413      	add	r3, r2
  402bce:	f851 7033 	ldr.w	r7, [r1, r3, lsl #3]
  402bd2:	4082      	lsls	r2, r0
  402bd4:	eb01 00c3 	add.w	r0, r1, r3, lsl #3
  402bd8:	432a      	orrs	r2, r5
  402bda:	3808      	subs	r0, #8
  402bdc:	60e0      	str	r0, [r4, #12]
  402bde:	60a7      	str	r7, [r4, #8]
  402be0:	604a      	str	r2, [r1, #4]
  402be2:	f841 4033 	str.w	r4, [r1, r3, lsl #3]
  402be6:	60fc      	str	r4, [r7, #12]
  402be8:	4640      	mov	r0, r8
  402bea:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
  402bee:	f000 bea3 	b.w	403938 <__malloc_unlock>
  402bf2:	4770      	bx	lr
  402bf4:	0a5a      	lsrs	r2, r3, #9
  402bf6:	2a04      	cmp	r2, #4
  402bf8:	d852      	bhi.n	402ca0 <_free_r+0x13c>
  402bfa:	099a      	lsrs	r2, r3, #6
  402bfc:	f102 0739 	add.w	r7, r2, #57	; 0x39
  402c00:	00ff      	lsls	r7, r7, #3
  402c02:	f102 0538 	add.w	r5, r2, #56	; 0x38
  402c06:	19c8      	adds	r0, r1, r7
  402c08:	59ca      	ldr	r2, [r1, r7]
  402c0a:	3808      	subs	r0, #8
  402c0c:	4290      	cmp	r0, r2
  402c0e:	d04f      	beq.n	402cb0 <_free_r+0x14c>
  402c10:	6851      	ldr	r1, [r2, #4]
  402c12:	f021 0103 	bic.w	r1, r1, #3
  402c16:	428b      	cmp	r3, r1
  402c18:	d232      	bcs.n	402c80 <_free_r+0x11c>
  402c1a:	6892      	ldr	r2, [r2, #8]
  402c1c:	4290      	cmp	r0, r2
  402c1e:	d1f7      	bne.n	402c10 <_free_r+0xac>
  402c20:	68c3      	ldr	r3, [r0, #12]
  402c22:	60a0      	str	r0, [r4, #8]
  402c24:	60e3      	str	r3, [r4, #12]
  402c26:	609c      	str	r4, [r3, #8]
  402c28:	60c4      	str	r4, [r0, #12]
  402c2a:	4640      	mov	r0, r8
  402c2c:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
  402c30:	f000 be82 	b.w	403938 <__malloc_unlock>
  402c34:	6895      	ldr	r5, [r2, #8]
  402c36:	4f3b      	ldr	r7, [pc, #236]	; (402d24 <_free_r+0x1c0>)
  402c38:	4403      	add	r3, r0
  402c3a:	42bd      	cmp	r5, r7
  402c3c:	d040      	beq.n	402cc0 <_free_r+0x15c>
  402c3e:	68d0      	ldr	r0, [r2, #12]
  402c40:	f043 0201 	orr.w	r2, r3, #1
  402c44:	60e8      	str	r0, [r5, #12]
  402c46:	6085      	str	r5, [r0, #8]
  402c48:	6062      	str	r2, [r4, #4]
  402c4a:	50e3      	str	r3, [r4, r3]
  402c4c:	e7b7      	b.n	402bbe <_free_r+0x5a>
  402c4e:	07ff      	lsls	r7, r7, #31
  402c50:	4403      	add	r3, r0
  402c52:	d407      	bmi.n	402c64 <_free_r+0x100>
  402c54:	f855 5c08 	ldr.w	r5, [r5, #-8]
  402c58:	1b64      	subs	r4, r4, r5
  402c5a:	68e2      	ldr	r2, [r4, #12]
  402c5c:	68a0      	ldr	r0, [r4, #8]
  402c5e:	442b      	add	r3, r5
  402c60:	60c2      	str	r2, [r0, #12]
  402c62:	6090      	str	r0, [r2, #8]
  402c64:	4a30      	ldr	r2, [pc, #192]	; (402d28 <_free_r+0x1c4>)
  402c66:	f043 0001 	orr.w	r0, r3, #1
  402c6a:	6812      	ldr	r2, [r2, #0]
  402c6c:	6060      	str	r0, [r4, #4]
  402c6e:	4293      	cmp	r3, r2
  402c70:	608c      	str	r4, [r1, #8]
  402c72:	d3b9      	bcc.n	402be8 <_free_r+0x84>
  402c74:	4b2d      	ldr	r3, [pc, #180]	; (402d2c <_free_r+0x1c8>)
  402c76:	4640      	mov	r0, r8
  402c78:	6819      	ldr	r1, [r3, #0]
  402c7a:	f7ff ff23 	bl	402ac4 <_malloc_trim_r>
  402c7e:	e7b3      	b.n	402be8 <_free_r+0x84>
  402c80:	4610      	mov	r0, r2
  402c82:	e7cd      	b.n	402c20 <_free_r+0xbc>
  402c84:	1811      	adds	r1, r2, r0
  402c86:	6849      	ldr	r1, [r1, #4]
  402c88:	07c9      	lsls	r1, r1, #31
  402c8a:	d444      	bmi.n	402d16 <_free_r+0x1b2>
  402c8c:	6891      	ldr	r1, [r2, #8]
  402c8e:	4403      	add	r3, r0
  402c90:	68d2      	ldr	r2, [r2, #12]
  402c92:	f043 0001 	orr.w	r0, r3, #1
  402c96:	60ca      	str	r2, [r1, #12]
  402c98:	6091      	str	r1, [r2, #8]
  402c9a:	6060      	str	r0, [r4, #4]
  402c9c:	50e3      	str	r3, [r4, r3]
  402c9e:	e7a3      	b.n	402be8 <_free_r+0x84>
  402ca0:	2a14      	cmp	r2, #20
  402ca2:	d816      	bhi.n	402cd2 <_free_r+0x16e>
  402ca4:	f102 075c 	add.w	r7, r2, #92	; 0x5c
  402ca8:	00ff      	lsls	r7, r7, #3
  402caa:	f102 055b 	add.w	r5, r2, #91	; 0x5b
  402cae:	e7aa      	b.n	402c06 <_free_r+0xa2>
  402cb0:	2301      	movs	r3, #1
  402cb2:	10aa      	asrs	r2, r5, #2
  402cb4:	684d      	ldr	r5, [r1, #4]
  402cb6:	4093      	lsls	r3, r2
  402cb8:	432b      	orrs	r3, r5
  402cba:	604b      	str	r3, [r1, #4]
  402cbc:	4603      	mov	r3, r0
  402cbe:	e7b0      	b.n	402c22 <_free_r+0xbe>
  402cc0:	f043 0201 	orr.w	r2, r3, #1
  402cc4:	614c      	str	r4, [r1, #20]
  402cc6:	610c      	str	r4, [r1, #16]
  402cc8:	60e5      	str	r5, [r4, #12]
  402cca:	60a5      	str	r5, [r4, #8]
  402ccc:	6062      	str	r2, [r4, #4]
  402cce:	50e3      	str	r3, [r4, r3]
  402cd0:	e78a      	b.n	402be8 <_free_r+0x84>
  402cd2:	2a54      	cmp	r2, #84	; 0x54
  402cd4:	d806      	bhi.n	402ce4 <_free_r+0x180>
  402cd6:	0b1a      	lsrs	r2, r3, #12
  402cd8:	f102 076f 	add.w	r7, r2, #111	; 0x6f
  402cdc:	00ff      	lsls	r7, r7, #3
  402cde:	f102 056e 	add.w	r5, r2, #110	; 0x6e
  402ce2:	e790      	b.n	402c06 <_free_r+0xa2>
  402ce4:	f5b2 7faa 	cmp.w	r2, #340	; 0x154
  402ce8:	d806      	bhi.n	402cf8 <_free_r+0x194>
  402cea:	0bda      	lsrs	r2, r3, #15
  402cec:	f102 0778 	add.w	r7, r2, #120	; 0x78
  402cf0:	00ff      	lsls	r7, r7, #3
  402cf2:	f102 0577 	add.w	r5, r2, #119	; 0x77
  402cf6:	e786      	b.n	402c06 <_free_r+0xa2>
  402cf8:	f240 5054 	movw	r0, #1364	; 0x554
  402cfc:	4282      	cmp	r2, r0
  402cfe:	d806      	bhi.n	402d0e <_free_r+0x1aa>
  402d00:	0c9a      	lsrs	r2, r3, #18
  402d02:	f102 077d 	add.w	r7, r2, #125	; 0x7d
  402d06:	00ff      	lsls	r7, r7, #3
  402d08:	f102 057c 	add.w	r5, r2, #124	; 0x7c
  402d0c:	e77b      	b.n	402c06 <_free_r+0xa2>
  402d0e:	f44f 777e 	mov.w	r7, #1016	; 0x3f8
  402d12:	257e      	movs	r5, #126	; 0x7e
  402d14:	e777      	b.n	402c06 <_free_r+0xa2>
  402d16:	f043 0101 	orr.w	r1, r3, #1
  402d1a:	6061      	str	r1, [r4, #4]
  402d1c:	6013      	str	r3, [r2, #0]
  402d1e:	e763      	b.n	402be8 <_free_r+0x84>
  402d20:	200006a4 	.word	0x200006a4
  402d24:	200006ac 	.word	0x200006ac
  402d28:	20000ab0 	.word	0x20000ab0
  402d2c:	20000b80 	.word	0x20000b80

00402d30 <__sfvwrite_r>:
  402d30:	6893      	ldr	r3, [r2, #8]
  402d32:	2b00      	cmp	r3, #0
  402d34:	d071      	beq.n	402e1a <__sfvwrite_r+0xea>
  402d36:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  402d3a:	898b      	ldrh	r3, [r1, #12]
  402d3c:	b083      	sub	sp, #12
  402d3e:	460c      	mov	r4, r1
  402d40:	0719      	lsls	r1, r3, #28
  402d42:	9000      	str	r0, [sp, #0]
  402d44:	4616      	mov	r6, r2
  402d46:	d525      	bpl.n	402d94 <__sfvwrite_r+0x64>
  402d48:	6922      	ldr	r2, [r4, #16]
  402d4a:	b31a      	cbz	r2, 402d94 <__sfvwrite_r+0x64>
  402d4c:	f013 0002 	ands.w	r0, r3, #2
  402d50:	6835      	ldr	r5, [r6, #0]
  402d52:	d02b      	beq.n	402dac <__sfvwrite_r+0x7c>
  402d54:	f04f 0900 	mov.w	r9, #0
  402d58:	46b0      	mov	r8, r6
  402d5a:	464f      	mov	r7, r9
  402d5c:	f8df a2c0 	ldr.w	sl, [pc, #704]	; 403020 <__sfvwrite_r+0x2f0>
  402d60:	2f00      	cmp	r7, #0
  402d62:	d055      	beq.n	402e10 <__sfvwrite_r+0xe0>
  402d64:	4557      	cmp	r7, sl
  402d66:	463b      	mov	r3, r7
  402d68:	464a      	mov	r2, r9
  402d6a:	bf28      	it	cs
  402d6c:	4653      	movcs	r3, sl
  402d6e:	69e1      	ldr	r1, [r4, #28]
  402d70:	9800      	ldr	r0, [sp, #0]
  402d72:	6a66      	ldr	r6, [r4, #36]	; 0x24
  402d74:	47b0      	blx	r6
  402d76:	2800      	cmp	r0, #0
  402d78:	dd56      	ble.n	402e28 <__sfvwrite_r+0xf8>
  402d7a:	f8d8 3008 	ldr.w	r3, [r8, #8]
  402d7e:	4481      	add	r9, r0
  402d80:	1a1b      	subs	r3, r3, r0
  402d82:	1a3f      	subs	r7, r7, r0
  402d84:	f8c8 3008 	str.w	r3, [r8, #8]
  402d88:	2b00      	cmp	r3, #0
  402d8a:	d1e9      	bne.n	402d60 <__sfvwrite_r+0x30>
  402d8c:	2000      	movs	r0, #0
  402d8e:	b003      	add	sp, #12
  402d90:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  402d94:	4621      	mov	r1, r4
  402d96:	9800      	ldr	r0, [sp, #0]
  402d98:	f7ff fc6e 	bl	402678 <__swsetup_r>
  402d9c:	2800      	cmp	r0, #0
  402d9e:	f040 8135 	bne.w	40300c <__sfvwrite_r+0x2dc>
  402da2:	89a3      	ldrh	r3, [r4, #12]
  402da4:	6835      	ldr	r5, [r6, #0]
  402da6:	f013 0002 	ands.w	r0, r3, #2
  402daa:	d1d3      	bne.n	402d54 <__sfvwrite_r+0x24>
  402dac:	f013 0901 	ands.w	r9, r3, #1
  402db0:	d144      	bne.n	402e3c <__sfvwrite_r+0x10c>
  402db2:	464f      	mov	r7, r9
  402db4:	9601      	str	r6, [sp, #4]
  402db6:	b337      	cbz	r7, 402e06 <__sfvwrite_r+0xd6>
  402db8:	059a      	lsls	r2, r3, #22
  402dba:	f8d4 8008 	ldr.w	r8, [r4, #8]
  402dbe:	f140 8085 	bpl.w	402ecc <__sfvwrite_r+0x19c>
  402dc2:	4547      	cmp	r7, r8
  402dc4:	46c3      	mov	fp, r8
  402dc6:	f0c0 80ad 	bcc.w	402f24 <__sfvwrite_r+0x1f4>
  402dca:	f413 6f90 	tst.w	r3, #1152	; 0x480
  402dce:	f040 80ae 	bne.w	402f2e <__sfvwrite_r+0x1fe>
  402dd2:	46ba      	mov	sl, r7
  402dd4:	6820      	ldr	r0, [r4, #0]
  402dd6:	465a      	mov	r2, fp
  402dd8:	4649      	mov	r1, r9
  402dda:	f000 fd47 	bl	40386c <memmove>
  402dde:	68a2      	ldr	r2, [r4, #8]
  402de0:	6823      	ldr	r3, [r4, #0]
  402de2:	eba2 0208 	sub.w	r2, r2, r8
  402de6:	445b      	add	r3, fp
  402de8:	60a2      	str	r2, [r4, #8]
  402dea:	6023      	str	r3, [r4, #0]
  402dec:	9a01      	ldr	r2, [sp, #4]
  402dee:	44d1      	add	r9, sl
  402df0:	6893      	ldr	r3, [r2, #8]
  402df2:	eba7 070a 	sub.w	r7, r7, sl
  402df6:	eba3 030a 	sub.w	r3, r3, sl
  402dfa:	6093      	str	r3, [r2, #8]
  402dfc:	2b00      	cmp	r3, #0
  402dfe:	d0c5      	beq.n	402d8c <__sfvwrite_r+0x5c>
  402e00:	89a3      	ldrh	r3, [r4, #12]
  402e02:	2f00      	cmp	r7, #0
  402e04:	d1d8      	bne.n	402db8 <__sfvwrite_r+0x88>
  402e06:	f8d5 9000 	ldr.w	r9, [r5]
  402e0a:	686f      	ldr	r7, [r5, #4]
  402e0c:	3508      	adds	r5, #8
  402e0e:	e7d2      	b.n	402db6 <__sfvwrite_r+0x86>
  402e10:	f8d5 9000 	ldr.w	r9, [r5]
  402e14:	686f      	ldr	r7, [r5, #4]
  402e16:	3508      	adds	r5, #8
  402e18:	e7a2      	b.n	402d60 <__sfvwrite_r+0x30>
  402e1a:	2000      	movs	r0, #0
  402e1c:	4770      	bx	lr
  402e1e:	4621      	mov	r1, r4
  402e20:	9800      	ldr	r0, [sp, #0]
  402e22:	f7ff fd39 	bl	402898 <_fflush_r>
  402e26:	b378      	cbz	r0, 402e88 <__sfvwrite_r+0x158>
  402e28:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  402e2c:	f04f 30ff 	mov.w	r0, #4294967295
  402e30:	f043 0340 	orr.w	r3, r3, #64	; 0x40
  402e34:	81a3      	strh	r3, [r4, #12]
  402e36:	b003      	add	sp, #12
  402e38:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  402e3c:	4681      	mov	r9, r0
  402e3e:	4633      	mov	r3, r6
  402e40:	464e      	mov	r6, r9
  402e42:	46a8      	mov	r8, r5
  402e44:	469a      	mov	sl, r3
  402e46:	464d      	mov	r5, r9
  402e48:	b356      	cbz	r6, 402ea0 <__sfvwrite_r+0x170>
  402e4a:	2800      	cmp	r0, #0
  402e4c:	d032      	beq.n	402eb4 <__sfvwrite_r+0x184>
  402e4e:	45b1      	cmp	r9, r6
  402e50:	46cb      	mov	fp, r9
  402e52:	bf28      	it	cs
  402e54:	46b3      	movcs	fp, r6
  402e56:	6820      	ldr	r0, [r4, #0]
  402e58:	6923      	ldr	r3, [r4, #16]
  402e5a:	465f      	mov	r7, fp
  402e5c:	4298      	cmp	r0, r3
  402e5e:	6962      	ldr	r2, [r4, #20]
  402e60:	d904      	bls.n	402e6c <__sfvwrite_r+0x13c>
  402e62:	68a3      	ldr	r3, [r4, #8]
  402e64:	4413      	add	r3, r2
  402e66:	459b      	cmp	fp, r3
  402e68:	f300 80a8 	bgt.w	402fbc <__sfvwrite_r+0x28c>
  402e6c:	4593      	cmp	fp, r2
  402e6e:	db4d      	blt.n	402f0c <__sfvwrite_r+0x1dc>
  402e70:	4613      	mov	r3, r2
  402e72:	6a67      	ldr	r7, [r4, #36]	; 0x24
  402e74:	462a      	mov	r2, r5
  402e76:	69e1      	ldr	r1, [r4, #28]
  402e78:	9800      	ldr	r0, [sp, #0]
  402e7a:	47b8      	blx	r7
  402e7c:	1e07      	subs	r7, r0, #0
  402e7e:	ddd3      	ble.n	402e28 <__sfvwrite_r+0xf8>
  402e80:	ebb9 0907 	subs.w	r9, r9, r7
  402e84:	d0cb      	beq.n	402e1e <__sfvwrite_r+0xee>
  402e86:	2001      	movs	r0, #1
  402e88:	f8da 3008 	ldr.w	r3, [sl, #8]
  402e8c:	443d      	add	r5, r7
  402e8e:	1bdb      	subs	r3, r3, r7
  402e90:	1bf6      	subs	r6, r6, r7
  402e92:	f8ca 3008 	str.w	r3, [sl, #8]
  402e96:	2b00      	cmp	r3, #0
  402e98:	f43f af78 	beq.w	402d8c <__sfvwrite_r+0x5c>
  402e9c:	2e00      	cmp	r6, #0
  402e9e:	d1d4      	bne.n	402e4a <__sfvwrite_r+0x11a>
  402ea0:	f108 0308 	add.w	r3, r8, #8
  402ea4:	f853 6c04 	ldr.w	r6, [r3, #-4]
  402ea8:	4698      	mov	r8, r3
  402eaa:	f853 5c08 	ldr.w	r5, [r3, #-8]
  402eae:	3308      	adds	r3, #8
  402eb0:	2e00      	cmp	r6, #0
  402eb2:	d0f7      	beq.n	402ea4 <__sfvwrite_r+0x174>
  402eb4:	4632      	mov	r2, r6
  402eb6:	210a      	movs	r1, #10
  402eb8:	4628      	mov	r0, r5
  402eba:	f000 fc1b 	bl	4036f4 <memchr>
  402ebe:	2800      	cmp	r0, #0
  402ec0:	f000 80a1 	beq.w	403006 <__sfvwrite_r+0x2d6>
  402ec4:	3001      	adds	r0, #1
  402ec6:	eba0 0905 	sub.w	r9, r0, r5
  402eca:	e7c0      	b.n	402e4e <__sfvwrite_r+0x11e>
  402ecc:	6820      	ldr	r0, [r4, #0]
  402ece:	6923      	ldr	r3, [r4, #16]
  402ed0:	4298      	cmp	r0, r3
  402ed2:	d802      	bhi.n	402eda <__sfvwrite_r+0x1aa>
  402ed4:	6963      	ldr	r3, [r4, #20]
  402ed6:	429f      	cmp	r7, r3
  402ed8:	d25d      	bcs.n	402f96 <__sfvwrite_r+0x266>
  402eda:	45b8      	cmp	r8, r7
  402edc:	bf28      	it	cs
  402ede:	46b8      	movcs	r8, r7
  402ee0:	4649      	mov	r1, r9
  402ee2:	4642      	mov	r2, r8
  402ee4:	f000 fcc2 	bl	40386c <memmove>
  402ee8:	68a3      	ldr	r3, [r4, #8]
  402eea:	6822      	ldr	r2, [r4, #0]
  402eec:	eba3 0308 	sub.w	r3, r3, r8
  402ef0:	4442      	add	r2, r8
  402ef2:	60a3      	str	r3, [r4, #8]
  402ef4:	6022      	str	r2, [r4, #0]
  402ef6:	b10b      	cbz	r3, 402efc <__sfvwrite_r+0x1cc>
  402ef8:	46c2      	mov	sl, r8
  402efa:	e777      	b.n	402dec <__sfvwrite_r+0xbc>
  402efc:	4621      	mov	r1, r4
  402efe:	9800      	ldr	r0, [sp, #0]
  402f00:	f7ff fcca 	bl	402898 <_fflush_r>
  402f04:	2800      	cmp	r0, #0
  402f06:	d18f      	bne.n	402e28 <__sfvwrite_r+0xf8>
  402f08:	46c2      	mov	sl, r8
  402f0a:	e76f      	b.n	402dec <__sfvwrite_r+0xbc>
  402f0c:	465a      	mov	r2, fp
  402f0e:	4629      	mov	r1, r5
  402f10:	f000 fcac 	bl	40386c <memmove>
  402f14:	68a2      	ldr	r2, [r4, #8]
  402f16:	6823      	ldr	r3, [r4, #0]
  402f18:	eba2 020b 	sub.w	r2, r2, fp
  402f1c:	445b      	add	r3, fp
  402f1e:	60a2      	str	r2, [r4, #8]
  402f20:	6023      	str	r3, [r4, #0]
  402f22:	e7ad      	b.n	402e80 <__sfvwrite_r+0x150>
  402f24:	46b8      	mov	r8, r7
  402f26:	46ba      	mov	sl, r7
  402f28:	46bb      	mov	fp, r7
  402f2a:	6820      	ldr	r0, [r4, #0]
  402f2c:	e753      	b.n	402dd6 <__sfvwrite_r+0xa6>
  402f2e:	6962      	ldr	r2, [r4, #20]
  402f30:	6820      	ldr	r0, [r4, #0]
  402f32:	6921      	ldr	r1, [r4, #16]
  402f34:	eb02 0842 	add.w	r8, r2, r2, lsl #1
  402f38:	eba0 0a01 	sub.w	sl, r0, r1
  402f3c:	eb08 78d8 	add.w	r8, r8, r8, lsr #31
  402f40:	f10a 0001 	add.w	r0, sl, #1
  402f44:	ea4f 0868 	mov.w	r8, r8, asr #1
  402f48:	4438      	add	r0, r7
  402f4a:	4540      	cmp	r0, r8
  402f4c:	4642      	mov	r2, r8
  402f4e:	bf84      	itt	hi
  402f50:	4680      	movhi	r8, r0
  402f52:	4642      	movhi	r2, r8
  402f54:	055b      	lsls	r3, r3, #21
  402f56:	d544      	bpl.n	402fe2 <__sfvwrite_r+0x2b2>
  402f58:	4611      	mov	r1, r2
  402f5a:	9800      	ldr	r0, [sp, #0]
  402f5c:	f000 f912 	bl	403184 <_malloc_r>
  402f60:	4683      	mov	fp, r0
  402f62:	2800      	cmp	r0, #0
  402f64:	d055      	beq.n	403012 <__sfvwrite_r+0x2e2>
  402f66:	4652      	mov	r2, sl
  402f68:	6921      	ldr	r1, [r4, #16]
  402f6a:	f000 fc09 	bl	403780 <memcpy>
  402f6e:	89a3      	ldrh	r3, [r4, #12]
  402f70:	f423 6390 	bic.w	r3, r3, #1152	; 0x480
  402f74:	f043 0380 	orr.w	r3, r3, #128	; 0x80
  402f78:	81a3      	strh	r3, [r4, #12]
  402f7a:	eb0b 000a 	add.w	r0, fp, sl
  402f7e:	eba8 030a 	sub.w	r3, r8, sl
  402f82:	f8c4 b010 	str.w	fp, [r4, #16]
  402f86:	f8c4 8014 	str.w	r8, [r4, #20]
  402f8a:	6020      	str	r0, [r4, #0]
  402f8c:	60a3      	str	r3, [r4, #8]
  402f8e:	46b8      	mov	r8, r7
  402f90:	46ba      	mov	sl, r7
  402f92:	46bb      	mov	fp, r7
  402f94:	e71f      	b.n	402dd6 <__sfvwrite_r+0xa6>
  402f96:	f06f 4200 	mvn.w	r2, #2147483648	; 0x80000000
  402f9a:	42ba      	cmp	r2, r7
  402f9c:	bf28      	it	cs
  402f9e:	463a      	movcs	r2, r7
  402fa0:	fb92 f2f3 	sdiv	r2, r2, r3
  402fa4:	69e1      	ldr	r1, [r4, #28]
  402fa6:	fb03 f302 	mul.w	r3, r3, r2
  402faa:	9800      	ldr	r0, [sp, #0]
  402fac:	464a      	mov	r2, r9
  402fae:	6a66      	ldr	r6, [r4, #36]	; 0x24
  402fb0:	47b0      	blx	r6
  402fb2:	f1b0 0a00 	subs.w	sl, r0, #0
  402fb6:	f73f af19 	bgt.w	402dec <__sfvwrite_r+0xbc>
  402fba:	e735      	b.n	402e28 <__sfvwrite_r+0xf8>
  402fbc:	461a      	mov	r2, r3
  402fbe:	4629      	mov	r1, r5
  402fc0:	9301      	str	r3, [sp, #4]
  402fc2:	f000 fc53 	bl	40386c <memmove>
  402fc6:	6822      	ldr	r2, [r4, #0]
  402fc8:	9b01      	ldr	r3, [sp, #4]
  402fca:	4621      	mov	r1, r4
  402fcc:	441a      	add	r2, r3
  402fce:	6022      	str	r2, [r4, #0]
  402fd0:	9800      	ldr	r0, [sp, #0]
  402fd2:	f7ff fc61 	bl	402898 <_fflush_r>
  402fd6:	9b01      	ldr	r3, [sp, #4]
  402fd8:	2800      	cmp	r0, #0
  402fda:	f47f af25 	bne.w	402e28 <__sfvwrite_r+0xf8>
  402fde:	461f      	mov	r7, r3
  402fe0:	e74e      	b.n	402e80 <__sfvwrite_r+0x150>
  402fe2:	9800      	ldr	r0, [sp, #0]
  402fe4:	f000 fcaa 	bl	40393c <_realloc_r>
  402fe8:	4683      	mov	fp, r0
  402fea:	2800      	cmp	r0, #0
  402fec:	d1c5      	bne.n	402f7a <__sfvwrite_r+0x24a>
  402fee:	9d00      	ldr	r5, [sp, #0]
  402ff0:	6921      	ldr	r1, [r4, #16]
  402ff2:	4628      	mov	r0, r5
  402ff4:	f7ff fdb6 	bl	402b64 <_free_r>
  402ff8:	220c      	movs	r2, #12
  402ffa:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  402ffe:	602a      	str	r2, [r5, #0]
  403000:	f023 0380 	bic.w	r3, r3, #128	; 0x80
  403004:	e712      	b.n	402e2c <__sfvwrite_r+0xfc>
  403006:	f106 0901 	add.w	r9, r6, #1
  40300a:	e720      	b.n	402e4e <__sfvwrite_r+0x11e>
  40300c:	f04f 30ff 	mov.w	r0, #4294967295
  403010:	e6bd      	b.n	402d8e <__sfvwrite_r+0x5e>
  403012:	220c      	movs	r2, #12
  403014:	9900      	ldr	r1, [sp, #0]
  403016:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  40301a:	600a      	str	r2, [r1, #0]
  40301c:	e706      	b.n	402e2c <__sfvwrite_r+0xfc>
  40301e:	bf00      	nop
  403020:	7ffffc00 	.word	0x7ffffc00

00403024 <_fwalk_reent>:
  403024:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
  403028:	f510 7638 	adds.w	r6, r0, #736	; 0x2e0
  40302c:	d01e      	beq.n	40306c <_fwalk_reent+0x48>
  40302e:	4688      	mov	r8, r1
  403030:	4607      	mov	r7, r0
  403032:	f04f 0900 	mov.w	r9, #0
  403036:	6875      	ldr	r5, [r6, #4]
  403038:	68b4      	ldr	r4, [r6, #8]
  40303a:	3d01      	subs	r5, #1
  40303c:	d410      	bmi.n	403060 <_fwalk_reent+0x3c>
  40303e:	89a3      	ldrh	r3, [r4, #12]
  403040:	3d01      	subs	r5, #1
  403042:	2b01      	cmp	r3, #1
  403044:	d908      	bls.n	403058 <_fwalk_reent+0x34>
  403046:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
  40304a:	3301      	adds	r3, #1
  40304c:	d004      	beq.n	403058 <_fwalk_reent+0x34>
  40304e:	4621      	mov	r1, r4
  403050:	4638      	mov	r0, r7
  403052:	47c0      	blx	r8
  403054:	ea49 0900 	orr.w	r9, r9, r0
  403058:	1c6b      	adds	r3, r5, #1
  40305a:	f104 0468 	add.w	r4, r4, #104	; 0x68
  40305e:	d1ee      	bne.n	40303e <_fwalk_reent+0x1a>
  403060:	6836      	ldr	r6, [r6, #0]
  403062:	2e00      	cmp	r6, #0
  403064:	d1e7      	bne.n	403036 <_fwalk_reent+0x12>
  403066:	4648      	mov	r0, r9
  403068:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  40306c:	46b1      	mov	r9, r6
  40306e:	4648      	mov	r0, r9
  403070:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}

00403074 <__locale_mb_cur_max>:
  403074:	4b04      	ldr	r3, [pc, #16]	; (403088 <__locale_mb_cur_max+0x14>)
  403076:	4a05      	ldr	r2, [pc, #20]	; (40308c <__locale_mb_cur_max+0x18>)
  403078:	681b      	ldr	r3, [r3, #0]
  40307a:	6b5b      	ldr	r3, [r3, #52]	; 0x34
  40307c:	2b00      	cmp	r3, #0
  40307e:	bf08      	it	eq
  403080:	4613      	moveq	r3, r2
  403082:	f893 0128 	ldrb.w	r0, [r3, #296]	; 0x128
  403086:	4770      	bx	lr
  403088:	20000108 	.word	0x20000108
  40308c:	20000538 	.word	0x20000538

00403090 <__swhatbuf_r>:
  403090:	b570      	push	{r4, r5, r6, lr}
  403092:	460c      	mov	r4, r1
  403094:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
  403098:	b090      	sub	sp, #64	; 0x40
  40309a:	2900      	cmp	r1, #0
  40309c:	4615      	mov	r5, r2
  40309e:	461e      	mov	r6, r3
  4030a0:	db14      	blt.n	4030cc <__swhatbuf_r+0x3c>
  4030a2:	aa01      	add	r2, sp, #4
  4030a4:	f000 ffa2 	bl	403fec <_fstat_r>
  4030a8:	2800      	cmp	r0, #0
  4030aa:	db0f      	blt.n	4030cc <__swhatbuf_r+0x3c>
  4030ac:	9a02      	ldr	r2, [sp, #8]
  4030ae:	f44f 6380 	mov.w	r3, #1024	; 0x400
  4030b2:	f402 4270 	and.w	r2, r2, #61440	; 0xf000
  4030b6:	f5a2 5200 	sub.w	r2, r2, #8192	; 0x2000
  4030ba:	fab2 f282 	clz	r2, r2
  4030be:	f44f 6000 	mov.w	r0, #2048	; 0x800
  4030c2:	0952      	lsrs	r2, r2, #5
  4030c4:	6032      	str	r2, [r6, #0]
  4030c6:	602b      	str	r3, [r5, #0]
  4030c8:	b010      	add	sp, #64	; 0x40
  4030ca:	bd70      	pop	{r4, r5, r6, pc}
  4030cc:	2300      	movs	r3, #0
  4030ce:	89a2      	ldrh	r2, [r4, #12]
  4030d0:	6033      	str	r3, [r6, #0]
  4030d2:	f012 0080 	ands.w	r0, r2, #128	; 0x80
  4030d6:	d004      	beq.n	4030e2 <__swhatbuf_r+0x52>
  4030d8:	2240      	movs	r2, #64	; 0x40
  4030da:	4618      	mov	r0, r3
  4030dc:	602a      	str	r2, [r5, #0]
  4030de:	b010      	add	sp, #64	; 0x40
  4030e0:	bd70      	pop	{r4, r5, r6, pc}
  4030e2:	f44f 6380 	mov.w	r3, #1024	; 0x400
  4030e6:	602b      	str	r3, [r5, #0]
  4030e8:	b010      	add	sp, #64	; 0x40
  4030ea:	bd70      	pop	{r4, r5, r6, pc}

004030ec <__smakebuf_r>:
  4030ec:	898a      	ldrh	r2, [r1, #12]
  4030ee:	460b      	mov	r3, r1
  4030f0:	0792      	lsls	r2, r2, #30
  4030f2:	d506      	bpl.n	403102 <__smakebuf_r+0x16>
  4030f4:	2101      	movs	r1, #1
  4030f6:	f103 0243 	add.w	r2, r3, #67	; 0x43
  4030fa:	6159      	str	r1, [r3, #20]
  4030fc:	601a      	str	r2, [r3, #0]
  4030fe:	611a      	str	r2, [r3, #16]
  403100:	4770      	bx	lr
  403102:	b5f0      	push	{r4, r5, r6, r7, lr}
  403104:	b083      	sub	sp, #12
  403106:	ab01      	add	r3, sp, #4
  403108:	466a      	mov	r2, sp
  40310a:	460c      	mov	r4, r1
  40310c:	4605      	mov	r5, r0
  40310e:	f7ff ffbf 	bl	403090 <__swhatbuf_r>
  403112:	9900      	ldr	r1, [sp, #0]
  403114:	4606      	mov	r6, r0
  403116:	4628      	mov	r0, r5
  403118:	f000 f834 	bl	403184 <_malloc_r>
  40311c:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  403120:	b1d0      	cbz	r0, 403158 <__smakebuf_r+0x6c>
  403122:	e89d 0006 	ldmia.w	sp, {r1, r2}
  403126:	4f12      	ldr	r7, [pc, #72]	; (403170 <__smakebuf_r+0x84>)
  403128:	f043 0380 	orr.w	r3, r3, #128	; 0x80
  40312c:	63ef      	str	r7, [r5, #60]	; 0x3c
  40312e:	81a3      	strh	r3, [r4, #12]
  403130:	6020      	str	r0, [r4, #0]
  403132:	6120      	str	r0, [r4, #16]
  403134:	6161      	str	r1, [r4, #20]
  403136:	b91a      	cbnz	r2, 403140 <__smakebuf_r+0x54>
  403138:	4333      	orrs	r3, r6
  40313a:	81a3      	strh	r3, [r4, #12]
  40313c:	b003      	add	sp, #12
  40313e:	bdf0      	pop	{r4, r5, r6, r7, pc}
  403140:	4628      	mov	r0, r5
  403142:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
  403146:	f000 ff65 	bl	404014 <_isatty_r>
  40314a:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  40314e:	2800      	cmp	r0, #0
  403150:	d0f2      	beq.n	403138 <__smakebuf_r+0x4c>
  403152:	f043 0301 	orr.w	r3, r3, #1
  403156:	e7ef      	b.n	403138 <__smakebuf_r+0x4c>
  403158:	059a      	lsls	r2, r3, #22
  40315a:	d4ef      	bmi.n	40313c <__smakebuf_r+0x50>
  40315c:	2101      	movs	r1, #1
  40315e:	f104 0243 	add.w	r2, r4, #67	; 0x43
  403162:	f043 0302 	orr.w	r3, r3, #2
  403166:	81a3      	strh	r3, [r4, #12]
  403168:	6161      	str	r1, [r4, #20]
  40316a:	6022      	str	r2, [r4, #0]
  40316c:	6122      	str	r2, [r4, #16]
  40316e:	e7e5      	b.n	40313c <__smakebuf_r+0x50>
  403170:	004028c5 	.word	0x004028c5

00403174 <malloc>:
  403174:	4b02      	ldr	r3, [pc, #8]	; (403180 <malloc+0xc>)
  403176:	4601      	mov	r1, r0
  403178:	6818      	ldr	r0, [r3, #0]
  40317a:	f000 b803 	b.w	403184 <_malloc_r>
  40317e:	bf00      	nop
  403180:	20000108 	.word	0x20000108

00403184 <_malloc_r>:
  403184:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  403188:	f101 060b 	add.w	r6, r1, #11
  40318c:	2e16      	cmp	r6, #22
  40318e:	b083      	sub	sp, #12
  403190:	4605      	mov	r5, r0
  403192:	f240 809e 	bls.w	4032d2 <_malloc_r+0x14e>
  403196:	f036 0607 	bics.w	r6, r6, #7
  40319a:	f100 80bd 	bmi.w	403318 <_malloc_r+0x194>
  40319e:	42b1      	cmp	r1, r6
  4031a0:	f200 80ba 	bhi.w	403318 <_malloc_r+0x194>
  4031a4:	f000 fbc6 	bl	403934 <__malloc_lock>
  4031a8:	f5b6 7ffc 	cmp.w	r6, #504	; 0x1f8
  4031ac:	f0c0 8285 	bcc.w	4036ba <_malloc_r+0x536>
  4031b0:	0a73      	lsrs	r3, r6, #9
  4031b2:	f000 80b8 	beq.w	403326 <_malloc_r+0x1a2>
  4031b6:	2b04      	cmp	r3, #4
  4031b8:	f200 816c 	bhi.w	403494 <_malloc_r+0x310>
  4031bc:	09b3      	lsrs	r3, r6, #6
  4031be:	f103 0039 	add.w	r0, r3, #57	; 0x39
  4031c2:	f103 0e38 	add.w	lr, r3, #56	; 0x38
  4031c6:	00c1      	lsls	r1, r0, #3
  4031c8:	4fb8      	ldr	r7, [pc, #736]	; (4034ac <_malloc_r+0x328>)
  4031ca:	4439      	add	r1, r7
  4031cc:	684c      	ldr	r4, [r1, #4]
  4031ce:	3908      	subs	r1, #8
  4031d0:	42a1      	cmp	r1, r4
  4031d2:	d106      	bne.n	4031e2 <_malloc_r+0x5e>
  4031d4:	e00c      	b.n	4031f0 <_malloc_r+0x6c>
  4031d6:	2a00      	cmp	r2, #0
  4031d8:	f280 80ab 	bge.w	403332 <_malloc_r+0x1ae>
  4031dc:	68e4      	ldr	r4, [r4, #12]
  4031de:	42a1      	cmp	r1, r4
  4031e0:	d006      	beq.n	4031f0 <_malloc_r+0x6c>
  4031e2:	6863      	ldr	r3, [r4, #4]
  4031e4:	f023 0303 	bic.w	r3, r3, #3
  4031e8:	1b9a      	subs	r2, r3, r6
  4031ea:	2a0f      	cmp	r2, #15
  4031ec:	ddf3      	ble.n	4031d6 <_malloc_r+0x52>
  4031ee:	4670      	mov	r0, lr
  4031f0:	693c      	ldr	r4, [r7, #16]
  4031f2:	f8df e2cc 	ldr.w	lr, [pc, #716]	; 4034c0 <_malloc_r+0x33c>
  4031f6:	4574      	cmp	r4, lr
  4031f8:	f000 819e 	beq.w	403538 <_malloc_r+0x3b4>
  4031fc:	6863      	ldr	r3, [r4, #4]
  4031fe:	f023 0303 	bic.w	r3, r3, #3
  403202:	1b9a      	subs	r2, r3, r6
  403204:	2a0f      	cmp	r2, #15
  403206:	f300 8183 	bgt.w	403510 <_malloc_r+0x38c>
  40320a:	2a00      	cmp	r2, #0
  40320c:	f8c7 e014 	str.w	lr, [r7, #20]
  403210:	f8c7 e010 	str.w	lr, [r7, #16]
  403214:	f280 8091 	bge.w	40333a <_malloc_r+0x1b6>
  403218:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
  40321c:	f080 8154 	bcs.w	4034c8 <_malloc_r+0x344>
  403220:	2201      	movs	r2, #1
  403222:	08db      	lsrs	r3, r3, #3
  403224:	6879      	ldr	r1, [r7, #4]
  403226:	ea4f 0ca3 	mov.w	ip, r3, asr #2
  40322a:	4413      	add	r3, r2
  40322c:	f857 8033 	ldr.w	r8, [r7, r3, lsl #3]
  403230:	fa02 f20c 	lsl.w	r2, r2, ip
  403234:	eb07 0cc3 	add.w	ip, r7, r3, lsl #3
  403238:	430a      	orrs	r2, r1
  40323a:	f1ac 0108 	sub.w	r1, ip, #8
  40323e:	60e1      	str	r1, [r4, #12]
  403240:	f8c4 8008 	str.w	r8, [r4, #8]
  403244:	607a      	str	r2, [r7, #4]
  403246:	f847 4033 	str.w	r4, [r7, r3, lsl #3]
  40324a:	f8c8 400c 	str.w	r4, [r8, #12]
  40324e:	2401      	movs	r4, #1
  403250:	1083      	asrs	r3, r0, #2
  403252:	409c      	lsls	r4, r3
  403254:	4294      	cmp	r4, r2
  403256:	d87d      	bhi.n	403354 <_malloc_r+0x1d0>
  403258:	4214      	tst	r4, r2
  40325a:	d106      	bne.n	40326a <_malloc_r+0xe6>
  40325c:	f020 0003 	bic.w	r0, r0, #3
  403260:	0064      	lsls	r4, r4, #1
  403262:	4214      	tst	r4, r2
  403264:	f100 0004 	add.w	r0, r0, #4
  403268:	d0fa      	beq.n	403260 <_malloc_r+0xdc>
  40326a:	eb07 09c0 	add.w	r9, r7, r0, lsl #3
  40326e:	46cc      	mov	ip, r9
  403270:	4680      	mov	r8, r0
  403272:	f8dc 300c 	ldr.w	r3, [ip, #12]
  403276:	459c      	cmp	ip, r3
  403278:	d107      	bne.n	40328a <_malloc_r+0x106>
  40327a:	e15f      	b.n	40353c <_malloc_r+0x3b8>
  40327c:	2a00      	cmp	r2, #0
  40327e:	f280 816d 	bge.w	40355c <_malloc_r+0x3d8>
  403282:	68db      	ldr	r3, [r3, #12]
  403284:	459c      	cmp	ip, r3
  403286:	f000 8159 	beq.w	40353c <_malloc_r+0x3b8>
  40328a:	6859      	ldr	r1, [r3, #4]
  40328c:	f021 0103 	bic.w	r1, r1, #3
  403290:	1b8a      	subs	r2, r1, r6
  403292:	2a0f      	cmp	r2, #15
  403294:	ddf2      	ble.n	40327c <_malloc_r+0xf8>
  403296:	68dc      	ldr	r4, [r3, #12]
  403298:	f8d3 c008 	ldr.w	ip, [r3, #8]
  40329c:	f046 0801 	orr.w	r8, r6, #1
  4032a0:	4628      	mov	r0, r5
  4032a2:	441e      	add	r6, r3
  4032a4:	f042 0501 	orr.w	r5, r2, #1
  4032a8:	f8c3 8004 	str.w	r8, [r3, #4]
  4032ac:	f8cc 400c 	str.w	r4, [ip, #12]
  4032b0:	f8c4 c008 	str.w	ip, [r4, #8]
  4032b4:	617e      	str	r6, [r7, #20]
  4032b6:	613e      	str	r6, [r7, #16]
  4032b8:	f8c6 e00c 	str.w	lr, [r6, #12]
  4032bc:	f8c6 e008 	str.w	lr, [r6, #8]
  4032c0:	6075      	str	r5, [r6, #4]
  4032c2:	505a      	str	r2, [r3, r1]
  4032c4:	9300      	str	r3, [sp, #0]
  4032c6:	f000 fb37 	bl	403938 <__malloc_unlock>
  4032ca:	9b00      	ldr	r3, [sp, #0]
  4032cc:	f103 0408 	add.w	r4, r3, #8
  4032d0:	e01e      	b.n	403310 <_malloc_r+0x18c>
  4032d2:	2910      	cmp	r1, #16
  4032d4:	d820      	bhi.n	403318 <_malloc_r+0x194>
  4032d6:	f000 fb2d 	bl	403934 <__malloc_lock>
  4032da:	2610      	movs	r6, #16
  4032dc:	2318      	movs	r3, #24
  4032de:	2002      	movs	r0, #2
  4032e0:	4f72      	ldr	r7, [pc, #456]	; (4034ac <_malloc_r+0x328>)
  4032e2:	443b      	add	r3, r7
  4032e4:	685c      	ldr	r4, [r3, #4]
  4032e6:	f1a3 0208 	sub.w	r2, r3, #8
  4032ea:	4294      	cmp	r4, r2
  4032ec:	f000 812f 	beq.w	40354e <_malloc_r+0x3ca>
  4032f0:	6863      	ldr	r3, [r4, #4]
  4032f2:	68e1      	ldr	r1, [r4, #12]
  4032f4:	f023 0303 	bic.w	r3, r3, #3
  4032f8:	4423      	add	r3, r4
  4032fa:	685a      	ldr	r2, [r3, #4]
  4032fc:	68a6      	ldr	r6, [r4, #8]
  4032fe:	f042 0201 	orr.w	r2, r2, #1
  403302:	60f1      	str	r1, [r6, #12]
  403304:	4628      	mov	r0, r5
  403306:	608e      	str	r6, [r1, #8]
  403308:	605a      	str	r2, [r3, #4]
  40330a:	f000 fb15 	bl	403938 <__malloc_unlock>
  40330e:	3408      	adds	r4, #8
  403310:	4620      	mov	r0, r4
  403312:	b003      	add	sp, #12
  403314:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  403318:	2400      	movs	r4, #0
  40331a:	230c      	movs	r3, #12
  40331c:	4620      	mov	r0, r4
  40331e:	602b      	str	r3, [r5, #0]
  403320:	b003      	add	sp, #12
  403322:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  403326:	2040      	movs	r0, #64	; 0x40
  403328:	f44f 7100 	mov.w	r1, #512	; 0x200
  40332c:	f04f 0e3f 	mov.w	lr, #63	; 0x3f
  403330:	e74a      	b.n	4031c8 <_malloc_r+0x44>
  403332:	4423      	add	r3, r4
  403334:	685a      	ldr	r2, [r3, #4]
  403336:	68e1      	ldr	r1, [r4, #12]
  403338:	e7e0      	b.n	4032fc <_malloc_r+0x178>
  40333a:	4423      	add	r3, r4
  40333c:	685a      	ldr	r2, [r3, #4]
  40333e:	4628      	mov	r0, r5
  403340:	f042 0201 	orr.w	r2, r2, #1
  403344:	605a      	str	r2, [r3, #4]
  403346:	3408      	adds	r4, #8
  403348:	f000 faf6 	bl	403938 <__malloc_unlock>
  40334c:	4620      	mov	r0, r4
  40334e:	b003      	add	sp, #12
  403350:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  403354:	68bc      	ldr	r4, [r7, #8]
  403356:	6863      	ldr	r3, [r4, #4]
  403358:	f023 0803 	bic.w	r8, r3, #3
  40335c:	45b0      	cmp	r8, r6
  40335e:	d304      	bcc.n	40336a <_malloc_r+0x1e6>
  403360:	eba8 0306 	sub.w	r3, r8, r6
  403364:	2b0f      	cmp	r3, #15
  403366:	f300 8085 	bgt.w	403474 <_malloc_r+0x2f0>
  40336a:	f8df 9158 	ldr.w	r9, [pc, #344]	; 4034c4 <_malloc_r+0x340>
  40336e:	4b50      	ldr	r3, [pc, #320]	; (4034b0 <_malloc_r+0x32c>)
  403370:	f8d9 2000 	ldr.w	r2, [r9]
  403374:	681b      	ldr	r3, [r3, #0]
  403376:	3201      	adds	r2, #1
  403378:	4433      	add	r3, r6
  40337a:	eb04 0a08 	add.w	sl, r4, r8
  40337e:	f000 8154 	beq.w	40362a <_malloc_r+0x4a6>
  403382:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
  403386:	330f      	adds	r3, #15
  403388:	f423 6b7f 	bic.w	fp, r3, #4080	; 0xff0
  40338c:	f02b 0b0f 	bic.w	fp, fp, #15
  403390:	4659      	mov	r1, fp
  403392:	4628      	mov	r0, r5
  403394:	f000 fc88 	bl	403ca8 <_sbrk_r>
  403398:	1c41      	adds	r1, r0, #1
  40339a:	4602      	mov	r2, r0
  40339c:	f000 80fb 	beq.w	403596 <_malloc_r+0x412>
  4033a0:	4582      	cmp	sl, r0
  4033a2:	f200 80f6 	bhi.w	403592 <_malloc_r+0x40e>
  4033a6:	4b43      	ldr	r3, [pc, #268]	; (4034b4 <_malloc_r+0x330>)
  4033a8:	6819      	ldr	r1, [r3, #0]
  4033aa:	4459      	add	r1, fp
  4033ac:	6019      	str	r1, [r3, #0]
  4033ae:	f000 814c 	beq.w	40364a <_malloc_r+0x4c6>
  4033b2:	f8d9 0000 	ldr.w	r0, [r9]
  4033b6:	3001      	adds	r0, #1
  4033b8:	bf1b      	ittet	ne
  4033ba:	eba2 0a0a 	subne.w	sl, r2, sl
  4033be:	4451      	addne	r1, sl
  4033c0:	f8c9 2000 	streq.w	r2, [r9]
  4033c4:	6019      	strne	r1, [r3, #0]
  4033c6:	f012 0107 	ands.w	r1, r2, #7
  4033ca:	f000 8114 	beq.w	4035f6 <_malloc_r+0x472>
  4033ce:	f1c1 0008 	rsb	r0, r1, #8
  4033d2:	f5c1 5180 	rsb	r1, r1, #4096	; 0x1000
  4033d6:	4402      	add	r2, r0
  4033d8:	3108      	adds	r1, #8
  4033da:	eb02 090b 	add.w	r9, r2, fp
  4033de:	f3c9 090b 	ubfx	r9, r9, #0, #12
  4033e2:	eba1 0909 	sub.w	r9, r1, r9
  4033e6:	4649      	mov	r1, r9
  4033e8:	4628      	mov	r0, r5
  4033ea:	9301      	str	r3, [sp, #4]
  4033ec:	9200      	str	r2, [sp, #0]
  4033ee:	f000 fc5b 	bl	403ca8 <_sbrk_r>
  4033f2:	1c43      	adds	r3, r0, #1
  4033f4:	e89d 000c 	ldmia.w	sp, {r2, r3}
  4033f8:	f000 8142 	beq.w	403680 <_malloc_r+0x4fc>
  4033fc:	1a80      	subs	r0, r0, r2
  4033fe:	4448      	add	r0, r9
  403400:	f040 0001 	orr.w	r0, r0, #1
  403404:	6819      	ldr	r1, [r3, #0]
  403406:	42bc      	cmp	r4, r7
  403408:	4449      	add	r1, r9
  40340a:	60ba      	str	r2, [r7, #8]
  40340c:	6019      	str	r1, [r3, #0]
  40340e:	6050      	str	r0, [r2, #4]
  403410:	d017      	beq.n	403442 <_malloc_r+0x2be>
  403412:	f1b8 0f0f 	cmp.w	r8, #15
  403416:	f240 80fa 	bls.w	40360e <_malloc_r+0x48a>
  40341a:	f04f 0c05 	mov.w	ip, #5
  40341e:	6862      	ldr	r2, [r4, #4]
  403420:	f1a8 000c 	sub.w	r0, r8, #12
  403424:	f020 0007 	bic.w	r0, r0, #7
  403428:	f002 0201 	and.w	r2, r2, #1
  40342c:	eb04 0e00 	add.w	lr, r4, r0
  403430:	4302      	orrs	r2, r0
  403432:	280f      	cmp	r0, #15
  403434:	6062      	str	r2, [r4, #4]
  403436:	f8ce c004 	str.w	ip, [lr, #4]
  40343a:	f8ce c008 	str.w	ip, [lr, #8]
  40343e:	f200 8116 	bhi.w	40366e <_malloc_r+0x4ea>
  403442:	4b1d      	ldr	r3, [pc, #116]	; (4034b8 <_malloc_r+0x334>)
  403444:	68bc      	ldr	r4, [r7, #8]
  403446:	681a      	ldr	r2, [r3, #0]
  403448:	4291      	cmp	r1, r2
  40344a:	bf88      	it	hi
  40344c:	6019      	strhi	r1, [r3, #0]
  40344e:	4b1b      	ldr	r3, [pc, #108]	; (4034bc <_malloc_r+0x338>)
  403450:	681a      	ldr	r2, [r3, #0]
  403452:	4291      	cmp	r1, r2
  403454:	6862      	ldr	r2, [r4, #4]
  403456:	bf88      	it	hi
  403458:	6019      	strhi	r1, [r3, #0]
  40345a:	f022 0203 	bic.w	r2, r2, #3
  40345e:	4296      	cmp	r6, r2
  403460:	eba2 0306 	sub.w	r3, r2, r6
  403464:	d801      	bhi.n	40346a <_malloc_r+0x2e6>
  403466:	2b0f      	cmp	r3, #15
  403468:	dc04      	bgt.n	403474 <_malloc_r+0x2f0>
  40346a:	4628      	mov	r0, r5
  40346c:	f000 fa64 	bl	403938 <__malloc_unlock>
  403470:	2400      	movs	r4, #0
  403472:	e74d      	b.n	403310 <_malloc_r+0x18c>
  403474:	f046 0201 	orr.w	r2, r6, #1
  403478:	f043 0301 	orr.w	r3, r3, #1
  40347c:	4426      	add	r6, r4
  40347e:	6062      	str	r2, [r4, #4]
  403480:	4628      	mov	r0, r5
  403482:	60be      	str	r6, [r7, #8]
  403484:	3408      	adds	r4, #8
  403486:	6073      	str	r3, [r6, #4]
  403488:	f000 fa56 	bl	403938 <__malloc_unlock>
  40348c:	4620      	mov	r0, r4
  40348e:	b003      	add	sp, #12
  403490:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  403494:	2b14      	cmp	r3, #20
  403496:	d970      	bls.n	40357a <_malloc_r+0x3f6>
  403498:	2b54      	cmp	r3, #84	; 0x54
  40349a:	f200 80a2 	bhi.w	4035e2 <_malloc_r+0x45e>
  40349e:	0b33      	lsrs	r3, r6, #12
  4034a0:	f103 006f 	add.w	r0, r3, #111	; 0x6f
  4034a4:	f103 0e6e 	add.w	lr, r3, #110	; 0x6e
  4034a8:	00c1      	lsls	r1, r0, #3
  4034aa:	e68d      	b.n	4031c8 <_malloc_r+0x44>
  4034ac:	200006a4 	.word	0x200006a4
  4034b0:	20000b80 	.word	0x20000b80
  4034b4:	20000b50 	.word	0x20000b50
  4034b8:	20000b78 	.word	0x20000b78
  4034bc:	20000b7c 	.word	0x20000b7c
  4034c0:	200006ac 	.word	0x200006ac
  4034c4:	20000aac 	.word	0x20000aac
  4034c8:	0a5a      	lsrs	r2, r3, #9
  4034ca:	2a04      	cmp	r2, #4
  4034cc:	d95b      	bls.n	403586 <_malloc_r+0x402>
  4034ce:	2a14      	cmp	r2, #20
  4034d0:	f200 80ae 	bhi.w	403630 <_malloc_r+0x4ac>
  4034d4:	f102 015c 	add.w	r1, r2, #92	; 0x5c
  4034d8:	00c9      	lsls	r1, r1, #3
  4034da:	325b      	adds	r2, #91	; 0x5b
  4034dc:	eb07 0c01 	add.w	ip, r7, r1
  4034e0:	5879      	ldr	r1, [r7, r1]
  4034e2:	f1ac 0c08 	sub.w	ip, ip, #8
  4034e6:	458c      	cmp	ip, r1
  4034e8:	f000 8088 	beq.w	4035fc <_malloc_r+0x478>
  4034ec:	684a      	ldr	r2, [r1, #4]
  4034ee:	f022 0203 	bic.w	r2, r2, #3
  4034f2:	4293      	cmp	r3, r2
  4034f4:	d273      	bcs.n	4035de <_malloc_r+0x45a>
  4034f6:	6889      	ldr	r1, [r1, #8]
  4034f8:	458c      	cmp	ip, r1
  4034fa:	d1f7      	bne.n	4034ec <_malloc_r+0x368>
  4034fc:	f8dc 300c 	ldr.w	r3, [ip, #12]
  403500:	687a      	ldr	r2, [r7, #4]
  403502:	60e3      	str	r3, [r4, #12]
  403504:	f8c4 c008 	str.w	ip, [r4, #8]
  403508:	609c      	str	r4, [r3, #8]
  40350a:	f8cc 400c 	str.w	r4, [ip, #12]
  40350e:	e69e      	b.n	40324e <_malloc_r+0xca>
  403510:	f046 0c01 	orr.w	ip, r6, #1
  403514:	f042 0101 	orr.w	r1, r2, #1
  403518:	4426      	add	r6, r4
  40351a:	f8c4 c004 	str.w	ip, [r4, #4]
  40351e:	4628      	mov	r0, r5
  403520:	617e      	str	r6, [r7, #20]
  403522:	613e      	str	r6, [r7, #16]
  403524:	f8c6 e00c 	str.w	lr, [r6, #12]
  403528:	f8c6 e008 	str.w	lr, [r6, #8]
  40352c:	6071      	str	r1, [r6, #4]
  40352e:	50e2      	str	r2, [r4, r3]
  403530:	f000 fa02 	bl	403938 <__malloc_unlock>
  403534:	3408      	adds	r4, #8
  403536:	e6eb      	b.n	403310 <_malloc_r+0x18c>
  403538:	687a      	ldr	r2, [r7, #4]
  40353a:	e688      	b.n	40324e <_malloc_r+0xca>
  40353c:	f108 0801 	add.w	r8, r8, #1
  403540:	f018 0f03 	tst.w	r8, #3
  403544:	f10c 0c08 	add.w	ip, ip, #8
  403548:	f47f ae93 	bne.w	403272 <_malloc_r+0xee>
  40354c:	e02d      	b.n	4035aa <_malloc_r+0x426>
  40354e:	68dc      	ldr	r4, [r3, #12]
  403550:	42a3      	cmp	r3, r4
  403552:	bf08      	it	eq
  403554:	3002      	addeq	r0, #2
  403556:	f43f ae4b 	beq.w	4031f0 <_malloc_r+0x6c>
  40355a:	e6c9      	b.n	4032f0 <_malloc_r+0x16c>
  40355c:	461c      	mov	r4, r3
  40355e:	4419      	add	r1, r3
  403560:	684a      	ldr	r2, [r1, #4]
  403562:	68db      	ldr	r3, [r3, #12]
  403564:	f854 6f08 	ldr.w	r6, [r4, #8]!
  403568:	f042 0201 	orr.w	r2, r2, #1
  40356c:	604a      	str	r2, [r1, #4]
  40356e:	4628      	mov	r0, r5
  403570:	60f3      	str	r3, [r6, #12]
  403572:	609e      	str	r6, [r3, #8]
  403574:	f000 f9e0 	bl	403938 <__malloc_unlock>
  403578:	e6ca      	b.n	403310 <_malloc_r+0x18c>
  40357a:	f103 005c 	add.w	r0, r3, #92	; 0x5c
  40357e:	f103 0e5b 	add.w	lr, r3, #91	; 0x5b
  403582:	00c1      	lsls	r1, r0, #3
  403584:	e620      	b.n	4031c8 <_malloc_r+0x44>
  403586:	099a      	lsrs	r2, r3, #6
  403588:	f102 0139 	add.w	r1, r2, #57	; 0x39
  40358c:	00c9      	lsls	r1, r1, #3
  40358e:	3238      	adds	r2, #56	; 0x38
  403590:	e7a4      	b.n	4034dc <_malloc_r+0x358>
  403592:	42bc      	cmp	r4, r7
  403594:	d054      	beq.n	403640 <_malloc_r+0x4bc>
  403596:	68bc      	ldr	r4, [r7, #8]
  403598:	6862      	ldr	r2, [r4, #4]
  40359a:	f022 0203 	bic.w	r2, r2, #3
  40359e:	e75e      	b.n	40345e <_malloc_r+0x2da>
  4035a0:	f859 3908 	ldr.w	r3, [r9], #-8
  4035a4:	4599      	cmp	r9, r3
  4035a6:	f040 8086 	bne.w	4036b6 <_malloc_r+0x532>
  4035aa:	f010 0f03 	tst.w	r0, #3
  4035ae:	f100 30ff 	add.w	r0, r0, #4294967295
  4035b2:	d1f5      	bne.n	4035a0 <_malloc_r+0x41c>
  4035b4:	687b      	ldr	r3, [r7, #4]
  4035b6:	ea23 0304 	bic.w	r3, r3, r4
  4035ba:	607b      	str	r3, [r7, #4]
  4035bc:	0064      	lsls	r4, r4, #1
  4035be:	429c      	cmp	r4, r3
  4035c0:	f63f aec8 	bhi.w	403354 <_malloc_r+0x1d0>
  4035c4:	2c00      	cmp	r4, #0
  4035c6:	f43f aec5 	beq.w	403354 <_malloc_r+0x1d0>
  4035ca:	421c      	tst	r4, r3
  4035cc:	4640      	mov	r0, r8
  4035ce:	f47f ae4c 	bne.w	40326a <_malloc_r+0xe6>
  4035d2:	0064      	lsls	r4, r4, #1
  4035d4:	421c      	tst	r4, r3
  4035d6:	f100 0004 	add.w	r0, r0, #4
  4035da:	d0fa      	beq.n	4035d2 <_malloc_r+0x44e>
  4035dc:	e645      	b.n	40326a <_malloc_r+0xe6>
  4035de:	468c      	mov	ip, r1
  4035e0:	e78c      	b.n	4034fc <_malloc_r+0x378>
  4035e2:	f5b3 7faa 	cmp.w	r3, #340	; 0x154
  4035e6:	d815      	bhi.n	403614 <_malloc_r+0x490>
  4035e8:	0bf3      	lsrs	r3, r6, #15
  4035ea:	f103 0078 	add.w	r0, r3, #120	; 0x78
  4035ee:	f103 0e77 	add.w	lr, r3, #119	; 0x77
  4035f2:	00c1      	lsls	r1, r0, #3
  4035f4:	e5e8      	b.n	4031c8 <_malloc_r+0x44>
  4035f6:	f44f 5180 	mov.w	r1, #4096	; 0x1000
  4035fa:	e6ee      	b.n	4033da <_malloc_r+0x256>
  4035fc:	2101      	movs	r1, #1
  4035fe:	687b      	ldr	r3, [r7, #4]
  403600:	1092      	asrs	r2, r2, #2
  403602:	fa01 f202 	lsl.w	r2, r1, r2
  403606:	431a      	orrs	r2, r3
  403608:	607a      	str	r2, [r7, #4]
  40360a:	4663      	mov	r3, ip
  40360c:	e779      	b.n	403502 <_malloc_r+0x37e>
  40360e:	2301      	movs	r3, #1
  403610:	6053      	str	r3, [r2, #4]
  403612:	e72a      	b.n	40346a <_malloc_r+0x2e6>
  403614:	f240 5254 	movw	r2, #1364	; 0x554
  403618:	4293      	cmp	r3, r2
  40361a:	d822      	bhi.n	403662 <_malloc_r+0x4de>
  40361c:	0cb3      	lsrs	r3, r6, #18
  40361e:	f103 007d 	add.w	r0, r3, #125	; 0x7d
  403622:	f103 0e7c 	add.w	lr, r3, #124	; 0x7c
  403626:	00c1      	lsls	r1, r0, #3
  403628:	e5ce      	b.n	4031c8 <_malloc_r+0x44>
  40362a:	f103 0b10 	add.w	fp, r3, #16
  40362e:	e6af      	b.n	403390 <_malloc_r+0x20c>
  403630:	2a54      	cmp	r2, #84	; 0x54
  403632:	d829      	bhi.n	403688 <_malloc_r+0x504>
  403634:	0b1a      	lsrs	r2, r3, #12
  403636:	f102 016f 	add.w	r1, r2, #111	; 0x6f
  40363a:	00c9      	lsls	r1, r1, #3
  40363c:	326e      	adds	r2, #110	; 0x6e
  40363e:	e74d      	b.n	4034dc <_malloc_r+0x358>
  403640:	4b20      	ldr	r3, [pc, #128]	; (4036c4 <_malloc_r+0x540>)
  403642:	6819      	ldr	r1, [r3, #0]
  403644:	4459      	add	r1, fp
  403646:	6019      	str	r1, [r3, #0]
  403648:	e6b3      	b.n	4033b2 <_malloc_r+0x22e>
  40364a:	f3ca 000b 	ubfx	r0, sl, #0, #12
  40364e:	2800      	cmp	r0, #0
  403650:	f47f aeaf 	bne.w	4033b2 <_malloc_r+0x22e>
  403654:	eb08 030b 	add.w	r3, r8, fp
  403658:	68ba      	ldr	r2, [r7, #8]
  40365a:	f043 0301 	orr.w	r3, r3, #1
  40365e:	6053      	str	r3, [r2, #4]
  403660:	e6ef      	b.n	403442 <_malloc_r+0x2be>
  403662:	207f      	movs	r0, #127	; 0x7f
  403664:	f44f 717e 	mov.w	r1, #1016	; 0x3f8
  403668:	f04f 0e7e 	mov.w	lr, #126	; 0x7e
  40366c:	e5ac      	b.n	4031c8 <_malloc_r+0x44>
  40366e:	f104 0108 	add.w	r1, r4, #8
  403672:	4628      	mov	r0, r5
  403674:	9300      	str	r3, [sp, #0]
  403676:	f7ff fa75 	bl	402b64 <_free_r>
  40367a:	9b00      	ldr	r3, [sp, #0]
  40367c:	6819      	ldr	r1, [r3, #0]
  40367e:	e6e0      	b.n	403442 <_malloc_r+0x2be>
  403680:	2001      	movs	r0, #1
  403682:	f04f 0900 	mov.w	r9, #0
  403686:	e6bd      	b.n	403404 <_malloc_r+0x280>
  403688:	f5b2 7faa 	cmp.w	r2, #340	; 0x154
  40368c:	d805      	bhi.n	40369a <_malloc_r+0x516>
  40368e:	0bda      	lsrs	r2, r3, #15
  403690:	f102 0178 	add.w	r1, r2, #120	; 0x78
  403694:	00c9      	lsls	r1, r1, #3
  403696:	3277      	adds	r2, #119	; 0x77
  403698:	e720      	b.n	4034dc <_malloc_r+0x358>
  40369a:	f240 5154 	movw	r1, #1364	; 0x554
  40369e:	428a      	cmp	r2, r1
  4036a0:	d805      	bhi.n	4036ae <_malloc_r+0x52a>
  4036a2:	0c9a      	lsrs	r2, r3, #18
  4036a4:	f102 017d 	add.w	r1, r2, #125	; 0x7d
  4036a8:	00c9      	lsls	r1, r1, #3
  4036aa:	327c      	adds	r2, #124	; 0x7c
  4036ac:	e716      	b.n	4034dc <_malloc_r+0x358>
  4036ae:	f44f 717e 	mov.w	r1, #1016	; 0x3f8
  4036b2:	227e      	movs	r2, #126	; 0x7e
  4036b4:	e712      	b.n	4034dc <_malloc_r+0x358>
  4036b6:	687b      	ldr	r3, [r7, #4]
  4036b8:	e780      	b.n	4035bc <_malloc_r+0x438>
  4036ba:	08f0      	lsrs	r0, r6, #3
  4036bc:	f106 0308 	add.w	r3, r6, #8
  4036c0:	e60e      	b.n	4032e0 <_malloc_r+0x15c>
  4036c2:	bf00      	nop
  4036c4:	20000b50 	.word	0x20000b50

004036c8 <__ascii_mbtowc>:
  4036c8:	b082      	sub	sp, #8
  4036ca:	b149      	cbz	r1, 4036e0 <__ascii_mbtowc+0x18>
  4036cc:	b15a      	cbz	r2, 4036e6 <__ascii_mbtowc+0x1e>
  4036ce:	b16b      	cbz	r3, 4036ec <__ascii_mbtowc+0x24>
  4036d0:	7813      	ldrb	r3, [r2, #0]
  4036d2:	600b      	str	r3, [r1, #0]
  4036d4:	7812      	ldrb	r2, [r2, #0]
  4036d6:	1c10      	adds	r0, r2, #0
  4036d8:	bf18      	it	ne
  4036da:	2001      	movne	r0, #1
  4036dc:	b002      	add	sp, #8
  4036de:	4770      	bx	lr
  4036e0:	a901      	add	r1, sp, #4
  4036e2:	2a00      	cmp	r2, #0
  4036e4:	d1f3      	bne.n	4036ce <__ascii_mbtowc+0x6>
  4036e6:	4610      	mov	r0, r2
  4036e8:	b002      	add	sp, #8
  4036ea:	4770      	bx	lr
  4036ec:	f06f 0001 	mvn.w	r0, #1
  4036f0:	e7f4      	b.n	4036dc <__ascii_mbtowc+0x14>
  4036f2:	bf00      	nop

004036f4 <memchr>:
  4036f4:	0783      	lsls	r3, r0, #30
  4036f6:	b470      	push	{r4, r5, r6}
  4036f8:	b2cd      	uxtb	r5, r1
  4036fa:	d03d      	beq.n	403778 <memchr+0x84>
  4036fc:	1e54      	subs	r4, r2, #1
  4036fe:	b30a      	cbz	r2, 403744 <memchr+0x50>
  403700:	7803      	ldrb	r3, [r0, #0]
  403702:	42ab      	cmp	r3, r5
  403704:	d01f      	beq.n	403746 <memchr+0x52>
  403706:	1c43      	adds	r3, r0, #1
  403708:	e005      	b.n	403716 <memchr+0x22>
  40370a:	f114 34ff 	adds.w	r4, r4, #4294967295
  40370e:	d319      	bcc.n	403744 <memchr+0x50>
  403710:	7802      	ldrb	r2, [r0, #0]
  403712:	42aa      	cmp	r2, r5
  403714:	d017      	beq.n	403746 <memchr+0x52>
  403716:	f013 0f03 	tst.w	r3, #3
  40371a:	4618      	mov	r0, r3
  40371c:	f103 0301 	add.w	r3, r3, #1
  403720:	d1f3      	bne.n	40370a <memchr+0x16>
  403722:	2c03      	cmp	r4, #3
  403724:	d811      	bhi.n	40374a <memchr+0x56>
  403726:	b34c      	cbz	r4, 40377c <memchr+0x88>
  403728:	7803      	ldrb	r3, [r0, #0]
  40372a:	42ab      	cmp	r3, r5
  40372c:	d00b      	beq.n	403746 <memchr+0x52>
  40372e:	4404      	add	r4, r0
  403730:	1c43      	adds	r3, r0, #1
  403732:	e002      	b.n	40373a <memchr+0x46>
  403734:	7802      	ldrb	r2, [r0, #0]
  403736:	42aa      	cmp	r2, r5
  403738:	d005      	beq.n	403746 <memchr+0x52>
  40373a:	429c      	cmp	r4, r3
  40373c:	4618      	mov	r0, r3
  40373e:	f103 0301 	add.w	r3, r3, #1
  403742:	d1f7      	bne.n	403734 <memchr+0x40>
  403744:	2000      	movs	r0, #0
  403746:	bc70      	pop	{r4, r5, r6}
  403748:	4770      	bx	lr
  40374a:	0209      	lsls	r1, r1, #8
  40374c:	b289      	uxth	r1, r1
  40374e:	4329      	orrs	r1, r5
  403750:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
  403754:	6803      	ldr	r3, [r0, #0]
  403756:	4606      	mov	r6, r0
  403758:	404b      	eors	r3, r1
  40375a:	f1a3 3201 	sub.w	r2, r3, #16843009	; 0x1010101
  40375e:	ea22 0303 	bic.w	r3, r2, r3
  403762:	f013 3f80 	tst.w	r3, #2155905152	; 0x80808080
  403766:	f100 0004 	add.w	r0, r0, #4
  40376a:	d103      	bne.n	403774 <memchr+0x80>
  40376c:	3c04      	subs	r4, #4
  40376e:	2c03      	cmp	r4, #3
  403770:	d8f0      	bhi.n	403754 <memchr+0x60>
  403772:	e7d8      	b.n	403726 <memchr+0x32>
  403774:	4630      	mov	r0, r6
  403776:	e7d7      	b.n	403728 <memchr+0x34>
  403778:	4614      	mov	r4, r2
  40377a:	e7d2      	b.n	403722 <memchr+0x2e>
  40377c:	4620      	mov	r0, r4
  40377e:	e7e2      	b.n	403746 <memchr+0x52>

00403780 <memcpy>:
  403780:	4684      	mov	ip, r0
  403782:	ea41 0300 	orr.w	r3, r1, r0
  403786:	f013 0303 	ands.w	r3, r3, #3
  40378a:	d149      	bne.n	403820 <memcpy+0xa0>
  40378c:	3a40      	subs	r2, #64	; 0x40
  40378e:	d323      	bcc.n	4037d8 <memcpy+0x58>
  403790:	680b      	ldr	r3, [r1, #0]
  403792:	6003      	str	r3, [r0, #0]
  403794:	684b      	ldr	r3, [r1, #4]
  403796:	6043      	str	r3, [r0, #4]
  403798:	688b      	ldr	r3, [r1, #8]
  40379a:	6083      	str	r3, [r0, #8]
  40379c:	68cb      	ldr	r3, [r1, #12]
  40379e:	60c3      	str	r3, [r0, #12]
  4037a0:	690b      	ldr	r3, [r1, #16]
  4037a2:	6103      	str	r3, [r0, #16]
  4037a4:	694b      	ldr	r3, [r1, #20]
  4037a6:	6143      	str	r3, [r0, #20]
  4037a8:	698b      	ldr	r3, [r1, #24]
  4037aa:	6183      	str	r3, [r0, #24]
  4037ac:	69cb      	ldr	r3, [r1, #28]
  4037ae:	61c3      	str	r3, [r0, #28]
  4037b0:	6a0b      	ldr	r3, [r1, #32]
  4037b2:	6203      	str	r3, [r0, #32]
  4037b4:	6a4b      	ldr	r3, [r1, #36]	; 0x24
  4037b6:	6243      	str	r3, [r0, #36]	; 0x24
  4037b8:	6a8b      	ldr	r3, [r1, #40]	; 0x28
  4037ba:	6283      	str	r3, [r0, #40]	; 0x28
  4037bc:	6acb      	ldr	r3, [r1, #44]	; 0x2c
  4037be:	62c3      	str	r3, [r0, #44]	; 0x2c
  4037c0:	6b0b      	ldr	r3, [r1, #48]	; 0x30
  4037c2:	6303      	str	r3, [r0, #48]	; 0x30
  4037c4:	6b4b      	ldr	r3, [r1, #52]	; 0x34
  4037c6:	6343      	str	r3, [r0, #52]	; 0x34
  4037c8:	6b8b      	ldr	r3, [r1, #56]	; 0x38
  4037ca:	6383      	str	r3, [r0, #56]	; 0x38
  4037cc:	6bcb      	ldr	r3, [r1, #60]	; 0x3c
  4037ce:	63c3      	str	r3, [r0, #60]	; 0x3c
  4037d0:	3040      	adds	r0, #64	; 0x40
  4037d2:	3140      	adds	r1, #64	; 0x40
  4037d4:	3a40      	subs	r2, #64	; 0x40
  4037d6:	d2db      	bcs.n	403790 <memcpy+0x10>
  4037d8:	3230      	adds	r2, #48	; 0x30
  4037da:	d30b      	bcc.n	4037f4 <memcpy+0x74>
  4037dc:	680b      	ldr	r3, [r1, #0]
  4037de:	6003      	str	r3, [r0, #0]
  4037e0:	684b      	ldr	r3, [r1, #4]
  4037e2:	6043      	str	r3, [r0, #4]
  4037e4:	688b      	ldr	r3, [r1, #8]
  4037e6:	6083      	str	r3, [r0, #8]
  4037e8:	68cb      	ldr	r3, [r1, #12]
  4037ea:	60c3      	str	r3, [r0, #12]
  4037ec:	3010      	adds	r0, #16
  4037ee:	3110      	adds	r1, #16
  4037f0:	3a10      	subs	r2, #16
  4037f2:	d2f3      	bcs.n	4037dc <memcpy+0x5c>
  4037f4:	320c      	adds	r2, #12
  4037f6:	d305      	bcc.n	403804 <memcpy+0x84>
  4037f8:	f851 3b04 	ldr.w	r3, [r1], #4
  4037fc:	f840 3b04 	str.w	r3, [r0], #4
  403800:	3a04      	subs	r2, #4
  403802:	d2f9      	bcs.n	4037f8 <memcpy+0x78>
  403804:	3204      	adds	r2, #4
  403806:	d008      	beq.n	40381a <memcpy+0x9a>
  403808:	07d2      	lsls	r2, r2, #31
  40380a:	bf1c      	itt	ne
  40380c:	f811 3b01 	ldrbne.w	r3, [r1], #1
  403810:	f800 3b01 	strbne.w	r3, [r0], #1
  403814:	d301      	bcc.n	40381a <memcpy+0x9a>
  403816:	880b      	ldrh	r3, [r1, #0]
  403818:	8003      	strh	r3, [r0, #0]
  40381a:	4660      	mov	r0, ip
  40381c:	4770      	bx	lr
  40381e:	bf00      	nop
  403820:	2a08      	cmp	r2, #8
  403822:	d313      	bcc.n	40384c <memcpy+0xcc>
  403824:	078b      	lsls	r3, r1, #30
  403826:	d0b1      	beq.n	40378c <memcpy+0xc>
  403828:	f010 0303 	ands.w	r3, r0, #3
  40382c:	d0ae      	beq.n	40378c <memcpy+0xc>
  40382e:	f1c3 0304 	rsb	r3, r3, #4
  403832:	1ad2      	subs	r2, r2, r3
  403834:	07db      	lsls	r3, r3, #31
  403836:	bf1c      	itt	ne
  403838:	f811 3b01 	ldrbne.w	r3, [r1], #1
  40383c:	f800 3b01 	strbne.w	r3, [r0], #1
  403840:	d3a4      	bcc.n	40378c <memcpy+0xc>
  403842:	f831 3b02 	ldrh.w	r3, [r1], #2
  403846:	f820 3b02 	strh.w	r3, [r0], #2
  40384a:	e79f      	b.n	40378c <memcpy+0xc>
  40384c:	3a04      	subs	r2, #4
  40384e:	d3d9      	bcc.n	403804 <memcpy+0x84>
  403850:	3a01      	subs	r2, #1
  403852:	f811 3b01 	ldrb.w	r3, [r1], #1
  403856:	f800 3b01 	strb.w	r3, [r0], #1
  40385a:	d2f9      	bcs.n	403850 <memcpy+0xd0>
  40385c:	780b      	ldrb	r3, [r1, #0]
  40385e:	7003      	strb	r3, [r0, #0]
  403860:	784b      	ldrb	r3, [r1, #1]
  403862:	7043      	strb	r3, [r0, #1]
  403864:	788b      	ldrb	r3, [r1, #2]
  403866:	7083      	strb	r3, [r0, #2]
  403868:	4660      	mov	r0, ip
  40386a:	4770      	bx	lr

0040386c <memmove>:
  40386c:	4288      	cmp	r0, r1
  40386e:	b5f0      	push	{r4, r5, r6, r7, lr}
  403870:	d90d      	bls.n	40388e <memmove+0x22>
  403872:	188b      	adds	r3, r1, r2
  403874:	4298      	cmp	r0, r3
  403876:	d20a      	bcs.n	40388e <memmove+0x22>
  403878:	1884      	adds	r4, r0, r2
  40387a:	2a00      	cmp	r2, #0
  40387c:	d051      	beq.n	403922 <memmove+0xb6>
  40387e:	4622      	mov	r2, r4
  403880:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
  403884:	4299      	cmp	r1, r3
  403886:	f802 4d01 	strb.w	r4, [r2, #-1]!
  40388a:	d1f9      	bne.n	403880 <memmove+0x14>
  40388c:	bdf0      	pop	{r4, r5, r6, r7, pc}
  40388e:	2a0f      	cmp	r2, #15
  403890:	d948      	bls.n	403924 <memmove+0xb8>
  403892:	ea41 0300 	orr.w	r3, r1, r0
  403896:	079b      	lsls	r3, r3, #30
  403898:	d146      	bne.n	403928 <memmove+0xbc>
  40389a:	4615      	mov	r5, r2
  40389c:	f100 0410 	add.w	r4, r0, #16
  4038a0:	f101 0310 	add.w	r3, r1, #16
  4038a4:	f853 6c10 	ldr.w	r6, [r3, #-16]
  4038a8:	3d10      	subs	r5, #16
  4038aa:	f844 6c10 	str.w	r6, [r4, #-16]
  4038ae:	f853 6c0c 	ldr.w	r6, [r3, #-12]
  4038b2:	2d0f      	cmp	r5, #15
  4038b4:	f844 6c0c 	str.w	r6, [r4, #-12]
  4038b8:	f853 6c08 	ldr.w	r6, [r3, #-8]
  4038bc:	f104 0410 	add.w	r4, r4, #16
  4038c0:	f844 6c18 	str.w	r6, [r4, #-24]
  4038c4:	f853 6c04 	ldr.w	r6, [r3, #-4]
  4038c8:	f103 0310 	add.w	r3, r3, #16
  4038cc:	f844 6c14 	str.w	r6, [r4, #-20]
  4038d0:	d8e8      	bhi.n	4038a4 <memmove+0x38>
  4038d2:	f1a2 0310 	sub.w	r3, r2, #16
  4038d6:	f023 030f 	bic.w	r3, r3, #15
  4038da:	f002 0e0f 	and.w	lr, r2, #15
  4038de:	3310      	adds	r3, #16
  4038e0:	f1be 0f03 	cmp.w	lr, #3
  4038e4:	4419      	add	r1, r3
  4038e6:	4403      	add	r3, r0
  4038e8:	d921      	bls.n	40392e <memmove+0xc2>
  4038ea:	460e      	mov	r6, r1
  4038ec:	4674      	mov	r4, lr
  4038ee:	1f1d      	subs	r5, r3, #4
  4038f0:	f856 7b04 	ldr.w	r7, [r6], #4
  4038f4:	3c04      	subs	r4, #4
  4038f6:	2c03      	cmp	r4, #3
  4038f8:	f845 7f04 	str.w	r7, [r5, #4]!
  4038fc:	d8f8      	bhi.n	4038f0 <memmove+0x84>
  4038fe:	f1ae 0404 	sub.w	r4, lr, #4
  403902:	f024 0403 	bic.w	r4, r4, #3
  403906:	3404      	adds	r4, #4
  403908:	4421      	add	r1, r4
  40390a:	4423      	add	r3, r4
  40390c:	f002 0203 	and.w	r2, r2, #3
  403910:	b162      	cbz	r2, 40392c <memmove+0xc0>
  403912:	3b01      	subs	r3, #1
  403914:	440a      	add	r2, r1
  403916:	f811 4b01 	ldrb.w	r4, [r1], #1
  40391a:	428a      	cmp	r2, r1
  40391c:	f803 4f01 	strb.w	r4, [r3, #1]!
  403920:	d1f9      	bne.n	403916 <memmove+0xaa>
  403922:	bdf0      	pop	{r4, r5, r6, r7, pc}
  403924:	4603      	mov	r3, r0
  403926:	e7f3      	b.n	403910 <memmove+0xa4>
  403928:	4603      	mov	r3, r0
  40392a:	e7f2      	b.n	403912 <memmove+0xa6>
  40392c:	bdf0      	pop	{r4, r5, r6, r7, pc}
  40392e:	4672      	mov	r2, lr
  403930:	e7ee      	b.n	403910 <memmove+0xa4>
  403932:	bf00      	nop

00403934 <__malloc_lock>:
  403934:	4770      	bx	lr
  403936:	bf00      	nop

00403938 <__malloc_unlock>:
  403938:	4770      	bx	lr
  40393a:	bf00      	nop

0040393c <_realloc_r>:
  40393c:	2900      	cmp	r1, #0
  40393e:	f000 8094 	beq.w	403a6a <_realloc_r+0x12e>
  403942:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  403946:	460c      	mov	r4, r1
  403948:	4615      	mov	r5, r2
  40394a:	b083      	sub	sp, #12
  40394c:	4680      	mov	r8, r0
  40394e:	f105 060b 	add.w	r6, r5, #11
  403952:	f7ff ffef 	bl	403934 <__malloc_lock>
  403956:	f854 ec04 	ldr.w	lr, [r4, #-4]
  40395a:	2e16      	cmp	r6, #22
  40395c:	f02e 0703 	bic.w	r7, lr, #3
  403960:	f1a4 0908 	sub.w	r9, r4, #8
  403964:	d83c      	bhi.n	4039e0 <_realloc_r+0xa4>
  403966:	2210      	movs	r2, #16
  403968:	4616      	mov	r6, r2
  40396a:	42b5      	cmp	r5, r6
  40396c:	d83d      	bhi.n	4039ea <_realloc_r+0xae>
  40396e:	4297      	cmp	r7, r2
  403970:	da43      	bge.n	4039fa <_realloc_r+0xbe>
  403972:	4bc6      	ldr	r3, [pc, #792]	; (403c8c <_realloc_r+0x350>)
  403974:	eb09 0007 	add.w	r0, r9, r7
  403978:	6899      	ldr	r1, [r3, #8]
  40397a:	4288      	cmp	r0, r1
  40397c:	f000 80c3 	beq.w	403b06 <_realloc_r+0x1ca>
  403980:	6843      	ldr	r3, [r0, #4]
  403982:	f023 0101 	bic.w	r1, r3, #1
  403986:	4401      	add	r1, r0
  403988:	6849      	ldr	r1, [r1, #4]
  40398a:	07c9      	lsls	r1, r1, #31
  40398c:	d54d      	bpl.n	403a2a <_realloc_r+0xee>
  40398e:	f01e 0f01 	tst.w	lr, #1
  403992:	f000 809b 	beq.w	403acc <_realloc_r+0x190>
  403996:	4629      	mov	r1, r5
  403998:	4640      	mov	r0, r8
  40399a:	f7ff fbf3 	bl	403184 <_malloc_r>
  40399e:	4605      	mov	r5, r0
  4039a0:	2800      	cmp	r0, #0
  4039a2:	d03b      	beq.n	403a1c <_realloc_r+0xe0>
  4039a4:	f854 3c04 	ldr.w	r3, [r4, #-4]
  4039a8:	f1a0 0208 	sub.w	r2, r0, #8
  4039ac:	f023 0301 	bic.w	r3, r3, #1
  4039b0:	444b      	add	r3, r9
  4039b2:	429a      	cmp	r2, r3
  4039b4:	f000 812b 	beq.w	403c0e <_realloc_r+0x2d2>
  4039b8:	1f3a      	subs	r2, r7, #4
  4039ba:	2a24      	cmp	r2, #36	; 0x24
  4039bc:	f200 8118 	bhi.w	403bf0 <_realloc_r+0x2b4>
  4039c0:	2a13      	cmp	r2, #19
  4039c2:	f200 80eb 	bhi.w	403b9c <_realloc_r+0x260>
  4039c6:	4603      	mov	r3, r0
  4039c8:	4622      	mov	r2, r4
  4039ca:	6811      	ldr	r1, [r2, #0]
  4039cc:	6019      	str	r1, [r3, #0]
  4039ce:	6851      	ldr	r1, [r2, #4]
  4039d0:	6059      	str	r1, [r3, #4]
  4039d2:	6892      	ldr	r2, [r2, #8]
  4039d4:	609a      	str	r2, [r3, #8]
  4039d6:	4621      	mov	r1, r4
  4039d8:	4640      	mov	r0, r8
  4039da:	f7ff f8c3 	bl	402b64 <_free_r>
  4039de:	e01d      	b.n	403a1c <_realloc_r+0xe0>
  4039e0:	f026 0607 	bic.w	r6, r6, #7
  4039e4:	2e00      	cmp	r6, #0
  4039e6:	4632      	mov	r2, r6
  4039e8:	dabf      	bge.n	40396a <_realloc_r+0x2e>
  4039ea:	2500      	movs	r5, #0
  4039ec:	230c      	movs	r3, #12
  4039ee:	4628      	mov	r0, r5
  4039f0:	f8c8 3000 	str.w	r3, [r8]
  4039f4:	b003      	add	sp, #12
  4039f6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  4039fa:	4625      	mov	r5, r4
  4039fc:	1bbb      	subs	r3, r7, r6
  4039fe:	2b0f      	cmp	r3, #15
  403a00:	f8d9 2004 	ldr.w	r2, [r9, #4]
  403a04:	d81d      	bhi.n	403a42 <_realloc_r+0x106>
  403a06:	f002 0201 	and.w	r2, r2, #1
  403a0a:	433a      	orrs	r2, r7
  403a0c:	eb09 0107 	add.w	r1, r9, r7
  403a10:	f8c9 2004 	str.w	r2, [r9, #4]
  403a14:	684b      	ldr	r3, [r1, #4]
  403a16:	f043 0301 	orr.w	r3, r3, #1
  403a1a:	604b      	str	r3, [r1, #4]
  403a1c:	4640      	mov	r0, r8
  403a1e:	f7ff ff8b 	bl	403938 <__malloc_unlock>
  403a22:	4628      	mov	r0, r5
  403a24:	b003      	add	sp, #12
  403a26:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  403a2a:	f023 0303 	bic.w	r3, r3, #3
  403a2e:	18f9      	adds	r1, r7, r3
  403a30:	4291      	cmp	r1, r2
  403a32:	db1d      	blt.n	403a70 <_realloc_r+0x134>
  403a34:	68c3      	ldr	r3, [r0, #12]
  403a36:	6882      	ldr	r2, [r0, #8]
  403a38:	4625      	mov	r5, r4
  403a3a:	60d3      	str	r3, [r2, #12]
  403a3c:	460f      	mov	r7, r1
  403a3e:	609a      	str	r2, [r3, #8]
  403a40:	e7dc      	b.n	4039fc <_realloc_r+0xc0>
  403a42:	f002 0201 	and.w	r2, r2, #1
  403a46:	eb09 0106 	add.w	r1, r9, r6
  403a4a:	f043 0301 	orr.w	r3, r3, #1
  403a4e:	4332      	orrs	r2, r6
  403a50:	f8c9 2004 	str.w	r2, [r9, #4]
  403a54:	444f      	add	r7, r9
  403a56:	604b      	str	r3, [r1, #4]
  403a58:	687b      	ldr	r3, [r7, #4]
  403a5a:	3108      	adds	r1, #8
  403a5c:	f043 0301 	orr.w	r3, r3, #1
  403a60:	607b      	str	r3, [r7, #4]
  403a62:	4640      	mov	r0, r8
  403a64:	f7ff f87e 	bl	402b64 <_free_r>
  403a68:	e7d8      	b.n	403a1c <_realloc_r+0xe0>
  403a6a:	4611      	mov	r1, r2
  403a6c:	f7ff bb8a 	b.w	403184 <_malloc_r>
  403a70:	f01e 0f01 	tst.w	lr, #1
  403a74:	d18f      	bne.n	403996 <_realloc_r+0x5a>
  403a76:	f854 1c08 	ldr.w	r1, [r4, #-8]
  403a7a:	eba9 0a01 	sub.w	sl, r9, r1
  403a7e:	f8da 1004 	ldr.w	r1, [sl, #4]
  403a82:	f021 0103 	bic.w	r1, r1, #3
  403a86:	440b      	add	r3, r1
  403a88:	443b      	add	r3, r7
  403a8a:	4293      	cmp	r3, r2
  403a8c:	db26      	blt.n	403adc <_realloc_r+0x1a0>
  403a8e:	4655      	mov	r5, sl
  403a90:	68c1      	ldr	r1, [r0, #12]
  403a92:	6880      	ldr	r0, [r0, #8]
  403a94:	1f3a      	subs	r2, r7, #4
  403a96:	60c1      	str	r1, [r0, #12]
  403a98:	6088      	str	r0, [r1, #8]
  403a9a:	f855 0f08 	ldr.w	r0, [r5, #8]!
  403a9e:	f8da 100c 	ldr.w	r1, [sl, #12]
  403aa2:	2a24      	cmp	r2, #36	; 0x24
  403aa4:	60c1      	str	r1, [r0, #12]
  403aa6:	6088      	str	r0, [r1, #8]
  403aa8:	d826      	bhi.n	403af8 <_realloc_r+0x1bc>
  403aaa:	2a13      	cmp	r2, #19
  403aac:	f240 8081 	bls.w	403bb2 <_realloc_r+0x276>
  403ab0:	6821      	ldr	r1, [r4, #0]
  403ab2:	2a1b      	cmp	r2, #27
  403ab4:	f8ca 1008 	str.w	r1, [sl, #8]
  403ab8:	6861      	ldr	r1, [r4, #4]
  403aba:	f8ca 100c 	str.w	r1, [sl, #12]
  403abe:	f200 80ad 	bhi.w	403c1c <_realloc_r+0x2e0>
  403ac2:	f104 0008 	add.w	r0, r4, #8
  403ac6:	f10a 0210 	add.w	r2, sl, #16
  403aca:	e074      	b.n	403bb6 <_realloc_r+0x27a>
  403acc:	f854 3c08 	ldr.w	r3, [r4, #-8]
  403ad0:	eba9 0a03 	sub.w	sl, r9, r3
  403ad4:	f8da 1004 	ldr.w	r1, [sl, #4]
  403ad8:	f021 0103 	bic.w	r1, r1, #3
  403adc:	187b      	adds	r3, r7, r1
  403ade:	4293      	cmp	r3, r2
  403ae0:	f6ff af59 	blt.w	403996 <_realloc_r+0x5a>
  403ae4:	4655      	mov	r5, sl
  403ae6:	f8da 100c 	ldr.w	r1, [sl, #12]
  403aea:	f855 0f08 	ldr.w	r0, [r5, #8]!
  403aee:	1f3a      	subs	r2, r7, #4
  403af0:	2a24      	cmp	r2, #36	; 0x24
  403af2:	60c1      	str	r1, [r0, #12]
  403af4:	6088      	str	r0, [r1, #8]
  403af6:	d9d8      	bls.n	403aaa <_realloc_r+0x16e>
  403af8:	4621      	mov	r1, r4
  403afa:	4628      	mov	r0, r5
  403afc:	461f      	mov	r7, r3
  403afe:	46d1      	mov	r9, sl
  403b00:	f7ff feb4 	bl	40386c <memmove>
  403b04:	e77a      	b.n	4039fc <_realloc_r+0xc0>
  403b06:	6841      	ldr	r1, [r0, #4]
  403b08:	f106 0010 	add.w	r0, r6, #16
  403b0c:	f021 0b03 	bic.w	fp, r1, #3
  403b10:	44bb      	add	fp, r7
  403b12:	4583      	cmp	fp, r0
  403b14:	da58      	bge.n	403bc8 <_realloc_r+0x28c>
  403b16:	f01e 0f01 	tst.w	lr, #1
  403b1a:	f47f af3c 	bne.w	403996 <_realloc_r+0x5a>
  403b1e:	f854 1c08 	ldr.w	r1, [r4, #-8]
  403b22:	eba9 0a01 	sub.w	sl, r9, r1
  403b26:	f8da 1004 	ldr.w	r1, [sl, #4]
  403b2a:	f021 0103 	bic.w	r1, r1, #3
  403b2e:	448b      	add	fp, r1
  403b30:	4558      	cmp	r0, fp
  403b32:	dcd3      	bgt.n	403adc <_realloc_r+0x1a0>
  403b34:	4655      	mov	r5, sl
  403b36:	f8da 100c 	ldr.w	r1, [sl, #12]
  403b3a:	f855 0f08 	ldr.w	r0, [r5, #8]!
  403b3e:	1f3a      	subs	r2, r7, #4
  403b40:	2a24      	cmp	r2, #36	; 0x24
  403b42:	60c1      	str	r1, [r0, #12]
  403b44:	6088      	str	r0, [r1, #8]
  403b46:	f200 808d 	bhi.w	403c64 <_realloc_r+0x328>
  403b4a:	2a13      	cmp	r2, #19
  403b4c:	f240 8087 	bls.w	403c5e <_realloc_r+0x322>
  403b50:	6821      	ldr	r1, [r4, #0]
  403b52:	2a1b      	cmp	r2, #27
  403b54:	f8ca 1008 	str.w	r1, [sl, #8]
  403b58:	6861      	ldr	r1, [r4, #4]
  403b5a:	f8ca 100c 	str.w	r1, [sl, #12]
  403b5e:	f200 8088 	bhi.w	403c72 <_realloc_r+0x336>
  403b62:	f104 0108 	add.w	r1, r4, #8
  403b66:	f10a 0210 	add.w	r2, sl, #16
  403b6a:	6808      	ldr	r0, [r1, #0]
  403b6c:	6010      	str	r0, [r2, #0]
  403b6e:	6848      	ldr	r0, [r1, #4]
  403b70:	6050      	str	r0, [r2, #4]
  403b72:	6889      	ldr	r1, [r1, #8]
  403b74:	6091      	str	r1, [r2, #8]
  403b76:	ebab 0206 	sub.w	r2, fp, r6
  403b7a:	eb0a 0106 	add.w	r1, sl, r6
  403b7e:	f042 0201 	orr.w	r2, r2, #1
  403b82:	6099      	str	r1, [r3, #8]
  403b84:	604a      	str	r2, [r1, #4]
  403b86:	f8da 3004 	ldr.w	r3, [sl, #4]
  403b8a:	4640      	mov	r0, r8
  403b8c:	f003 0301 	and.w	r3, r3, #1
  403b90:	431e      	orrs	r6, r3
  403b92:	f8ca 6004 	str.w	r6, [sl, #4]
  403b96:	f7ff fecf 	bl	403938 <__malloc_unlock>
  403b9a:	e742      	b.n	403a22 <_realloc_r+0xe6>
  403b9c:	6823      	ldr	r3, [r4, #0]
  403b9e:	2a1b      	cmp	r2, #27
  403ba0:	6003      	str	r3, [r0, #0]
  403ba2:	6863      	ldr	r3, [r4, #4]
  403ba4:	6043      	str	r3, [r0, #4]
  403ba6:	d827      	bhi.n	403bf8 <_realloc_r+0x2bc>
  403ba8:	f100 0308 	add.w	r3, r0, #8
  403bac:	f104 0208 	add.w	r2, r4, #8
  403bb0:	e70b      	b.n	4039ca <_realloc_r+0x8e>
  403bb2:	4620      	mov	r0, r4
  403bb4:	462a      	mov	r2, r5
  403bb6:	6801      	ldr	r1, [r0, #0]
  403bb8:	461f      	mov	r7, r3
  403bba:	6011      	str	r1, [r2, #0]
  403bbc:	6841      	ldr	r1, [r0, #4]
  403bbe:	46d1      	mov	r9, sl
  403bc0:	6051      	str	r1, [r2, #4]
  403bc2:	6883      	ldr	r3, [r0, #8]
  403bc4:	6093      	str	r3, [r2, #8]
  403bc6:	e719      	b.n	4039fc <_realloc_r+0xc0>
  403bc8:	ebab 0b06 	sub.w	fp, fp, r6
  403bcc:	eb09 0106 	add.w	r1, r9, r6
  403bd0:	f04b 0201 	orr.w	r2, fp, #1
  403bd4:	6099      	str	r1, [r3, #8]
  403bd6:	604a      	str	r2, [r1, #4]
  403bd8:	f854 3c04 	ldr.w	r3, [r4, #-4]
  403bdc:	4640      	mov	r0, r8
  403bde:	f003 0301 	and.w	r3, r3, #1
  403be2:	431e      	orrs	r6, r3
  403be4:	f844 6c04 	str.w	r6, [r4, #-4]
  403be8:	f7ff fea6 	bl	403938 <__malloc_unlock>
  403bec:	4625      	mov	r5, r4
  403bee:	e718      	b.n	403a22 <_realloc_r+0xe6>
  403bf0:	4621      	mov	r1, r4
  403bf2:	f7ff fe3b 	bl	40386c <memmove>
  403bf6:	e6ee      	b.n	4039d6 <_realloc_r+0x9a>
  403bf8:	68a3      	ldr	r3, [r4, #8]
  403bfa:	2a24      	cmp	r2, #36	; 0x24
  403bfc:	6083      	str	r3, [r0, #8]
  403bfe:	68e3      	ldr	r3, [r4, #12]
  403c00:	60c3      	str	r3, [r0, #12]
  403c02:	d018      	beq.n	403c36 <_realloc_r+0x2fa>
  403c04:	f100 0310 	add.w	r3, r0, #16
  403c08:	f104 0210 	add.w	r2, r4, #16
  403c0c:	e6dd      	b.n	4039ca <_realloc_r+0x8e>
  403c0e:	f850 3c04 	ldr.w	r3, [r0, #-4]
  403c12:	4625      	mov	r5, r4
  403c14:	f023 0303 	bic.w	r3, r3, #3
  403c18:	441f      	add	r7, r3
  403c1a:	e6ef      	b.n	4039fc <_realloc_r+0xc0>
  403c1c:	68a1      	ldr	r1, [r4, #8]
  403c1e:	2a24      	cmp	r2, #36	; 0x24
  403c20:	f8ca 1010 	str.w	r1, [sl, #16]
  403c24:	68e1      	ldr	r1, [r4, #12]
  403c26:	f8ca 1014 	str.w	r1, [sl, #20]
  403c2a:	d00d      	beq.n	403c48 <_realloc_r+0x30c>
  403c2c:	f104 0010 	add.w	r0, r4, #16
  403c30:	f10a 0218 	add.w	r2, sl, #24
  403c34:	e7bf      	b.n	403bb6 <_realloc_r+0x27a>
  403c36:	6922      	ldr	r2, [r4, #16]
  403c38:	f100 0318 	add.w	r3, r0, #24
  403c3c:	6102      	str	r2, [r0, #16]
  403c3e:	6961      	ldr	r1, [r4, #20]
  403c40:	f104 0218 	add.w	r2, r4, #24
  403c44:	6141      	str	r1, [r0, #20]
  403c46:	e6c0      	b.n	4039ca <_realloc_r+0x8e>
  403c48:	6922      	ldr	r2, [r4, #16]
  403c4a:	f104 0018 	add.w	r0, r4, #24
  403c4e:	f8ca 2018 	str.w	r2, [sl, #24]
  403c52:	6961      	ldr	r1, [r4, #20]
  403c54:	f10a 0220 	add.w	r2, sl, #32
  403c58:	f8ca 101c 	str.w	r1, [sl, #28]
  403c5c:	e7ab      	b.n	403bb6 <_realloc_r+0x27a>
  403c5e:	4621      	mov	r1, r4
  403c60:	462a      	mov	r2, r5
  403c62:	e782      	b.n	403b6a <_realloc_r+0x22e>
  403c64:	4621      	mov	r1, r4
  403c66:	4628      	mov	r0, r5
  403c68:	9301      	str	r3, [sp, #4]
  403c6a:	f7ff fdff 	bl	40386c <memmove>
  403c6e:	9b01      	ldr	r3, [sp, #4]
  403c70:	e781      	b.n	403b76 <_realloc_r+0x23a>
  403c72:	68a1      	ldr	r1, [r4, #8]
  403c74:	2a24      	cmp	r2, #36	; 0x24
  403c76:	f8ca 1010 	str.w	r1, [sl, #16]
  403c7a:	68e1      	ldr	r1, [r4, #12]
  403c7c:	f8ca 1014 	str.w	r1, [sl, #20]
  403c80:	d006      	beq.n	403c90 <_realloc_r+0x354>
  403c82:	f104 0110 	add.w	r1, r4, #16
  403c86:	f10a 0218 	add.w	r2, sl, #24
  403c8a:	e76e      	b.n	403b6a <_realloc_r+0x22e>
  403c8c:	200006a4 	.word	0x200006a4
  403c90:	6922      	ldr	r2, [r4, #16]
  403c92:	f104 0118 	add.w	r1, r4, #24
  403c96:	f8ca 2018 	str.w	r2, [sl, #24]
  403c9a:	6960      	ldr	r0, [r4, #20]
  403c9c:	f10a 0220 	add.w	r2, sl, #32
  403ca0:	f8ca 001c 	str.w	r0, [sl, #28]
  403ca4:	e761      	b.n	403b6a <_realloc_r+0x22e>
  403ca6:	bf00      	nop

00403ca8 <_sbrk_r>:
  403ca8:	b538      	push	{r3, r4, r5, lr}
  403caa:	2300      	movs	r3, #0
  403cac:	4c06      	ldr	r4, [pc, #24]	; (403cc8 <_sbrk_r+0x20>)
  403cae:	4605      	mov	r5, r0
  403cb0:	4608      	mov	r0, r1
  403cb2:	6023      	str	r3, [r4, #0]
  403cb4:	f7fd f9a2 	bl	400ffc <_sbrk>
  403cb8:	1c43      	adds	r3, r0, #1
  403cba:	d000      	beq.n	403cbe <_sbrk_r+0x16>
  403cbc:	bd38      	pop	{r3, r4, r5, pc}
  403cbe:	6823      	ldr	r3, [r4, #0]
  403cc0:	2b00      	cmp	r3, #0
  403cc2:	d0fb      	beq.n	403cbc <_sbrk_r+0x14>
  403cc4:	602b      	str	r3, [r5, #0]
  403cc6:	bd38      	pop	{r3, r4, r5, pc}
  403cc8:	20000b90 	.word	0x20000b90

00403ccc <__sread>:
  403ccc:	b510      	push	{r4, lr}
  403cce:	460c      	mov	r4, r1
  403cd0:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
  403cd4:	f000 f9c6 	bl	404064 <_read_r>
  403cd8:	2800      	cmp	r0, #0
  403cda:	db03      	blt.n	403ce4 <__sread+0x18>
  403cdc:	6d23      	ldr	r3, [r4, #80]	; 0x50
  403cde:	4403      	add	r3, r0
  403ce0:	6523      	str	r3, [r4, #80]	; 0x50
  403ce2:	bd10      	pop	{r4, pc}
  403ce4:	89a3      	ldrh	r3, [r4, #12]
  403ce6:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
  403cea:	81a3      	strh	r3, [r4, #12]
  403cec:	bd10      	pop	{r4, pc}
  403cee:	bf00      	nop

00403cf0 <__swrite>:
  403cf0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  403cf4:	460c      	mov	r4, r1
  403cf6:	f9b1 100c 	ldrsh.w	r1, [r1, #12]
  403cfa:	461f      	mov	r7, r3
  403cfc:	05cb      	lsls	r3, r1, #23
  403cfe:	4616      	mov	r6, r2
  403d00:	4605      	mov	r5, r0
  403d02:	d507      	bpl.n	403d14 <__swrite+0x24>
  403d04:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
  403d08:	2302      	movs	r3, #2
  403d0a:	2200      	movs	r2, #0
  403d0c:	f000 f994 	bl	404038 <_lseek_r>
  403d10:	f9b4 100c 	ldrsh.w	r1, [r4, #12]
  403d14:	f421 5180 	bic.w	r1, r1, #4096	; 0x1000
  403d18:	81a1      	strh	r1, [r4, #12]
  403d1a:	463b      	mov	r3, r7
  403d1c:	4632      	mov	r2, r6
  403d1e:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
  403d22:	4628      	mov	r0, r5
  403d24:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
  403d28:	f000 b8a2 	b.w	403e70 <_write_r>

00403d2c <__sseek>:
  403d2c:	b510      	push	{r4, lr}
  403d2e:	460c      	mov	r4, r1
  403d30:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
  403d34:	f000 f980 	bl	404038 <_lseek_r>
  403d38:	89a3      	ldrh	r3, [r4, #12]
  403d3a:	1c42      	adds	r2, r0, #1
  403d3c:	bf0e      	itee	eq
  403d3e:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
  403d42:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
  403d46:	6520      	strne	r0, [r4, #80]	; 0x50
  403d48:	81a3      	strh	r3, [r4, #12]
  403d4a:	bd10      	pop	{r4, pc}

00403d4c <__sclose>:
  403d4c:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
  403d50:	f000 b8fa 	b.w	403f48 <_close_r>

00403d54 <__swbuf_r>:
  403d54:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  403d56:	460d      	mov	r5, r1
  403d58:	4614      	mov	r4, r2
  403d5a:	4606      	mov	r6, r0
  403d5c:	b110      	cbz	r0, 403d64 <__swbuf_r+0x10>
  403d5e:	6b83      	ldr	r3, [r0, #56]	; 0x38
  403d60:	2b00      	cmp	r3, #0
  403d62:	d04b      	beq.n	403dfc <__swbuf_r+0xa8>
  403d64:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
  403d68:	69a3      	ldr	r3, [r4, #24]
  403d6a:	b291      	uxth	r1, r2
  403d6c:	0708      	lsls	r0, r1, #28
  403d6e:	60a3      	str	r3, [r4, #8]
  403d70:	d539      	bpl.n	403de6 <__swbuf_r+0x92>
  403d72:	6923      	ldr	r3, [r4, #16]
  403d74:	2b00      	cmp	r3, #0
  403d76:	d036      	beq.n	403de6 <__swbuf_r+0x92>
  403d78:	b2ed      	uxtb	r5, r5
  403d7a:	0489      	lsls	r1, r1, #18
  403d7c:	462f      	mov	r7, r5
  403d7e:	d515      	bpl.n	403dac <__swbuf_r+0x58>
  403d80:	6822      	ldr	r2, [r4, #0]
  403d82:	6961      	ldr	r1, [r4, #20]
  403d84:	1ad3      	subs	r3, r2, r3
  403d86:	428b      	cmp	r3, r1
  403d88:	da1c      	bge.n	403dc4 <__swbuf_r+0x70>
  403d8a:	3301      	adds	r3, #1
  403d8c:	68a1      	ldr	r1, [r4, #8]
  403d8e:	1c50      	adds	r0, r2, #1
  403d90:	3901      	subs	r1, #1
  403d92:	60a1      	str	r1, [r4, #8]
  403d94:	6020      	str	r0, [r4, #0]
  403d96:	7015      	strb	r5, [r2, #0]
  403d98:	6962      	ldr	r2, [r4, #20]
  403d9a:	429a      	cmp	r2, r3
  403d9c:	d01a      	beq.n	403dd4 <__swbuf_r+0x80>
  403d9e:	89a3      	ldrh	r3, [r4, #12]
  403da0:	07db      	lsls	r3, r3, #31
  403da2:	d501      	bpl.n	403da8 <__swbuf_r+0x54>
  403da4:	2d0a      	cmp	r5, #10
  403da6:	d015      	beq.n	403dd4 <__swbuf_r+0x80>
  403da8:	4638      	mov	r0, r7
  403daa:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  403dac:	6e61      	ldr	r1, [r4, #100]	; 0x64
  403dae:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
  403db2:	f421 5100 	bic.w	r1, r1, #8192	; 0x2000
  403db6:	81a2      	strh	r2, [r4, #12]
  403db8:	6822      	ldr	r2, [r4, #0]
  403dba:	6661      	str	r1, [r4, #100]	; 0x64
  403dbc:	6961      	ldr	r1, [r4, #20]
  403dbe:	1ad3      	subs	r3, r2, r3
  403dc0:	428b      	cmp	r3, r1
  403dc2:	dbe2      	blt.n	403d8a <__swbuf_r+0x36>
  403dc4:	4621      	mov	r1, r4
  403dc6:	4630      	mov	r0, r6
  403dc8:	f7fe fd66 	bl	402898 <_fflush_r>
  403dcc:	b940      	cbnz	r0, 403de0 <__swbuf_r+0x8c>
  403dce:	2301      	movs	r3, #1
  403dd0:	6822      	ldr	r2, [r4, #0]
  403dd2:	e7db      	b.n	403d8c <__swbuf_r+0x38>
  403dd4:	4621      	mov	r1, r4
  403dd6:	4630      	mov	r0, r6
  403dd8:	f7fe fd5e 	bl	402898 <_fflush_r>
  403ddc:	2800      	cmp	r0, #0
  403dde:	d0e3      	beq.n	403da8 <__swbuf_r+0x54>
  403de0:	f04f 37ff 	mov.w	r7, #4294967295
  403de4:	e7e0      	b.n	403da8 <__swbuf_r+0x54>
  403de6:	4621      	mov	r1, r4
  403de8:	4630      	mov	r0, r6
  403dea:	f7fe fc45 	bl	402678 <__swsetup_r>
  403dee:	2800      	cmp	r0, #0
  403df0:	d1f6      	bne.n	403de0 <__swbuf_r+0x8c>
  403df2:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
  403df6:	6923      	ldr	r3, [r4, #16]
  403df8:	b291      	uxth	r1, r2
  403dfa:	e7bd      	b.n	403d78 <__swbuf_r+0x24>
  403dfc:	f7fe fde0 	bl	4029c0 <__sinit>
  403e00:	e7b0      	b.n	403d64 <__swbuf_r+0x10>
  403e02:	bf00      	nop

00403e04 <_wcrtomb_r>:
  403e04:	b5f0      	push	{r4, r5, r6, r7, lr}
  403e06:	4606      	mov	r6, r0
  403e08:	b085      	sub	sp, #20
  403e0a:	461f      	mov	r7, r3
  403e0c:	b189      	cbz	r1, 403e32 <_wcrtomb_r+0x2e>
  403e0e:	4c10      	ldr	r4, [pc, #64]	; (403e50 <_wcrtomb_r+0x4c>)
  403e10:	4d10      	ldr	r5, [pc, #64]	; (403e54 <_wcrtomb_r+0x50>)
  403e12:	6824      	ldr	r4, [r4, #0]
  403e14:	6b64      	ldr	r4, [r4, #52]	; 0x34
  403e16:	2c00      	cmp	r4, #0
  403e18:	bf08      	it	eq
  403e1a:	462c      	moveq	r4, r5
  403e1c:	f8d4 40e0 	ldr.w	r4, [r4, #224]	; 0xe0
  403e20:	47a0      	blx	r4
  403e22:	1c43      	adds	r3, r0, #1
  403e24:	d103      	bne.n	403e2e <_wcrtomb_r+0x2a>
  403e26:	2200      	movs	r2, #0
  403e28:	238a      	movs	r3, #138	; 0x8a
  403e2a:	603a      	str	r2, [r7, #0]
  403e2c:	6033      	str	r3, [r6, #0]
  403e2e:	b005      	add	sp, #20
  403e30:	bdf0      	pop	{r4, r5, r6, r7, pc}
  403e32:	460c      	mov	r4, r1
  403e34:	4a06      	ldr	r2, [pc, #24]	; (403e50 <_wcrtomb_r+0x4c>)
  403e36:	4d07      	ldr	r5, [pc, #28]	; (403e54 <_wcrtomb_r+0x50>)
  403e38:	6811      	ldr	r1, [r2, #0]
  403e3a:	4622      	mov	r2, r4
  403e3c:	6b4c      	ldr	r4, [r1, #52]	; 0x34
  403e3e:	a901      	add	r1, sp, #4
  403e40:	2c00      	cmp	r4, #0
  403e42:	bf08      	it	eq
  403e44:	462c      	moveq	r4, r5
  403e46:	f8d4 40e0 	ldr.w	r4, [r4, #224]	; 0xe0
  403e4a:	47a0      	blx	r4
  403e4c:	e7e9      	b.n	403e22 <_wcrtomb_r+0x1e>
  403e4e:	bf00      	nop
  403e50:	20000108 	.word	0x20000108
  403e54:	20000538 	.word	0x20000538

00403e58 <__ascii_wctomb>:
  403e58:	b119      	cbz	r1, 403e62 <__ascii_wctomb+0xa>
  403e5a:	2aff      	cmp	r2, #255	; 0xff
  403e5c:	d803      	bhi.n	403e66 <__ascii_wctomb+0xe>
  403e5e:	700a      	strb	r2, [r1, #0]
  403e60:	2101      	movs	r1, #1
  403e62:	4608      	mov	r0, r1
  403e64:	4770      	bx	lr
  403e66:	238a      	movs	r3, #138	; 0x8a
  403e68:	f04f 31ff 	mov.w	r1, #4294967295
  403e6c:	6003      	str	r3, [r0, #0]
  403e6e:	e7f8      	b.n	403e62 <__ascii_wctomb+0xa>

00403e70 <_write_r>:
  403e70:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  403e72:	460e      	mov	r6, r1
  403e74:	2500      	movs	r5, #0
  403e76:	4c08      	ldr	r4, [pc, #32]	; (403e98 <_write_r+0x28>)
  403e78:	4611      	mov	r1, r2
  403e7a:	4607      	mov	r7, r0
  403e7c:	461a      	mov	r2, r3
  403e7e:	4630      	mov	r0, r6
  403e80:	6025      	str	r5, [r4, #0]
  403e82:	f7fc f989 	bl	400198 <_write>
  403e86:	1c43      	adds	r3, r0, #1
  403e88:	d000      	beq.n	403e8c <_write_r+0x1c>
  403e8a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  403e8c:	6823      	ldr	r3, [r4, #0]
  403e8e:	2b00      	cmp	r3, #0
  403e90:	d0fb      	beq.n	403e8a <_write_r+0x1a>
  403e92:	603b      	str	r3, [r7, #0]
  403e94:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  403e96:	bf00      	nop
  403e98:	20000b90 	.word	0x20000b90

00403e9c <__register_exitproc>:
  403e9c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
  403ea0:	4c27      	ldr	r4, [pc, #156]	; (403f40 <__register_exitproc+0xa4>)
  403ea2:	4607      	mov	r7, r0
  403ea4:	6826      	ldr	r6, [r4, #0]
  403ea6:	4688      	mov	r8, r1
  403ea8:	f8d6 4148 	ldr.w	r4, [r6, #328]	; 0x148
  403eac:	4692      	mov	sl, r2
  403eae:	4699      	mov	r9, r3
  403eb0:	2c00      	cmp	r4, #0
  403eb2:	d03c      	beq.n	403f2e <__register_exitproc+0x92>
  403eb4:	6865      	ldr	r5, [r4, #4]
  403eb6:	2d1f      	cmp	r5, #31
  403eb8:	dc1a      	bgt.n	403ef0 <__register_exitproc+0x54>
  403eba:	f105 0e01 	add.w	lr, r5, #1
  403ebe:	b17f      	cbz	r7, 403ee0 <__register_exitproc+0x44>
  403ec0:	2001      	movs	r0, #1
  403ec2:	eb04 0385 	add.w	r3, r4, r5, lsl #2
  403ec6:	f8c3 a088 	str.w	sl, [r3, #136]	; 0x88
  403eca:	f8d4 1188 	ldr.w	r1, [r4, #392]	; 0x188
  403ece:	fa00 f205 	lsl.w	r2, r0, r5
  403ed2:	4311      	orrs	r1, r2
  403ed4:	2f02      	cmp	r7, #2
  403ed6:	f8c4 1188 	str.w	r1, [r4, #392]	; 0x188
  403eda:	f8c3 9108 	str.w	r9, [r3, #264]	; 0x108
  403ede:	d020      	beq.n	403f22 <__register_exitproc+0x86>
  403ee0:	3502      	adds	r5, #2
  403ee2:	f8c4 e004 	str.w	lr, [r4, #4]
  403ee6:	2000      	movs	r0, #0
  403ee8:	f844 8025 	str.w	r8, [r4, r5, lsl #2]
  403eec:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  403ef0:	4b14      	ldr	r3, [pc, #80]	; (403f44 <__register_exitproc+0xa8>)
  403ef2:	b30b      	cbz	r3, 403f38 <__register_exitproc+0x9c>
  403ef4:	f44f 70c8 	mov.w	r0, #400	; 0x190
  403ef8:	f7ff f93c 	bl	403174 <malloc>
  403efc:	4604      	mov	r4, r0
  403efe:	b1d8      	cbz	r0, 403f38 <__register_exitproc+0x9c>
  403f00:	2000      	movs	r0, #0
  403f02:	f8d6 3148 	ldr.w	r3, [r6, #328]	; 0x148
  403f06:	f04f 0e01 	mov.w	lr, #1
  403f0a:	6060      	str	r0, [r4, #4]
  403f0c:	6023      	str	r3, [r4, #0]
  403f0e:	4605      	mov	r5, r0
  403f10:	f8c6 4148 	str.w	r4, [r6, #328]	; 0x148
  403f14:	f8c4 0188 	str.w	r0, [r4, #392]	; 0x188
  403f18:	f8c4 018c 	str.w	r0, [r4, #396]	; 0x18c
  403f1c:	2f00      	cmp	r7, #0
  403f1e:	d0df      	beq.n	403ee0 <__register_exitproc+0x44>
  403f20:	e7ce      	b.n	403ec0 <__register_exitproc+0x24>
  403f22:	f8d4 318c 	ldr.w	r3, [r4, #396]	; 0x18c
  403f26:	431a      	orrs	r2, r3
  403f28:	f8c4 218c 	str.w	r2, [r4, #396]	; 0x18c
  403f2c:	e7d8      	b.n	403ee0 <__register_exitproc+0x44>
  403f2e:	f506 74a6 	add.w	r4, r6, #332	; 0x14c
  403f32:	f8c6 4148 	str.w	r4, [r6, #328]	; 0x148
  403f36:	e7bd      	b.n	403eb4 <__register_exitproc+0x18>
  403f38:	f04f 30ff 	mov.w	r0, #4294967295
  403f3c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  403f40:	004044f0 	.word	0x004044f0
  403f44:	00403175 	.word	0x00403175

00403f48 <_close_r>:
  403f48:	b538      	push	{r3, r4, r5, lr}
  403f4a:	2300      	movs	r3, #0
  403f4c:	4c06      	ldr	r4, [pc, #24]	; (403f68 <_close_r+0x20>)
  403f4e:	4605      	mov	r5, r0
  403f50:	4608      	mov	r0, r1
  403f52:	6023      	str	r3, [r4, #0]
  403f54:	f7fd f86e 	bl	401034 <_close>
  403f58:	1c43      	adds	r3, r0, #1
  403f5a:	d000      	beq.n	403f5e <_close_r+0x16>
  403f5c:	bd38      	pop	{r3, r4, r5, pc}
  403f5e:	6823      	ldr	r3, [r4, #0]
  403f60:	2b00      	cmp	r3, #0
  403f62:	d0fb      	beq.n	403f5c <_close_r+0x14>
  403f64:	602b      	str	r3, [r5, #0]
  403f66:	bd38      	pop	{r3, r4, r5, pc}
  403f68:	20000b90 	.word	0x20000b90

00403f6c <_fclose_r>:
  403f6c:	b570      	push	{r4, r5, r6, lr}
  403f6e:	b139      	cbz	r1, 403f80 <_fclose_r+0x14>
  403f70:	4605      	mov	r5, r0
  403f72:	460c      	mov	r4, r1
  403f74:	b108      	cbz	r0, 403f7a <_fclose_r+0xe>
  403f76:	6b83      	ldr	r3, [r0, #56]	; 0x38
  403f78:	b383      	cbz	r3, 403fdc <_fclose_r+0x70>
  403f7a:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  403f7e:	b913      	cbnz	r3, 403f86 <_fclose_r+0x1a>
  403f80:	2600      	movs	r6, #0
  403f82:	4630      	mov	r0, r6
  403f84:	bd70      	pop	{r4, r5, r6, pc}
  403f86:	4621      	mov	r1, r4
  403f88:	4628      	mov	r0, r5
  403f8a:	f7fe fbe9 	bl	402760 <__sflush_r>
  403f8e:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
  403f90:	4606      	mov	r6, r0
  403f92:	b133      	cbz	r3, 403fa2 <_fclose_r+0x36>
  403f94:	69e1      	ldr	r1, [r4, #28]
  403f96:	4628      	mov	r0, r5
  403f98:	4798      	blx	r3
  403f9a:	2800      	cmp	r0, #0
  403f9c:	bfb8      	it	lt
  403f9e:	f04f 36ff 	movlt.w	r6, #4294967295
  403fa2:	89a3      	ldrh	r3, [r4, #12]
  403fa4:	061b      	lsls	r3, r3, #24
  403fa6:	d41c      	bmi.n	403fe2 <_fclose_r+0x76>
  403fa8:	6b21      	ldr	r1, [r4, #48]	; 0x30
  403faa:	b141      	cbz	r1, 403fbe <_fclose_r+0x52>
  403fac:	f104 0340 	add.w	r3, r4, #64	; 0x40
  403fb0:	4299      	cmp	r1, r3
  403fb2:	d002      	beq.n	403fba <_fclose_r+0x4e>
  403fb4:	4628      	mov	r0, r5
  403fb6:	f7fe fdd5 	bl	402b64 <_free_r>
  403fba:	2300      	movs	r3, #0
  403fbc:	6323      	str	r3, [r4, #48]	; 0x30
  403fbe:	6c61      	ldr	r1, [r4, #68]	; 0x44
  403fc0:	b121      	cbz	r1, 403fcc <_fclose_r+0x60>
  403fc2:	4628      	mov	r0, r5
  403fc4:	f7fe fdce 	bl	402b64 <_free_r>
  403fc8:	2300      	movs	r3, #0
  403fca:	6463      	str	r3, [r4, #68]	; 0x44
  403fcc:	f7fe fcfe 	bl	4029cc <__sfp_lock_acquire>
  403fd0:	2300      	movs	r3, #0
  403fd2:	81a3      	strh	r3, [r4, #12]
  403fd4:	f7fe fcfc 	bl	4029d0 <__sfp_lock_release>
  403fd8:	4630      	mov	r0, r6
  403fda:	bd70      	pop	{r4, r5, r6, pc}
  403fdc:	f7fe fcf0 	bl	4029c0 <__sinit>
  403fe0:	e7cb      	b.n	403f7a <_fclose_r+0xe>
  403fe2:	6921      	ldr	r1, [r4, #16]
  403fe4:	4628      	mov	r0, r5
  403fe6:	f7fe fdbd 	bl	402b64 <_free_r>
  403fea:	e7dd      	b.n	403fa8 <_fclose_r+0x3c>

00403fec <_fstat_r>:
  403fec:	b570      	push	{r4, r5, r6, lr}
  403fee:	460d      	mov	r5, r1
  403ff0:	2300      	movs	r3, #0
  403ff2:	4c07      	ldr	r4, [pc, #28]	; (404010 <_fstat_r+0x24>)
  403ff4:	4606      	mov	r6, r0
  403ff6:	4611      	mov	r1, r2
  403ff8:	4628      	mov	r0, r5
  403ffa:	6023      	str	r3, [r4, #0]
  403ffc:	f7fd f81d 	bl	40103a <_fstat>
  404000:	1c43      	adds	r3, r0, #1
  404002:	d000      	beq.n	404006 <_fstat_r+0x1a>
  404004:	bd70      	pop	{r4, r5, r6, pc}
  404006:	6823      	ldr	r3, [r4, #0]
  404008:	2b00      	cmp	r3, #0
  40400a:	d0fb      	beq.n	404004 <_fstat_r+0x18>
  40400c:	6033      	str	r3, [r6, #0]
  40400e:	bd70      	pop	{r4, r5, r6, pc}
  404010:	20000b90 	.word	0x20000b90

00404014 <_isatty_r>:
  404014:	b538      	push	{r3, r4, r5, lr}
  404016:	2300      	movs	r3, #0
  404018:	4c06      	ldr	r4, [pc, #24]	; (404034 <_isatty_r+0x20>)
  40401a:	4605      	mov	r5, r0
  40401c:	4608      	mov	r0, r1
  40401e:	6023      	str	r3, [r4, #0]
  404020:	f7fd f810 	bl	401044 <_isatty>
  404024:	1c43      	adds	r3, r0, #1
  404026:	d000      	beq.n	40402a <_isatty_r+0x16>
  404028:	bd38      	pop	{r3, r4, r5, pc}
  40402a:	6823      	ldr	r3, [r4, #0]
  40402c:	2b00      	cmp	r3, #0
  40402e:	d0fb      	beq.n	404028 <_isatty_r+0x14>
  404030:	602b      	str	r3, [r5, #0]
  404032:	bd38      	pop	{r3, r4, r5, pc}
  404034:	20000b90 	.word	0x20000b90

00404038 <_lseek_r>:
  404038:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  40403a:	460e      	mov	r6, r1
  40403c:	2500      	movs	r5, #0
  40403e:	4c08      	ldr	r4, [pc, #32]	; (404060 <_lseek_r+0x28>)
  404040:	4611      	mov	r1, r2
  404042:	4607      	mov	r7, r0
  404044:	461a      	mov	r2, r3
  404046:	4630      	mov	r0, r6
  404048:	6025      	str	r5, [r4, #0]
  40404a:	f7fc fffd 	bl	401048 <_lseek>
  40404e:	1c43      	adds	r3, r0, #1
  404050:	d000      	beq.n	404054 <_lseek_r+0x1c>
  404052:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  404054:	6823      	ldr	r3, [r4, #0]
  404056:	2b00      	cmp	r3, #0
  404058:	d0fb      	beq.n	404052 <_lseek_r+0x1a>
  40405a:	603b      	str	r3, [r7, #0]
  40405c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  40405e:	bf00      	nop
  404060:	20000b90 	.word	0x20000b90

00404064 <_read_r>:
  404064:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  404066:	460e      	mov	r6, r1
  404068:	2500      	movs	r5, #0
  40406a:	4c08      	ldr	r4, [pc, #32]	; (40408c <_read_r+0x28>)
  40406c:	4611      	mov	r1, r2
  40406e:	4607      	mov	r7, r0
  404070:	461a      	mov	r2, r3
  404072:	4630      	mov	r0, r6
  404074:	6025      	str	r5, [r4, #0]
  404076:	f7fc f85b 	bl	400130 <_read>
  40407a:	1c43      	adds	r3, r0, #1
  40407c:	d000      	beq.n	404080 <_read_r+0x1c>
  40407e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  404080:	6823      	ldr	r3, [r4, #0]
  404082:	2b00      	cmp	r3, #0
  404084:	d0fb      	beq.n	40407e <_read_r+0x1a>
  404086:	603b      	str	r3, [r7, #0]
  404088:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  40408a:	bf00      	nop
  40408c:	20000b90 	.word	0x20000b90

00404090 <__aeabi_uldivmod>:
  404090:	b953      	cbnz	r3, 4040a8 <__aeabi_uldivmod+0x18>
  404092:	b94a      	cbnz	r2, 4040a8 <__aeabi_uldivmod+0x18>
  404094:	2900      	cmp	r1, #0
  404096:	bf08      	it	eq
  404098:	2800      	cmpeq	r0, #0
  40409a:	bf1c      	itt	ne
  40409c:	f04f 31ff 	movne.w	r1, #4294967295
  4040a0:	f04f 30ff 	movne.w	r0, #4294967295
  4040a4:	f000 b97a 	b.w	40439c <__aeabi_idiv0>
  4040a8:	f1ad 0c08 	sub.w	ip, sp, #8
  4040ac:	e96d ce04 	strd	ip, lr, [sp, #-16]!
  4040b0:	f000 f806 	bl	4040c0 <__udivmoddi4>
  4040b4:	f8dd e004 	ldr.w	lr, [sp, #4]
  4040b8:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
  4040bc:	b004      	add	sp, #16
  4040be:	4770      	bx	lr

004040c0 <__udivmoddi4>:
  4040c0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
  4040c4:	468c      	mov	ip, r1
  4040c6:	460e      	mov	r6, r1
  4040c8:	4604      	mov	r4, r0
  4040ca:	9d08      	ldr	r5, [sp, #32]
  4040cc:	2b00      	cmp	r3, #0
  4040ce:	d150      	bne.n	404172 <__udivmoddi4+0xb2>
  4040d0:	428a      	cmp	r2, r1
  4040d2:	4617      	mov	r7, r2
  4040d4:	d96c      	bls.n	4041b0 <__udivmoddi4+0xf0>
  4040d6:	fab2 fe82 	clz	lr, r2
  4040da:	f1be 0f00 	cmp.w	lr, #0
  4040de:	d00b      	beq.n	4040f8 <__udivmoddi4+0x38>
  4040e0:	f1ce 0c20 	rsb	ip, lr, #32
  4040e4:	fa01 f60e 	lsl.w	r6, r1, lr
  4040e8:	fa20 fc0c 	lsr.w	ip, r0, ip
  4040ec:	fa02 f70e 	lsl.w	r7, r2, lr
  4040f0:	ea4c 0c06 	orr.w	ip, ip, r6
  4040f4:	fa00 f40e 	lsl.w	r4, r0, lr
  4040f8:	0c3a      	lsrs	r2, r7, #16
  4040fa:	fbbc f9f2 	udiv	r9, ip, r2
  4040fe:	b2bb      	uxth	r3, r7
  404100:	fb02 cc19 	mls	ip, r2, r9, ip
  404104:	fb09 fa03 	mul.w	sl, r9, r3
  404108:	ea4f 4814 	mov.w	r8, r4, lsr #16
  40410c:	ea48 460c 	orr.w	r6, r8, ip, lsl #16
  404110:	45b2      	cmp	sl, r6
  404112:	d90a      	bls.n	40412a <__udivmoddi4+0x6a>
  404114:	19f6      	adds	r6, r6, r7
  404116:	f109 31ff 	add.w	r1, r9, #4294967295
  40411a:	f080 8125 	bcs.w	404368 <__udivmoddi4+0x2a8>
  40411e:	45b2      	cmp	sl, r6
  404120:	f240 8122 	bls.w	404368 <__udivmoddi4+0x2a8>
  404124:	f1a9 0902 	sub.w	r9, r9, #2
  404128:	443e      	add	r6, r7
  40412a:	eba6 060a 	sub.w	r6, r6, sl
  40412e:	fbb6 f0f2 	udiv	r0, r6, r2
  404132:	fb02 6610 	mls	r6, r2, r0, r6
  404136:	fb00 f303 	mul.w	r3, r0, r3
  40413a:	b2a4      	uxth	r4, r4
  40413c:	ea44 4406 	orr.w	r4, r4, r6, lsl #16
  404140:	42a3      	cmp	r3, r4
  404142:	d909      	bls.n	404158 <__udivmoddi4+0x98>
  404144:	19e4      	adds	r4, r4, r7
  404146:	f100 32ff 	add.w	r2, r0, #4294967295
  40414a:	f080 810b 	bcs.w	404364 <__udivmoddi4+0x2a4>
  40414e:	42a3      	cmp	r3, r4
  404150:	f240 8108 	bls.w	404364 <__udivmoddi4+0x2a4>
  404154:	3802      	subs	r0, #2
  404156:	443c      	add	r4, r7
  404158:	2100      	movs	r1, #0
  40415a:	1ae4      	subs	r4, r4, r3
  40415c:	ea40 4009 	orr.w	r0, r0, r9, lsl #16
  404160:	2d00      	cmp	r5, #0
  404162:	d062      	beq.n	40422a <__udivmoddi4+0x16a>
  404164:	2300      	movs	r3, #0
  404166:	fa24 f40e 	lsr.w	r4, r4, lr
  40416a:	602c      	str	r4, [r5, #0]
  40416c:	606b      	str	r3, [r5, #4]
  40416e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  404172:	428b      	cmp	r3, r1
  404174:	d907      	bls.n	404186 <__udivmoddi4+0xc6>
  404176:	2d00      	cmp	r5, #0
  404178:	d055      	beq.n	404226 <__udivmoddi4+0x166>
  40417a:	2100      	movs	r1, #0
  40417c:	e885 0041 	stmia.w	r5, {r0, r6}
  404180:	4608      	mov	r0, r1
  404182:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  404186:	fab3 f183 	clz	r1, r3
  40418a:	2900      	cmp	r1, #0
  40418c:	f040 808f 	bne.w	4042ae <__udivmoddi4+0x1ee>
  404190:	42b3      	cmp	r3, r6
  404192:	d302      	bcc.n	40419a <__udivmoddi4+0xda>
  404194:	4282      	cmp	r2, r0
  404196:	f200 80fc 	bhi.w	404392 <__udivmoddi4+0x2d2>
  40419a:	1a84      	subs	r4, r0, r2
  40419c:	eb66 0603 	sbc.w	r6, r6, r3
  4041a0:	2001      	movs	r0, #1
  4041a2:	46b4      	mov	ip, r6
  4041a4:	2d00      	cmp	r5, #0
  4041a6:	d040      	beq.n	40422a <__udivmoddi4+0x16a>
  4041a8:	e885 1010 	stmia.w	r5, {r4, ip}
  4041ac:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  4041b0:	b912      	cbnz	r2, 4041b8 <__udivmoddi4+0xf8>
  4041b2:	2701      	movs	r7, #1
  4041b4:	fbb7 f7f2 	udiv	r7, r7, r2
  4041b8:	fab7 fe87 	clz	lr, r7
  4041bc:	f1be 0f00 	cmp.w	lr, #0
  4041c0:	d135      	bne.n	40422e <__udivmoddi4+0x16e>
  4041c2:	2101      	movs	r1, #1
  4041c4:	1bf6      	subs	r6, r6, r7
  4041c6:	ea4f 4c17 	mov.w	ip, r7, lsr #16
  4041ca:	fa1f f887 	uxth.w	r8, r7
  4041ce:	fbb6 f2fc 	udiv	r2, r6, ip
  4041d2:	fb0c 6612 	mls	r6, ip, r2, r6
  4041d6:	fb08 f002 	mul.w	r0, r8, r2
  4041da:	0c23      	lsrs	r3, r4, #16
  4041dc:	ea43 4606 	orr.w	r6, r3, r6, lsl #16
  4041e0:	42b0      	cmp	r0, r6
  4041e2:	d907      	bls.n	4041f4 <__udivmoddi4+0x134>
  4041e4:	19f6      	adds	r6, r6, r7
  4041e6:	f102 33ff 	add.w	r3, r2, #4294967295
  4041ea:	d202      	bcs.n	4041f2 <__udivmoddi4+0x132>
  4041ec:	42b0      	cmp	r0, r6
  4041ee:	f200 80d2 	bhi.w	404396 <__udivmoddi4+0x2d6>
  4041f2:	461a      	mov	r2, r3
  4041f4:	1a36      	subs	r6, r6, r0
  4041f6:	fbb6 f0fc 	udiv	r0, r6, ip
  4041fa:	fb0c 6610 	mls	r6, ip, r0, r6
  4041fe:	fb08 f800 	mul.w	r8, r8, r0
  404202:	b2a3      	uxth	r3, r4
  404204:	ea43 4406 	orr.w	r4, r3, r6, lsl #16
  404208:	45a0      	cmp	r8, r4
  40420a:	d907      	bls.n	40421c <__udivmoddi4+0x15c>
  40420c:	19e4      	adds	r4, r4, r7
  40420e:	f100 33ff 	add.w	r3, r0, #4294967295
  404212:	d202      	bcs.n	40421a <__udivmoddi4+0x15a>
  404214:	45a0      	cmp	r8, r4
  404216:	f200 80b9 	bhi.w	40438c <__udivmoddi4+0x2cc>
  40421a:	4618      	mov	r0, r3
  40421c:	eba4 0408 	sub.w	r4, r4, r8
  404220:	ea40 4002 	orr.w	r0, r0, r2, lsl #16
  404224:	e79c      	b.n	404160 <__udivmoddi4+0xa0>
  404226:	4629      	mov	r1, r5
  404228:	4628      	mov	r0, r5
  40422a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  40422e:	fa07 f70e 	lsl.w	r7, r7, lr
  404232:	f1ce 0320 	rsb	r3, lr, #32
  404236:	fa26 f203 	lsr.w	r2, r6, r3
  40423a:	ea4f 4c17 	mov.w	ip, r7, lsr #16
  40423e:	fbb2 f1fc 	udiv	r1, r2, ip
  404242:	fa1f f887 	uxth.w	r8, r7
  404246:	fb0c 2211 	mls	r2, ip, r1, r2
  40424a:	fa06 f60e 	lsl.w	r6, r6, lr
  40424e:	fa20 f303 	lsr.w	r3, r0, r3
  404252:	fb01 f908 	mul.w	r9, r1, r8
  404256:	4333      	orrs	r3, r6
  404258:	0c1e      	lsrs	r6, r3, #16
  40425a:	ea46 4602 	orr.w	r6, r6, r2, lsl #16
  40425e:	45b1      	cmp	r9, r6
  404260:	fa00 f40e 	lsl.w	r4, r0, lr
  404264:	d909      	bls.n	40427a <__udivmoddi4+0x1ba>
  404266:	19f6      	adds	r6, r6, r7
  404268:	f101 32ff 	add.w	r2, r1, #4294967295
  40426c:	f080 808c 	bcs.w	404388 <__udivmoddi4+0x2c8>
  404270:	45b1      	cmp	r9, r6
  404272:	f240 8089 	bls.w	404388 <__udivmoddi4+0x2c8>
  404276:	3902      	subs	r1, #2
  404278:	443e      	add	r6, r7
  40427a:	eba6 0609 	sub.w	r6, r6, r9
  40427e:	fbb6 f0fc 	udiv	r0, r6, ip
  404282:	fb0c 6210 	mls	r2, ip, r0, r6
  404286:	fb00 f908 	mul.w	r9, r0, r8
  40428a:	b29e      	uxth	r6, r3
  40428c:	ea46 4602 	orr.w	r6, r6, r2, lsl #16
  404290:	45b1      	cmp	r9, r6
  404292:	d907      	bls.n	4042a4 <__udivmoddi4+0x1e4>
  404294:	19f6      	adds	r6, r6, r7
  404296:	f100 33ff 	add.w	r3, r0, #4294967295
  40429a:	d271      	bcs.n	404380 <__udivmoddi4+0x2c0>
  40429c:	45b1      	cmp	r9, r6
  40429e:	d96f      	bls.n	404380 <__udivmoddi4+0x2c0>
  4042a0:	3802      	subs	r0, #2
  4042a2:	443e      	add	r6, r7
  4042a4:	eba6 0609 	sub.w	r6, r6, r9
  4042a8:	ea40 4101 	orr.w	r1, r0, r1, lsl #16
  4042ac:	e78f      	b.n	4041ce <__udivmoddi4+0x10e>
  4042ae:	f1c1 0720 	rsb	r7, r1, #32
  4042b2:	fa22 f807 	lsr.w	r8, r2, r7
  4042b6:	408b      	lsls	r3, r1
  4042b8:	ea48 0303 	orr.w	r3, r8, r3
  4042bc:	fa26 f407 	lsr.w	r4, r6, r7
  4042c0:	ea4f 4e13 	mov.w	lr, r3, lsr #16
  4042c4:	fbb4 f9fe 	udiv	r9, r4, lr
  4042c8:	fa1f fc83 	uxth.w	ip, r3
  4042cc:	fb0e 4419 	mls	r4, lr, r9, r4
  4042d0:	408e      	lsls	r6, r1
  4042d2:	fa20 f807 	lsr.w	r8, r0, r7
  4042d6:	fb09 fa0c 	mul.w	sl, r9, ip
  4042da:	ea48 0806 	orr.w	r8, r8, r6
  4042de:	ea4f 4618 	mov.w	r6, r8, lsr #16
  4042e2:	ea46 4404 	orr.w	r4, r6, r4, lsl #16
  4042e6:	45a2      	cmp	sl, r4
  4042e8:	fa02 f201 	lsl.w	r2, r2, r1
  4042ec:	fa00 f601 	lsl.w	r6, r0, r1
  4042f0:	d908      	bls.n	404304 <__udivmoddi4+0x244>
  4042f2:	18e4      	adds	r4, r4, r3
  4042f4:	f109 30ff 	add.w	r0, r9, #4294967295
  4042f8:	d244      	bcs.n	404384 <__udivmoddi4+0x2c4>
  4042fa:	45a2      	cmp	sl, r4
  4042fc:	d942      	bls.n	404384 <__udivmoddi4+0x2c4>
  4042fe:	f1a9 0902 	sub.w	r9, r9, #2
  404302:	441c      	add	r4, r3
  404304:	eba4 040a 	sub.w	r4, r4, sl
  404308:	fbb4 f0fe 	udiv	r0, r4, lr
  40430c:	fb0e 4410 	mls	r4, lr, r0, r4
  404310:	fb00 fc0c 	mul.w	ip, r0, ip
  404314:	fa1f f888 	uxth.w	r8, r8
  404318:	ea48 4404 	orr.w	r4, r8, r4, lsl #16
  40431c:	45a4      	cmp	ip, r4
  40431e:	d907      	bls.n	404330 <__udivmoddi4+0x270>
  404320:	18e4      	adds	r4, r4, r3
  404322:	f100 3eff 	add.w	lr, r0, #4294967295
  404326:	d229      	bcs.n	40437c <__udivmoddi4+0x2bc>
  404328:	45a4      	cmp	ip, r4
  40432a:	d927      	bls.n	40437c <__udivmoddi4+0x2bc>
  40432c:	3802      	subs	r0, #2
  40432e:	441c      	add	r4, r3
  404330:	ea40 4009 	orr.w	r0, r0, r9, lsl #16
  404334:	fba0 8902 	umull	r8, r9, r0, r2
  404338:	eba4 0c0c 	sub.w	ip, r4, ip
  40433c:	45cc      	cmp	ip, r9
  40433e:	46c2      	mov	sl, r8
  404340:	46ce      	mov	lr, r9
  404342:	d315      	bcc.n	404370 <__udivmoddi4+0x2b0>
  404344:	d012      	beq.n	40436c <__udivmoddi4+0x2ac>
  404346:	b155      	cbz	r5, 40435e <__udivmoddi4+0x29e>
  404348:	ebb6 030a 	subs.w	r3, r6, sl
  40434c:	eb6c 060e 	sbc.w	r6, ip, lr
  404350:	fa06 f707 	lsl.w	r7, r6, r7
  404354:	40cb      	lsrs	r3, r1
  404356:	431f      	orrs	r7, r3
  404358:	40ce      	lsrs	r6, r1
  40435a:	602f      	str	r7, [r5, #0]
  40435c:	606e      	str	r6, [r5, #4]
  40435e:	2100      	movs	r1, #0
  404360:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  404364:	4610      	mov	r0, r2
  404366:	e6f7      	b.n	404158 <__udivmoddi4+0x98>
  404368:	4689      	mov	r9, r1
  40436a:	e6de      	b.n	40412a <__udivmoddi4+0x6a>
  40436c:	4546      	cmp	r6, r8
  40436e:	d2ea      	bcs.n	404346 <__udivmoddi4+0x286>
  404370:	ebb8 0a02 	subs.w	sl, r8, r2
  404374:	eb69 0e03 	sbc.w	lr, r9, r3
  404378:	3801      	subs	r0, #1
  40437a:	e7e4      	b.n	404346 <__udivmoddi4+0x286>
  40437c:	4670      	mov	r0, lr
  40437e:	e7d7      	b.n	404330 <__udivmoddi4+0x270>
  404380:	4618      	mov	r0, r3
  404382:	e78f      	b.n	4042a4 <__udivmoddi4+0x1e4>
  404384:	4681      	mov	r9, r0
  404386:	e7bd      	b.n	404304 <__udivmoddi4+0x244>
  404388:	4611      	mov	r1, r2
  40438a:	e776      	b.n	40427a <__udivmoddi4+0x1ba>
  40438c:	3802      	subs	r0, #2
  40438e:	443c      	add	r4, r7
  404390:	e744      	b.n	40421c <__udivmoddi4+0x15c>
  404392:	4608      	mov	r0, r1
  404394:	e706      	b.n	4041a4 <__udivmoddi4+0xe4>
  404396:	3a02      	subs	r2, #2
  404398:	443e      	add	r6, r7
  40439a:	e72b      	b.n	4041f4 <__udivmoddi4+0x134>

0040439c <__aeabi_idiv0>:
  40439c:	4770      	bx	lr
  40439e:	bf00      	nop
  4043a0:	63657845 	.word	0x63657845
  4043a4:	6e617475 	.word	0x6e617475
  4043a8:	4d206f64 	.word	0x4d206f64
  4043ac:	61686c61 	.word	0x61686c61
  4043b0:	20656420 	.word	0x20656420
  4043b4:	746e6f43 	.word	0x746e6f43
  4043b8:	656c6f72 	.word	0x656c6f72
  4043bc:	00000a0d 	.word	0x00000a0d
  4043c0:	6f746f6d 	.word	0x6f746f6d
  4043c4:	736f5072 	.word	0x736f5072
  4043c8:	6425203a 	.word	0x6425203a
  4043cc:	00000a0d 	.word	0x00000a0d
  4043d0:	204d5750 	.word	0x204d5750
  4043d4:	646e6148 	.word	0x646e6148
  4043d8:	3a72656c 	.word	0x3a72656c
  4043dc:	0d752520 	.word	0x0d752520
  4043e0:	0000000a 	.word	0x0000000a
  4043e4:	746e6f43 	.word	0x746e6f43
  4043e8:	6f646e61 	.word	0x6f646e61
  4043ec:	00000a0d 	.word	0x00000a0d
  4043f0:	746e6f63 	.word	0x746e6f63
  4043f4:	726f6461 	.word	0x726f6461
  4043f8:	6e657320 	.word	0x6e657320
  4043fc:	3a726f73 	.word	0x3a726f73
  404400:	0d692520 	.word	0x0d692520
  404404:	0000000a 	.word	0x0000000a
  404408:	666e6f43 	.word	0x666e6f43
  40440c:	72756769 	.word	0x72756769
  404410:	6f616361 	.word	0x6f616361
  404414:	6e655320 	.word	0x6e655320
  404418:	20726f73 	.word	0x20726f73
  40441c:	20525349 	.word	0x20525349
  404420:	00000a0d 	.word	0x00000a0d
  404424:	656d6954 	.word	0x656d6954
  404428:	6f432072 	.word	0x6f432072
  40442c:	6769666e 	.word	0x6769666e
  404430:	64617275 	.word	0x64617275
  404434:	6170206f 	.word	0x6170206f
  404438:	31206172 	.word	0x31206172
  40443c:	736d3030 	.word	0x736d3030
  404440:	00000a0d 	.word	0x00000a0d
  404444:	656d6954 	.word	0x656d6954
  404448:	6f432072 	.word	0x6f432072
  40444c:	6769666e 	.word	0x6769666e
  404450:	64617275 	.word	0x64617275
  404454:	6170206f 	.word	0x6170206f
  404458:	31206172 	.word	0x31206172
  40445c:	0d737530 	.word	0x0d737530
  404460:	0000000a 	.word	0x0000000a
  404464:	69726550 	.word	0x69726550
  404468:	203a646f 	.word	0x203a646f
  40446c:	2f207525 	.word	0x2f207525
  404470:	7564202f 	.word	0x7564202f
  404474:	203a7974 	.word	0x203a7974
  404478:	2f207525 	.word	0x2f207525
  40447c:	6176202f 	.word	0x6176202f
  404480:	3a65756c 	.word	0x3a65756c
  404484:	0d752520 	.word	0x0d752520
  404488:	0000000a 	.word	0x0000000a
  40448c:	204d5750 	.word	0x204d5750
  404490:	61647055 	.word	0x61647055
  404494:	203a6574 	.word	0x203a6574
  404498:	2f207525 	.word	0x2f207525
  40449c:	6625202f 	.word	0x6625202f
  4044a0:	00000a0d 	.word	0x00000a0d
  4044a4:	72746e45 	.word	0x72746e45
  4044a8:	5320756f 	.word	0x5320756f
  4044ac:	6f736e65 	.word	0x6f736e65
  4044b0:	53492072 	.word	0x53492072
  4044b4:	0a0d2052 	.word	0x0a0d2052
  4044b8:	00000000 	.word	0x00000000
  4044bc:	74736944 	.word	0x74736944
  4044c0:	65636e61 	.word	0x65636e61
  4044c4:	6e655320 	.word	0x6e655320
  4044c8:	3a726f73 	.word	0x3a726f73
  4044cc:	0d642520 	.word	0x0d642520
  4044d0:	0000000a 	.word	0x0000000a
  4044d4:	63696e49 	.word	0x63696e49
  4044d8:	696c6169 	.word	0x696c6169
  4044dc:	676e697a 	.word	0x676e697a
  4044e0:	61654220 	.word	0x61654220
  4044e4:	6142206d 	.word	0x6142206d
  4044e8:	0a0d6c6c 	.word	0x0a0d6c6c
  4044ec:	00000000 	.word	0x00000000

004044f0 <_global_impure_ptr>:
  4044f0:	20000110 33323130 37363534 42413938     ... 0123456789AB
  404500:	46454443 00000000 33323130 37363534     CDEF....01234567
  404510:	62613938 66656463 00000000 6c756e28     89abcdef....(nul
  404520:	0000296c                                l)..

00404524 <blanks.7202>:
  404524:	20202020 20202020 20202020 20202020                     

00404534 <zeroes.7203>:
  404534:	30303030 30303030 30303030 30303030     0000000000000000
  404544:	00000043 49534f50 00000058 0000002e     C...POSIX.......

00404554 <_ctype_>:
  404554:	20202000 20202020 28282020 20282828     .         ((((( 
  404564:	20202020 20202020 20202020 20202020                     
  404574:	10108820 10101010 10101010 10101010      ...............
  404584:	04040410 04040404 10040404 10101010     ................
  404594:	41411010 41414141 01010101 01010101     ..AAAAAA........
  4045a4:	01010101 01010101 01010101 10101010     ................
  4045b4:	42421010 42424242 02020202 02020202     ..BBBBBB........
  4045c4:	02020202 02020202 02020202 10101010     ................
  4045d4:	00000020 00000000 00000000 00000000      ...............
	...

00404658 <_init>:
  404658:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  40465a:	bf00      	nop
  40465c:	bcf8      	pop	{r3, r4, r5, r6, r7}
  40465e:	bc08      	pop	{r3}
  404660:	469e      	mov	lr, r3
  404662:	4770      	bx	lr

00404664 <__init_array_start>:
  404664:	00402741 	.word	0x00402741

00404668 <__frame_dummy_init_array_entry>:
  404668:	004000e9                                ..@.

0040466c <_fini>:
  40466c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  40466e:	bf00      	nop
  404670:	bcf8      	pop	{r3, r4, r5, r6, r7}
  404672:	bc08      	pop	{r3}
  404674:	469e      	mov	lr, r3
  404676:	4770      	bx	lr

00404678 <__fini_array_start>:
  404678:	004000c5 	.word	0x004000c5

Disassembly of section .relocate:

20000000 <portable_delay_cycles>:
RAMFUNC
void portable_delay_cycles(unsigned long n)
{
	UNUSED(n);

	__asm (
20000000:	f3bf 8f5f 	dmb	sy
20000004:	3801      	subs	r0, #1
20000006:	d1fb      	bne.n	20000000 <portable_delay_cycles>
20000008:	4770      	bx	lr
	...

2000000c <SystemInit>:
	EFC->EEFC_FMR = EEFC_FMR_FWS(3);
2000000c:	f44f 7240 	mov.w	r2, #768	; 0x300
20000010:	4b1f      	ldr	r3, [pc, #124]	; (20000090 <SystemInit+0x84>)
20000012:	601a      	str	r2, [r3, #0]
	if (!(PMC->CKGR_MOR & CKGR_MOR_MOSCSEL)) {
20000014:	f5a3 63c0 	sub.w	r3, r3, #1536	; 0x600
20000018:	6a1b      	ldr	r3, [r3, #32]
2000001a:	f013 7f80 	tst.w	r3, #16777216	; 0x1000000
2000001e:	d107      	bne.n	20000030 <SystemInit+0x24>
		PMC->CKGR_MOR = SYS_CKGR_MOR_KEY_VALUE | SYS_BOARD_OSCOUNT | 
20000020:	4a1c      	ldr	r2, [pc, #112]	; (20000094 <SystemInit+0x88>)
20000022:	4b1d      	ldr	r3, [pc, #116]	; (20000098 <SystemInit+0x8c>)
20000024:	621a      	str	r2, [r3, #32]
		while (!(PMC->PMC_SR & PMC_SR_MOSCXTS)) {
20000026:	461a      	mov	r2, r3
20000028:	6e93      	ldr	r3, [r2, #104]	; 0x68
2000002a:	f013 0f01 	tst.w	r3, #1
2000002e:	d0fb      	beq.n	20000028 <SystemInit+0x1c>
	PMC->CKGR_MOR = SYS_CKGR_MOR_KEY_VALUE | SYS_BOARD_OSCOUNT | 
20000030:	4a1a      	ldr	r2, [pc, #104]	; (2000009c <SystemInit+0x90>)
20000032:	4b19      	ldr	r3, [pc, #100]	; (20000098 <SystemInit+0x8c>)
20000034:	621a      	str	r2, [r3, #32]
	while (!(PMC->PMC_SR & PMC_SR_MOSCSELS)) {
20000036:	461a      	mov	r2, r3
20000038:	6e93      	ldr	r3, [r2, #104]	; 0x68
2000003a:	f413 3f80 	tst.w	r3, #65536	; 0x10000
2000003e:	d0fb      	beq.n	20000038 <SystemInit+0x2c>
	PMC->PMC_MCKR = (PMC->PMC_MCKR & ~(uint32_t)PMC_MCKR_CSS_Msk) | 
20000040:	4a15      	ldr	r2, [pc, #84]	; (20000098 <SystemInit+0x8c>)
20000042:	6b13      	ldr	r3, [r2, #48]	; 0x30
20000044:	f023 0303 	bic.w	r3, r3, #3
20000048:	f043 0301 	orr.w	r3, r3, #1
2000004c:	6313      	str	r3, [r2, #48]	; 0x30
	while (!(PMC->PMC_SR & PMC_SR_MCKRDY)) {
2000004e:	6e93      	ldr	r3, [r2, #104]	; 0x68
20000050:	f013 0f08 	tst.w	r3, #8
20000054:	d0fb      	beq.n	2000004e <SystemInit+0x42>
	PMC->CKGR_PLLAR = SYS_BOARD_PLLAR;
20000056:	4a12      	ldr	r2, [pc, #72]	; (200000a0 <SystemInit+0x94>)
20000058:	4b0f      	ldr	r3, [pc, #60]	; (20000098 <SystemInit+0x8c>)
2000005a:	629a      	str	r2, [r3, #40]	; 0x28
	while (!(PMC->PMC_SR & PMC_SR_LOCKA)) {
2000005c:	461a      	mov	r2, r3
2000005e:	6e93      	ldr	r3, [r2, #104]	; 0x68
20000060:	f013 0f02 	tst.w	r3, #2
20000064:	d0fb      	beq.n	2000005e <SystemInit+0x52>
	PMC->PMC_MCKR = (SYS_BOARD_MCKR & ~PMC_MCKR_CSS_Msk) | 
20000066:	2211      	movs	r2, #17
20000068:	4b0b      	ldr	r3, [pc, #44]	; (20000098 <SystemInit+0x8c>)
2000006a:	631a      	str	r2, [r3, #48]	; 0x30
	while (!(PMC->PMC_SR & PMC_SR_MCKRDY)) {
2000006c:	461a      	mov	r2, r3
2000006e:	6e93      	ldr	r3, [r2, #104]	; 0x68
20000070:	f013 0f08 	tst.w	r3, #8
20000074:	d0fb      	beq.n	2000006e <SystemInit+0x62>
	PMC->PMC_MCKR = SYS_BOARD_MCKR;
20000076:	2212      	movs	r2, #18
20000078:	4b07      	ldr	r3, [pc, #28]	; (20000098 <SystemInit+0x8c>)
2000007a:	631a      	str	r2, [r3, #48]	; 0x30
	while (!(PMC->PMC_SR & PMC_SR_MCKRDY)) {
2000007c:	461a      	mov	r2, r3
2000007e:	6e93      	ldr	r3, [r2, #104]	; 0x68
20000080:	f013 0f08 	tst.w	r3, #8
20000084:	d0fb      	beq.n	2000007e <SystemInit+0x72>
	SystemCoreClock = CHIP_FREQ_CPU_MAX;
20000086:	4a07      	ldr	r2, [pc, #28]	; (200000a4 <SystemInit+0x98>)
20000088:	4b07      	ldr	r3, [pc, #28]	; (200000a8 <SystemInit+0x9c>)
2000008a:	601a      	str	r2, [r3, #0]
2000008c:	4770      	bx	lr
2000008e:	bf00      	nop
20000090:	400e0a00 	.word	0x400e0a00
20000094:	00370809 	.word	0x00370809
20000098:	400e0400 	.word	0x400e0400
2000009c:	01370809 	.word	0x01370809
200000a0:	20073f01 	.word	0x20073f01
200000a4:	02dc6c00 	.word	0x02dc6c00
200000a8:	20000104 	.word	0x20000104

200000ac <system_init_flash>:
__no_inline
RAMFUNC
void system_init_flash(uint32_t ul_clk)
{
	/* Set FWS for embedded Flash access according to operating frequency */
	if (ul_clk < CHIP_FREQ_FWS_0) {
200000ac:	4b0c      	ldr	r3, [pc, #48]	; (200000e0 <system_init_flash+0x34>)
200000ae:	4298      	cmp	r0, r3
200000b0:	d90c      	bls.n	200000cc <system_init_flash+0x20>
		EFC->EEFC_FMR = EEFC_FMR_FWS(0);
	} else if (ul_clk < CHIP_FREQ_FWS_1) {
200000b2:	4b0c      	ldr	r3, [pc, #48]	; (200000e4 <system_init_flash+0x38>)
200000b4:	4298      	cmp	r0, r3
200000b6:	d90d      	bls.n	200000d4 <system_init_flash+0x28>
		EFC->EEFC_FMR = EEFC_FMR_FWS(1);
	} else if (ul_clk < CHIP_FREQ_FWS_2) {
200000b8:	4b0b      	ldr	r3, [pc, #44]	; (200000e8 <system_init_flash+0x3c>)
200000ba:	4298      	cmp	r0, r3
		EFC->EEFC_FMR = EEFC_FMR_FWS(2);
200000bc:	bf94      	ite	ls
200000be:	f44f 7200 	movls.w	r2, #512	; 0x200
	} else {
		EFC->EEFC_FMR = EEFC_FMR_FWS(3);
200000c2:	f44f 7240 	movhi.w	r2, #768	; 0x300
200000c6:	4b09      	ldr	r3, [pc, #36]	; (200000ec <system_init_flash+0x40>)
200000c8:	601a      	str	r2, [r3, #0]
200000ca:	4770      	bx	lr
		EFC->EEFC_FMR = EEFC_FMR_FWS(0);
200000cc:	2200      	movs	r2, #0
200000ce:	4b07      	ldr	r3, [pc, #28]	; (200000ec <system_init_flash+0x40>)
200000d0:	601a      	str	r2, [r3, #0]
200000d2:	4770      	bx	lr
		EFC->EEFC_FMR = EEFC_FMR_FWS(1);
200000d4:	f44f 7280 	mov.w	r2, #256	; 0x100
200000d8:	4b04      	ldr	r3, [pc, #16]	; (200000ec <system_init_flash+0x40>)
200000da:	601a      	str	r2, [r3, #0]
200000dc:	4770      	bx	lr
200000de:	bf00      	nop
200000e0:	01406f3f 	.word	0x01406f3f
200000e4:	01e847ff 	.word	0x01e847ff
200000e8:	02dc6bff 	.word	0x02dc6bff
200000ec:	400e0a00 	.word	0x400e0a00

200000f0 <btn_duty>:
200000f0:	00000001                                ....

200000f4 <usart_options.8098>:
200000f4:	0001c200 000000c0 00000800 00000000     ................

20000104 <SystemCoreClock>:
20000104:	003d0900                                ..=.

20000108 <_impure_ptr>:
20000108:	20000110 00000000                       ... ....

20000110 <impure_data>:
20000110:	00000000 200003fc 20000464 200004cc     ....... d.. ... 
	...
200001b8:	00000001 00000000 abcd330e e66d1234     .........3..4.m.
200001c8:	0005deec 0000000b 00000000 00000000     ................
	...

20000538 <__global_locale>:
20000538:	00000043 00000000 00000000 00000000     C...............
	...
20000558:	00000043 00000000 00000000 00000000     C...............
	...
20000578:	00000043 00000000 00000000 00000000     C...............
	...
20000598:	00000043 00000000 00000000 00000000     C...............
	...
200005b8:	00000043 00000000 00000000 00000000     C...............
	...
200005d8:	00000043 00000000 00000000 00000000     C...............
	...
200005f8:	00000043 00000000 00000000 00000000     C...............
	...
20000618:	00403e59 004036c9 00000000 00404554     Y>@..6@.....TE@.
20000628:	00404550 004044b8 004044b8 004044b8     PE@..D@..D@..D@.
20000638:	004044b8 004044b8 004044b8 004044b8     .D@..D@..D@..D@.
20000648:	004044b8 004044b8 ffffffff ffffffff     .D@..D@.........
20000658:	ffffffff 0000ffff 53410001 00494943     ..........ASCII.
	...
20000680:	53410000 00494943 00000000 00000000     ..ASCII.........
	...

200006a4 <__malloc_av_>:
	...
200006ac:	200006a4 200006a4 200006ac 200006ac     ... ... ... ... 
200006bc:	200006b4 200006b4 200006bc 200006bc     ... ... ... ... 
200006cc:	200006c4 200006c4 200006cc 200006cc     ... ... ... ... 
200006dc:	200006d4 200006d4 200006dc 200006dc     ... ... ... ... 
200006ec:	200006e4 200006e4 200006ec 200006ec     ... ... ... ... 
200006fc:	200006f4 200006f4 200006fc 200006fc     ... ... ... ... 
2000070c:	20000704 20000704 2000070c 2000070c     ... ... ... ... 
2000071c:	20000714 20000714 2000071c 2000071c     ... ... ... ... 
2000072c:	20000724 20000724 2000072c 2000072c     $.. $.. ,.. ,.. 
2000073c:	20000734 20000734 2000073c 2000073c     4.. 4.. <.. <.. 
2000074c:	20000744 20000744 2000074c 2000074c     D.. D.. L.. L.. 
2000075c:	20000754 20000754 2000075c 2000075c     T.. T.. \.. \.. 
2000076c:	20000764 20000764 2000076c 2000076c     d.. d.. l.. l.. 
2000077c:	20000774 20000774 2000077c 2000077c     t.. t.. |.. |.. 
2000078c:	20000784 20000784 2000078c 2000078c     ... ... ... ... 
2000079c:	20000794 20000794 2000079c 2000079c     ... ... ... ... 
200007ac:	200007a4 200007a4 200007ac 200007ac     ... ... ... ... 
200007bc:	200007b4 200007b4 200007bc 200007bc     ... ... ... ... 
200007cc:	200007c4 200007c4 200007cc 200007cc     ... ... ... ... 
200007dc:	200007d4 200007d4 200007dc 200007dc     ... ... ... ... 
200007ec:	200007e4 200007e4 200007ec 200007ec     ... ... ... ... 
200007fc:	200007f4 200007f4 200007fc 200007fc     ... ... ... ... 
2000080c:	20000804 20000804 2000080c 2000080c     ... ... ... ... 
2000081c:	20000814 20000814 2000081c 2000081c     ... ... ... ... 
2000082c:	20000824 20000824 2000082c 2000082c     $.. $.. ,.. ,.. 
2000083c:	20000834 20000834 2000083c 2000083c     4.. 4.. <.. <.. 
2000084c:	20000844 20000844 2000084c 2000084c     D.. D.. L.. L.. 
2000085c:	20000854 20000854 2000085c 2000085c     T.. T.. \.. \.. 
2000086c:	20000864 20000864 2000086c 2000086c     d.. d.. l.. l.. 
2000087c:	20000874 20000874 2000087c 2000087c     t.. t.. |.. |.. 
2000088c:	20000884 20000884 2000088c 2000088c     ... ... ... ... 
2000089c:	20000894 20000894 2000089c 2000089c     ... ... ... ... 
200008ac:	200008a4 200008a4 200008ac 200008ac     ... ... ... ... 
200008bc:	200008b4 200008b4 200008bc 200008bc     ... ... ... ... 
200008cc:	200008c4 200008c4 200008cc 200008cc     ... ... ... ... 
200008dc:	200008d4 200008d4 200008dc 200008dc     ... ... ... ... 
200008ec:	200008e4 200008e4 200008ec 200008ec     ... ... ... ... 
200008fc:	200008f4 200008f4 200008fc 200008fc     ... ... ... ... 
2000090c:	20000904 20000904 2000090c 2000090c     ... ... ... ... 
2000091c:	20000914 20000914 2000091c 2000091c     ... ... ... ... 
2000092c:	20000924 20000924 2000092c 2000092c     $.. $.. ,.. ,.. 
2000093c:	20000934 20000934 2000093c 2000093c     4.. 4.. <.. <.. 
2000094c:	20000944 20000944 2000094c 2000094c     D.. D.. L.. L.. 
2000095c:	20000954 20000954 2000095c 2000095c     T.. T.. \.. \.. 
2000096c:	20000964 20000964 2000096c 2000096c     d.. d.. l.. l.. 
2000097c:	20000974 20000974 2000097c 2000097c     t.. t.. |.. |.. 
2000098c:	20000984 20000984 2000098c 2000098c     ... ... ... ... 
2000099c:	20000994 20000994 2000099c 2000099c     ... ... ... ... 
200009ac:	200009a4 200009a4 200009ac 200009ac     ... ... ... ... 
200009bc:	200009b4 200009b4 200009bc 200009bc     ... ... ... ... 
200009cc:	200009c4 200009c4 200009cc 200009cc     ... ... ... ... 
200009dc:	200009d4 200009d4 200009dc 200009dc     ... ... ... ... 
200009ec:	200009e4 200009e4 200009ec 200009ec     ... ... ... ... 
200009fc:	200009f4 200009f4 200009fc 200009fc     ... ... ... ... 
20000a0c:	20000a04 20000a04 20000a0c 20000a0c     ... ... ... ... 
20000a1c:	20000a14 20000a14 20000a1c 20000a1c     ... ... ... ... 
20000a2c:	20000a24 20000a24 20000a2c 20000a2c     $.. $.. ,.. ,.. 
20000a3c:	20000a34 20000a34 20000a3c 20000a3c     4.. 4.. <.. <.. 
20000a4c:	20000a44 20000a44 20000a4c 20000a4c     D.. D.. L.. L.. 
20000a5c:	20000a54 20000a54 20000a5c 20000a5c     T.. T.. \.. \.. 
20000a6c:	20000a64 20000a64 20000a6c 20000a6c     d.. d.. l.. l.. 
20000a7c:	20000a74 20000a74 20000a7c 20000a7c     t.. t.. |.. |.. 
20000a8c:	20000a84 20000a84 20000a8c 20000a8c     ... ... ... ... 
20000a9c:	20000a94 20000a94 20000a9c 20000a9c     ... ... ... ... 

20000aac <__malloc_sbrk_base>:
20000aac:	ffffffff                                ....

20000ab0 <__malloc_trim_threshold>:
20000ab0:	00020000                                ....
