
BeamBall.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000044a0  00400000  00400000  00010000  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .ARM.exidx    00000008  004044a0  004044a0  000144a0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  2 .relocate     00000ab4  20000000  004044a8  00020000  2**3
                  CONTENTS, ALLOC, LOAD, CODE
  3 .bss          000000dc  20000ab4  00404f5c  00020ab4  2**2
                  ALLOC
  4 .stack        00000800  20000b90  00405038  00020ab4  2**0
                  ALLOC
  5 .ARM.attributes 00000029  00000000  00000000  00020ab4  2**0
                  CONTENTS, READONLY
  6 .comment      00000059  00000000  00000000  00020add  2**0
                  CONTENTS, READONLY
  7 .debug_info   00015fba  00000000  00000000  00020b36  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 000032f4  00000000  00000000  00036af0  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_loc    000042a7  00000000  00000000  00039de4  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_aranges 000009e0  00000000  00000000  0003e08b  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 000008e0  00000000  00000000  0003ea6b  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_macro  00006216  00000000  00000000  0003f34b  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_line   0000d964  00000000  00000000  00045561  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_str    00042dd8  00000000  00000000  00052ec5  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_frame  0000227c  00000000  00000000  00095ca0  2**2
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00400000 <exception_table>:
  400000:	90 13 00 20 29 0d 40 00 25 0d 40 00 25 0d 40 00     ... ).@.%.@.%.@.
  400010:	25 0d 40 00 25 0d 40 00 25 0d 40 00 00 00 00 00     %.@.%.@.%.@.....
	...
  40002c:	25 0d 40 00 25 0d 40 00 00 00 00 00 25 0d 40 00     %.@.%.@.....%.@.
  40003c:	25 0d 40 00 25 0d 40 00 25 0d 40 00 25 0d 40 00     %.@.%.@.%.@.%.@.
  40004c:	25 0d 40 00 25 0d 40 00 25 0d 40 00 25 0d 40 00     %.@.%.@.%.@.%.@.
  40005c:	25 0d 40 00 25 0d 40 00 25 0d 40 00 25 0d 40 00     %.@.%.@.%.@.%.@.
  40006c:	d5 0b 40 00 e9 0b 40 00 fd 0b 40 00 25 0d 40 00     ..@...@...@.%.@.
  40007c:	25 0d 40 00 25 0d 40 00 25 0d 40 00 25 0d 40 00     %.@.%.@.%.@.%.@.
  40008c:	25 0d 40 00 25 0d 40 00 25 0d 40 00 25 0d 40 00     %.@.%.@.%.@.%.@.
  40009c:	4d 04 40 00 79 04 40 00 25 0d 40 00 25 0d 40 00     M.@.y.@.%.@.%.@.
  4000ac:	25 0d 40 00 25 0d 40 00 25 0d 40 00 25 0d 40 00     %.@.%.@.%.@.%.@.
  4000bc:	b1 05 40 00 25 0d 40 00                             ..@.%.@.

004000c4 <__do_global_dtors_aux>:
  4000c4:	b510      	push	{r4, lr}
  4000c6:	4c05      	ldr	r4, [pc, #20]	; (4000dc <__do_global_dtors_aux+0x18>)
  4000c8:	7823      	ldrb	r3, [r4, #0]
  4000ca:	b933      	cbnz	r3, 4000da <__do_global_dtors_aux+0x16>
  4000cc:	4b04      	ldr	r3, [pc, #16]	; (4000e0 <__do_global_dtors_aux+0x1c>)
  4000ce:	b113      	cbz	r3, 4000d6 <__do_global_dtors_aux+0x12>
  4000d0:	4804      	ldr	r0, [pc, #16]	; (4000e4 <__do_global_dtors_aux+0x20>)
  4000d2:	f3af 8000 	nop.w
  4000d6:	2301      	movs	r3, #1
  4000d8:	7023      	strb	r3, [r4, #0]
  4000da:	bd10      	pop	{r4, pc}
  4000dc:	20000ab4 	.word	0x20000ab4
  4000e0:	00000000 	.word	0x00000000
  4000e4:	004044a8 	.word	0x004044a8

004000e8 <frame_dummy>:
  4000e8:	4b0c      	ldr	r3, [pc, #48]	; (40011c <frame_dummy+0x34>)
  4000ea:	b143      	cbz	r3, 4000fe <frame_dummy+0x16>
  4000ec:	480c      	ldr	r0, [pc, #48]	; (400120 <frame_dummy+0x38>)
  4000ee:	b510      	push	{r4, lr}
  4000f0:	490c      	ldr	r1, [pc, #48]	; (400124 <frame_dummy+0x3c>)
  4000f2:	f3af 8000 	nop.w
  4000f6:	480c      	ldr	r0, [pc, #48]	; (400128 <frame_dummy+0x40>)
  4000f8:	6803      	ldr	r3, [r0, #0]
  4000fa:	b923      	cbnz	r3, 400106 <frame_dummy+0x1e>
  4000fc:	bd10      	pop	{r4, pc}
  4000fe:	480a      	ldr	r0, [pc, #40]	; (400128 <frame_dummy+0x40>)
  400100:	6803      	ldr	r3, [r0, #0]
  400102:	b933      	cbnz	r3, 400112 <frame_dummy+0x2a>
  400104:	4770      	bx	lr
  400106:	4b09      	ldr	r3, [pc, #36]	; (40012c <frame_dummy+0x44>)
  400108:	2b00      	cmp	r3, #0
  40010a:	d0f7      	beq.n	4000fc <frame_dummy+0x14>
  40010c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  400110:	4718      	bx	r3
  400112:	4b06      	ldr	r3, [pc, #24]	; (40012c <frame_dummy+0x44>)
  400114:	2b00      	cmp	r3, #0
  400116:	d0f5      	beq.n	400104 <frame_dummy+0x1c>
  400118:	4718      	bx	r3
  40011a:	bf00      	nop
  40011c:	00000000 	.word	0x00000000
  400120:	004044a8 	.word	0x004044a8
  400124:	20000ab8 	.word	0x20000ab8
  400128:	004044a8 	.word	0x004044a8
  40012c:	00000000 	.word	0x00000000

00400130 <_read>:
int __attribute__((weak))
_read (int file, char * ptr, int len); // Remove GCC compiler warning

int __attribute__((weak))
_read (int file, char * ptr, int len)
{
  400130:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
	int nChars = 0;

	if (file != 0) {
  400134:	b980      	cbnz	r0, 400158 <_read+0x28>
  400136:	460c      	mov	r4, r1
  400138:	4690      	mov	r8, r2
		return -1;
	}

	for (; len > 0; --len) {
  40013a:	2a00      	cmp	r2, #0
  40013c:	dd0f      	ble.n	40015e <_read+0x2e>
  40013e:	188f      	adds	r7, r1, r2
		ptr_get(stdio_base, ptr);
  400140:	4e08      	ldr	r6, [pc, #32]	; (400164 <_read+0x34>)
  400142:	4d09      	ldr	r5, [pc, #36]	; (400168 <_read+0x38>)
  400144:	6830      	ldr	r0, [r6, #0]
  400146:	4621      	mov	r1, r4
  400148:	682b      	ldr	r3, [r5, #0]
  40014a:	4798      	blx	r3
		ptr++;
  40014c:	3401      	adds	r4, #1
	for (; len > 0; --len) {
  40014e:	42bc      	cmp	r4, r7
  400150:	d1f8      	bne.n	400144 <_read+0x14>
		nChars++;
	}
	return nChars;
}
  400152:	4640      	mov	r0, r8
  400154:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
		return -1;
  400158:	f04f 38ff 	mov.w	r8, #4294967295
  40015c:	e7f9      	b.n	400152 <_read+0x22>
	for (; len > 0; --len) {
  40015e:	4680      	mov	r8, r0
  400160:	e7f7      	b.n	400152 <_read+0x22>
  400162:	bf00      	nop
  400164:	20000b88 	.word	0x20000b88
  400168:	20000b80 	.word	0x20000b80

0040016c <usart_write>:
 * \retval 0 on success.
 * \retval 1 on failure.
 */
uint32_t usart_write(Usart *p_usart, uint32_t c)
{
	if (!(p_usart->US_CSR & US_CSR_TXRDY)) {
  40016c:	6943      	ldr	r3, [r0, #20]
  40016e:	f013 0f02 	tst.w	r3, #2
		return 1;
	}

	p_usart->US_THR = US_THR_TXCHR(c);
  400172:	bf1d      	ittte	ne
  400174:	f3c1 0108 	ubfxne	r1, r1, #0, #9
  400178:	61c1      	strne	r1, [r0, #28]
	return 0;
  40017a:	2000      	movne	r0, #0
		return 1;
  40017c:	2001      	moveq	r0, #1
}
  40017e:	4770      	bx	lr

00400180 <usart_read>:
 * \retval 0 on success.
 * \retval 1 if no data is available or errors.
 */
uint32_t usart_read(Usart *p_usart, uint32_t *c)
{
	if (!(p_usart->US_CSR & US_CSR_RXRDY)) {
  400180:	6943      	ldr	r3, [r0, #20]
  400182:	f013 0f01 	tst.w	r3, #1
  400186:	d005      	beq.n	400194 <usart_read+0x14>
		return 1;
	}

	/* Read character */
	*c = p_usart->US_RHR & US_RHR_RXCHR_Msk;
  400188:	6983      	ldr	r3, [r0, #24]
  40018a:	f3c3 0308 	ubfx	r3, r3, #0, #9
  40018e:	600b      	str	r3, [r1, #0]

	return 0;
  400190:	2000      	movs	r0, #0
  400192:	4770      	bx	lr
		return 1;
  400194:	2001      	movs	r0, #1
}
  400196:	4770      	bx	lr

00400198 <_write>:
int __attribute__((weak))
_write (int file, const char *ptr, int len)
{
	int nChars = 0;

	if ((file != 1) && (file != 2) && (file!=3)) {
  400198:	3801      	subs	r0, #1
  40019a:	2802      	cmp	r0, #2
  40019c:	d815      	bhi.n	4001ca <_write+0x32>
{
  40019e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  4001a2:	460e      	mov	r6, r1
  4001a4:	4614      	mov	r4, r2
		return -1;
	}

	for (; len != 0; --len) {
  4001a6:	b19a      	cbz	r2, 4001d0 <_write+0x38>
  4001a8:	460d      	mov	r5, r1
		if (ptr_put(stdio_base, *ptr++) < 0) {
  4001aa:	f8df 8038 	ldr.w	r8, [pc, #56]	; 4001e4 <_write+0x4c>
  4001ae:	4f0c      	ldr	r7, [pc, #48]	; (4001e0 <_write+0x48>)
  4001b0:	f8d8 0000 	ldr.w	r0, [r8]
  4001b4:	f815 1b01 	ldrb.w	r1, [r5], #1
  4001b8:	683b      	ldr	r3, [r7, #0]
  4001ba:	4798      	blx	r3
  4001bc:	2800      	cmp	r0, #0
  4001be:	db0a      	blt.n	4001d6 <_write+0x3e>
  4001c0:	1ba8      	subs	r0, r5, r6
	for (; len != 0; --len) {
  4001c2:	3c01      	subs	r4, #1
  4001c4:	d1f4      	bne.n	4001b0 <_write+0x18>
  4001c6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
		return -1;
  4001ca:	f04f 30ff 	mov.w	r0, #4294967295
  4001ce:	4770      	bx	lr
	for (; len != 0; --len) {
  4001d0:	4610      	mov	r0, r2
  4001d2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
			return -1;
  4001d6:	f04f 30ff 	mov.w	r0, #4294967295
		}
		++nChars;
	}
	return nChars;
}
  4001da:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  4001de:	bf00      	nop
  4001e0:	20000b84 	.word	0x20000b84
  4001e4:	20000b88 	.word	0x20000b88

004001e8 <pwm_channel_get_interrupt_status>:
 * \return Channel counter event and fault protection trigger interrupt status.
 */
uint32_t pwm_channel_get_interrupt_status(Pwm *p_pwm)
{
#if (SAM3N || SAM4N || SAM4C || SAM4CP || SAM4CM)
	return p_pwm->PWM_ISR;
  4001e8:	69c0      	ldr	r0, [r0, #28]
#else
	return p_pwm->PWM_ISR1;
#endif
}
  4001ea:	4770      	bx	lr

004001ec <tc_get_status>:
	/* Validate inputs. */
	Assert(p_tc);
	Assert(ul_channel <
			(sizeof(p_tc->TC_CHANNEL) / sizeof(p_tc->TC_CHANNEL[0])));
			
	tc_channel = p_tc->TC_CHANNEL + ul_channel;
  4001ec:	eb00 1181 	add.w	r1, r0, r1, lsl #6
	return tc_channel->TC_SR;
  4001f0:	6a08      	ldr	r0, [r1, #32]
}
  4001f2:	4770      	bx	lr

004001f4 <uart_init>:
 *
 * \retval 0 Success.
 * \retval 1 Bad baud rate generator value.
 */
uint32_t uart_init(Uart *p_uart, const sam_uart_opt_t *p_uart_opt)
{
  4001f4:	b410      	push	{r4}
	uint32_t cd = 0;

	/* Reset and disable receiver & transmitter */
	p_uart->UART_CR = UART_CR_RSTRX | UART_CR_RSTTX
  4001f6:	23ac      	movs	r3, #172	; 0xac
  4001f8:	6003      	str	r3, [r0, #0]
			| UART_CR_RXDIS | UART_CR_TXDIS;

	/* Check and configure baudrate */
	/* Asynchronous, no oversampling */
	cd = (p_uart_opt->ul_mck / p_uart_opt->ul_baudrate) / UART_MCK_DIV;
  4001fa:	680b      	ldr	r3, [r1, #0]
  4001fc:	684a      	ldr	r2, [r1, #4]
  4001fe:	fbb3 f3f2 	udiv	r3, r3, r2
  400202:	091b      	lsrs	r3, r3, #4
	if (cd < UART_MCK_DIV_MIN_FACTOR || cd > UART_MCK_DIV_MAX_FACTOR)
  400204:	1e5c      	subs	r4, r3, #1
  400206:	f64f 72fe 	movw	r2, #65534	; 0xfffe
  40020a:	4294      	cmp	r4, r2
  40020c:	d80b      	bhi.n	400226 <uart_init+0x32>
		return 1;

	p_uart->UART_BRGR = cd;
  40020e:	6203      	str	r3, [r0, #32]
	/* Configure mode */
	p_uart->UART_MR = p_uart_opt->ul_mode;
  400210:	688b      	ldr	r3, [r1, #8]
  400212:	6043      	str	r3, [r0, #4]

#if (!SAMV71 && !SAMV70 && !SAME70 && !SAMS70)
	/* Disable PDC channel */
	p_uart->UART_PTCR = UART_PTCR_RXTDIS | UART_PTCR_TXTDIS;
  400214:	f240 2302 	movw	r3, #514	; 0x202
  400218:	f8c0 3120 	str.w	r3, [r0, #288]	; 0x120
#endif

	/* Enable receiver and transmitter */
	p_uart->UART_CR = UART_CR_RXEN | UART_CR_TXEN;
  40021c:	2350      	movs	r3, #80	; 0x50
  40021e:	6003      	str	r3, [r0, #0]

	return 0;
  400220:	2000      	movs	r0, #0
}
  400222:	bc10      	pop	{r4}
  400224:	4770      	bx	lr
		return 1;
  400226:	2001      	movs	r0, #1
  400228:	e7fb      	b.n	400222 <uart_init+0x2e>

0040022a <uart_write>:
 * \retval 1 I/O Failure, UART is not ready.
 */
uint32_t uart_write(Uart *p_uart, const uint8_t uc_data)
{
	/* Check if the transmitter is ready */
	if (!(p_uart->UART_SR & UART_SR_TXRDY))
  40022a:	6943      	ldr	r3, [r0, #20]
  40022c:	f013 0f02 	tst.w	r3, #2
		return 1;

	/* Send character */
	p_uart->UART_THR = uc_data;
  400230:	bf1a      	itte	ne
  400232:	61c1      	strne	r1, [r0, #28]
	return 0;
  400234:	2000      	movne	r0, #0
		return 1;
  400236:	2001      	moveq	r0, #1
}
  400238:	4770      	bx	lr

0040023a <uart_read>:
 * \retval 1 I/O Failure, UART is not ready.
 */
uint32_t uart_read(Uart *p_uart, uint8_t *puc_data)
{
	/* Check if the receiver is ready */
	if ((p_uart->UART_SR & UART_SR_RXRDY) == 0)
  40023a:	6943      	ldr	r3, [r0, #20]
  40023c:	f013 0f01 	tst.w	r3, #1
		return 1;

	/* Read character */
	*puc_data = (uint8_t) p_uart->UART_RHR;
  400240:	bf1d      	ittte	ne
  400242:	6983      	ldrne	r3, [r0, #24]
  400244:	700b      	strbne	r3, [r1, #0]
	return 0;
  400246:	2000      	movne	r0, #0
		return 1;
  400248:	2001      	moveq	r0, #1
}
  40024a:	4770      	bx	lr

0040024c <vReadSensor>:

#include <asf.h>
#include "BeamBall.h"


void vReadSensor(void) {
  40024c:	b510      	push	{r4, lr}
	puts("Iniciando Leitura do Sensor\r\n");
  40024e:	4809      	ldr	r0, [pc, #36]	; (400274 <vReadSensor+0x28>)
  400250:	4b09      	ldr	r3, [pc, #36]	; (400278 <vReadSensor+0x2c>)
  400252:	4798      	blx	r3
	
	// clear timer
	tc_get_status(TC_SENSOR,CHANNEL_SENSOR);
  400254:	2101      	movs	r1, #1
  400256:	4809      	ldr	r0, [pc, #36]	; (40027c <vReadSensor+0x30>)
  400258:	4b09      	ldr	r3, [pc, #36]	; (400280 <vReadSensor+0x34>)
  40025a:	4798      	blx	r3
	vClearSensorCounter();
  40025c:	4b09      	ldr	r3, [pc, #36]	; (400284 <vReadSensor+0x38>)
  40025e:	4798      	blx	r3
	
	gpio_pin_is_high(PIO_TRIGGER);
  400260:	2017      	movs	r0, #23
  400262:	4c09      	ldr	r4, [pc, #36]	; (400288 <vReadSensor+0x3c>)
  400264:	47a0      	blx	r4
	delay_us(10);
  400266:	2023      	movs	r0, #35	; 0x23
  400268:	4b08      	ldr	r3, [pc, #32]	; (40028c <vReadSensor+0x40>)
  40026a:	4798      	blx	r3
	gpio_pin_is_low(PIO_TRIGGER);
  40026c:	2017      	movs	r0, #23
  40026e:	47a0      	blx	r4
  400270:	bd10      	pop	{r4, pc}
  400272:	bf00      	nop
  400274:	0040422c 	.word	0x0040422c
  400278:	0040165d 	.word	0x0040165d
  40027c:	40014000 	.word	0x40014000
  400280:	004001ed 	.word	0x004001ed
  400284:	00400399 	.word	0x00400399
  400288:	004008df 	.word	0x004008df
  40028c:	20000001 	.word	0x20000001

00400290 <usart_serial_getchar>:
 * \param p_usart   Base address of the USART instance.
 * \param data   Data to read
 *
 */
static inline void usart_serial_getchar(usart_if p_usart, uint8_t *data)
{
  400290:	b5f0      	push	{r4, r5, r6, r7, lr}
  400292:	b083      	sub	sp, #12
  400294:	4605      	mov	r5, r0
  400296:	460c      	mov	r4, r1
	uint32_t val = 0;
  400298:	2300      	movs	r3, #0
  40029a:	9301      	str	r3, [sp, #4]
	if (UART == (Uart*)p_usart) {
		while (uart_read((Uart*)p_usart, data));
	}
#else
# ifdef UART0
	if (UART0 == (Uart*)p_usart) {
  40029c:	4b18      	ldr	r3, [pc, #96]	; (400300 <usart_serial_getchar+0x70>)
  40029e:	4298      	cmp	r0, r3
  4002a0:	d00a      	beq.n	4002b8 <usart_serial_getchar+0x28>
		while (uart_read((Uart*)p_usart, data));
	}
# endif
# ifdef UART1
	if (UART1 == (Uart*)p_usart) {
  4002a2:	4b18      	ldr	r3, [pc, #96]	; (400304 <usart_serial_getchar+0x74>)
  4002a4:	4298      	cmp	r0, r3
  4002a6:	d00f      	beq.n	4002c8 <usart_serial_getchar+0x38>
		while (usart_read(p_usart, &val));
		*data = (uint8_t)(val & 0xFF);
	}
#else
# ifdef USART0
	if (USART0 == p_usart) {
  4002a8:	4b17      	ldr	r3, [pc, #92]	; (400308 <usart_serial_getchar+0x78>)
  4002aa:	4298      	cmp	r0, r3
  4002ac:	d014      	beq.n	4002d8 <usart_serial_getchar+0x48>
		while (usart_read(p_usart, &val));
		*data = (uint8_t)(val & 0xFF);
	}
# endif
# ifdef USART1
	if (USART1 == p_usart) {
  4002ae:	4b17      	ldr	r3, [pc, #92]	; (40030c <usart_serial_getchar+0x7c>)
  4002b0:	429d      	cmp	r5, r3
  4002b2:	d01b      	beq.n	4002ec <usart_serial_getchar+0x5c>
		*data = (uint8_t)(val & 0xFF);
	}
# endif
#endif /* ifdef USART */

}
  4002b4:	b003      	add	sp, #12
  4002b6:	bdf0      	pop	{r4, r5, r6, r7, pc}
		while (uart_read((Uart*)p_usart, data));
  4002b8:	461f      	mov	r7, r3
  4002ba:	4e15      	ldr	r6, [pc, #84]	; (400310 <usart_serial_getchar+0x80>)
  4002bc:	4621      	mov	r1, r4
  4002be:	4638      	mov	r0, r7
  4002c0:	47b0      	blx	r6
  4002c2:	2800      	cmp	r0, #0
  4002c4:	d1fa      	bne.n	4002bc <usart_serial_getchar+0x2c>
  4002c6:	e7f2      	b.n	4002ae <usart_serial_getchar+0x1e>
		while (uart_read((Uart*)p_usart, data));
  4002c8:	461e      	mov	r6, r3
  4002ca:	4d11      	ldr	r5, [pc, #68]	; (400310 <usart_serial_getchar+0x80>)
  4002cc:	4621      	mov	r1, r4
  4002ce:	4630      	mov	r0, r6
  4002d0:	47a8      	blx	r5
  4002d2:	2800      	cmp	r0, #0
  4002d4:	d1fa      	bne.n	4002cc <usart_serial_getchar+0x3c>
  4002d6:	e7ed      	b.n	4002b4 <usart_serial_getchar+0x24>
		while (usart_read(p_usart, &val));
  4002d8:	461e      	mov	r6, r3
  4002da:	4d0e      	ldr	r5, [pc, #56]	; (400314 <usart_serial_getchar+0x84>)
  4002dc:	a901      	add	r1, sp, #4
  4002de:	4630      	mov	r0, r6
  4002e0:	47a8      	blx	r5
  4002e2:	2800      	cmp	r0, #0
  4002e4:	d1fa      	bne.n	4002dc <usart_serial_getchar+0x4c>
		*data = (uint8_t)(val & 0xFF);
  4002e6:	9b01      	ldr	r3, [sp, #4]
  4002e8:	7023      	strb	r3, [r4, #0]
  4002ea:	e7e3      	b.n	4002b4 <usart_serial_getchar+0x24>
		while (usart_read(p_usart, &val));
  4002ec:	461e      	mov	r6, r3
  4002ee:	4d09      	ldr	r5, [pc, #36]	; (400314 <usart_serial_getchar+0x84>)
  4002f0:	a901      	add	r1, sp, #4
  4002f2:	4630      	mov	r0, r6
  4002f4:	47a8      	blx	r5
  4002f6:	2800      	cmp	r0, #0
  4002f8:	d1fa      	bne.n	4002f0 <usart_serial_getchar+0x60>
		*data = (uint8_t)(val & 0xFF);
  4002fa:	9b01      	ldr	r3, [sp, #4]
  4002fc:	7023      	strb	r3, [r4, #0]
}
  4002fe:	e7d9      	b.n	4002b4 <usart_serial_getchar+0x24>
  400300:	400e0600 	.word	0x400e0600
  400304:	400e0800 	.word	0x400e0800
  400308:	40024000 	.word	0x40024000
  40030c:	40028000 	.word	0x40028000
  400310:	0040023b 	.word	0x0040023b
  400314:	00400181 	.word	0x00400181

00400318 <usart_serial_putchar>:
{
  400318:	b570      	push	{r4, r5, r6, lr}
  40031a:	460c      	mov	r4, r1
	if (UART0 == (Uart*)p_usart) {
  40031c:	4b18      	ldr	r3, [pc, #96]	; (400380 <usart_serial_putchar+0x68>)
  40031e:	4298      	cmp	r0, r3
  400320:	d00a      	beq.n	400338 <usart_serial_putchar+0x20>
	if (UART1 == (Uart*)p_usart) {
  400322:	4b18      	ldr	r3, [pc, #96]	; (400384 <usart_serial_putchar+0x6c>)
  400324:	4298      	cmp	r0, r3
  400326:	d010      	beq.n	40034a <usart_serial_putchar+0x32>
	if (USART0 == p_usart) {
  400328:	4b17      	ldr	r3, [pc, #92]	; (400388 <usart_serial_putchar+0x70>)
  40032a:	4298      	cmp	r0, r3
  40032c:	d016      	beq.n	40035c <usart_serial_putchar+0x44>
	if (USART1 == p_usart) {
  40032e:	4b17      	ldr	r3, [pc, #92]	; (40038c <usart_serial_putchar+0x74>)
  400330:	4298      	cmp	r0, r3
  400332:	d01c      	beq.n	40036e <usart_serial_putchar+0x56>
	return 0;
  400334:	2000      	movs	r0, #0
}
  400336:	bd70      	pop	{r4, r5, r6, pc}
		while (uart_write((Uart*)p_usart, c)!=0);
  400338:	461e      	mov	r6, r3
  40033a:	4d15      	ldr	r5, [pc, #84]	; (400390 <usart_serial_putchar+0x78>)
  40033c:	4621      	mov	r1, r4
  40033e:	4630      	mov	r0, r6
  400340:	47a8      	blx	r5
  400342:	2800      	cmp	r0, #0
  400344:	d1fa      	bne.n	40033c <usart_serial_putchar+0x24>
		return 1;
  400346:	2001      	movs	r0, #1
  400348:	bd70      	pop	{r4, r5, r6, pc}
		while (uart_write((Uart*)p_usart, c)!=0);
  40034a:	461e      	mov	r6, r3
  40034c:	4d10      	ldr	r5, [pc, #64]	; (400390 <usart_serial_putchar+0x78>)
  40034e:	4621      	mov	r1, r4
  400350:	4630      	mov	r0, r6
  400352:	47a8      	blx	r5
  400354:	2800      	cmp	r0, #0
  400356:	d1fa      	bne.n	40034e <usart_serial_putchar+0x36>
		return 1;
  400358:	2001      	movs	r0, #1
  40035a:	bd70      	pop	{r4, r5, r6, pc}
		while (usart_write(p_usart, c)!=0);
  40035c:	461e      	mov	r6, r3
  40035e:	4d0d      	ldr	r5, [pc, #52]	; (400394 <usart_serial_putchar+0x7c>)
  400360:	4621      	mov	r1, r4
  400362:	4630      	mov	r0, r6
  400364:	47a8      	blx	r5
  400366:	2800      	cmp	r0, #0
  400368:	d1fa      	bne.n	400360 <usart_serial_putchar+0x48>
		return 1;
  40036a:	2001      	movs	r0, #1
  40036c:	bd70      	pop	{r4, r5, r6, pc}
		while (usart_write(p_usart, c)!=0);
  40036e:	461e      	mov	r6, r3
  400370:	4d08      	ldr	r5, [pc, #32]	; (400394 <usart_serial_putchar+0x7c>)
  400372:	4621      	mov	r1, r4
  400374:	4630      	mov	r0, r6
  400376:	47a8      	blx	r5
  400378:	2800      	cmp	r0, #0
  40037a:	d1fa      	bne.n	400372 <usart_serial_putchar+0x5a>
		return 1;
  40037c:	2001      	movs	r0, #1
  40037e:	bd70      	pop	{r4, r5, r6, pc}
  400380:	400e0600 	.word	0x400e0600
  400384:	400e0800 	.word	0x400e0800
  400388:	40024000 	.word	0x40024000
  40038c:	40028000 	.word	0x40028000
  400390:	0040022b 	.word	0x0040022b
  400394:	0040016d 	.word	0x0040016d

00400398 <vClearSensorCounter>:
#include "BeamBall.h"

static int sensor_counter = 0;

void vClearSensorCounter() {
	sensor_counter = 0;
  400398:	2200      	movs	r2, #0
  40039a:	4b01      	ldr	r3, [pc, #4]	; (4003a0 <vClearSensorCounter+0x8>)
  40039c:	601a      	str	r2, [r3, #0]
  40039e:	4770      	bx	lr
  4003a0:	20000ad0 	.word	0x20000ad0

004003a4 <vAddSensorCounter>:
int iGetSensorCounter() {
	return sensor_counter;
}

void vAddSensorCounter() {
	sensor_counter++;
  4003a4:	4a02      	ldr	r2, [pc, #8]	; (4003b0 <vAddSensorCounter+0xc>)
  4003a6:	6813      	ldr	r3, [r2, #0]
  4003a8:	3301      	adds	r3, #1
  4003aa:	6013      	str	r3, [r2, #0]
  4003ac:	4770      	bx	lr
  4003ae:	bf00      	nop
  4003b0:	20000ad0 	.word	0x20000ad0

004003b4 <vConfigureUART>:
}


/* UART Configuration */

void vConfigureUART(void) {
  4003b4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  4003b8:	b084      	sub	sp, #16
	uart_settings.ul_mck = sysclk_get_peripheral_hz();
  4003ba:	f8df 808c 	ldr.w	r8, [pc, #140]	; 400448 <vConfigureUART+0x94>
  4003be:	f8cd 8004 	str.w	r8, [sp, #4]
	uart_settings.ul_baudrate = opt->baudrate;
  4003c2:	4c16      	ldr	r4, [pc, #88]	; (40041c <vConfigureUART+0x68>)
  4003c4:	6823      	ldr	r3, [r4, #0]
  4003c6:	9302      	str	r3, [sp, #8]
	uart_settings.ul_mode = opt->paritytype;
  4003c8:	68a3      	ldr	r3, [r4, #8]
  4003ca:	9303      	str	r3, [sp, #12]
 *
 * \param ul_id Id (number) of the peripheral clock.
 */
static inline void sysclk_enable_peripheral_clock(uint32_t ul_id)
{
	pmc_enable_periph_clk(ul_id);
  4003cc:	2008      	movs	r0, #8
  4003ce:	4f14      	ldr	r7, [pc, #80]	; (400420 <vConfigureUART+0x6c>)
  4003d0:	47b8      	blx	r7
		uart_init((Uart*)p_usart, &uart_settings);
  4003d2:	4d14      	ldr	r5, [pc, #80]	; (400424 <vConfigureUART+0x70>)
  4003d4:	a901      	add	r1, sp, #4
  4003d6:	4628      	mov	r0, r5
  4003d8:	4e13      	ldr	r6, [pc, #76]	; (400428 <vConfigureUART+0x74>)
  4003da:	47b0      	blx	r6
 * \param opt         Options needed to set up RS232 communication (see \ref usart_options_t).
 *
 */
static inline void stdio_serial_init(volatile void *usart, const usart_serial_options_t *opt)
{
	stdio_base = (void *)usart;
  4003dc:	4b13      	ldr	r3, [pc, #76]	; (40042c <vConfigureUART+0x78>)
  4003de:	601d      	str	r5, [r3, #0]
	ptr_put = (int (*)(void volatile*,char))&usart_serial_putchar;
  4003e0:	4a13      	ldr	r2, [pc, #76]	; (400430 <vConfigureUART+0x7c>)
  4003e2:	4b14      	ldr	r3, [pc, #80]	; (400434 <vConfigureUART+0x80>)
  4003e4:	601a      	str	r2, [r3, #0]
	ptr_get = (void (*)(void volatile*,char*))&usart_serial_getchar;
  4003e6:	4a14      	ldr	r2, [pc, #80]	; (400438 <vConfigureUART+0x84>)
  4003e8:	4b14      	ldr	r3, [pc, #80]	; (40043c <vConfigureUART+0x88>)
  4003ea:	601a      	str	r2, [r3, #0]
	uart_settings.ul_mck = sysclk_get_peripheral_hz();
  4003ec:	f8cd 8004 	str.w	r8, [sp, #4]
	uart_settings.ul_baudrate = opt->baudrate;
  4003f0:	6823      	ldr	r3, [r4, #0]
  4003f2:	9302      	str	r3, [sp, #8]
	uart_settings.ul_mode = opt->paritytype;
  4003f4:	68a3      	ldr	r3, [r4, #8]
  4003f6:	9303      	str	r3, [sp, #12]
  4003f8:	2008      	movs	r0, #8
  4003fa:	47b8      	blx	r7
		uart_init((Uart*)p_usart, &uart_settings);
  4003fc:	a901      	add	r1, sp, #4
  4003fe:	4628      	mov	r0, r5
  400400:	47b0      	blx	r6
	fdevopen((int (*)(char, FILE*))(_write),(int (*)(FILE*))(_read));
#  endif
#  if UC3 || SAM
	// For AVR32 and SAM GCC
	// Specify that stdout and stdin should not be buffered.
	setbuf(stdout, NULL);
  400402:	4d0f      	ldr	r5, [pc, #60]	; (400440 <vConfigureUART+0x8c>)
  400404:	682b      	ldr	r3, [r5, #0]
  400406:	2100      	movs	r1, #0
  400408:	6898      	ldr	r0, [r3, #8]
  40040a:	4c0e      	ldr	r4, [pc, #56]	; (400444 <vConfigureUART+0x90>)
  40040c:	47a0      	blx	r4
	setbuf(stdin, NULL);
  40040e:	682b      	ldr	r3, [r5, #0]
  400410:	2100      	movs	r1, #0
  400412:	6858      	ldr	r0, [r3, #4]
  400414:	47a0      	blx	r4
	// define a porta serial para a UART e com a variavel definida acima
	usart_serial_init(CONF_UART, &usart_options);

	// define a saida generica para ser o uart
	stdio_serial_init((Usart *)CONF_UART, &usart_options);
}
  400416:	b004      	add	sp, #16
  400418:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  40041c:	200000f4 	.word	0x200000f4
  400420:	00400cf9 	.word	0x00400cf9
  400424:	400e0600 	.word	0x400e0600
  400428:	004001f5 	.word	0x004001f5
  40042c:	20000b88 	.word	0x20000b88
  400430:	00400319 	.word	0x00400319
  400434:	20000b84 	.word	0x20000b84
  400438:	00400291 	.word	0x00400291
  40043c:	20000b80 	.word	0x20000b80
  400440:	20000108 	.word	0x20000108
  400444:	0040166d 	.word	0x0040166d
  400448:	02dc6c00 	.word	0x02dc6c00

0040044c <TC0_Handler>:
}

/* Timer Configuration */

// Essa funcao forca outra leitura da malha de controle
void TC0_Handler(void) {
  40044c:	b508      	push	{r3, lr}
	tc_get_status(TC,CHANNEL);
  40044e:	2100      	movs	r1, #0
  400450:	4804      	ldr	r0, [pc, #16]	; (400464 <TC0_Handler+0x18>)
  400452:	4b05      	ldr	r3, [pc, #20]	; (400468 <TC0_Handler+0x1c>)
  400454:	4798      	blx	r3
	
	puts("Nova Leitura\r\n");
  400456:	4805      	ldr	r0, [pc, #20]	; (40046c <TC0_Handler+0x20>)
  400458:	4b05      	ldr	r3, [pc, #20]	; (400470 <TC0_Handler+0x24>)
  40045a:	4798      	blx	r3
	
	vReadSensor();
  40045c:	4b05      	ldr	r3, [pc, #20]	; (400474 <TC0_Handler+0x28>)
  40045e:	4798      	blx	r3
  400460:	bd08      	pop	{r3, pc}
  400462:	bf00      	nop
  400464:	40010000 	.word	0x40010000
  400468:	004001ed 	.word	0x004001ed
  40046c:	00404260 	.word	0x00404260
  400470:	0040165d 	.word	0x0040165d
  400474:	0040024d 	.word	0x0040024d

00400478 <TC1_Handler>:
}

// Essa funcao executa o contador de tempo entre o start do sensor e a sua resposta
void TC1_Handler(void) {
  400478:	b508      	push	{r3, lr}
	tc_get_status(TC_SENSOR,CHANNEL_SENSOR);
  40047a:	2101      	movs	r1, #1
  40047c:	4802      	ldr	r0, [pc, #8]	; (400488 <TC1_Handler+0x10>)
  40047e:	4b03      	ldr	r3, [pc, #12]	; (40048c <TC1_Handler+0x14>)
  400480:	4798      	blx	r3
	
	vAddSensorCounter();
  400482:	4b03      	ldr	r3, [pc, #12]	; (400490 <TC1_Handler+0x18>)
  400484:	4798      	blx	r3
  400486:	bd08      	pop	{r3, pc}
  400488:	40014000 	.word	0x40014000
  40048c:	004001ed 	.word	0x004001ed
  400490:	004003a5 	.word	0x004003a5

00400494 <vConfigurePWM>:
//}

// HARD - Registradores
void vConfigurePWM() {
	/* Disable the watchdog */
	WDT->WDT_MR = WDT_MR_WDDIS;
  400494:	f44f 4200 	mov.w	r2, #32768	; 0x8000
  400498:	4b11      	ldr	r3, [pc, #68]	; (4004e0 <vConfigurePWM+0x4c>)
  40049a:	605a      	str	r2, [r3, #4]

	// disable the PIO (peripheral controls the pin)
	PIOA->PIO_PDR = PIO_PDR_P23;
  40049c:	f5a3 63ca 	sub.w	r3, r3, #1616	; 0x650
  4004a0:	f44f 0200 	mov.w	r2, #8388608	; 0x800000
  4004a4:	605a      	str	r2, [r3, #4]
	// select alternate function B (PWML0) for pin PA19
	PIOA->PIO_ABCDSR[0] |= PIO_ABCDSR_P23;
  4004a6:	6f1a      	ldr	r2, [r3, #112]	; 0x70
  4004a8:	f442 0200 	orr.w	r2, r2, #8388608	; 0x800000
  4004ac:	671a      	str	r2, [r3, #112]	; 0x70
	PIOA->PIO_ABCDSR[1] &= ~PIO_ABCDSR_P23;
  4004ae:	6f5a      	ldr	r2, [r3, #116]	; 0x74
  4004b0:	f422 0200 	bic.w	r2, r2, #8388608	; 0x800000
  4004b4:	675a      	str	r2, [r3, #116]	; 0x74
	// Enable the PWM peripheral from the Power Manger
	PMC->PMC_PCER0 = (1 << ID_PWM);
  4004b6:	f04f 4200 	mov.w	r2, #2147483648	; 0x80000000
  4004ba:	f5a3 6320 	sub.w	r3, r3, #2560	; 0xa00
  4004be:	611a      	str	r2, [r3, #16]
	// Select the Clock to run at the MCK (4MHz)
	PWM->PWM_CH_NUM[0].PWM_CMR = PWM_CMR_CPRE_MCK;
  4004c0:	4b08      	ldr	r3, [pc, #32]	; (4004e4 <vConfigurePWM+0x50>)
  4004c2:	2200      	movs	r2, #0
  4004c4:	f8c3 2200 	str.w	r2, [r3, #512]	; 0x200
	// select the period 10msec
	PWM->PWM_CH_NUM[0].PWM_CPRD = PWM_PERIOD;
  4004c8:	f64b 3280 	movw	r2, #48000	; 0xbb80
  4004cc:	f8c3 2208 	str.w	r2, [r3, #520]	; 0x208
	// select the duty cycle
	PWM->PWM_CH_NUM[0].PWM_CDTY = 20000;
  4004d0:	f644 6220 	movw	r2, #20000	; 0x4e20
  4004d4:	f8c3 2204 	str.w	r2, [r3, #516]	; 0x204
	// enable the channel
	PWM->PWM_ENA = PWM_ENA_CHID0;
  4004d8:	2201      	movs	r2, #1
  4004da:	605a      	str	r2, [r3, #4]
  4004dc:	4770      	bx	lr
  4004de:	bf00      	nop
  4004e0:	400e1450 	.word	0x400e1450
  4004e4:	40020000 	.word	0x40020000

004004e8 <vPWMUpdateDuty>:

}



void vPWMUpdateDuty (unsigned int duty) {
  4004e8:	b570      	push	{r4, r5, r6, lr}
  4004ea:	4604      	mov	r4, r0
	unsigned int uiD = 800;

	unsigned int DD = uiD * duty;
  4004ec:	f44f 7348 	mov.w	r3, #800	; 0x320
  4004f0:	fb03 f300 	mul.w	r3, r3, r0
	
	
	PWM->PWM_CH_NUM[0].PWM_CDTY = PWM_PERIOD - DD; //PWM_PERIOD * (duty/100);
  4004f4:	f64b 3580 	movw	r5, #48000	; 0xbb80
  4004f8:	1ae9      	subs	r1, r5, r3
  4004fa:	4a0c      	ldr	r2, [pc, #48]	; (40052c <vPWMUpdateDuty+0x44>)
  4004fc:	f8c2 1204 	str.w	r1, [r2, #516]	; 0x204
	
	
	float d = PWM_PERIOD * (duty/100);

	printf("Period: %u // duty: %u // value: %u\r\n", PWM_PERIOD,duty,DD);
  400500:	4602      	mov	r2, r0
  400502:	4629      	mov	r1, r5
  400504:	480a      	ldr	r0, [pc, #40]	; (400530 <vPWMUpdateDuty+0x48>)
  400506:	4e0b      	ldr	r6, [pc, #44]	; (400534 <vPWMUpdateDuty+0x4c>)
  400508:	47b0      	blx	r6
	float d = PWM_PERIOD * (duty/100);
  40050a:	480b      	ldr	r0, [pc, #44]	; (400538 <vPWMUpdateDuty+0x50>)
  40050c:	fba0 3004 	umull	r3, r0, r0, r4
  400510:	0940      	lsrs	r0, r0, #5
  400512:	fb05 f000 	mul.w	r0, r5, r0
  400516:	4b09      	ldr	r3, [pc, #36]	; (40053c <vPWMUpdateDuty+0x54>)
  400518:	4798      	blx	r3
	printf("PWM Update: %u // %f\r\n", duty, d);
  40051a:	4b09      	ldr	r3, [pc, #36]	; (400540 <vPWMUpdateDuty+0x58>)
  40051c:	4798      	blx	r3
  40051e:	4602      	mov	r2, r0
  400520:	460b      	mov	r3, r1
  400522:	4621      	mov	r1, r4
  400524:	4807      	ldr	r0, [pc, #28]	; (400544 <vPWMUpdateDuty+0x5c>)
  400526:	47b0      	blx	r6
  400528:	bd70      	pop	{r4, r5, r6, pc}
  40052a:	bf00      	nop
  40052c:	40020000 	.word	0x40020000
  400530:	0040429c 	.word	0x0040429c
  400534:	00401531 	.word	0x00401531
  400538:	51eb851f 	.word	0x51eb851f
  40053c:	00401431 	.word	0x00401431
  400540:	0040121d 	.word	0x0040121d
  400544:	004042c4 	.word	0x004042c4

00400548 <vButtonLeftISR>:
void vButtonLeftISR(const uint32_t id, const uint32_t index) {
  400548:	b510      	push	{r4, lr}
	if (btn_duty < MAX_DUTY_VALUE) btn_duty++;
  40054a:	4b08      	ldr	r3, [pc, #32]	; (40056c <vButtonLeftISR+0x24>)
  40054c:	681b      	ldr	r3, [r3, #0]
  40054e:	2b08      	cmp	r3, #8
  400550:	d802      	bhi.n	400558 <vButtonLeftISR+0x10>
  400552:	3301      	adds	r3, #1
  400554:	4a05      	ldr	r2, [pc, #20]	; (40056c <vButtonLeftISR+0x24>)
  400556:	6013      	str	r3, [r2, #0]
	vPWMUpdateDuty(btn_duty);
  400558:	4c04      	ldr	r4, [pc, #16]	; (40056c <vButtonLeftISR+0x24>)
  40055a:	6820      	ldr	r0, [r4, #0]
  40055c:	4b04      	ldr	r3, [pc, #16]	; (400570 <vButtonLeftISR+0x28>)
  40055e:	4798      	blx	r3
	printf("Duty atual: %u\a\n\r",btn_duty);
  400560:	6821      	ldr	r1, [r4, #0]
  400562:	4804      	ldr	r0, [pc, #16]	; (400574 <vButtonLeftISR+0x2c>)
  400564:	4b04      	ldr	r3, [pc, #16]	; (400578 <vButtonLeftISR+0x30>)
  400566:	4798      	blx	r3
  400568:	bd10      	pop	{r4, pc}
  40056a:	bf00      	nop
  40056c:	200000f0 	.word	0x200000f0
  400570:	004004e9 	.word	0x004004e9
  400574:	00404270 	.word	0x00404270
  400578:	00401531 	.word	0x00401531

0040057c <vButtonRightISR>:
void vButtonRightISR(const uint32_t id, const uint32_t index) {
  40057c:	b510      	push	{r4, lr}
	if (btn_duty > MIN_DUTY_VALUE) btn_duty--;
  40057e:	4b08      	ldr	r3, [pc, #32]	; (4005a0 <vButtonRightISR+0x24>)
  400580:	681b      	ldr	r3, [r3, #0]
  400582:	2b01      	cmp	r3, #1
  400584:	d902      	bls.n	40058c <vButtonRightISR+0x10>
  400586:	3b01      	subs	r3, #1
  400588:	4a05      	ldr	r2, [pc, #20]	; (4005a0 <vButtonRightISR+0x24>)
  40058a:	6013      	str	r3, [r2, #0]
	vPWMUpdateDuty(btn_duty);
  40058c:	4c04      	ldr	r4, [pc, #16]	; (4005a0 <vButtonRightISR+0x24>)
  40058e:	6820      	ldr	r0, [r4, #0]
  400590:	4b04      	ldr	r3, [pc, #16]	; (4005a4 <vButtonRightISR+0x28>)
  400592:	4798      	blx	r3
	printf("Duty atual: %u\a\n\r",btn_duty);
  400594:	6821      	ldr	r1, [r4, #0]
  400596:	4804      	ldr	r0, [pc, #16]	; (4005a8 <vButtonRightISR+0x2c>)
  400598:	4b04      	ldr	r3, [pc, #16]	; (4005ac <vButtonRightISR+0x30>)
  40059a:	4798      	blx	r3
  40059c:	bd10      	pop	{r4, pc}
  40059e:	bf00      	nop
  4005a0:	200000f0 	.word	0x200000f0
  4005a4:	004004e9 	.word	0x004004e9
  4005a8:	00404270 	.word	0x00404270
  4005ac:	00401531 	.word	0x00401531

004005b0 <PWM_Handler>:
	
}

// Descomente a funcao de baixo para ativar a interrupcao do PWM

void PWM_Handler(void) {
  4005b0:	b510      	push	{r4, lr}
	uint32_t events = pwm_channel_get_interrupt_status(PWM);
  4005b2:	4807      	ldr	r0, [pc, #28]	; (4005d0 <PWM_Handler+0x20>)
  4005b4:	4b07      	ldr	r3, [pc, #28]	; (4005d4 <PWM_Handler+0x24>)
  4005b6:	4798      	blx	r3
	gpio_toggle_pin(LED1_GPIO);
  4005b8:	202e      	movs	r0, #46	; 0x2e
  4005ba:	4b07      	ldr	r3, [pc, #28]	; (4005d8 <PWM_Handler+0x28>)
  4005bc:	4798      	blx	r3
	vPWMUpdateDuty(btn_duty);
  4005be:	4c07      	ldr	r4, [pc, #28]	; (4005dc <PWM_Handler+0x2c>)
  4005c0:	6820      	ldr	r0, [r4, #0]
  4005c2:	4b07      	ldr	r3, [pc, #28]	; (4005e0 <PWM_Handler+0x30>)
  4005c4:	4798      	blx	r3
	printf("PWM Handler: %u\r\n", btn_duty);
  4005c6:	6821      	ldr	r1, [r4, #0]
  4005c8:	4806      	ldr	r0, [pc, #24]	; (4005e4 <PWM_Handler+0x34>)
  4005ca:	4b07      	ldr	r3, [pc, #28]	; (4005e8 <PWM_Handler+0x38>)
  4005cc:	4798      	blx	r3
  4005ce:	bd10      	pop	{r4, pc}
  4005d0:	40020000 	.word	0x40020000
  4005d4:	004001e9 	.word	0x004001e9
  4005d8:	004008fb 	.word	0x004008fb
  4005dc:	200000f0 	.word	0x200000f0
  4005e0:	004004e9 	.word	0x004004e9
  4005e4:	0040424c 	.word	0x0040424c
  4005e8:	00401531 	.word	0x00401531

004005ec <vConfigureButton>:
}

//Configurar botoes com interrupcoes
void vConfigureButton(){
  4005ec:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
  4005f0:	b083      	sub	sp, #12
	pio_set_input(PIOA,PIO_BUTTON_LEFT,PIO_PULLUP|PIO_DEBOUNCE);
  4005f2:	4c1b      	ldr	r4, [pc, #108]	; (400660 <vConfigureButton+0x74>)
  4005f4:	2209      	movs	r2, #9
  4005f6:	f44f 4100 	mov.w	r1, #32768	; 0x8000
  4005fa:	4620      	mov	r0, r4
  4005fc:	f8df 907c 	ldr.w	r9, [pc, #124]	; 40067c <vConfigureButton+0x90>
  400600:	47c8      	blx	r9
	pio_handler_set(PIOA,ID_PIOA,PIO_BUTTON_LEFT,PIO_IT_RISE_EDGE,vButtonLeftISR);
  400602:	4b18      	ldr	r3, [pc, #96]	; (400664 <vConfigureButton+0x78>)
  400604:	9300      	str	r3, [sp, #0]
  400606:	2370      	movs	r3, #112	; 0x70
  400608:	f44f 4200 	mov.w	r2, #32768	; 0x8000
  40060c:	210b      	movs	r1, #11
  40060e:	4620      	mov	r0, r4
  400610:	f8df 806c 	ldr.w	r8, [pc, #108]	; 400680 <vConfigureButton+0x94>
  400614:	47c0      	blx	r8
	pio_enable_interrupt(PIOA,PIO_BUTTON_LEFT);
  400616:	f44f 4100 	mov.w	r1, #32768	; 0x8000
  40061a:	4620      	mov	r0, r4
  40061c:	4f12      	ldr	r7, [pc, #72]	; (400668 <vConfigureButton+0x7c>)
  40061e:	47b8      	blx	r7
__STATIC_INLINE void NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
  if(IRQn < 0) {
    SCB->SHP[((uint32_t)(IRQn) & 0xF)-4] = ((priority << (8 - __NVIC_PRIO_BITS)) & 0xff); } /* set Priority for Cortex-M  System Interrupts */
  else {
    NVIC->IP[(uint32_t)(IRQn)] = ((priority << (8 - __NVIC_PRIO_BITS)) & 0xff);    }        /* set Priority for device specific Interrupts  */
  400620:	4d12      	ldr	r5, [pc, #72]	; (40066c <vConfigureButton+0x80>)
  400622:	2660      	movs	r6, #96	; 0x60
  400624:	f885 630b 	strb.w	r6, [r5, #779]	; 0x30b
	NVIC_SetPriority(PIOA_IRQn,BUTTON_PRIORITY);
	

	pio_set_input(PIOA,PIO_BUTTON_RIGTH,PIO_PULLUP|PIO_DEBOUNCE);
  400628:	2209      	movs	r2, #9
  40062a:	f44f 3180 	mov.w	r1, #65536	; 0x10000
  40062e:	4620      	mov	r0, r4
  400630:	47c8      	blx	r9
	pio_handler_set(PIOA,ID_PIOA,PIO_BUTTON_RIGTH,PIO_IT_RISE_EDGE,vButtonRightISR);
  400632:	4b0f      	ldr	r3, [pc, #60]	; (400670 <vConfigureButton+0x84>)
  400634:	9300      	str	r3, [sp, #0]
  400636:	2370      	movs	r3, #112	; 0x70
  400638:	f44f 3280 	mov.w	r2, #65536	; 0x10000
  40063c:	210b      	movs	r1, #11
  40063e:	4620      	mov	r0, r4
  400640:	47c0      	blx	r8
	pio_enable_interrupt(PIOA,PIO_BUTTON_RIGTH);
  400642:	f44f 3180 	mov.w	r1, #65536	; 0x10000
  400646:	4620      	mov	r0, r4
  400648:	47b8      	blx	r7
  40064a:	f885 630b 	strb.w	r6, [r5, #779]	; 0x30b
  NVIC->ISER[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); /* enable interrupt */
  40064e:	f44f 6300 	mov.w	r3, #2048	; 0x800
  400652:	602b      	str	r3, [r5, #0]
	NVIC_SetPriority(PIOA_IRQn,BUTTON_PRIORITY);

	NVIC_EnableIRQ(PIOA_IRQn);
	puts("botoes configurados\n\r");
  400654:	4807      	ldr	r0, [pc, #28]	; (400674 <vConfigureButton+0x88>)
  400656:	4b08      	ldr	r3, [pc, #32]	; (400678 <vConfigureButton+0x8c>)
  400658:	4798      	blx	r3
}
  40065a:	b003      	add	sp, #12
  40065c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
  400660:	400e0e00 	.word	0x400e0e00
  400664:	00400549 	.word	0x00400549
  400668:	004008d3 	.word	0x004008d3
  40066c:	e000e100 	.word	0xe000e100
  400670:	0040057d 	.word	0x0040057d
  400674:	00404284 	.word	0x00404284
  400678:	0040165d 	.word	0x0040165d
  40067c:	0040084d 	.word	0x0040084d
  400680:	00400b65 	.word	0x00400b65

00400684 <sysclk_init>:
{
}
#endif // CONFIG_USBCLK_SOURCE

void sysclk_init(void)
{
  400684:	b510      	push	{r4, lr}
	/* Set flash wait state to max in case the below clock switching. */
	system_init_flash(CHIP_FREQ_CPU_MAX);
  400686:	480e      	ldr	r0, [pc, #56]	; (4006c0 <sysclk_init+0x3c>)
  400688:	4b0e      	ldr	r3, [pc, #56]	; (4006c4 <sysclk_init+0x40>)
  40068a:	4798      	blx	r3
		pmc_switch_mainck_to_fastrc(CKGR_MOR_MOSCRCF_12_MHz);
		break;


	case OSC_MAINCK_XTAL:
		pmc_switch_mainck_to_xtal(PMC_OSC_XTAL,
  40068c:	213e      	movs	r1, #62	; 0x3e
  40068e:	2000      	movs	r0, #0
  400690:	4b0d      	ldr	r3, [pc, #52]	; (4006c8 <sysclk_init+0x44>)
  400692:	4798      	blx	r3
	case OSC_MAINCK_4M_RC:
	case OSC_MAINCK_8M_RC:
	case OSC_MAINCK_12M_RC:
	case OSC_MAINCK_XTAL:
	case OSC_MAINCK_BYPASS:
		return pmc_osc_is_ready_mainck();
  400694:	4c0d      	ldr	r4, [pc, #52]	; (4006cc <sysclk_init+0x48>)
  400696:	47a0      	blx	r4
 *
 * \param id A number identifying the oscillator to wait for.
 */
static inline void osc_wait_ready(uint8_t id)
{
	while (!osc_is_ready(id)) {
  400698:	2800      	cmp	r0, #0
  40069a:	d0fc      	beq.n	400696 <sysclk_init+0x12>
static inline void pll_enable(const struct pll_config *p_cfg, uint32_t ul_pll_id)
{
	Assert(ul_pll_id < NR_PLLS);

	if (ul_pll_id == PLLA_ID) {
		pmc_disable_pllack(); // Always stop PLL first!
  40069c:	4b0c      	ldr	r3, [pc, #48]	; (4006d0 <sysclk_init+0x4c>)
  40069e:	4798      	blx	r3
		PMC->CKGR_PLLAR = CKGR_PLLAR_ONE | p_cfg->ctrl;
  4006a0:	4a0c      	ldr	r2, [pc, #48]	; (4006d4 <sysclk_init+0x50>)
  4006a2:	4b0d      	ldr	r3, [pc, #52]	; (4006d8 <sysclk_init+0x54>)
  4006a4:	629a      	str	r2, [r3, #40]	; 0x28
static inline uint32_t pll_is_locked(uint32_t ul_pll_id)
{
	Assert(ul_pll_id < NR_PLLS);

	if (ul_pll_id == PLLA_ID) {
		return pmc_is_locked_pllack();
  4006a6:	4c0d      	ldr	r4, [pc, #52]	; (4006dc <sysclk_init+0x58>)
  4006a8:	47a0      	blx	r4
 */
static inline int pll_wait_for_lock(unsigned int pll_id)
{
	Assert(pll_id < NR_PLLS);

	while (!pll_is_locked(pll_id)) {
  4006aa:	2800      	cmp	r0, #0
  4006ac:	d0fc      	beq.n	4006a8 <sysclk_init+0x24>

		pll_enable_source(CONFIG_PLL0_SOURCE);
		pll_config_defaults(&pllcfg, 0);
		pll_enable(&pllcfg, 0);
		pll_wait_for_lock(0);
		pmc_switch_mck_to_pllack(CONFIG_SYSCLK_PRES);
  4006ae:	2010      	movs	r0, #16
  4006b0:	4b0b      	ldr	r3, [pc, #44]	; (4006e0 <sysclk_init+0x5c>)
  4006b2:	4798      	blx	r3
	}
#endif

	/* Update the SystemFrequency variable */
	SystemCoreClockUpdate();
  4006b4:	4b0b      	ldr	r3, [pc, #44]	; (4006e4 <sysclk_init+0x60>)
  4006b6:	4798      	blx	r3

	/* Set a flash wait state depending on the new cpu frequency */
	system_init_flash(sysclk_get_cpu_hz());
  4006b8:	4801      	ldr	r0, [pc, #4]	; (4006c0 <sysclk_init+0x3c>)
  4006ba:	4b02      	ldr	r3, [pc, #8]	; (4006c4 <sysclk_init+0x40>)
  4006bc:	4798      	blx	r3
  4006be:	bd10      	pop	{r4, pc}
  4006c0:	02dc6c00 	.word	0x02dc6c00
  4006c4:	200000ad 	.word	0x200000ad
  4006c8:	00400c75 	.word	0x00400c75
  4006cc:	00400cc9 	.word	0x00400cc9
  4006d0:	00400cd9 	.word	0x00400cd9
  4006d4:	20073f01 	.word	0x20073f01
  4006d8:	400e0400 	.word	0x400e0400
  4006dc:	00400ce9 	.word	0x00400ce9
  4006e0:	00400c11 	.word	0x00400c11
  4006e4:	00400dc1 	.word	0x00400dc1

004006e8 <board_init>:
#include "conf_board.h"
#include "gpio.h"
#include "ioport.h"

void board_init(void)
{
  4006e8:	b510      	push	{r4, lr}
#ifndef CONF_BOARD_KEEP_WATCHDOG_AT_INIT
	/* Disable the watchdog */
	WDT->WDT_MR = WDT_MR_WDDIS;
  4006ea:	f44f 4200 	mov.w	r2, #32768	; 0x8000
  4006ee:	4b2c      	ldr	r3, [pc, #176]	; (4007a0 <board_init+0xb8>)
  4006f0:	605a      	str	r2, [r3, #4]
  4006f2:	200b      	movs	r0, #11
  4006f4:	4c2b      	ldr	r4, [pc, #172]	; (4007a4 <board_init+0xbc>)
  4006f6:	47a0      	blx	r4
  4006f8:	200c      	movs	r0, #12
  4006fa:	47a0      	blx	r4
  4006fc:	200d      	movs	r0, #13
  4006fe:	47a0      	blx	r4
	 * Here IOPORT must be initialized for others to use before setting up IO.
	 */
	ioport_init();

	/* Configure LED pins */
	gpio_configure_pin(LED0_GPIO, LED0_FLAGS);
  400700:	f04f 5160 	mov.w	r1, #939524096	; 0x38000000
  400704:	2017      	movs	r0, #23
  400706:	4c28      	ldr	r4, [pc, #160]	; (4007a8 <board_init+0xc0>)
  400708:	47a0      	blx	r4
	gpio_configure_pin(LED1_GPIO, LED1_FLAGS);
  40070a:	f04f 5160 	mov.w	r1, #939524096	; 0x38000000
  40070e:	202e      	movs	r0, #46	; 0x2e
  400710:	47a0      	blx	r4

	/* Configure Push Button pins */
	gpio_configure_pin(GPIO_PUSH_BUTTON_1, GPIO_PUSH_BUTTON_1_FLAGS);
  400712:	4926      	ldr	r1, [pc, #152]	; (4007ac <board_init+0xc4>)
  400714:	200f      	movs	r0, #15
  400716:	47a0      	blx	r4
	gpio_configure_pin(GPIO_PUSH_BUTTON_2, GPIO_PUSH_BUTTON_2_FLAGS);
  400718:	4925      	ldr	r1, [pc, #148]	; (4007b0 <board_init+0xc8>)
  40071a:	2010      	movs	r0, #16
  40071c:	47a0      	blx	r4

#ifdef CONF_BOARD_UART_CONSOLE
	/* Configure UART pins */
	gpio_configure_group(PINS_UART0_PIO, PINS_UART0, PINS_UART0_FLAGS);
  40071e:	f04f 6200 	mov.w	r2, #134217728	; 0x8000000
  400722:	f44f 61c0 	mov.w	r1, #1536	; 0x600
  400726:	4823      	ldr	r0, [pc, #140]	; (4007b4 <board_init+0xcc>)
  400728:	4b23      	ldr	r3, [pc, #140]	; (4007b8 <board_init+0xd0>)
  40072a:	4798      	blx	r3
#endif

	/* Configure ADC example pins */
#ifdef CONF_BOARD_ADC
	/* TC TIOA configuration */
	gpio_configure_pin(PIN_TC0_TIOA0,PIN_TC0_TIOA0_FLAGS);
  40072c:	f04f 5180 	mov.w	r1, #268435456	; 0x10000000
  400730:	2000      	movs	r0, #0
  400732:	47a0      	blx	r4

	/* ADC Trigger configuration */
	gpio_configure_pin(PINS_ADC_TRIG, PINS_ADC_TRIG_FLAG);
  400734:	f04f 5180 	mov.w	r1, #268435456	; 0x10000000
  400738:	2008      	movs	r0, #8
  40073a:	47a0      	blx	r4
		gpio_configure_pin(TWI1_CLK_GPIO, TWI1_CLK_FLAGS);
#endif

	/* Configure SPI pins */
#if (defined CONF_BOARD_SPI) || (defined CONF_BOARD_SD_MMC_SPI)
	gpio_configure_pin(SPI_MISO_GPIO, SPI_MISO_FLAGS);
  40073c:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
  400740:	200c      	movs	r0, #12
  400742:	47a0      	blx	r4
	gpio_configure_pin(SPI_MOSI_GPIO, SPI_MOSI_FLAGS);
  400744:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
  400748:	200d      	movs	r0, #13
  40074a:	47a0      	blx	r4
	gpio_configure_pin(SPI_SPCK_GPIO, SPI_SPCK_FLAGS);
  40074c:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
  400750:	200e      	movs	r0, #14
  400752:	47a0      	blx	r4

	#ifdef CONF_BOARD_SPI_NPCS1
		#if defined(CONF_BOARD_SPI_NPCS1_GPIO) && defined(CONF_BOARD_SPI_NPCS1_FLAGS)
			gpio_configure_pin(CONF_BOARD_SPI_NPCS1_GPIO, CONF_BOARD_SPI_NPCS1_FLAGS);
		#else
			gpio_configure_pin(SPI_NPCS1_PA31_GPIO, SPI_NPCS1_PA31_FLAGS);
  400754:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
  400758:	201f      	movs	r0, #31
  40075a:	47a0      	blx	r4

	#ifdef CONF_BOARD_SPI_NPCS2
		#if defined(CONF_BOARD_SPI_NPCS2_GPIO) && defined(CONF_BOARD_SPI_NPCS2_FLAGS)
			gpio_configure_pin(CONF_BOARD_SPI_NPCS2_GPIO, CONF_BOARD_SPI_NPCS2_FLAGS);
		#else
			gpio_configure_pin(SPI_NPCS2_PA30_GPIO, SPI_NPCS2_PA30_FLAGS);
  40075c:	f04f 5180 	mov.w	r1, #268435456	; 0x10000000
  400760:	201e      	movs	r0, #30
  400762:	47a0      	blx	r4
	gpio_set_pin_low(PIN_RE_IDX);
#endif

#ifdef CONF_BOARD_ILI9225
	/* Configure SPI LCD control pin */
	gpio_configure_pin(SPI_MISO_GPIO, SPI_MISO_FLAGS);
  400764:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
  400768:	200c      	movs	r0, #12
  40076a:	47a0      	blx	r4
	gpio_configure_pin(SPI_MOSI_GPIO, SPI_MOSI_FLAGS);
  40076c:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
  400770:	200d      	movs	r0, #13
  400772:	47a0      	blx	r4
	gpio_configure_pin(SPI_SPCK_GPIO, SPI_SPCK_FLAGS);
  400774:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
  400778:	200e      	movs	r0, #14
  40077a:	47a0      	blx	r4
	gpio_configure_pin(SPI_NPCS2_PA30_GPIO, SPI_NPCS2_PA30_FLAGS);
  40077c:	f04f 5180 	mov.w	r1, #268435456	; 0x10000000
  400780:	201e      	movs	r0, #30
  400782:	47a0      	blx	r4
	gpio_configure_pin(BOARD_ILI9225_RS_GPIO, BOARD_ILI9225_RS_FLAGS);
  400784:	f04f 5160 	mov.w	r1, #939524096	; 0x38000000
  400788:	201c      	movs	r0, #28
  40078a:	47a0      	blx	r4
	gpio_configure_pin(BOARD_ILI9225_RSTN_GPIO, BOARD_ILI9225_RSTN_FLAGS);
  40078c:	f04f 5160 	mov.w	r1, #939524096	; 0x38000000
  400790:	201d      	movs	r0, #29
  400792:	47a0      	blx	r4
#endif

#ifdef CONF_BOARD_AAT3193
	/* Configure Backlight control pin */
	gpio_configure_pin(BOARD_AAT31XX_SET_GPIO, BOARD_AAT31XX_SET_FLAGS);
  400794:	f04f 5160 	mov.w	r1, #939524096	; 0x38000000
  400798:	204d      	movs	r0, #77	; 0x4d
  40079a:	47a0      	blx	r4
  40079c:	bd10      	pop	{r4, pc}
  40079e:	bf00      	nop
  4007a0:	400e1450 	.word	0x400e1450
  4007a4:	00400cf9 	.word	0x00400cf9
  4007a8:	0040091d 	.word	0x0040091d
  4007ac:	28000079 	.word	0x28000079
  4007b0:	28000059 	.word	0x28000059
  4007b4:	400e0e00 	.word	0x400e0e00
  4007b8:	00400a3d 	.word	0x00400a3d

004007bc <pio_set_peripheral>:
		const uint32_t ul_mask)
{
	uint32_t ul_sr;

	/* Disable interrupts on the pin(s) */
	p_pio->PIO_IDR = ul_mask;
  4007bc:	6442      	str	r2, [r0, #68]	; 0x44

#if (SAM3S || SAM3N || SAM4S || SAM4E || SAM4N || SAM4C || SAMG || SAM4CP || SAM4CM || SAMV71 || SAMV70 || SAME70 || SAMS70)
	switch (ul_type) {
  4007be:	f1b1 5fc0 	cmp.w	r1, #402653184	; 0x18000000
  4007c2:	d039      	beq.n	400838 <pio_set_peripheral+0x7c>
  4007c4:	d813      	bhi.n	4007ee <pio_set_peripheral+0x32>
  4007c6:	f1b1 6f00 	cmp.w	r1, #134217728	; 0x8000000
  4007ca:	d025      	beq.n	400818 <pio_set_peripheral+0x5c>
  4007cc:	f1b1 5f80 	cmp.w	r1, #268435456	; 0x10000000
  4007d0:	d10a      	bne.n	4007e8 <pio_set_peripheral+0x2c>

		ul_sr = p_pio->PIO_ABCDSR[1];
		p_pio->PIO_ABCDSR[1] &= (~ul_mask & ul_sr);
		break;
	case PIO_PERIPH_B:
		ul_sr = p_pio->PIO_ABCDSR[0];
  4007d2:	6f03      	ldr	r3, [r0, #112]	; 0x70
		p_pio->PIO_ABCDSR[0] = (ul_mask | ul_sr);
  4007d4:	4313      	orrs	r3, r2
  4007d6:	6703      	str	r3, [r0, #112]	; 0x70

		ul_sr = p_pio->PIO_ABCDSR[1];
  4007d8:	6f43      	ldr	r3, [r0, #116]	; 0x74
		p_pio->PIO_ABCDSR[1] &= (~ul_mask & ul_sr);
  4007da:	6f41      	ldr	r1, [r0, #116]	; 0x74
  4007dc:	400b      	ands	r3, r1
  4007de:	ea23 0302 	bic.w	r3, r3, r2
  4007e2:	6743      	str	r3, [r0, #116]	; 0x74
#else
#error "Unsupported device"
#endif

	/* Remove the pins from under the control of PIO */
	p_pio->PIO_PDR = ul_mask;
  4007e4:	6042      	str	r2, [r0, #4]
  4007e6:	4770      	bx	lr
	switch (ul_type) {
  4007e8:	2900      	cmp	r1, #0
  4007ea:	d1fb      	bne.n	4007e4 <pio_set_peripheral+0x28>
  4007ec:	4770      	bx	lr
  4007ee:	f1b1 5f20 	cmp.w	r1, #671088640	; 0x28000000
  4007f2:	d020      	beq.n	400836 <pio_set_peripheral+0x7a>
  4007f4:	d809      	bhi.n	40080a <pio_set_peripheral+0x4e>
  4007f6:	f1b1 5f00 	cmp.w	r1, #536870912	; 0x20000000
  4007fa:	d1f3      	bne.n	4007e4 <pio_set_peripheral+0x28>
		ul_sr = p_pio->PIO_ABCDSR[0];
  4007fc:	6f03      	ldr	r3, [r0, #112]	; 0x70
		p_pio->PIO_ABCDSR[0] = (ul_mask | ul_sr);
  4007fe:	4313      	orrs	r3, r2
  400800:	6703      	str	r3, [r0, #112]	; 0x70
		ul_sr = p_pio->PIO_ABCDSR[1];
  400802:	6f43      	ldr	r3, [r0, #116]	; 0x74
		p_pio->PIO_ABCDSR[1] = (ul_mask | ul_sr);
  400804:	4313      	orrs	r3, r2
  400806:	6743      	str	r3, [r0, #116]	; 0x74
		break;
  400808:	e7ec      	b.n	4007e4 <pio_set_peripheral+0x28>
	switch (ul_type) {
  40080a:	f1b1 5f40 	cmp.w	r1, #805306368	; 0x30000000
  40080e:	d012      	beq.n	400836 <pio_set_peripheral+0x7a>
  400810:	f1b1 5f60 	cmp.w	r1, #939524096	; 0x38000000
  400814:	d00f      	beq.n	400836 <pio_set_peripheral+0x7a>
  400816:	e7e5      	b.n	4007e4 <pio_set_peripheral+0x28>
{
  400818:	b410      	push	{r4}
		ul_sr = p_pio->PIO_ABCDSR[0];
  40081a:	6f01      	ldr	r1, [r0, #112]	; 0x70
		p_pio->PIO_ABCDSR[0] &= (~ul_mask & ul_sr);
  40081c:	6f04      	ldr	r4, [r0, #112]	; 0x70
  40081e:	43d3      	mvns	r3, r2
  400820:	4021      	ands	r1, r4
  400822:	461c      	mov	r4, r3
  400824:	4019      	ands	r1, r3
  400826:	6701      	str	r1, [r0, #112]	; 0x70
		ul_sr = p_pio->PIO_ABCDSR[1];
  400828:	6f43      	ldr	r3, [r0, #116]	; 0x74
		p_pio->PIO_ABCDSR[1] &= (~ul_mask & ul_sr);
  40082a:	6f41      	ldr	r1, [r0, #116]	; 0x74
  40082c:	400b      	ands	r3, r1
  40082e:	4023      	ands	r3, r4
  400830:	6743      	str	r3, [r0, #116]	; 0x74
	p_pio->PIO_PDR = ul_mask;
  400832:	6042      	str	r2, [r0, #4]
}
  400834:	bc10      	pop	{r4}
  400836:	4770      	bx	lr
		ul_sr = p_pio->PIO_ABCDSR[0];
  400838:	6f03      	ldr	r3, [r0, #112]	; 0x70
		p_pio->PIO_ABCDSR[0] &= (~ul_mask & ul_sr);
  40083a:	6f01      	ldr	r1, [r0, #112]	; 0x70
  40083c:	400b      	ands	r3, r1
  40083e:	ea23 0302 	bic.w	r3, r3, r2
  400842:	6703      	str	r3, [r0, #112]	; 0x70
		ul_sr = p_pio->PIO_ABCDSR[1];
  400844:	6f43      	ldr	r3, [r0, #116]	; 0x74
		p_pio->PIO_ABCDSR[1] = (ul_mask | ul_sr);
  400846:	4313      	orrs	r3, r2
  400848:	6743      	str	r3, [r0, #116]	; 0x74
		break;
  40084a:	e7cb      	b.n	4007e4 <pio_set_peripheral+0x28>

0040084c <pio_set_input>:
 * \param p_pio Pointer to a PIO instance.
 * \param ul_mask Interrupt sources bit map.
 */
void pio_disable_interrupt(Pio *p_pio, const uint32_t ul_mask)
{
	p_pio->PIO_IDR = ul_mask;
  40084c:	6441      	str	r1, [r0, #68]	; 0x44
	if (ul_pull_up_enable) {
  40084e:	f012 0f01 	tst.w	r2, #1
		p_pio->PIO_PUER = ul_mask;
  400852:	bf14      	ite	ne
  400854:	6641      	strne	r1, [r0, #100]	; 0x64
		p_pio->PIO_PUDR = ul_mask;
  400856:	6601      	streq	r1, [r0, #96]	; 0x60
	if (ul_attribute & (PIO_DEGLITCH | PIO_DEBOUNCE)) {
  400858:	f012 0f0a 	tst.w	r2, #10
		p_pio->PIO_IFER = ul_mask;
  40085c:	bf14      	ite	ne
  40085e:	6201      	strne	r1, [r0, #32]
		p_pio->PIO_IFDR = ul_mask;
  400860:	6241      	streq	r1, [r0, #36]	; 0x24
	if (ul_attribute & PIO_DEGLITCH) {
  400862:	f012 0f02 	tst.w	r2, #2
  400866:	d107      	bne.n	400878 <pio_set_input+0x2c>
		if (ul_attribute & PIO_DEBOUNCE) {
  400868:	f012 0f08 	tst.w	r2, #8
			p_pio->PIO_IFSCER = ul_mask;
  40086c:	bf18      	it	ne
  40086e:	f8c0 1084 	strne.w	r1, [r0, #132]	; 0x84
	p_pio->PIO_ODR = ul_mask;
  400872:	6141      	str	r1, [r0, #20]
	p_pio->PIO_PER = ul_mask;
  400874:	6001      	str	r1, [r0, #0]
  400876:	4770      	bx	lr
		p_pio->PIO_IFSCDR = ul_mask;
  400878:	f8c0 1080 	str.w	r1, [r0, #128]	; 0x80
  40087c:	e7f9      	b.n	400872 <pio_set_input+0x26>

0040087e <pio_set_output>:
{
  40087e:	b410      	push	{r4}
  400880:	9c01      	ldr	r4, [sp, #4]
	p_pio->PIO_IDR = ul_mask;
  400882:	6441      	str	r1, [r0, #68]	; 0x44
	if (ul_pull_up_enable) {
  400884:	b944      	cbnz	r4, 400898 <pio_set_output+0x1a>
		p_pio->PIO_PUDR = ul_mask;
  400886:	6601      	str	r1, [r0, #96]	; 0x60
	if (ul_multidrive_enable) {
  400888:	b143      	cbz	r3, 40089c <pio_set_output+0x1e>
		p_pio->PIO_MDER = ul_mask;
  40088a:	6501      	str	r1, [r0, #80]	; 0x50
	if (ul_default_level) {
  40088c:	b942      	cbnz	r2, 4008a0 <pio_set_output+0x22>
		p_pio->PIO_CODR = ul_mask;
  40088e:	6341      	str	r1, [r0, #52]	; 0x34
	p_pio->PIO_OER = ul_mask;
  400890:	6101      	str	r1, [r0, #16]
	p_pio->PIO_PER = ul_mask;
  400892:	6001      	str	r1, [r0, #0]
}
  400894:	bc10      	pop	{r4}
  400896:	4770      	bx	lr
		p_pio->PIO_PUER = ul_mask;
  400898:	6641      	str	r1, [r0, #100]	; 0x64
  40089a:	e7f5      	b.n	400888 <pio_set_output+0xa>
		p_pio->PIO_MDDR = ul_mask;
  40089c:	6541      	str	r1, [r0, #84]	; 0x54
  40089e:	e7f5      	b.n	40088c <pio_set_output+0xe>
		p_pio->PIO_SODR = ul_mask;
  4008a0:	6301      	str	r1, [r0, #48]	; 0x30
  4008a2:	e7f5      	b.n	400890 <pio_set_output+0x12>

004008a4 <pio_configure_interrupt>:
	if (ul_attr & PIO_IT_AIME) {
  4008a4:	f012 0f10 	tst.w	r2, #16
  4008a8:	d010      	beq.n	4008cc <pio_configure_interrupt+0x28>
		p_pio->PIO_AIMER = ul_mask;
  4008aa:	f8c0 10b0 	str.w	r1, [r0, #176]	; 0xb0
		if (ul_attr & PIO_IT_RE_OR_HL) {
  4008ae:	f012 0f20 	tst.w	r2, #32
			p_pio->PIO_REHLSR = ul_mask;
  4008b2:	bf14      	ite	ne
  4008b4:	f8c0 10d4 	strne.w	r1, [r0, #212]	; 0xd4
			p_pio->PIO_FELLSR = ul_mask;
  4008b8:	f8c0 10d0 	streq.w	r1, [r0, #208]	; 0xd0
		if (ul_attr & PIO_IT_EDGE) {
  4008bc:	f012 0f40 	tst.w	r2, #64	; 0x40
			p_pio->PIO_ESR = ul_mask;
  4008c0:	bf14      	ite	ne
  4008c2:	f8c0 10c0 	strne.w	r1, [r0, #192]	; 0xc0
			p_pio->PIO_LSR = ul_mask;
  4008c6:	f8c0 10c4 	streq.w	r1, [r0, #196]	; 0xc4
  4008ca:	4770      	bx	lr
		p_pio->PIO_AIMDR = ul_mask;
  4008cc:	f8c0 10b4 	str.w	r1, [r0, #180]	; 0xb4
  4008d0:	4770      	bx	lr

004008d2 <pio_enable_interrupt>:
	p_pio->PIO_IER = ul_mask;
  4008d2:	6401      	str	r1, [r0, #64]	; 0x40
  4008d4:	4770      	bx	lr

004008d6 <pio_get_interrupt_status>:
 *
 * \return The interrupt status value.
 */
uint32_t pio_get_interrupt_status(const Pio *p_pio)
{
	return p_pio->PIO_ISR;
  4008d6:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
}
  4008d8:	4770      	bx	lr

004008da <pio_get_interrupt_mask>:
 *
 * \return The interrupt mask value.
 */
uint32_t pio_get_interrupt_mask(const Pio *p_pio)
{
	return p_pio->PIO_IMR;
  4008da:	6c80      	ldr	r0, [r0, #72]	; 0x48
}
  4008dc:	4770      	bx	lr

004008de <pio_get_pin_value>:
		p_pio = PIOC;
	} else {
		p_pio = (Pio *)((uint32_t)PIOA + (PIO_DELTA * (ul_pin >> 5)));
	}
#else
	p_pio = (Pio *)((uint32_t)PIOA + (PIO_DELTA * (ul_pin >> 5)));
  4008de:	0943      	lsrs	r3, r0, #5
  4008e0:	f503 1300 	add.w	r3, r3, #2097152	; 0x200000
  4008e4:	f203 7307 	addw	r3, r3, #1799	; 0x707
  4008e8:	025b      	lsls	r3, r3, #9
	return (p_pio->PIO_PDSR >> (ul_pin & 0x1F)) & 1;
  4008ea:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
  4008ec:	f000 001f 	and.w	r0, r0, #31
  4008f0:	fa23 f000 	lsr.w	r0, r3, r0
}
  4008f4:	f000 0001 	and.w	r0, r0, #1
  4008f8:	4770      	bx	lr

004008fa <pio_toggle_pin>:
	p_pio = (Pio *)((uint32_t)PIOA + (PIO_DELTA * (ul_pin >> 5)));
  4008fa:	0943      	lsrs	r3, r0, #5
  4008fc:	f503 1300 	add.w	r3, r3, #2097152	; 0x200000
  400900:	f203 7307 	addw	r3, r3, #1799	; 0x707
  400904:	025b      	lsls	r3, r3, #9
	if (p_pio->PIO_ODSR & (1 << (ul_pin & 0x1F))) {
  400906:	6b99      	ldr	r1, [r3, #56]	; 0x38
  400908:	f000 021f 	and.w	r2, r0, #31
  40090c:	2001      	movs	r0, #1
  40090e:	4090      	lsls	r0, r2
  400910:	4201      	tst	r1, r0
		p_pio->PIO_CODR = 1 << (ul_pin & 0x1F);
  400912:	bf14      	ite	ne
  400914:	6358      	strne	r0, [r3, #52]	; 0x34
		p_pio->PIO_SODR = 1 << (ul_pin & 0x1F);
  400916:	6318      	streq	r0, [r3, #48]	; 0x30
  400918:	4770      	bx	lr
	...

0040091c <pio_configure_pin>:
{
  40091c:	b570      	push	{r4, r5, r6, lr}
  40091e:	b082      	sub	sp, #8
  400920:	460d      	mov	r5, r1
	p_pio = (Pio *)((uint32_t)PIOA + (PIO_DELTA * (ul_pin >> 5)));
  400922:	0943      	lsrs	r3, r0, #5
  400924:	f503 1300 	add.w	r3, r3, #2097152	; 0x200000
  400928:	f203 7307 	addw	r3, r3, #1799	; 0x707
  40092c:	025c      	lsls	r4, r3, #9
	switch (ul_flags & PIO_TYPE_Msk) {
  40092e:	f001 43f0 	and.w	r3, r1, #2013265920	; 0x78000000
  400932:	f1b3 5f00 	cmp.w	r3, #536870912	; 0x20000000
  400936:	d053      	beq.n	4009e0 <pio_configure_pin+0xc4>
  400938:	d80a      	bhi.n	400950 <pio_configure_pin+0x34>
  40093a:	f1b3 5f80 	cmp.w	r3, #268435456	; 0x10000000
  40093e:	d02d      	beq.n	40099c <pio_configure_pin+0x80>
  400940:	f1b3 5fc0 	cmp.w	r3, #402653184	; 0x18000000
  400944:	d03b      	beq.n	4009be <pio_configure_pin+0xa2>
  400946:	f1b3 6f00 	cmp.w	r3, #134217728	; 0x8000000
  40094a:	d015      	beq.n	400978 <pio_configure_pin+0x5c>
		return 0;
  40094c:	2000      	movs	r0, #0
  40094e:	e023      	b.n	400998 <pio_configure_pin+0x7c>
	switch (ul_flags & PIO_TYPE_Msk) {
  400950:	f1b3 5f40 	cmp.w	r3, #805306368	; 0x30000000
  400954:	d055      	beq.n	400a02 <pio_configure_pin+0xe6>
  400956:	f1b3 5f60 	cmp.w	r3, #939524096	; 0x38000000
  40095a:	d052      	beq.n	400a02 <pio_configure_pin+0xe6>
  40095c:	f1b3 5f20 	cmp.w	r3, #671088640	; 0x28000000
  400960:	d1f4      	bne.n	40094c <pio_configure_pin+0x30>
		pio_set_input(p_pio, (1 << (ul_pin & 0x1F)), ul_flags);
  400962:	f000 011f 	and.w	r1, r0, #31
  400966:	2601      	movs	r6, #1
  400968:	462a      	mov	r2, r5
  40096a:	fa06 f101 	lsl.w	r1, r6, r1
  40096e:	4620      	mov	r0, r4
  400970:	4b2f      	ldr	r3, [pc, #188]	; (400a30 <pio_configure_pin+0x114>)
  400972:	4798      	blx	r3
	return 1;
  400974:	4630      	mov	r0, r6
		break;
  400976:	e00f      	b.n	400998 <pio_configure_pin+0x7c>
		pio_set_peripheral(p_pio, PIO_PERIPH_A, (1 << (ul_pin & 0x1F)));
  400978:	f000 001f 	and.w	r0, r0, #31
  40097c:	2601      	movs	r6, #1
  40097e:	4086      	lsls	r6, r0
  400980:	4632      	mov	r2, r6
  400982:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
  400986:	4620      	mov	r0, r4
  400988:	4b2a      	ldr	r3, [pc, #168]	; (400a34 <pio_configure_pin+0x118>)
  40098a:	4798      	blx	r3
	if (ul_pull_up_enable) {
  40098c:	f015 0f01 	tst.w	r5, #1
		p_pio->PIO_PUER = ul_mask;
  400990:	bf14      	ite	ne
  400992:	6666      	strne	r6, [r4, #100]	; 0x64
		p_pio->PIO_PUDR = ul_mask;
  400994:	6626      	streq	r6, [r4, #96]	; 0x60
	return 1;
  400996:	2001      	movs	r0, #1
}
  400998:	b002      	add	sp, #8
  40099a:	bd70      	pop	{r4, r5, r6, pc}
		pio_set_peripheral(p_pio, PIO_PERIPH_B, (1 << (ul_pin & 0x1F)));
  40099c:	f000 001f 	and.w	r0, r0, #31
  4009a0:	2601      	movs	r6, #1
  4009a2:	4086      	lsls	r6, r0
  4009a4:	4632      	mov	r2, r6
  4009a6:	f04f 5180 	mov.w	r1, #268435456	; 0x10000000
  4009aa:	4620      	mov	r0, r4
  4009ac:	4b21      	ldr	r3, [pc, #132]	; (400a34 <pio_configure_pin+0x118>)
  4009ae:	4798      	blx	r3
	if (ul_pull_up_enable) {
  4009b0:	f015 0f01 	tst.w	r5, #1
		p_pio->PIO_PUER = ul_mask;
  4009b4:	bf14      	ite	ne
  4009b6:	6666      	strne	r6, [r4, #100]	; 0x64
		p_pio->PIO_PUDR = ul_mask;
  4009b8:	6626      	streq	r6, [r4, #96]	; 0x60
	return 1;
  4009ba:	2001      	movs	r0, #1
  4009bc:	e7ec      	b.n	400998 <pio_configure_pin+0x7c>
		pio_set_peripheral(p_pio, PIO_PERIPH_C, (1 << (ul_pin & 0x1F)));
  4009be:	f000 001f 	and.w	r0, r0, #31
  4009c2:	2601      	movs	r6, #1
  4009c4:	4086      	lsls	r6, r0
  4009c6:	4632      	mov	r2, r6
  4009c8:	f04f 51c0 	mov.w	r1, #402653184	; 0x18000000
  4009cc:	4620      	mov	r0, r4
  4009ce:	4b19      	ldr	r3, [pc, #100]	; (400a34 <pio_configure_pin+0x118>)
  4009d0:	4798      	blx	r3
	if (ul_pull_up_enable) {
  4009d2:	f015 0f01 	tst.w	r5, #1
		p_pio->PIO_PUER = ul_mask;
  4009d6:	bf14      	ite	ne
  4009d8:	6666      	strne	r6, [r4, #100]	; 0x64
		p_pio->PIO_PUDR = ul_mask;
  4009da:	6626      	streq	r6, [r4, #96]	; 0x60
	return 1;
  4009dc:	2001      	movs	r0, #1
  4009de:	e7db      	b.n	400998 <pio_configure_pin+0x7c>
		pio_set_peripheral(p_pio, PIO_PERIPH_D, (1 << (ul_pin & 0x1F)));
  4009e0:	f000 001f 	and.w	r0, r0, #31
  4009e4:	2601      	movs	r6, #1
  4009e6:	4086      	lsls	r6, r0
  4009e8:	4632      	mov	r2, r6
  4009ea:	f04f 5100 	mov.w	r1, #536870912	; 0x20000000
  4009ee:	4620      	mov	r0, r4
  4009f0:	4b10      	ldr	r3, [pc, #64]	; (400a34 <pio_configure_pin+0x118>)
  4009f2:	4798      	blx	r3
	if (ul_pull_up_enable) {
  4009f4:	f015 0f01 	tst.w	r5, #1
		p_pio->PIO_PUER = ul_mask;
  4009f8:	bf14      	ite	ne
  4009fa:	6666      	strne	r6, [r4, #100]	; 0x64
		p_pio->PIO_PUDR = ul_mask;
  4009fc:	6626      	streq	r6, [r4, #96]	; 0x60
	return 1;
  4009fe:	2001      	movs	r0, #1
  400a00:	e7ca      	b.n	400998 <pio_configure_pin+0x7c>
				((ul_flags & PIO_TYPE_PIO_OUTPUT_1)
  400a02:	f005 5260 	and.w	r2, r5, #939524096	; 0x38000000
		pio_set_output(p_pio, (1 << (ul_pin & 0x1F)),
  400a06:	f000 011f 	and.w	r1, r0, #31
  400a0a:	2601      	movs	r6, #1
  400a0c:	ea05 0306 	and.w	r3, r5, r6
  400a10:	9300      	str	r3, [sp, #0]
  400a12:	f3c5 0380 	ubfx	r3, r5, #2, #1
  400a16:	f1b2 5f60 	cmp.w	r2, #939524096	; 0x38000000
  400a1a:	bf14      	ite	ne
  400a1c:	2200      	movne	r2, #0
  400a1e:	2201      	moveq	r2, #1
  400a20:	fa06 f101 	lsl.w	r1, r6, r1
  400a24:	4620      	mov	r0, r4
  400a26:	4c04      	ldr	r4, [pc, #16]	; (400a38 <pio_configure_pin+0x11c>)
  400a28:	47a0      	blx	r4
	return 1;
  400a2a:	4630      	mov	r0, r6
		break;
  400a2c:	e7b4      	b.n	400998 <pio_configure_pin+0x7c>
  400a2e:	bf00      	nop
  400a30:	0040084d 	.word	0x0040084d
  400a34:	004007bd 	.word	0x004007bd
  400a38:	0040087f 	.word	0x0040087f

00400a3c <pio_configure_pin_group>:
{
  400a3c:	b570      	push	{r4, r5, r6, lr}
  400a3e:	b082      	sub	sp, #8
  400a40:	4605      	mov	r5, r0
  400a42:	460e      	mov	r6, r1
  400a44:	4614      	mov	r4, r2
	switch (ul_flags & PIO_TYPE_Msk) {
  400a46:	f002 43f0 	and.w	r3, r2, #2013265920	; 0x78000000
  400a4a:	f1b3 5f00 	cmp.w	r3, #536870912	; 0x20000000
  400a4e:	d03d      	beq.n	400acc <pio_configure_pin_group+0x90>
  400a50:	d80a      	bhi.n	400a68 <pio_configure_pin_group+0x2c>
  400a52:	f1b3 5f80 	cmp.w	r3, #268435456	; 0x10000000
  400a56:	d021      	beq.n	400a9c <pio_configure_pin_group+0x60>
  400a58:	f1b3 5fc0 	cmp.w	r3, #402653184	; 0x18000000
  400a5c:	d02a      	beq.n	400ab4 <pio_configure_pin_group+0x78>
  400a5e:	f1b3 6f00 	cmp.w	r3, #134217728	; 0x8000000
  400a62:	d00e      	beq.n	400a82 <pio_configure_pin_group+0x46>
		return 0;
  400a64:	2000      	movs	r0, #0
  400a66:	e017      	b.n	400a98 <pio_configure_pin_group+0x5c>
	switch (ul_flags & PIO_TYPE_Msk) {
  400a68:	f1b3 5f40 	cmp.w	r3, #805306368	; 0x30000000
  400a6c:	d03a      	beq.n	400ae4 <pio_configure_pin_group+0xa8>
  400a6e:	f1b3 5f60 	cmp.w	r3, #939524096	; 0x38000000
  400a72:	d037      	beq.n	400ae4 <pio_configure_pin_group+0xa8>
  400a74:	f1b3 5f20 	cmp.w	r3, #671088640	; 0x28000000
  400a78:	d1f4      	bne.n	400a64 <pio_configure_pin_group+0x28>
		pio_set_input(p_pio, ul_mask, ul_flags);
  400a7a:	4b23      	ldr	r3, [pc, #140]	; (400b08 <pio_configure_pin_group+0xcc>)
  400a7c:	4798      	blx	r3
	return 1;
  400a7e:	2001      	movs	r0, #1
		break;
  400a80:	e00a      	b.n	400a98 <pio_configure_pin_group+0x5c>
		pio_set_peripheral(p_pio, PIO_PERIPH_A, ul_mask);
  400a82:	460a      	mov	r2, r1
  400a84:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
  400a88:	4b20      	ldr	r3, [pc, #128]	; (400b0c <pio_configure_pin_group+0xd0>)
  400a8a:	4798      	blx	r3
	if (ul_pull_up_enable) {
  400a8c:	f014 0f01 	tst.w	r4, #1
		p_pio->PIO_PUER = ul_mask;
  400a90:	bf14      	ite	ne
  400a92:	666e      	strne	r6, [r5, #100]	; 0x64
		p_pio->PIO_PUDR = ul_mask;
  400a94:	662e      	streq	r6, [r5, #96]	; 0x60
	return 1;
  400a96:	2001      	movs	r0, #1
}
  400a98:	b002      	add	sp, #8
  400a9a:	bd70      	pop	{r4, r5, r6, pc}
		pio_set_peripheral(p_pio, PIO_PERIPH_B, ul_mask);
  400a9c:	460a      	mov	r2, r1
  400a9e:	f04f 5180 	mov.w	r1, #268435456	; 0x10000000
  400aa2:	4b1a      	ldr	r3, [pc, #104]	; (400b0c <pio_configure_pin_group+0xd0>)
  400aa4:	4798      	blx	r3
	if (ul_pull_up_enable) {
  400aa6:	f014 0f01 	tst.w	r4, #1
		p_pio->PIO_PUER = ul_mask;
  400aaa:	bf14      	ite	ne
  400aac:	666e      	strne	r6, [r5, #100]	; 0x64
		p_pio->PIO_PUDR = ul_mask;
  400aae:	662e      	streq	r6, [r5, #96]	; 0x60
	return 1;
  400ab0:	2001      	movs	r0, #1
  400ab2:	e7f1      	b.n	400a98 <pio_configure_pin_group+0x5c>
		pio_set_peripheral(p_pio, PIO_PERIPH_C, ul_mask);
  400ab4:	460a      	mov	r2, r1
  400ab6:	f04f 51c0 	mov.w	r1, #402653184	; 0x18000000
  400aba:	4b14      	ldr	r3, [pc, #80]	; (400b0c <pio_configure_pin_group+0xd0>)
  400abc:	4798      	blx	r3
	if (ul_pull_up_enable) {
  400abe:	f014 0f01 	tst.w	r4, #1
		p_pio->PIO_PUER = ul_mask;
  400ac2:	bf14      	ite	ne
  400ac4:	666e      	strne	r6, [r5, #100]	; 0x64
		p_pio->PIO_PUDR = ul_mask;
  400ac6:	662e      	streq	r6, [r5, #96]	; 0x60
	return 1;
  400ac8:	2001      	movs	r0, #1
  400aca:	e7e5      	b.n	400a98 <pio_configure_pin_group+0x5c>
		pio_set_peripheral(p_pio, PIO_PERIPH_D, ul_mask);
  400acc:	460a      	mov	r2, r1
  400ace:	f04f 5100 	mov.w	r1, #536870912	; 0x20000000
  400ad2:	4b0e      	ldr	r3, [pc, #56]	; (400b0c <pio_configure_pin_group+0xd0>)
  400ad4:	4798      	blx	r3
	if (ul_pull_up_enable) {
  400ad6:	f014 0f01 	tst.w	r4, #1
		p_pio->PIO_PUER = ul_mask;
  400ada:	bf14      	ite	ne
  400adc:	666e      	strne	r6, [r5, #100]	; 0x64
		p_pio->PIO_PUDR = ul_mask;
  400ade:	662e      	streq	r6, [r5, #96]	; 0x60
	return 1;
  400ae0:	2001      	movs	r0, #1
  400ae2:	e7d9      	b.n	400a98 <pio_configure_pin_group+0x5c>
				((ul_flags & PIO_TYPE_PIO_OUTPUT_1)
  400ae4:	f004 5260 	and.w	r2, r4, #939524096	; 0x38000000
		pio_set_output(p_pio, ul_mask,
  400ae8:	f004 0301 	and.w	r3, r4, #1
  400aec:	9300      	str	r3, [sp, #0]
  400aee:	f3c4 0380 	ubfx	r3, r4, #2, #1
  400af2:	f1b2 5f60 	cmp.w	r2, #939524096	; 0x38000000
  400af6:	bf14      	ite	ne
  400af8:	2200      	movne	r2, #0
  400afa:	2201      	moveq	r2, #1
  400afc:	4631      	mov	r1, r6
  400afe:	4628      	mov	r0, r5
  400b00:	4c03      	ldr	r4, [pc, #12]	; (400b10 <pio_configure_pin_group+0xd4>)
  400b02:	47a0      	blx	r4
	return 1;
  400b04:	2001      	movs	r0, #1
		break;
  400b06:	e7c7      	b.n	400a98 <pio_configure_pin_group+0x5c>
  400b08:	0040084d 	.word	0x0040084d
  400b0c:	004007bd 	.word	0x004007bd
  400b10:	0040087f 	.word	0x0040087f

00400b14 <pio_handler_process>:
 *
 * \param p_pio PIO controller base address.
 * \param ul_id PIO controller ID.
 */
void pio_handler_process(Pio *p_pio, uint32_t ul_id)
{
  400b14:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  400b18:	4604      	mov	r4, r0
  400b1a:	4688      	mov	r8, r1
	uint32_t status;
	uint32_t i;

	/* Read PIO controller status */
	status = pio_get_interrupt_status(p_pio);
  400b1c:	4b0e      	ldr	r3, [pc, #56]	; (400b58 <pio_handler_process+0x44>)
  400b1e:	4798      	blx	r3
  400b20:	4605      	mov	r5, r0
	status &= pio_get_interrupt_mask(p_pio);
  400b22:	4620      	mov	r0, r4
  400b24:	4b0d      	ldr	r3, [pc, #52]	; (400b5c <pio_handler_process+0x48>)
  400b26:	4798      	blx	r3

	/* Check pending events */
	if (status != 0) {
  400b28:	4005      	ands	r5, r0
  400b2a:	d013      	beq.n	400b54 <pio_handler_process+0x40>
  400b2c:	4c0c      	ldr	r4, [pc, #48]	; (400b60 <pio_handler_process+0x4c>)
  400b2e:	f104 0660 	add.w	r6, r4, #96	; 0x60
  400b32:	e003      	b.n	400b3c <pio_handler_process+0x28>
							gs_interrupt_sources[i].mask);
					status &= ~(gs_interrupt_sources[i].mask);
				}
			}
			i++;
			if (i >= MAX_INTERRUPT_SOURCES) {
  400b34:	42b4      	cmp	r4, r6
  400b36:	d00d      	beq.n	400b54 <pio_handler_process+0x40>
  400b38:	3410      	adds	r4, #16
		while (status != 0) {
  400b3a:	b15d      	cbz	r5, 400b54 <pio_handler_process+0x40>
			if (gs_interrupt_sources[i].id == ul_id) {
  400b3c:	6820      	ldr	r0, [r4, #0]
  400b3e:	4540      	cmp	r0, r8
  400b40:	d1f8      	bne.n	400b34 <pio_handler_process+0x20>
				if ((status & gs_interrupt_sources[i].mask) != 0) {
  400b42:	6861      	ldr	r1, [r4, #4]
  400b44:	4229      	tst	r1, r5
  400b46:	d0f5      	beq.n	400b34 <pio_handler_process+0x20>
					gs_interrupt_sources[i].handler(gs_interrupt_sources[i].id,
  400b48:	68e3      	ldr	r3, [r4, #12]
  400b4a:	4798      	blx	r3
					status &= ~(gs_interrupt_sources[i].mask);
  400b4c:	6863      	ldr	r3, [r4, #4]
  400b4e:	ea25 0503 	bic.w	r5, r5, r3
  400b52:	e7ef      	b.n	400b34 <pio_handler_process+0x20>
  400b54:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  400b58:	004008d7 	.word	0x004008d7
  400b5c:	004008db 	.word	0x004008db
  400b60:	20000ad4 	.word	0x20000ad4

00400b64 <pio_handler_set>:
 *
 * \return 0 if successful, 1 if the maximum number of sources has been defined.
 */
uint32_t pio_handler_set(Pio *p_pio, uint32_t ul_id, uint32_t ul_mask,
		uint32_t ul_attr, void (*p_handler) (uint32_t, uint32_t))
{
  400b64:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    uint8_t i;
	struct s_interrupt_source *pSource;

	if (gs_ul_nb_sources >= MAX_INTERRUPT_SOURCES)
  400b66:	4c18      	ldr	r4, [pc, #96]	; (400bc8 <pio_handler_set+0x64>)
  400b68:	6826      	ldr	r6, [r4, #0]
  400b6a:	2e06      	cmp	r6, #6
  400b6c:	d829      	bhi.n	400bc2 <pio_handler_set+0x5e>
  400b6e:	f04f 0c00 	mov.w	ip, #0
  400b72:	4664      	mov	r4, ip
		return 1;

    /* Check interrupt for this pin, if already defined, redefine it. */
	for (i = 0; i <= gs_ul_nb_sources; i++) {
		pSource = &(gs_interrupt_sources[i]);
		if (pSource->id == ul_id && pSource->mask == ul_mask) {
  400b74:	4f15      	ldr	r7, [pc, #84]	; (400bcc <pio_handler_set+0x68>)
  400b76:	e004      	b.n	400b82 <pio_handler_set+0x1e>
	for (i = 0; i <= gs_ul_nb_sources; i++) {
  400b78:	3401      	adds	r4, #1
  400b7a:	b2e4      	uxtb	r4, r4
  400b7c:	46a4      	mov	ip, r4
  400b7e:	42a6      	cmp	r6, r4
  400b80:	d309      	bcc.n	400b96 <pio_handler_set+0x32>
		pSource = &(gs_interrupt_sources[i]);
  400b82:	46a6      	mov	lr, r4
		if (pSource->id == ul_id && pSource->mask == ul_mask) {
  400b84:	0125      	lsls	r5, r4, #4
  400b86:	597d      	ldr	r5, [r7, r5]
  400b88:	428d      	cmp	r5, r1
  400b8a:	d1f5      	bne.n	400b78 <pio_handler_set+0x14>
  400b8c:	eb07 1504 	add.w	r5, r7, r4, lsl #4
  400b90:	686d      	ldr	r5, [r5, #4]
  400b92:	4295      	cmp	r5, r2
  400b94:	d1f0      	bne.n	400b78 <pio_handler_set+0x14>
			break;
		}
	}

	/* Define new source */
	pSource->id = ul_id;
  400b96:	4d0d      	ldr	r5, [pc, #52]	; (400bcc <pio_handler_set+0x68>)
  400b98:	ea4f 1e0e 	mov.w	lr, lr, lsl #4
  400b9c:	eb05 040e 	add.w	r4, r5, lr
  400ba0:	f845 100e 	str.w	r1, [r5, lr]
	pSource->mask = ul_mask;
  400ba4:	6062      	str	r2, [r4, #4]
	pSource->attr = ul_attr;
  400ba6:	60a3      	str	r3, [r4, #8]
	pSource->handler = p_handler;
  400ba8:	9906      	ldr	r1, [sp, #24]
  400baa:	60e1      	str	r1, [r4, #12]
	if (i == gs_ul_nb_sources + 1) {
  400bac:	3601      	adds	r6, #1
  400bae:	4566      	cmp	r6, ip
		gs_ul_nb_sources++;
  400bb0:	bf04      	itt	eq
  400bb2:	4905      	ldreq	r1, [pc, #20]	; (400bc8 <pio_handler_set+0x64>)
  400bb4:	600e      	streq	r6, [r1, #0]
  400bb6:	4611      	mov	r1, r2
	}

	/* Configure interrupt mode */
	pio_configure_interrupt(p_pio, ul_mask, ul_attr);
  400bb8:	461a      	mov	r2, r3
  400bba:	4b05      	ldr	r3, [pc, #20]	; (400bd0 <pio_handler_set+0x6c>)
  400bbc:	4798      	blx	r3

	return 0;
  400bbe:	2000      	movs	r0, #0
  400bc0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
		return 1;
  400bc2:	2001      	movs	r0, #1
}
  400bc4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  400bc6:	bf00      	nop
  400bc8:	20000b44 	.word	0x20000b44
  400bcc:	20000ad4 	.word	0x20000ad4
  400bd0:	004008a5 	.word	0x004008a5

00400bd4 <PIOA_Handler>:
/**
 * \brief Parallel IO Controller A interrupt handler.
 * Redefined PIOA interrupt handler for NVIC interrupt table.
 */
void PIOA_Handler(void)
{
  400bd4:	b508      	push	{r3, lr}
	pio_handler_process(PIOA, ID_PIOA);
  400bd6:	210b      	movs	r1, #11
  400bd8:	4801      	ldr	r0, [pc, #4]	; (400be0 <PIOA_Handler+0xc>)
  400bda:	4b02      	ldr	r3, [pc, #8]	; (400be4 <PIOA_Handler+0x10>)
  400bdc:	4798      	blx	r3
  400bde:	bd08      	pop	{r3, pc}
  400be0:	400e0e00 	.word	0x400e0e00
  400be4:	00400b15 	.word	0x00400b15

00400be8 <PIOB_Handler>:
/**
 * \brief Parallel IO Controller B interrupt handler
 * Redefined PIOB interrupt handler for NVIC interrupt table.
 */
void PIOB_Handler(void)
{
  400be8:	b508      	push	{r3, lr}
    pio_handler_process(PIOB, ID_PIOB);
  400bea:	210c      	movs	r1, #12
  400bec:	4801      	ldr	r0, [pc, #4]	; (400bf4 <PIOB_Handler+0xc>)
  400bee:	4b02      	ldr	r3, [pc, #8]	; (400bf8 <PIOB_Handler+0x10>)
  400bf0:	4798      	blx	r3
  400bf2:	bd08      	pop	{r3, pc}
  400bf4:	400e1000 	.word	0x400e1000
  400bf8:	00400b15 	.word	0x00400b15

00400bfc <PIOC_Handler>:
/**
 * \brief Parallel IO Controller C interrupt handler.
 * Redefined PIOC interrupt handler for NVIC interrupt table.
 */
void PIOC_Handler(void)
{
  400bfc:	b508      	push	{r3, lr}
	pio_handler_process(PIOC, ID_PIOC);
  400bfe:	210d      	movs	r1, #13
  400c00:	4801      	ldr	r0, [pc, #4]	; (400c08 <PIOC_Handler+0xc>)
  400c02:	4b02      	ldr	r3, [pc, #8]	; (400c0c <PIOC_Handler+0x10>)
  400c04:	4798      	blx	r3
  400c06:	bd08      	pop	{r3, pc}
  400c08:	400e1200 	.word	0x400e1200
  400c0c:	00400b15 	.word	0x00400b15

00400c10 <pmc_switch_mck_to_pllack>:
 */
uint32_t pmc_switch_mck_to_pllack(uint32_t ul_pres)
{
	uint32_t ul_timeout;

	PMC->PMC_MCKR = (PMC->PMC_MCKR & (~PMC_MCKR_PRES_Msk)) | ul_pres;
  400c10:	4a17      	ldr	r2, [pc, #92]	; (400c70 <pmc_switch_mck_to_pllack+0x60>)
  400c12:	6b13      	ldr	r3, [r2, #48]	; 0x30
  400c14:	f023 0370 	bic.w	r3, r3, #112	; 0x70
  400c18:	4318      	orrs	r0, r3
  400c1a:	6310      	str	r0, [r2, #48]	; 0x30
	for (ul_timeout = PMC_TIMEOUT; !(PMC->PMC_SR & PMC_SR_MCKRDY);
  400c1c:	6e93      	ldr	r3, [r2, #104]	; 0x68
  400c1e:	f013 0f08 	tst.w	r3, #8
  400c22:	d10a      	bne.n	400c3a <pmc_switch_mck_to_pllack+0x2a>
  400c24:	f44f 6300 	mov.w	r3, #2048	; 0x800
  400c28:	4911      	ldr	r1, [pc, #68]	; (400c70 <pmc_switch_mck_to_pllack+0x60>)
  400c2a:	6e8a      	ldr	r2, [r1, #104]	; 0x68
  400c2c:	f012 0f08 	tst.w	r2, #8
  400c30:	d103      	bne.n	400c3a <pmc_switch_mck_to_pllack+0x2a>
			--ul_timeout) {
		if (ul_timeout == 0) {
  400c32:	3b01      	subs	r3, #1
  400c34:	d1f9      	bne.n	400c2a <pmc_switch_mck_to_pllack+0x1a>
			return 1;
  400c36:	2001      	movs	r0, #1
  400c38:	4770      	bx	lr
		}
	}

	PMC->PMC_MCKR = (PMC->PMC_MCKR & (~PMC_MCKR_CSS_Msk)) |
  400c3a:	4a0d      	ldr	r2, [pc, #52]	; (400c70 <pmc_switch_mck_to_pllack+0x60>)
  400c3c:	6b13      	ldr	r3, [r2, #48]	; 0x30
  400c3e:	f023 0303 	bic.w	r3, r3, #3
  400c42:	f043 0302 	orr.w	r3, r3, #2
  400c46:	6313      	str	r3, [r2, #48]	; 0x30
			PMC_MCKR_CSS_PLLA_CLK;

	for (ul_timeout = PMC_TIMEOUT; !(PMC->PMC_SR & PMC_SR_MCKRDY);
  400c48:	6e93      	ldr	r3, [r2, #104]	; 0x68
  400c4a:	f013 0f08 	tst.w	r3, #8
  400c4e:	d10a      	bne.n	400c66 <pmc_switch_mck_to_pllack+0x56>
  400c50:	f44f 6300 	mov.w	r3, #2048	; 0x800
  400c54:	4906      	ldr	r1, [pc, #24]	; (400c70 <pmc_switch_mck_to_pllack+0x60>)
  400c56:	6e8a      	ldr	r2, [r1, #104]	; 0x68
  400c58:	f012 0f08 	tst.w	r2, #8
  400c5c:	d105      	bne.n	400c6a <pmc_switch_mck_to_pllack+0x5a>
			--ul_timeout) {
		if (ul_timeout == 0) {
  400c5e:	3b01      	subs	r3, #1
  400c60:	d1f9      	bne.n	400c56 <pmc_switch_mck_to_pllack+0x46>
			return 1;
  400c62:	2001      	movs	r0, #1
		}
	}

	return 0;
}
  400c64:	4770      	bx	lr
	return 0;
  400c66:	2000      	movs	r0, #0
  400c68:	4770      	bx	lr
  400c6a:	2000      	movs	r0, #0
  400c6c:	4770      	bx	lr
  400c6e:	bf00      	nop
  400c70:	400e0400 	.word	0x400e0400

00400c74 <pmc_switch_mainck_to_xtal>:
 */
void pmc_switch_mainck_to_xtal(uint32_t ul_bypass,
		uint32_t ul_xtal_startup_time)
{
	/* Enable Main Xtal oscillator */
	if (ul_bypass) {
  400c74:	b9c8      	cbnz	r0, 400caa <pmc_switch_mainck_to_xtal+0x36>
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTEN) |
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTBY |
				CKGR_MOR_MOSCSEL;
	} else {
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTBY) |
  400c76:	4a11      	ldr	r2, [pc, #68]	; (400cbc <pmc_switch_mainck_to_xtal+0x48>)
  400c78:	6a13      	ldr	r3, [r2, #32]
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTEN |
				CKGR_MOR_MOSCXTST(ul_xtal_startup_time);
  400c7a:	0209      	lsls	r1, r1, #8
  400c7c:	b289      	uxth	r1, r1
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTEN |
  400c7e:	f423 135c 	bic.w	r3, r3, #3604480	; 0x370000
  400c82:	f023 0303 	bic.w	r3, r3, #3
  400c86:	f443 135c 	orr.w	r3, r3, #3604480	; 0x370000
  400c8a:	f043 0301 	orr.w	r3, r3, #1
  400c8e:	430b      	orrs	r3, r1
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTBY) |
  400c90:	6213      	str	r3, [r2, #32]
		/* Wait the Xtal to stabilize */
		while (!(PMC->PMC_SR & PMC_SR_MOSCXTS));
  400c92:	6e93      	ldr	r3, [r2, #104]	; 0x68
  400c94:	f013 0f01 	tst.w	r3, #1
  400c98:	d0fb      	beq.n	400c92 <pmc_switch_mainck_to_xtal+0x1e>

		PMC->CKGR_MOR |= CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCSEL;
  400c9a:	4a08      	ldr	r2, [pc, #32]	; (400cbc <pmc_switch_mainck_to_xtal+0x48>)
  400c9c:	6a13      	ldr	r3, [r2, #32]
  400c9e:	f043 739b 	orr.w	r3, r3, #20316160	; 0x1360000
  400ca2:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
  400ca6:	6213      	str	r3, [r2, #32]
  400ca8:	4770      	bx	lr
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTEN) |
  400caa:	4904      	ldr	r1, [pc, #16]	; (400cbc <pmc_switch_mainck_to_xtal+0x48>)
  400cac:	6a0b      	ldr	r3, [r1, #32]
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTBY |
  400cae:	4a04      	ldr	r2, [pc, #16]	; (400cc0 <pmc_switch_mainck_to_xtal+0x4c>)
  400cb0:	401a      	ands	r2, r3
  400cb2:	4b04      	ldr	r3, [pc, #16]	; (400cc4 <pmc_switch_mainck_to_xtal+0x50>)
  400cb4:	4313      	orrs	r3, r2
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTEN) |
  400cb6:	620b      	str	r3, [r1, #32]
  400cb8:	4770      	bx	lr
  400cba:	bf00      	nop
  400cbc:	400e0400 	.word	0x400e0400
  400cc0:	fec8fffc 	.word	0xfec8fffc
  400cc4:	01370002 	.word	0x01370002

00400cc8 <pmc_osc_is_ready_mainck>:
 * \retval 1 Xtal is ready.
 * \retval 0 Xtal is not ready.
 */
uint32_t pmc_osc_is_ready_mainck(void)
{
	return PMC->PMC_SR & PMC_SR_MOSCSELS;
  400cc8:	4b02      	ldr	r3, [pc, #8]	; (400cd4 <pmc_osc_is_ready_mainck+0xc>)
  400cca:	6e98      	ldr	r0, [r3, #104]	; 0x68
}
  400ccc:	f400 3080 	and.w	r0, r0, #65536	; 0x10000
  400cd0:	4770      	bx	lr
  400cd2:	bf00      	nop
  400cd4:	400e0400 	.word	0x400e0400

00400cd8 <pmc_disable_pllack>:
void pmc_disable_pllack(void)
{
#if (SAM4C || SAM4CM || SAM4CP || SAMG)
	PMC->CKGR_PLLAR = CKGR_PLLAR_MULA(0);
#else
	PMC->CKGR_PLLAR = CKGR_PLLAR_ONE | CKGR_PLLAR_MULA(0);
  400cd8:	f04f 5200 	mov.w	r2, #536870912	; 0x20000000
  400cdc:	4b01      	ldr	r3, [pc, #4]	; (400ce4 <pmc_disable_pllack+0xc>)
  400cde:	629a      	str	r2, [r3, #40]	; 0x28
  400ce0:	4770      	bx	lr
  400ce2:	bf00      	nop
  400ce4:	400e0400 	.word	0x400e0400

00400ce8 <pmc_is_locked_pllack>:
 * \retval 0 Not locked.
 * \retval 1 Locked.
 */
uint32_t pmc_is_locked_pllack(void)
{
	return (PMC->PMC_SR & PMC_SR_LOCKA);
  400ce8:	4b02      	ldr	r3, [pc, #8]	; (400cf4 <pmc_is_locked_pllack+0xc>)
  400cea:	6e98      	ldr	r0, [r3, #104]	; 0x68
}
  400cec:	f000 0002 	and.w	r0, r0, #2
  400cf0:	4770      	bx	lr
  400cf2:	bf00      	nop
  400cf4:	400e0400 	.word	0x400e0400

00400cf8 <pmc_enable_periph_clk>:
 * \retval 0 Success.
 * \retval 1 Invalid parameter.
 */
uint32_t pmc_enable_periph_clk(uint32_t ul_id)
{
	if (ul_id > MAX_PERIPH_ID) {
  400cf8:	281f      	cmp	r0, #31
  400cfa:	d80c      	bhi.n	400d16 <pmc_enable_periph_clk+0x1e>
		return 1;
	}

	if (ul_id < 32) {
		if ((PMC->PMC_PCSR0 & (1u << ul_id)) != (1u << ul_id)) {
  400cfc:	4b08      	ldr	r3, [pc, #32]	; (400d20 <pmc_enable_periph_clk+0x28>)
  400cfe:	699a      	ldr	r2, [r3, #24]
  400d00:	2301      	movs	r3, #1
  400d02:	4083      	lsls	r3, r0
  400d04:	4393      	bics	r3, r2
  400d06:	d008      	beq.n	400d1a <pmc_enable_periph_clk+0x22>
			PMC->PMC_PCER0 = 1 << ul_id;
  400d08:	2301      	movs	r3, #1
  400d0a:	fa03 f000 	lsl.w	r0, r3, r0
  400d0e:	4b04      	ldr	r3, [pc, #16]	; (400d20 <pmc_enable_periph_clk+0x28>)
  400d10:	6118      	str	r0, [r3, #16]
			PMC->PMC_PCER1 = 1 << ul_id;
		}
#endif
	}

	return 0;
  400d12:	2000      	movs	r0, #0
  400d14:	4770      	bx	lr
		return 1;
  400d16:	2001      	movs	r0, #1
  400d18:	4770      	bx	lr
	return 0;
  400d1a:	2000      	movs	r0, #0
}
  400d1c:	4770      	bx	lr
  400d1e:	bf00      	nop
  400d20:	400e0400 	.word	0x400e0400

00400d24 <Dummy_Handler>:

/**
 * \brief Default interrupt handler for unused IRQs.
 */
void Dummy_Handler(void)
{
  400d24:	e7fe      	b.n	400d24 <Dummy_Handler>
	...

00400d28 <Reset_Handler>:
/**
 * \brief This is the code that gets called on processor reset.
 * To initialize the device, and call the main() routine.
 */
void Reset_Handler(void)
{
  400d28:	b508      	push	{r3, lr}

	/* Initialize the relocate segment */
	pSrc = &_etext;
	pDest = &_srelocate;

	if (pSrc != pDest) {
  400d2a:	4b1c      	ldr	r3, [pc, #112]	; (400d9c <Reset_Handler+0x74>)
  400d2c:	4a1c      	ldr	r2, [pc, #112]	; (400da0 <Reset_Handler+0x78>)
  400d2e:	429a      	cmp	r2, r3
  400d30:	d010      	beq.n	400d54 <Reset_Handler+0x2c>
		for (; pDest < &_erelocate;) {
  400d32:	4b1c      	ldr	r3, [pc, #112]	; (400da4 <Reset_Handler+0x7c>)
  400d34:	4a19      	ldr	r2, [pc, #100]	; (400d9c <Reset_Handler+0x74>)
  400d36:	429a      	cmp	r2, r3
  400d38:	d20c      	bcs.n	400d54 <Reset_Handler+0x2c>
  400d3a:	3b01      	subs	r3, #1
  400d3c:	1a9b      	subs	r3, r3, r2
  400d3e:	f023 0303 	bic.w	r3, r3, #3
  400d42:	3304      	adds	r3, #4
  400d44:	4413      	add	r3, r2
  400d46:	4916      	ldr	r1, [pc, #88]	; (400da0 <Reset_Handler+0x78>)
			*pDest++ = *pSrc++;
  400d48:	f851 0b04 	ldr.w	r0, [r1], #4
  400d4c:	f842 0b04 	str.w	r0, [r2], #4
		for (; pDest < &_erelocate;) {
  400d50:	429a      	cmp	r2, r3
  400d52:	d1f9      	bne.n	400d48 <Reset_Handler+0x20>
		}
	}

	/* Clear the zero segment */
	for (pDest = &_szero; pDest < &_ezero;) {
  400d54:	4b14      	ldr	r3, [pc, #80]	; (400da8 <Reset_Handler+0x80>)
  400d56:	4a15      	ldr	r2, [pc, #84]	; (400dac <Reset_Handler+0x84>)
  400d58:	429a      	cmp	r2, r3
  400d5a:	d20a      	bcs.n	400d72 <Reset_Handler+0x4a>
  400d5c:	3b01      	subs	r3, #1
  400d5e:	1a9b      	subs	r3, r3, r2
  400d60:	f023 0303 	bic.w	r3, r3, #3
  400d64:	3304      	adds	r3, #4
  400d66:	4413      	add	r3, r2
		*pDest++ = 0;
  400d68:	2100      	movs	r1, #0
  400d6a:	f842 1b04 	str.w	r1, [r2], #4
	for (pDest = &_szero; pDest < &_ezero;) {
  400d6e:	4293      	cmp	r3, r2
  400d70:	d1fb      	bne.n	400d6a <Reset_Handler+0x42>
	}

	/* Set the vector table base address */
	pSrc = (uint32_t *) & _sfixed;
	SCB->VTOR = ((uint32_t) pSrc & SCB_VTOR_TBLOFF_Msk);
  400d72:	4b0f      	ldr	r3, [pc, #60]	; (400db0 <Reset_Handler+0x88>)
  400d74:	f023 4260 	bic.w	r2, r3, #3758096384	; 0xe0000000
  400d78:	f022 027f 	bic.w	r2, r2, #127	; 0x7f
  400d7c:	490d      	ldr	r1, [pc, #52]	; (400db4 <Reset_Handler+0x8c>)
  400d7e:	608a      	str	r2, [r1, #8]

	if (((uint32_t) pSrc >= IRAM_ADDR) && ((uint32_t) pSrc < IRAM_ADDR + IRAM_SIZE)) {
  400d80:	f103 4360 	add.w	r3, r3, #3758096384	; 0xe0000000
  400d84:	f5b3 4fc0 	cmp.w	r3, #24576	; 0x6000
  400d88:	d203      	bcs.n	400d92 <Reset_Handler+0x6a>
		SCB->VTOR |= 1 << SCB_VTOR_TBLBASE_Pos;
  400d8a:	688b      	ldr	r3, [r1, #8]
  400d8c:	f043 5300 	orr.w	r3, r3, #536870912	; 0x20000000
  400d90:	608b      	str	r3, [r1, #8]
	}

	/* Initialize the C library */
	__libc_init_array();
  400d92:	4b09      	ldr	r3, [pc, #36]	; (400db8 <Reset_Handler+0x90>)
  400d94:	4798      	blx	r3

	/* Branch to main function */
	main();
  400d96:	4b09      	ldr	r3, [pc, #36]	; (400dbc <Reset_Handler+0x94>)
  400d98:	4798      	blx	r3
  400d9a:	e7fe      	b.n	400d9a <Reset_Handler+0x72>
  400d9c:	20000000 	.word	0x20000000
  400da0:	004044a8 	.word	0x004044a8
  400da4:	20000ab4 	.word	0x20000ab4
  400da8:	20000b90 	.word	0x20000b90
  400dac:	20000ab4 	.word	0x20000ab4
  400db0:	00400000 	.word	0x00400000
  400db4:	e000ed00 	.word	0xe000ed00
  400db8:	004014e1 	.word	0x004014e1
  400dbc:	00400f11 	.word	0x00400f11

00400dc0 <SystemCoreClockUpdate>:
}

void SystemCoreClockUpdate(void)
{
	/* Determine clock frequency according to clock register values */
	switch (PMC->PMC_MCKR & PMC_MCKR_CSS_Msk) {
  400dc0:	4b38      	ldr	r3, [pc, #224]	; (400ea4 <SystemCoreClockUpdate+0xe4>)
  400dc2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
  400dc4:	f003 0303 	and.w	r3, r3, #3
  400dc8:	2b01      	cmp	r3, #1
  400dca:	d01d      	beq.n	400e08 <SystemCoreClockUpdate+0x48>
  400dcc:	b183      	cbz	r3, 400df0 <SystemCoreClockUpdate+0x30>
  400dce:	2b02      	cmp	r3, #2
  400dd0:	d036      	beq.n	400e40 <SystemCoreClockUpdate+0x80>
		SystemCoreClock /= ((((PMC->CKGR_PLLAR) & CKGR_PLLAR_DIVA_Msk) >> 
			                         CKGR_PLLAR_DIVA_Pos));
		break;
	}

	if ((PMC->PMC_MCKR & PMC_MCKR_PRES_Msk) == PMC_MCKR_PRES_CLK_3) {
  400dd2:	4b34      	ldr	r3, [pc, #208]	; (400ea4 <SystemCoreClockUpdate+0xe4>)
  400dd4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
  400dd6:	f003 0370 	and.w	r3, r3, #112	; 0x70
  400dda:	2b70      	cmp	r3, #112	; 0x70
  400ddc:	d059      	beq.n	400e92 <SystemCoreClockUpdate+0xd2>
		SystemCoreClock /= 3U;
	} else { 
		SystemCoreClock >>= ((PMC->PMC_MCKR & PMC_MCKR_PRES_Msk) >> 
  400dde:	4b31      	ldr	r3, [pc, #196]	; (400ea4 <SystemCoreClockUpdate+0xe4>)
  400de0:	6b1a      	ldr	r2, [r3, #48]	; 0x30
  400de2:	4931      	ldr	r1, [pc, #196]	; (400ea8 <SystemCoreClockUpdate+0xe8>)
  400de4:	f3c2 1202 	ubfx	r2, r2, #4, #3
  400de8:	680b      	ldr	r3, [r1, #0]
  400dea:	40d3      	lsrs	r3, r2
  400dec:	600b      	str	r3, [r1, #0]
  400dee:	4770      	bx	lr
		if (SUPC->SUPC_SR & SUPC_SR_OSCSEL) {
  400df0:	4b2e      	ldr	r3, [pc, #184]	; (400eac <SystemCoreClockUpdate+0xec>)
  400df2:	695b      	ldr	r3, [r3, #20]
  400df4:	f013 0f80 	tst.w	r3, #128	; 0x80
			SystemCoreClock = CHIP_FREQ_XTAL_32K;
  400df8:	bf14      	ite	ne
  400dfa:	f44f 4200 	movne.w	r2, #32768	; 0x8000
			SystemCoreClock = CHIP_FREQ_SLCK_RC;
  400dfe:	f44f 42fa 	moveq.w	r2, #32000	; 0x7d00
  400e02:	4b29      	ldr	r3, [pc, #164]	; (400ea8 <SystemCoreClockUpdate+0xe8>)
  400e04:	601a      	str	r2, [r3, #0]
  400e06:	e7e4      	b.n	400dd2 <SystemCoreClockUpdate+0x12>
		if (PMC->CKGR_MOR & CKGR_MOR_MOSCSEL) {
  400e08:	4b26      	ldr	r3, [pc, #152]	; (400ea4 <SystemCoreClockUpdate+0xe4>)
  400e0a:	6a1b      	ldr	r3, [r3, #32]
  400e0c:	f013 7f80 	tst.w	r3, #16777216	; 0x1000000
  400e10:	d003      	beq.n	400e1a <SystemCoreClockUpdate+0x5a>
			SystemCoreClock = CHIP_FREQ_XTAL_12M;
  400e12:	4a27      	ldr	r2, [pc, #156]	; (400eb0 <SystemCoreClockUpdate+0xf0>)
  400e14:	4b24      	ldr	r3, [pc, #144]	; (400ea8 <SystemCoreClockUpdate+0xe8>)
  400e16:	601a      	str	r2, [r3, #0]
  400e18:	e7db      	b.n	400dd2 <SystemCoreClockUpdate+0x12>
			SystemCoreClock = CHIP_FREQ_MAINCK_RC_4MHZ;
  400e1a:	4a26      	ldr	r2, [pc, #152]	; (400eb4 <SystemCoreClockUpdate+0xf4>)
  400e1c:	4b22      	ldr	r3, [pc, #136]	; (400ea8 <SystemCoreClockUpdate+0xe8>)
  400e1e:	601a      	str	r2, [r3, #0]
			switch (PMC->CKGR_MOR & CKGR_MOR_MOSCRCF_Msk) {
  400e20:	4b20      	ldr	r3, [pc, #128]	; (400ea4 <SystemCoreClockUpdate+0xe4>)
  400e22:	6a1b      	ldr	r3, [r3, #32]
  400e24:	f003 0370 	and.w	r3, r3, #112	; 0x70
  400e28:	2b10      	cmp	r3, #16
  400e2a:	d005      	beq.n	400e38 <SystemCoreClockUpdate+0x78>
  400e2c:	2b20      	cmp	r3, #32
  400e2e:	d1d0      	bne.n	400dd2 <SystemCoreClockUpdate+0x12>
				SystemCoreClock *= 3U;
  400e30:	4a1f      	ldr	r2, [pc, #124]	; (400eb0 <SystemCoreClockUpdate+0xf0>)
  400e32:	4b1d      	ldr	r3, [pc, #116]	; (400ea8 <SystemCoreClockUpdate+0xe8>)
  400e34:	601a      	str	r2, [r3, #0]
				break;
  400e36:	e7cc      	b.n	400dd2 <SystemCoreClockUpdate+0x12>
				SystemCoreClock *= 2U;
  400e38:	4a1f      	ldr	r2, [pc, #124]	; (400eb8 <SystemCoreClockUpdate+0xf8>)
  400e3a:	4b1b      	ldr	r3, [pc, #108]	; (400ea8 <SystemCoreClockUpdate+0xe8>)
  400e3c:	601a      	str	r2, [r3, #0]
				break;
  400e3e:	e7c8      	b.n	400dd2 <SystemCoreClockUpdate+0x12>
		if (PMC->CKGR_MOR & CKGR_MOR_MOSCSEL) {
  400e40:	4b18      	ldr	r3, [pc, #96]	; (400ea4 <SystemCoreClockUpdate+0xe4>)
  400e42:	6a1b      	ldr	r3, [r3, #32]
  400e44:	f013 7f80 	tst.w	r3, #16777216	; 0x1000000
  400e48:	d010      	beq.n	400e6c <SystemCoreClockUpdate+0xac>
			SystemCoreClock = CHIP_FREQ_XTAL_12M;
  400e4a:	4a19      	ldr	r2, [pc, #100]	; (400eb0 <SystemCoreClockUpdate+0xf0>)
  400e4c:	4b16      	ldr	r3, [pc, #88]	; (400ea8 <SystemCoreClockUpdate+0xe8>)
  400e4e:	601a      	str	r2, [r3, #0]
		SystemCoreClock *= ((((PMC->CKGR_PLLAR) & CKGR_PLLAR_MULA_Msk) >> 
  400e50:	4a14      	ldr	r2, [pc, #80]	; (400ea4 <SystemCoreClockUpdate+0xe4>)
  400e52:	6a91      	ldr	r1, [r2, #40]	; 0x28
		SystemCoreClock /= ((((PMC->CKGR_PLLAR) & CKGR_PLLAR_DIVA_Msk) >> 
  400e54:	6a92      	ldr	r2, [r2, #40]	; 0x28
  400e56:	4814      	ldr	r0, [pc, #80]	; (400ea8 <SystemCoreClockUpdate+0xe8>)
		SystemCoreClock *= ((((PMC->CKGR_PLLAR) & CKGR_PLLAR_MULA_Msk) >> 
  400e58:	f3c1 410a 	ubfx	r1, r1, #16, #11
  400e5c:	6803      	ldr	r3, [r0, #0]
  400e5e:	fb01 3303 	mla	r3, r1, r3, r3
		SystemCoreClock /= ((((PMC->CKGR_PLLAR) & CKGR_PLLAR_DIVA_Msk) >> 
  400e62:	b2d2      	uxtb	r2, r2
  400e64:	fbb3 f3f2 	udiv	r3, r3, r2
  400e68:	6003      	str	r3, [r0, #0]
		break;
  400e6a:	e7b2      	b.n	400dd2 <SystemCoreClockUpdate+0x12>
			SystemCoreClock = CHIP_FREQ_MAINCK_RC_4MHZ;
  400e6c:	4a11      	ldr	r2, [pc, #68]	; (400eb4 <SystemCoreClockUpdate+0xf4>)
  400e6e:	4b0e      	ldr	r3, [pc, #56]	; (400ea8 <SystemCoreClockUpdate+0xe8>)
  400e70:	601a      	str	r2, [r3, #0]
			switch (PMC->CKGR_MOR & CKGR_MOR_MOSCRCF_Msk) {
  400e72:	4b0c      	ldr	r3, [pc, #48]	; (400ea4 <SystemCoreClockUpdate+0xe4>)
  400e74:	6a1b      	ldr	r3, [r3, #32]
  400e76:	f003 0370 	and.w	r3, r3, #112	; 0x70
  400e7a:	2b10      	cmp	r3, #16
  400e7c:	d005      	beq.n	400e8a <SystemCoreClockUpdate+0xca>
  400e7e:	2b20      	cmp	r3, #32
  400e80:	d1e6      	bne.n	400e50 <SystemCoreClockUpdate+0x90>
				SystemCoreClock *= 3U;
  400e82:	4a0b      	ldr	r2, [pc, #44]	; (400eb0 <SystemCoreClockUpdate+0xf0>)
  400e84:	4b08      	ldr	r3, [pc, #32]	; (400ea8 <SystemCoreClockUpdate+0xe8>)
  400e86:	601a      	str	r2, [r3, #0]
				break;
  400e88:	e7e2      	b.n	400e50 <SystemCoreClockUpdate+0x90>
				SystemCoreClock *= 2U;
  400e8a:	4a0b      	ldr	r2, [pc, #44]	; (400eb8 <SystemCoreClockUpdate+0xf8>)
  400e8c:	4b06      	ldr	r3, [pc, #24]	; (400ea8 <SystemCoreClockUpdate+0xe8>)
  400e8e:	601a      	str	r2, [r3, #0]
				break;
  400e90:	e7de      	b.n	400e50 <SystemCoreClockUpdate+0x90>
		SystemCoreClock /= 3U;
  400e92:	4a05      	ldr	r2, [pc, #20]	; (400ea8 <SystemCoreClockUpdate+0xe8>)
  400e94:	6813      	ldr	r3, [r2, #0]
  400e96:	4909      	ldr	r1, [pc, #36]	; (400ebc <SystemCoreClockUpdate+0xfc>)
  400e98:	fba1 1303 	umull	r1, r3, r1, r3
  400e9c:	085b      	lsrs	r3, r3, #1
  400e9e:	6013      	str	r3, [r2, #0]
  400ea0:	4770      	bx	lr
  400ea2:	bf00      	nop
  400ea4:	400e0400 	.word	0x400e0400
  400ea8:	20000104 	.word	0x20000104
  400eac:	400e1410 	.word	0x400e1410
  400eb0:	00b71b00 	.word	0x00b71b00
  400eb4:	003d0900 	.word	0x003d0900
  400eb8:	007a1200 	.word	0x007a1200
  400ebc:	aaaaaaab 	.word	0xaaaaaaab

00400ec0 <_sbrk>:
{
	static unsigned char *heap = NULL;
	unsigned char *prev_heap;
	int ramend = (int)&__ram_end__;

	if (heap == NULL) {
  400ec0:	4b0a      	ldr	r3, [pc, #40]	; (400eec <_sbrk+0x2c>)
  400ec2:	681b      	ldr	r3, [r3, #0]
  400ec4:	b153      	cbz	r3, 400edc <_sbrk+0x1c>
		heap = (unsigned char *)&_end;
	}
	prev_heap = heap;
  400ec6:	4b09      	ldr	r3, [pc, #36]	; (400eec <_sbrk+0x2c>)
  400ec8:	681b      	ldr	r3, [r3, #0]

	if (((int)prev_heap + incr) > ramend) {
  400eca:	181a      	adds	r2, r3, r0
  400ecc:	4908      	ldr	r1, [pc, #32]	; (400ef0 <_sbrk+0x30>)
  400ece:	4291      	cmp	r1, r2
  400ed0:	db08      	blt.n	400ee4 <_sbrk+0x24>
		return (caddr_t) -1;	
	}

	heap += incr;
  400ed2:	4610      	mov	r0, r2
  400ed4:	4a05      	ldr	r2, [pc, #20]	; (400eec <_sbrk+0x2c>)
  400ed6:	6010      	str	r0, [r2, #0]

	return (caddr_t) prev_heap;
  400ed8:	4618      	mov	r0, r3
  400eda:	4770      	bx	lr
		heap = (unsigned char *)&_end;
  400edc:	4a05      	ldr	r2, [pc, #20]	; (400ef4 <_sbrk+0x34>)
  400ede:	4b03      	ldr	r3, [pc, #12]	; (400eec <_sbrk+0x2c>)
  400ee0:	601a      	str	r2, [r3, #0]
  400ee2:	e7f0      	b.n	400ec6 <_sbrk+0x6>
		return (caddr_t) -1;	
  400ee4:	f04f 30ff 	mov.w	r0, #4294967295
}
  400ee8:	4770      	bx	lr
  400eea:	bf00      	nop
  400eec:	20000b48 	.word	0x20000b48
  400ef0:	20005ffc 	.word	0x20005ffc
  400ef4:	20001390 	.word	0x20001390

00400ef8 <_close>:
}

extern int _close(int file)
{
	return -1;
}
  400ef8:	f04f 30ff 	mov.w	r0, #4294967295
  400efc:	4770      	bx	lr

00400efe <_fstat>:

extern int _fstat(int file, struct stat *st)
{
	st->st_mode = S_IFCHR;
  400efe:	f44f 5300 	mov.w	r3, #8192	; 0x2000
  400f02:	604b      	str	r3, [r1, #4]

	return 0;
}
  400f04:	2000      	movs	r0, #0
  400f06:	4770      	bx	lr

00400f08 <_isatty>:

extern int _isatty(int file)
{
	return 1;
}
  400f08:	2001      	movs	r0, #1
  400f0a:	4770      	bx	lr

00400f0c <_lseek>:

extern int _lseek(int file, int ptr, int dir)
{
	return 0;
}
  400f0c:	2000      	movs	r0, #0
  400f0e:	4770      	bx	lr

00400f10 <main>:
 */
#include <asf.h>
#include "BeamBall.h"

int main (void)
{
  400f10:	b508      	push	{r3, lr}
	sysclk_init();
  400f12:	4b08      	ldr	r3, [pc, #32]	; (400f34 <main+0x24>)
  400f14:	4798      	blx	r3
	board_init();
  400f16:	4b08      	ldr	r3, [pc, #32]	; (400f38 <main+0x28>)
  400f18:	4798      	blx	r3
	vConfigureUART();
  400f1a:	4b08      	ldr	r3, [pc, #32]	; (400f3c <main+0x2c>)
  400f1c:	4798      	blx	r3

	puts("Inicializing Beam Ball\r\n");
  400f1e:	4808      	ldr	r0, [pc, #32]	; (400f40 <main+0x30>)
  400f20:	4c08      	ldr	r4, [pc, #32]	; (400f44 <main+0x34>)
  400f22:	47a0      	blx	r4
	vConfigureButton(); //novo
  400f24:	4b08      	ldr	r3, [pc, #32]	; (400f48 <main+0x38>)
  400f26:	4798      	blx	r3
	vConfigurePWM();
  400f28:	4b08      	ldr	r3, [pc, #32]	; (400f4c <main+0x3c>)
  400f2a:	4798      	blx	r3
	puts("PWM configured complete\r\n");
  400f2c:	4808      	ldr	r0, [pc, #32]	; (400f50 <main+0x40>)
  400f2e:	47a0      	blx	r4
  400f30:	e7fe      	b.n	400f30 <main+0x20>
  400f32:	bf00      	nop
  400f34:	00400685 	.word	0x00400685
  400f38:	004006e9 	.word	0x004006e9
  400f3c:	004003b5 	.word	0x004003b5
  400f40:	004042dc 	.word	0x004042dc
  400f44:	0040165d 	.word	0x0040165d
  400f48:	004005ed 	.word	0x004005ed
  400f4c:	00400495 	.word	0x00400495
  400f50:	004042f8 	.word	0x004042f8

00400f54 <__aeabi_drsub>:
  400f54:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
  400f58:	e002      	b.n	400f60 <__adddf3>
  400f5a:	bf00      	nop

00400f5c <__aeabi_dsub>:
  400f5c:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

00400f60 <__adddf3>:
  400f60:	b530      	push	{r4, r5, lr}
  400f62:	ea4f 0441 	mov.w	r4, r1, lsl #1
  400f66:	ea4f 0543 	mov.w	r5, r3, lsl #1
  400f6a:	ea94 0f05 	teq	r4, r5
  400f6e:	bf08      	it	eq
  400f70:	ea90 0f02 	teqeq	r0, r2
  400f74:	bf1f      	itttt	ne
  400f76:	ea54 0c00 	orrsne.w	ip, r4, r0
  400f7a:	ea55 0c02 	orrsne.w	ip, r5, r2
  400f7e:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
  400f82:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
  400f86:	f000 80e2 	beq.w	40114e <__adddf3+0x1ee>
  400f8a:	ea4f 5454 	mov.w	r4, r4, lsr #21
  400f8e:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
  400f92:	bfb8      	it	lt
  400f94:	426d      	neglt	r5, r5
  400f96:	dd0c      	ble.n	400fb2 <__adddf3+0x52>
  400f98:	442c      	add	r4, r5
  400f9a:	ea80 0202 	eor.w	r2, r0, r2
  400f9e:	ea81 0303 	eor.w	r3, r1, r3
  400fa2:	ea82 0000 	eor.w	r0, r2, r0
  400fa6:	ea83 0101 	eor.w	r1, r3, r1
  400faa:	ea80 0202 	eor.w	r2, r0, r2
  400fae:	ea81 0303 	eor.w	r3, r1, r3
  400fb2:	2d36      	cmp	r5, #54	; 0x36
  400fb4:	bf88      	it	hi
  400fb6:	bd30      	pophi	{r4, r5, pc}
  400fb8:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
  400fbc:	ea4f 3101 	mov.w	r1, r1, lsl #12
  400fc0:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
  400fc4:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
  400fc8:	d002      	beq.n	400fd0 <__adddf3+0x70>
  400fca:	4240      	negs	r0, r0
  400fcc:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
  400fd0:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
  400fd4:	ea4f 3303 	mov.w	r3, r3, lsl #12
  400fd8:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
  400fdc:	d002      	beq.n	400fe4 <__adddf3+0x84>
  400fde:	4252      	negs	r2, r2
  400fe0:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
  400fe4:	ea94 0f05 	teq	r4, r5
  400fe8:	f000 80a7 	beq.w	40113a <__adddf3+0x1da>
  400fec:	f1a4 0401 	sub.w	r4, r4, #1
  400ff0:	f1d5 0e20 	rsbs	lr, r5, #32
  400ff4:	db0d      	blt.n	401012 <__adddf3+0xb2>
  400ff6:	fa02 fc0e 	lsl.w	ip, r2, lr
  400ffa:	fa22 f205 	lsr.w	r2, r2, r5
  400ffe:	1880      	adds	r0, r0, r2
  401000:	f141 0100 	adc.w	r1, r1, #0
  401004:	fa03 f20e 	lsl.w	r2, r3, lr
  401008:	1880      	adds	r0, r0, r2
  40100a:	fa43 f305 	asr.w	r3, r3, r5
  40100e:	4159      	adcs	r1, r3
  401010:	e00e      	b.n	401030 <__adddf3+0xd0>
  401012:	f1a5 0520 	sub.w	r5, r5, #32
  401016:	f10e 0e20 	add.w	lr, lr, #32
  40101a:	2a01      	cmp	r2, #1
  40101c:	fa03 fc0e 	lsl.w	ip, r3, lr
  401020:	bf28      	it	cs
  401022:	f04c 0c02 	orrcs.w	ip, ip, #2
  401026:	fa43 f305 	asr.w	r3, r3, r5
  40102a:	18c0      	adds	r0, r0, r3
  40102c:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
  401030:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
  401034:	d507      	bpl.n	401046 <__adddf3+0xe6>
  401036:	f04f 0e00 	mov.w	lr, #0
  40103a:	f1dc 0c00 	rsbs	ip, ip, #0
  40103e:	eb7e 0000 	sbcs.w	r0, lr, r0
  401042:	eb6e 0101 	sbc.w	r1, lr, r1
  401046:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
  40104a:	d31b      	bcc.n	401084 <__adddf3+0x124>
  40104c:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
  401050:	d30c      	bcc.n	40106c <__adddf3+0x10c>
  401052:	0849      	lsrs	r1, r1, #1
  401054:	ea5f 0030 	movs.w	r0, r0, rrx
  401058:	ea4f 0c3c 	mov.w	ip, ip, rrx
  40105c:	f104 0401 	add.w	r4, r4, #1
  401060:	ea4f 5244 	mov.w	r2, r4, lsl #21
  401064:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
  401068:	f080 809a 	bcs.w	4011a0 <__adddf3+0x240>
  40106c:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
  401070:	bf08      	it	eq
  401072:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
  401076:	f150 0000 	adcs.w	r0, r0, #0
  40107a:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
  40107e:	ea41 0105 	orr.w	r1, r1, r5
  401082:	bd30      	pop	{r4, r5, pc}
  401084:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
  401088:	4140      	adcs	r0, r0
  40108a:	eb41 0101 	adc.w	r1, r1, r1
  40108e:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
  401092:	f1a4 0401 	sub.w	r4, r4, #1
  401096:	d1e9      	bne.n	40106c <__adddf3+0x10c>
  401098:	f091 0f00 	teq	r1, #0
  40109c:	bf04      	itt	eq
  40109e:	4601      	moveq	r1, r0
  4010a0:	2000      	moveq	r0, #0
  4010a2:	fab1 f381 	clz	r3, r1
  4010a6:	bf08      	it	eq
  4010a8:	3320      	addeq	r3, #32
  4010aa:	f1a3 030b 	sub.w	r3, r3, #11
  4010ae:	f1b3 0220 	subs.w	r2, r3, #32
  4010b2:	da0c      	bge.n	4010ce <__adddf3+0x16e>
  4010b4:	320c      	adds	r2, #12
  4010b6:	dd08      	ble.n	4010ca <__adddf3+0x16a>
  4010b8:	f102 0c14 	add.w	ip, r2, #20
  4010bc:	f1c2 020c 	rsb	r2, r2, #12
  4010c0:	fa01 f00c 	lsl.w	r0, r1, ip
  4010c4:	fa21 f102 	lsr.w	r1, r1, r2
  4010c8:	e00c      	b.n	4010e4 <__adddf3+0x184>
  4010ca:	f102 0214 	add.w	r2, r2, #20
  4010ce:	bfd8      	it	le
  4010d0:	f1c2 0c20 	rsble	ip, r2, #32
  4010d4:	fa01 f102 	lsl.w	r1, r1, r2
  4010d8:	fa20 fc0c 	lsr.w	ip, r0, ip
  4010dc:	bfdc      	itt	le
  4010de:	ea41 010c 	orrle.w	r1, r1, ip
  4010e2:	4090      	lslle	r0, r2
  4010e4:	1ae4      	subs	r4, r4, r3
  4010e6:	bfa2      	ittt	ge
  4010e8:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
  4010ec:	4329      	orrge	r1, r5
  4010ee:	bd30      	popge	{r4, r5, pc}
  4010f0:	ea6f 0404 	mvn.w	r4, r4
  4010f4:	3c1f      	subs	r4, #31
  4010f6:	da1c      	bge.n	401132 <__adddf3+0x1d2>
  4010f8:	340c      	adds	r4, #12
  4010fa:	dc0e      	bgt.n	40111a <__adddf3+0x1ba>
  4010fc:	f104 0414 	add.w	r4, r4, #20
  401100:	f1c4 0220 	rsb	r2, r4, #32
  401104:	fa20 f004 	lsr.w	r0, r0, r4
  401108:	fa01 f302 	lsl.w	r3, r1, r2
  40110c:	ea40 0003 	orr.w	r0, r0, r3
  401110:	fa21 f304 	lsr.w	r3, r1, r4
  401114:	ea45 0103 	orr.w	r1, r5, r3
  401118:	bd30      	pop	{r4, r5, pc}
  40111a:	f1c4 040c 	rsb	r4, r4, #12
  40111e:	f1c4 0220 	rsb	r2, r4, #32
  401122:	fa20 f002 	lsr.w	r0, r0, r2
  401126:	fa01 f304 	lsl.w	r3, r1, r4
  40112a:	ea40 0003 	orr.w	r0, r0, r3
  40112e:	4629      	mov	r1, r5
  401130:	bd30      	pop	{r4, r5, pc}
  401132:	fa21 f004 	lsr.w	r0, r1, r4
  401136:	4629      	mov	r1, r5
  401138:	bd30      	pop	{r4, r5, pc}
  40113a:	f094 0f00 	teq	r4, #0
  40113e:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
  401142:	bf06      	itte	eq
  401144:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
  401148:	3401      	addeq	r4, #1
  40114a:	3d01      	subne	r5, #1
  40114c:	e74e      	b.n	400fec <__adddf3+0x8c>
  40114e:	ea7f 5c64 	mvns.w	ip, r4, asr #21
  401152:	bf18      	it	ne
  401154:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
  401158:	d029      	beq.n	4011ae <__adddf3+0x24e>
  40115a:	ea94 0f05 	teq	r4, r5
  40115e:	bf08      	it	eq
  401160:	ea90 0f02 	teqeq	r0, r2
  401164:	d005      	beq.n	401172 <__adddf3+0x212>
  401166:	ea54 0c00 	orrs.w	ip, r4, r0
  40116a:	bf04      	itt	eq
  40116c:	4619      	moveq	r1, r3
  40116e:	4610      	moveq	r0, r2
  401170:	bd30      	pop	{r4, r5, pc}
  401172:	ea91 0f03 	teq	r1, r3
  401176:	bf1e      	ittt	ne
  401178:	2100      	movne	r1, #0
  40117a:	2000      	movne	r0, #0
  40117c:	bd30      	popne	{r4, r5, pc}
  40117e:	ea5f 5c54 	movs.w	ip, r4, lsr #21
  401182:	d105      	bne.n	401190 <__adddf3+0x230>
  401184:	0040      	lsls	r0, r0, #1
  401186:	4149      	adcs	r1, r1
  401188:	bf28      	it	cs
  40118a:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
  40118e:	bd30      	pop	{r4, r5, pc}
  401190:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
  401194:	bf3c      	itt	cc
  401196:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
  40119a:	bd30      	popcc	{r4, r5, pc}
  40119c:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
  4011a0:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
  4011a4:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
  4011a8:	f04f 0000 	mov.w	r0, #0
  4011ac:	bd30      	pop	{r4, r5, pc}
  4011ae:	ea7f 5c64 	mvns.w	ip, r4, asr #21
  4011b2:	bf1a      	itte	ne
  4011b4:	4619      	movne	r1, r3
  4011b6:	4610      	movne	r0, r2
  4011b8:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
  4011bc:	bf1c      	itt	ne
  4011be:	460b      	movne	r3, r1
  4011c0:	4602      	movne	r2, r0
  4011c2:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
  4011c6:	bf06      	itte	eq
  4011c8:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
  4011cc:	ea91 0f03 	teqeq	r1, r3
  4011d0:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
  4011d4:	bd30      	pop	{r4, r5, pc}
  4011d6:	bf00      	nop

004011d8 <__aeabi_ui2d>:
  4011d8:	f090 0f00 	teq	r0, #0
  4011dc:	bf04      	itt	eq
  4011de:	2100      	moveq	r1, #0
  4011e0:	4770      	bxeq	lr
  4011e2:	b530      	push	{r4, r5, lr}
  4011e4:	f44f 6480 	mov.w	r4, #1024	; 0x400
  4011e8:	f104 0432 	add.w	r4, r4, #50	; 0x32
  4011ec:	f04f 0500 	mov.w	r5, #0
  4011f0:	f04f 0100 	mov.w	r1, #0
  4011f4:	e750      	b.n	401098 <__adddf3+0x138>
  4011f6:	bf00      	nop

004011f8 <__aeabi_i2d>:
  4011f8:	f090 0f00 	teq	r0, #0
  4011fc:	bf04      	itt	eq
  4011fe:	2100      	moveq	r1, #0
  401200:	4770      	bxeq	lr
  401202:	b530      	push	{r4, r5, lr}
  401204:	f44f 6480 	mov.w	r4, #1024	; 0x400
  401208:	f104 0432 	add.w	r4, r4, #50	; 0x32
  40120c:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
  401210:	bf48      	it	mi
  401212:	4240      	negmi	r0, r0
  401214:	f04f 0100 	mov.w	r1, #0
  401218:	e73e      	b.n	401098 <__adddf3+0x138>
  40121a:	bf00      	nop

0040121c <__aeabi_f2d>:
  40121c:	0042      	lsls	r2, r0, #1
  40121e:	ea4f 01e2 	mov.w	r1, r2, asr #3
  401222:	ea4f 0131 	mov.w	r1, r1, rrx
  401226:	ea4f 7002 	mov.w	r0, r2, lsl #28
  40122a:	bf1f      	itttt	ne
  40122c:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
  401230:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
  401234:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
  401238:	4770      	bxne	lr
  40123a:	f092 0f00 	teq	r2, #0
  40123e:	bf14      	ite	ne
  401240:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
  401244:	4770      	bxeq	lr
  401246:	b530      	push	{r4, r5, lr}
  401248:	f44f 7460 	mov.w	r4, #896	; 0x380
  40124c:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
  401250:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
  401254:	e720      	b.n	401098 <__adddf3+0x138>
  401256:	bf00      	nop

00401258 <__aeabi_ul2d>:
  401258:	ea50 0201 	orrs.w	r2, r0, r1
  40125c:	bf08      	it	eq
  40125e:	4770      	bxeq	lr
  401260:	b530      	push	{r4, r5, lr}
  401262:	f04f 0500 	mov.w	r5, #0
  401266:	e00a      	b.n	40127e <__aeabi_l2d+0x16>

00401268 <__aeabi_l2d>:
  401268:	ea50 0201 	orrs.w	r2, r0, r1
  40126c:	bf08      	it	eq
  40126e:	4770      	bxeq	lr
  401270:	b530      	push	{r4, r5, lr}
  401272:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
  401276:	d502      	bpl.n	40127e <__aeabi_l2d+0x16>
  401278:	4240      	negs	r0, r0
  40127a:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
  40127e:	f44f 6480 	mov.w	r4, #1024	; 0x400
  401282:	f104 0432 	add.w	r4, r4, #50	; 0x32
  401286:	ea5f 5c91 	movs.w	ip, r1, lsr #22
  40128a:	f43f aedc 	beq.w	401046 <__adddf3+0xe6>
  40128e:	f04f 0203 	mov.w	r2, #3
  401292:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
  401296:	bf18      	it	ne
  401298:	3203      	addne	r2, #3
  40129a:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
  40129e:	bf18      	it	ne
  4012a0:	3203      	addne	r2, #3
  4012a2:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
  4012a6:	f1c2 0320 	rsb	r3, r2, #32
  4012aa:	fa00 fc03 	lsl.w	ip, r0, r3
  4012ae:	fa20 f002 	lsr.w	r0, r0, r2
  4012b2:	fa01 fe03 	lsl.w	lr, r1, r3
  4012b6:	ea40 000e 	orr.w	r0, r0, lr
  4012ba:	fa21 f102 	lsr.w	r1, r1, r2
  4012be:	4414      	add	r4, r2
  4012c0:	e6c1      	b.n	401046 <__adddf3+0xe6>
  4012c2:	bf00      	nop

004012c4 <__aeabi_frsub>:
  4012c4:	f080 4000 	eor.w	r0, r0, #2147483648	; 0x80000000
  4012c8:	e002      	b.n	4012d0 <__addsf3>
  4012ca:	bf00      	nop

004012cc <__aeabi_fsub>:
  4012cc:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000

004012d0 <__addsf3>:
  4012d0:	0042      	lsls	r2, r0, #1
  4012d2:	bf1f      	itttt	ne
  4012d4:	ea5f 0341 	movsne.w	r3, r1, lsl #1
  4012d8:	ea92 0f03 	teqne	r2, r3
  4012dc:	ea7f 6c22 	mvnsne.w	ip, r2, asr #24
  4012e0:	ea7f 6c23 	mvnsne.w	ip, r3, asr #24
  4012e4:	d06a      	beq.n	4013bc <__addsf3+0xec>
  4012e6:	ea4f 6212 	mov.w	r2, r2, lsr #24
  4012ea:	ebd2 6313 	rsbs	r3, r2, r3, lsr #24
  4012ee:	bfc1      	itttt	gt
  4012f0:	18d2      	addgt	r2, r2, r3
  4012f2:	4041      	eorgt	r1, r0
  4012f4:	4048      	eorgt	r0, r1
  4012f6:	4041      	eorgt	r1, r0
  4012f8:	bfb8      	it	lt
  4012fa:	425b      	neglt	r3, r3
  4012fc:	2b19      	cmp	r3, #25
  4012fe:	bf88      	it	hi
  401300:	4770      	bxhi	lr
  401302:	f010 4f00 	tst.w	r0, #2147483648	; 0x80000000
  401306:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
  40130a:	f020 407f 	bic.w	r0, r0, #4278190080	; 0xff000000
  40130e:	bf18      	it	ne
  401310:	4240      	negne	r0, r0
  401312:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
  401316:	f441 0100 	orr.w	r1, r1, #8388608	; 0x800000
  40131a:	f021 417f 	bic.w	r1, r1, #4278190080	; 0xff000000
  40131e:	bf18      	it	ne
  401320:	4249      	negne	r1, r1
  401322:	ea92 0f03 	teq	r2, r3
  401326:	d03f      	beq.n	4013a8 <__addsf3+0xd8>
  401328:	f1a2 0201 	sub.w	r2, r2, #1
  40132c:	fa41 fc03 	asr.w	ip, r1, r3
  401330:	eb10 000c 	adds.w	r0, r0, ip
  401334:	f1c3 0320 	rsb	r3, r3, #32
  401338:	fa01 f103 	lsl.w	r1, r1, r3
  40133c:	f000 4300 	and.w	r3, r0, #2147483648	; 0x80000000
  401340:	d502      	bpl.n	401348 <__addsf3+0x78>
  401342:	4249      	negs	r1, r1
  401344:	eb60 0040 	sbc.w	r0, r0, r0, lsl #1
  401348:	f5b0 0f00 	cmp.w	r0, #8388608	; 0x800000
  40134c:	d313      	bcc.n	401376 <__addsf3+0xa6>
  40134e:	f1b0 7f80 	cmp.w	r0, #16777216	; 0x1000000
  401352:	d306      	bcc.n	401362 <__addsf3+0x92>
  401354:	0840      	lsrs	r0, r0, #1
  401356:	ea4f 0131 	mov.w	r1, r1, rrx
  40135a:	f102 0201 	add.w	r2, r2, #1
  40135e:	2afe      	cmp	r2, #254	; 0xfe
  401360:	d251      	bcs.n	401406 <__addsf3+0x136>
  401362:	f1b1 4f00 	cmp.w	r1, #2147483648	; 0x80000000
  401366:	eb40 50c2 	adc.w	r0, r0, r2, lsl #23
  40136a:	bf08      	it	eq
  40136c:	f020 0001 	biceq.w	r0, r0, #1
  401370:	ea40 0003 	orr.w	r0, r0, r3
  401374:	4770      	bx	lr
  401376:	0049      	lsls	r1, r1, #1
  401378:	eb40 0000 	adc.w	r0, r0, r0
  40137c:	f410 0f00 	tst.w	r0, #8388608	; 0x800000
  401380:	f1a2 0201 	sub.w	r2, r2, #1
  401384:	d1ed      	bne.n	401362 <__addsf3+0x92>
  401386:	fab0 fc80 	clz	ip, r0
  40138a:	f1ac 0c08 	sub.w	ip, ip, #8
  40138e:	ebb2 020c 	subs.w	r2, r2, ip
  401392:	fa00 f00c 	lsl.w	r0, r0, ip
  401396:	bfaa      	itet	ge
  401398:	eb00 50c2 	addge.w	r0, r0, r2, lsl #23
  40139c:	4252      	neglt	r2, r2
  40139e:	4318      	orrge	r0, r3
  4013a0:	bfbc      	itt	lt
  4013a2:	40d0      	lsrlt	r0, r2
  4013a4:	4318      	orrlt	r0, r3
  4013a6:	4770      	bx	lr
  4013a8:	f092 0f00 	teq	r2, #0
  4013ac:	f481 0100 	eor.w	r1, r1, #8388608	; 0x800000
  4013b0:	bf06      	itte	eq
  4013b2:	f480 0000 	eoreq.w	r0, r0, #8388608	; 0x800000
  4013b6:	3201      	addeq	r2, #1
  4013b8:	3b01      	subne	r3, #1
  4013ba:	e7b5      	b.n	401328 <__addsf3+0x58>
  4013bc:	ea4f 0341 	mov.w	r3, r1, lsl #1
  4013c0:	ea7f 6c22 	mvns.w	ip, r2, asr #24
  4013c4:	bf18      	it	ne
  4013c6:	ea7f 6c23 	mvnsne.w	ip, r3, asr #24
  4013ca:	d021      	beq.n	401410 <__addsf3+0x140>
  4013cc:	ea92 0f03 	teq	r2, r3
  4013d0:	d004      	beq.n	4013dc <__addsf3+0x10c>
  4013d2:	f092 0f00 	teq	r2, #0
  4013d6:	bf08      	it	eq
  4013d8:	4608      	moveq	r0, r1
  4013da:	4770      	bx	lr
  4013dc:	ea90 0f01 	teq	r0, r1
  4013e0:	bf1c      	itt	ne
  4013e2:	2000      	movne	r0, #0
  4013e4:	4770      	bxne	lr
  4013e6:	f012 4f7f 	tst.w	r2, #4278190080	; 0xff000000
  4013ea:	d104      	bne.n	4013f6 <__addsf3+0x126>
  4013ec:	0040      	lsls	r0, r0, #1
  4013ee:	bf28      	it	cs
  4013f0:	f040 4000 	orrcs.w	r0, r0, #2147483648	; 0x80000000
  4013f4:	4770      	bx	lr
  4013f6:	f112 7200 	adds.w	r2, r2, #33554432	; 0x2000000
  4013fa:	bf3c      	itt	cc
  4013fc:	f500 0000 	addcc.w	r0, r0, #8388608	; 0x800000
  401400:	4770      	bxcc	lr
  401402:	f000 4300 	and.w	r3, r0, #2147483648	; 0x80000000
  401406:	f043 40fe 	orr.w	r0, r3, #2130706432	; 0x7f000000
  40140a:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
  40140e:	4770      	bx	lr
  401410:	ea7f 6222 	mvns.w	r2, r2, asr #24
  401414:	bf16      	itet	ne
  401416:	4608      	movne	r0, r1
  401418:	ea7f 6323 	mvnseq.w	r3, r3, asr #24
  40141c:	4601      	movne	r1, r0
  40141e:	0242      	lsls	r2, r0, #9
  401420:	bf06      	itte	eq
  401422:	ea5f 2341 	movseq.w	r3, r1, lsl #9
  401426:	ea90 0f01 	teqeq	r0, r1
  40142a:	f440 0080 	orrne.w	r0, r0, #4194304	; 0x400000
  40142e:	4770      	bx	lr

00401430 <__aeabi_ui2f>:
  401430:	f04f 0300 	mov.w	r3, #0
  401434:	e004      	b.n	401440 <__aeabi_i2f+0x8>
  401436:	bf00      	nop

00401438 <__aeabi_i2f>:
  401438:	f010 4300 	ands.w	r3, r0, #2147483648	; 0x80000000
  40143c:	bf48      	it	mi
  40143e:	4240      	negmi	r0, r0
  401440:	ea5f 0c00 	movs.w	ip, r0
  401444:	bf08      	it	eq
  401446:	4770      	bxeq	lr
  401448:	f043 4396 	orr.w	r3, r3, #1258291200	; 0x4b000000
  40144c:	4601      	mov	r1, r0
  40144e:	f04f 0000 	mov.w	r0, #0
  401452:	e01c      	b.n	40148e <__aeabi_l2f+0x2a>

00401454 <__aeabi_ul2f>:
  401454:	ea50 0201 	orrs.w	r2, r0, r1
  401458:	bf08      	it	eq
  40145a:	4770      	bxeq	lr
  40145c:	f04f 0300 	mov.w	r3, #0
  401460:	e00a      	b.n	401478 <__aeabi_l2f+0x14>
  401462:	bf00      	nop

00401464 <__aeabi_l2f>:
  401464:	ea50 0201 	orrs.w	r2, r0, r1
  401468:	bf08      	it	eq
  40146a:	4770      	bxeq	lr
  40146c:	f011 4300 	ands.w	r3, r1, #2147483648	; 0x80000000
  401470:	d502      	bpl.n	401478 <__aeabi_l2f+0x14>
  401472:	4240      	negs	r0, r0
  401474:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
  401478:	ea5f 0c01 	movs.w	ip, r1
  40147c:	bf02      	ittt	eq
  40147e:	4684      	moveq	ip, r0
  401480:	4601      	moveq	r1, r0
  401482:	2000      	moveq	r0, #0
  401484:	f043 43b6 	orr.w	r3, r3, #1526726656	; 0x5b000000
  401488:	bf08      	it	eq
  40148a:	f1a3 5380 	subeq.w	r3, r3, #268435456	; 0x10000000
  40148e:	f5a3 0300 	sub.w	r3, r3, #8388608	; 0x800000
  401492:	fabc f28c 	clz	r2, ip
  401496:	3a08      	subs	r2, #8
  401498:	eba3 53c2 	sub.w	r3, r3, r2, lsl #23
  40149c:	db10      	blt.n	4014c0 <__aeabi_l2f+0x5c>
  40149e:	fa01 fc02 	lsl.w	ip, r1, r2
  4014a2:	4463      	add	r3, ip
  4014a4:	fa00 fc02 	lsl.w	ip, r0, r2
  4014a8:	f1c2 0220 	rsb	r2, r2, #32
  4014ac:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
  4014b0:	fa20 f202 	lsr.w	r2, r0, r2
  4014b4:	eb43 0002 	adc.w	r0, r3, r2
  4014b8:	bf08      	it	eq
  4014ba:	f020 0001 	biceq.w	r0, r0, #1
  4014be:	4770      	bx	lr
  4014c0:	f102 0220 	add.w	r2, r2, #32
  4014c4:	fa01 fc02 	lsl.w	ip, r1, r2
  4014c8:	f1c2 0220 	rsb	r2, r2, #32
  4014cc:	ea50 004c 	orrs.w	r0, r0, ip, lsl #1
  4014d0:	fa21 f202 	lsr.w	r2, r1, r2
  4014d4:	eb43 0002 	adc.w	r0, r3, r2
  4014d8:	bf08      	it	eq
  4014da:	ea20 70dc 	biceq.w	r0, r0, ip, lsr #31
  4014de:	4770      	bx	lr

004014e0 <__libc_init_array>:
  4014e0:	b570      	push	{r4, r5, r6, lr}
  4014e2:	4e0f      	ldr	r6, [pc, #60]	; (401520 <__libc_init_array+0x40>)
  4014e4:	4d0f      	ldr	r5, [pc, #60]	; (401524 <__libc_init_array+0x44>)
  4014e6:	1b76      	subs	r6, r6, r5
  4014e8:	10b6      	asrs	r6, r6, #2
  4014ea:	bf18      	it	ne
  4014ec:	2400      	movne	r4, #0
  4014ee:	d005      	beq.n	4014fc <__libc_init_array+0x1c>
  4014f0:	3401      	adds	r4, #1
  4014f2:	f855 3b04 	ldr.w	r3, [r5], #4
  4014f6:	4798      	blx	r3
  4014f8:	42a6      	cmp	r6, r4
  4014fa:	d1f9      	bne.n	4014f0 <__libc_init_array+0x10>
  4014fc:	4e0a      	ldr	r6, [pc, #40]	; (401528 <__libc_init_array+0x48>)
  4014fe:	4d0b      	ldr	r5, [pc, #44]	; (40152c <__libc_init_array+0x4c>)
  401500:	f002 ffbc 	bl	40447c <_init>
  401504:	1b76      	subs	r6, r6, r5
  401506:	10b6      	asrs	r6, r6, #2
  401508:	bf18      	it	ne
  40150a:	2400      	movne	r4, #0
  40150c:	d006      	beq.n	40151c <__libc_init_array+0x3c>
  40150e:	3401      	adds	r4, #1
  401510:	f855 3b04 	ldr.w	r3, [r5], #4
  401514:	4798      	blx	r3
  401516:	42a6      	cmp	r6, r4
  401518:	d1f9      	bne.n	40150e <__libc_init_array+0x2e>
  40151a:	bd70      	pop	{r4, r5, r6, pc}
  40151c:	bd70      	pop	{r4, r5, r6, pc}
  40151e:	bf00      	nop
  401520:	00404488 	.word	0x00404488
  401524:	00404488 	.word	0x00404488
  401528:	00404490 	.word	0x00404490
  40152c:	00404488 	.word	0x00404488

00401530 <iprintf>:
  401530:	b40f      	push	{r0, r1, r2, r3}
  401532:	b510      	push	{r4, lr}
  401534:	4b07      	ldr	r3, [pc, #28]	; (401554 <iprintf+0x24>)
  401536:	b082      	sub	sp, #8
  401538:	ac04      	add	r4, sp, #16
  40153a:	f854 2b04 	ldr.w	r2, [r4], #4
  40153e:	6818      	ldr	r0, [r3, #0]
  401540:	4623      	mov	r3, r4
  401542:	6881      	ldr	r1, [r0, #8]
  401544:	9401      	str	r4, [sp, #4]
  401546:	f000 f9ad 	bl	4018a4 <_vfiprintf_r>
  40154a:	b002      	add	sp, #8
  40154c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  401550:	b004      	add	sp, #16
  401552:	4770      	bx	lr
  401554:	20000108 	.word	0x20000108

00401558 <memset>:
  401558:	b470      	push	{r4, r5, r6}
  40155a:	0786      	lsls	r6, r0, #30
  40155c:	d046      	beq.n	4015ec <memset+0x94>
  40155e:	1e54      	subs	r4, r2, #1
  401560:	2a00      	cmp	r2, #0
  401562:	d041      	beq.n	4015e8 <memset+0x90>
  401564:	b2ca      	uxtb	r2, r1
  401566:	4603      	mov	r3, r0
  401568:	e002      	b.n	401570 <memset+0x18>
  40156a:	f114 34ff 	adds.w	r4, r4, #4294967295
  40156e:	d33b      	bcc.n	4015e8 <memset+0x90>
  401570:	f803 2b01 	strb.w	r2, [r3], #1
  401574:	079d      	lsls	r5, r3, #30
  401576:	d1f8      	bne.n	40156a <memset+0x12>
  401578:	2c03      	cmp	r4, #3
  40157a:	d92e      	bls.n	4015da <memset+0x82>
  40157c:	b2cd      	uxtb	r5, r1
  40157e:	ea45 2505 	orr.w	r5, r5, r5, lsl #8
  401582:	2c0f      	cmp	r4, #15
  401584:	ea45 4505 	orr.w	r5, r5, r5, lsl #16
  401588:	d919      	bls.n	4015be <memset+0x66>
  40158a:	4626      	mov	r6, r4
  40158c:	f103 0210 	add.w	r2, r3, #16
  401590:	3e10      	subs	r6, #16
  401592:	2e0f      	cmp	r6, #15
  401594:	f842 5c10 	str.w	r5, [r2, #-16]
  401598:	f842 5c0c 	str.w	r5, [r2, #-12]
  40159c:	f842 5c08 	str.w	r5, [r2, #-8]
  4015a0:	f842 5c04 	str.w	r5, [r2, #-4]
  4015a4:	f102 0210 	add.w	r2, r2, #16
  4015a8:	d8f2      	bhi.n	401590 <memset+0x38>
  4015aa:	f1a4 0210 	sub.w	r2, r4, #16
  4015ae:	f022 020f 	bic.w	r2, r2, #15
  4015b2:	f004 040f 	and.w	r4, r4, #15
  4015b6:	3210      	adds	r2, #16
  4015b8:	2c03      	cmp	r4, #3
  4015ba:	4413      	add	r3, r2
  4015bc:	d90d      	bls.n	4015da <memset+0x82>
  4015be:	461e      	mov	r6, r3
  4015c0:	4622      	mov	r2, r4
  4015c2:	3a04      	subs	r2, #4
  4015c4:	2a03      	cmp	r2, #3
  4015c6:	f846 5b04 	str.w	r5, [r6], #4
  4015ca:	d8fa      	bhi.n	4015c2 <memset+0x6a>
  4015cc:	1f22      	subs	r2, r4, #4
  4015ce:	f022 0203 	bic.w	r2, r2, #3
  4015d2:	3204      	adds	r2, #4
  4015d4:	4413      	add	r3, r2
  4015d6:	f004 0403 	and.w	r4, r4, #3
  4015da:	b12c      	cbz	r4, 4015e8 <memset+0x90>
  4015dc:	b2c9      	uxtb	r1, r1
  4015de:	441c      	add	r4, r3
  4015e0:	f803 1b01 	strb.w	r1, [r3], #1
  4015e4:	429c      	cmp	r4, r3
  4015e6:	d1fb      	bne.n	4015e0 <memset+0x88>
  4015e8:	bc70      	pop	{r4, r5, r6}
  4015ea:	4770      	bx	lr
  4015ec:	4614      	mov	r4, r2
  4015ee:	4603      	mov	r3, r0
  4015f0:	e7c2      	b.n	401578 <memset+0x20>
  4015f2:	bf00      	nop

004015f4 <_puts_r>:
  4015f4:	b5f0      	push	{r4, r5, r6, r7, lr}
  4015f6:	4605      	mov	r5, r0
  4015f8:	b089      	sub	sp, #36	; 0x24
  4015fa:	4608      	mov	r0, r1
  4015fc:	460c      	mov	r4, r1
  4015fe:	2701      	movs	r7, #1
  401600:	f000 f8e2 	bl	4017c8 <strlen>
  401604:	2602      	movs	r6, #2
  401606:	19c3      	adds	r3, r0, r7
  401608:	4913      	ldr	r1, [pc, #76]	; (401658 <_puts_r+0x64>)
  40160a:	9303      	str	r3, [sp, #12]
  40160c:	6bab      	ldr	r3, [r5, #56]	; 0x38
  40160e:	aa04      	add	r2, sp, #16
  401610:	9404      	str	r4, [sp, #16]
  401612:	9005      	str	r0, [sp, #20]
  401614:	68ac      	ldr	r4, [r5, #8]
  401616:	9707      	str	r7, [sp, #28]
  401618:	9602      	str	r6, [sp, #8]
  40161a:	9106      	str	r1, [sp, #24]
  40161c:	9201      	str	r2, [sp, #4]
  40161e:	b1b3      	cbz	r3, 40164e <_puts_r+0x5a>
  401620:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  401624:	049a      	lsls	r2, r3, #18
  401626:	d406      	bmi.n	401636 <_puts_r+0x42>
  401628:	6e62      	ldr	r2, [r4, #100]	; 0x64
  40162a:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
  40162e:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
  401632:	81a3      	strh	r3, [r4, #12]
  401634:	6662      	str	r2, [r4, #100]	; 0x64
  401636:	4621      	mov	r1, r4
  401638:	4628      	mov	r0, r5
  40163a:	aa01      	add	r2, sp, #4
  40163c:	f001 fabe 	bl	402bbc <__sfvwrite_r>
  401640:	2800      	cmp	r0, #0
  401642:	bf14      	ite	ne
  401644:	f04f 30ff 	movne.w	r0, #4294967295
  401648:	200a      	moveq	r0, #10
  40164a:	b009      	add	sp, #36	; 0x24
  40164c:	bdf0      	pop	{r4, r5, r6, r7, pc}
  40164e:	4628      	mov	r0, r5
  401650:	f001 f8fc 	bl	40284c <__sinit>
  401654:	e7e4      	b.n	401620 <_puts_r+0x2c>
  401656:	bf00      	nop
  401658:	00404310 	.word	0x00404310

0040165c <puts>:
  40165c:	4b02      	ldr	r3, [pc, #8]	; (401668 <puts+0xc>)
  40165e:	4601      	mov	r1, r0
  401660:	6818      	ldr	r0, [r3, #0]
  401662:	f7ff bfc7 	b.w	4015f4 <_puts_r>
  401666:	bf00      	nop
  401668:	20000108 	.word	0x20000108

0040166c <setbuf>:
  40166c:	2900      	cmp	r1, #0
  40166e:	bf0c      	ite	eq
  401670:	2202      	moveq	r2, #2
  401672:	2200      	movne	r2, #0
  401674:	f44f 6380 	mov.w	r3, #1024	; 0x400
  401678:	f000 b800 	b.w	40167c <setvbuf>

0040167c <setvbuf>:
  40167c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
  401680:	4d50      	ldr	r5, [pc, #320]	; (4017c4 <setvbuf+0x148>)
  401682:	b083      	sub	sp, #12
  401684:	682d      	ldr	r5, [r5, #0]
  401686:	4604      	mov	r4, r0
  401688:	460f      	mov	r7, r1
  40168a:	4690      	mov	r8, r2
  40168c:	461e      	mov	r6, r3
  40168e:	b115      	cbz	r5, 401696 <setvbuf+0x1a>
  401690:	6bab      	ldr	r3, [r5, #56]	; 0x38
  401692:	2b00      	cmp	r3, #0
  401694:	d077      	beq.n	401786 <setvbuf+0x10a>
  401696:	f1b8 0f02 	cmp.w	r8, #2
  40169a:	d004      	beq.n	4016a6 <setvbuf+0x2a>
  40169c:	f1b8 0f01 	cmp.w	r8, #1
  4016a0:	d87d      	bhi.n	40179e <setvbuf+0x122>
  4016a2:	2e00      	cmp	r6, #0
  4016a4:	db7b      	blt.n	40179e <setvbuf+0x122>
  4016a6:	4621      	mov	r1, r4
  4016a8:	4628      	mov	r0, r5
  4016aa:	f001 f83b 	bl	402724 <_fflush_r>
  4016ae:	6b21      	ldr	r1, [r4, #48]	; 0x30
  4016b0:	b141      	cbz	r1, 4016c4 <setvbuf+0x48>
  4016b2:	f104 0340 	add.w	r3, r4, #64	; 0x40
  4016b6:	4299      	cmp	r1, r3
  4016b8:	d002      	beq.n	4016c0 <setvbuf+0x44>
  4016ba:	4628      	mov	r0, r5
  4016bc:	f001 f998 	bl	4029f0 <_free_r>
  4016c0:	2300      	movs	r3, #0
  4016c2:	6323      	str	r3, [r4, #48]	; 0x30
  4016c4:	2200      	movs	r2, #0
  4016c6:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  4016ca:	61a2      	str	r2, [r4, #24]
  4016cc:	6062      	str	r2, [r4, #4]
  4016ce:	061a      	lsls	r2, r3, #24
  4016d0:	d452      	bmi.n	401778 <setvbuf+0xfc>
  4016d2:	f423 634a 	bic.w	r3, r3, #3232	; 0xca0
  4016d6:	f023 0303 	bic.w	r3, r3, #3
  4016da:	f1b8 0f02 	cmp.w	r8, #2
  4016de:	81a3      	strh	r3, [r4, #12]
  4016e0:	d037      	beq.n	401752 <setvbuf+0xd6>
  4016e2:	ab01      	add	r3, sp, #4
  4016e4:	466a      	mov	r2, sp
  4016e6:	4621      	mov	r1, r4
  4016e8:	4628      	mov	r0, r5
  4016ea:	f001 fc17 	bl	402f1c <__swhatbuf_r>
  4016ee:	89a3      	ldrh	r3, [r4, #12]
  4016f0:	4318      	orrs	r0, r3
  4016f2:	81a0      	strh	r0, [r4, #12]
  4016f4:	b316      	cbz	r6, 40173c <setvbuf+0xc0>
  4016f6:	b317      	cbz	r7, 40173e <setvbuf+0xc2>
  4016f8:	6bab      	ldr	r3, [r5, #56]	; 0x38
  4016fa:	2b00      	cmp	r3, #0
  4016fc:	d04b      	beq.n	401796 <setvbuf+0x11a>
  4016fe:	9b00      	ldr	r3, [sp, #0]
  401700:	6027      	str	r7, [r4, #0]
  401702:	429e      	cmp	r6, r3
  401704:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  401708:	6127      	str	r7, [r4, #16]
  40170a:	bf1c      	itt	ne
  40170c:	f443 6300 	orrne.w	r3, r3, #2048	; 0x800
  401710:	81a3      	strhne	r3, [r4, #12]
  401712:	f1b8 0f01 	cmp.w	r8, #1
  401716:	bf04      	itt	eq
  401718:	f043 0301 	orreq.w	r3, r3, #1
  40171c:	81a3      	strheq	r3, [r4, #12]
  40171e:	b29b      	uxth	r3, r3
  401720:	f013 0008 	ands.w	r0, r3, #8
  401724:	6166      	str	r6, [r4, #20]
  401726:	d023      	beq.n	401770 <setvbuf+0xf4>
  401728:	f013 0001 	ands.w	r0, r3, #1
  40172c:	d02f      	beq.n	40178e <setvbuf+0x112>
  40172e:	2000      	movs	r0, #0
  401730:	4276      	negs	r6, r6
  401732:	61a6      	str	r6, [r4, #24]
  401734:	60a0      	str	r0, [r4, #8]
  401736:	b003      	add	sp, #12
  401738:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
  40173c:	9e00      	ldr	r6, [sp, #0]
  40173e:	4630      	mov	r0, r6
  401740:	f001 fc5e 	bl	403000 <malloc>
  401744:	4607      	mov	r7, r0
  401746:	b368      	cbz	r0, 4017a4 <setvbuf+0x128>
  401748:	89a3      	ldrh	r3, [r4, #12]
  40174a:	f043 0380 	orr.w	r3, r3, #128	; 0x80
  40174e:	81a3      	strh	r3, [r4, #12]
  401750:	e7d2      	b.n	4016f8 <setvbuf+0x7c>
  401752:	2000      	movs	r0, #0
  401754:	2500      	movs	r5, #0
  401756:	2101      	movs	r1, #1
  401758:	f104 0243 	add.w	r2, r4, #67	; 0x43
  40175c:	f043 0302 	orr.w	r3, r3, #2
  401760:	81a3      	strh	r3, [r4, #12]
  401762:	60a5      	str	r5, [r4, #8]
  401764:	6161      	str	r1, [r4, #20]
  401766:	6022      	str	r2, [r4, #0]
  401768:	6122      	str	r2, [r4, #16]
  40176a:	b003      	add	sp, #12
  40176c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
  401770:	60a0      	str	r0, [r4, #8]
  401772:	b003      	add	sp, #12
  401774:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
  401778:	6921      	ldr	r1, [r4, #16]
  40177a:	4628      	mov	r0, r5
  40177c:	f001 f938 	bl	4029f0 <_free_r>
  401780:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  401784:	e7a5      	b.n	4016d2 <setvbuf+0x56>
  401786:	4628      	mov	r0, r5
  401788:	f001 f860 	bl	40284c <__sinit>
  40178c:	e783      	b.n	401696 <setvbuf+0x1a>
  40178e:	60a6      	str	r6, [r4, #8]
  401790:	b003      	add	sp, #12
  401792:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
  401796:	4628      	mov	r0, r5
  401798:	f001 f858 	bl	40284c <__sinit>
  40179c:	e7af      	b.n	4016fe <setvbuf+0x82>
  40179e:	f04f 30ff 	mov.w	r0, #4294967295
  4017a2:	e7e2      	b.n	40176a <setvbuf+0xee>
  4017a4:	f8dd 9000 	ldr.w	r9, [sp]
  4017a8:	45b1      	cmp	r9, r6
  4017aa:	d006      	beq.n	4017ba <setvbuf+0x13e>
  4017ac:	4648      	mov	r0, r9
  4017ae:	f001 fc27 	bl	403000 <malloc>
  4017b2:	4607      	mov	r7, r0
  4017b4:	b108      	cbz	r0, 4017ba <setvbuf+0x13e>
  4017b6:	464e      	mov	r6, r9
  4017b8:	e7c6      	b.n	401748 <setvbuf+0xcc>
  4017ba:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  4017be:	f04f 30ff 	mov.w	r0, #4294967295
  4017c2:	e7c7      	b.n	401754 <setvbuf+0xd8>
  4017c4:	20000108 	.word	0x20000108

004017c8 <strlen>:
  4017c8:	f020 0103 	bic.w	r1, r0, #3
  4017cc:	f010 0003 	ands.w	r0, r0, #3
  4017d0:	f1c0 0000 	rsb	r0, r0, #0
  4017d4:	f851 3b04 	ldr.w	r3, [r1], #4
  4017d8:	f100 0c04 	add.w	ip, r0, #4
  4017dc:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
  4017e0:	f06f 0200 	mvn.w	r2, #0
  4017e4:	bf1c      	itt	ne
  4017e6:	fa22 f20c 	lsrne.w	r2, r2, ip
  4017ea:	4313      	orrne	r3, r2
  4017ec:	f04f 0c01 	mov.w	ip, #1
  4017f0:	ea4c 2c0c 	orr.w	ip, ip, ip, lsl #8
  4017f4:	ea4c 4c0c 	orr.w	ip, ip, ip, lsl #16
  4017f8:	eba3 020c 	sub.w	r2, r3, ip
  4017fc:	ea22 0203 	bic.w	r2, r2, r3
  401800:	ea12 12cc 	ands.w	r2, r2, ip, lsl #7
  401804:	bf04      	itt	eq
  401806:	f851 3b04 	ldreq.w	r3, [r1], #4
  40180a:	3004      	addeq	r0, #4
  40180c:	d0f4      	beq.n	4017f8 <strlen+0x30>
  40180e:	f1c2 0100 	rsb	r1, r2, #0
  401812:	ea02 0201 	and.w	r2, r2, r1
  401816:	fab2 f282 	clz	r2, r2
  40181a:	f1c2 021f 	rsb	r2, r2, #31
  40181e:	eb00 00d2 	add.w	r0, r0, r2, lsr #3
  401822:	4770      	bx	lr

00401824 <__sprint_r.part.0>:
  401824:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
  401828:	6e4b      	ldr	r3, [r1, #100]	; 0x64
  40182a:	4693      	mov	fp, r2
  40182c:	049c      	lsls	r4, r3, #18
  40182e:	d52f      	bpl.n	401890 <__sprint_r.part.0+0x6c>
  401830:	6893      	ldr	r3, [r2, #8]
  401832:	6812      	ldr	r2, [r2, #0]
  401834:	b353      	cbz	r3, 40188c <__sprint_r.part.0+0x68>
  401836:	460e      	mov	r6, r1
  401838:	4607      	mov	r7, r0
  40183a:	f102 0908 	add.w	r9, r2, #8
  40183e:	e919 0420 	ldmdb	r9, {r5, sl}
  401842:	ea5f 089a 	movs.w	r8, sl, lsr #2
  401846:	d017      	beq.n	401878 <__sprint_r.part.0+0x54>
  401848:	2400      	movs	r4, #0
  40184a:	3d04      	subs	r5, #4
  40184c:	e001      	b.n	401852 <__sprint_r.part.0+0x2e>
  40184e:	45a0      	cmp	r8, r4
  401850:	d010      	beq.n	401874 <__sprint_r.part.0+0x50>
  401852:	4632      	mov	r2, r6
  401854:	f855 1f04 	ldr.w	r1, [r5, #4]!
  401858:	4638      	mov	r0, r7
  40185a:	f001 f867 	bl	40292c <_fputwc_r>
  40185e:	1c43      	adds	r3, r0, #1
  401860:	f104 0401 	add.w	r4, r4, #1
  401864:	d1f3      	bne.n	40184e <__sprint_r.part.0+0x2a>
  401866:	2300      	movs	r3, #0
  401868:	f8cb 3008 	str.w	r3, [fp, #8]
  40186c:	f8cb 3004 	str.w	r3, [fp, #4]
  401870:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
  401874:	f8db 3008 	ldr.w	r3, [fp, #8]
  401878:	f02a 0a03 	bic.w	sl, sl, #3
  40187c:	eba3 030a 	sub.w	r3, r3, sl
  401880:	f8cb 3008 	str.w	r3, [fp, #8]
  401884:	f109 0908 	add.w	r9, r9, #8
  401888:	2b00      	cmp	r3, #0
  40188a:	d1d8      	bne.n	40183e <__sprint_r.part.0+0x1a>
  40188c:	2000      	movs	r0, #0
  40188e:	e7ea      	b.n	401866 <__sprint_r.part.0+0x42>
  401890:	f001 f994 	bl	402bbc <__sfvwrite_r>
  401894:	2300      	movs	r3, #0
  401896:	f8cb 3008 	str.w	r3, [fp, #8]
  40189a:	f8cb 3004 	str.w	r3, [fp, #4]
  40189e:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
  4018a2:	bf00      	nop

004018a4 <_vfiprintf_r>:
  4018a4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  4018a8:	b0ad      	sub	sp, #180	; 0xb4
  4018aa:	461d      	mov	r5, r3
  4018ac:	9101      	str	r1, [sp, #4]
  4018ae:	4691      	mov	r9, r2
  4018b0:	9308      	str	r3, [sp, #32]
  4018b2:	9006      	str	r0, [sp, #24]
  4018b4:	b118      	cbz	r0, 4018be <_vfiprintf_r+0x1a>
  4018b6:	6b83      	ldr	r3, [r0, #56]	; 0x38
  4018b8:	2b00      	cmp	r3, #0
  4018ba:	f000 80e0 	beq.w	401a7e <_vfiprintf_r+0x1da>
  4018be:	9c01      	ldr	r4, [sp, #4]
  4018c0:	f9b4 000c 	ldrsh.w	r0, [r4, #12]
  4018c4:	b281      	uxth	r1, r0
  4018c6:	048b      	lsls	r3, r1, #18
  4018c8:	d407      	bmi.n	4018da <_vfiprintf_r+0x36>
  4018ca:	6e63      	ldr	r3, [r4, #100]	; 0x64
  4018cc:	f440 5100 	orr.w	r1, r0, #8192	; 0x2000
  4018d0:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
  4018d4:	81a1      	strh	r1, [r4, #12]
  4018d6:	6663      	str	r3, [r4, #100]	; 0x64
  4018d8:	b289      	uxth	r1, r1
  4018da:	070f      	lsls	r7, r1, #28
  4018dc:	f140 80b1 	bpl.w	401a42 <_vfiprintf_r+0x19e>
  4018e0:	9b01      	ldr	r3, [sp, #4]
  4018e2:	691b      	ldr	r3, [r3, #16]
  4018e4:	2b00      	cmp	r3, #0
  4018e6:	f000 80ac 	beq.w	401a42 <_vfiprintf_r+0x19e>
  4018ea:	f001 011a 	and.w	r1, r1, #26
  4018ee:	290a      	cmp	r1, #10
  4018f0:	f000 80b5 	beq.w	401a5e <_vfiprintf_r+0x1ba>
  4018f4:	2300      	movs	r3, #0
  4018f6:	f10d 0a70 	add.w	sl, sp, #112	; 0x70
  4018fa:	46d3      	mov	fp, sl
  4018fc:	930b      	str	r3, [sp, #44]	; 0x2c
  4018fe:	9304      	str	r3, [sp, #16]
  401900:	9311      	str	r3, [sp, #68]	; 0x44
  401902:	9310      	str	r3, [sp, #64]	; 0x40
  401904:	f8cd a03c 	str.w	sl, [sp, #60]	; 0x3c
  401908:	f899 3000 	ldrb.w	r3, [r9]
  40190c:	464c      	mov	r4, r9
  40190e:	b1fb      	cbz	r3, 401950 <_vfiprintf_r+0xac>
  401910:	2b25      	cmp	r3, #37	; 0x25
  401912:	d102      	bne.n	40191a <_vfiprintf_r+0x76>
  401914:	e01c      	b.n	401950 <_vfiprintf_r+0xac>
  401916:	2b25      	cmp	r3, #37	; 0x25
  401918:	d003      	beq.n	401922 <_vfiprintf_r+0x7e>
  40191a:	f814 3f01 	ldrb.w	r3, [r4, #1]!
  40191e:	2b00      	cmp	r3, #0
  401920:	d1f9      	bne.n	401916 <_vfiprintf_r+0x72>
  401922:	eba4 0509 	sub.w	r5, r4, r9
  401926:	b19d      	cbz	r5, 401950 <_vfiprintf_r+0xac>
  401928:	9b10      	ldr	r3, [sp, #64]	; 0x40
  40192a:	9a11      	ldr	r2, [sp, #68]	; 0x44
  40192c:	3301      	adds	r3, #1
  40192e:	442a      	add	r2, r5
  401930:	2b07      	cmp	r3, #7
  401932:	f8cb 9000 	str.w	r9, [fp]
  401936:	f8cb 5004 	str.w	r5, [fp, #4]
  40193a:	9211      	str	r2, [sp, #68]	; 0x44
  40193c:	9310      	str	r3, [sp, #64]	; 0x40
  40193e:	dd7a      	ble.n	401a36 <_vfiprintf_r+0x192>
  401940:	2a00      	cmp	r2, #0
  401942:	f040 8493 	bne.w	40226c <_vfiprintf_r+0x9c8>
  401946:	46d3      	mov	fp, sl
  401948:	9b04      	ldr	r3, [sp, #16]
  40194a:	9210      	str	r2, [sp, #64]	; 0x40
  40194c:	442b      	add	r3, r5
  40194e:	9304      	str	r3, [sp, #16]
  401950:	7823      	ldrb	r3, [r4, #0]
  401952:	2b00      	cmp	r3, #0
  401954:	f000 83b6 	beq.w	4020c4 <_vfiprintf_r+0x820>
  401958:	2000      	movs	r0, #0
  40195a:	f04f 0300 	mov.w	r3, #0
  40195e:	f104 0901 	add.w	r9, r4, #1
  401962:	f88d 3037 	strb.w	r3, [sp, #55]	; 0x37
  401966:	7862      	ldrb	r2, [r4, #1]
  401968:	4606      	mov	r6, r0
  40196a:	4605      	mov	r5, r0
  40196c:	4603      	mov	r3, r0
  40196e:	f04f 34ff 	mov.w	r4, #4294967295
  401972:	f109 0901 	add.w	r9, r9, #1
  401976:	f1a2 0120 	sub.w	r1, r2, #32
  40197a:	2958      	cmp	r1, #88	; 0x58
  40197c:	f200 830a 	bhi.w	401f94 <_vfiprintf_r+0x6f0>
  401980:	e8df f011 	tbh	[pc, r1, lsl #1]
  401984:	0308023f 	.word	0x0308023f
  401988:	02e70308 	.word	0x02e70308
  40198c:	03080308 	.word	0x03080308
  401990:	03080308 	.word	0x03080308
  401994:	03080308 	.word	0x03080308
  401998:	02ec0080 	.word	0x02ec0080
  40199c:	00880308 	.word	0x00880308
  4019a0:	0308027f 	.word	0x0308027f
  4019a4:	01db01d6 	.word	0x01db01d6
  4019a8:	01db01db 	.word	0x01db01db
  4019ac:	01db01db 	.word	0x01db01db
  4019b0:	01db01db 	.word	0x01db01db
  4019b4:	01db01db 	.word	0x01db01db
  4019b8:	03080308 	.word	0x03080308
  4019bc:	03080308 	.word	0x03080308
  4019c0:	03080308 	.word	0x03080308
  4019c4:	03080308 	.word	0x03080308
  4019c8:	03080308 	.word	0x03080308
  4019cc:	03080247 	.word	0x03080247
  4019d0:	03080308 	.word	0x03080308
  4019d4:	03080308 	.word	0x03080308
  4019d8:	03080308 	.word	0x03080308
  4019dc:	03080308 	.word	0x03080308
  4019e0:	024e0308 	.word	0x024e0308
  4019e4:	03080308 	.word	0x03080308
  4019e8:	03080308 	.word	0x03080308
  4019ec:	02520308 	.word	0x02520308
  4019f0:	03080308 	.word	0x03080308
  4019f4:	0308025a 	.word	0x0308025a
  4019f8:	03080308 	.word	0x03080308
  4019fc:	03080308 	.word	0x03080308
  401a00:	03080308 	.word	0x03080308
  401a04:	03080308 	.word	0x03080308
  401a08:	01e90308 	.word	0x01e90308
  401a0c:	030801fe 	.word	0x030801fe
  401a10:	03080308 	.word	0x03080308
  401a14:	01fe0303 	.word	0x01fe0303
  401a18:	03080308 	.word	0x03080308
  401a1c:	03080299 	.word	0x03080299
  401a20:	008d02f1 	.word	0x008d02f1
  401a24:	02bf02ad 	.word	0x02bf02ad
  401a28:	02c40308 	.word	0x02c40308
  401a2c:	01c40308 	.word	0x01c40308
  401a30:	03080308 	.word	0x03080308
  401a34:	02a6      	.short	0x02a6
  401a36:	f10b 0b08 	add.w	fp, fp, #8
  401a3a:	9b04      	ldr	r3, [sp, #16]
  401a3c:	442b      	add	r3, r5
  401a3e:	9304      	str	r3, [sp, #16]
  401a40:	e786      	b.n	401950 <_vfiprintf_r+0xac>
  401a42:	9c01      	ldr	r4, [sp, #4]
  401a44:	9806      	ldr	r0, [sp, #24]
  401a46:	4621      	mov	r1, r4
  401a48:	f000 fd5c 	bl	402504 <__swsetup_r>
  401a4c:	2800      	cmp	r0, #0
  401a4e:	f040 8345 	bne.w	4020dc <_vfiprintf_r+0x838>
  401a52:	89a1      	ldrh	r1, [r4, #12]
  401a54:	f001 011a 	and.w	r1, r1, #26
  401a58:	290a      	cmp	r1, #10
  401a5a:	f47f af4b 	bne.w	4018f4 <_vfiprintf_r+0x50>
  401a5e:	9901      	ldr	r1, [sp, #4]
  401a60:	f9b1 300e 	ldrsh.w	r3, [r1, #14]
  401a64:	2b00      	cmp	r3, #0
  401a66:	f6ff af45 	blt.w	4018f4 <_vfiprintf_r+0x50>
  401a6a:	462b      	mov	r3, r5
  401a6c:	464a      	mov	r2, r9
  401a6e:	9806      	ldr	r0, [sp, #24]
  401a70:	f000 fd12 	bl	402498 <__sbprintf>
  401a74:	9004      	str	r0, [sp, #16]
  401a76:	9804      	ldr	r0, [sp, #16]
  401a78:	b02d      	add	sp, #180	; 0xb4
  401a7a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  401a7e:	f000 fee5 	bl	40284c <__sinit>
  401a82:	e71c      	b.n	4018be <_vfiprintf_r+0x1a>
  401a84:	9908      	ldr	r1, [sp, #32]
  401a86:	460a      	mov	r2, r1
  401a88:	680d      	ldr	r5, [r1, #0]
  401a8a:	3204      	adds	r2, #4
  401a8c:	2d00      	cmp	r5, #0
  401a8e:	9208      	str	r2, [sp, #32]
  401a90:	da02      	bge.n	401a98 <_vfiprintf_r+0x1f4>
  401a92:	426d      	negs	r5, r5
  401a94:	f043 0304 	orr.w	r3, r3, #4
  401a98:	f899 2000 	ldrb.w	r2, [r9]
  401a9c:	e769      	b.n	401972 <_vfiprintf_r+0xce>
  401a9e:	9507      	str	r5, [sp, #28]
  401aa0:	f013 0220 	ands.w	r2, r3, #32
  401aa4:	f040 843d 	bne.w	402322 <_vfiprintf_r+0xa7e>
  401aa8:	f013 0110 	ands.w	r1, r3, #16
  401aac:	f040 83e9 	bne.w	402282 <_vfiprintf_r+0x9de>
  401ab0:	f013 0240 	ands.w	r2, r3, #64	; 0x40
  401ab4:	f000 83e5 	beq.w	402282 <_vfiprintf_r+0x9de>
  401ab8:	9808      	ldr	r0, [sp, #32]
  401aba:	460a      	mov	r2, r1
  401abc:	4601      	mov	r1, r0
  401abe:	2700      	movs	r7, #0
  401ac0:	3104      	adds	r1, #4
  401ac2:	8806      	ldrh	r6, [r0, #0]
  401ac4:	9108      	str	r1, [sp, #32]
  401ac6:	f04f 0100 	mov.w	r1, #0
  401aca:	2500      	movs	r5, #0
  401acc:	f88d 1037 	strb.w	r1, [sp, #55]	; 0x37
  401ad0:	1c61      	adds	r1, r4, #1
  401ad2:	f000 8177 	beq.w	401dc4 <_vfiprintf_r+0x520>
  401ad6:	f023 0180 	bic.w	r1, r3, #128	; 0x80
  401ada:	9103      	str	r1, [sp, #12]
  401adc:	ea56 0107 	orrs.w	r1, r6, r7
  401ae0:	f040 8175 	bne.w	401dce <_vfiprintf_r+0x52a>
  401ae4:	2c00      	cmp	r4, #0
  401ae6:	f040 8354 	bne.w	402192 <_vfiprintf_r+0x8ee>
  401aea:	2a00      	cmp	r2, #0
  401aec:	f040 8393 	bne.w	402216 <_vfiprintf_r+0x972>
  401af0:	f013 0301 	ands.w	r3, r3, #1
  401af4:	9305      	str	r3, [sp, #20]
  401af6:	f000 8442 	beq.w	40237e <_vfiprintf_r+0xada>
  401afa:	2330      	movs	r3, #48	; 0x30
  401afc:	f10d 08b0 	add.w	r8, sp, #176	; 0xb0
  401b00:	f808 3d41 	strb.w	r3, [r8, #-65]!
  401b04:	9b05      	ldr	r3, [sp, #20]
  401b06:	42a3      	cmp	r3, r4
  401b08:	bfb8      	it	lt
  401b0a:	4623      	movlt	r3, r4
  401b0c:	9302      	str	r3, [sp, #8]
  401b0e:	b10d      	cbz	r5, 401b14 <_vfiprintf_r+0x270>
  401b10:	3301      	adds	r3, #1
  401b12:	9302      	str	r3, [sp, #8]
  401b14:	9b03      	ldr	r3, [sp, #12]
  401b16:	f013 0302 	ands.w	r3, r3, #2
  401b1a:	9309      	str	r3, [sp, #36]	; 0x24
  401b1c:	d002      	beq.n	401b24 <_vfiprintf_r+0x280>
  401b1e:	9b02      	ldr	r3, [sp, #8]
  401b20:	3302      	adds	r3, #2
  401b22:	9302      	str	r3, [sp, #8]
  401b24:	9b03      	ldr	r3, [sp, #12]
  401b26:	f013 0384 	ands.w	r3, r3, #132	; 0x84
  401b2a:	930a      	str	r3, [sp, #40]	; 0x28
  401b2c:	f040 8261 	bne.w	401ff2 <_vfiprintf_r+0x74e>
  401b30:	9b07      	ldr	r3, [sp, #28]
  401b32:	9a02      	ldr	r2, [sp, #8]
  401b34:	1a9d      	subs	r5, r3, r2
  401b36:	2d00      	cmp	r5, #0
  401b38:	f340 825b 	ble.w	401ff2 <_vfiprintf_r+0x74e>
  401b3c:	2d10      	cmp	r5, #16
  401b3e:	f340 8468 	ble.w	402412 <_vfiprintf_r+0xb6e>
  401b42:	9b10      	ldr	r3, [sp, #64]	; 0x40
  401b44:	46de      	mov	lr, fp
  401b46:	2710      	movs	r7, #16
  401b48:	46a3      	mov	fp, r4
  401b4a:	9a11      	ldr	r2, [sp, #68]	; 0x44
  401b4c:	4eb8      	ldr	r6, [pc, #736]	; (401e30 <_vfiprintf_r+0x58c>)
  401b4e:	4619      	mov	r1, r3
  401b50:	9c06      	ldr	r4, [sp, #24]
  401b52:	e007      	b.n	401b64 <_vfiprintf_r+0x2c0>
  401b54:	f101 0c02 	add.w	ip, r1, #2
  401b58:	4601      	mov	r1, r0
  401b5a:	f10e 0e08 	add.w	lr, lr, #8
  401b5e:	3d10      	subs	r5, #16
  401b60:	2d10      	cmp	r5, #16
  401b62:	dd11      	ble.n	401b88 <_vfiprintf_r+0x2e4>
  401b64:	1c48      	adds	r0, r1, #1
  401b66:	3210      	adds	r2, #16
  401b68:	2807      	cmp	r0, #7
  401b6a:	9211      	str	r2, [sp, #68]	; 0x44
  401b6c:	e88e 00c0 	stmia.w	lr, {r6, r7}
  401b70:	9010      	str	r0, [sp, #64]	; 0x40
  401b72:	ddef      	ble.n	401b54 <_vfiprintf_r+0x2b0>
  401b74:	2a00      	cmp	r2, #0
  401b76:	f040 8227 	bne.w	401fc8 <_vfiprintf_r+0x724>
  401b7a:	3d10      	subs	r5, #16
  401b7c:	2d10      	cmp	r5, #16
  401b7e:	4611      	mov	r1, r2
  401b80:	f04f 0c01 	mov.w	ip, #1
  401b84:	46d6      	mov	lr, sl
  401b86:	dced      	bgt.n	401b64 <_vfiprintf_r+0x2c0>
  401b88:	465c      	mov	r4, fp
  401b8a:	4661      	mov	r1, ip
  401b8c:	46f3      	mov	fp, lr
  401b8e:	442a      	add	r2, r5
  401b90:	2907      	cmp	r1, #7
  401b92:	9211      	str	r2, [sp, #68]	; 0x44
  401b94:	f8cb 6000 	str.w	r6, [fp]
  401b98:	f8cb 5004 	str.w	r5, [fp, #4]
  401b9c:	9110      	str	r1, [sp, #64]	; 0x40
  401b9e:	f300 82e4 	bgt.w	40216a <_vfiprintf_r+0x8c6>
  401ba2:	f89d 5037 	ldrb.w	r5, [sp, #55]	; 0x37
  401ba6:	f10b 0b08 	add.w	fp, fp, #8
  401baa:	1c48      	adds	r0, r1, #1
  401bac:	2d00      	cmp	r5, #0
  401bae:	f040 8228 	bne.w	402002 <_vfiprintf_r+0x75e>
  401bb2:	9b09      	ldr	r3, [sp, #36]	; 0x24
  401bb4:	2b00      	cmp	r3, #0
  401bb6:	f000 8242 	beq.w	40203e <_vfiprintf_r+0x79a>
  401bba:	2102      	movs	r1, #2
  401bbc:	ab0e      	add	r3, sp, #56	; 0x38
  401bbe:	440a      	add	r2, r1
  401bc0:	2807      	cmp	r0, #7
  401bc2:	9211      	str	r2, [sp, #68]	; 0x44
  401bc4:	9010      	str	r0, [sp, #64]	; 0x40
  401bc6:	f8cb 1004 	str.w	r1, [fp, #4]
  401bca:	f8cb 3000 	str.w	r3, [fp]
  401bce:	f340 8232 	ble.w	402036 <_vfiprintf_r+0x792>
  401bd2:	2a00      	cmp	r2, #0
  401bd4:	f040 8378 	bne.w	4022c8 <_vfiprintf_r+0xa24>
  401bd8:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  401bda:	2001      	movs	r0, #1
  401bdc:	2b80      	cmp	r3, #128	; 0x80
  401bde:	4611      	mov	r1, r2
  401be0:	46d3      	mov	fp, sl
  401be2:	f040 8230 	bne.w	402046 <_vfiprintf_r+0x7a2>
  401be6:	9b07      	ldr	r3, [sp, #28]
  401be8:	9d02      	ldr	r5, [sp, #8]
  401bea:	1b5e      	subs	r6, r3, r5
  401bec:	2e00      	cmp	r6, #0
  401bee:	f340 822a 	ble.w	402046 <_vfiprintf_r+0x7a2>
  401bf2:	2e10      	cmp	r6, #16
  401bf4:	f340 8428 	ble.w	402448 <_vfiprintf_r+0xba4>
  401bf8:	46dc      	mov	ip, fp
  401bfa:	2710      	movs	r7, #16
  401bfc:	46a3      	mov	fp, r4
  401bfe:	4d8d      	ldr	r5, [pc, #564]	; (401e34 <_vfiprintf_r+0x590>)
  401c00:	9c06      	ldr	r4, [sp, #24]
  401c02:	e007      	b.n	401c14 <_vfiprintf_r+0x370>
  401c04:	f101 0e02 	add.w	lr, r1, #2
  401c08:	4601      	mov	r1, r0
  401c0a:	f10c 0c08 	add.w	ip, ip, #8
  401c0e:	3e10      	subs	r6, #16
  401c10:	2e10      	cmp	r6, #16
  401c12:	dd11      	ble.n	401c38 <_vfiprintf_r+0x394>
  401c14:	1c48      	adds	r0, r1, #1
  401c16:	3210      	adds	r2, #16
  401c18:	2807      	cmp	r0, #7
  401c1a:	9211      	str	r2, [sp, #68]	; 0x44
  401c1c:	e88c 00a0 	stmia.w	ip, {r5, r7}
  401c20:	9010      	str	r0, [sp, #64]	; 0x40
  401c22:	ddef      	ble.n	401c04 <_vfiprintf_r+0x360>
  401c24:	2a00      	cmp	r2, #0
  401c26:	f040 8293 	bne.w	402150 <_vfiprintf_r+0x8ac>
  401c2a:	3e10      	subs	r6, #16
  401c2c:	2e10      	cmp	r6, #16
  401c2e:	f04f 0e01 	mov.w	lr, #1
  401c32:	4611      	mov	r1, r2
  401c34:	46d4      	mov	ip, sl
  401c36:	dced      	bgt.n	401c14 <_vfiprintf_r+0x370>
  401c38:	465c      	mov	r4, fp
  401c3a:	46e3      	mov	fp, ip
  401c3c:	4432      	add	r2, r6
  401c3e:	f1be 0f07 	cmp.w	lr, #7
  401c42:	9211      	str	r2, [sp, #68]	; 0x44
  401c44:	e88b 0060 	stmia.w	fp, {r5, r6}
  401c48:	f8cd e040 	str.w	lr, [sp, #64]	; 0x40
  401c4c:	f300 8356 	bgt.w	4022fc <_vfiprintf_r+0xa58>
  401c50:	9b05      	ldr	r3, [sp, #20]
  401c52:	f10b 0b08 	add.w	fp, fp, #8
  401c56:	1ae4      	subs	r4, r4, r3
  401c58:	2c00      	cmp	r4, #0
  401c5a:	f10e 0001 	add.w	r0, lr, #1
  401c5e:	4671      	mov	r1, lr
  401c60:	f300 81f6 	bgt.w	402050 <_vfiprintf_r+0x7ac>
  401c64:	9905      	ldr	r1, [sp, #20]
  401c66:	2807      	cmp	r0, #7
  401c68:	440a      	add	r2, r1
  401c6a:	9211      	str	r2, [sp, #68]	; 0x44
  401c6c:	f8cb 8000 	str.w	r8, [fp]
  401c70:	f8cb 1004 	str.w	r1, [fp, #4]
  401c74:	9010      	str	r0, [sp, #64]	; 0x40
  401c76:	f340 8252 	ble.w	40211e <_vfiprintf_r+0x87a>
  401c7a:	2a00      	cmp	r2, #0
  401c7c:	f040 82eb 	bne.w	402256 <_vfiprintf_r+0x9b2>
  401c80:	9b03      	ldr	r3, [sp, #12]
  401c82:	9210      	str	r2, [sp, #64]	; 0x40
  401c84:	0758      	lsls	r0, r3, #29
  401c86:	d538      	bpl.n	401cfa <_vfiprintf_r+0x456>
  401c88:	9b07      	ldr	r3, [sp, #28]
  401c8a:	9902      	ldr	r1, [sp, #8]
  401c8c:	1a5c      	subs	r4, r3, r1
  401c8e:	2c00      	cmp	r4, #0
  401c90:	f340 82b7 	ble.w	402202 <_vfiprintf_r+0x95e>
  401c94:	46d3      	mov	fp, sl
  401c96:	2c10      	cmp	r4, #16
  401c98:	f340 83ca 	ble.w	402430 <_vfiprintf_r+0xb8c>
  401c9c:	2510      	movs	r5, #16
  401c9e:	9910      	ldr	r1, [sp, #64]	; 0x40
  401ca0:	4e63      	ldr	r6, [pc, #396]	; (401e30 <_vfiprintf_r+0x58c>)
  401ca2:	9f06      	ldr	r7, [sp, #24]
  401ca4:	f8dd 8004 	ldr.w	r8, [sp, #4]
  401ca8:	e006      	b.n	401cb8 <_vfiprintf_r+0x414>
  401caa:	1c88      	adds	r0, r1, #2
  401cac:	4619      	mov	r1, r3
  401cae:	f10b 0b08 	add.w	fp, fp, #8
  401cb2:	3c10      	subs	r4, #16
  401cb4:	2c10      	cmp	r4, #16
  401cb6:	dd13      	ble.n	401ce0 <_vfiprintf_r+0x43c>
  401cb8:	1c4b      	adds	r3, r1, #1
  401cba:	3210      	adds	r2, #16
  401cbc:	2b07      	cmp	r3, #7
  401cbe:	9211      	str	r2, [sp, #68]	; 0x44
  401cc0:	f8cb 6000 	str.w	r6, [fp]
  401cc4:	f8cb 5004 	str.w	r5, [fp, #4]
  401cc8:	9310      	str	r3, [sp, #64]	; 0x40
  401cca:	ddee      	ble.n	401caa <_vfiprintf_r+0x406>
  401ccc:	2a00      	cmp	r2, #0
  401cce:	f040 8209 	bne.w	4020e4 <_vfiprintf_r+0x840>
  401cd2:	3c10      	subs	r4, #16
  401cd4:	2c10      	cmp	r4, #16
  401cd6:	f04f 0001 	mov.w	r0, #1
  401cda:	4611      	mov	r1, r2
  401cdc:	46d3      	mov	fp, sl
  401cde:	dceb      	bgt.n	401cb8 <_vfiprintf_r+0x414>
  401ce0:	4422      	add	r2, r4
  401ce2:	2807      	cmp	r0, #7
  401ce4:	9211      	str	r2, [sp, #68]	; 0x44
  401ce6:	f8cb 6000 	str.w	r6, [fp]
  401cea:	f8cb 4004 	str.w	r4, [fp, #4]
  401cee:	9010      	str	r0, [sp, #64]	; 0x40
  401cf0:	f340 8220 	ble.w	402134 <_vfiprintf_r+0x890>
  401cf4:	2a00      	cmp	r2, #0
  401cf6:	f040 8354 	bne.w	4023a2 <_vfiprintf_r+0xafe>
  401cfa:	9b04      	ldr	r3, [sp, #16]
  401cfc:	9a07      	ldr	r2, [sp, #28]
  401cfe:	9902      	ldr	r1, [sp, #8]
  401d00:	428a      	cmp	r2, r1
  401d02:	bfac      	ite	ge
  401d04:	189b      	addge	r3, r3, r2
  401d06:	185b      	addlt	r3, r3, r1
  401d08:	9304      	str	r3, [sp, #16]
  401d0a:	e21c      	b.n	402146 <_vfiprintf_r+0x8a2>
  401d0c:	9507      	str	r5, [sp, #28]
  401d0e:	069e      	lsls	r6, r3, #26
  401d10:	f100 8313 	bmi.w	40233a <_vfiprintf_r+0xa96>
  401d14:	9908      	ldr	r1, [sp, #32]
  401d16:	06dd      	lsls	r5, r3, #27
  401d18:	460a      	mov	r2, r1
  401d1a:	f100 82c5 	bmi.w	4022a8 <_vfiprintf_r+0xa04>
  401d1e:	0658      	lsls	r0, r3, #25
  401d20:	f140 82c2 	bpl.w	4022a8 <_vfiprintf_r+0xa04>
  401d24:	880e      	ldrh	r6, [r1, #0]
  401d26:	3104      	adds	r1, #4
  401d28:	2700      	movs	r7, #0
  401d2a:	2201      	movs	r2, #1
  401d2c:	9108      	str	r1, [sp, #32]
  401d2e:	e6ca      	b.n	401ac6 <_vfiprintf_r+0x222>
  401d30:	f043 0380 	orr.w	r3, r3, #128	; 0x80
  401d34:	f899 2000 	ldrb.w	r2, [r9]
  401d38:	e61b      	b.n	401972 <_vfiprintf_r+0xce>
  401d3a:	2500      	movs	r5, #0
  401d3c:	f1a2 0130 	sub.w	r1, r2, #48	; 0x30
  401d40:	f819 2b01 	ldrb.w	r2, [r9], #1
  401d44:	eb05 0585 	add.w	r5, r5, r5, lsl #2
  401d48:	eb01 0545 	add.w	r5, r1, r5, lsl #1
  401d4c:	f1a2 0130 	sub.w	r1, r2, #48	; 0x30
  401d50:	2909      	cmp	r1, #9
  401d52:	d9f5      	bls.n	401d40 <_vfiprintf_r+0x49c>
  401d54:	e60f      	b.n	401976 <_vfiprintf_r+0xd2>
  401d56:	2201      	movs	r2, #1
  401d58:	9808      	ldr	r0, [sp, #32]
  401d5a:	4611      	mov	r1, r2
  401d5c:	9202      	str	r2, [sp, #8]
  401d5e:	6802      	ldr	r2, [r0, #0]
  401d60:	f04f 0400 	mov.w	r4, #0
  401d64:	f88d 2048 	strb.w	r2, [sp, #72]	; 0x48
  401d68:	4602      	mov	r2, r0
  401d6a:	3204      	adds	r2, #4
  401d6c:	9507      	str	r5, [sp, #28]
  401d6e:	f88d 4037 	strb.w	r4, [sp, #55]	; 0x37
  401d72:	9105      	str	r1, [sp, #20]
  401d74:	9208      	str	r2, [sp, #32]
  401d76:	f10d 0848 	add.w	r8, sp, #72	; 0x48
  401d7a:	9303      	str	r3, [sp, #12]
  401d7c:	2400      	movs	r4, #0
  401d7e:	e6c9      	b.n	401b14 <_vfiprintf_r+0x270>
  401d80:	9507      	str	r5, [sp, #28]
  401d82:	2800      	cmp	r0, #0
  401d84:	f040 837e 	bne.w	402484 <_vfiprintf_r+0xbe0>
  401d88:	069e      	lsls	r6, r3, #26
  401d8a:	f100 82ec 	bmi.w	402366 <_vfiprintf_r+0xac2>
  401d8e:	9908      	ldr	r1, [sp, #32]
  401d90:	06dd      	lsls	r5, r3, #27
  401d92:	460a      	mov	r2, r1
  401d94:	f100 8281 	bmi.w	40229a <_vfiprintf_r+0x9f6>
  401d98:	0658      	lsls	r0, r3, #25
  401d9a:	f140 827e 	bpl.w	40229a <_vfiprintf_r+0x9f6>
  401d9e:	f9b1 6000 	ldrsh.w	r6, [r1]
  401da2:	3204      	adds	r2, #4
  401da4:	17f7      	asrs	r7, r6, #31
  401da6:	4630      	mov	r0, r6
  401da8:	4639      	mov	r1, r7
  401daa:	9208      	str	r2, [sp, #32]
  401dac:	2800      	cmp	r0, #0
  401dae:	f171 0200 	sbcs.w	r2, r1, #0
  401db2:	f2c0 82e7 	blt.w	402384 <_vfiprintf_r+0xae0>
  401db6:	1c61      	adds	r1, r4, #1
  401db8:	f89d 5037 	ldrb.w	r5, [sp, #55]	; 0x37
  401dbc:	f04f 0201 	mov.w	r2, #1
  401dc0:	f47f ae89 	bne.w	401ad6 <_vfiprintf_r+0x232>
  401dc4:	ea56 0107 	orrs.w	r1, r6, r7
  401dc8:	f000 81e4 	beq.w	402194 <_vfiprintf_r+0x8f0>
  401dcc:	9303      	str	r3, [sp, #12]
  401dce:	2a01      	cmp	r2, #1
  401dd0:	f000 8224 	beq.w	40221c <_vfiprintf_r+0x978>
  401dd4:	2a02      	cmp	r2, #2
  401dd6:	f040 81f1 	bne.w	4021bc <_vfiprintf_r+0x918>
  401dda:	46d0      	mov	r8, sl
  401ddc:	980b      	ldr	r0, [sp, #44]	; 0x2c
  401dde:	0933      	lsrs	r3, r6, #4
  401de0:	ea43 7307 	orr.w	r3, r3, r7, lsl #28
  401de4:	0939      	lsrs	r1, r7, #4
  401de6:	f006 020f 	and.w	r2, r6, #15
  401dea:	460f      	mov	r7, r1
  401dec:	461e      	mov	r6, r3
  401dee:	5c83      	ldrb	r3, [r0, r2]
  401df0:	f808 3d01 	strb.w	r3, [r8, #-1]!
  401df4:	ea56 0307 	orrs.w	r3, r6, r7
  401df8:	d1f1      	bne.n	401dde <_vfiprintf_r+0x53a>
  401dfa:	ebaa 0308 	sub.w	r3, sl, r8
  401dfe:	9305      	str	r3, [sp, #20]
  401e00:	e680      	b.n	401b04 <_vfiprintf_r+0x260>
  401e02:	f899 2000 	ldrb.w	r2, [r9]
  401e06:	2e00      	cmp	r6, #0
  401e08:	f47f adb3 	bne.w	401972 <_vfiprintf_r+0xce>
  401e0c:	2001      	movs	r0, #1
  401e0e:	2620      	movs	r6, #32
  401e10:	e5af      	b.n	401972 <_vfiprintf_r+0xce>
  401e12:	9507      	str	r5, [sp, #28]
  401e14:	2800      	cmp	r0, #0
  401e16:	f040 8332 	bne.w	40247e <_vfiprintf_r+0xbda>
  401e1a:	f043 0310 	orr.w	r3, r3, #16
  401e1e:	e7b3      	b.n	401d88 <_vfiprintf_r+0x4e4>
  401e20:	9507      	str	r5, [sp, #28]
  401e22:	f043 0310 	orr.w	r3, r3, #16
  401e26:	e63b      	b.n	401aa0 <_vfiprintf_r+0x1fc>
  401e28:	9507      	str	r5, [sp, #28]
  401e2a:	f043 0310 	orr.w	r3, r3, #16
  401e2e:	e76e      	b.n	401d0e <_vfiprintf_r+0x46a>
  401e30:	00404348 	.word	0x00404348
  401e34:	00404358 	.word	0x00404358
  401e38:	9507      	str	r5, [sp, #28]
  401e3a:	2800      	cmp	r0, #0
  401e3c:	f040 8316 	bne.w	40246c <_vfiprintf_r+0xbc8>
  401e40:	49ae      	ldr	r1, [pc, #696]	; (4020fc <_vfiprintf_r+0x858>)
  401e42:	910b      	str	r1, [sp, #44]	; 0x2c
  401e44:	069f      	lsls	r7, r3, #26
  401e46:	f100 8284 	bmi.w	402352 <_vfiprintf_r+0xaae>
  401e4a:	9808      	ldr	r0, [sp, #32]
  401e4c:	06de      	lsls	r6, r3, #27
  401e4e:	4601      	mov	r1, r0
  401e50:	f100 821e 	bmi.w	402290 <_vfiprintf_r+0x9ec>
  401e54:	065d      	lsls	r5, r3, #25
  401e56:	f140 821b 	bpl.w	402290 <_vfiprintf_r+0x9ec>
  401e5a:	2700      	movs	r7, #0
  401e5c:	3104      	adds	r1, #4
  401e5e:	8806      	ldrh	r6, [r0, #0]
  401e60:	9108      	str	r1, [sp, #32]
  401e62:	07d8      	lsls	r0, r3, #31
  401e64:	f140 81d5 	bpl.w	402212 <_vfiprintf_r+0x96e>
  401e68:	ea56 0107 	orrs.w	r1, r6, r7
  401e6c:	f000 81d1 	beq.w	402212 <_vfiprintf_r+0x96e>
  401e70:	2130      	movs	r1, #48	; 0x30
  401e72:	f88d 2039 	strb.w	r2, [sp, #57]	; 0x39
  401e76:	f043 0302 	orr.w	r3, r3, #2
  401e7a:	f88d 1038 	strb.w	r1, [sp, #56]	; 0x38
  401e7e:	2202      	movs	r2, #2
  401e80:	e621      	b.n	401ac6 <_vfiprintf_r+0x222>
  401e82:	f899 2000 	ldrb.w	r2, [r9]
  401e86:	f109 0701 	add.w	r7, r9, #1
  401e8a:	2a2a      	cmp	r2, #42	; 0x2a
  401e8c:	f000 82e0 	beq.w	402450 <_vfiprintf_r+0xbac>
  401e90:	f1a2 0130 	sub.w	r1, r2, #48	; 0x30
  401e94:	2909      	cmp	r1, #9
  401e96:	46b9      	mov	r9, r7
  401e98:	f04f 0400 	mov.w	r4, #0
  401e9c:	f63f ad6b 	bhi.w	401976 <_vfiprintf_r+0xd2>
  401ea0:	f819 2b01 	ldrb.w	r2, [r9], #1
  401ea4:	eb04 0484 	add.w	r4, r4, r4, lsl #2
  401ea8:	eb01 0444 	add.w	r4, r1, r4, lsl #1
  401eac:	f1a2 0130 	sub.w	r1, r2, #48	; 0x30
  401eb0:	2909      	cmp	r1, #9
  401eb2:	d9f5      	bls.n	401ea0 <_vfiprintf_r+0x5fc>
  401eb4:	e55f      	b.n	401976 <_vfiprintf_r+0xd2>
  401eb6:	f899 2000 	ldrb.w	r2, [r9]
  401eba:	2a6c      	cmp	r2, #108	; 0x6c
  401ebc:	bf03      	ittte	eq
  401ebe:	f899 2001 	ldrbeq.w	r2, [r9, #1]
  401ec2:	f043 0320 	orreq.w	r3, r3, #32
  401ec6:	f109 0901 	addeq.w	r9, r9, #1
  401eca:	f043 0310 	orrne.w	r3, r3, #16
  401ece:	e550      	b.n	401972 <_vfiprintf_r+0xce>
  401ed0:	9507      	str	r5, [sp, #28]
  401ed2:	2800      	cmp	r0, #0
  401ed4:	f040 82d0 	bne.w	402478 <_vfiprintf_r+0xbd4>
  401ed8:	4989      	ldr	r1, [pc, #548]	; (402100 <_vfiprintf_r+0x85c>)
  401eda:	910b      	str	r1, [sp, #44]	; 0x2c
  401edc:	e7b2      	b.n	401e44 <_vfiprintf_r+0x5a0>
  401ede:	2278      	movs	r2, #120	; 0x78
  401ee0:	2130      	movs	r1, #48	; 0x30
  401ee2:	9507      	str	r5, [sp, #28]
  401ee4:	9d08      	ldr	r5, [sp, #32]
  401ee6:	f88d 2039 	strb.w	r2, [sp, #57]	; 0x39
  401eea:	1d2a      	adds	r2, r5, #4
  401eec:	9208      	str	r2, [sp, #32]
  401eee:	4a84      	ldr	r2, [pc, #528]	; (402100 <_vfiprintf_r+0x85c>)
  401ef0:	682e      	ldr	r6, [r5, #0]
  401ef2:	920b      	str	r2, [sp, #44]	; 0x2c
  401ef4:	f043 0302 	orr.w	r3, r3, #2
  401ef8:	f88d 1038 	strb.w	r1, [sp, #56]	; 0x38
  401efc:	2700      	movs	r7, #0
  401efe:	2202      	movs	r2, #2
  401f00:	e5e1      	b.n	401ac6 <_vfiprintf_r+0x222>
  401f02:	f043 0320 	orr.w	r3, r3, #32
  401f06:	f899 2000 	ldrb.w	r2, [r9]
  401f0a:	e532      	b.n	401972 <_vfiprintf_r+0xce>
  401f0c:	f04f 0200 	mov.w	r2, #0
  401f10:	9908      	ldr	r1, [sp, #32]
  401f12:	9507      	str	r5, [sp, #28]
  401f14:	f8d1 8000 	ldr.w	r8, [r1]
  401f18:	f88d 2037 	strb.w	r2, [sp, #55]	; 0x37
  401f1c:	1d0d      	adds	r5, r1, #4
  401f1e:	f1b8 0f00 	cmp.w	r8, #0
  401f22:	f000 827c 	beq.w	40241e <_vfiprintf_r+0xb7a>
  401f26:	1c67      	adds	r7, r4, #1
  401f28:	f000 825b 	beq.w	4023e2 <_vfiprintf_r+0xb3e>
  401f2c:	4622      	mov	r2, r4
  401f2e:	2100      	movs	r1, #0
  401f30:	4640      	mov	r0, r8
  401f32:	9302      	str	r3, [sp, #8]
  401f34:	f001 fb24 	bl	403580 <memchr>
  401f38:	9b02      	ldr	r3, [sp, #8]
  401f3a:	2800      	cmp	r0, #0
  401f3c:	f000 827c 	beq.w	402438 <_vfiprintf_r+0xb94>
  401f40:	eba0 0208 	sub.w	r2, r0, r8
  401f44:	9508      	str	r5, [sp, #32]
  401f46:	9205      	str	r2, [sp, #20]
  401f48:	9303      	str	r3, [sp, #12]
  401f4a:	f89d 5037 	ldrb.w	r5, [sp, #55]	; 0x37
  401f4e:	2400      	movs	r4, #0
  401f50:	e5d8      	b.n	401b04 <_vfiprintf_r+0x260>
  401f52:	f043 0301 	orr.w	r3, r3, #1
  401f56:	f899 2000 	ldrb.w	r2, [r9]
  401f5a:	e50a      	b.n	401972 <_vfiprintf_r+0xce>
  401f5c:	f899 2000 	ldrb.w	r2, [r9]
  401f60:	2001      	movs	r0, #1
  401f62:	262b      	movs	r6, #43	; 0x2b
  401f64:	e505      	b.n	401972 <_vfiprintf_r+0xce>
  401f66:	2800      	cmp	r0, #0
  401f68:	f040 8283 	bne.w	402472 <_vfiprintf_r+0xbce>
  401f6c:	0699      	lsls	r1, r3, #26
  401f6e:	f100 822b 	bmi.w	4023c8 <_vfiprintf_r+0xb24>
  401f72:	06da      	lsls	r2, r3, #27
  401f74:	d421      	bmi.n	401fba <_vfiprintf_r+0x716>
  401f76:	065b      	lsls	r3, r3, #25
  401f78:	d51f      	bpl.n	401fba <_vfiprintf_r+0x716>
  401f7a:	9a08      	ldr	r2, [sp, #32]
  401f7c:	6813      	ldr	r3, [r2, #0]
  401f7e:	3204      	adds	r2, #4
  401f80:	9208      	str	r2, [sp, #32]
  401f82:	f8bd 2010 	ldrh.w	r2, [sp, #16]
  401f86:	801a      	strh	r2, [r3, #0]
  401f88:	e4be      	b.n	401908 <_vfiprintf_r+0x64>
  401f8a:	f043 0340 	orr.w	r3, r3, #64	; 0x40
  401f8e:	f899 2000 	ldrb.w	r2, [r9]
  401f92:	e4ee      	b.n	401972 <_vfiprintf_r+0xce>
  401f94:	9507      	str	r5, [sp, #28]
  401f96:	2800      	cmp	r0, #0
  401f98:	f040 8265 	bne.w	402466 <_vfiprintf_r+0xbc2>
  401f9c:	2a00      	cmp	r2, #0
  401f9e:	f000 8091 	beq.w	4020c4 <_vfiprintf_r+0x820>
  401fa2:	2101      	movs	r1, #1
  401fa4:	f88d 2048 	strb.w	r2, [sp, #72]	; 0x48
  401fa8:	f04f 0200 	mov.w	r2, #0
  401fac:	9102      	str	r1, [sp, #8]
  401fae:	f88d 2037 	strb.w	r2, [sp, #55]	; 0x37
  401fb2:	9105      	str	r1, [sp, #20]
  401fb4:	f10d 0848 	add.w	r8, sp, #72	; 0x48
  401fb8:	e6df      	b.n	401d7a <_vfiprintf_r+0x4d6>
  401fba:	9a08      	ldr	r2, [sp, #32]
  401fbc:	6813      	ldr	r3, [r2, #0]
  401fbe:	3204      	adds	r2, #4
  401fc0:	9208      	str	r2, [sp, #32]
  401fc2:	9a04      	ldr	r2, [sp, #16]
  401fc4:	601a      	str	r2, [r3, #0]
  401fc6:	e49f      	b.n	401908 <_vfiprintf_r+0x64>
  401fc8:	aa0f      	add	r2, sp, #60	; 0x3c
  401fca:	9901      	ldr	r1, [sp, #4]
  401fcc:	4620      	mov	r0, r4
  401fce:	f7ff fc29 	bl	401824 <__sprint_r.part.0>
  401fd2:	2800      	cmp	r0, #0
  401fd4:	d17d      	bne.n	4020d2 <_vfiprintf_r+0x82e>
  401fd6:	9910      	ldr	r1, [sp, #64]	; 0x40
  401fd8:	46d6      	mov	lr, sl
  401fda:	9a11      	ldr	r2, [sp, #68]	; 0x44
  401fdc:	f101 0c01 	add.w	ip, r1, #1
  401fe0:	e5bd      	b.n	401b5e <_vfiprintf_r+0x2ba>
  401fe2:	aa0f      	add	r2, sp, #60	; 0x3c
  401fe4:	9901      	ldr	r1, [sp, #4]
  401fe6:	9806      	ldr	r0, [sp, #24]
  401fe8:	f7ff fc1c 	bl	401824 <__sprint_r.part.0>
  401fec:	2800      	cmp	r0, #0
  401fee:	d170      	bne.n	4020d2 <_vfiprintf_r+0x82e>
  401ff0:	46d3      	mov	fp, sl
  401ff2:	9910      	ldr	r1, [sp, #64]	; 0x40
  401ff4:	f89d 5037 	ldrb.w	r5, [sp, #55]	; 0x37
  401ff8:	9a11      	ldr	r2, [sp, #68]	; 0x44
  401ffa:	1c48      	adds	r0, r1, #1
  401ffc:	2d00      	cmp	r5, #0
  401ffe:	f43f add8 	beq.w	401bb2 <_vfiprintf_r+0x30e>
  402002:	2101      	movs	r1, #1
  402004:	f10d 0537 	add.w	r5, sp, #55	; 0x37
  402008:	440a      	add	r2, r1
  40200a:	2807      	cmp	r0, #7
  40200c:	9211      	str	r2, [sp, #68]	; 0x44
  40200e:	9010      	str	r0, [sp, #64]	; 0x40
  402010:	f8cb 1004 	str.w	r1, [fp, #4]
  402014:	f8cb 5000 	str.w	r5, [fp]
  402018:	f340 80b6 	ble.w	402188 <_vfiprintf_r+0x8e4>
  40201c:	2a00      	cmp	r2, #0
  40201e:	f040 8160 	bne.w	4022e2 <_vfiprintf_r+0xa3e>
  402022:	9b09      	ldr	r3, [sp, #36]	; 0x24
  402024:	2b00      	cmp	r3, #0
  402026:	f43f add7 	beq.w	401bd8 <_vfiprintf_r+0x334>
  40202a:	2202      	movs	r2, #2
  40202c:	4608      	mov	r0, r1
  40202e:	46d3      	mov	fp, sl
  402030:	ab0e      	add	r3, sp, #56	; 0x38
  402032:	921d      	str	r2, [sp, #116]	; 0x74
  402034:	931c      	str	r3, [sp, #112]	; 0x70
  402036:	4601      	mov	r1, r0
  402038:	f10b 0b08 	add.w	fp, fp, #8
  40203c:	3001      	adds	r0, #1
  40203e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  402040:	2b80      	cmp	r3, #128	; 0x80
  402042:	f43f add0 	beq.w	401be6 <_vfiprintf_r+0x342>
  402046:	9b05      	ldr	r3, [sp, #20]
  402048:	1ae4      	subs	r4, r4, r3
  40204a:	2c00      	cmp	r4, #0
  40204c:	f77f ae0a 	ble.w	401c64 <_vfiprintf_r+0x3c0>
  402050:	2c10      	cmp	r4, #16
  402052:	f340 81b7 	ble.w	4023c4 <_vfiprintf_r+0xb20>
  402056:	46de      	mov	lr, fp
  402058:	2610      	movs	r6, #16
  40205a:	4d2a      	ldr	r5, [pc, #168]	; (402104 <_vfiprintf_r+0x860>)
  40205c:	9f06      	ldr	r7, [sp, #24]
  40205e:	f8dd b004 	ldr.w	fp, [sp, #4]
  402062:	e006      	b.n	402072 <_vfiprintf_r+0x7ce>
  402064:	1c88      	adds	r0, r1, #2
  402066:	4619      	mov	r1, r3
  402068:	f10e 0e08 	add.w	lr, lr, #8
  40206c:	3c10      	subs	r4, #16
  40206e:	2c10      	cmp	r4, #16
  402070:	dd0f      	ble.n	402092 <_vfiprintf_r+0x7ee>
  402072:	1c4b      	adds	r3, r1, #1
  402074:	3210      	adds	r2, #16
  402076:	2b07      	cmp	r3, #7
  402078:	9211      	str	r2, [sp, #68]	; 0x44
  40207a:	e88e 0060 	stmia.w	lr, {r5, r6}
  40207e:	9310      	str	r3, [sp, #64]	; 0x40
  402080:	ddf0      	ble.n	402064 <_vfiprintf_r+0x7c0>
  402082:	b9a2      	cbnz	r2, 4020ae <_vfiprintf_r+0x80a>
  402084:	3c10      	subs	r4, #16
  402086:	2c10      	cmp	r4, #16
  402088:	f04f 0001 	mov.w	r0, #1
  40208c:	4611      	mov	r1, r2
  40208e:	46d6      	mov	lr, sl
  402090:	dcef      	bgt.n	402072 <_vfiprintf_r+0x7ce>
  402092:	46f3      	mov	fp, lr
  402094:	4422      	add	r2, r4
  402096:	2807      	cmp	r0, #7
  402098:	9211      	str	r2, [sp, #68]	; 0x44
  40209a:	f8cb 5000 	str.w	r5, [fp]
  40209e:	f8cb 4004 	str.w	r4, [fp, #4]
  4020a2:	9010      	str	r0, [sp, #64]	; 0x40
  4020a4:	dc30      	bgt.n	402108 <_vfiprintf_r+0x864>
  4020a6:	f10b 0b08 	add.w	fp, fp, #8
  4020aa:	3001      	adds	r0, #1
  4020ac:	e5da      	b.n	401c64 <_vfiprintf_r+0x3c0>
  4020ae:	aa0f      	add	r2, sp, #60	; 0x3c
  4020b0:	4659      	mov	r1, fp
  4020b2:	4638      	mov	r0, r7
  4020b4:	f7ff fbb6 	bl	401824 <__sprint_r.part.0>
  4020b8:	b958      	cbnz	r0, 4020d2 <_vfiprintf_r+0x82e>
  4020ba:	9910      	ldr	r1, [sp, #64]	; 0x40
  4020bc:	46d6      	mov	lr, sl
  4020be:	9a11      	ldr	r2, [sp, #68]	; 0x44
  4020c0:	1c48      	adds	r0, r1, #1
  4020c2:	e7d3      	b.n	40206c <_vfiprintf_r+0x7c8>
  4020c4:	9b11      	ldr	r3, [sp, #68]	; 0x44
  4020c6:	b123      	cbz	r3, 4020d2 <_vfiprintf_r+0x82e>
  4020c8:	9806      	ldr	r0, [sp, #24]
  4020ca:	aa0f      	add	r2, sp, #60	; 0x3c
  4020cc:	9901      	ldr	r1, [sp, #4]
  4020ce:	f7ff fba9 	bl	401824 <__sprint_r.part.0>
  4020d2:	9b01      	ldr	r3, [sp, #4]
  4020d4:	899b      	ldrh	r3, [r3, #12]
  4020d6:	065b      	lsls	r3, r3, #25
  4020d8:	f57f accd 	bpl.w	401a76 <_vfiprintf_r+0x1d2>
  4020dc:	f04f 33ff 	mov.w	r3, #4294967295
  4020e0:	9304      	str	r3, [sp, #16]
  4020e2:	e4c8      	b.n	401a76 <_vfiprintf_r+0x1d2>
  4020e4:	aa0f      	add	r2, sp, #60	; 0x3c
  4020e6:	4641      	mov	r1, r8
  4020e8:	4638      	mov	r0, r7
  4020ea:	f7ff fb9b 	bl	401824 <__sprint_r.part.0>
  4020ee:	2800      	cmp	r0, #0
  4020f0:	d1ef      	bne.n	4020d2 <_vfiprintf_r+0x82e>
  4020f2:	9910      	ldr	r1, [sp, #64]	; 0x40
  4020f4:	46d3      	mov	fp, sl
  4020f6:	9a11      	ldr	r2, [sp, #68]	; 0x44
  4020f8:	1c48      	adds	r0, r1, #1
  4020fa:	e5da      	b.n	401cb2 <_vfiprintf_r+0x40e>
  4020fc:	00404318 	.word	0x00404318
  402100:	0040432c 	.word	0x0040432c
  402104:	00404358 	.word	0x00404358
  402108:	2a00      	cmp	r2, #0
  40210a:	f040 80fd 	bne.w	402308 <_vfiprintf_r+0xa64>
  40210e:	2301      	movs	r3, #1
  402110:	46d3      	mov	fp, sl
  402112:	9a05      	ldr	r2, [sp, #20]
  402114:	f8cd 8070 	str.w	r8, [sp, #112]	; 0x70
  402118:	921d      	str	r2, [sp, #116]	; 0x74
  40211a:	9211      	str	r2, [sp, #68]	; 0x44
  40211c:	9310      	str	r3, [sp, #64]	; 0x40
  40211e:	f10b 0b08 	add.w	fp, fp, #8
  402122:	9b03      	ldr	r3, [sp, #12]
  402124:	0759      	lsls	r1, r3, #29
  402126:	d505      	bpl.n	402134 <_vfiprintf_r+0x890>
  402128:	9b07      	ldr	r3, [sp, #28]
  40212a:	9902      	ldr	r1, [sp, #8]
  40212c:	1a5c      	subs	r4, r3, r1
  40212e:	2c00      	cmp	r4, #0
  402130:	f73f adb1 	bgt.w	401c96 <_vfiprintf_r+0x3f2>
  402134:	9b04      	ldr	r3, [sp, #16]
  402136:	9907      	ldr	r1, [sp, #28]
  402138:	9802      	ldr	r0, [sp, #8]
  40213a:	4281      	cmp	r1, r0
  40213c:	bfac      	ite	ge
  40213e:	185b      	addge	r3, r3, r1
  402140:	181b      	addlt	r3, r3, r0
  402142:	9304      	str	r3, [sp, #16]
  402144:	bb7a      	cbnz	r2, 4021a6 <_vfiprintf_r+0x902>
  402146:	2300      	movs	r3, #0
  402148:	46d3      	mov	fp, sl
  40214a:	9310      	str	r3, [sp, #64]	; 0x40
  40214c:	f7ff bbdc 	b.w	401908 <_vfiprintf_r+0x64>
  402150:	aa0f      	add	r2, sp, #60	; 0x3c
  402152:	9901      	ldr	r1, [sp, #4]
  402154:	4620      	mov	r0, r4
  402156:	f7ff fb65 	bl	401824 <__sprint_r.part.0>
  40215a:	2800      	cmp	r0, #0
  40215c:	d1b9      	bne.n	4020d2 <_vfiprintf_r+0x82e>
  40215e:	9910      	ldr	r1, [sp, #64]	; 0x40
  402160:	46d4      	mov	ip, sl
  402162:	9a11      	ldr	r2, [sp, #68]	; 0x44
  402164:	f101 0e01 	add.w	lr, r1, #1
  402168:	e551      	b.n	401c0e <_vfiprintf_r+0x36a>
  40216a:	2a00      	cmp	r2, #0
  40216c:	f47f af39 	bne.w	401fe2 <_vfiprintf_r+0x73e>
  402170:	f89d 1037 	ldrb.w	r1, [sp, #55]	; 0x37
  402174:	2900      	cmp	r1, #0
  402176:	f000 810e 	beq.w	402396 <_vfiprintf_r+0xaf2>
  40217a:	2201      	movs	r2, #1
  40217c:	46d3      	mov	fp, sl
  40217e:	4610      	mov	r0, r2
  402180:	f10d 0137 	add.w	r1, sp, #55	; 0x37
  402184:	921d      	str	r2, [sp, #116]	; 0x74
  402186:	911c      	str	r1, [sp, #112]	; 0x70
  402188:	4601      	mov	r1, r0
  40218a:	f10b 0b08 	add.w	fp, fp, #8
  40218e:	3001      	adds	r0, #1
  402190:	e50f      	b.n	401bb2 <_vfiprintf_r+0x30e>
  402192:	9b03      	ldr	r3, [sp, #12]
  402194:	2a01      	cmp	r2, #1
  402196:	f000 808e 	beq.w	4022b6 <_vfiprintf_r+0xa12>
  40219a:	2a02      	cmp	r2, #2
  40219c:	d10b      	bne.n	4021b6 <_vfiprintf_r+0x912>
  40219e:	9303      	str	r3, [sp, #12]
  4021a0:	2600      	movs	r6, #0
  4021a2:	2700      	movs	r7, #0
  4021a4:	e619      	b.n	401dda <_vfiprintf_r+0x536>
  4021a6:	aa0f      	add	r2, sp, #60	; 0x3c
  4021a8:	9901      	ldr	r1, [sp, #4]
  4021aa:	9806      	ldr	r0, [sp, #24]
  4021ac:	f7ff fb3a 	bl	401824 <__sprint_r.part.0>
  4021b0:	2800      	cmp	r0, #0
  4021b2:	d0c8      	beq.n	402146 <_vfiprintf_r+0x8a2>
  4021b4:	e78d      	b.n	4020d2 <_vfiprintf_r+0x82e>
  4021b6:	2600      	movs	r6, #0
  4021b8:	2700      	movs	r7, #0
  4021ba:	9303      	str	r3, [sp, #12]
  4021bc:	4651      	mov	r1, sl
  4021be:	e000      	b.n	4021c2 <_vfiprintf_r+0x91e>
  4021c0:	4641      	mov	r1, r8
  4021c2:	08f2      	lsrs	r2, r6, #3
  4021c4:	ea42 7247 	orr.w	r2, r2, r7, lsl #29
  4021c8:	08f8      	lsrs	r0, r7, #3
  4021ca:	f006 0307 	and.w	r3, r6, #7
  4021ce:	4607      	mov	r7, r0
  4021d0:	4616      	mov	r6, r2
  4021d2:	3330      	adds	r3, #48	; 0x30
  4021d4:	ea56 0207 	orrs.w	r2, r6, r7
  4021d8:	f801 3c01 	strb.w	r3, [r1, #-1]
  4021dc:	f101 38ff 	add.w	r8, r1, #4294967295
  4021e0:	d1ee      	bne.n	4021c0 <_vfiprintf_r+0x91c>
  4021e2:	9a03      	ldr	r2, [sp, #12]
  4021e4:	07d6      	lsls	r6, r2, #31
  4021e6:	f57f ae08 	bpl.w	401dfa <_vfiprintf_r+0x556>
  4021ea:	2b30      	cmp	r3, #48	; 0x30
  4021ec:	f43f ae05 	beq.w	401dfa <_vfiprintf_r+0x556>
  4021f0:	2330      	movs	r3, #48	; 0x30
  4021f2:	3902      	subs	r1, #2
  4021f4:	f808 3c01 	strb.w	r3, [r8, #-1]
  4021f8:	ebaa 0301 	sub.w	r3, sl, r1
  4021fc:	9305      	str	r3, [sp, #20]
  4021fe:	4688      	mov	r8, r1
  402200:	e480      	b.n	401b04 <_vfiprintf_r+0x260>
  402202:	9b04      	ldr	r3, [sp, #16]
  402204:	9a07      	ldr	r2, [sp, #28]
  402206:	428a      	cmp	r2, r1
  402208:	bfac      	ite	ge
  40220a:	189b      	addge	r3, r3, r2
  40220c:	185b      	addlt	r3, r3, r1
  40220e:	9304      	str	r3, [sp, #16]
  402210:	e799      	b.n	402146 <_vfiprintf_r+0x8a2>
  402212:	2202      	movs	r2, #2
  402214:	e457      	b.n	401ac6 <_vfiprintf_r+0x222>
  402216:	9405      	str	r4, [sp, #20]
  402218:	46d0      	mov	r8, sl
  40221a:	e473      	b.n	401b04 <_vfiprintf_r+0x260>
  40221c:	2f00      	cmp	r7, #0
  40221e:	bf08      	it	eq
  402220:	2e0a      	cmpeq	r6, #10
  402222:	d347      	bcc.n	4022b4 <_vfiprintf_r+0xa10>
  402224:	46d0      	mov	r8, sl
  402226:	4630      	mov	r0, r6
  402228:	4639      	mov	r1, r7
  40222a:	220a      	movs	r2, #10
  40222c:	2300      	movs	r3, #0
  40222e:	f001 fe75 	bl	403f1c <__aeabi_uldivmod>
  402232:	3230      	adds	r2, #48	; 0x30
  402234:	f808 2d01 	strb.w	r2, [r8, #-1]!
  402238:	4630      	mov	r0, r6
  40223a:	4639      	mov	r1, r7
  40223c:	2300      	movs	r3, #0
  40223e:	220a      	movs	r2, #10
  402240:	f001 fe6c 	bl	403f1c <__aeabi_uldivmod>
  402244:	4606      	mov	r6, r0
  402246:	460f      	mov	r7, r1
  402248:	ea56 0307 	orrs.w	r3, r6, r7
  40224c:	d1eb      	bne.n	402226 <_vfiprintf_r+0x982>
  40224e:	ebaa 0308 	sub.w	r3, sl, r8
  402252:	9305      	str	r3, [sp, #20]
  402254:	e456      	b.n	401b04 <_vfiprintf_r+0x260>
  402256:	aa0f      	add	r2, sp, #60	; 0x3c
  402258:	9901      	ldr	r1, [sp, #4]
  40225a:	9806      	ldr	r0, [sp, #24]
  40225c:	f7ff fae2 	bl	401824 <__sprint_r.part.0>
  402260:	2800      	cmp	r0, #0
  402262:	f47f af36 	bne.w	4020d2 <_vfiprintf_r+0x82e>
  402266:	46d3      	mov	fp, sl
  402268:	9a11      	ldr	r2, [sp, #68]	; 0x44
  40226a:	e75a      	b.n	402122 <_vfiprintf_r+0x87e>
  40226c:	aa0f      	add	r2, sp, #60	; 0x3c
  40226e:	9901      	ldr	r1, [sp, #4]
  402270:	9806      	ldr	r0, [sp, #24]
  402272:	f7ff fad7 	bl	401824 <__sprint_r.part.0>
  402276:	2800      	cmp	r0, #0
  402278:	f47f af2b 	bne.w	4020d2 <_vfiprintf_r+0x82e>
  40227c:	46d3      	mov	fp, sl
  40227e:	f7ff bbdc 	b.w	401a3a <_vfiprintf_r+0x196>
  402282:	9808      	ldr	r0, [sp, #32]
  402284:	2700      	movs	r7, #0
  402286:	4601      	mov	r1, r0
  402288:	3104      	adds	r1, #4
  40228a:	6806      	ldr	r6, [r0, #0]
  40228c:	9108      	str	r1, [sp, #32]
  40228e:	e41a      	b.n	401ac6 <_vfiprintf_r+0x222>
  402290:	680e      	ldr	r6, [r1, #0]
  402292:	3104      	adds	r1, #4
  402294:	9108      	str	r1, [sp, #32]
  402296:	2700      	movs	r7, #0
  402298:	e5e3      	b.n	401e62 <_vfiprintf_r+0x5be>
  40229a:	6816      	ldr	r6, [r2, #0]
  40229c:	3204      	adds	r2, #4
  40229e:	17f7      	asrs	r7, r6, #31
  4022a0:	9208      	str	r2, [sp, #32]
  4022a2:	4630      	mov	r0, r6
  4022a4:	4639      	mov	r1, r7
  4022a6:	e581      	b.n	401dac <_vfiprintf_r+0x508>
  4022a8:	3104      	adds	r1, #4
  4022aa:	6816      	ldr	r6, [r2, #0]
  4022ac:	2700      	movs	r7, #0
  4022ae:	2201      	movs	r2, #1
  4022b0:	9108      	str	r1, [sp, #32]
  4022b2:	e408      	b.n	401ac6 <_vfiprintf_r+0x222>
  4022b4:	9b03      	ldr	r3, [sp, #12]
  4022b6:	9303      	str	r3, [sp, #12]
  4022b8:	2301      	movs	r3, #1
  4022ba:	f10d 08b0 	add.w	r8, sp, #176	; 0xb0
  4022be:	3630      	adds	r6, #48	; 0x30
  4022c0:	f808 6d41 	strb.w	r6, [r8, #-65]!
  4022c4:	9305      	str	r3, [sp, #20]
  4022c6:	e41d      	b.n	401b04 <_vfiprintf_r+0x260>
  4022c8:	aa0f      	add	r2, sp, #60	; 0x3c
  4022ca:	9901      	ldr	r1, [sp, #4]
  4022cc:	9806      	ldr	r0, [sp, #24]
  4022ce:	f7ff faa9 	bl	401824 <__sprint_r.part.0>
  4022d2:	2800      	cmp	r0, #0
  4022d4:	f47f aefd 	bne.w	4020d2 <_vfiprintf_r+0x82e>
  4022d8:	9910      	ldr	r1, [sp, #64]	; 0x40
  4022da:	46d3      	mov	fp, sl
  4022dc:	9a11      	ldr	r2, [sp, #68]	; 0x44
  4022de:	1c48      	adds	r0, r1, #1
  4022e0:	e6ad      	b.n	40203e <_vfiprintf_r+0x79a>
  4022e2:	aa0f      	add	r2, sp, #60	; 0x3c
  4022e4:	9901      	ldr	r1, [sp, #4]
  4022e6:	9806      	ldr	r0, [sp, #24]
  4022e8:	f7ff fa9c 	bl	401824 <__sprint_r.part.0>
  4022ec:	2800      	cmp	r0, #0
  4022ee:	f47f aef0 	bne.w	4020d2 <_vfiprintf_r+0x82e>
  4022f2:	9910      	ldr	r1, [sp, #64]	; 0x40
  4022f4:	46d3      	mov	fp, sl
  4022f6:	9a11      	ldr	r2, [sp, #68]	; 0x44
  4022f8:	1c48      	adds	r0, r1, #1
  4022fa:	e45a      	b.n	401bb2 <_vfiprintf_r+0x30e>
  4022fc:	2a00      	cmp	r2, #0
  4022fe:	d17b      	bne.n	4023f8 <_vfiprintf_r+0xb54>
  402300:	2001      	movs	r0, #1
  402302:	4611      	mov	r1, r2
  402304:	46d3      	mov	fp, sl
  402306:	e69e      	b.n	402046 <_vfiprintf_r+0x7a2>
  402308:	aa0f      	add	r2, sp, #60	; 0x3c
  40230a:	9901      	ldr	r1, [sp, #4]
  40230c:	9806      	ldr	r0, [sp, #24]
  40230e:	f7ff fa89 	bl	401824 <__sprint_r.part.0>
  402312:	2800      	cmp	r0, #0
  402314:	f47f aedd 	bne.w	4020d2 <_vfiprintf_r+0x82e>
  402318:	9810      	ldr	r0, [sp, #64]	; 0x40
  40231a:	46d3      	mov	fp, sl
  40231c:	9a11      	ldr	r2, [sp, #68]	; 0x44
  40231e:	3001      	adds	r0, #1
  402320:	e4a0      	b.n	401c64 <_vfiprintf_r+0x3c0>
  402322:	9d08      	ldr	r5, [sp, #32]
  402324:	3507      	adds	r5, #7
  402326:	f025 0207 	bic.w	r2, r5, #7
  40232a:	f102 0108 	add.w	r1, r2, #8
  40232e:	e9d2 6700 	ldrd	r6, r7, [r2]
  402332:	9108      	str	r1, [sp, #32]
  402334:	2200      	movs	r2, #0
  402336:	f7ff bbc6 	b.w	401ac6 <_vfiprintf_r+0x222>
  40233a:	9d08      	ldr	r5, [sp, #32]
  40233c:	3507      	adds	r5, #7
  40233e:	f025 0207 	bic.w	r2, r5, #7
  402342:	f102 0108 	add.w	r1, r2, #8
  402346:	e9d2 6700 	ldrd	r6, r7, [r2]
  40234a:	9108      	str	r1, [sp, #32]
  40234c:	2201      	movs	r2, #1
  40234e:	f7ff bbba 	b.w	401ac6 <_vfiprintf_r+0x222>
  402352:	9d08      	ldr	r5, [sp, #32]
  402354:	3507      	adds	r5, #7
  402356:	f025 0107 	bic.w	r1, r5, #7
  40235a:	f101 0008 	add.w	r0, r1, #8
  40235e:	9008      	str	r0, [sp, #32]
  402360:	e9d1 6700 	ldrd	r6, r7, [r1]
  402364:	e57d      	b.n	401e62 <_vfiprintf_r+0x5be>
  402366:	9d08      	ldr	r5, [sp, #32]
  402368:	3507      	adds	r5, #7
  40236a:	f025 0507 	bic.w	r5, r5, #7
  40236e:	f105 0208 	add.w	r2, r5, #8
  402372:	e9d5 0100 	ldrd	r0, r1, [r5]
  402376:	9208      	str	r2, [sp, #32]
  402378:	4606      	mov	r6, r0
  40237a:	460f      	mov	r7, r1
  40237c:	e516      	b.n	401dac <_vfiprintf_r+0x508>
  40237e:	46d0      	mov	r8, sl
  402380:	f7ff bbc0 	b.w	401b04 <_vfiprintf_r+0x260>
  402384:	252d      	movs	r5, #45	; 0x2d
  402386:	4276      	negs	r6, r6
  402388:	eb67 0747 	sbc.w	r7, r7, r7, lsl #1
  40238c:	f88d 5037 	strb.w	r5, [sp, #55]	; 0x37
  402390:	2201      	movs	r2, #1
  402392:	f7ff bb9d 	b.w	401ad0 <_vfiprintf_r+0x22c>
  402396:	9b09      	ldr	r3, [sp, #36]	; 0x24
  402398:	b96b      	cbnz	r3, 4023b6 <_vfiprintf_r+0xb12>
  40239a:	4611      	mov	r1, r2
  40239c:	2001      	movs	r0, #1
  40239e:	46d3      	mov	fp, sl
  4023a0:	e651      	b.n	402046 <_vfiprintf_r+0x7a2>
  4023a2:	aa0f      	add	r2, sp, #60	; 0x3c
  4023a4:	9901      	ldr	r1, [sp, #4]
  4023a6:	9806      	ldr	r0, [sp, #24]
  4023a8:	f7ff fa3c 	bl	401824 <__sprint_r.part.0>
  4023ac:	2800      	cmp	r0, #0
  4023ae:	f47f ae90 	bne.w	4020d2 <_vfiprintf_r+0x82e>
  4023b2:	9a11      	ldr	r2, [sp, #68]	; 0x44
  4023b4:	e6be      	b.n	402134 <_vfiprintf_r+0x890>
  4023b6:	2202      	movs	r2, #2
  4023b8:	ab0e      	add	r3, sp, #56	; 0x38
  4023ba:	921d      	str	r2, [sp, #116]	; 0x74
  4023bc:	931c      	str	r3, [sp, #112]	; 0x70
  4023be:	2001      	movs	r0, #1
  4023c0:	46d3      	mov	fp, sl
  4023c2:	e638      	b.n	402036 <_vfiprintf_r+0x792>
  4023c4:	4d31      	ldr	r5, [pc, #196]	; (40248c <_vfiprintf_r+0xbe8>)
  4023c6:	e665      	b.n	402094 <_vfiprintf_r+0x7f0>
  4023c8:	9a08      	ldr	r2, [sp, #32]
  4023ca:	4613      	mov	r3, r2
  4023cc:	3304      	adds	r3, #4
  4023ce:	9308      	str	r3, [sp, #32]
  4023d0:	9b04      	ldr	r3, [sp, #16]
  4023d2:	6811      	ldr	r1, [r2, #0]
  4023d4:	17dd      	asrs	r5, r3, #31
  4023d6:	461a      	mov	r2, r3
  4023d8:	462b      	mov	r3, r5
  4023da:	e9c1 2300 	strd	r2, r3, [r1]
  4023de:	f7ff ba93 	b.w	401908 <_vfiprintf_r+0x64>
  4023e2:	4640      	mov	r0, r8
  4023e4:	9508      	str	r5, [sp, #32]
  4023e6:	9303      	str	r3, [sp, #12]
  4023e8:	f7ff f9ee 	bl	4017c8 <strlen>
  4023ec:	2400      	movs	r4, #0
  4023ee:	9005      	str	r0, [sp, #20]
  4023f0:	f89d 5037 	ldrb.w	r5, [sp, #55]	; 0x37
  4023f4:	f7ff bb86 	b.w	401b04 <_vfiprintf_r+0x260>
  4023f8:	aa0f      	add	r2, sp, #60	; 0x3c
  4023fa:	9901      	ldr	r1, [sp, #4]
  4023fc:	9806      	ldr	r0, [sp, #24]
  4023fe:	f7ff fa11 	bl	401824 <__sprint_r.part.0>
  402402:	2800      	cmp	r0, #0
  402404:	f47f ae65 	bne.w	4020d2 <_vfiprintf_r+0x82e>
  402408:	9910      	ldr	r1, [sp, #64]	; 0x40
  40240a:	46d3      	mov	fp, sl
  40240c:	9a11      	ldr	r2, [sp, #68]	; 0x44
  40240e:	1c48      	adds	r0, r1, #1
  402410:	e619      	b.n	402046 <_vfiprintf_r+0x7a2>
  402412:	9910      	ldr	r1, [sp, #64]	; 0x40
  402414:	9a11      	ldr	r2, [sp, #68]	; 0x44
  402416:	3101      	adds	r1, #1
  402418:	4e1d      	ldr	r6, [pc, #116]	; (402490 <_vfiprintf_r+0xbec>)
  40241a:	f7ff bbb8 	b.w	401b8e <_vfiprintf_r+0x2ea>
  40241e:	2c06      	cmp	r4, #6
  402420:	bf28      	it	cs
  402422:	2406      	movcs	r4, #6
  402424:	9508      	str	r5, [sp, #32]
  402426:	9405      	str	r4, [sp, #20]
  402428:	9402      	str	r4, [sp, #8]
  40242a:	f8df 8068 	ldr.w	r8, [pc, #104]	; 402494 <_vfiprintf_r+0xbf0>
  40242e:	e4a4      	b.n	401d7a <_vfiprintf_r+0x4d6>
  402430:	9810      	ldr	r0, [sp, #64]	; 0x40
  402432:	4e17      	ldr	r6, [pc, #92]	; (402490 <_vfiprintf_r+0xbec>)
  402434:	3001      	adds	r0, #1
  402436:	e453      	b.n	401ce0 <_vfiprintf_r+0x43c>
  402438:	9405      	str	r4, [sp, #20]
  40243a:	9508      	str	r5, [sp, #32]
  40243c:	9303      	str	r3, [sp, #12]
  40243e:	4604      	mov	r4, r0
  402440:	f89d 5037 	ldrb.w	r5, [sp, #55]	; 0x37
  402444:	f7ff bb5e 	b.w	401b04 <_vfiprintf_r+0x260>
  402448:	4686      	mov	lr, r0
  40244a:	4d10      	ldr	r5, [pc, #64]	; (40248c <_vfiprintf_r+0xbe8>)
  40244c:	f7ff bbf6 	b.w	401c3c <_vfiprintf_r+0x398>
  402450:	9908      	ldr	r1, [sp, #32]
  402452:	f899 2001 	ldrb.w	r2, [r9, #1]
  402456:	680c      	ldr	r4, [r1, #0]
  402458:	3104      	adds	r1, #4
  40245a:	ea44 74e4 	orr.w	r4, r4, r4, asr #31
  40245e:	46b9      	mov	r9, r7
  402460:	9108      	str	r1, [sp, #32]
  402462:	f7ff ba86 	b.w	401972 <_vfiprintf_r+0xce>
  402466:	f88d 6037 	strb.w	r6, [sp, #55]	; 0x37
  40246a:	e597      	b.n	401f9c <_vfiprintf_r+0x6f8>
  40246c:	f88d 6037 	strb.w	r6, [sp, #55]	; 0x37
  402470:	e4e6      	b.n	401e40 <_vfiprintf_r+0x59c>
  402472:	f88d 6037 	strb.w	r6, [sp, #55]	; 0x37
  402476:	e579      	b.n	401f6c <_vfiprintf_r+0x6c8>
  402478:	f88d 6037 	strb.w	r6, [sp, #55]	; 0x37
  40247c:	e52c      	b.n	401ed8 <_vfiprintf_r+0x634>
  40247e:	f88d 6037 	strb.w	r6, [sp, #55]	; 0x37
  402482:	e4ca      	b.n	401e1a <_vfiprintf_r+0x576>
  402484:	f88d 6037 	strb.w	r6, [sp, #55]	; 0x37
  402488:	e47e      	b.n	401d88 <_vfiprintf_r+0x4e4>
  40248a:	bf00      	nop
  40248c:	00404358 	.word	0x00404358
  402490:	00404348 	.word	0x00404348
  402494:	00404340 	.word	0x00404340

00402498 <__sbprintf>:
  402498:	b570      	push	{r4, r5, r6, lr}
  40249a:	460c      	mov	r4, r1
  40249c:	2600      	movs	r6, #0
  40249e:	f44f 6580 	mov.w	r5, #1024	; 0x400
  4024a2:	8989      	ldrh	r1, [r1, #12]
  4024a4:	f5ad 6d8d 	sub.w	sp, sp, #1128	; 0x468
  4024a8:	f021 0102 	bic.w	r1, r1, #2
  4024ac:	f8ad 100c 	strh.w	r1, [sp, #12]
  4024b0:	9606      	str	r6, [sp, #24]
  4024b2:	6e61      	ldr	r1, [r4, #100]	; 0x64
  4024b4:	89e6      	ldrh	r6, [r4, #14]
  4024b6:	9119      	str	r1, [sp, #100]	; 0x64
  4024b8:	f8ad 600e 	strh.w	r6, [sp, #14]
  4024bc:	69e1      	ldr	r1, [r4, #28]
  4024be:	6a66      	ldr	r6, [r4, #36]	; 0x24
  4024c0:	9107      	str	r1, [sp, #28]
  4024c2:	9609      	str	r6, [sp, #36]	; 0x24
  4024c4:	4669      	mov	r1, sp
  4024c6:	ae1a      	add	r6, sp, #104	; 0x68
  4024c8:	9600      	str	r6, [sp, #0]
  4024ca:	9604      	str	r6, [sp, #16]
  4024cc:	9502      	str	r5, [sp, #8]
  4024ce:	9505      	str	r5, [sp, #20]
  4024d0:	4606      	mov	r6, r0
  4024d2:	f7ff f9e7 	bl	4018a4 <_vfiprintf_r>
  4024d6:	1e05      	subs	r5, r0, #0
  4024d8:	db07      	blt.n	4024ea <__sbprintf+0x52>
  4024da:	4630      	mov	r0, r6
  4024dc:	4669      	mov	r1, sp
  4024de:	f000 f921 	bl	402724 <_fflush_r>
  4024e2:	2800      	cmp	r0, #0
  4024e4:	bf18      	it	ne
  4024e6:	f04f 35ff 	movne.w	r5, #4294967295
  4024ea:	f8bd 300c 	ldrh.w	r3, [sp, #12]
  4024ee:	065b      	lsls	r3, r3, #25
  4024f0:	d503      	bpl.n	4024fa <__sbprintf+0x62>
  4024f2:	89a3      	ldrh	r3, [r4, #12]
  4024f4:	f043 0340 	orr.w	r3, r3, #64	; 0x40
  4024f8:	81a3      	strh	r3, [r4, #12]
  4024fa:	4628      	mov	r0, r5
  4024fc:	f50d 6d8d 	add.w	sp, sp, #1128	; 0x468
  402500:	bd70      	pop	{r4, r5, r6, pc}
  402502:	bf00      	nop

00402504 <__swsetup_r>:
  402504:	b538      	push	{r3, r4, r5, lr}
  402506:	4b30      	ldr	r3, [pc, #192]	; (4025c8 <__swsetup_r+0xc4>)
  402508:	4605      	mov	r5, r0
  40250a:	6818      	ldr	r0, [r3, #0]
  40250c:	460c      	mov	r4, r1
  40250e:	b110      	cbz	r0, 402516 <__swsetup_r+0x12>
  402510:	6b83      	ldr	r3, [r0, #56]	; 0x38
  402512:	2b00      	cmp	r3, #0
  402514:	d038      	beq.n	402588 <__swsetup_r+0x84>
  402516:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
  40251a:	b293      	uxth	r3, r2
  40251c:	0718      	lsls	r0, r3, #28
  40251e:	d50c      	bpl.n	40253a <__swsetup_r+0x36>
  402520:	6920      	ldr	r0, [r4, #16]
  402522:	b1a8      	cbz	r0, 402550 <__swsetup_r+0x4c>
  402524:	f013 0201 	ands.w	r2, r3, #1
  402528:	d01e      	beq.n	402568 <__swsetup_r+0x64>
  40252a:	2200      	movs	r2, #0
  40252c:	6963      	ldr	r3, [r4, #20]
  40252e:	60a2      	str	r2, [r4, #8]
  402530:	425b      	negs	r3, r3
  402532:	61a3      	str	r3, [r4, #24]
  402534:	b1f0      	cbz	r0, 402574 <__swsetup_r+0x70>
  402536:	2000      	movs	r0, #0
  402538:	bd38      	pop	{r3, r4, r5, pc}
  40253a:	06d9      	lsls	r1, r3, #27
  40253c:	d53b      	bpl.n	4025b6 <__swsetup_r+0xb2>
  40253e:	0758      	lsls	r0, r3, #29
  402540:	d425      	bmi.n	40258e <__swsetup_r+0x8a>
  402542:	6920      	ldr	r0, [r4, #16]
  402544:	f042 0308 	orr.w	r3, r2, #8
  402548:	81a3      	strh	r3, [r4, #12]
  40254a:	b29b      	uxth	r3, r3
  40254c:	2800      	cmp	r0, #0
  40254e:	d1e9      	bne.n	402524 <__swsetup_r+0x20>
  402550:	f403 7220 	and.w	r2, r3, #640	; 0x280
  402554:	f5b2 7f00 	cmp.w	r2, #512	; 0x200
  402558:	d0e4      	beq.n	402524 <__swsetup_r+0x20>
  40255a:	4628      	mov	r0, r5
  40255c:	4621      	mov	r1, r4
  40255e:	f000 fd0b 	bl	402f78 <__smakebuf_r>
  402562:	89a3      	ldrh	r3, [r4, #12]
  402564:	6920      	ldr	r0, [r4, #16]
  402566:	e7dd      	b.n	402524 <__swsetup_r+0x20>
  402568:	0799      	lsls	r1, r3, #30
  40256a:	bf58      	it	pl
  40256c:	6962      	ldrpl	r2, [r4, #20]
  40256e:	60a2      	str	r2, [r4, #8]
  402570:	2800      	cmp	r0, #0
  402572:	d1e0      	bne.n	402536 <__swsetup_r+0x32>
  402574:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  402578:	061a      	lsls	r2, r3, #24
  40257a:	d5dd      	bpl.n	402538 <__swsetup_r+0x34>
  40257c:	f043 0340 	orr.w	r3, r3, #64	; 0x40
  402580:	81a3      	strh	r3, [r4, #12]
  402582:	f04f 30ff 	mov.w	r0, #4294967295
  402586:	bd38      	pop	{r3, r4, r5, pc}
  402588:	f000 f960 	bl	40284c <__sinit>
  40258c:	e7c3      	b.n	402516 <__swsetup_r+0x12>
  40258e:	6b21      	ldr	r1, [r4, #48]	; 0x30
  402590:	b151      	cbz	r1, 4025a8 <__swsetup_r+0xa4>
  402592:	f104 0340 	add.w	r3, r4, #64	; 0x40
  402596:	4299      	cmp	r1, r3
  402598:	d004      	beq.n	4025a4 <__swsetup_r+0xa0>
  40259a:	4628      	mov	r0, r5
  40259c:	f000 fa28 	bl	4029f0 <_free_r>
  4025a0:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
  4025a4:	2300      	movs	r3, #0
  4025a6:	6323      	str	r3, [r4, #48]	; 0x30
  4025a8:	2300      	movs	r3, #0
  4025aa:	6920      	ldr	r0, [r4, #16]
  4025ac:	f022 0224 	bic.w	r2, r2, #36	; 0x24
  4025b0:	e884 0009 	stmia.w	r4, {r0, r3}
  4025b4:	e7c6      	b.n	402544 <__swsetup_r+0x40>
  4025b6:	2309      	movs	r3, #9
  4025b8:	f042 0240 	orr.w	r2, r2, #64	; 0x40
  4025bc:	602b      	str	r3, [r5, #0]
  4025be:	f04f 30ff 	mov.w	r0, #4294967295
  4025c2:	81a2      	strh	r2, [r4, #12]
  4025c4:	bd38      	pop	{r3, r4, r5, pc}
  4025c6:	bf00      	nop
  4025c8:	20000108 	.word	0x20000108

004025cc <register_fini>:
  4025cc:	4b02      	ldr	r3, [pc, #8]	; (4025d8 <register_fini+0xc>)
  4025ce:	b113      	cbz	r3, 4025d6 <register_fini+0xa>
  4025d0:	4802      	ldr	r0, [pc, #8]	; (4025dc <register_fini+0x10>)
  4025d2:	f000 b805 	b.w	4025e0 <atexit>
  4025d6:	4770      	bx	lr
  4025d8:	00000000 	.word	0x00000000
  4025dc:	00402861 	.word	0x00402861

004025e0 <atexit>:
  4025e0:	2300      	movs	r3, #0
  4025e2:	4601      	mov	r1, r0
  4025e4:	461a      	mov	r2, r3
  4025e6:	4618      	mov	r0, r3
  4025e8:	f001 bb9e 	b.w	403d28 <__register_exitproc>

004025ec <__sflush_r>:
  4025ec:	f9b1 300c 	ldrsh.w	r3, [r1, #12]
  4025f0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  4025f4:	b29a      	uxth	r2, r3
  4025f6:	460d      	mov	r5, r1
  4025f8:	0711      	lsls	r1, r2, #28
  4025fa:	4680      	mov	r8, r0
  4025fc:	d43a      	bmi.n	402674 <__sflush_r+0x88>
  4025fe:	686a      	ldr	r2, [r5, #4]
  402600:	f443 6300 	orr.w	r3, r3, #2048	; 0x800
  402604:	2a00      	cmp	r2, #0
  402606:	81ab      	strh	r3, [r5, #12]
  402608:	dd70      	ble.n	4026ec <__sflush_r+0x100>
  40260a:	6aac      	ldr	r4, [r5, #40]	; 0x28
  40260c:	2c00      	cmp	r4, #0
  40260e:	d04a      	beq.n	4026a6 <__sflush_r+0xba>
  402610:	2200      	movs	r2, #0
  402612:	b29b      	uxth	r3, r3
  402614:	f8d8 6000 	ldr.w	r6, [r8]
  402618:	f8c8 2000 	str.w	r2, [r8]
  40261c:	f413 5280 	ands.w	r2, r3, #4096	; 0x1000
  402620:	d068      	beq.n	4026f4 <__sflush_r+0x108>
  402622:	6d2a      	ldr	r2, [r5, #80]	; 0x50
  402624:	075f      	lsls	r7, r3, #29
  402626:	d505      	bpl.n	402634 <__sflush_r+0x48>
  402628:	6869      	ldr	r1, [r5, #4]
  40262a:	6b2b      	ldr	r3, [r5, #48]	; 0x30
  40262c:	1a52      	subs	r2, r2, r1
  40262e:	b10b      	cbz	r3, 402634 <__sflush_r+0x48>
  402630:	6beb      	ldr	r3, [r5, #60]	; 0x3c
  402632:	1ad2      	subs	r2, r2, r3
  402634:	2300      	movs	r3, #0
  402636:	69e9      	ldr	r1, [r5, #28]
  402638:	4640      	mov	r0, r8
  40263a:	47a0      	blx	r4
  40263c:	1c44      	adds	r4, r0, #1
  40263e:	d03d      	beq.n	4026bc <__sflush_r+0xd0>
  402640:	2100      	movs	r1, #0
  402642:	f9b5 300c 	ldrsh.w	r3, [r5, #12]
  402646:	692a      	ldr	r2, [r5, #16]
  402648:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
  40264c:	81ab      	strh	r3, [r5, #12]
  40264e:	04db      	lsls	r3, r3, #19
  402650:	6069      	str	r1, [r5, #4]
  402652:	602a      	str	r2, [r5, #0]
  402654:	d448      	bmi.n	4026e8 <__sflush_r+0xfc>
  402656:	6b29      	ldr	r1, [r5, #48]	; 0x30
  402658:	f8c8 6000 	str.w	r6, [r8]
  40265c:	b319      	cbz	r1, 4026a6 <__sflush_r+0xba>
  40265e:	f105 0340 	add.w	r3, r5, #64	; 0x40
  402662:	4299      	cmp	r1, r3
  402664:	d002      	beq.n	40266c <__sflush_r+0x80>
  402666:	4640      	mov	r0, r8
  402668:	f000 f9c2 	bl	4029f0 <_free_r>
  40266c:	2000      	movs	r0, #0
  40266e:	6328      	str	r0, [r5, #48]	; 0x30
  402670:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  402674:	692e      	ldr	r6, [r5, #16]
  402676:	b1b6      	cbz	r6, 4026a6 <__sflush_r+0xba>
  402678:	0791      	lsls	r1, r2, #30
  40267a:	bf18      	it	ne
  40267c:	2300      	movne	r3, #0
  40267e:	682c      	ldr	r4, [r5, #0]
  402680:	bf08      	it	eq
  402682:	696b      	ldreq	r3, [r5, #20]
  402684:	602e      	str	r6, [r5, #0]
  402686:	1ba4      	subs	r4, r4, r6
  402688:	60ab      	str	r3, [r5, #8]
  40268a:	e00a      	b.n	4026a2 <__sflush_r+0xb6>
  40268c:	4623      	mov	r3, r4
  40268e:	4632      	mov	r2, r6
  402690:	6a6f      	ldr	r7, [r5, #36]	; 0x24
  402692:	69e9      	ldr	r1, [r5, #28]
  402694:	4640      	mov	r0, r8
  402696:	47b8      	blx	r7
  402698:	2800      	cmp	r0, #0
  40269a:	eba4 0400 	sub.w	r4, r4, r0
  40269e:	4406      	add	r6, r0
  4026a0:	dd04      	ble.n	4026ac <__sflush_r+0xc0>
  4026a2:	2c00      	cmp	r4, #0
  4026a4:	dcf2      	bgt.n	40268c <__sflush_r+0xa0>
  4026a6:	2000      	movs	r0, #0
  4026a8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  4026ac:	89ab      	ldrh	r3, [r5, #12]
  4026ae:	f04f 30ff 	mov.w	r0, #4294967295
  4026b2:	f043 0340 	orr.w	r3, r3, #64	; 0x40
  4026b6:	81ab      	strh	r3, [r5, #12]
  4026b8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  4026bc:	f8d8 4000 	ldr.w	r4, [r8]
  4026c0:	2c1d      	cmp	r4, #29
  4026c2:	d8f3      	bhi.n	4026ac <__sflush_r+0xc0>
  4026c4:	4b16      	ldr	r3, [pc, #88]	; (402720 <__sflush_r+0x134>)
  4026c6:	40e3      	lsrs	r3, r4
  4026c8:	43db      	mvns	r3, r3
  4026ca:	f013 0301 	ands.w	r3, r3, #1
  4026ce:	d1ed      	bne.n	4026ac <__sflush_r+0xc0>
  4026d0:	f9b5 200c 	ldrsh.w	r2, [r5, #12]
  4026d4:	6929      	ldr	r1, [r5, #16]
  4026d6:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
  4026da:	81aa      	strh	r2, [r5, #12]
  4026dc:	04d2      	lsls	r2, r2, #19
  4026de:	606b      	str	r3, [r5, #4]
  4026e0:	6029      	str	r1, [r5, #0]
  4026e2:	d5b8      	bpl.n	402656 <__sflush_r+0x6a>
  4026e4:	2c00      	cmp	r4, #0
  4026e6:	d1b6      	bne.n	402656 <__sflush_r+0x6a>
  4026e8:	6528      	str	r0, [r5, #80]	; 0x50
  4026ea:	e7b4      	b.n	402656 <__sflush_r+0x6a>
  4026ec:	6bea      	ldr	r2, [r5, #60]	; 0x3c
  4026ee:	2a00      	cmp	r2, #0
  4026f0:	dc8b      	bgt.n	40260a <__sflush_r+0x1e>
  4026f2:	e7d8      	b.n	4026a6 <__sflush_r+0xba>
  4026f4:	2301      	movs	r3, #1
  4026f6:	69e9      	ldr	r1, [r5, #28]
  4026f8:	4640      	mov	r0, r8
  4026fa:	47a0      	blx	r4
  4026fc:	1c43      	adds	r3, r0, #1
  4026fe:	4602      	mov	r2, r0
  402700:	d002      	beq.n	402708 <__sflush_r+0x11c>
  402702:	89ab      	ldrh	r3, [r5, #12]
  402704:	6aac      	ldr	r4, [r5, #40]	; 0x28
  402706:	e78d      	b.n	402624 <__sflush_r+0x38>
  402708:	f8d8 3000 	ldr.w	r3, [r8]
  40270c:	2b00      	cmp	r3, #0
  40270e:	d0f8      	beq.n	402702 <__sflush_r+0x116>
  402710:	2b1d      	cmp	r3, #29
  402712:	d001      	beq.n	402718 <__sflush_r+0x12c>
  402714:	2b16      	cmp	r3, #22
  402716:	d1c9      	bne.n	4026ac <__sflush_r+0xc0>
  402718:	f8c8 6000 	str.w	r6, [r8]
  40271c:	e7c3      	b.n	4026a6 <__sflush_r+0xba>
  40271e:	bf00      	nop
  402720:	20400001 	.word	0x20400001

00402724 <_fflush_r>:
  402724:	b510      	push	{r4, lr}
  402726:	4604      	mov	r4, r0
  402728:	b082      	sub	sp, #8
  40272a:	b108      	cbz	r0, 402730 <_fflush_r+0xc>
  40272c:	6b83      	ldr	r3, [r0, #56]	; 0x38
  40272e:	b153      	cbz	r3, 402746 <_fflush_r+0x22>
  402730:	f9b1 000c 	ldrsh.w	r0, [r1, #12]
  402734:	b908      	cbnz	r0, 40273a <_fflush_r+0x16>
  402736:	b002      	add	sp, #8
  402738:	bd10      	pop	{r4, pc}
  40273a:	4620      	mov	r0, r4
  40273c:	b002      	add	sp, #8
  40273e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  402742:	f7ff bf53 	b.w	4025ec <__sflush_r>
  402746:	9101      	str	r1, [sp, #4]
  402748:	f000 f880 	bl	40284c <__sinit>
  40274c:	9901      	ldr	r1, [sp, #4]
  40274e:	e7ef      	b.n	402730 <_fflush_r+0xc>

00402750 <_cleanup_r>:
  402750:	4901      	ldr	r1, [pc, #4]	; (402758 <_cleanup_r+0x8>)
  402752:	f000 bbad 	b.w	402eb0 <_fwalk_reent>
  402756:	bf00      	nop
  402758:	00403df9 	.word	0x00403df9

0040275c <__sinit.part.1>:
  40275c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  402760:	4607      	mov	r7, r0
  402762:	2400      	movs	r4, #0
  402764:	2304      	movs	r3, #4
  402766:	2103      	movs	r1, #3
  402768:	687d      	ldr	r5, [r7, #4]
  40276a:	4833      	ldr	r0, [pc, #204]	; (402838 <__sinit.part.1+0xdc>)
  40276c:	f507 723b 	add.w	r2, r7, #748	; 0x2ec
  402770:	63f8      	str	r0, [r7, #60]	; 0x3c
  402772:	f8c7 12e4 	str.w	r1, [r7, #740]	; 0x2e4
  402776:	f8c7 22e8 	str.w	r2, [r7, #744]	; 0x2e8
  40277a:	f8c7 42e0 	str.w	r4, [r7, #736]	; 0x2e0
  40277e:	b083      	sub	sp, #12
  402780:	602c      	str	r4, [r5, #0]
  402782:	606c      	str	r4, [r5, #4]
  402784:	60ac      	str	r4, [r5, #8]
  402786:	666c      	str	r4, [r5, #100]	; 0x64
  402788:	81ec      	strh	r4, [r5, #14]
  40278a:	612c      	str	r4, [r5, #16]
  40278c:	616c      	str	r4, [r5, #20]
  40278e:	61ac      	str	r4, [r5, #24]
  402790:	81ab      	strh	r3, [r5, #12]
  402792:	4621      	mov	r1, r4
  402794:	f105 005c 	add.w	r0, r5, #92	; 0x5c
  402798:	2208      	movs	r2, #8
  40279a:	f7fe fedd 	bl	401558 <memset>
  40279e:	2301      	movs	r3, #1
  4027a0:	2209      	movs	r2, #9
  4027a2:	68be      	ldr	r6, [r7, #8]
  4027a4:	f8df b094 	ldr.w	fp, [pc, #148]	; 40283c <__sinit.part.1+0xe0>
  4027a8:	f8df a094 	ldr.w	sl, [pc, #148]	; 402840 <__sinit.part.1+0xe4>
  4027ac:	f8df 9094 	ldr.w	r9, [pc, #148]	; 402844 <__sinit.part.1+0xe8>
  4027b0:	f8df 8094 	ldr.w	r8, [pc, #148]	; 402848 <__sinit.part.1+0xec>
  4027b4:	f8c5 b020 	str.w	fp, [r5, #32]
  4027b8:	f8c5 a024 	str.w	sl, [r5, #36]	; 0x24
  4027bc:	f8c5 9028 	str.w	r9, [r5, #40]	; 0x28
  4027c0:	f8c5 802c 	str.w	r8, [r5, #44]	; 0x2c
  4027c4:	61ed      	str	r5, [r5, #28]
  4027c6:	4621      	mov	r1, r4
  4027c8:	81f3      	strh	r3, [r6, #14]
  4027ca:	81b2      	strh	r2, [r6, #12]
  4027cc:	f106 005c 	add.w	r0, r6, #92	; 0x5c
  4027d0:	6034      	str	r4, [r6, #0]
  4027d2:	6074      	str	r4, [r6, #4]
  4027d4:	60b4      	str	r4, [r6, #8]
  4027d6:	6674      	str	r4, [r6, #100]	; 0x64
  4027d8:	6134      	str	r4, [r6, #16]
  4027da:	6174      	str	r4, [r6, #20]
  4027dc:	61b4      	str	r4, [r6, #24]
  4027de:	2208      	movs	r2, #8
  4027e0:	9301      	str	r3, [sp, #4]
  4027e2:	f7fe feb9 	bl	401558 <memset>
  4027e6:	2012      	movs	r0, #18
  4027e8:	2202      	movs	r2, #2
  4027ea:	68fd      	ldr	r5, [r7, #12]
  4027ec:	4621      	mov	r1, r4
  4027ee:	61f6      	str	r6, [r6, #28]
  4027f0:	f8c6 b020 	str.w	fp, [r6, #32]
  4027f4:	f8c6 a024 	str.w	sl, [r6, #36]	; 0x24
  4027f8:	f8c6 9028 	str.w	r9, [r6, #40]	; 0x28
  4027fc:	f8c6 802c 	str.w	r8, [r6, #44]	; 0x2c
  402800:	81a8      	strh	r0, [r5, #12]
  402802:	81ea      	strh	r2, [r5, #14]
  402804:	602c      	str	r4, [r5, #0]
  402806:	606c      	str	r4, [r5, #4]
  402808:	60ac      	str	r4, [r5, #8]
  40280a:	666c      	str	r4, [r5, #100]	; 0x64
  40280c:	612c      	str	r4, [r5, #16]
  40280e:	616c      	str	r4, [r5, #20]
  402810:	61ac      	str	r4, [r5, #24]
  402812:	f105 005c 	add.w	r0, r5, #92	; 0x5c
  402816:	2208      	movs	r2, #8
  402818:	f7fe fe9e 	bl	401558 <memset>
  40281c:	9b01      	ldr	r3, [sp, #4]
  40281e:	61ed      	str	r5, [r5, #28]
  402820:	f8c5 b020 	str.w	fp, [r5, #32]
  402824:	f8c5 a024 	str.w	sl, [r5, #36]	; 0x24
  402828:	f8c5 9028 	str.w	r9, [r5, #40]	; 0x28
  40282c:	f8c5 802c 	str.w	r8, [r5, #44]	; 0x2c
  402830:	63bb      	str	r3, [r7, #56]	; 0x38
  402832:	b003      	add	sp, #12
  402834:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  402838:	00402751 	.word	0x00402751
  40283c:	00403b59 	.word	0x00403b59
  402840:	00403b7d 	.word	0x00403b7d
  402844:	00403bb9 	.word	0x00403bb9
  402848:	00403bd9 	.word	0x00403bd9

0040284c <__sinit>:
  40284c:	6b83      	ldr	r3, [r0, #56]	; 0x38
  40284e:	b103      	cbz	r3, 402852 <__sinit+0x6>
  402850:	4770      	bx	lr
  402852:	f7ff bf83 	b.w	40275c <__sinit.part.1>
  402856:	bf00      	nop

00402858 <__sfp_lock_acquire>:
  402858:	4770      	bx	lr
  40285a:	bf00      	nop

0040285c <__sfp_lock_release>:
  40285c:	4770      	bx	lr
  40285e:	bf00      	nop

00402860 <__libc_fini_array>:
  402860:	b538      	push	{r3, r4, r5, lr}
  402862:	4c0a      	ldr	r4, [pc, #40]	; (40288c <__libc_fini_array+0x2c>)
  402864:	4d0a      	ldr	r5, [pc, #40]	; (402890 <__libc_fini_array+0x30>)
  402866:	1b64      	subs	r4, r4, r5
  402868:	10a4      	asrs	r4, r4, #2
  40286a:	d00a      	beq.n	402882 <__libc_fini_array+0x22>
  40286c:	f104 4380 	add.w	r3, r4, #1073741824	; 0x40000000
  402870:	3b01      	subs	r3, #1
  402872:	eb05 0583 	add.w	r5, r5, r3, lsl #2
  402876:	3c01      	subs	r4, #1
  402878:	f855 3904 	ldr.w	r3, [r5], #-4
  40287c:	4798      	blx	r3
  40287e:	2c00      	cmp	r4, #0
  402880:	d1f9      	bne.n	402876 <__libc_fini_array+0x16>
  402882:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  402886:	f001 be03 	b.w	404490 <_fini>
  40288a:	bf00      	nop
  40288c:	004044a0 	.word	0x004044a0
  402890:	0040449c 	.word	0x0040449c

00402894 <__fputwc>:
  402894:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
  402898:	b083      	sub	sp, #12
  40289a:	4607      	mov	r7, r0
  40289c:	4688      	mov	r8, r1
  40289e:	4614      	mov	r4, r2
  4028a0:	f000 fb2e 	bl	402f00 <__locale_mb_cur_max>
  4028a4:	2801      	cmp	r0, #1
  4028a6:	d033      	beq.n	402910 <__fputwc+0x7c>
  4028a8:	4642      	mov	r2, r8
  4028aa:	f104 035c 	add.w	r3, r4, #92	; 0x5c
  4028ae:	a901      	add	r1, sp, #4
  4028b0:	4638      	mov	r0, r7
  4028b2:	f001 f9ed 	bl	403c90 <_wcrtomb_r>
  4028b6:	1c42      	adds	r2, r0, #1
  4028b8:	4606      	mov	r6, r0
  4028ba:	d022      	beq.n	402902 <__fputwc+0x6e>
  4028bc:	b390      	cbz	r0, 402924 <__fputwc+0x90>
  4028be:	f89d 1004 	ldrb.w	r1, [sp, #4]
  4028c2:	2500      	movs	r5, #0
  4028c4:	f10d 0904 	add.w	r9, sp, #4
  4028c8:	e008      	b.n	4028dc <__fputwc+0x48>
  4028ca:	6823      	ldr	r3, [r4, #0]
  4028cc:	1c5a      	adds	r2, r3, #1
  4028ce:	6022      	str	r2, [r4, #0]
  4028d0:	7019      	strb	r1, [r3, #0]
  4028d2:	3501      	adds	r5, #1
  4028d4:	42b5      	cmp	r5, r6
  4028d6:	d225      	bcs.n	402924 <__fputwc+0x90>
  4028d8:	f815 1009 	ldrb.w	r1, [r5, r9]
  4028dc:	68a3      	ldr	r3, [r4, #8]
  4028de:	3b01      	subs	r3, #1
  4028e0:	2b00      	cmp	r3, #0
  4028e2:	60a3      	str	r3, [r4, #8]
  4028e4:	daf1      	bge.n	4028ca <__fputwc+0x36>
  4028e6:	69a2      	ldr	r2, [r4, #24]
  4028e8:	4293      	cmp	r3, r2
  4028ea:	db01      	blt.n	4028f0 <__fputwc+0x5c>
  4028ec:	290a      	cmp	r1, #10
  4028ee:	d1ec      	bne.n	4028ca <__fputwc+0x36>
  4028f0:	4622      	mov	r2, r4
  4028f2:	4638      	mov	r0, r7
  4028f4:	f001 f974 	bl	403be0 <__swbuf_r>
  4028f8:	1c43      	adds	r3, r0, #1
  4028fa:	d1ea      	bne.n	4028d2 <__fputwc+0x3e>
  4028fc:	b003      	add	sp, #12
  4028fe:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
  402902:	89a3      	ldrh	r3, [r4, #12]
  402904:	f043 0340 	orr.w	r3, r3, #64	; 0x40
  402908:	81a3      	strh	r3, [r4, #12]
  40290a:	b003      	add	sp, #12
  40290c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
  402910:	f108 33ff 	add.w	r3, r8, #4294967295
  402914:	2bfe      	cmp	r3, #254	; 0xfe
  402916:	d8c7      	bhi.n	4028a8 <__fputwc+0x14>
  402918:	fa5f f188 	uxtb.w	r1, r8
  40291c:	4606      	mov	r6, r0
  40291e:	f88d 1004 	strb.w	r1, [sp, #4]
  402922:	e7ce      	b.n	4028c2 <__fputwc+0x2e>
  402924:	4640      	mov	r0, r8
  402926:	b003      	add	sp, #12
  402928:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}

0040292c <_fputwc_r>:
  40292c:	f9b2 300c 	ldrsh.w	r3, [r2, #12]
  402930:	f413 5f00 	tst.w	r3, #8192	; 0x2000
  402934:	d10a      	bne.n	40294c <_fputwc_r+0x20>
  402936:	b410      	push	{r4}
  402938:	6e54      	ldr	r4, [r2, #100]	; 0x64
  40293a:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
  40293e:	f444 5400 	orr.w	r4, r4, #8192	; 0x2000
  402942:	6654      	str	r4, [r2, #100]	; 0x64
  402944:	8193      	strh	r3, [r2, #12]
  402946:	bc10      	pop	{r4}
  402948:	f7ff bfa4 	b.w	402894 <__fputwc>
  40294c:	f7ff bfa2 	b.w	402894 <__fputwc>

00402950 <_malloc_trim_r>:
  402950:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  402952:	460c      	mov	r4, r1
  402954:	4f23      	ldr	r7, [pc, #140]	; (4029e4 <_malloc_trim_r+0x94>)
  402956:	4606      	mov	r6, r0
  402958:	f000 ff32 	bl	4037c0 <__malloc_lock>
  40295c:	68bb      	ldr	r3, [r7, #8]
  40295e:	f5c4 617e 	rsb	r1, r4, #4064	; 0xfe0
  402962:	685d      	ldr	r5, [r3, #4]
  402964:	310f      	adds	r1, #15
  402966:	f025 0503 	bic.w	r5, r5, #3
  40296a:	4429      	add	r1, r5
  40296c:	f421 617f 	bic.w	r1, r1, #4080	; 0xff0
  402970:	f021 010f 	bic.w	r1, r1, #15
  402974:	f5a1 5480 	sub.w	r4, r1, #4096	; 0x1000
  402978:	f5b4 5f80 	cmp.w	r4, #4096	; 0x1000
  40297c:	db07      	blt.n	40298e <_malloc_trim_r+0x3e>
  40297e:	2100      	movs	r1, #0
  402980:	4630      	mov	r0, r6
  402982:	f001 f8d7 	bl	403b34 <_sbrk_r>
  402986:	68bb      	ldr	r3, [r7, #8]
  402988:	442b      	add	r3, r5
  40298a:	4298      	cmp	r0, r3
  40298c:	d004      	beq.n	402998 <_malloc_trim_r+0x48>
  40298e:	4630      	mov	r0, r6
  402990:	f000 ff18 	bl	4037c4 <__malloc_unlock>
  402994:	2000      	movs	r0, #0
  402996:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  402998:	4261      	negs	r1, r4
  40299a:	4630      	mov	r0, r6
  40299c:	f001 f8ca 	bl	403b34 <_sbrk_r>
  4029a0:	3001      	adds	r0, #1
  4029a2:	d00d      	beq.n	4029c0 <_malloc_trim_r+0x70>
  4029a4:	4b10      	ldr	r3, [pc, #64]	; (4029e8 <_malloc_trim_r+0x98>)
  4029a6:	68ba      	ldr	r2, [r7, #8]
  4029a8:	6819      	ldr	r1, [r3, #0]
  4029aa:	1b2d      	subs	r5, r5, r4
  4029ac:	f045 0501 	orr.w	r5, r5, #1
  4029b0:	4630      	mov	r0, r6
  4029b2:	1b09      	subs	r1, r1, r4
  4029b4:	6055      	str	r5, [r2, #4]
  4029b6:	6019      	str	r1, [r3, #0]
  4029b8:	f000 ff04 	bl	4037c4 <__malloc_unlock>
  4029bc:	2001      	movs	r0, #1
  4029be:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  4029c0:	2100      	movs	r1, #0
  4029c2:	4630      	mov	r0, r6
  4029c4:	f001 f8b6 	bl	403b34 <_sbrk_r>
  4029c8:	68ba      	ldr	r2, [r7, #8]
  4029ca:	1a83      	subs	r3, r0, r2
  4029cc:	2b0f      	cmp	r3, #15
  4029ce:	ddde      	ble.n	40298e <_malloc_trim_r+0x3e>
  4029d0:	4c06      	ldr	r4, [pc, #24]	; (4029ec <_malloc_trim_r+0x9c>)
  4029d2:	4905      	ldr	r1, [pc, #20]	; (4029e8 <_malloc_trim_r+0x98>)
  4029d4:	6824      	ldr	r4, [r4, #0]
  4029d6:	f043 0301 	orr.w	r3, r3, #1
  4029da:	1b00      	subs	r0, r0, r4
  4029dc:	6053      	str	r3, [r2, #4]
  4029de:	6008      	str	r0, [r1, #0]
  4029e0:	e7d5      	b.n	40298e <_malloc_trim_r+0x3e>
  4029e2:	bf00      	nop
  4029e4:	200006a4 	.word	0x200006a4
  4029e8:	20000b4c 	.word	0x20000b4c
  4029ec:	20000aac 	.word	0x20000aac

004029f0 <_free_r>:
  4029f0:	2900      	cmp	r1, #0
  4029f2:	d044      	beq.n	402a7e <_free_r+0x8e>
  4029f4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  4029f8:	460d      	mov	r5, r1
  4029fa:	4680      	mov	r8, r0
  4029fc:	f000 fee0 	bl	4037c0 <__malloc_lock>
  402a00:	f855 7c04 	ldr.w	r7, [r5, #-4]
  402a04:	4969      	ldr	r1, [pc, #420]	; (402bac <_free_r+0x1bc>)
  402a06:	f1a5 0408 	sub.w	r4, r5, #8
  402a0a:	f027 0301 	bic.w	r3, r7, #1
  402a0e:	18e2      	adds	r2, r4, r3
  402a10:	688e      	ldr	r6, [r1, #8]
  402a12:	6850      	ldr	r0, [r2, #4]
  402a14:	42b2      	cmp	r2, r6
  402a16:	f020 0003 	bic.w	r0, r0, #3
  402a1a:	d05e      	beq.n	402ada <_free_r+0xea>
  402a1c:	07fe      	lsls	r6, r7, #31
  402a1e:	6050      	str	r0, [r2, #4]
  402a20:	d40b      	bmi.n	402a3a <_free_r+0x4a>
  402a22:	f855 7c08 	ldr.w	r7, [r5, #-8]
  402a26:	f101 0e08 	add.w	lr, r1, #8
  402a2a:	1be4      	subs	r4, r4, r7
  402a2c:	68a5      	ldr	r5, [r4, #8]
  402a2e:	443b      	add	r3, r7
  402a30:	4575      	cmp	r5, lr
  402a32:	d06d      	beq.n	402b10 <_free_r+0x120>
  402a34:	68e7      	ldr	r7, [r4, #12]
  402a36:	60ef      	str	r7, [r5, #12]
  402a38:	60bd      	str	r5, [r7, #8]
  402a3a:	1815      	adds	r5, r2, r0
  402a3c:	686d      	ldr	r5, [r5, #4]
  402a3e:	07ed      	lsls	r5, r5, #31
  402a40:	d53e      	bpl.n	402ac0 <_free_r+0xd0>
  402a42:	f043 0201 	orr.w	r2, r3, #1
  402a46:	6062      	str	r2, [r4, #4]
  402a48:	50e3      	str	r3, [r4, r3]
  402a4a:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
  402a4e:	d217      	bcs.n	402a80 <_free_r+0x90>
  402a50:	2201      	movs	r2, #1
  402a52:	08db      	lsrs	r3, r3, #3
  402a54:	1098      	asrs	r0, r3, #2
  402a56:	684d      	ldr	r5, [r1, #4]
  402a58:	4413      	add	r3, r2
  402a5a:	f851 7033 	ldr.w	r7, [r1, r3, lsl #3]
  402a5e:	4082      	lsls	r2, r0
  402a60:	eb01 00c3 	add.w	r0, r1, r3, lsl #3
  402a64:	432a      	orrs	r2, r5
  402a66:	3808      	subs	r0, #8
  402a68:	60e0      	str	r0, [r4, #12]
  402a6a:	60a7      	str	r7, [r4, #8]
  402a6c:	604a      	str	r2, [r1, #4]
  402a6e:	f841 4033 	str.w	r4, [r1, r3, lsl #3]
  402a72:	60fc      	str	r4, [r7, #12]
  402a74:	4640      	mov	r0, r8
  402a76:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
  402a7a:	f000 bea3 	b.w	4037c4 <__malloc_unlock>
  402a7e:	4770      	bx	lr
  402a80:	0a5a      	lsrs	r2, r3, #9
  402a82:	2a04      	cmp	r2, #4
  402a84:	d852      	bhi.n	402b2c <_free_r+0x13c>
  402a86:	099a      	lsrs	r2, r3, #6
  402a88:	f102 0739 	add.w	r7, r2, #57	; 0x39
  402a8c:	00ff      	lsls	r7, r7, #3
  402a8e:	f102 0538 	add.w	r5, r2, #56	; 0x38
  402a92:	19c8      	adds	r0, r1, r7
  402a94:	59ca      	ldr	r2, [r1, r7]
  402a96:	3808      	subs	r0, #8
  402a98:	4290      	cmp	r0, r2
  402a9a:	d04f      	beq.n	402b3c <_free_r+0x14c>
  402a9c:	6851      	ldr	r1, [r2, #4]
  402a9e:	f021 0103 	bic.w	r1, r1, #3
  402aa2:	428b      	cmp	r3, r1
  402aa4:	d232      	bcs.n	402b0c <_free_r+0x11c>
  402aa6:	6892      	ldr	r2, [r2, #8]
  402aa8:	4290      	cmp	r0, r2
  402aaa:	d1f7      	bne.n	402a9c <_free_r+0xac>
  402aac:	68c3      	ldr	r3, [r0, #12]
  402aae:	60a0      	str	r0, [r4, #8]
  402ab0:	60e3      	str	r3, [r4, #12]
  402ab2:	609c      	str	r4, [r3, #8]
  402ab4:	60c4      	str	r4, [r0, #12]
  402ab6:	4640      	mov	r0, r8
  402ab8:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
  402abc:	f000 be82 	b.w	4037c4 <__malloc_unlock>
  402ac0:	6895      	ldr	r5, [r2, #8]
  402ac2:	4f3b      	ldr	r7, [pc, #236]	; (402bb0 <_free_r+0x1c0>)
  402ac4:	4403      	add	r3, r0
  402ac6:	42bd      	cmp	r5, r7
  402ac8:	d040      	beq.n	402b4c <_free_r+0x15c>
  402aca:	68d0      	ldr	r0, [r2, #12]
  402acc:	f043 0201 	orr.w	r2, r3, #1
  402ad0:	60e8      	str	r0, [r5, #12]
  402ad2:	6085      	str	r5, [r0, #8]
  402ad4:	6062      	str	r2, [r4, #4]
  402ad6:	50e3      	str	r3, [r4, r3]
  402ad8:	e7b7      	b.n	402a4a <_free_r+0x5a>
  402ada:	07ff      	lsls	r7, r7, #31
  402adc:	4403      	add	r3, r0
  402ade:	d407      	bmi.n	402af0 <_free_r+0x100>
  402ae0:	f855 5c08 	ldr.w	r5, [r5, #-8]
  402ae4:	1b64      	subs	r4, r4, r5
  402ae6:	68e2      	ldr	r2, [r4, #12]
  402ae8:	68a0      	ldr	r0, [r4, #8]
  402aea:	442b      	add	r3, r5
  402aec:	60c2      	str	r2, [r0, #12]
  402aee:	6090      	str	r0, [r2, #8]
  402af0:	4a30      	ldr	r2, [pc, #192]	; (402bb4 <_free_r+0x1c4>)
  402af2:	f043 0001 	orr.w	r0, r3, #1
  402af6:	6812      	ldr	r2, [r2, #0]
  402af8:	6060      	str	r0, [r4, #4]
  402afa:	4293      	cmp	r3, r2
  402afc:	608c      	str	r4, [r1, #8]
  402afe:	d3b9      	bcc.n	402a74 <_free_r+0x84>
  402b00:	4b2d      	ldr	r3, [pc, #180]	; (402bb8 <_free_r+0x1c8>)
  402b02:	4640      	mov	r0, r8
  402b04:	6819      	ldr	r1, [r3, #0]
  402b06:	f7ff ff23 	bl	402950 <_malloc_trim_r>
  402b0a:	e7b3      	b.n	402a74 <_free_r+0x84>
  402b0c:	4610      	mov	r0, r2
  402b0e:	e7cd      	b.n	402aac <_free_r+0xbc>
  402b10:	1811      	adds	r1, r2, r0
  402b12:	6849      	ldr	r1, [r1, #4]
  402b14:	07c9      	lsls	r1, r1, #31
  402b16:	d444      	bmi.n	402ba2 <_free_r+0x1b2>
  402b18:	6891      	ldr	r1, [r2, #8]
  402b1a:	4403      	add	r3, r0
  402b1c:	68d2      	ldr	r2, [r2, #12]
  402b1e:	f043 0001 	orr.w	r0, r3, #1
  402b22:	60ca      	str	r2, [r1, #12]
  402b24:	6091      	str	r1, [r2, #8]
  402b26:	6060      	str	r0, [r4, #4]
  402b28:	50e3      	str	r3, [r4, r3]
  402b2a:	e7a3      	b.n	402a74 <_free_r+0x84>
  402b2c:	2a14      	cmp	r2, #20
  402b2e:	d816      	bhi.n	402b5e <_free_r+0x16e>
  402b30:	f102 075c 	add.w	r7, r2, #92	; 0x5c
  402b34:	00ff      	lsls	r7, r7, #3
  402b36:	f102 055b 	add.w	r5, r2, #91	; 0x5b
  402b3a:	e7aa      	b.n	402a92 <_free_r+0xa2>
  402b3c:	2301      	movs	r3, #1
  402b3e:	10aa      	asrs	r2, r5, #2
  402b40:	684d      	ldr	r5, [r1, #4]
  402b42:	4093      	lsls	r3, r2
  402b44:	432b      	orrs	r3, r5
  402b46:	604b      	str	r3, [r1, #4]
  402b48:	4603      	mov	r3, r0
  402b4a:	e7b0      	b.n	402aae <_free_r+0xbe>
  402b4c:	f043 0201 	orr.w	r2, r3, #1
  402b50:	614c      	str	r4, [r1, #20]
  402b52:	610c      	str	r4, [r1, #16]
  402b54:	60e5      	str	r5, [r4, #12]
  402b56:	60a5      	str	r5, [r4, #8]
  402b58:	6062      	str	r2, [r4, #4]
  402b5a:	50e3      	str	r3, [r4, r3]
  402b5c:	e78a      	b.n	402a74 <_free_r+0x84>
  402b5e:	2a54      	cmp	r2, #84	; 0x54
  402b60:	d806      	bhi.n	402b70 <_free_r+0x180>
  402b62:	0b1a      	lsrs	r2, r3, #12
  402b64:	f102 076f 	add.w	r7, r2, #111	; 0x6f
  402b68:	00ff      	lsls	r7, r7, #3
  402b6a:	f102 056e 	add.w	r5, r2, #110	; 0x6e
  402b6e:	e790      	b.n	402a92 <_free_r+0xa2>
  402b70:	f5b2 7faa 	cmp.w	r2, #340	; 0x154
  402b74:	d806      	bhi.n	402b84 <_free_r+0x194>
  402b76:	0bda      	lsrs	r2, r3, #15
  402b78:	f102 0778 	add.w	r7, r2, #120	; 0x78
  402b7c:	00ff      	lsls	r7, r7, #3
  402b7e:	f102 0577 	add.w	r5, r2, #119	; 0x77
  402b82:	e786      	b.n	402a92 <_free_r+0xa2>
  402b84:	f240 5054 	movw	r0, #1364	; 0x554
  402b88:	4282      	cmp	r2, r0
  402b8a:	d806      	bhi.n	402b9a <_free_r+0x1aa>
  402b8c:	0c9a      	lsrs	r2, r3, #18
  402b8e:	f102 077d 	add.w	r7, r2, #125	; 0x7d
  402b92:	00ff      	lsls	r7, r7, #3
  402b94:	f102 057c 	add.w	r5, r2, #124	; 0x7c
  402b98:	e77b      	b.n	402a92 <_free_r+0xa2>
  402b9a:	f44f 777e 	mov.w	r7, #1016	; 0x3f8
  402b9e:	257e      	movs	r5, #126	; 0x7e
  402ba0:	e777      	b.n	402a92 <_free_r+0xa2>
  402ba2:	f043 0101 	orr.w	r1, r3, #1
  402ba6:	6061      	str	r1, [r4, #4]
  402ba8:	6013      	str	r3, [r2, #0]
  402baa:	e763      	b.n	402a74 <_free_r+0x84>
  402bac:	200006a4 	.word	0x200006a4
  402bb0:	200006ac 	.word	0x200006ac
  402bb4:	20000ab0 	.word	0x20000ab0
  402bb8:	20000b7c 	.word	0x20000b7c

00402bbc <__sfvwrite_r>:
  402bbc:	6893      	ldr	r3, [r2, #8]
  402bbe:	2b00      	cmp	r3, #0
  402bc0:	d071      	beq.n	402ca6 <__sfvwrite_r+0xea>
  402bc2:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  402bc6:	898b      	ldrh	r3, [r1, #12]
  402bc8:	b083      	sub	sp, #12
  402bca:	460c      	mov	r4, r1
  402bcc:	0719      	lsls	r1, r3, #28
  402bce:	9000      	str	r0, [sp, #0]
  402bd0:	4616      	mov	r6, r2
  402bd2:	d525      	bpl.n	402c20 <__sfvwrite_r+0x64>
  402bd4:	6922      	ldr	r2, [r4, #16]
  402bd6:	b31a      	cbz	r2, 402c20 <__sfvwrite_r+0x64>
  402bd8:	f013 0002 	ands.w	r0, r3, #2
  402bdc:	6835      	ldr	r5, [r6, #0]
  402bde:	d02b      	beq.n	402c38 <__sfvwrite_r+0x7c>
  402be0:	f04f 0900 	mov.w	r9, #0
  402be4:	46b0      	mov	r8, r6
  402be6:	464f      	mov	r7, r9
  402be8:	f8df a2c0 	ldr.w	sl, [pc, #704]	; 402eac <__sfvwrite_r+0x2f0>
  402bec:	2f00      	cmp	r7, #0
  402bee:	d055      	beq.n	402c9c <__sfvwrite_r+0xe0>
  402bf0:	4557      	cmp	r7, sl
  402bf2:	463b      	mov	r3, r7
  402bf4:	464a      	mov	r2, r9
  402bf6:	bf28      	it	cs
  402bf8:	4653      	movcs	r3, sl
  402bfa:	69e1      	ldr	r1, [r4, #28]
  402bfc:	9800      	ldr	r0, [sp, #0]
  402bfe:	6a66      	ldr	r6, [r4, #36]	; 0x24
  402c00:	47b0      	blx	r6
  402c02:	2800      	cmp	r0, #0
  402c04:	dd56      	ble.n	402cb4 <__sfvwrite_r+0xf8>
  402c06:	f8d8 3008 	ldr.w	r3, [r8, #8]
  402c0a:	4481      	add	r9, r0
  402c0c:	1a1b      	subs	r3, r3, r0
  402c0e:	1a3f      	subs	r7, r7, r0
  402c10:	f8c8 3008 	str.w	r3, [r8, #8]
  402c14:	2b00      	cmp	r3, #0
  402c16:	d1e9      	bne.n	402bec <__sfvwrite_r+0x30>
  402c18:	2000      	movs	r0, #0
  402c1a:	b003      	add	sp, #12
  402c1c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  402c20:	4621      	mov	r1, r4
  402c22:	9800      	ldr	r0, [sp, #0]
  402c24:	f7ff fc6e 	bl	402504 <__swsetup_r>
  402c28:	2800      	cmp	r0, #0
  402c2a:	f040 8135 	bne.w	402e98 <__sfvwrite_r+0x2dc>
  402c2e:	89a3      	ldrh	r3, [r4, #12]
  402c30:	6835      	ldr	r5, [r6, #0]
  402c32:	f013 0002 	ands.w	r0, r3, #2
  402c36:	d1d3      	bne.n	402be0 <__sfvwrite_r+0x24>
  402c38:	f013 0901 	ands.w	r9, r3, #1
  402c3c:	d144      	bne.n	402cc8 <__sfvwrite_r+0x10c>
  402c3e:	464f      	mov	r7, r9
  402c40:	9601      	str	r6, [sp, #4]
  402c42:	b337      	cbz	r7, 402c92 <__sfvwrite_r+0xd6>
  402c44:	059a      	lsls	r2, r3, #22
  402c46:	f8d4 8008 	ldr.w	r8, [r4, #8]
  402c4a:	f140 8085 	bpl.w	402d58 <__sfvwrite_r+0x19c>
  402c4e:	4547      	cmp	r7, r8
  402c50:	46c3      	mov	fp, r8
  402c52:	f0c0 80ad 	bcc.w	402db0 <__sfvwrite_r+0x1f4>
  402c56:	f413 6f90 	tst.w	r3, #1152	; 0x480
  402c5a:	f040 80ae 	bne.w	402dba <__sfvwrite_r+0x1fe>
  402c5e:	46ba      	mov	sl, r7
  402c60:	6820      	ldr	r0, [r4, #0]
  402c62:	465a      	mov	r2, fp
  402c64:	4649      	mov	r1, r9
  402c66:	f000 fd47 	bl	4036f8 <memmove>
  402c6a:	68a2      	ldr	r2, [r4, #8]
  402c6c:	6823      	ldr	r3, [r4, #0]
  402c6e:	eba2 0208 	sub.w	r2, r2, r8
  402c72:	445b      	add	r3, fp
  402c74:	60a2      	str	r2, [r4, #8]
  402c76:	6023      	str	r3, [r4, #0]
  402c78:	9a01      	ldr	r2, [sp, #4]
  402c7a:	44d1      	add	r9, sl
  402c7c:	6893      	ldr	r3, [r2, #8]
  402c7e:	eba7 070a 	sub.w	r7, r7, sl
  402c82:	eba3 030a 	sub.w	r3, r3, sl
  402c86:	6093      	str	r3, [r2, #8]
  402c88:	2b00      	cmp	r3, #0
  402c8a:	d0c5      	beq.n	402c18 <__sfvwrite_r+0x5c>
  402c8c:	89a3      	ldrh	r3, [r4, #12]
  402c8e:	2f00      	cmp	r7, #0
  402c90:	d1d8      	bne.n	402c44 <__sfvwrite_r+0x88>
  402c92:	f8d5 9000 	ldr.w	r9, [r5]
  402c96:	686f      	ldr	r7, [r5, #4]
  402c98:	3508      	adds	r5, #8
  402c9a:	e7d2      	b.n	402c42 <__sfvwrite_r+0x86>
  402c9c:	f8d5 9000 	ldr.w	r9, [r5]
  402ca0:	686f      	ldr	r7, [r5, #4]
  402ca2:	3508      	adds	r5, #8
  402ca4:	e7a2      	b.n	402bec <__sfvwrite_r+0x30>
  402ca6:	2000      	movs	r0, #0
  402ca8:	4770      	bx	lr
  402caa:	4621      	mov	r1, r4
  402cac:	9800      	ldr	r0, [sp, #0]
  402cae:	f7ff fd39 	bl	402724 <_fflush_r>
  402cb2:	b378      	cbz	r0, 402d14 <__sfvwrite_r+0x158>
  402cb4:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  402cb8:	f04f 30ff 	mov.w	r0, #4294967295
  402cbc:	f043 0340 	orr.w	r3, r3, #64	; 0x40
  402cc0:	81a3      	strh	r3, [r4, #12]
  402cc2:	b003      	add	sp, #12
  402cc4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  402cc8:	4681      	mov	r9, r0
  402cca:	4633      	mov	r3, r6
  402ccc:	464e      	mov	r6, r9
  402cce:	46a8      	mov	r8, r5
  402cd0:	469a      	mov	sl, r3
  402cd2:	464d      	mov	r5, r9
  402cd4:	b356      	cbz	r6, 402d2c <__sfvwrite_r+0x170>
  402cd6:	2800      	cmp	r0, #0
  402cd8:	d032      	beq.n	402d40 <__sfvwrite_r+0x184>
  402cda:	45b1      	cmp	r9, r6
  402cdc:	46cb      	mov	fp, r9
  402cde:	bf28      	it	cs
  402ce0:	46b3      	movcs	fp, r6
  402ce2:	6820      	ldr	r0, [r4, #0]
  402ce4:	6923      	ldr	r3, [r4, #16]
  402ce6:	465f      	mov	r7, fp
  402ce8:	4298      	cmp	r0, r3
  402cea:	6962      	ldr	r2, [r4, #20]
  402cec:	d904      	bls.n	402cf8 <__sfvwrite_r+0x13c>
  402cee:	68a3      	ldr	r3, [r4, #8]
  402cf0:	4413      	add	r3, r2
  402cf2:	459b      	cmp	fp, r3
  402cf4:	f300 80a8 	bgt.w	402e48 <__sfvwrite_r+0x28c>
  402cf8:	4593      	cmp	fp, r2
  402cfa:	db4d      	blt.n	402d98 <__sfvwrite_r+0x1dc>
  402cfc:	4613      	mov	r3, r2
  402cfe:	6a67      	ldr	r7, [r4, #36]	; 0x24
  402d00:	462a      	mov	r2, r5
  402d02:	69e1      	ldr	r1, [r4, #28]
  402d04:	9800      	ldr	r0, [sp, #0]
  402d06:	47b8      	blx	r7
  402d08:	1e07      	subs	r7, r0, #0
  402d0a:	ddd3      	ble.n	402cb4 <__sfvwrite_r+0xf8>
  402d0c:	ebb9 0907 	subs.w	r9, r9, r7
  402d10:	d0cb      	beq.n	402caa <__sfvwrite_r+0xee>
  402d12:	2001      	movs	r0, #1
  402d14:	f8da 3008 	ldr.w	r3, [sl, #8]
  402d18:	443d      	add	r5, r7
  402d1a:	1bdb      	subs	r3, r3, r7
  402d1c:	1bf6      	subs	r6, r6, r7
  402d1e:	f8ca 3008 	str.w	r3, [sl, #8]
  402d22:	2b00      	cmp	r3, #0
  402d24:	f43f af78 	beq.w	402c18 <__sfvwrite_r+0x5c>
  402d28:	2e00      	cmp	r6, #0
  402d2a:	d1d4      	bne.n	402cd6 <__sfvwrite_r+0x11a>
  402d2c:	f108 0308 	add.w	r3, r8, #8
  402d30:	f853 6c04 	ldr.w	r6, [r3, #-4]
  402d34:	4698      	mov	r8, r3
  402d36:	f853 5c08 	ldr.w	r5, [r3, #-8]
  402d3a:	3308      	adds	r3, #8
  402d3c:	2e00      	cmp	r6, #0
  402d3e:	d0f7      	beq.n	402d30 <__sfvwrite_r+0x174>
  402d40:	4632      	mov	r2, r6
  402d42:	210a      	movs	r1, #10
  402d44:	4628      	mov	r0, r5
  402d46:	f000 fc1b 	bl	403580 <memchr>
  402d4a:	2800      	cmp	r0, #0
  402d4c:	f000 80a1 	beq.w	402e92 <__sfvwrite_r+0x2d6>
  402d50:	3001      	adds	r0, #1
  402d52:	eba0 0905 	sub.w	r9, r0, r5
  402d56:	e7c0      	b.n	402cda <__sfvwrite_r+0x11e>
  402d58:	6820      	ldr	r0, [r4, #0]
  402d5a:	6923      	ldr	r3, [r4, #16]
  402d5c:	4298      	cmp	r0, r3
  402d5e:	d802      	bhi.n	402d66 <__sfvwrite_r+0x1aa>
  402d60:	6963      	ldr	r3, [r4, #20]
  402d62:	429f      	cmp	r7, r3
  402d64:	d25d      	bcs.n	402e22 <__sfvwrite_r+0x266>
  402d66:	45b8      	cmp	r8, r7
  402d68:	bf28      	it	cs
  402d6a:	46b8      	movcs	r8, r7
  402d6c:	4649      	mov	r1, r9
  402d6e:	4642      	mov	r2, r8
  402d70:	f000 fcc2 	bl	4036f8 <memmove>
  402d74:	68a3      	ldr	r3, [r4, #8]
  402d76:	6822      	ldr	r2, [r4, #0]
  402d78:	eba3 0308 	sub.w	r3, r3, r8
  402d7c:	4442      	add	r2, r8
  402d7e:	60a3      	str	r3, [r4, #8]
  402d80:	6022      	str	r2, [r4, #0]
  402d82:	b10b      	cbz	r3, 402d88 <__sfvwrite_r+0x1cc>
  402d84:	46c2      	mov	sl, r8
  402d86:	e777      	b.n	402c78 <__sfvwrite_r+0xbc>
  402d88:	4621      	mov	r1, r4
  402d8a:	9800      	ldr	r0, [sp, #0]
  402d8c:	f7ff fcca 	bl	402724 <_fflush_r>
  402d90:	2800      	cmp	r0, #0
  402d92:	d18f      	bne.n	402cb4 <__sfvwrite_r+0xf8>
  402d94:	46c2      	mov	sl, r8
  402d96:	e76f      	b.n	402c78 <__sfvwrite_r+0xbc>
  402d98:	465a      	mov	r2, fp
  402d9a:	4629      	mov	r1, r5
  402d9c:	f000 fcac 	bl	4036f8 <memmove>
  402da0:	68a2      	ldr	r2, [r4, #8]
  402da2:	6823      	ldr	r3, [r4, #0]
  402da4:	eba2 020b 	sub.w	r2, r2, fp
  402da8:	445b      	add	r3, fp
  402daa:	60a2      	str	r2, [r4, #8]
  402dac:	6023      	str	r3, [r4, #0]
  402dae:	e7ad      	b.n	402d0c <__sfvwrite_r+0x150>
  402db0:	46b8      	mov	r8, r7
  402db2:	46ba      	mov	sl, r7
  402db4:	46bb      	mov	fp, r7
  402db6:	6820      	ldr	r0, [r4, #0]
  402db8:	e753      	b.n	402c62 <__sfvwrite_r+0xa6>
  402dba:	6962      	ldr	r2, [r4, #20]
  402dbc:	6820      	ldr	r0, [r4, #0]
  402dbe:	6921      	ldr	r1, [r4, #16]
  402dc0:	eb02 0842 	add.w	r8, r2, r2, lsl #1
  402dc4:	eba0 0a01 	sub.w	sl, r0, r1
  402dc8:	eb08 78d8 	add.w	r8, r8, r8, lsr #31
  402dcc:	f10a 0001 	add.w	r0, sl, #1
  402dd0:	ea4f 0868 	mov.w	r8, r8, asr #1
  402dd4:	4438      	add	r0, r7
  402dd6:	4540      	cmp	r0, r8
  402dd8:	4642      	mov	r2, r8
  402dda:	bf84      	itt	hi
  402ddc:	4680      	movhi	r8, r0
  402dde:	4642      	movhi	r2, r8
  402de0:	055b      	lsls	r3, r3, #21
  402de2:	d544      	bpl.n	402e6e <__sfvwrite_r+0x2b2>
  402de4:	4611      	mov	r1, r2
  402de6:	9800      	ldr	r0, [sp, #0]
  402de8:	f000 f912 	bl	403010 <_malloc_r>
  402dec:	4683      	mov	fp, r0
  402dee:	2800      	cmp	r0, #0
  402df0:	d055      	beq.n	402e9e <__sfvwrite_r+0x2e2>
  402df2:	4652      	mov	r2, sl
  402df4:	6921      	ldr	r1, [r4, #16]
  402df6:	f000 fc09 	bl	40360c <memcpy>
  402dfa:	89a3      	ldrh	r3, [r4, #12]
  402dfc:	f423 6390 	bic.w	r3, r3, #1152	; 0x480
  402e00:	f043 0380 	orr.w	r3, r3, #128	; 0x80
  402e04:	81a3      	strh	r3, [r4, #12]
  402e06:	eb0b 000a 	add.w	r0, fp, sl
  402e0a:	eba8 030a 	sub.w	r3, r8, sl
  402e0e:	f8c4 b010 	str.w	fp, [r4, #16]
  402e12:	f8c4 8014 	str.w	r8, [r4, #20]
  402e16:	6020      	str	r0, [r4, #0]
  402e18:	60a3      	str	r3, [r4, #8]
  402e1a:	46b8      	mov	r8, r7
  402e1c:	46ba      	mov	sl, r7
  402e1e:	46bb      	mov	fp, r7
  402e20:	e71f      	b.n	402c62 <__sfvwrite_r+0xa6>
  402e22:	f06f 4200 	mvn.w	r2, #2147483648	; 0x80000000
  402e26:	42ba      	cmp	r2, r7
  402e28:	bf28      	it	cs
  402e2a:	463a      	movcs	r2, r7
  402e2c:	fb92 f2f3 	sdiv	r2, r2, r3
  402e30:	69e1      	ldr	r1, [r4, #28]
  402e32:	fb03 f302 	mul.w	r3, r3, r2
  402e36:	9800      	ldr	r0, [sp, #0]
  402e38:	464a      	mov	r2, r9
  402e3a:	6a66      	ldr	r6, [r4, #36]	; 0x24
  402e3c:	47b0      	blx	r6
  402e3e:	f1b0 0a00 	subs.w	sl, r0, #0
  402e42:	f73f af19 	bgt.w	402c78 <__sfvwrite_r+0xbc>
  402e46:	e735      	b.n	402cb4 <__sfvwrite_r+0xf8>
  402e48:	461a      	mov	r2, r3
  402e4a:	4629      	mov	r1, r5
  402e4c:	9301      	str	r3, [sp, #4]
  402e4e:	f000 fc53 	bl	4036f8 <memmove>
  402e52:	6822      	ldr	r2, [r4, #0]
  402e54:	9b01      	ldr	r3, [sp, #4]
  402e56:	4621      	mov	r1, r4
  402e58:	441a      	add	r2, r3
  402e5a:	6022      	str	r2, [r4, #0]
  402e5c:	9800      	ldr	r0, [sp, #0]
  402e5e:	f7ff fc61 	bl	402724 <_fflush_r>
  402e62:	9b01      	ldr	r3, [sp, #4]
  402e64:	2800      	cmp	r0, #0
  402e66:	f47f af25 	bne.w	402cb4 <__sfvwrite_r+0xf8>
  402e6a:	461f      	mov	r7, r3
  402e6c:	e74e      	b.n	402d0c <__sfvwrite_r+0x150>
  402e6e:	9800      	ldr	r0, [sp, #0]
  402e70:	f000 fcaa 	bl	4037c8 <_realloc_r>
  402e74:	4683      	mov	fp, r0
  402e76:	2800      	cmp	r0, #0
  402e78:	d1c5      	bne.n	402e06 <__sfvwrite_r+0x24a>
  402e7a:	9d00      	ldr	r5, [sp, #0]
  402e7c:	6921      	ldr	r1, [r4, #16]
  402e7e:	4628      	mov	r0, r5
  402e80:	f7ff fdb6 	bl	4029f0 <_free_r>
  402e84:	220c      	movs	r2, #12
  402e86:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  402e8a:	602a      	str	r2, [r5, #0]
  402e8c:	f023 0380 	bic.w	r3, r3, #128	; 0x80
  402e90:	e712      	b.n	402cb8 <__sfvwrite_r+0xfc>
  402e92:	f106 0901 	add.w	r9, r6, #1
  402e96:	e720      	b.n	402cda <__sfvwrite_r+0x11e>
  402e98:	f04f 30ff 	mov.w	r0, #4294967295
  402e9c:	e6bd      	b.n	402c1a <__sfvwrite_r+0x5e>
  402e9e:	220c      	movs	r2, #12
  402ea0:	9900      	ldr	r1, [sp, #0]
  402ea2:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  402ea6:	600a      	str	r2, [r1, #0]
  402ea8:	e706      	b.n	402cb8 <__sfvwrite_r+0xfc>
  402eaa:	bf00      	nop
  402eac:	7ffffc00 	.word	0x7ffffc00

00402eb0 <_fwalk_reent>:
  402eb0:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
  402eb4:	f510 7638 	adds.w	r6, r0, #736	; 0x2e0
  402eb8:	d01e      	beq.n	402ef8 <_fwalk_reent+0x48>
  402eba:	4688      	mov	r8, r1
  402ebc:	4607      	mov	r7, r0
  402ebe:	f04f 0900 	mov.w	r9, #0
  402ec2:	6875      	ldr	r5, [r6, #4]
  402ec4:	68b4      	ldr	r4, [r6, #8]
  402ec6:	3d01      	subs	r5, #1
  402ec8:	d410      	bmi.n	402eec <_fwalk_reent+0x3c>
  402eca:	89a3      	ldrh	r3, [r4, #12]
  402ecc:	3d01      	subs	r5, #1
  402ece:	2b01      	cmp	r3, #1
  402ed0:	d908      	bls.n	402ee4 <_fwalk_reent+0x34>
  402ed2:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
  402ed6:	3301      	adds	r3, #1
  402ed8:	d004      	beq.n	402ee4 <_fwalk_reent+0x34>
  402eda:	4621      	mov	r1, r4
  402edc:	4638      	mov	r0, r7
  402ede:	47c0      	blx	r8
  402ee0:	ea49 0900 	orr.w	r9, r9, r0
  402ee4:	1c6b      	adds	r3, r5, #1
  402ee6:	f104 0468 	add.w	r4, r4, #104	; 0x68
  402eea:	d1ee      	bne.n	402eca <_fwalk_reent+0x1a>
  402eec:	6836      	ldr	r6, [r6, #0]
  402eee:	2e00      	cmp	r6, #0
  402ef0:	d1e7      	bne.n	402ec2 <_fwalk_reent+0x12>
  402ef2:	4648      	mov	r0, r9
  402ef4:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  402ef8:	46b1      	mov	r9, r6
  402efa:	4648      	mov	r0, r9
  402efc:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}

00402f00 <__locale_mb_cur_max>:
  402f00:	4b04      	ldr	r3, [pc, #16]	; (402f14 <__locale_mb_cur_max+0x14>)
  402f02:	4a05      	ldr	r2, [pc, #20]	; (402f18 <__locale_mb_cur_max+0x18>)
  402f04:	681b      	ldr	r3, [r3, #0]
  402f06:	6b5b      	ldr	r3, [r3, #52]	; 0x34
  402f08:	2b00      	cmp	r3, #0
  402f0a:	bf08      	it	eq
  402f0c:	4613      	moveq	r3, r2
  402f0e:	f893 0128 	ldrb.w	r0, [r3, #296]	; 0x128
  402f12:	4770      	bx	lr
  402f14:	20000108 	.word	0x20000108
  402f18:	20000538 	.word	0x20000538

00402f1c <__swhatbuf_r>:
  402f1c:	b570      	push	{r4, r5, r6, lr}
  402f1e:	460c      	mov	r4, r1
  402f20:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
  402f24:	b090      	sub	sp, #64	; 0x40
  402f26:	2900      	cmp	r1, #0
  402f28:	4615      	mov	r5, r2
  402f2a:	461e      	mov	r6, r3
  402f2c:	db14      	blt.n	402f58 <__swhatbuf_r+0x3c>
  402f2e:	aa01      	add	r2, sp, #4
  402f30:	f000 ffa2 	bl	403e78 <_fstat_r>
  402f34:	2800      	cmp	r0, #0
  402f36:	db0f      	blt.n	402f58 <__swhatbuf_r+0x3c>
  402f38:	9a02      	ldr	r2, [sp, #8]
  402f3a:	f44f 6380 	mov.w	r3, #1024	; 0x400
  402f3e:	f402 4270 	and.w	r2, r2, #61440	; 0xf000
  402f42:	f5a2 5200 	sub.w	r2, r2, #8192	; 0x2000
  402f46:	fab2 f282 	clz	r2, r2
  402f4a:	f44f 6000 	mov.w	r0, #2048	; 0x800
  402f4e:	0952      	lsrs	r2, r2, #5
  402f50:	6032      	str	r2, [r6, #0]
  402f52:	602b      	str	r3, [r5, #0]
  402f54:	b010      	add	sp, #64	; 0x40
  402f56:	bd70      	pop	{r4, r5, r6, pc}
  402f58:	2300      	movs	r3, #0
  402f5a:	89a2      	ldrh	r2, [r4, #12]
  402f5c:	6033      	str	r3, [r6, #0]
  402f5e:	f012 0080 	ands.w	r0, r2, #128	; 0x80
  402f62:	d004      	beq.n	402f6e <__swhatbuf_r+0x52>
  402f64:	2240      	movs	r2, #64	; 0x40
  402f66:	4618      	mov	r0, r3
  402f68:	602a      	str	r2, [r5, #0]
  402f6a:	b010      	add	sp, #64	; 0x40
  402f6c:	bd70      	pop	{r4, r5, r6, pc}
  402f6e:	f44f 6380 	mov.w	r3, #1024	; 0x400
  402f72:	602b      	str	r3, [r5, #0]
  402f74:	b010      	add	sp, #64	; 0x40
  402f76:	bd70      	pop	{r4, r5, r6, pc}

00402f78 <__smakebuf_r>:
  402f78:	898a      	ldrh	r2, [r1, #12]
  402f7a:	460b      	mov	r3, r1
  402f7c:	0792      	lsls	r2, r2, #30
  402f7e:	d506      	bpl.n	402f8e <__smakebuf_r+0x16>
  402f80:	2101      	movs	r1, #1
  402f82:	f103 0243 	add.w	r2, r3, #67	; 0x43
  402f86:	6159      	str	r1, [r3, #20]
  402f88:	601a      	str	r2, [r3, #0]
  402f8a:	611a      	str	r2, [r3, #16]
  402f8c:	4770      	bx	lr
  402f8e:	b5f0      	push	{r4, r5, r6, r7, lr}
  402f90:	b083      	sub	sp, #12
  402f92:	ab01      	add	r3, sp, #4
  402f94:	466a      	mov	r2, sp
  402f96:	460c      	mov	r4, r1
  402f98:	4605      	mov	r5, r0
  402f9a:	f7ff ffbf 	bl	402f1c <__swhatbuf_r>
  402f9e:	9900      	ldr	r1, [sp, #0]
  402fa0:	4606      	mov	r6, r0
  402fa2:	4628      	mov	r0, r5
  402fa4:	f000 f834 	bl	403010 <_malloc_r>
  402fa8:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  402fac:	b1d0      	cbz	r0, 402fe4 <__smakebuf_r+0x6c>
  402fae:	e89d 0006 	ldmia.w	sp, {r1, r2}
  402fb2:	4f12      	ldr	r7, [pc, #72]	; (402ffc <__smakebuf_r+0x84>)
  402fb4:	f043 0380 	orr.w	r3, r3, #128	; 0x80
  402fb8:	63ef      	str	r7, [r5, #60]	; 0x3c
  402fba:	81a3      	strh	r3, [r4, #12]
  402fbc:	6020      	str	r0, [r4, #0]
  402fbe:	6120      	str	r0, [r4, #16]
  402fc0:	6161      	str	r1, [r4, #20]
  402fc2:	b91a      	cbnz	r2, 402fcc <__smakebuf_r+0x54>
  402fc4:	4333      	orrs	r3, r6
  402fc6:	81a3      	strh	r3, [r4, #12]
  402fc8:	b003      	add	sp, #12
  402fca:	bdf0      	pop	{r4, r5, r6, r7, pc}
  402fcc:	4628      	mov	r0, r5
  402fce:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
  402fd2:	f000 ff65 	bl	403ea0 <_isatty_r>
  402fd6:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  402fda:	2800      	cmp	r0, #0
  402fdc:	d0f2      	beq.n	402fc4 <__smakebuf_r+0x4c>
  402fde:	f043 0301 	orr.w	r3, r3, #1
  402fe2:	e7ef      	b.n	402fc4 <__smakebuf_r+0x4c>
  402fe4:	059a      	lsls	r2, r3, #22
  402fe6:	d4ef      	bmi.n	402fc8 <__smakebuf_r+0x50>
  402fe8:	2101      	movs	r1, #1
  402fea:	f104 0243 	add.w	r2, r4, #67	; 0x43
  402fee:	f043 0302 	orr.w	r3, r3, #2
  402ff2:	81a3      	strh	r3, [r4, #12]
  402ff4:	6161      	str	r1, [r4, #20]
  402ff6:	6022      	str	r2, [r4, #0]
  402ff8:	6122      	str	r2, [r4, #16]
  402ffa:	e7e5      	b.n	402fc8 <__smakebuf_r+0x50>
  402ffc:	00402751 	.word	0x00402751

00403000 <malloc>:
  403000:	4b02      	ldr	r3, [pc, #8]	; (40300c <malloc+0xc>)
  403002:	4601      	mov	r1, r0
  403004:	6818      	ldr	r0, [r3, #0]
  403006:	f000 b803 	b.w	403010 <_malloc_r>
  40300a:	bf00      	nop
  40300c:	20000108 	.word	0x20000108

00403010 <_malloc_r>:
  403010:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  403014:	f101 060b 	add.w	r6, r1, #11
  403018:	2e16      	cmp	r6, #22
  40301a:	b083      	sub	sp, #12
  40301c:	4605      	mov	r5, r0
  40301e:	f240 809e 	bls.w	40315e <_malloc_r+0x14e>
  403022:	f036 0607 	bics.w	r6, r6, #7
  403026:	f100 80bd 	bmi.w	4031a4 <_malloc_r+0x194>
  40302a:	42b1      	cmp	r1, r6
  40302c:	f200 80ba 	bhi.w	4031a4 <_malloc_r+0x194>
  403030:	f000 fbc6 	bl	4037c0 <__malloc_lock>
  403034:	f5b6 7ffc 	cmp.w	r6, #504	; 0x1f8
  403038:	f0c0 8285 	bcc.w	403546 <_malloc_r+0x536>
  40303c:	0a73      	lsrs	r3, r6, #9
  40303e:	f000 80b8 	beq.w	4031b2 <_malloc_r+0x1a2>
  403042:	2b04      	cmp	r3, #4
  403044:	f200 816c 	bhi.w	403320 <_malloc_r+0x310>
  403048:	09b3      	lsrs	r3, r6, #6
  40304a:	f103 0039 	add.w	r0, r3, #57	; 0x39
  40304e:	f103 0e38 	add.w	lr, r3, #56	; 0x38
  403052:	00c1      	lsls	r1, r0, #3
  403054:	4fb8      	ldr	r7, [pc, #736]	; (403338 <_malloc_r+0x328>)
  403056:	4439      	add	r1, r7
  403058:	684c      	ldr	r4, [r1, #4]
  40305a:	3908      	subs	r1, #8
  40305c:	42a1      	cmp	r1, r4
  40305e:	d106      	bne.n	40306e <_malloc_r+0x5e>
  403060:	e00c      	b.n	40307c <_malloc_r+0x6c>
  403062:	2a00      	cmp	r2, #0
  403064:	f280 80ab 	bge.w	4031be <_malloc_r+0x1ae>
  403068:	68e4      	ldr	r4, [r4, #12]
  40306a:	42a1      	cmp	r1, r4
  40306c:	d006      	beq.n	40307c <_malloc_r+0x6c>
  40306e:	6863      	ldr	r3, [r4, #4]
  403070:	f023 0303 	bic.w	r3, r3, #3
  403074:	1b9a      	subs	r2, r3, r6
  403076:	2a0f      	cmp	r2, #15
  403078:	ddf3      	ble.n	403062 <_malloc_r+0x52>
  40307a:	4670      	mov	r0, lr
  40307c:	693c      	ldr	r4, [r7, #16]
  40307e:	f8df e2cc 	ldr.w	lr, [pc, #716]	; 40334c <_malloc_r+0x33c>
  403082:	4574      	cmp	r4, lr
  403084:	f000 819e 	beq.w	4033c4 <_malloc_r+0x3b4>
  403088:	6863      	ldr	r3, [r4, #4]
  40308a:	f023 0303 	bic.w	r3, r3, #3
  40308e:	1b9a      	subs	r2, r3, r6
  403090:	2a0f      	cmp	r2, #15
  403092:	f300 8183 	bgt.w	40339c <_malloc_r+0x38c>
  403096:	2a00      	cmp	r2, #0
  403098:	f8c7 e014 	str.w	lr, [r7, #20]
  40309c:	f8c7 e010 	str.w	lr, [r7, #16]
  4030a0:	f280 8091 	bge.w	4031c6 <_malloc_r+0x1b6>
  4030a4:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
  4030a8:	f080 8154 	bcs.w	403354 <_malloc_r+0x344>
  4030ac:	2201      	movs	r2, #1
  4030ae:	08db      	lsrs	r3, r3, #3
  4030b0:	6879      	ldr	r1, [r7, #4]
  4030b2:	ea4f 0ca3 	mov.w	ip, r3, asr #2
  4030b6:	4413      	add	r3, r2
  4030b8:	f857 8033 	ldr.w	r8, [r7, r3, lsl #3]
  4030bc:	fa02 f20c 	lsl.w	r2, r2, ip
  4030c0:	eb07 0cc3 	add.w	ip, r7, r3, lsl #3
  4030c4:	430a      	orrs	r2, r1
  4030c6:	f1ac 0108 	sub.w	r1, ip, #8
  4030ca:	60e1      	str	r1, [r4, #12]
  4030cc:	f8c4 8008 	str.w	r8, [r4, #8]
  4030d0:	607a      	str	r2, [r7, #4]
  4030d2:	f847 4033 	str.w	r4, [r7, r3, lsl #3]
  4030d6:	f8c8 400c 	str.w	r4, [r8, #12]
  4030da:	2401      	movs	r4, #1
  4030dc:	1083      	asrs	r3, r0, #2
  4030de:	409c      	lsls	r4, r3
  4030e0:	4294      	cmp	r4, r2
  4030e2:	d87d      	bhi.n	4031e0 <_malloc_r+0x1d0>
  4030e4:	4214      	tst	r4, r2
  4030e6:	d106      	bne.n	4030f6 <_malloc_r+0xe6>
  4030e8:	f020 0003 	bic.w	r0, r0, #3
  4030ec:	0064      	lsls	r4, r4, #1
  4030ee:	4214      	tst	r4, r2
  4030f0:	f100 0004 	add.w	r0, r0, #4
  4030f4:	d0fa      	beq.n	4030ec <_malloc_r+0xdc>
  4030f6:	eb07 09c0 	add.w	r9, r7, r0, lsl #3
  4030fa:	46cc      	mov	ip, r9
  4030fc:	4680      	mov	r8, r0
  4030fe:	f8dc 300c 	ldr.w	r3, [ip, #12]
  403102:	459c      	cmp	ip, r3
  403104:	d107      	bne.n	403116 <_malloc_r+0x106>
  403106:	e15f      	b.n	4033c8 <_malloc_r+0x3b8>
  403108:	2a00      	cmp	r2, #0
  40310a:	f280 816d 	bge.w	4033e8 <_malloc_r+0x3d8>
  40310e:	68db      	ldr	r3, [r3, #12]
  403110:	459c      	cmp	ip, r3
  403112:	f000 8159 	beq.w	4033c8 <_malloc_r+0x3b8>
  403116:	6859      	ldr	r1, [r3, #4]
  403118:	f021 0103 	bic.w	r1, r1, #3
  40311c:	1b8a      	subs	r2, r1, r6
  40311e:	2a0f      	cmp	r2, #15
  403120:	ddf2      	ble.n	403108 <_malloc_r+0xf8>
  403122:	68dc      	ldr	r4, [r3, #12]
  403124:	f8d3 c008 	ldr.w	ip, [r3, #8]
  403128:	f046 0801 	orr.w	r8, r6, #1
  40312c:	4628      	mov	r0, r5
  40312e:	441e      	add	r6, r3
  403130:	f042 0501 	orr.w	r5, r2, #1
  403134:	f8c3 8004 	str.w	r8, [r3, #4]
  403138:	f8cc 400c 	str.w	r4, [ip, #12]
  40313c:	f8c4 c008 	str.w	ip, [r4, #8]
  403140:	617e      	str	r6, [r7, #20]
  403142:	613e      	str	r6, [r7, #16]
  403144:	f8c6 e00c 	str.w	lr, [r6, #12]
  403148:	f8c6 e008 	str.w	lr, [r6, #8]
  40314c:	6075      	str	r5, [r6, #4]
  40314e:	505a      	str	r2, [r3, r1]
  403150:	9300      	str	r3, [sp, #0]
  403152:	f000 fb37 	bl	4037c4 <__malloc_unlock>
  403156:	9b00      	ldr	r3, [sp, #0]
  403158:	f103 0408 	add.w	r4, r3, #8
  40315c:	e01e      	b.n	40319c <_malloc_r+0x18c>
  40315e:	2910      	cmp	r1, #16
  403160:	d820      	bhi.n	4031a4 <_malloc_r+0x194>
  403162:	f000 fb2d 	bl	4037c0 <__malloc_lock>
  403166:	2610      	movs	r6, #16
  403168:	2318      	movs	r3, #24
  40316a:	2002      	movs	r0, #2
  40316c:	4f72      	ldr	r7, [pc, #456]	; (403338 <_malloc_r+0x328>)
  40316e:	443b      	add	r3, r7
  403170:	685c      	ldr	r4, [r3, #4]
  403172:	f1a3 0208 	sub.w	r2, r3, #8
  403176:	4294      	cmp	r4, r2
  403178:	f000 812f 	beq.w	4033da <_malloc_r+0x3ca>
  40317c:	6863      	ldr	r3, [r4, #4]
  40317e:	68e1      	ldr	r1, [r4, #12]
  403180:	f023 0303 	bic.w	r3, r3, #3
  403184:	4423      	add	r3, r4
  403186:	685a      	ldr	r2, [r3, #4]
  403188:	68a6      	ldr	r6, [r4, #8]
  40318a:	f042 0201 	orr.w	r2, r2, #1
  40318e:	60f1      	str	r1, [r6, #12]
  403190:	4628      	mov	r0, r5
  403192:	608e      	str	r6, [r1, #8]
  403194:	605a      	str	r2, [r3, #4]
  403196:	f000 fb15 	bl	4037c4 <__malloc_unlock>
  40319a:	3408      	adds	r4, #8
  40319c:	4620      	mov	r0, r4
  40319e:	b003      	add	sp, #12
  4031a0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  4031a4:	2400      	movs	r4, #0
  4031a6:	230c      	movs	r3, #12
  4031a8:	4620      	mov	r0, r4
  4031aa:	602b      	str	r3, [r5, #0]
  4031ac:	b003      	add	sp, #12
  4031ae:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  4031b2:	2040      	movs	r0, #64	; 0x40
  4031b4:	f44f 7100 	mov.w	r1, #512	; 0x200
  4031b8:	f04f 0e3f 	mov.w	lr, #63	; 0x3f
  4031bc:	e74a      	b.n	403054 <_malloc_r+0x44>
  4031be:	4423      	add	r3, r4
  4031c0:	685a      	ldr	r2, [r3, #4]
  4031c2:	68e1      	ldr	r1, [r4, #12]
  4031c4:	e7e0      	b.n	403188 <_malloc_r+0x178>
  4031c6:	4423      	add	r3, r4
  4031c8:	685a      	ldr	r2, [r3, #4]
  4031ca:	4628      	mov	r0, r5
  4031cc:	f042 0201 	orr.w	r2, r2, #1
  4031d0:	605a      	str	r2, [r3, #4]
  4031d2:	3408      	adds	r4, #8
  4031d4:	f000 faf6 	bl	4037c4 <__malloc_unlock>
  4031d8:	4620      	mov	r0, r4
  4031da:	b003      	add	sp, #12
  4031dc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  4031e0:	68bc      	ldr	r4, [r7, #8]
  4031e2:	6863      	ldr	r3, [r4, #4]
  4031e4:	f023 0803 	bic.w	r8, r3, #3
  4031e8:	45b0      	cmp	r8, r6
  4031ea:	d304      	bcc.n	4031f6 <_malloc_r+0x1e6>
  4031ec:	eba8 0306 	sub.w	r3, r8, r6
  4031f0:	2b0f      	cmp	r3, #15
  4031f2:	f300 8085 	bgt.w	403300 <_malloc_r+0x2f0>
  4031f6:	f8df 9158 	ldr.w	r9, [pc, #344]	; 403350 <_malloc_r+0x340>
  4031fa:	4b50      	ldr	r3, [pc, #320]	; (40333c <_malloc_r+0x32c>)
  4031fc:	f8d9 2000 	ldr.w	r2, [r9]
  403200:	681b      	ldr	r3, [r3, #0]
  403202:	3201      	adds	r2, #1
  403204:	4433      	add	r3, r6
  403206:	eb04 0a08 	add.w	sl, r4, r8
  40320a:	f000 8154 	beq.w	4034b6 <_malloc_r+0x4a6>
  40320e:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
  403212:	330f      	adds	r3, #15
  403214:	f423 6b7f 	bic.w	fp, r3, #4080	; 0xff0
  403218:	f02b 0b0f 	bic.w	fp, fp, #15
  40321c:	4659      	mov	r1, fp
  40321e:	4628      	mov	r0, r5
  403220:	f000 fc88 	bl	403b34 <_sbrk_r>
  403224:	1c41      	adds	r1, r0, #1
  403226:	4602      	mov	r2, r0
  403228:	f000 80fb 	beq.w	403422 <_malloc_r+0x412>
  40322c:	4582      	cmp	sl, r0
  40322e:	f200 80f6 	bhi.w	40341e <_malloc_r+0x40e>
  403232:	4b43      	ldr	r3, [pc, #268]	; (403340 <_malloc_r+0x330>)
  403234:	6819      	ldr	r1, [r3, #0]
  403236:	4459      	add	r1, fp
  403238:	6019      	str	r1, [r3, #0]
  40323a:	f000 814c 	beq.w	4034d6 <_malloc_r+0x4c6>
  40323e:	f8d9 0000 	ldr.w	r0, [r9]
  403242:	3001      	adds	r0, #1
  403244:	bf1b      	ittet	ne
  403246:	eba2 0a0a 	subne.w	sl, r2, sl
  40324a:	4451      	addne	r1, sl
  40324c:	f8c9 2000 	streq.w	r2, [r9]
  403250:	6019      	strne	r1, [r3, #0]
  403252:	f012 0107 	ands.w	r1, r2, #7
  403256:	f000 8114 	beq.w	403482 <_malloc_r+0x472>
  40325a:	f1c1 0008 	rsb	r0, r1, #8
  40325e:	f5c1 5180 	rsb	r1, r1, #4096	; 0x1000
  403262:	4402      	add	r2, r0
  403264:	3108      	adds	r1, #8
  403266:	eb02 090b 	add.w	r9, r2, fp
  40326a:	f3c9 090b 	ubfx	r9, r9, #0, #12
  40326e:	eba1 0909 	sub.w	r9, r1, r9
  403272:	4649      	mov	r1, r9
  403274:	4628      	mov	r0, r5
  403276:	9301      	str	r3, [sp, #4]
  403278:	9200      	str	r2, [sp, #0]
  40327a:	f000 fc5b 	bl	403b34 <_sbrk_r>
  40327e:	1c43      	adds	r3, r0, #1
  403280:	e89d 000c 	ldmia.w	sp, {r2, r3}
  403284:	f000 8142 	beq.w	40350c <_malloc_r+0x4fc>
  403288:	1a80      	subs	r0, r0, r2
  40328a:	4448      	add	r0, r9
  40328c:	f040 0001 	orr.w	r0, r0, #1
  403290:	6819      	ldr	r1, [r3, #0]
  403292:	42bc      	cmp	r4, r7
  403294:	4449      	add	r1, r9
  403296:	60ba      	str	r2, [r7, #8]
  403298:	6019      	str	r1, [r3, #0]
  40329a:	6050      	str	r0, [r2, #4]
  40329c:	d017      	beq.n	4032ce <_malloc_r+0x2be>
  40329e:	f1b8 0f0f 	cmp.w	r8, #15
  4032a2:	f240 80fa 	bls.w	40349a <_malloc_r+0x48a>
  4032a6:	f04f 0c05 	mov.w	ip, #5
  4032aa:	6862      	ldr	r2, [r4, #4]
  4032ac:	f1a8 000c 	sub.w	r0, r8, #12
  4032b0:	f020 0007 	bic.w	r0, r0, #7
  4032b4:	f002 0201 	and.w	r2, r2, #1
  4032b8:	eb04 0e00 	add.w	lr, r4, r0
  4032bc:	4302      	orrs	r2, r0
  4032be:	280f      	cmp	r0, #15
  4032c0:	6062      	str	r2, [r4, #4]
  4032c2:	f8ce c004 	str.w	ip, [lr, #4]
  4032c6:	f8ce c008 	str.w	ip, [lr, #8]
  4032ca:	f200 8116 	bhi.w	4034fa <_malloc_r+0x4ea>
  4032ce:	4b1d      	ldr	r3, [pc, #116]	; (403344 <_malloc_r+0x334>)
  4032d0:	68bc      	ldr	r4, [r7, #8]
  4032d2:	681a      	ldr	r2, [r3, #0]
  4032d4:	4291      	cmp	r1, r2
  4032d6:	bf88      	it	hi
  4032d8:	6019      	strhi	r1, [r3, #0]
  4032da:	4b1b      	ldr	r3, [pc, #108]	; (403348 <_malloc_r+0x338>)
  4032dc:	681a      	ldr	r2, [r3, #0]
  4032de:	4291      	cmp	r1, r2
  4032e0:	6862      	ldr	r2, [r4, #4]
  4032e2:	bf88      	it	hi
  4032e4:	6019      	strhi	r1, [r3, #0]
  4032e6:	f022 0203 	bic.w	r2, r2, #3
  4032ea:	4296      	cmp	r6, r2
  4032ec:	eba2 0306 	sub.w	r3, r2, r6
  4032f0:	d801      	bhi.n	4032f6 <_malloc_r+0x2e6>
  4032f2:	2b0f      	cmp	r3, #15
  4032f4:	dc04      	bgt.n	403300 <_malloc_r+0x2f0>
  4032f6:	4628      	mov	r0, r5
  4032f8:	f000 fa64 	bl	4037c4 <__malloc_unlock>
  4032fc:	2400      	movs	r4, #0
  4032fe:	e74d      	b.n	40319c <_malloc_r+0x18c>
  403300:	f046 0201 	orr.w	r2, r6, #1
  403304:	f043 0301 	orr.w	r3, r3, #1
  403308:	4426      	add	r6, r4
  40330a:	6062      	str	r2, [r4, #4]
  40330c:	4628      	mov	r0, r5
  40330e:	60be      	str	r6, [r7, #8]
  403310:	3408      	adds	r4, #8
  403312:	6073      	str	r3, [r6, #4]
  403314:	f000 fa56 	bl	4037c4 <__malloc_unlock>
  403318:	4620      	mov	r0, r4
  40331a:	b003      	add	sp, #12
  40331c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  403320:	2b14      	cmp	r3, #20
  403322:	d970      	bls.n	403406 <_malloc_r+0x3f6>
  403324:	2b54      	cmp	r3, #84	; 0x54
  403326:	f200 80a2 	bhi.w	40346e <_malloc_r+0x45e>
  40332a:	0b33      	lsrs	r3, r6, #12
  40332c:	f103 006f 	add.w	r0, r3, #111	; 0x6f
  403330:	f103 0e6e 	add.w	lr, r3, #110	; 0x6e
  403334:	00c1      	lsls	r1, r0, #3
  403336:	e68d      	b.n	403054 <_malloc_r+0x44>
  403338:	200006a4 	.word	0x200006a4
  40333c:	20000b7c 	.word	0x20000b7c
  403340:	20000b4c 	.word	0x20000b4c
  403344:	20000b74 	.word	0x20000b74
  403348:	20000b78 	.word	0x20000b78
  40334c:	200006ac 	.word	0x200006ac
  403350:	20000aac 	.word	0x20000aac
  403354:	0a5a      	lsrs	r2, r3, #9
  403356:	2a04      	cmp	r2, #4
  403358:	d95b      	bls.n	403412 <_malloc_r+0x402>
  40335a:	2a14      	cmp	r2, #20
  40335c:	f200 80ae 	bhi.w	4034bc <_malloc_r+0x4ac>
  403360:	f102 015c 	add.w	r1, r2, #92	; 0x5c
  403364:	00c9      	lsls	r1, r1, #3
  403366:	325b      	adds	r2, #91	; 0x5b
  403368:	eb07 0c01 	add.w	ip, r7, r1
  40336c:	5879      	ldr	r1, [r7, r1]
  40336e:	f1ac 0c08 	sub.w	ip, ip, #8
  403372:	458c      	cmp	ip, r1
  403374:	f000 8088 	beq.w	403488 <_malloc_r+0x478>
  403378:	684a      	ldr	r2, [r1, #4]
  40337a:	f022 0203 	bic.w	r2, r2, #3
  40337e:	4293      	cmp	r3, r2
  403380:	d273      	bcs.n	40346a <_malloc_r+0x45a>
  403382:	6889      	ldr	r1, [r1, #8]
  403384:	458c      	cmp	ip, r1
  403386:	d1f7      	bne.n	403378 <_malloc_r+0x368>
  403388:	f8dc 300c 	ldr.w	r3, [ip, #12]
  40338c:	687a      	ldr	r2, [r7, #4]
  40338e:	60e3      	str	r3, [r4, #12]
  403390:	f8c4 c008 	str.w	ip, [r4, #8]
  403394:	609c      	str	r4, [r3, #8]
  403396:	f8cc 400c 	str.w	r4, [ip, #12]
  40339a:	e69e      	b.n	4030da <_malloc_r+0xca>
  40339c:	f046 0c01 	orr.w	ip, r6, #1
  4033a0:	f042 0101 	orr.w	r1, r2, #1
  4033a4:	4426      	add	r6, r4
  4033a6:	f8c4 c004 	str.w	ip, [r4, #4]
  4033aa:	4628      	mov	r0, r5
  4033ac:	617e      	str	r6, [r7, #20]
  4033ae:	613e      	str	r6, [r7, #16]
  4033b0:	f8c6 e00c 	str.w	lr, [r6, #12]
  4033b4:	f8c6 e008 	str.w	lr, [r6, #8]
  4033b8:	6071      	str	r1, [r6, #4]
  4033ba:	50e2      	str	r2, [r4, r3]
  4033bc:	f000 fa02 	bl	4037c4 <__malloc_unlock>
  4033c0:	3408      	adds	r4, #8
  4033c2:	e6eb      	b.n	40319c <_malloc_r+0x18c>
  4033c4:	687a      	ldr	r2, [r7, #4]
  4033c6:	e688      	b.n	4030da <_malloc_r+0xca>
  4033c8:	f108 0801 	add.w	r8, r8, #1
  4033cc:	f018 0f03 	tst.w	r8, #3
  4033d0:	f10c 0c08 	add.w	ip, ip, #8
  4033d4:	f47f ae93 	bne.w	4030fe <_malloc_r+0xee>
  4033d8:	e02d      	b.n	403436 <_malloc_r+0x426>
  4033da:	68dc      	ldr	r4, [r3, #12]
  4033dc:	42a3      	cmp	r3, r4
  4033de:	bf08      	it	eq
  4033e0:	3002      	addeq	r0, #2
  4033e2:	f43f ae4b 	beq.w	40307c <_malloc_r+0x6c>
  4033e6:	e6c9      	b.n	40317c <_malloc_r+0x16c>
  4033e8:	461c      	mov	r4, r3
  4033ea:	4419      	add	r1, r3
  4033ec:	684a      	ldr	r2, [r1, #4]
  4033ee:	68db      	ldr	r3, [r3, #12]
  4033f0:	f854 6f08 	ldr.w	r6, [r4, #8]!
  4033f4:	f042 0201 	orr.w	r2, r2, #1
  4033f8:	604a      	str	r2, [r1, #4]
  4033fa:	4628      	mov	r0, r5
  4033fc:	60f3      	str	r3, [r6, #12]
  4033fe:	609e      	str	r6, [r3, #8]
  403400:	f000 f9e0 	bl	4037c4 <__malloc_unlock>
  403404:	e6ca      	b.n	40319c <_malloc_r+0x18c>
  403406:	f103 005c 	add.w	r0, r3, #92	; 0x5c
  40340a:	f103 0e5b 	add.w	lr, r3, #91	; 0x5b
  40340e:	00c1      	lsls	r1, r0, #3
  403410:	e620      	b.n	403054 <_malloc_r+0x44>
  403412:	099a      	lsrs	r2, r3, #6
  403414:	f102 0139 	add.w	r1, r2, #57	; 0x39
  403418:	00c9      	lsls	r1, r1, #3
  40341a:	3238      	adds	r2, #56	; 0x38
  40341c:	e7a4      	b.n	403368 <_malloc_r+0x358>
  40341e:	42bc      	cmp	r4, r7
  403420:	d054      	beq.n	4034cc <_malloc_r+0x4bc>
  403422:	68bc      	ldr	r4, [r7, #8]
  403424:	6862      	ldr	r2, [r4, #4]
  403426:	f022 0203 	bic.w	r2, r2, #3
  40342a:	e75e      	b.n	4032ea <_malloc_r+0x2da>
  40342c:	f859 3908 	ldr.w	r3, [r9], #-8
  403430:	4599      	cmp	r9, r3
  403432:	f040 8086 	bne.w	403542 <_malloc_r+0x532>
  403436:	f010 0f03 	tst.w	r0, #3
  40343a:	f100 30ff 	add.w	r0, r0, #4294967295
  40343e:	d1f5      	bne.n	40342c <_malloc_r+0x41c>
  403440:	687b      	ldr	r3, [r7, #4]
  403442:	ea23 0304 	bic.w	r3, r3, r4
  403446:	607b      	str	r3, [r7, #4]
  403448:	0064      	lsls	r4, r4, #1
  40344a:	429c      	cmp	r4, r3
  40344c:	f63f aec8 	bhi.w	4031e0 <_malloc_r+0x1d0>
  403450:	2c00      	cmp	r4, #0
  403452:	f43f aec5 	beq.w	4031e0 <_malloc_r+0x1d0>
  403456:	421c      	tst	r4, r3
  403458:	4640      	mov	r0, r8
  40345a:	f47f ae4c 	bne.w	4030f6 <_malloc_r+0xe6>
  40345e:	0064      	lsls	r4, r4, #1
  403460:	421c      	tst	r4, r3
  403462:	f100 0004 	add.w	r0, r0, #4
  403466:	d0fa      	beq.n	40345e <_malloc_r+0x44e>
  403468:	e645      	b.n	4030f6 <_malloc_r+0xe6>
  40346a:	468c      	mov	ip, r1
  40346c:	e78c      	b.n	403388 <_malloc_r+0x378>
  40346e:	f5b3 7faa 	cmp.w	r3, #340	; 0x154
  403472:	d815      	bhi.n	4034a0 <_malloc_r+0x490>
  403474:	0bf3      	lsrs	r3, r6, #15
  403476:	f103 0078 	add.w	r0, r3, #120	; 0x78
  40347a:	f103 0e77 	add.w	lr, r3, #119	; 0x77
  40347e:	00c1      	lsls	r1, r0, #3
  403480:	e5e8      	b.n	403054 <_malloc_r+0x44>
  403482:	f44f 5180 	mov.w	r1, #4096	; 0x1000
  403486:	e6ee      	b.n	403266 <_malloc_r+0x256>
  403488:	2101      	movs	r1, #1
  40348a:	687b      	ldr	r3, [r7, #4]
  40348c:	1092      	asrs	r2, r2, #2
  40348e:	fa01 f202 	lsl.w	r2, r1, r2
  403492:	431a      	orrs	r2, r3
  403494:	607a      	str	r2, [r7, #4]
  403496:	4663      	mov	r3, ip
  403498:	e779      	b.n	40338e <_malloc_r+0x37e>
  40349a:	2301      	movs	r3, #1
  40349c:	6053      	str	r3, [r2, #4]
  40349e:	e72a      	b.n	4032f6 <_malloc_r+0x2e6>
  4034a0:	f240 5254 	movw	r2, #1364	; 0x554
  4034a4:	4293      	cmp	r3, r2
  4034a6:	d822      	bhi.n	4034ee <_malloc_r+0x4de>
  4034a8:	0cb3      	lsrs	r3, r6, #18
  4034aa:	f103 007d 	add.w	r0, r3, #125	; 0x7d
  4034ae:	f103 0e7c 	add.w	lr, r3, #124	; 0x7c
  4034b2:	00c1      	lsls	r1, r0, #3
  4034b4:	e5ce      	b.n	403054 <_malloc_r+0x44>
  4034b6:	f103 0b10 	add.w	fp, r3, #16
  4034ba:	e6af      	b.n	40321c <_malloc_r+0x20c>
  4034bc:	2a54      	cmp	r2, #84	; 0x54
  4034be:	d829      	bhi.n	403514 <_malloc_r+0x504>
  4034c0:	0b1a      	lsrs	r2, r3, #12
  4034c2:	f102 016f 	add.w	r1, r2, #111	; 0x6f
  4034c6:	00c9      	lsls	r1, r1, #3
  4034c8:	326e      	adds	r2, #110	; 0x6e
  4034ca:	e74d      	b.n	403368 <_malloc_r+0x358>
  4034cc:	4b20      	ldr	r3, [pc, #128]	; (403550 <_malloc_r+0x540>)
  4034ce:	6819      	ldr	r1, [r3, #0]
  4034d0:	4459      	add	r1, fp
  4034d2:	6019      	str	r1, [r3, #0]
  4034d4:	e6b3      	b.n	40323e <_malloc_r+0x22e>
  4034d6:	f3ca 000b 	ubfx	r0, sl, #0, #12
  4034da:	2800      	cmp	r0, #0
  4034dc:	f47f aeaf 	bne.w	40323e <_malloc_r+0x22e>
  4034e0:	eb08 030b 	add.w	r3, r8, fp
  4034e4:	68ba      	ldr	r2, [r7, #8]
  4034e6:	f043 0301 	orr.w	r3, r3, #1
  4034ea:	6053      	str	r3, [r2, #4]
  4034ec:	e6ef      	b.n	4032ce <_malloc_r+0x2be>
  4034ee:	207f      	movs	r0, #127	; 0x7f
  4034f0:	f44f 717e 	mov.w	r1, #1016	; 0x3f8
  4034f4:	f04f 0e7e 	mov.w	lr, #126	; 0x7e
  4034f8:	e5ac      	b.n	403054 <_malloc_r+0x44>
  4034fa:	f104 0108 	add.w	r1, r4, #8
  4034fe:	4628      	mov	r0, r5
  403500:	9300      	str	r3, [sp, #0]
  403502:	f7ff fa75 	bl	4029f0 <_free_r>
  403506:	9b00      	ldr	r3, [sp, #0]
  403508:	6819      	ldr	r1, [r3, #0]
  40350a:	e6e0      	b.n	4032ce <_malloc_r+0x2be>
  40350c:	2001      	movs	r0, #1
  40350e:	f04f 0900 	mov.w	r9, #0
  403512:	e6bd      	b.n	403290 <_malloc_r+0x280>
  403514:	f5b2 7faa 	cmp.w	r2, #340	; 0x154
  403518:	d805      	bhi.n	403526 <_malloc_r+0x516>
  40351a:	0bda      	lsrs	r2, r3, #15
  40351c:	f102 0178 	add.w	r1, r2, #120	; 0x78
  403520:	00c9      	lsls	r1, r1, #3
  403522:	3277      	adds	r2, #119	; 0x77
  403524:	e720      	b.n	403368 <_malloc_r+0x358>
  403526:	f240 5154 	movw	r1, #1364	; 0x554
  40352a:	428a      	cmp	r2, r1
  40352c:	d805      	bhi.n	40353a <_malloc_r+0x52a>
  40352e:	0c9a      	lsrs	r2, r3, #18
  403530:	f102 017d 	add.w	r1, r2, #125	; 0x7d
  403534:	00c9      	lsls	r1, r1, #3
  403536:	327c      	adds	r2, #124	; 0x7c
  403538:	e716      	b.n	403368 <_malloc_r+0x358>
  40353a:	f44f 717e 	mov.w	r1, #1016	; 0x3f8
  40353e:	227e      	movs	r2, #126	; 0x7e
  403540:	e712      	b.n	403368 <_malloc_r+0x358>
  403542:	687b      	ldr	r3, [r7, #4]
  403544:	e780      	b.n	403448 <_malloc_r+0x438>
  403546:	08f0      	lsrs	r0, r6, #3
  403548:	f106 0308 	add.w	r3, r6, #8
  40354c:	e60e      	b.n	40316c <_malloc_r+0x15c>
  40354e:	bf00      	nop
  403550:	20000b4c 	.word	0x20000b4c

00403554 <__ascii_mbtowc>:
  403554:	b082      	sub	sp, #8
  403556:	b149      	cbz	r1, 40356c <__ascii_mbtowc+0x18>
  403558:	b15a      	cbz	r2, 403572 <__ascii_mbtowc+0x1e>
  40355a:	b16b      	cbz	r3, 403578 <__ascii_mbtowc+0x24>
  40355c:	7813      	ldrb	r3, [r2, #0]
  40355e:	600b      	str	r3, [r1, #0]
  403560:	7812      	ldrb	r2, [r2, #0]
  403562:	1c10      	adds	r0, r2, #0
  403564:	bf18      	it	ne
  403566:	2001      	movne	r0, #1
  403568:	b002      	add	sp, #8
  40356a:	4770      	bx	lr
  40356c:	a901      	add	r1, sp, #4
  40356e:	2a00      	cmp	r2, #0
  403570:	d1f3      	bne.n	40355a <__ascii_mbtowc+0x6>
  403572:	4610      	mov	r0, r2
  403574:	b002      	add	sp, #8
  403576:	4770      	bx	lr
  403578:	f06f 0001 	mvn.w	r0, #1
  40357c:	e7f4      	b.n	403568 <__ascii_mbtowc+0x14>
  40357e:	bf00      	nop

00403580 <memchr>:
  403580:	0783      	lsls	r3, r0, #30
  403582:	b470      	push	{r4, r5, r6}
  403584:	b2cd      	uxtb	r5, r1
  403586:	d03d      	beq.n	403604 <memchr+0x84>
  403588:	1e54      	subs	r4, r2, #1
  40358a:	b30a      	cbz	r2, 4035d0 <memchr+0x50>
  40358c:	7803      	ldrb	r3, [r0, #0]
  40358e:	42ab      	cmp	r3, r5
  403590:	d01f      	beq.n	4035d2 <memchr+0x52>
  403592:	1c43      	adds	r3, r0, #1
  403594:	e005      	b.n	4035a2 <memchr+0x22>
  403596:	f114 34ff 	adds.w	r4, r4, #4294967295
  40359a:	d319      	bcc.n	4035d0 <memchr+0x50>
  40359c:	7802      	ldrb	r2, [r0, #0]
  40359e:	42aa      	cmp	r2, r5
  4035a0:	d017      	beq.n	4035d2 <memchr+0x52>
  4035a2:	f013 0f03 	tst.w	r3, #3
  4035a6:	4618      	mov	r0, r3
  4035a8:	f103 0301 	add.w	r3, r3, #1
  4035ac:	d1f3      	bne.n	403596 <memchr+0x16>
  4035ae:	2c03      	cmp	r4, #3
  4035b0:	d811      	bhi.n	4035d6 <memchr+0x56>
  4035b2:	b34c      	cbz	r4, 403608 <memchr+0x88>
  4035b4:	7803      	ldrb	r3, [r0, #0]
  4035b6:	42ab      	cmp	r3, r5
  4035b8:	d00b      	beq.n	4035d2 <memchr+0x52>
  4035ba:	4404      	add	r4, r0
  4035bc:	1c43      	adds	r3, r0, #1
  4035be:	e002      	b.n	4035c6 <memchr+0x46>
  4035c0:	7802      	ldrb	r2, [r0, #0]
  4035c2:	42aa      	cmp	r2, r5
  4035c4:	d005      	beq.n	4035d2 <memchr+0x52>
  4035c6:	429c      	cmp	r4, r3
  4035c8:	4618      	mov	r0, r3
  4035ca:	f103 0301 	add.w	r3, r3, #1
  4035ce:	d1f7      	bne.n	4035c0 <memchr+0x40>
  4035d0:	2000      	movs	r0, #0
  4035d2:	bc70      	pop	{r4, r5, r6}
  4035d4:	4770      	bx	lr
  4035d6:	0209      	lsls	r1, r1, #8
  4035d8:	b289      	uxth	r1, r1
  4035da:	4329      	orrs	r1, r5
  4035dc:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
  4035e0:	6803      	ldr	r3, [r0, #0]
  4035e2:	4606      	mov	r6, r0
  4035e4:	404b      	eors	r3, r1
  4035e6:	f1a3 3201 	sub.w	r2, r3, #16843009	; 0x1010101
  4035ea:	ea22 0303 	bic.w	r3, r2, r3
  4035ee:	f013 3f80 	tst.w	r3, #2155905152	; 0x80808080
  4035f2:	f100 0004 	add.w	r0, r0, #4
  4035f6:	d103      	bne.n	403600 <memchr+0x80>
  4035f8:	3c04      	subs	r4, #4
  4035fa:	2c03      	cmp	r4, #3
  4035fc:	d8f0      	bhi.n	4035e0 <memchr+0x60>
  4035fe:	e7d8      	b.n	4035b2 <memchr+0x32>
  403600:	4630      	mov	r0, r6
  403602:	e7d7      	b.n	4035b4 <memchr+0x34>
  403604:	4614      	mov	r4, r2
  403606:	e7d2      	b.n	4035ae <memchr+0x2e>
  403608:	4620      	mov	r0, r4
  40360a:	e7e2      	b.n	4035d2 <memchr+0x52>

0040360c <memcpy>:
  40360c:	4684      	mov	ip, r0
  40360e:	ea41 0300 	orr.w	r3, r1, r0
  403612:	f013 0303 	ands.w	r3, r3, #3
  403616:	d149      	bne.n	4036ac <memcpy+0xa0>
  403618:	3a40      	subs	r2, #64	; 0x40
  40361a:	d323      	bcc.n	403664 <memcpy+0x58>
  40361c:	680b      	ldr	r3, [r1, #0]
  40361e:	6003      	str	r3, [r0, #0]
  403620:	684b      	ldr	r3, [r1, #4]
  403622:	6043      	str	r3, [r0, #4]
  403624:	688b      	ldr	r3, [r1, #8]
  403626:	6083      	str	r3, [r0, #8]
  403628:	68cb      	ldr	r3, [r1, #12]
  40362a:	60c3      	str	r3, [r0, #12]
  40362c:	690b      	ldr	r3, [r1, #16]
  40362e:	6103      	str	r3, [r0, #16]
  403630:	694b      	ldr	r3, [r1, #20]
  403632:	6143      	str	r3, [r0, #20]
  403634:	698b      	ldr	r3, [r1, #24]
  403636:	6183      	str	r3, [r0, #24]
  403638:	69cb      	ldr	r3, [r1, #28]
  40363a:	61c3      	str	r3, [r0, #28]
  40363c:	6a0b      	ldr	r3, [r1, #32]
  40363e:	6203      	str	r3, [r0, #32]
  403640:	6a4b      	ldr	r3, [r1, #36]	; 0x24
  403642:	6243      	str	r3, [r0, #36]	; 0x24
  403644:	6a8b      	ldr	r3, [r1, #40]	; 0x28
  403646:	6283      	str	r3, [r0, #40]	; 0x28
  403648:	6acb      	ldr	r3, [r1, #44]	; 0x2c
  40364a:	62c3      	str	r3, [r0, #44]	; 0x2c
  40364c:	6b0b      	ldr	r3, [r1, #48]	; 0x30
  40364e:	6303      	str	r3, [r0, #48]	; 0x30
  403650:	6b4b      	ldr	r3, [r1, #52]	; 0x34
  403652:	6343      	str	r3, [r0, #52]	; 0x34
  403654:	6b8b      	ldr	r3, [r1, #56]	; 0x38
  403656:	6383      	str	r3, [r0, #56]	; 0x38
  403658:	6bcb      	ldr	r3, [r1, #60]	; 0x3c
  40365a:	63c3      	str	r3, [r0, #60]	; 0x3c
  40365c:	3040      	adds	r0, #64	; 0x40
  40365e:	3140      	adds	r1, #64	; 0x40
  403660:	3a40      	subs	r2, #64	; 0x40
  403662:	d2db      	bcs.n	40361c <memcpy+0x10>
  403664:	3230      	adds	r2, #48	; 0x30
  403666:	d30b      	bcc.n	403680 <memcpy+0x74>
  403668:	680b      	ldr	r3, [r1, #0]
  40366a:	6003      	str	r3, [r0, #0]
  40366c:	684b      	ldr	r3, [r1, #4]
  40366e:	6043      	str	r3, [r0, #4]
  403670:	688b      	ldr	r3, [r1, #8]
  403672:	6083      	str	r3, [r0, #8]
  403674:	68cb      	ldr	r3, [r1, #12]
  403676:	60c3      	str	r3, [r0, #12]
  403678:	3010      	adds	r0, #16
  40367a:	3110      	adds	r1, #16
  40367c:	3a10      	subs	r2, #16
  40367e:	d2f3      	bcs.n	403668 <memcpy+0x5c>
  403680:	320c      	adds	r2, #12
  403682:	d305      	bcc.n	403690 <memcpy+0x84>
  403684:	f851 3b04 	ldr.w	r3, [r1], #4
  403688:	f840 3b04 	str.w	r3, [r0], #4
  40368c:	3a04      	subs	r2, #4
  40368e:	d2f9      	bcs.n	403684 <memcpy+0x78>
  403690:	3204      	adds	r2, #4
  403692:	d008      	beq.n	4036a6 <memcpy+0x9a>
  403694:	07d2      	lsls	r2, r2, #31
  403696:	bf1c      	itt	ne
  403698:	f811 3b01 	ldrbne.w	r3, [r1], #1
  40369c:	f800 3b01 	strbne.w	r3, [r0], #1
  4036a0:	d301      	bcc.n	4036a6 <memcpy+0x9a>
  4036a2:	880b      	ldrh	r3, [r1, #0]
  4036a4:	8003      	strh	r3, [r0, #0]
  4036a6:	4660      	mov	r0, ip
  4036a8:	4770      	bx	lr
  4036aa:	bf00      	nop
  4036ac:	2a08      	cmp	r2, #8
  4036ae:	d313      	bcc.n	4036d8 <memcpy+0xcc>
  4036b0:	078b      	lsls	r3, r1, #30
  4036b2:	d0b1      	beq.n	403618 <memcpy+0xc>
  4036b4:	f010 0303 	ands.w	r3, r0, #3
  4036b8:	d0ae      	beq.n	403618 <memcpy+0xc>
  4036ba:	f1c3 0304 	rsb	r3, r3, #4
  4036be:	1ad2      	subs	r2, r2, r3
  4036c0:	07db      	lsls	r3, r3, #31
  4036c2:	bf1c      	itt	ne
  4036c4:	f811 3b01 	ldrbne.w	r3, [r1], #1
  4036c8:	f800 3b01 	strbne.w	r3, [r0], #1
  4036cc:	d3a4      	bcc.n	403618 <memcpy+0xc>
  4036ce:	f831 3b02 	ldrh.w	r3, [r1], #2
  4036d2:	f820 3b02 	strh.w	r3, [r0], #2
  4036d6:	e79f      	b.n	403618 <memcpy+0xc>
  4036d8:	3a04      	subs	r2, #4
  4036da:	d3d9      	bcc.n	403690 <memcpy+0x84>
  4036dc:	3a01      	subs	r2, #1
  4036de:	f811 3b01 	ldrb.w	r3, [r1], #1
  4036e2:	f800 3b01 	strb.w	r3, [r0], #1
  4036e6:	d2f9      	bcs.n	4036dc <memcpy+0xd0>
  4036e8:	780b      	ldrb	r3, [r1, #0]
  4036ea:	7003      	strb	r3, [r0, #0]
  4036ec:	784b      	ldrb	r3, [r1, #1]
  4036ee:	7043      	strb	r3, [r0, #1]
  4036f0:	788b      	ldrb	r3, [r1, #2]
  4036f2:	7083      	strb	r3, [r0, #2]
  4036f4:	4660      	mov	r0, ip
  4036f6:	4770      	bx	lr

004036f8 <memmove>:
  4036f8:	4288      	cmp	r0, r1
  4036fa:	b5f0      	push	{r4, r5, r6, r7, lr}
  4036fc:	d90d      	bls.n	40371a <memmove+0x22>
  4036fe:	188b      	adds	r3, r1, r2
  403700:	4298      	cmp	r0, r3
  403702:	d20a      	bcs.n	40371a <memmove+0x22>
  403704:	1884      	adds	r4, r0, r2
  403706:	2a00      	cmp	r2, #0
  403708:	d051      	beq.n	4037ae <memmove+0xb6>
  40370a:	4622      	mov	r2, r4
  40370c:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
  403710:	4299      	cmp	r1, r3
  403712:	f802 4d01 	strb.w	r4, [r2, #-1]!
  403716:	d1f9      	bne.n	40370c <memmove+0x14>
  403718:	bdf0      	pop	{r4, r5, r6, r7, pc}
  40371a:	2a0f      	cmp	r2, #15
  40371c:	d948      	bls.n	4037b0 <memmove+0xb8>
  40371e:	ea41 0300 	orr.w	r3, r1, r0
  403722:	079b      	lsls	r3, r3, #30
  403724:	d146      	bne.n	4037b4 <memmove+0xbc>
  403726:	4615      	mov	r5, r2
  403728:	f100 0410 	add.w	r4, r0, #16
  40372c:	f101 0310 	add.w	r3, r1, #16
  403730:	f853 6c10 	ldr.w	r6, [r3, #-16]
  403734:	3d10      	subs	r5, #16
  403736:	f844 6c10 	str.w	r6, [r4, #-16]
  40373a:	f853 6c0c 	ldr.w	r6, [r3, #-12]
  40373e:	2d0f      	cmp	r5, #15
  403740:	f844 6c0c 	str.w	r6, [r4, #-12]
  403744:	f853 6c08 	ldr.w	r6, [r3, #-8]
  403748:	f104 0410 	add.w	r4, r4, #16
  40374c:	f844 6c18 	str.w	r6, [r4, #-24]
  403750:	f853 6c04 	ldr.w	r6, [r3, #-4]
  403754:	f103 0310 	add.w	r3, r3, #16
  403758:	f844 6c14 	str.w	r6, [r4, #-20]
  40375c:	d8e8      	bhi.n	403730 <memmove+0x38>
  40375e:	f1a2 0310 	sub.w	r3, r2, #16
  403762:	f023 030f 	bic.w	r3, r3, #15
  403766:	f002 0e0f 	and.w	lr, r2, #15
  40376a:	3310      	adds	r3, #16
  40376c:	f1be 0f03 	cmp.w	lr, #3
  403770:	4419      	add	r1, r3
  403772:	4403      	add	r3, r0
  403774:	d921      	bls.n	4037ba <memmove+0xc2>
  403776:	460e      	mov	r6, r1
  403778:	4674      	mov	r4, lr
  40377a:	1f1d      	subs	r5, r3, #4
  40377c:	f856 7b04 	ldr.w	r7, [r6], #4
  403780:	3c04      	subs	r4, #4
  403782:	2c03      	cmp	r4, #3
  403784:	f845 7f04 	str.w	r7, [r5, #4]!
  403788:	d8f8      	bhi.n	40377c <memmove+0x84>
  40378a:	f1ae 0404 	sub.w	r4, lr, #4
  40378e:	f024 0403 	bic.w	r4, r4, #3
  403792:	3404      	adds	r4, #4
  403794:	4421      	add	r1, r4
  403796:	4423      	add	r3, r4
  403798:	f002 0203 	and.w	r2, r2, #3
  40379c:	b162      	cbz	r2, 4037b8 <memmove+0xc0>
  40379e:	3b01      	subs	r3, #1
  4037a0:	440a      	add	r2, r1
  4037a2:	f811 4b01 	ldrb.w	r4, [r1], #1
  4037a6:	428a      	cmp	r2, r1
  4037a8:	f803 4f01 	strb.w	r4, [r3, #1]!
  4037ac:	d1f9      	bne.n	4037a2 <memmove+0xaa>
  4037ae:	bdf0      	pop	{r4, r5, r6, r7, pc}
  4037b0:	4603      	mov	r3, r0
  4037b2:	e7f3      	b.n	40379c <memmove+0xa4>
  4037b4:	4603      	mov	r3, r0
  4037b6:	e7f2      	b.n	40379e <memmove+0xa6>
  4037b8:	bdf0      	pop	{r4, r5, r6, r7, pc}
  4037ba:	4672      	mov	r2, lr
  4037bc:	e7ee      	b.n	40379c <memmove+0xa4>
  4037be:	bf00      	nop

004037c0 <__malloc_lock>:
  4037c0:	4770      	bx	lr
  4037c2:	bf00      	nop

004037c4 <__malloc_unlock>:
  4037c4:	4770      	bx	lr
  4037c6:	bf00      	nop

004037c8 <_realloc_r>:
  4037c8:	2900      	cmp	r1, #0
  4037ca:	f000 8094 	beq.w	4038f6 <_realloc_r+0x12e>
  4037ce:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  4037d2:	460c      	mov	r4, r1
  4037d4:	4615      	mov	r5, r2
  4037d6:	b083      	sub	sp, #12
  4037d8:	4680      	mov	r8, r0
  4037da:	f105 060b 	add.w	r6, r5, #11
  4037de:	f7ff ffef 	bl	4037c0 <__malloc_lock>
  4037e2:	f854 ec04 	ldr.w	lr, [r4, #-4]
  4037e6:	2e16      	cmp	r6, #22
  4037e8:	f02e 0703 	bic.w	r7, lr, #3
  4037ec:	f1a4 0908 	sub.w	r9, r4, #8
  4037f0:	d83c      	bhi.n	40386c <_realloc_r+0xa4>
  4037f2:	2210      	movs	r2, #16
  4037f4:	4616      	mov	r6, r2
  4037f6:	42b5      	cmp	r5, r6
  4037f8:	d83d      	bhi.n	403876 <_realloc_r+0xae>
  4037fa:	4297      	cmp	r7, r2
  4037fc:	da43      	bge.n	403886 <_realloc_r+0xbe>
  4037fe:	4bc6      	ldr	r3, [pc, #792]	; (403b18 <_realloc_r+0x350>)
  403800:	eb09 0007 	add.w	r0, r9, r7
  403804:	6899      	ldr	r1, [r3, #8]
  403806:	4288      	cmp	r0, r1
  403808:	f000 80c3 	beq.w	403992 <_realloc_r+0x1ca>
  40380c:	6843      	ldr	r3, [r0, #4]
  40380e:	f023 0101 	bic.w	r1, r3, #1
  403812:	4401      	add	r1, r0
  403814:	6849      	ldr	r1, [r1, #4]
  403816:	07c9      	lsls	r1, r1, #31
  403818:	d54d      	bpl.n	4038b6 <_realloc_r+0xee>
  40381a:	f01e 0f01 	tst.w	lr, #1
  40381e:	f000 809b 	beq.w	403958 <_realloc_r+0x190>
  403822:	4629      	mov	r1, r5
  403824:	4640      	mov	r0, r8
  403826:	f7ff fbf3 	bl	403010 <_malloc_r>
  40382a:	4605      	mov	r5, r0
  40382c:	2800      	cmp	r0, #0
  40382e:	d03b      	beq.n	4038a8 <_realloc_r+0xe0>
  403830:	f854 3c04 	ldr.w	r3, [r4, #-4]
  403834:	f1a0 0208 	sub.w	r2, r0, #8
  403838:	f023 0301 	bic.w	r3, r3, #1
  40383c:	444b      	add	r3, r9
  40383e:	429a      	cmp	r2, r3
  403840:	f000 812b 	beq.w	403a9a <_realloc_r+0x2d2>
  403844:	1f3a      	subs	r2, r7, #4
  403846:	2a24      	cmp	r2, #36	; 0x24
  403848:	f200 8118 	bhi.w	403a7c <_realloc_r+0x2b4>
  40384c:	2a13      	cmp	r2, #19
  40384e:	f200 80eb 	bhi.w	403a28 <_realloc_r+0x260>
  403852:	4603      	mov	r3, r0
  403854:	4622      	mov	r2, r4
  403856:	6811      	ldr	r1, [r2, #0]
  403858:	6019      	str	r1, [r3, #0]
  40385a:	6851      	ldr	r1, [r2, #4]
  40385c:	6059      	str	r1, [r3, #4]
  40385e:	6892      	ldr	r2, [r2, #8]
  403860:	609a      	str	r2, [r3, #8]
  403862:	4621      	mov	r1, r4
  403864:	4640      	mov	r0, r8
  403866:	f7ff f8c3 	bl	4029f0 <_free_r>
  40386a:	e01d      	b.n	4038a8 <_realloc_r+0xe0>
  40386c:	f026 0607 	bic.w	r6, r6, #7
  403870:	2e00      	cmp	r6, #0
  403872:	4632      	mov	r2, r6
  403874:	dabf      	bge.n	4037f6 <_realloc_r+0x2e>
  403876:	2500      	movs	r5, #0
  403878:	230c      	movs	r3, #12
  40387a:	4628      	mov	r0, r5
  40387c:	f8c8 3000 	str.w	r3, [r8]
  403880:	b003      	add	sp, #12
  403882:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  403886:	4625      	mov	r5, r4
  403888:	1bbb      	subs	r3, r7, r6
  40388a:	2b0f      	cmp	r3, #15
  40388c:	f8d9 2004 	ldr.w	r2, [r9, #4]
  403890:	d81d      	bhi.n	4038ce <_realloc_r+0x106>
  403892:	f002 0201 	and.w	r2, r2, #1
  403896:	433a      	orrs	r2, r7
  403898:	eb09 0107 	add.w	r1, r9, r7
  40389c:	f8c9 2004 	str.w	r2, [r9, #4]
  4038a0:	684b      	ldr	r3, [r1, #4]
  4038a2:	f043 0301 	orr.w	r3, r3, #1
  4038a6:	604b      	str	r3, [r1, #4]
  4038a8:	4640      	mov	r0, r8
  4038aa:	f7ff ff8b 	bl	4037c4 <__malloc_unlock>
  4038ae:	4628      	mov	r0, r5
  4038b0:	b003      	add	sp, #12
  4038b2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  4038b6:	f023 0303 	bic.w	r3, r3, #3
  4038ba:	18f9      	adds	r1, r7, r3
  4038bc:	4291      	cmp	r1, r2
  4038be:	db1d      	blt.n	4038fc <_realloc_r+0x134>
  4038c0:	68c3      	ldr	r3, [r0, #12]
  4038c2:	6882      	ldr	r2, [r0, #8]
  4038c4:	4625      	mov	r5, r4
  4038c6:	60d3      	str	r3, [r2, #12]
  4038c8:	460f      	mov	r7, r1
  4038ca:	609a      	str	r2, [r3, #8]
  4038cc:	e7dc      	b.n	403888 <_realloc_r+0xc0>
  4038ce:	f002 0201 	and.w	r2, r2, #1
  4038d2:	eb09 0106 	add.w	r1, r9, r6
  4038d6:	f043 0301 	orr.w	r3, r3, #1
  4038da:	4332      	orrs	r2, r6
  4038dc:	f8c9 2004 	str.w	r2, [r9, #4]
  4038e0:	444f      	add	r7, r9
  4038e2:	604b      	str	r3, [r1, #4]
  4038e4:	687b      	ldr	r3, [r7, #4]
  4038e6:	3108      	adds	r1, #8
  4038e8:	f043 0301 	orr.w	r3, r3, #1
  4038ec:	607b      	str	r3, [r7, #4]
  4038ee:	4640      	mov	r0, r8
  4038f0:	f7ff f87e 	bl	4029f0 <_free_r>
  4038f4:	e7d8      	b.n	4038a8 <_realloc_r+0xe0>
  4038f6:	4611      	mov	r1, r2
  4038f8:	f7ff bb8a 	b.w	403010 <_malloc_r>
  4038fc:	f01e 0f01 	tst.w	lr, #1
  403900:	d18f      	bne.n	403822 <_realloc_r+0x5a>
  403902:	f854 1c08 	ldr.w	r1, [r4, #-8]
  403906:	eba9 0a01 	sub.w	sl, r9, r1
  40390a:	f8da 1004 	ldr.w	r1, [sl, #4]
  40390e:	f021 0103 	bic.w	r1, r1, #3
  403912:	440b      	add	r3, r1
  403914:	443b      	add	r3, r7
  403916:	4293      	cmp	r3, r2
  403918:	db26      	blt.n	403968 <_realloc_r+0x1a0>
  40391a:	4655      	mov	r5, sl
  40391c:	68c1      	ldr	r1, [r0, #12]
  40391e:	6880      	ldr	r0, [r0, #8]
  403920:	1f3a      	subs	r2, r7, #4
  403922:	60c1      	str	r1, [r0, #12]
  403924:	6088      	str	r0, [r1, #8]
  403926:	f855 0f08 	ldr.w	r0, [r5, #8]!
  40392a:	f8da 100c 	ldr.w	r1, [sl, #12]
  40392e:	2a24      	cmp	r2, #36	; 0x24
  403930:	60c1      	str	r1, [r0, #12]
  403932:	6088      	str	r0, [r1, #8]
  403934:	d826      	bhi.n	403984 <_realloc_r+0x1bc>
  403936:	2a13      	cmp	r2, #19
  403938:	f240 8081 	bls.w	403a3e <_realloc_r+0x276>
  40393c:	6821      	ldr	r1, [r4, #0]
  40393e:	2a1b      	cmp	r2, #27
  403940:	f8ca 1008 	str.w	r1, [sl, #8]
  403944:	6861      	ldr	r1, [r4, #4]
  403946:	f8ca 100c 	str.w	r1, [sl, #12]
  40394a:	f200 80ad 	bhi.w	403aa8 <_realloc_r+0x2e0>
  40394e:	f104 0008 	add.w	r0, r4, #8
  403952:	f10a 0210 	add.w	r2, sl, #16
  403956:	e074      	b.n	403a42 <_realloc_r+0x27a>
  403958:	f854 3c08 	ldr.w	r3, [r4, #-8]
  40395c:	eba9 0a03 	sub.w	sl, r9, r3
  403960:	f8da 1004 	ldr.w	r1, [sl, #4]
  403964:	f021 0103 	bic.w	r1, r1, #3
  403968:	187b      	adds	r3, r7, r1
  40396a:	4293      	cmp	r3, r2
  40396c:	f6ff af59 	blt.w	403822 <_realloc_r+0x5a>
  403970:	4655      	mov	r5, sl
  403972:	f8da 100c 	ldr.w	r1, [sl, #12]
  403976:	f855 0f08 	ldr.w	r0, [r5, #8]!
  40397a:	1f3a      	subs	r2, r7, #4
  40397c:	2a24      	cmp	r2, #36	; 0x24
  40397e:	60c1      	str	r1, [r0, #12]
  403980:	6088      	str	r0, [r1, #8]
  403982:	d9d8      	bls.n	403936 <_realloc_r+0x16e>
  403984:	4621      	mov	r1, r4
  403986:	4628      	mov	r0, r5
  403988:	461f      	mov	r7, r3
  40398a:	46d1      	mov	r9, sl
  40398c:	f7ff feb4 	bl	4036f8 <memmove>
  403990:	e77a      	b.n	403888 <_realloc_r+0xc0>
  403992:	6841      	ldr	r1, [r0, #4]
  403994:	f106 0010 	add.w	r0, r6, #16
  403998:	f021 0b03 	bic.w	fp, r1, #3
  40399c:	44bb      	add	fp, r7
  40399e:	4583      	cmp	fp, r0
  4039a0:	da58      	bge.n	403a54 <_realloc_r+0x28c>
  4039a2:	f01e 0f01 	tst.w	lr, #1
  4039a6:	f47f af3c 	bne.w	403822 <_realloc_r+0x5a>
  4039aa:	f854 1c08 	ldr.w	r1, [r4, #-8]
  4039ae:	eba9 0a01 	sub.w	sl, r9, r1
  4039b2:	f8da 1004 	ldr.w	r1, [sl, #4]
  4039b6:	f021 0103 	bic.w	r1, r1, #3
  4039ba:	448b      	add	fp, r1
  4039bc:	4558      	cmp	r0, fp
  4039be:	dcd3      	bgt.n	403968 <_realloc_r+0x1a0>
  4039c0:	4655      	mov	r5, sl
  4039c2:	f8da 100c 	ldr.w	r1, [sl, #12]
  4039c6:	f855 0f08 	ldr.w	r0, [r5, #8]!
  4039ca:	1f3a      	subs	r2, r7, #4
  4039cc:	2a24      	cmp	r2, #36	; 0x24
  4039ce:	60c1      	str	r1, [r0, #12]
  4039d0:	6088      	str	r0, [r1, #8]
  4039d2:	f200 808d 	bhi.w	403af0 <_realloc_r+0x328>
  4039d6:	2a13      	cmp	r2, #19
  4039d8:	f240 8087 	bls.w	403aea <_realloc_r+0x322>
  4039dc:	6821      	ldr	r1, [r4, #0]
  4039de:	2a1b      	cmp	r2, #27
  4039e0:	f8ca 1008 	str.w	r1, [sl, #8]
  4039e4:	6861      	ldr	r1, [r4, #4]
  4039e6:	f8ca 100c 	str.w	r1, [sl, #12]
  4039ea:	f200 8088 	bhi.w	403afe <_realloc_r+0x336>
  4039ee:	f104 0108 	add.w	r1, r4, #8
  4039f2:	f10a 0210 	add.w	r2, sl, #16
  4039f6:	6808      	ldr	r0, [r1, #0]
  4039f8:	6010      	str	r0, [r2, #0]
  4039fa:	6848      	ldr	r0, [r1, #4]
  4039fc:	6050      	str	r0, [r2, #4]
  4039fe:	6889      	ldr	r1, [r1, #8]
  403a00:	6091      	str	r1, [r2, #8]
  403a02:	ebab 0206 	sub.w	r2, fp, r6
  403a06:	eb0a 0106 	add.w	r1, sl, r6
  403a0a:	f042 0201 	orr.w	r2, r2, #1
  403a0e:	6099      	str	r1, [r3, #8]
  403a10:	604a      	str	r2, [r1, #4]
  403a12:	f8da 3004 	ldr.w	r3, [sl, #4]
  403a16:	4640      	mov	r0, r8
  403a18:	f003 0301 	and.w	r3, r3, #1
  403a1c:	431e      	orrs	r6, r3
  403a1e:	f8ca 6004 	str.w	r6, [sl, #4]
  403a22:	f7ff fecf 	bl	4037c4 <__malloc_unlock>
  403a26:	e742      	b.n	4038ae <_realloc_r+0xe6>
  403a28:	6823      	ldr	r3, [r4, #0]
  403a2a:	2a1b      	cmp	r2, #27
  403a2c:	6003      	str	r3, [r0, #0]
  403a2e:	6863      	ldr	r3, [r4, #4]
  403a30:	6043      	str	r3, [r0, #4]
  403a32:	d827      	bhi.n	403a84 <_realloc_r+0x2bc>
  403a34:	f100 0308 	add.w	r3, r0, #8
  403a38:	f104 0208 	add.w	r2, r4, #8
  403a3c:	e70b      	b.n	403856 <_realloc_r+0x8e>
  403a3e:	4620      	mov	r0, r4
  403a40:	462a      	mov	r2, r5
  403a42:	6801      	ldr	r1, [r0, #0]
  403a44:	461f      	mov	r7, r3
  403a46:	6011      	str	r1, [r2, #0]
  403a48:	6841      	ldr	r1, [r0, #4]
  403a4a:	46d1      	mov	r9, sl
  403a4c:	6051      	str	r1, [r2, #4]
  403a4e:	6883      	ldr	r3, [r0, #8]
  403a50:	6093      	str	r3, [r2, #8]
  403a52:	e719      	b.n	403888 <_realloc_r+0xc0>
  403a54:	ebab 0b06 	sub.w	fp, fp, r6
  403a58:	eb09 0106 	add.w	r1, r9, r6
  403a5c:	f04b 0201 	orr.w	r2, fp, #1
  403a60:	6099      	str	r1, [r3, #8]
  403a62:	604a      	str	r2, [r1, #4]
  403a64:	f854 3c04 	ldr.w	r3, [r4, #-4]
  403a68:	4640      	mov	r0, r8
  403a6a:	f003 0301 	and.w	r3, r3, #1
  403a6e:	431e      	orrs	r6, r3
  403a70:	f844 6c04 	str.w	r6, [r4, #-4]
  403a74:	f7ff fea6 	bl	4037c4 <__malloc_unlock>
  403a78:	4625      	mov	r5, r4
  403a7a:	e718      	b.n	4038ae <_realloc_r+0xe6>
  403a7c:	4621      	mov	r1, r4
  403a7e:	f7ff fe3b 	bl	4036f8 <memmove>
  403a82:	e6ee      	b.n	403862 <_realloc_r+0x9a>
  403a84:	68a3      	ldr	r3, [r4, #8]
  403a86:	2a24      	cmp	r2, #36	; 0x24
  403a88:	6083      	str	r3, [r0, #8]
  403a8a:	68e3      	ldr	r3, [r4, #12]
  403a8c:	60c3      	str	r3, [r0, #12]
  403a8e:	d018      	beq.n	403ac2 <_realloc_r+0x2fa>
  403a90:	f100 0310 	add.w	r3, r0, #16
  403a94:	f104 0210 	add.w	r2, r4, #16
  403a98:	e6dd      	b.n	403856 <_realloc_r+0x8e>
  403a9a:	f850 3c04 	ldr.w	r3, [r0, #-4]
  403a9e:	4625      	mov	r5, r4
  403aa0:	f023 0303 	bic.w	r3, r3, #3
  403aa4:	441f      	add	r7, r3
  403aa6:	e6ef      	b.n	403888 <_realloc_r+0xc0>
  403aa8:	68a1      	ldr	r1, [r4, #8]
  403aaa:	2a24      	cmp	r2, #36	; 0x24
  403aac:	f8ca 1010 	str.w	r1, [sl, #16]
  403ab0:	68e1      	ldr	r1, [r4, #12]
  403ab2:	f8ca 1014 	str.w	r1, [sl, #20]
  403ab6:	d00d      	beq.n	403ad4 <_realloc_r+0x30c>
  403ab8:	f104 0010 	add.w	r0, r4, #16
  403abc:	f10a 0218 	add.w	r2, sl, #24
  403ac0:	e7bf      	b.n	403a42 <_realloc_r+0x27a>
  403ac2:	6922      	ldr	r2, [r4, #16]
  403ac4:	f100 0318 	add.w	r3, r0, #24
  403ac8:	6102      	str	r2, [r0, #16]
  403aca:	6961      	ldr	r1, [r4, #20]
  403acc:	f104 0218 	add.w	r2, r4, #24
  403ad0:	6141      	str	r1, [r0, #20]
  403ad2:	e6c0      	b.n	403856 <_realloc_r+0x8e>
  403ad4:	6922      	ldr	r2, [r4, #16]
  403ad6:	f104 0018 	add.w	r0, r4, #24
  403ada:	f8ca 2018 	str.w	r2, [sl, #24]
  403ade:	6961      	ldr	r1, [r4, #20]
  403ae0:	f10a 0220 	add.w	r2, sl, #32
  403ae4:	f8ca 101c 	str.w	r1, [sl, #28]
  403ae8:	e7ab      	b.n	403a42 <_realloc_r+0x27a>
  403aea:	4621      	mov	r1, r4
  403aec:	462a      	mov	r2, r5
  403aee:	e782      	b.n	4039f6 <_realloc_r+0x22e>
  403af0:	4621      	mov	r1, r4
  403af2:	4628      	mov	r0, r5
  403af4:	9301      	str	r3, [sp, #4]
  403af6:	f7ff fdff 	bl	4036f8 <memmove>
  403afa:	9b01      	ldr	r3, [sp, #4]
  403afc:	e781      	b.n	403a02 <_realloc_r+0x23a>
  403afe:	68a1      	ldr	r1, [r4, #8]
  403b00:	2a24      	cmp	r2, #36	; 0x24
  403b02:	f8ca 1010 	str.w	r1, [sl, #16]
  403b06:	68e1      	ldr	r1, [r4, #12]
  403b08:	f8ca 1014 	str.w	r1, [sl, #20]
  403b0c:	d006      	beq.n	403b1c <_realloc_r+0x354>
  403b0e:	f104 0110 	add.w	r1, r4, #16
  403b12:	f10a 0218 	add.w	r2, sl, #24
  403b16:	e76e      	b.n	4039f6 <_realloc_r+0x22e>
  403b18:	200006a4 	.word	0x200006a4
  403b1c:	6922      	ldr	r2, [r4, #16]
  403b1e:	f104 0118 	add.w	r1, r4, #24
  403b22:	f8ca 2018 	str.w	r2, [sl, #24]
  403b26:	6960      	ldr	r0, [r4, #20]
  403b28:	f10a 0220 	add.w	r2, sl, #32
  403b2c:	f8ca 001c 	str.w	r0, [sl, #28]
  403b30:	e761      	b.n	4039f6 <_realloc_r+0x22e>
  403b32:	bf00      	nop

00403b34 <_sbrk_r>:
  403b34:	b538      	push	{r3, r4, r5, lr}
  403b36:	2300      	movs	r3, #0
  403b38:	4c06      	ldr	r4, [pc, #24]	; (403b54 <_sbrk_r+0x20>)
  403b3a:	4605      	mov	r5, r0
  403b3c:	4608      	mov	r0, r1
  403b3e:	6023      	str	r3, [r4, #0]
  403b40:	f7fd f9be 	bl	400ec0 <_sbrk>
  403b44:	1c43      	adds	r3, r0, #1
  403b46:	d000      	beq.n	403b4a <_sbrk_r+0x16>
  403b48:	bd38      	pop	{r3, r4, r5, pc}
  403b4a:	6823      	ldr	r3, [r4, #0]
  403b4c:	2b00      	cmp	r3, #0
  403b4e:	d0fb      	beq.n	403b48 <_sbrk_r+0x14>
  403b50:	602b      	str	r3, [r5, #0]
  403b52:	bd38      	pop	{r3, r4, r5, pc}
  403b54:	20000b8c 	.word	0x20000b8c

00403b58 <__sread>:
  403b58:	b510      	push	{r4, lr}
  403b5a:	460c      	mov	r4, r1
  403b5c:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
  403b60:	f000 f9c6 	bl	403ef0 <_read_r>
  403b64:	2800      	cmp	r0, #0
  403b66:	db03      	blt.n	403b70 <__sread+0x18>
  403b68:	6d23      	ldr	r3, [r4, #80]	; 0x50
  403b6a:	4403      	add	r3, r0
  403b6c:	6523      	str	r3, [r4, #80]	; 0x50
  403b6e:	bd10      	pop	{r4, pc}
  403b70:	89a3      	ldrh	r3, [r4, #12]
  403b72:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
  403b76:	81a3      	strh	r3, [r4, #12]
  403b78:	bd10      	pop	{r4, pc}
  403b7a:	bf00      	nop

00403b7c <__swrite>:
  403b7c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  403b80:	460c      	mov	r4, r1
  403b82:	f9b1 100c 	ldrsh.w	r1, [r1, #12]
  403b86:	461f      	mov	r7, r3
  403b88:	05cb      	lsls	r3, r1, #23
  403b8a:	4616      	mov	r6, r2
  403b8c:	4605      	mov	r5, r0
  403b8e:	d507      	bpl.n	403ba0 <__swrite+0x24>
  403b90:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
  403b94:	2302      	movs	r3, #2
  403b96:	2200      	movs	r2, #0
  403b98:	f000 f994 	bl	403ec4 <_lseek_r>
  403b9c:	f9b4 100c 	ldrsh.w	r1, [r4, #12]
  403ba0:	f421 5180 	bic.w	r1, r1, #4096	; 0x1000
  403ba4:	81a1      	strh	r1, [r4, #12]
  403ba6:	463b      	mov	r3, r7
  403ba8:	4632      	mov	r2, r6
  403baa:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
  403bae:	4628      	mov	r0, r5
  403bb0:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
  403bb4:	f000 b8a2 	b.w	403cfc <_write_r>

00403bb8 <__sseek>:
  403bb8:	b510      	push	{r4, lr}
  403bba:	460c      	mov	r4, r1
  403bbc:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
  403bc0:	f000 f980 	bl	403ec4 <_lseek_r>
  403bc4:	89a3      	ldrh	r3, [r4, #12]
  403bc6:	1c42      	adds	r2, r0, #1
  403bc8:	bf0e      	itee	eq
  403bca:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
  403bce:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
  403bd2:	6520      	strne	r0, [r4, #80]	; 0x50
  403bd4:	81a3      	strh	r3, [r4, #12]
  403bd6:	bd10      	pop	{r4, pc}

00403bd8 <__sclose>:
  403bd8:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
  403bdc:	f000 b8fa 	b.w	403dd4 <_close_r>

00403be0 <__swbuf_r>:
  403be0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  403be2:	460d      	mov	r5, r1
  403be4:	4614      	mov	r4, r2
  403be6:	4606      	mov	r6, r0
  403be8:	b110      	cbz	r0, 403bf0 <__swbuf_r+0x10>
  403bea:	6b83      	ldr	r3, [r0, #56]	; 0x38
  403bec:	2b00      	cmp	r3, #0
  403bee:	d04b      	beq.n	403c88 <__swbuf_r+0xa8>
  403bf0:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
  403bf4:	69a3      	ldr	r3, [r4, #24]
  403bf6:	b291      	uxth	r1, r2
  403bf8:	0708      	lsls	r0, r1, #28
  403bfa:	60a3      	str	r3, [r4, #8]
  403bfc:	d539      	bpl.n	403c72 <__swbuf_r+0x92>
  403bfe:	6923      	ldr	r3, [r4, #16]
  403c00:	2b00      	cmp	r3, #0
  403c02:	d036      	beq.n	403c72 <__swbuf_r+0x92>
  403c04:	b2ed      	uxtb	r5, r5
  403c06:	0489      	lsls	r1, r1, #18
  403c08:	462f      	mov	r7, r5
  403c0a:	d515      	bpl.n	403c38 <__swbuf_r+0x58>
  403c0c:	6822      	ldr	r2, [r4, #0]
  403c0e:	6961      	ldr	r1, [r4, #20]
  403c10:	1ad3      	subs	r3, r2, r3
  403c12:	428b      	cmp	r3, r1
  403c14:	da1c      	bge.n	403c50 <__swbuf_r+0x70>
  403c16:	3301      	adds	r3, #1
  403c18:	68a1      	ldr	r1, [r4, #8]
  403c1a:	1c50      	adds	r0, r2, #1
  403c1c:	3901      	subs	r1, #1
  403c1e:	60a1      	str	r1, [r4, #8]
  403c20:	6020      	str	r0, [r4, #0]
  403c22:	7015      	strb	r5, [r2, #0]
  403c24:	6962      	ldr	r2, [r4, #20]
  403c26:	429a      	cmp	r2, r3
  403c28:	d01a      	beq.n	403c60 <__swbuf_r+0x80>
  403c2a:	89a3      	ldrh	r3, [r4, #12]
  403c2c:	07db      	lsls	r3, r3, #31
  403c2e:	d501      	bpl.n	403c34 <__swbuf_r+0x54>
  403c30:	2d0a      	cmp	r5, #10
  403c32:	d015      	beq.n	403c60 <__swbuf_r+0x80>
  403c34:	4638      	mov	r0, r7
  403c36:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  403c38:	6e61      	ldr	r1, [r4, #100]	; 0x64
  403c3a:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
  403c3e:	f421 5100 	bic.w	r1, r1, #8192	; 0x2000
  403c42:	81a2      	strh	r2, [r4, #12]
  403c44:	6822      	ldr	r2, [r4, #0]
  403c46:	6661      	str	r1, [r4, #100]	; 0x64
  403c48:	6961      	ldr	r1, [r4, #20]
  403c4a:	1ad3      	subs	r3, r2, r3
  403c4c:	428b      	cmp	r3, r1
  403c4e:	dbe2      	blt.n	403c16 <__swbuf_r+0x36>
  403c50:	4621      	mov	r1, r4
  403c52:	4630      	mov	r0, r6
  403c54:	f7fe fd66 	bl	402724 <_fflush_r>
  403c58:	b940      	cbnz	r0, 403c6c <__swbuf_r+0x8c>
  403c5a:	2301      	movs	r3, #1
  403c5c:	6822      	ldr	r2, [r4, #0]
  403c5e:	e7db      	b.n	403c18 <__swbuf_r+0x38>
  403c60:	4621      	mov	r1, r4
  403c62:	4630      	mov	r0, r6
  403c64:	f7fe fd5e 	bl	402724 <_fflush_r>
  403c68:	2800      	cmp	r0, #0
  403c6a:	d0e3      	beq.n	403c34 <__swbuf_r+0x54>
  403c6c:	f04f 37ff 	mov.w	r7, #4294967295
  403c70:	e7e0      	b.n	403c34 <__swbuf_r+0x54>
  403c72:	4621      	mov	r1, r4
  403c74:	4630      	mov	r0, r6
  403c76:	f7fe fc45 	bl	402504 <__swsetup_r>
  403c7a:	2800      	cmp	r0, #0
  403c7c:	d1f6      	bne.n	403c6c <__swbuf_r+0x8c>
  403c7e:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
  403c82:	6923      	ldr	r3, [r4, #16]
  403c84:	b291      	uxth	r1, r2
  403c86:	e7bd      	b.n	403c04 <__swbuf_r+0x24>
  403c88:	f7fe fde0 	bl	40284c <__sinit>
  403c8c:	e7b0      	b.n	403bf0 <__swbuf_r+0x10>
  403c8e:	bf00      	nop

00403c90 <_wcrtomb_r>:
  403c90:	b5f0      	push	{r4, r5, r6, r7, lr}
  403c92:	4606      	mov	r6, r0
  403c94:	b085      	sub	sp, #20
  403c96:	461f      	mov	r7, r3
  403c98:	b189      	cbz	r1, 403cbe <_wcrtomb_r+0x2e>
  403c9a:	4c10      	ldr	r4, [pc, #64]	; (403cdc <_wcrtomb_r+0x4c>)
  403c9c:	4d10      	ldr	r5, [pc, #64]	; (403ce0 <_wcrtomb_r+0x50>)
  403c9e:	6824      	ldr	r4, [r4, #0]
  403ca0:	6b64      	ldr	r4, [r4, #52]	; 0x34
  403ca2:	2c00      	cmp	r4, #0
  403ca4:	bf08      	it	eq
  403ca6:	462c      	moveq	r4, r5
  403ca8:	f8d4 40e0 	ldr.w	r4, [r4, #224]	; 0xe0
  403cac:	47a0      	blx	r4
  403cae:	1c43      	adds	r3, r0, #1
  403cb0:	d103      	bne.n	403cba <_wcrtomb_r+0x2a>
  403cb2:	2200      	movs	r2, #0
  403cb4:	238a      	movs	r3, #138	; 0x8a
  403cb6:	603a      	str	r2, [r7, #0]
  403cb8:	6033      	str	r3, [r6, #0]
  403cba:	b005      	add	sp, #20
  403cbc:	bdf0      	pop	{r4, r5, r6, r7, pc}
  403cbe:	460c      	mov	r4, r1
  403cc0:	4a06      	ldr	r2, [pc, #24]	; (403cdc <_wcrtomb_r+0x4c>)
  403cc2:	4d07      	ldr	r5, [pc, #28]	; (403ce0 <_wcrtomb_r+0x50>)
  403cc4:	6811      	ldr	r1, [r2, #0]
  403cc6:	4622      	mov	r2, r4
  403cc8:	6b4c      	ldr	r4, [r1, #52]	; 0x34
  403cca:	a901      	add	r1, sp, #4
  403ccc:	2c00      	cmp	r4, #0
  403cce:	bf08      	it	eq
  403cd0:	462c      	moveq	r4, r5
  403cd2:	f8d4 40e0 	ldr.w	r4, [r4, #224]	; 0xe0
  403cd6:	47a0      	blx	r4
  403cd8:	e7e9      	b.n	403cae <_wcrtomb_r+0x1e>
  403cda:	bf00      	nop
  403cdc:	20000108 	.word	0x20000108
  403ce0:	20000538 	.word	0x20000538

00403ce4 <__ascii_wctomb>:
  403ce4:	b119      	cbz	r1, 403cee <__ascii_wctomb+0xa>
  403ce6:	2aff      	cmp	r2, #255	; 0xff
  403ce8:	d803      	bhi.n	403cf2 <__ascii_wctomb+0xe>
  403cea:	700a      	strb	r2, [r1, #0]
  403cec:	2101      	movs	r1, #1
  403cee:	4608      	mov	r0, r1
  403cf0:	4770      	bx	lr
  403cf2:	238a      	movs	r3, #138	; 0x8a
  403cf4:	f04f 31ff 	mov.w	r1, #4294967295
  403cf8:	6003      	str	r3, [r0, #0]
  403cfa:	e7f8      	b.n	403cee <__ascii_wctomb+0xa>

00403cfc <_write_r>:
  403cfc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  403cfe:	460e      	mov	r6, r1
  403d00:	2500      	movs	r5, #0
  403d02:	4c08      	ldr	r4, [pc, #32]	; (403d24 <_write_r+0x28>)
  403d04:	4611      	mov	r1, r2
  403d06:	4607      	mov	r7, r0
  403d08:	461a      	mov	r2, r3
  403d0a:	4630      	mov	r0, r6
  403d0c:	6025      	str	r5, [r4, #0]
  403d0e:	f7fc fa43 	bl	400198 <_write>
  403d12:	1c43      	adds	r3, r0, #1
  403d14:	d000      	beq.n	403d18 <_write_r+0x1c>
  403d16:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  403d18:	6823      	ldr	r3, [r4, #0]
  403d1a:	2b00      	cmp	r3, #0
  403d1c:	d0fb      	beq.n	403d16 <_write_r+0x1a>
  403d1e:	603b      	str	r3, [r7, #0]
  403d20:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  403d22:	bf00      	nop
  403d24:	20000b8c 	.word	0x20000b8c

00403d28 <__register_exitproc>:
  403d28:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
  403d2c:	4c27      	ldr	r4, [pc, #156]	; (403dcc <__register_exitproc+0xa4>)
  403d2e:	4607      	mov	r7, r0
  403d30:	6826      	ldr	r6, [r4, #0]
  403d32:	4688      	mov	r8, r1
  403d34:	f8d6 4148 	ldr.w	r4, [r6, #328]	; 0x148
  403d38:	4692      	mov	sl, r2
  403d3a:	4699      	mov	r9, r3
  403d3c:	2c00      	cmp	r4, #0
  403d3e:	d03c      	beq.n	403dba <__register_exitproc+0x92>
  403d40:	6865      	ldr	r5, [r4, #4]
  403d42:	2d1f      	cmp	r5, #31
  403d44:	dc1a      	bgt.n	403d7c <__register_exitproc+0x54>
  403d46:	f105 0e01 	add.w	lr, r5, #1
  403d4a:	b17f      	cbz	r7, 403d6c <__register_exitproc+0x44>
  403d4c:	2001      	movs	r0, #1
  403d4e:	eb04 0385 	add.w	r3, r4, r5, lsl #2
  403d52:	f8c3 a088 	str.w	sl, [r3, #136]	; 0x88
  403d56:	f8d4 1188 	ldr.w	r1, [r4, #392]	; 0x188
  403d5a:	fa00 f205 	lsl.w	r2, r0, r5
  403d5e:	4311      	orrs	r1, r2
  403d60:	2f02      	cmp	r7, #2
  403d62:	f8c4 1188 	str.w	r1, [r4, #392]	; 0x188
  403d66:	f8c3 9108 	str.w	r9, [r3, #264]	; 0x108
  403d6a:	d020      	beq.n	403dae <__register_exitproc+0x86>
  403d6c:	3502      	adds	r5, #2
  403d6e:	f8c4 e004 	str.w	lr, [r4, #4]
  403d72:	2000      	movs	r0, #0
  403d74:	f844 8025 	str.w	r8, [r4, r5, lsl #2]
  403d78:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  403d7c:	4b14      	ldr	r3, [pc, #80]	; (403dd0 <__register_exitproc+0xa8>)
  403d7e:	b30b      	cbz	r3, 403dc4 <__register_exitproc+0x9c>
  403d80:	f44f 70c8 	mov.w	r0, #400	; 0x190
  403d84:	f7ff f93c 	bl	403000 <malloc>
  403d88:	4604      	mov	r4, r0
  403d8a:	b1d8      	cbz	r0, 403dc4 <__register_exitproc+0x9c>
  403d8c:	2000      	movs	r0, #0
  403d8e:	f8d6 3148 	ldr.w	r3, [r6, #328]	; 0x148
  403d92:	f04f 0e01 	mov.w	lr, #1
  403d96:	6060      	str	r0, [r4, #4]
  403d98:	6023      	str	r3, [r4, #0]
  403d9a:	4605      	mov	r5, r0
  403d9c:	f8c6 4148 	str.w	r4, [r6, #328]	; 0x148
  403da0:	f8c4 0188 	str.w	r0, [r4, #392]	; 0x188
  403da4:	f8c4 018c 	str.w	r0, [r4, #396]	; 0x18c
  403da8:	2f00      	cmp	r7, #0
  403daa:	d0df      	beq.n	403d6c <__register_exitproc+0x44>
  403dac:	e7ce      	b.n	403d4c <__register_exitproc+0x24>
  403dae:	f8d4 318c 	ldr.w	r3, [r4, #396]	; 0x18c
  403db2:	431a      	orrs	r2, r3
  403db4:	f8c4 218c 	str.w	r2, [r4, #396]	; 0x18c
  403db8:	e7d8      	b.n	403d6c <__register_exitproc+0x44>
  403dba:	f506 74a6 	add.w	r4, r6, #332	; 0x14c
  403dbe:	f8c6 4148 	str.w	r4, [r6, #328]	; 0x148
  403dc2:	e7bd      	b.n	403d40 <__register_exitproc+0x18>
  403dc4:	f04f 30ff 	mov.w	r0, #4294967295
  403dc8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  403dcc:	00404314 	.word	0x00404314
  403dd0:	00403001 	.word	0x00403001

00403dd4 <_close_r>:
  403dd4:	b538      	push	{r3, r4, r5, lr}
  403dd6:	2300      	movs	r3, #0
  403dd8:	4c06      	ldr	r4, [pc, #24]	; (403df4 <_close_r+0x20>)
  403dda:	4605      	mov	r5, r0
  403ddc:	4608      	mov	r0, r1
  403dde:	6023      	str	r3, [r4, #0]
  403de0:	f7fd f88a 	bl	400ef8 <_close>
  403de4:	1c43      	adds	r3, r0, #1
  403de6:	d000      	beq.n	403dea <_close_r+0x16>
  403de8:	bd38      	pop	{r3, r4, r5, pc}
  403dea:	6823      	ldr	r3, [r4, #0]
  403dec:	2b00      	cmp	r3, #0
  403dee:	d0fb      	beq.n	403de8 <_close_r+0x14>
  403df0:	602b      	str	r3, [r5, #0]
  403df2:	bd38      	pop	{r3, r4, r5, pc}
  403df4:	20000b8c 	.word	0x20000b8c

00403df8 <_fclose_r>:
  403df8:	b570      	push	{r4, r5, r6, lr}
  403dfa:	b139      	cbz	r1, 403e0c <_fclose_r+0x14>
  403dfc:	4605      	mov	r5, r0
  403dfe:	460c      	mov	r4, r1
  403e00:	b108      	cbz	r0, 403e06 <_fclose_r+0xe>
  403e02:	6b83      	ldr	r3, [r0, #56]	; 0x38
  403e04:	b383      	cbz	r3, 403e68 <_fclose_r+0x70>
  403e06:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  403e0a:	b913      	cbnz	r3, 403e12 <_fclose_r+0x1a>
  403e0c:	2600      	movs	r6, #0
  403e0e:	4630      	mov	r0, r6
  403e10:	bd70      	pop	{r4, r5, r6, pc}
  403e12:	4621      	mov	r1, r4
  403e14:	4628      	mov	r0, r5
  403e16:	f7fe fbe9 	bl	4025ec <__sflush_r>
  403e1a:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
  403e1c:	4606      	mov	r6, r0
  403e1e:	b133      	cbz	r3, 403e2e <_fclose_r+0x36>
  403e20:	69e1      	ldr	r1, [r4, #28]
  403e22:	4628      	mov	r0, r5
  403e24:	4798      	blx	r3
  403e26:	2800      	cmp	r0, #0
  403e28:	bfb8      	it	lt
  403e2a:	f04f 36ff 	movlt.w	r6, #4294967295
  403e2e:	89a3      	ldrh	r3, [r4, #12]
  403e30:	061b      	lsls	r3, r3, #24
  403e32:	d41c      	bmi.n	403e6e <_fclose_r+0x76>
  403e34:	6b21      	ldr	r1, [r4, #48]	; 0x30
  403e36:	b141      	cbz	r1, 403e4a <_fclose_r+0x52>
  403e38:	f104 0340 	add.w	r3, r4, #64	; 0x40
  403e3c:	4299      	cmp	r1, r3
  403e3e:	d002      	beq.n	403e46 <_fclose_r+0x4e>
  403e40:	4628      	mov	r0, r5
  403e42:	f7fe fdd5 	bl	4029f0 <_free_r>
  403e46:	2300      	movs	r3, #0
  403e48:	6323      	str	r3, [r4, #48]	; 0x30
  403e4a:	6c61      	ldr	r1, [r4, #68]	; 0x44
  403e4c:	b121      	cbz	r1, 403e58 <_fclose_r+0x60>
  403e4e:	4628      	mov	r0, r5
  403e50:	f7fe fdce 	bl	4029f0 <_free_r>
  403e54:	2300      	movs	r3, #0
  403e56:	6463      	str	r3, [r4, #68]	; 0x44
  403e58:	f7fe fcfe 	bl	402858 <__sfp_lock_acquire>
  403e5c:	2300      	movs	r3, #0
  403e5e:	81a3      	strh	r3, [r4, #12]
  403e60:	f7fe fcfc 	bl	40285c <__sfp_lock_release>
  403e64:	4630      	mov	r0, r6
  403e66:	bd70      	pop	{r4, r5, r6, pc}
  403e68:	f7fe fcf0 	bl	40284c <__sinit>
  403e6c:	e7cb      	b.n	403e06 <_fclose_r+0xe>
  403e6e:	6921      	ldr	r1, [r4, #16]
  403e70:	4628      	mov	r0, r5
  403e72:	f7fe fdbd 	bl	4029f0 <_free_r>
  403e76:	e7dd      	b.n	403e34 <_fclose_r+0x3c>

00403e78 <_fstat_r>:
  403e78:	b570      	push	{r4, r5, r6, lr}
  403e7a:	460d      	mov	r5, r1
  403e7c:	2300      	movs	r3, #0
  403e7e:	4c07      	ldr	r4, [pc, #28]	; (403e9c <_fstat_r+0x24>)
  403e80:	4606      	mov	r6, r0
  403e82:	4611      	mov	r1, r2
  403e84:	4628      	mov	r0, r5
  403e86:	6023      	str	r3, [r4, #0]
  403e88:	f7fd f839 	bl	400efe <_fstat>
  403e8c:	1c43      	adds	r3, r0, #1
  403e8e:	d000      	beq.n	403e92 <_fstat_r+0x1a>
  403e90:	bd70      	pop	{r4, r5, r6, pc}
  403e92:	6823      	ldr	r3, [r4, #0]
  403e94:	2b00      	cmp	r3, #0
  403e96:	d0fb      	beq.n	403e90 <_fstat_r+0x18>
  403e98:	6033      	str	r3, [r6, #0]
  403e9a:	bd70      	pop	{r4, r5, r6, pc}
  403e9c:	20000b8c 	.word	0x20000b8c

00403ea0 <_isatty_r>:
  403ea0:	b538      	push	{r3, r4, r5, lr}
  403ea2:	2300      	movs	r3, #0
  403ea4:	4c06      	ldr	r4, [pc, #24]	; (403ec0 <_isatty_r+0x20>)
  403ea6:	4605      	mov	r5, r0
  403ea8:	4608      	mov	r0, r1
  403eaa:	6023      	str	r3, [r4, #0]
  403eac:	f7fd f82c 	bl	400f08 <_isatty>
  403eb0:	1c43      	adds	r3, r0, #1
  403eb2:	d000      	beq.n	403eb6 <_isatty_r+0x16>
  403eb4:	bd38      	pop	{r3, r4, r5, pc}
  403eb6:	6823      	ldr	r3, [r4, #0]
  403eb8:	2b00      	cmp	r3, #0
  403eba:	d0fb      	beq.n	403eb4 <_isatty_r+0x14>
  403ebc:	602b      	str	r3, [r5, #0]
  403ebe:	bd38      	pop	{r3, r4, r5, pc}
  403ec0:	20000b8c 	.word	0x20000b8c

00403ec4 <_lseek_r>:
  403ec4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  403ec6:	460e      	mov	r6, r1
  403ec8:	2500      	movs	r5, #0
  403eca:	4c08      	ldr	r4, [pc, #32]	; (403eec <_lseek_r+0x28>)
  403ecc:	4611      	mov	r1, r2
  403ece:	4607      	mov	r7, r0
  403ed0:	461a      	mov	r2, r3
  403ed2:	4630      	mov	r0, r6
  403ed4:	6025      	str	r5, [r4, #0]
  403ed6:	f7fd f819 	bl	400f0c <_lseek>
  403eda:	1c43      	adds	r3, r0, #1
  403edc:	d000      	beq.n	403ee0 <_lseek_r+0x1c>
  403ede:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  403ee0:	6823      	ldr	r3, [r4, #0]
  403ee2:	2b00      	cmp	r3, #0
  403ee4:	d0fb      	beq.n	403ede <_lseek_r+0x1a>
  403ee6:	603b      	str	r3, [r7, #0]
  403ee8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  403eea:	bf00      	nop
  403eec:	20000b8c 	.word	0x20000b8c

00403ef0 <_read_r>:
  403ef0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  403ef2:	460e      	mov	r6, r1
  403ef4:	2500      	movs	r5, #0
  403ef6:	4c08      	ldr	r4, [pc, #32]	; (403f18 <_read_r+0x28>)
  403ef8:	4611      	mov	r1, r2
  403efa:	4607      	mov	r7, r0
  403efc:	461a      	mov	r2, r3
  403efe:	4630      	mov	r0, r6
  403f00:	6025      	str	r5, [r4, #0]
  403f02:	f7fc f915 	bl	400130 <_read>
  403f06:	1c43      	adds	r3, r0, #1
  403f08:	d000      	beq.n	403f0c <_read_r+0x1c>
  403f0a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  403f0c:	6823      	ldr	r3, [r4, #0]
  403f0e:	2b00      	cmp	r3, #0
  403f10:	d0fb      	beq.n	403f0a <_read_r+0x1a>
  403f12:	603b      	str	r3, [r7, #0]
  403f14:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  403f16:	bf00      	nop
  403f18:	20000b8c 	.word	0x20000b8c

00403f1c <__aeabi_uldivmod>:
  403f1c:	b953      	cbnz	r3, 403f34 <__aeabi_uldivmod+0x18>
  403f1e:	b94a      	cbnz	r2, 403f34 <__aeabi_uldivmod+0x18>
  403f20:	2900      	cmp	r1, #0
  403f22:	bf08      	it	eq
  403f24:	2800      	cmpeq	r0, #0
  403f26:	bf1c      	itt	ne
  403f28:	f04f 31ff 	movne.w	r1, #4294967295
  403f2c:	f04f 30ff 	movne.w	r0, #4294967295
  403f30:	f000 b97a 	b.w	404228 <__aeabi_idiv0>
  403f34:	f1ad 0c08 	sub.w	ip, sp, #8
  403f38:	e96d ce04 	strd	ip, lr, [sp, #-16]!
  403f3c:	f000 f806 	bl	403f4c <__udivmoddi4>
  403f40:	f8dd e004 	ldr.w	lr, [sp, #4]
  403f44:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
  403f48:	b004      	add	sp, #16
  403f4a:	4770      	bx	lr

00403f4c <__udivmoddi4>:
  403f4c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
  403f50:	468c      	mov	ip, r1
  403f52:	460e      	mov	r6, r1
  403f54:	4604      	mov	r4, r0
  403f56:	9d08      	ldr	r5, [sp, #32]
  403f58:	2b00      	cmp	r3, #0
  403f5a:	d150      	bne.n	403ffe <__udivmoddi4+0xb2>
  403f5c:	428a      	cmp	r2, r1
  403f5e:	4617      	mov	r7, r2
  403f60:	d96c      	bls.n	40403c <__udivmoddi4+0xf0>
  403f62:	fab2 fe82 	clz	lr, r2
  403f66:	f1be 0f00 	cmp.w	lr, #0
  403f6a:	d00b      	beq.n	403f84 <__udivmoddi4+0x38>
  403f6c:	f1ce 0c20 	rsb	ip, lr, #32
  403f70:	fa01 f60e 	lsl.w	r6, r1, lr
  403f74:	fa20 fc0c 	lsr.w	ip, r0, ip
  403f78:	fa02 f70e 	lsl.w	r7, r2, lr
  403f7c:	ea4c 0c06 	orr.w	ip, ip, r6
  403f80:	fa00 f40e 	lsl.w	r4, r0, lr
  403f84:	0c3a      	lsrs	r2, r7, #16
  403f86:	fbbc f9f2 	udiv	r9, ip, r2
  403f8a:	b2bb      	uxth	r3, r7
  403f8c:	fb02 cc19 	mls	ip, r2, r9, ip
  403f90:	fb09 fa03 	mul.w	sl, r9, r3
  403f94:	ea4f 4814 	mov.w	r8, r4, lsr #16
  403f98:	ea48 460c 	orr.w	r6, r8, ip, lsl #16
  403f9c:	45b2      	cmp	sl, r6
  403f9e:	d90a      	bls.n	403fb6 <__udivmoddi4+0x6a>
  403fa0:	19f6      	adds	r6, r6, r7
  403fa2:	f109 31ff 	add.w	r1, r9, #4294967295
  403fa6:	f080 8125 	bcs.w	4041f4 <__udivmoddi4+0x2a8>
  403faa:	45b2      	cmp	sl, r6
  403fac:	f240 8122 	bls.w	4041f4 <__udivmoddi4+0x2a8>
  403fb0:	f1a9 0902 	sub.w	r9, r9, #2
  403fb4:	443e      	add	r6, r7
  403fb6:	eba6 060a 	sub.w	r6, r6, sl
  403fba:	fbb6 f0f2 	udiv	r0, r6, r2
  403fbe:	fb02 6610 	mls	r6, r2, r0, r6
  403fc2:	fb00 f303 	mul.w	r3, r0, r3
  403fc6:	b2a4      	uxth	r4, r4
  403fc8:	ea44 4406 	orr.w	r4, r4, r6, lsl #16
  403fcc:	42a3      	cmp	r3, r4
  403fce:	d909      	bls.n	403fe4 <__udivmoddi4+0x98>
  403fd0:	19e4      	adds	r4, r4, r7
  403fd2:	f100 32ff 	add.w	r2, r0, #4294967295
  403fd6:	f080 810b 	bcs.w	4041f0 <__udivmoddi4+0x2a4>
  403fda:	42a3      	cmp	r3, r4
  403fdc:	f240 8108 	bls.w	4041f0 <__udivmoddi4+0x2a4>
  403fe0:	3802      	subs	r0, #2
  403fe2:	443c      	add	r4, r7
  403fe4:	2100      	movs	r1, #0
  403fe6:	1ae4      	subs	r4, r4, r3
  403fe8:	ea40 4009 	orr.w	r0, r0, r9, lsl #16
  403fec:	2d00      	cmp	r5, #0
  403fee:	d062      	beq.n	4040b6 <__udivmoddi4+0x16a>
  403ff0:	2300      	movs	r3, #0
  403ff2:	fa24 f40e 	lsr.w	r4, r4, lr
  403ff6:	602c      	str	r4, [r5, #0]
  403ff8:	606b      	str	r3, [r5, #4]
  403ffa:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  403ffe:	428b      	cmp	r3, r1
  404000:	d907      	bls.n	404012 <__udivmoddi4+0xc6>
  404002:	2d00      	cmp	r5, #0
  404004:	d055      	beq.n	4040b2 <__udivmoddi4+0x166>
  404006:	2100      	movs	r1, #0
  404008:	e885 0041 	stmia.w	r5, {r0, r6}
  40400c:	4608      	mov	r0, r1
  40400e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  404012:	fab3 f183 	clz	r1, r3
  404016:	2900      	cmp	r1, #0
  404018:	f040 808f 	bne.w	40413a <__udivmoddi4+0x1ee>
  40401c:	42b3      	cmp	r3, r6
  40401e:	d302      	bcc.n	404026 <__udivmoddi4+0xda>
  404020:	4282      	cmp	r2, r0
  404022:	f200 80fc 	bhi.w	40421e <__udivmoddi4+0x2d2>
  404026:	1a84      	subs	r4, r0, r2
  404028:	eb66 0603 	sbc.w	r6, r6, r3
  40402c:	2001      	movs	r0, #1
  40402e:	46b4      	mov	ip, r6
  404030:	2d00      	cmp	r5, #0
  404032:	d040      	beq.n	4040b6 <__udivmoddi4+0x16a>
  404034:	e885 1010 	stmia.w	r5, {r4, ip}
  404038:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  40403c:	b912      	cbnz	r2, 404044 <__udivmoddi4+0xf8>
  40403e:	2701      	movs	r7, #1
  404040:	fbb7 f7f2 	udiv	r7, r7, r2
  404044:	fab7 fe87 	clz	lr, r7
  404048:	f1be 0f00 	cmp.w	lr, #0
  40404c:	d135      	bne.n	4040ba <__udivmoddi4+0x16e>
  40404e:	2101      	movs	r1, #1
  404050:	1bf6      	subs	r6, r6, r7
  404052:	ea4f 4c17 	mov.w	ip, r7, lsr #16
  404056:	fa1f f887 	uxth.w	r8, r7
  40405a:	fbb6 f2fc 	udiv	r2, r6, ip
  40405e:	fb0c 6612 	mls	r6, ip, r2, r6
  404062:	fb08 f002 	mul.w	r0, r8, r2
  404066:	0c23      	lsrs	r3, r4, #16
  404068:	ea43 4606 	orr.w	r6, r3, r6, lsl #16
  40406c:	42b0      	cmp	r0, r6
  40406e:	d907      	bls.n	404080 <__udivmoddi4+0x134>
  404070:	19f6      	adds	r6, r6, r7
  404072:	f102 33ff 	add.w	r3, r2, #4294967295
  404076:	d202      	bcs.n	40407e <__udivmoddi4+0x132>
  404078:	42b0      	cmp	r0, r6
  40407a:	f200 80d2 	bhi.w	404222 <__udivmoddi4+0x2d6>
  40407e:	461a      	mov	r2, r3
  404080:	1a36      	subs	r6, r6, r0
  404082:	fbb6 f0fc 	udiv	r0, r6, ip
  404086:	fb0c 6610 	mls	r6, ip, r0, r6
  40408a:	fb08 f800 	mul.w	r8, r8, r0
  40408e:	b2a3      	uxth	r3, r4
  404090:	ea43 4406 	orr.w	r4, r3, r6, lsl #16
  404094:	45a0      	cmp	r8, r4
  404096:	d907      	bls.n	4040a8 <__udivmoddi4+0x15c>
  404098:	19e4      	adds	r4, r4, r7
  40409a:	f100 33ff 	add.w	r3, r0, #4294967295
  40409e:	d202      	bcs.n	4040a6 <__udivmoddi4+0x15a>
  4040a0:	45a0      	cmp	r8, r4
  4040a2:	f200 80b9 	bhi.w	404218 <__udivmoddi4+0x2cc>
  4040a6:	4618      	mov	r0, r3
  4040a8:	eba4 0408 	sub.w	r4, r4, r8
  4040ac:	ea40 4002 	orr.w	r0, r0, r2, lsl #16
  4040b0:	e79c      	b.n	403fec <__udivmoddi4+0xa0>
  4040b2:	4629      	mov	r1, r5
  4040b4:	4628      	mov	r0, r5
  4040b6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  4040ba:	fa07 f70e 	lsl.w	r7, r7, lr
  4040be:	f1ce 0320 	rsb	r3, lr, #32
  4040c2:	fa26 f203 	lsr.w	r2, r6, r3
  4040c6:	ea4f 4c17 	mov.w	ip, r7, lsr #16
  4040ca:	fbb2 f1fc 	udiv	r1, r2, ip
  4040ce:	fa1f f887 	uxth.w	r8, r7
  4040d2:	fb0c 2211 	mls	r2, ip, r1, r2
  4040d6:	fa06 f60e 	lsl.w	r6, r6, lr
  4040da:	fa20 f303 	lsr.w	r3, r0, r3
  4040de:	fb01 f908 	mul.w	r9, r1, r8
  4040e2:	4333      	orrs	r3, r6
  4040e4:	0c1e      	lsrs	r6, r3, #16
  4040e6:	ea46 4602 	orr.w	r6, r6, r2, lsl #16
  4040ea:	45b1      	cmp	r9, r6
  4040ec:	fa00 f40e 	lsl.w	r4, r0, lr
  4040f0:	d909      	bls.n	404106 <__udivmoddi4+0x1ba>
  4040f2:	19f6      	adds	r6, r6, r7
  4040f4:	f101 32ff 	add.w	r2, r1, #4294967295
  4040f8:	f080 808c 	bcs.w	404214 <__udivmoddi4+0x2c8>
  4040fc:	45b1      	cmp	r9, r6
  4040fe:	f240 8089 	bls.w	404214 <__udivmoddi4+0x2c8>
  404102:	3902      	subs	r1, #2
  404104:	443e      	add	r6, r7
  404106:	eba6 0609 	sub.w	r6, r6, r9
  40410a:	fbb6 f0fc 	udiv	r0, r6, ip
  40410e:	fb0c 6210 	mls	r2, ip, r0, r6
  404112:	fb00 f908 	mul.w	r9, r0, r8
  404116:	b29e      	uxth	r6, r3
  404118:	ea46 4602 	orr.w	r6, r6, r2, lsl #16
  40411c:	45b1      	cmp	r9, r6
  40411e:	d907      	bls.n	404130 <__udivmoddi4+0x1e4>
  404120:	19f6      	adds	r6, r6, r7
  404122:	f100 33ff 	add.w	r3, r0, #4294967295
  404126:	d271      	bcs.n	40420c <__udivmoddi4+0x2c0>
  404128:	45b1      	cmp	r9, r6
  40412a:	d96f      	bls.n	40420c <__udivmoddi4+0x2c0>
  40412c:	3802      	subs	r0, #2
  40412e:	443e      	add	r6, r7
  404130:	eba6 0609 	sub.w	r6, r6, r9
  404134:	ea40 4101 	orr.w	r1, r0, r1, lsl #16
  404138:	e78f      	b.n	40405a <__udivmoddi4+0x10e>
  40413a:	f1c1 0720 	rsb	r7, r1, #32
  40413e:	fa22 f807 	lsr.w	r8, r2, r7
  404142:	408b      	lsls	r3, r1
  404144:	ea48 0303 	orr.w	r3, r8, r3
  404148:	fa26 f407 	lsr.w	r4, r6, r7
  40414c:	ea4f 4e13 	mov.w	lr, r3, lsr #16
  404150:	fbb4 f9fe 	udiv	r9, r4, lr
  404154:	fa1f fc83 	uxth.w	ip, r3
  404158:	fb0e 4419 	mls	r4, lr, r9, r4
  40415c:	408e      	lsls	r6, r1
  40415e:	fa20 f807 	lsr.w	r8, r0, r7
  404162:	fb09 fa0c 	mul.w	sl, r9, ip
  404166:	ea48 0806 	orr.w	r8, r8, r6
  40416a:	ea4f 4618 	mov.w	r6, r8, lsr #16
  40416e:	ea46 4404 	orr.w	r4, r6, r4, lsl #16
  404172:	45a2      	cmp	sl, r4
  404174:	fa02 f201 	lsl.w	r2, r2, r1
  404178:	fa00 f601 	lsl.w	r6, r0, r1
  40417c:	d908      	bls.n	404190 <__udivmoddi4+0x244>
  40417e:	18e4      	adds	r4, r4, r3
  404180:	f109 30ff 	add.w	r0, r9, #4294967295
  404184:	d244      	bcs.n	404210 <__udivmoddi4+0x2c4>
  404186:	45a2      	cmp	sl, r4
  404188:	d942      	bls.n	404210 <__udivmoddi4+0x2c4>
  40418a:	f1a9 0902 	sub.w	r9, r9, #2
  40418e:	441c      	add	r4, r3
  404190:	eba4 040a 	sub.w	r4, r4, sl
  404194:	fbb4 f0fe 	udiv	r0, r4, lr
  404198:	fb0e 4410 	mls	r4, lr, r0, r4
  40419c:	fb00 fc0c 	mul.w	ip, r0, ip
  4041a0:	fa1f f888 	uxth.w	r8, r8
  4041a4:	ea48 4404 	orr.w	r4, r8, r4, lsl #16
  4041a8:	45a4      	cmp	ip, r4
  4041aa:	d907      	bls.n	4041bc <__udivmoddi4+0x270>
  4041ac:	18e4      	adds	r4, r4, r3
  4041ae:	f100 3eff 	add.w	lr, r0, #4294967295
  4041b2:	d229      	bcs.n	404208 <__udivmoddi4+0x2bc>
  4041b4:	45a4      	cmp	ip, r4
  4041b6:	d927      	bls.n	404208 <__udivmoddi4+0x2bc>
  4041b8:	3802      	subs	r0, #2
  4041ba:	441c      	add	r4, r3
  4041bc:	ea40 4009 	orr.w	r0, r0, r9, lsl #16
  4041c0:	fba0 8902 	umull	r8, r9, r0, r2
  4041c4:	eba4 0c0c 	sub.w	ip, r4, ip
  4041c8:	45cc      	cmp	ip, r9
  4041ca:	46c2      	mov	sl, r8
  4041cc:	46ce      	mov	lr, r9
  4041ce:	d315      	bcc.n	4041fc <__udivmoddi4+0x2b0>
  4041d0:	d012      	beq.n	4041f8 <__udivmoddi4+0x2ac>
  4041d2:	b155      	cbz	r5, 4041ea <__udivmoddi4+0x29e>
  4041d4:	ebb6 030a 	subs.w	r3, r6, sl
  4041d8:	eb6c 060e 	sbc.w	r6, ip, lr
  4041dc:	fa06 f707 	lsl.w	r7, r6, r7
  4041e0:	40cb      	lsrs	r3, r1
  4041e2:	431f      	orrs	r7, r3
  4041e4:	40ce      	lsrs	r6, r1
  4041e6:	602f      	str	r7, [r5, #0]
  4041e8:	606e      	str	r6, [r5, #4]
  4041ea:	2100      	movs	r1, #0
  4041ec:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  4041f0:	4610      	mov	r0, r2
  4041f2:	e6f7      	b.n	403fe4 <__udivmoddi4+0x98>
  4041f4:	4689      	mov	r9, r1
  4041f6:	e6de      	b.n	403fb6 <__udivmoddi4+0x6a>
  4041f8:	4546      	cmp	r6, r8
  4041fa:	d2ea      	bcs.n	4041d2 <__udivmoddi4+0x286>
  4041fc:	ebb8 0a02 	subs.w	sl, r8, r2
  404200:	eb69 0e03 	sbc.w	lr, r9, r3
  404204:	3801      	subs	r0, #1
  404206:	e7e4      	b.n	4041d2 <__udivmoddi4+0x286>
  404208:	4670      	mov	r0, lr
  40420a:	e7d7      	b.n	4041bc <__udivmoddi4+0x270>
  40420c:	4618      	mov	r0, r3
  40420e:	e78f      	b.n	404130 <__udivmoddi4+0x1e4>
  404210:	4681      	mov	r9, r0
  404212:	e7bd      	b.n	404190 <__udivmoddi4+0x244>
  404214:	4611      	mov	r1, r2
  404216:	e776      	b.n	404106 <__udivmoddi4+0x1ba>
  404218:	3802      	subs	r0, #2
  40421a:	443c      	add	r4, r7
  40421c:	e744      	b.n	4040a8 <__udivmoddi4+0x15c>
  40421e:	4608      	mov	r0, r1
  404220:	e706      	b.n	404030 <__udivmoddi4+0xe4>
  404222:	3a02      	subs	r2, #2
  404224:	443e      	add	r6, r7
  404226:	e72b      	b.n	404080 <__udivmoddi4+0x134>

00404228 <__aeabi_idiv0>:
  404228:	4770      	bx	lr
  40422a:	bf00      	nop
  40422c:	63696e49 	.word	0x63696e49
  404230:	646e6169 	.word	0x646e6169
  404234:	654c206f 	.word	0x654c206f
  404238:	72757469 	.word	0x72757469
  40423c:	6f642061 	.word	0x6f642061
  404240:	6e655320 	.word	0x6e655320
  404244:	0d726f73 	.word	0x0d726f73
  404248:	0000000a 	.word	0x0000000a
  40424c:	204d5750 	.word	0x204d5750
  404250:	646e6148 	.word	0x646e6148
  404254:	3a72656c 	.word	0x3a72656c
  404258:	0d752520 	.word	0x0d752520
  40425c:	0000000a 	.word	0x0000000a
  404260:	61766f4e 	.word	0x61766f4e
  404264:	69654c20 	.word	0x69654c20
  404268:	61727574 	.word	0x61727574
  40426c:	00000a0d 	.word	0x00000a0d
  404270:	79747544 	.word	0x79747544
  404274:	75746120 	.word	0x75746120
  404278:	203a6c61 	.word	0x203a6c61
  40427c:	0a077525 	.word	0x0a077525
  404280:	0000000d 	.word	0x0000000d
  404284:	6f746f62 	.word	0x6f746f62
  404288:	63207365 	.word	0x63207365
  40428c:	69666e6f 	.word	0x69666e6f
  404290:	61727567 	.word	0x61727567
  404294:	0a736f64 	.word	0x0a736f64
  404298:	0000000d 	.word	0x0000000d
  40429c:	69726550 	.word	0x69726550
  4042a0:	203a646f 	.word	0x203a646f
  4042a4:	2f207525 	.word	0x2f207525
  4042a8:	7564202f 	.word	0x7564202f
  4042ac:	203a7974 	.word	0x203a7974
  4042b0:	2f207525 	.word	0x2f207525
  4042b4:	6176202f 	.word	0x6176202f
  4042b8:	3a65756c 	.word	0x3a65756c
  4042bc:	0d752520 	.word	0x0d752520
  4042c0:	0000000a 	.word	0x0000000a
  4042c4:	204d5750 	.word	0x204d5750
  4042c8:	61647055 	.word	0x61647055
  4042cc:	203a6574 	.word	0x203a6574
  4042d0:	2f207525 	.word	0x2f207525
  4042d4:	6625202f 	.word	0x6625202f
  4042d8:	00000a0d 	.word	0x00000a0d
  4042dc:	63696e49 	.word	0x63696e49
  4042e0:	696c6169 	.word	0x696c6169
  4042e4:	676e697a 	.word	0x676e697a
  4042e8:	61654220 	.word	0x61654220
  4042ec:	6142206d 	.word	0x6142206d
  4042f0:	0a0d6c6c 	.word	0x0a0d6c6c
  4042f4:	00000000 	.word	0x00000000
  4042f8:	204d5750 	.word	0x204d5750
  4042fc:	666e6f63 	.word	0x666e6f63
  404300:	72756769 	.word	0x72756769
  404304:	63206465 	.word	0x63206465
  404308:	6c706d6f 	.word	0x6c706d6f
  40430c:	0d657465 	.word	0x0d657465
  404310:	0000000a 	.word	0x0000000a

00404314 <_global_impure_ptr>:
  404314:	20000110 33323130 37363534 42413938     ... 0123456789AB
  404324:	46454443 00000000 33323130 37363534     CDEF....01234567
  404334:	62613938 66656463 00000000 6c756e28     89abcdef....(nul
  404344:	0000296c                                l)..

00404348 <blanks.7202>:
  404348:	20202020 20202020 20202020 20202020                     

00404358 <zeroes.7203>:
  404358:	30303030 30303030 30303030 30303030     0000000000000000
  404368:	00000043 49534f50 00000058 0000002e     C...POSIX.......

00404378 <_ctype_>:
  404378:	20202000 20202020 28282020 20282828     .         ((((( 
  404388:	20202020 20202020 20202020 20202020                     
  404398:	10108820 10101010 10101010 10101010      ...............
  4043a8:	04040410 04040404 10040404 10101010     ................
  4043b8:	41411010 41414141 01010101 01010101     ..AAAAAA........
  4043c8:	01010101 01010101 01010101 10101010     ................
  4043d8:	42421010 42424242 02020202 02020202     ..BBBBBB........
  4043e8:	02020202 02020202 02020202 10101010     ................
  4043f8:	00000020 00000000 00000000 00000000      ...............
	...

0040447c <_init>:
  40447c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  40447e:	bf00      	nop
  404480:	bcf8      	pop	{r3, r4, r5, r6, r7}
  404482:	bc08      	pop	{r3}
  404484:	469e      	mov	lr, r3
  404486:	4770      	bx	lr

00404488 <__init_array_start>:
  404488:	004025cd 	.word	0x004025cd

0040448c <__frame_dummy_init_array_entry>:
  40448c:	004000e9                                ..@.

00404490 <_fini>:
  404490:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  404492:	bf00      	nop
  404494:	bcf8      	pop	{r3, r4, r5, r6, r7}
  404496:	bc08      	pop	{r3}
  404498:	469e      	mov	lr, r3
  40449a:	4770      	bx	lr

0040449c <__fini_array_start>:
  40449c:	004000c5 	.word	0x004000c5

Disassembly of section .relocate:

20000000 <portable_delay_cycles>:
RAMFUNC
void portable_delay_cycles(unsigned long n)
{
	UNUSED(n);

	__asm (
20000000:	f3bf 8f5f 	dmb	sy
20000004:	3801      	subs	r0, #1
20000006:	d1fb      	bne.n	20000000 <portable_delay_cycles>
20000008:	4770      	bx	lr
	...

2000000c <SystemInit>:
	EFC->EEFC_FMR = EEFC_FMR_FWS(3);
2000000c:	f44f 7240 	mov.w	r2, #768	; 0x300
20000010:	4b1f      	ldr	r3, [pc, #124]	; (20000090 <SystemInit+0x84>)
20000012:	601a      	str	r2, [r3, #0]
	if (!(PMC->CKGR_MOR & CKGR_MOR_MOSCSEL)) {
20000014:	f5a3 63c0 	sub.w	r3, r3, #1536	; 0x600
20000018:	6a1b      	ldr	r3, [r3, #32]
2000001a:	f013 7f80 	tst.w	r3, #16777216	; 0x1000000
2000001e:	d107      	bne.n	20000030 <SystemInit+0x24>
		PMC->CKGR_MOR = SYS_CKGR_MOR_KEY_VALUE | SYS_BOARD_OSCOUNT | 
20000020:	4a1c      	ldr	r2, [pc, #112]	; (20000094 <SystemInit+0x88>)
20000022:	4b1d      	ldr	r3, [pc, #116]	; (20000098 <SystemInit+0x8c>)
20000024:	621a      	str	r2, [r3, #32]
		while (!(PMC->PMC_SR & PMC_SR_MOSCXTS)) {
20000026:	461a      	mov	r2, r3
20000028:	6e93      	ldr	r3, [r2, #104]	; 0x68
2000002a:	f013 0f01 	tst.w	r3, #1
2000002e:	d0fb      	beq.n	20000028 <SystemInit+0x1c>
	PMC->CKGR_MOR = SYS_CKGR_MOR_KEY_VALUE | SYS_BOARD_OSCOUNT | 
20000030:	4a1a      	ldr	r2, [pc, #104]	; (2000009c <SystemInit+0x90>)
20000032:	4b19      	ldr	r3, [pc, #100]	; (20000098 <SystemInit+0x8c>)
20000034:	621a      	str	r2, [r3, #32]
	while (!(PMC->PMC_SR & PMC_SR_MOSCSELS)) {
20000036:	461a      	mov	r2, r3
20000038:	6e93      	ldr	r3, [r2, #104]	; 0x68
2000003a:	f413 3f80 	tst.w	r3, #65536	; 0x10000
2000003e:	d0fb      	beq.n	20000038 <SystemInit+0x2c>
	PMC->PMC_MCKR = (PMC->PMC_MCKR & ~(uint32_t)PMC_MCKR_CSS_Msk) | 
20000040:	4a15      	ldr	r2, [pc, #84]	; (20000098 <SystemInit+0x8c>)
20000042:	6b13      	ldr	r3, [r2, #48]	; 0x30
20000044:	f023 0303 	bic.w	r3, r3, #3
20000048:	f043 0301 	orr.w	r3, r3, #1
2000004c:	6313      	str	r3, [r2, #48]	; 0x30
	while (!(PMC->PMC_SR & PMC_SR_MCKRDY)) {
2000004e:	6e93      	ldr	r3, [r2, #104]	; 0x68
20000050:	f013 0f08 	tst.w	r3, #8
20000054:	d0fb      	beq.n	2000004e <SystemInit+0x42>
	PMC->CKGR_PLLAR = SYS_BOARD_PLLAR;
20000056:	4a12      	ldr	r2, [pc, #72]	; (200000a0 <SystemInit+0x94>)
20000058:	4b0f      	ldr	r3, [pc, #60]	; (20000098 <SystemInit+0x8c>)
2000005a:	629a      	str	r2, [r3, #40]	; 0x28
	while (!(PMC->PMC_SR & PMC_SR_LOCKA)) {
2000005c:	461a      	mov	r2, r3
2000005e:	6e93      	ldr	r3, [r2, #104]	; 0x68
20000060:	f013 0f02 	tst.w	r3, #2
20000064:	d0fb      	beq.n	2000005e <SystemInit+0x52>
	PMC->PMC_MCKR = (SYS_BOARD_MCKR & ~PMC_MCKR_CSS_Msk) | 
20000066:	2211      	movs	r2, #17
20000068:	4b0b      	ldr	r3, [pc, #44]	; (20000098 <SystemInit+0x8c>)
2000006a:	631a      	str	r2, [r3, #48]	; 0x30
	while (!(PMC->PMC_SR & PMC_SR_MCKRDY)) {
2000006c:	461a      	mov	r2, r3
2000006e:	6e93      	ldr	r3, [r2, #104]	; 0x68
20000070:	f013 0f08 	tst.w	r3, #8
20000074:	d0fb      	beq.n	2000006e <SystemInit+0x62>
	PMC->PMC_MCKR = SYS_BOARD_MCKR;
20000076:	2212      	movs	r2, #18
20000078:	4b07      	ldr	r3, [pc, #28]	; (20000098 <SystemInit+0x8c>)
2000007a:	631a      	str	r2, [r3, #48]	; 0x30
	while (!(PMC->PMC_SR & PMC_SR_MCKRDY)) {
2000007c:	461a      	mov	r2, r3
2000007e:	6e93      	ldr	r3, [r2, #104]	; 0x68
20000080:	f013 0f08 	tst.w	r3, #8
20000084:	d0fb      	beq.n	2000007e <SystemInit+0x72>
	SystemCoreClock = CHIP_FREQ_CPU_MAX;
20000086:	4a07      	ldr	r2, [pc, #28]	; (200000a4 <SystemInit+0x98>)
20000088:	4b07      	ldr	r3, [pc, #28]	; (200000a8 <SystemInit+0x9c>)
2000008a:	601a      	str	r2, [r3, #0]
2000008c:	4770      	bx	lr
2000008e:	bf00      	nop
20000090:	400e0a00 	.word	0x400e0a00
20000094:	00370809 	.word	0x00370809
20000098:	400e0400 	.word	0x400e0400
2000009c:	01370809 	.word	0x01370809
200000a0:	20073f01 	.word	0x20073f01
200000a4:	02dc6c00 	.word	0x02dc6c00
200000a8:	20000104 	.word	0x20000104

200000ac <system_init_flash>:
__no_inline
RAMFUNC
void system_init_flash(uint32_t ul_clk)
{
	/* Set FWS for embedded Flash access according to operating frequency */
	if (ul_clk < CHIP_FREQ_FWS_0) {
200000ac:	4b0c      	ldr	r3, [pc, #48]	; (200000e0 <system_init_flash+0x34>)
200000ae:	4298      	cmp	r0, r3
200000b0:	d90c      	bls.n	200000cc <system_init_flash+0x20>
		EFC->EEFC_FMR = EEFC_FMR_FWS(0);
	} else if (ul_clk < CHIP_FREQ_FWS_1) {
200000b2:	4b0c      	ldr	r3, [pc, #48]	; (200000e4 <system_init_flash+0x38>)
200000b4:	4298      	cmp	r0, r3
200000b6:	d90d      	bls.n	200000d4 <system_init_flash+0x28>
		EFC->EEFC_FMR = EEFC_FMR_FWS(1);
	} else if (ul_clk < CHIP_FREQ_FWS_2) {
200000b8:	4b0b      	ldr	r3, [pc, #44]	; (200000e8 <system_init_flash+0x3c>)
200000ba:	4298      	cmp	r0, r3
		EFC->EEFC_FMR = EEFC_FMR_FWS(2);
200000bc:	bf94      	ite	ls
200000be:	f44f 7200 	movls.w	r2, #512	; 0x200
	} else {
		EFC->EEFC_FMR = EEFC_FMR_FWS(3);
200000c2:	f44f 7240 	movhi.w	r2, #768	; 0x300
200000c6:	4b09      	ldr	r3, [pc, #36]	; (200000ec <system_init_flash+0x40>)
200000c8:	601a      	str	r2, [r3, #0]
200000ca:	4770      	bx	lr
		EFC->EEFC_FMR = EEFC_FMR_FWS(0);
200000cc:	2200      	movs	r2, #0
200000ce:	4b07      	ldr	r3, [pc, #28]	; (200000ec <system_init_flash+0x40>)
200000d0:	601a      	str	r2, [r3, #0]
200000d2:	4770      	bx	lr
		EFC->EEFC_FMR = EEFC_FMR_FWS(1);
200000d4:	f44f 7280 	mov.w	r2, #256	; 0x100
200000d8:	4b04      	ldr	r3, [pc, #16]	; (200000ec <system_init_flash+0x40>)
200000da:	601a      	str	r2, [r3, #0]
200000dc:	4770      	bx	lr
200000de:	bf00      	nop
200000e0:	01406f3f 	.word	0x01406f3f
200000e4:	01e847ff 	.word	0x01e847ff
200000e8:	02dc6bff 	.word	0x02dc6bff
200000ec:	400e0a00 	.word	0x400e0a00

200000f0 <btn_duty>:
200000f0:	00000001                                ....

200000f4 <usart_options.8098>:
200000f4:	0001c200 000000c0 00000800 00000000     ................

20000104 <SystemCoreClock>:
20000104:	003d0900                                ..=.

20000108 <_impure_ptr>:
20000108:	20000110 00000000                       ... ....

20000110 <impure_data>:
20000110:	00000000 200003fc 20000464 200004cc     ....... d.. ... 
	...
200001b8:	00000001 00000000 abcd330e e66d1234     .........3..4.m.
200001c8:	0005deec 0000000b 00000000 00000000     ................
	...

20000538 <__global_locale>:
20000538:	00000043 00000000 00000000 00000000     C...............
	...
20000558:	00000043 00000000 00000000 00000000     C...............
	...
20000578:	00000043 00000000 00000000 00000000     C...............
	...
20000598:	00000043 00000000 00000000 00000000     C...............
	...
200005b8:	00000043 00000000 00000000 00000000     C...............
	...
200005d8:	00000043 00000000 00000000 00000000     C...............
	...
200005f8:	00000043 00000000 00000000 00000000     C...............
	...
20000618:	00403ce5 00403555 00000000 00404378     .<@.U5@.....xC@.
20000628:	00404374 004042f4 004042f4 004042f4     tC@..B@..B@..B@.
20000638:	004042f4 004042f4 004042f4 004042f4     .B@..B@..B@..B@.
20000648:	004042f4 004042f4 ffffffff ffffffff     .B@..B@.........
20000658:	ffffffff 0000ffff 53410001 00494943     ..........ASCII.
	...
20000680:	53410000 00494943 00000000 00000000     ..ASCII.........
	...

200006a4 <__malloc_av_>:
	...
200006ac:	200006a4 200006a4 200006ac 200006ac     ... ... ... ... 
200006bc:	200006b4 200006b4 200006bc 200006bc     ... ... ... ... 
200006cc:	200006c4 200006c4 200006cc 200006cc     ... ... ... ... 
200006dc:	200006d4 200006d4 200006dc 200006dc     ... ... ... ... 
200006ec:	200006e4 200006e4 200006ec 200006ec     ... ... ... ... 
200006fc:	200006f4 200006f4 200006fc 200006fc     ... ... ... ... 
2000070c:	20000704 20000704 2000070c 2000070c     ... ... ... ... 
2000071c:	20000714 20000714 2000071c 2000071c     ... ... ... ... 
2000072c:	20000724 20000724 2000072c 2000072c     $.. $.. ,.. ,.. 
2000073c:	20000734 20000734 2000073c 2000073c     4.. 4.. <.. <.. 
2000074c:	20000744 20000744 2000074c 2000074c     D.. D.. L.. L.. 
2000075c:	20000754 20000754 2000075c 2000075c     T.. T.. \.. \.. 
2000076c:	20000764 20000764 2000076c 2000076c     d.. d.. l.. l.. 
2000077c:	20000774 20000774 2000077c 2000077c     t.. t.. |.. |.. 
2000078c:	20000784 20000784 2000078c 2000078c     ... ... ... ... 
2000079c:	20000794 20000794 2000079c 2000079c     ... ... ... ... 
200007ac:	200007a4 200007a4 200007ac 200007ac     ... ... ... ... 
200007bc:	200007b4 200007b4 200007bc 200007bc     ... ... ... ... 
200007cc:	200007c4 200007c4 200007cc 200007cc     ... ... ... ... 
200007dc:	200007d4 200007d4 200007dc 200007dc     ... ... ... ... 
200007ec:	200007e4 200007e4 200007ec 200007ec     ... ... ... ... 
200007fc:	200007f4 200007f4 200007fc 200007fc     ... ... ... ... 
2000080c:	20000804 20000804 2000080c 2000080c     ... ... ... ... 
2000081c:	20000814 20000814 2000081c 2000081c     ... ... ... ... 
2000082c:	20000824 20000824 2000082c 2000082c     $.. $.. ,.. ,.. 
2000083c:	20000834 20000834 2000083c 2000083c     4.. 4.. <.. <.. 
2000084c:	20000844 20000844 2000084c 2000084c     D.. D.. L.. L.. 
2000085c:	20000854 20000854 2000085c 2000085c     T.. T.. \.. \.. 
2000086c:	20000864 20000864 2000086c 2000086c     d.. d.. l.. l.. 
2000087c:	20000874 20000874 2000087c 2000087c     t.. t.. |.. |.. 
2000088c:	20000884 20000884 2000088c 2000088c     ... ... ... ... 
2000089c:	20000894 20000894 2000089c 2000089c     ... ... ... ... 
200008ac:	200008a4 200008a4 200008ac 200008ac     ... ... ... ... 
200008bc:	200008b4 200008b4 200008bc 200008bc     ... ... ... ... 
200008cc:	200008c4 200008c4 200008cc 200008cc     ... ... ... ... 
200008dc:	200008d4 200008d4 200008dc 200008dc     ... ... ... ... 
200008ec:	200008e4 200008e4 200008ec 200008ec     ... ... ... ... 
200008fc:	200008f4 200008f4 200008fc 200008fc     ... ... ... ... 
2000090c:	20000904 20000904 2000090c 2000090c     ... ... ... ... 
2000091c:	20000914 20000914 2000091c 2000091c     ... ... ... ... 
2000092c:	20000924 20000924 2000092c 2000092c     $.. $.. ,.. ,.. 
2000093c:	20000934 20000934 2000093c 2000093c     4.. 4.. <.. <.. 
2000094c:	20000944 20000944 2000094c 2000094c     D.. D.. L.. L.. 
2000095c:	20000954 20000954 2000095c 2000095c     T.. T.. \.. \.. 
2000096c:	20000964 20000964 2000096c 2000096c     d.. d.. l.. l.. 
2000097c:	20000974 20000974 2000097c 2000097c     t.. t.. |.. |.. 
2000098c:	20000984 20000984 2000098c 2000098c     ... ... ... ... 
2000099c:	20000994 20000994 2000099c 2000099c     ... ... ... ... 
200009ac:	200009a4 200009a4 200009ac 200009ac     ... ... ... ... 
200009bc:	200009b4 200009b4 200009bc 200009bc     ... ... ... ... 
200009cc:	200009c4 200009c4 200009cc 200009cc     ... ... ... ... 
200009dc:	200009d4 200009d4 200009dc 200009dc     ... ... ... ... 
200009ec:	200009e4 200009e4 200009ec 200009ec     ... ... ... ... 
200009fc:	200009f4 200009f4 200009fc 200009fc     ... ... ... ... 
20000a0c:	20000a04 20000a04 20000a0c 20000a0c     ... ... ... ... 
20000a1c:	20000a14 20000a14 20000a1c 20000a1c     ... ... ... ... 
20000a2c:	20000a24 20000a24 20000a2c 20000a2c     $.. $.. ,.. ,.. 
20000a3c:	20000a34 20000a34 20000a3c 20000a3c     4.. 4.. <.. <.. 
20000a4c:	20000a44 20000a44 20000a4c 20000a4c     D.. D.. L.. L.. 
20000a5c:	20000a54 20000a54 20000a5c 20000a5c     T.. T.. \.. \.. 
20000a6c:	20000a64 20000a64 20000a6c 20000a6c     d.. d.. l.. l.. 
20000a7c:	20000a74 20000a74 20000a7c 20000a7c     t.. t.. |.. |.. 
20000a8c:	20000a84 20000a84 20000a8c 20000a8c     ... ... ... ... 
20000a9c:	20000a94 20000a94 20000a9c 20000a9c     ... ... ... ... 

20000aac <__malloc_sbrk_base>:
20000aac:	ffffffff                                ....

20000ab0 <__malloc_trim_threshold>:
20000ab0:	00020000                                ....
