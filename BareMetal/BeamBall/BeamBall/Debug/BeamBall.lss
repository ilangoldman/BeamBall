
BeamBall.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000045f0  00400000  00400000  00010000  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .ARM.exidx    00000008  004045f0  004045f0  000145f0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  2 .relocate     00000ab4  20000000  004045f8  00020000  2**3
                  CONTENTS, ALLOC, LOAD, CODE
  3 .bss          000000e0  20000ab4  004050ac  00020ab4  2**2
                  ALLOC
  4 .stack        00000804  20000b94  0040518c  00020ab4  2**0
                  ALLOC
  5 .ARM.attributes 00000029  00000000  00000000  00020ab4  2**0
                  CONTENTS, READONLY
  6 .comment      00000059  00000000  00000000  00020add  2**0
                  CONTENTS, READONLY
  7 .debug_info   00018673  00000000  00000000  00020b36  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 00003702  00000000  00000000  000391a9  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_loc    000056b7  00000000  00000000  0003c8ab  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_aranges 00000ad0  00000000  00000000  00041f62  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 000009f8  00000000  00000000  00042a32  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_macro  0000704e  00000000  00000000  0004342a  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_line   0000e8dd  00000000  00000000  0004a478  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_str    0004340f  00000000  00000000  00058d55  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_frame  000025a4  00000000  00000000  0009c164  2**2
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00400000 <exception_table>:
  400000:	98 13 00 20 41 0e 40 00 3d 0e 40 00 3d 0e 40 00     ... A.@.=.@.=.@.
  400010:	3d 0e 40 00 3d 0e 40 00 3d 0e 40 00 00 00 00 00     =.@.=.@.=.@.....
	...
  40002c:	3d 0e 40 00 3d 0e 40 00 00 00 00 00 3d 0e 40 00     =.@.=.@.....=.@.
  40003c:	3d 0e 40 00 3d 0e 40 00 3d 0e 40 00 3d 0e 40 00     =.@.=.@.=.@.=.@.
  40004c:	3d 0e 40 00 3d 0e 40 00 3d 0e 40 00 3d 0e 40 00     =.@.=.@.=.@.=.@.
  40005c:	3d 0e 40 00 3d 0e 40 00 3d 0e 40 00 3d 0e 40 00     =.@.=.@.=.@.=.@.
  40006c:	ed 0c 40 00 01 0d 40 00 15 0d 40 00 3d 0e 40 00     ..@...@...@.=.@.
  40007c:	3d 0e 40 00 3d 0e 40 00 3d 0e 40 00 3d 0e 40 00     =.@.=.@.=.@.=.@.
  40008c:	3d 0e 40 00 3d 0e 40 00 61 05 40 00 3d 0e 40 00     =.@.=.@.a.@.=.@.
  40009c:	6d 05 40 00 89 05 40 00 3d 0e 40 00 3d 0e 40 00     m.@...@.=.@.=.@.
  4000ac:	3d 0e 40 00 3d 0e 40 00 3d 0e 40 00 3d 0e 40 00     =.@.=.@.=.@.=.@.
  4000bc:	3d 07 40 00 3d 0e 40 00                             =.@.=.@.

004000c4 <__do_global_dtors_aux>:
  4000c4:	b510      	push	{r4, lr}
  4000c6:	4c05      	ldr	r4, [pc, #20]	; (4000dc <__do_global_dtors_aux+0x18>)
  4000c8:	7823      	ldrb	r3, [r4, #0]
  4000ca:	b933      	cbnz	r3, 4000da <__do_global_dtors_aux+0x16>
  4000cc:	4b04      	ldr	r3, [pc, #16]	; (4000e0 <__do_global_dtors_aux+0x1c>)
  4000ce:	b113      	cbz	r3, 4000d6 <__do_global_dtors_aux+0x12>
  4000d0:	4804      	ldr	r0, [pc, #16]	; (4000e4 <__do_global_dtors_aux+0x20>)
  4000d2:	f3af 8000 	nop.w
  4000d6:	2301      	movs	r3, #1
  4000d8:	7023      	strb	r3, [r4, #0]
  4000da:	bd10      	pop	{r4, pc}
  4000dc:	20000ab4 	.word	0x20000ab4
  4000e0:	00000000 	.word	0x00000000
  4000e4:	004045f8 	.word	0x004045f8

004000e8 <frame_dummy>:
  4000e8:	4b0c      	ldr	r3, [pc, #48]	; (40011c <frame_dummy+0x34>)
  4000ea:	b143      	cbz	r3, 4000fe <frame_dummy+0x16>
  4000ec:	480c      	ldr	r0, [pc, #48]	; (400120 <frame_dummy+0x38>)
  4000ee:	b510      	push	{r4, lr}
  4000f0:	490c      	ldr	r1, [pc, #48]	; (400124 <frame_dummy+0x3c>)
  4000f2:	f3af 8000 	nop.w
  4000f6:	480c      	ldr	r0, [pc, #48]	; (400128 <frame_dummy+0x40>)
  4000f8:	6803      	ldr	r3, [r0, #0]
  4000fa:	b923      	cbnz	r3, 400106 <frame_dummy+0x1e>
  4000fc:	bd10      	pop	{r4, pc}
  4000fe:	480a      	ldr	r0, [pc, #40]	; (400128 <frame_dummy+0x40>)
  400100:	6803      	ldr	r3, [r0, #0]
  400102:	b933      	cbnz	r3, 400112 <frame_dummy+0x2a>
  400104:	4770      	bx	lr
  400106:	4b09      	ldr	r3, [pc, #36]	; (40012c <frame_dummy+0x44>)
  400108:	2b00      	cmp	r3, #0
  40010a:	d0f7      	beq.n	4000fc <frame_dummy+0x14>
  40010c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  400110:	4718      	bx	r3
  400112:	4b06      	ldr	r3, [pc, #24]	; (40012c <frame_dummy+0x44>)
  400114:	2b00      	cmp	r3, #0
  400116:	d0f5      	beq.n	400104 <frame_dummy+0x1c>
  400118:	4718      	bx	r3
  40011a:	bf00      	nop
  40011c:	00000000 	.word	0x00000000
  400120:	004045f8 	.word	0x004045f8
  400124:	20000ab8 	.word	0x20000ab8
  400128:	004045f8 	.word	0x004045f8
  40012c:	00000000 	.word	0x00000000

00400130 <_read>:
int __attribute__((weak))
_read (int file, char * ptr, int len); // Remove GCC compiler warning

int __attribute__((weak))
_read (int file, char * ptr, int len)
{
  400130:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
	int nChars = 0;

	if (file != 0) {
  400134:	b980      	cbnz	r0, 400158 <_read+0x28>
  400136:	460c      	mov	r4, r1
  400138:	4690      	mov	r8, r2
		return -1;
	}

	for (; len > 0; --len) {
  40013a:	2a00      	cmp	r2, #0
  40013c:	dd0f      	ble.n	40015e <_read+0x2e>
  40013e:	188f      	adds	r7, r1, r2
		ptr_get(stdio_base, ptr);
  400140:	4e08      	ldr	r6, [pc, #32]	; (400164 <_read+0x34>)
  400142:	4d09      	ldr	r5, [pc, #36]	; (400168 <_read+0x38>)
  400144:	6830      	ldr	r0, [r6, #0]
  400146:	4621      	mov	r1, r4
  400148:	682b      	ldr	r3, [r5, #0]
  40014a:	4798      	blx	r3
		ptr++;
  40014c:	3401      	adds	r4, #1
	for (; len > 0; --len) {
  40014e:	42bc      	cmp	r4, r7
  400150:	d1f8      	bne.n	400144 <_read+0x14>
		nChars++;
	}
	return nChars;
}
  400152:	4640      	mov	r0, r8
  400154:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
		return -1;
  400158:	f04f 38ff 	mov.w	r8, #4294967295
  40015c:	e7f9      	b.n	400152 <_read+0x22>
	for (; len > 0; --len) {
  40015e:	4680      	mov	r8, r0
  400160:	e7f7      	b.n	400152 <_read+0x22>
  400162:	bf00      	nop
  400164:	20000b8c 	.word	0x20000b8c
  400168:	20000b84 	.word	0x20000b84

0040016c <usart_write>:
 * \retval 0 on success.
 * \retval 1 on failure.
 */
uint32_t usart_write(Usart *p_usart, uint32_t c)
{
	if (!(p_usart->US_CSR & US_CSR_TXRDY)) {
  40016c:	6943      	ldr	r3, [r0, #20]
  40016e:	f013 0f02 	tst.w	r3, #2
		return 1;
	}

	p_usart->US_THR = US_THR_TXCHR(c);
  400172:	bf1d      	ittte	ne
  400174:	f3c1 0108 	ubfxne	r1, r1, #0, #9
  400178:	61c1      	strne	r1, [r0, #28]
	return 0;
  40017a:	2000      	movne	r0, #0
		return 1;
  40017c:	2001      	moveq	r0, #1
}
  40017e:	4770      	bx	lr

00400180 <usart_read>:
 * \retval 0 on success.
 * \retval 1 if no data is available or errors.
 */
uint32_t usart_read(Usart *p_usart, uint32_t *c)
{
	if (!(p_usart->US_CSR & US_CSR_RXRDY)) {
  400180:	6943      	ldr	r3, [r0, #20]
  400182:	f013 0f01 	tst.w	r3, #1
  400186:	d005      	beq.n	400194 <usart_read+0x14>
		return 1;
	}

	/* Read character */
	*c = p_usart->US_RHR & US_RHR_RXCHR_Msk;
  400188:	6983      	ldr	r3, [r0, #24]
  40018a:	f3c3 0308 	ubfx	r3, r3, #0, #9
  40018e:	600b      	str	r3, [r1, #0]

	return 0;
  400190:	2000      	movs	r0, #0
  400192:	4770      	bx	lr
		return 1;
  400194:	2001      	movs	r0, #1
}
  400196:	4770      	bx	lr

00400198 <_write>:
int __attribute__((weak))
_write (int file, const char *ptr, int len)
{
	int nChars = 0;

	if ((file != 1) && (file != 2) && (file!=3)) {
  400198:	3801      	subs	r0, #1
  40019a:	2802      	cmp	r0, #2
  40019c:	d815      	bhi.n	4001ca <_write+0x32>
{
  40019e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  4001a2:	460e      	mov	r6, r1
  4001a4:	4614      	mov	r4, r2
		return -1;
	}

	for (; len != 0; --len) {
  4001a6:	b19a      	cbz	r2, 4001d0 <_write+0x38>
  4001a8:	460d      	mov	r5, r1
		if (ptr_put(stdio_base, *ptr++) < 0) {
  4001aa:	f8df 8038 	ldr.w	r8, [pc, #56]	; 4001e4 <_write+0x4c>
  4001ae:	4f0c      	ldr	r7, [pc, #48]	; (4001e0 <_write+0x48>)
  4001b0:	f8d8 0000 	ldr.w	r0, [r8]
  4001b4:	f815 1b01 	ldrb.w	r1, [r5], #1
  4001b8:	683b      	ldr	r3, [r7, #0]
  4001ba:	4798      	blx	r3
  4001bc:	2800      	cmp	r0, #0
  4001be:	db0a      	blt.n	4001d6 <_write+0x3e>
  4001c0:	1ba8      	subs	r0, r5, r6
	for (; len != 0; --len) {
  4001c2:	3c01      	subs	r4, #1
  4001c4:	d1f4      	bne.n	4001b0 <_write+0x18>
  4001c6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
		return -1;
  4001ca:	f04f 30ff 	mov.w	r0, #4294967295
  4001ce:	4770      	bx	lr
	for (; len != 0; --len) {
  4001d0:	4610      	mov	r0, r2
  4001d2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
			return -1;
  4001d6:	f04f 30ff 	mov.w	r0, #4294967295
		}
		++nChars;
	}
	return nChars;
}
  4001da:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  4001de:	bf00      	nop
  4001e0:	20000b88 	.word	0x20000b88
  4001e4:	20000b8c 	.word	0x20000b8c

004001e8 <ili9225_spi_handler>:
 *
 * \return The interrupt mask value.
 */
static inline uint32_t spi_read_interrupt_mask(Spi *p_spi)
{
	return p_spi->SPI_IMR;
  4001e8:	4b03      	ldr	r3, [pc, #12]	; (4001f8 <ili9225_spi_handler+0x10>)
  4001ea:	69da      	ldr	r2, [r3, #28]
	p_spi->SPI_IDR = ul_sources;
  4001ec:	619a      	str	r2, [r3, #24]
	/* Disable interrupts */
	ul_spi_reg = spi_read_interrupt_mask(BOARD_ILI9225_SPI);
	spi_disable_interrupt(BOARD_ILI9225_SPI, ul_spi_reg);

	/* Set the flag to notify the end of transfer */
	g_by_transfend_flag = 1;
  4001ee:	2201      	movs	r2, #1
  4001f0:	4b02      	ldr	r3, [pc, #8]	; (4001fc <ili9225_spi_handler+0x14>)
  4001f2:	701a      	strb	r2, [r3, #0]
  4001f4:	4770      	bx	lr
  4001f6:	bf00      	nop
  4001f8:	40008000 	.word	0x40008000
  4001fc:	20000ad0 	.word	0x20000ad0

00400200 <pwm_channel_get_interrupt_status>:
 * \return Channel counter event and fault protection trigger interrupt status.
 */
uint32_t pwm_channel_get_interrupt_status(Pwm *p_pwm)
{
#if (SAM3N || SAM4N || SAM4C || SAM4CP || SAM4CM)
	return p_pwm->PWM_ISR;
  400200:	69c0      	ldr	r0, [r0, #28]
#else
	return p_pwm->PWM_ISR1;
#endif
}
  400202:	4770      	bx	lr

00400204 <tc_init>:
 */
void tc_init(
		Tc *p_tc,
		uint32_t ul_channel,
		uint32_t ul_mode)
{
  400204:	b410      	push	{r4}

	/* Validate inputs. */
	Assert(p_tc);
	Assert(ul_channel <
			(sizeof(p_tc->TC_CHANNEL) / sizeof(p_tc->TC_CHANNEL[0])));
	tc_channel = p_tc->TC_CHANNEL + ul_channel;
  400206:	0189      	lsls	r1, r1, #6
  400208:	1843      	adds	r3, r0, r1

	/*  Disable TC clock. */
	tc_channel->TC_CCR = TC_CCR_CLKDIS;
  40020a:	2402      	movs	r4, #2
  40020c:	5044      	str	r4, [r0, r1]

	/*  Disable interrupts. */
	tc_channel->TC_IDR = 0xFFFFFFFF;
  40020e:	f04f 31ff 	mov.w	r1, #4294967295
  400212:	6299      	str	r1, [r3, #40]	; 0x28

	/*  Clear status register. */
	tc_channel->TC_SR;
  400214:	6a19      	ldr	r1, [r3, #32]

	/*  Set mode. */
	tc_channel->TC_CMR = ul_mode;
  400216:	605a      	str	r2, [r3, #4]
}
  400218:	bc10      	pop	{r4}
  40021a:	4770      	bx	lr

0040021c <tc_start>:
	/* Validate inputs. */
	Assert(p_tc);
	Assert(ul_channel <
			(sizeof(p_tc->TC_CHANNEL) / sizeof(p_tc->TC_CHANNEL[0])));

	p_tc->TC_CHANNEL[ul_channel].TC_CCR = TC_CCR_CLKEN | TC_CCR_SWTRG;
  40021c:	0189      	lsls	r1, r1, #6
  40021e:	2305      	movs	r3, #5
  400220:	5043      	str	r3, [r0, r1]
  400222:	4770      	bx	lr

00400224 <tc_write_rc>:
	/* Validate inputs. */
	Assert(p_tc);
	Assert(ul_channel <
			(sizeof(p_tc->TC_CHANNEL) / sizeof(p_tc->TC_CHANNEL[0])));

	p_tc->TC_CHANNEL[ul_channel].TC_RC = ul_value;
  400224:	eb00 1181 	add.w	r1, r0, r1, lsl #6
  400228:	61ca      	str	r2, [r1, #28]
  40022a:	4770      	bx	lr

0040022c <tc_enable_interrupt>:

	/* Validate inputs. */
	Assert(p_tc);
	Assert(ul_channel <
			(sizeof(p_tc->TC_CHANNEL) / sizeof(p_tc->TC_CHANNEL[0])));
	tc_channel = p_tc->TC_CHANNEL + ul_channel;
  40022c:	eb00 1181 	add.w	r1, r0, r1, lsl #6
	tc_channel->TC_IER = ul_sources;
  400230:	624a      	str	r2, [r1, #36]	; 0x24
  400232:	4770      	bx	lr

00400234 <tc_get_status>:
	/* Validate inputs. */
	Assert(p_tc);
	Assert(ul_channel <
			(sizeof(p_tc->TC_CHANNEL) / sizeof(p_tc->TC_CHANNEL[0])));
			
	tc_channel = p_tc->TC_CHANNEL + ul_channel;
  400234:	eb00 1181 	add.w	r1, r0, r1, lsl #6
	return tc_channel->TC_SR;
  400238:	6a08      	ldr	r0, [r1, #32]
}
  40023a:	4770      	bx	lr

0040023c <tc_find_mck_divisor>:
		uint32_t ul_freq,
		uint32_t ul_mck,
		uint32_t *p_uldiv,
		uint32_t *p_ultcclks,
		uint32_t ul_boardmck)
{
  40023c:	b4f0      	push	{r4, r5, r6, r7}
  40023e:	b086      	sub	sp, #24
	const uint32_t divisors[5] = { 2, 8, 32, 128,
  400240:	2402      	movs	r4, #2
  400242:	9401      	str	r4, [sp, #4]
  400244:	2408      	movs	r4, #8
  400246:	9402      	str	r4, [sp, #8]
  400248:	2420      	movs	r4, #32
  40024a:	9403      	str	r4, [sp, #12]
  40024c:	2480      	movs	r4, #128	; 0x80
  40024e:	9404      	str	r4, [sp, #16]
			ul_boardmck / FREQ_SLOW_CLOCK_EXT };
  400250:	9c0a      	ldr	r4, [sp, #40]	; 0x28
  400252:	0be4      	lsrs	r4, r4, #15
	const uint32_t divisors[5] = { 2, 8, 32, 128,
  400254:	9405      	str	r4, [sp, #20]
	for (ul_index = 0;
			ul_index < (sizeof(divisors) / sizeof(divisors[0]));
			ul_index++) {
		ul_high = ul_mck / divisors[ul_index];
		ul_low  = ul_high / TC_DIV_FACTOR;
		if (ul_freq > ul_high) {
  400256:	ebb0 0f51 	cmp.w	r0, r1, lsr #1
  40025a:	d814      	bhi.n	400286 <tc_find_mck_divisor+0x4a>
  40025c:	0c4c      	lsrs	r4, r1, #17
			return 0;
		} else if (ul_freq >= ul_low) {
  40025e:	42a0      	cmp	r0, r4
  400260:	d217      	bcs.n	400292 <tc_find_mck_divisor+0x56>
  400262:	2501      	movs	r5, #1
		ul_high = ul_mck / divisors[ul_index];
  400264:	af01      	add	r7, sp, #4
  400266:	f857 4025 	ldr.w	r4, [r7, r5, lsl #2]
  40026a:	fbb1 f4f4 	udiv	r4, r1, r4
		ul_low  = ul_high / TC_DIV_FACTOR;
  40026e:	0c26      	lsrs	r6, r4, #16
		if (ul_freq > ul_high) {
  400270:	4284      	cmp	r4, r0
  400272:	d30a      	bcc.n	40028a <tc_find_mck_divisor+0x4e>
		} else if (ul_freq >= ul_low) {
  400274:	4286      	cmp	r6, r0
  400276:	d90d      	bls.n	400294 <tc_find_mck_divisor+0x58>
			ul_index++) {
  400278:	3501      	adds	r5, #1
	for (ul_index = 0;
  40027a:	2d05      	cmp	r5, #5
  40027c:	d1f3      	bne.n	400266 <tc_find_mck_divisor+0x2a>
			break;
		}
	}
	if (ul_index >= (sizeof(divisors) / sizeof(divisors[0]))) {
		return 0;
  40027e:	2000      	movs	r0, #0
	if (p_ultcclks) {
		*p_ultcclks = ul_index;
	}

	return 1;
}
  400280:	b006      	add	sp, #24
  400282:	bcf0      	pop	{r4, r5, r6, r7}
  400284:	4770      	bx	lr
			return 0;
  400286:	2000      	movs	r0, #0
  400288:	e7fa      	b.n	400280 <tc_find_mck_divisor+0x44>
  40028a:	2000      	movs	r0, #0
  40028c:	e7f8      	b.n	400280 <tc_find_mck_divisor+0x44>
	return 1;
  40028e:	2001      	movs	r0, #1
  400290:	e7f6      	b.n	400280 <tc_find_mck_divisor+0x44>
	for (ul_index = 0;
  400292:	2500      	movs	r5, #0
	if (p_uldiv) {
  400294:	b12a      	cbz	r2, 4002a2 <tc_find_mck_divisor+0x66>
		*p_uldiv = divisors[ul_index];
  400296:	a906      	add	r1, sp, #24
  400298:	eb01 0185 	add.w	r1, r1, r5, lsl #2
  40029c:	f851 1c14 	ldr.w	r1, [r1, #-20]
  4002a0:	6011      	str	r1, [r2, #0]
	if (p_ultcclks) {
  4002a2:	2b00      	cmp	r3, #0
  4002a4:	d0f3      	beq.n	40028e <tc_find_mck_divisor+0x52>
		*p_ultcclks = ul_index;
  4002a6:	601d      	str	r5, [r3, #0]
	return 1;
  4002a8:	2001      	movs	r0, #1
  4002aa:	e7e9      	b.n	400280 <tc_find_mck_divisor+0x44>

004002ac <uart_init>:
 *
 * \retval 0 Success.
 * \retval 1 Bad baud rate generator value.
 */
uint32_t uart_init(Uart *p_uart, const sam_uart_opt_t *p_uart_opt)
{
  4002ac:	b410      	push	{r4}
	uint32_t cd = 0;

	/* Reset and disable receiver & transmitter */
	p_uart->UART_CR = UART_CR_RSTRX | UART_CR_RSTTX
  4002ae:	23ac      	movs	r3, #172	; 0xac
  4002b0:	6003      	str	r3, [r0, #0]
			| UART_CR_RXDIS | UART_CR_TXDIS;

	/* Check and configure baudrate */
	/* Asynchronous, no oversampling */
	cd = (p_uart_opt->ul_mck / p_uart_opt->ul_baudrate) / UART_MCK_DIV;
  4002b2:	680b      	ldr	r3, [r1, #0]
  4002b4:	684a      	ldr	r2, [r1, #4]
  4002b6:	fbb3 f3f2 	udiv	r3, r3, r2
  4002ba:	091b      	lsrs	r3, r3, #4
	if (cd < UART_MCK_DIV_MIN_FACTOR || cd > UART_MCK_DIV_MAX_FACTOR)
  4002bc:	1e5c      	subs	r4, r3, #1
  4002be:	f64f 72fe 	movw	r2, #65534	; 0xfffe
  4002c2:	4294      	cmp	r4, r2
  4002c4:	d80b      	bhi.n	4002de <uart_init+0x32>
		return 1;

	p_uart->UART_BRGR = cd;
  4002c6:	6203      	str	r3, [r0, #32]
	/* Configure mode */
	p_uart->UART_MR = p_uart_opt->ul_mode;
  4002c8:	688b      	ldr	r3, [r1, #8]
  4002ca:	6043      	str	r3, [r0, #4]

#if (!SAMV71 && !SAMV70 && !SAME70 && !SAMS70)
	/* Disable PDC channel */
	p_uart->UART_PTCR = UART_PTCR_RXTDIS | UART_PTCR_TXTDIS;
  4002cc:	f240 2302 	movw	r3, #514	; 0x202
  4002d0:	f8c0 3120 	str.w	r3, [r0, #288]	; 0x120
#endif

	/* Enable receiver and transmitter */
	p_uart->UART_CR = UART_CR_RXEN | UART_CR_TXEN;
  4002d4:	2350      	movs	r3, #80	; 0x50
  4002d6:	6003      	str	r3, [r0, #0]

	return 0;
  4002d8:	2000      	movs	r0, #0
}
  4002da:	bc10      	pop	{r4}
  4002dc:	4770      	bx	lr
		return 1;
  4002de:	2001      	movs	r0, #1
  4002e0:	e7fb      	b.n	4002da <uart_init+0x2e>

004002e2 <uart_write>:
 * \retval 1 I/O Failure, UART is not ready.
 */
uint32_t uart_write(Uart *p_uart, const uint8_t uc_data)
{
	/* Check if the transmitter is ready */
	if (!(p_uart->UART_SR & UART_SR_TXRDY))
  4002e2:	6943      	ldr	r3, [r0, #20]
  4002e4:	f013 0f02 	tst.w	r3, #2
		return 1;

	/* Send character */
	p_uart->UART_THR = uc_data;
  4002e8:	bf1a      	itte	ne
  4002ea:	61c1      	strne	r1, [r0, #28]
	return 0;
  4002ec:	2000      	movne	r0, #0
		return 1;
  4002ee:	2001      	moveq	r0, #1
}
  4002f0:	4770      	bx	lr

004002f2 <uart_read>:
 * \retval 1 I/O Failure, UART is not ready.
 */
uint32_t uart_read(Uart *p_uart, uint8_t *puc_data)
{
	/* Check if the receiver is ready */
	if ((p_uart->UART_SR & UART_SR_RXRDY) == 0)
  4002f2:	6943      	ldr	r3, [r0, #20]
  4002f4:	f013 0f01 	tst.w	r3, #1
		return 1;

	/* Read character */
	*puc_data = (uint8_t) p_uart->UART_RHR;
  4002f8:	bf1d      	ittte	ne
  4002fa:	6983      	ldrne	r3, [r0, #24]
  4002fc:	700b      	strbne	r3, [r1, #0]
	return 0;
  4002fe:	2000      	movne	r0, #0
		return 1;
  400300:	2001      	moveq	r0, #1
}
  400302:	4770      	bx	lr

00400304 <vReadSensor>:

#include <asf.h>
#include "BeamBall.h"


void vReadSensor(void) {
  400304:	b508      	push	{r3, lr}
	puts("Read sensor!\r\n");
  400306:	4809      	ldr	r0, [pc, #36]	; (40032c <vReadSensor+0x28>)
  400308:	4b09      	ldr	r3, [pc, #36]	; (400330 <vReadSensor+0x2c>)
  40030a:	4798      	blx	r3
	// clear timer
	tc_get_status(TC,CHANNEL);
  40030c:	2100      	movs	r1, #0
  40030e:	4809      	ldr	r0, [pc, #36]	; (400334 <vReadSensor+0x30>)
  400310:	4b09      	ldr	r3, [pc, #36]	; (400338 <vReadSensor+0x34>)
  400312:	4798      	blx	r3
	vClearSensorCounter();
  400314:	4b09      	ldr	r3, [pc, #36]	; (40033c <vReadSensor+0x38>)
  400316:	4798      	blx	r3

	// pio funciona em pull up??
	gpio_set_pin_high(PIO_TRIGGER);
  400318:	202e      	movs	r0, #46	; 0x2e
  40031a:	4b09      	ldr	r3, [pc, #36]	; (400340 <vReadSensor+0x3c>)
  40031c:	4798      	blx	r3
	delay_us(10);
  40031e:	2023      	movs	r0, #35	; 0x23
  400320:	4b08      	ldr	r3, [pc, #32]	; (400344 <vReadSensor+0x40>)
  400322:	4798      	blx	r3
	gpio_set_pin_low(PIO_TRIGGER);
  400324:	202e      	movs	r0, #46	; 0x2e
  400326:	4b08      	ldr	r3, [pc, #32]	; (400348 <vReadSensor+0x44>)
  400328:	4798      	blx	r3
  40032a:	bd08      	pop	{r3, pc}
  40032c:	00404364 	.word	0x00404364
  400330:	00401775 	.word	0x00401775
  400334:	40010000 	.word	0x40010000
  400338:	00400235 	.word	0x00400235
  40033c:	004004ad 	.word	0x004004ad
  400340:	004009e1 	.word	0x004009e1
  400344:	20000001 	.word	0x20000001
  400348:	004009fb 	.word	0x004009fb

0040034c <vMalhaControle>:

}

void vMalhaControle(double distance) {
  40034c:	b508      	push	{r3, lr}
	puts("Executando Malha de Controle\r\n");
  40034e:	4803      	ldr	r0, [pc, #12]	; (40035c <vMalhaControle+0x10>)
  400350:	4b03      	ldr	r3, [pc, #12]	; (400360 <vMalhaControle+0x14>)
  400352:	4798      	blx	r3
	//ili9225_draw_string(10,115,(uint8_t *) "P: ");
	//sprintf (buffer, "%.2f", pos);
	//ili9225_draw_string(95,115,(uint8_t *) buffer);

	//vPWMUpdateDuty(pos);
	vReadSensor();
  400354:	4b03      	ldr	r3, [pc, #12]	; (400364 <vMalhaControle+0x18>)
  400356:	4798      	blx	r3
  400358:	bd08      	pop	{r3, pc}
  40035a:	bf00      	nop
  40035c:	00404344 	.word	0x00404344
  400360:	00401775 	.word	0x00401775
  400364:	00400305 	.word	0x00400305

00400368 <usart_serial_getchar>:
 * \param p_usart   Base address of the USART instance.
 * \param data   Data to read
 *
 */
static inline void usart_serial_getchar(usart_if p_usart, uint8_t *data)
{
  400368:	b5f0      	push	{r4, r5, r6, r7, lr}
  40036a:	b083      	sub	sp, #12
  40036c:	4605      	mov	r5, r0
  40036e:	460c      	mov	r4, r1
	uint32_t val = 0;
  400370:	2300      	movs	r3, #0
  400372:	9301      	str	r3, [sp, #4]
	if (UART == (Uart*)p_usart) {
		while (uart_read((Uart*)p_usart, data));
	}
#else
# ifdef UART0
	if (UART0 == (Uart*)p_usart) {
  400374:	4b18      	ldr	r3, [pc, #96]	; (4003d8 <usart_serial_getchar+0x70>)
  400376:	4298      	cmp	r0, r3
  400378:	d00a      	beq.n	400390 <usart_serial_getchar+0x28>
		while (uart_read((Uart*)p_usart, data));
	}
# endif
# ifdef UART1
	if (UART1 == (Uart*)p_usart) {
  40037a:	4b18      	ldr	r3, [pc, #96]	; (4003dc <usart_serial_getchar+0x74>)
  40037c:	4298      	cmp	r0, r3
  40037e:	d00f      	beq.n	4003a0 <usart_serial_getchar+0x38>
		while (usart_read(p_usart, &val));
		*data = (uint8_t)(val & 0xFF);
	}
#else
# ifdef USART0
	if (USART0 == p_usart) {
  400380:	4b17      	ldr	r3, [pc, #92]	; (4003e0 <usart_serial_getchar+0x78>)
  400382:	4298      	cmp	r0, r3
  400384:	d014      	beq.n	4003b0 <usart_serial_getchar+0x48>
		while (usart_read(p_usart, &val));
		*data = (uint8_t)(val & 0xFF);
	}
# endif
# ifdef USART1
	if (USART1 == p_usart) {
  400386:	4b17      	ldr	r3, [pc, #92]	; (4003e4 <usart_serial_getchar+0x7c>)
  400388:	429d      	cmp	r5, r3
  40038a:	d01b      	beq.n	4003c4 <usart_serial_getchar+0x5c>
		*data = (uint8_t)(val & 0xFF);
	}
# endif
#endif /* ifdef USART */

}
  40038c:	b003      	add	sp, #12
  40038e:	bdf0      	pop	{r4, r5, r6, r7, pc}
		while (uart_read((Uart*)p_usart, data));
  400390:	461f      	mov	r7, r3
  400392:	4e15      	ldr	r6, [pc, #84]	; (4003e8 <usart_serial_getchar+0x80>)
  400394:	4621      	mov	r1, r4
  400396:	4638      	mov	r0, r7
  400398:	47b0      	blx	r6
  40039a:	2800      	cmp	r0, #0
  40039c:	d1fa      	bne.n	400394 <usart_serial_getchar+0x2c>
  40039e:	e7f2      	b.n	400386 <usart_serial_getchar+0x1e>
		while (uart_read((Uart*)p_usart, data));
  4003a0:	461e      	mov	r6, r3
  4003a2:	4d11      	ldr	r5, [pc, #68]	; (4003e8 <usart_serial_getchar+0x80>)
  4003a4:	4621      	mov	r1, r4
  4003a6:	4630      	mov	r0, r6
  4003a8:	47a8      	blx	r5
  4003aa:	2800      	cmp	r0, #0
  4003ac:	d1fa      	bne.n	4003a4 <usart_serial_getchar+0x3c>
  4003ae:	e7ed      	b.n	40038c <usart_serial_getchar+0x24>
		while (usart_read(p_usart, &val));
  4003b0:	461e      	mov	r6, r3
  4003b2:	4d0e      	ldr	r5, [pc, #56]	; (4003ec <usart_serial_getchar+0x84>)
  4003b4:	a901      	add	r1, sp, #4
  4003b6:	4630      	mov	r0, r6
  4003b8:	47a8      	blx	r5
  4003ba:	2800      	cmp	r0, #0
  4003bc:	d1fa      	bne.n	4003b4 <usart_serial_getchar+0x4c>
		*data = (uint8_t)(val & 0xFF);
  4003be:	9b01      	ldr	r3, [sp, #4]
  4003c0:	7023      	strb	r3, [r4, #0]
  4003c2:	e7e3      	b.n	40038c <usart_serial_getchar+0x24>
		while (usart_read(p_usart, &val));
  4003c4:	461e      	mov	r6, r3
  4003c6:	4d09      	ldr	r5, [pc, #36]	; (4003ec <usart_serial_getchar+0x84>)
  4003c8:	a901      	add	r1, sp, #4
  4003ca:	4630      	mov	r0, r6
  4003cc:	47a8      	blx	r5
  4003ce:	2800      	cmp	r0, #0
  4003d0:	d1fa      	bne.n	4003c8 <usart_serial_getchar+0x60>
		*data = (uint8_t)(val & 0xFF);
  4003d2:	9b01      	ldr	r3, [sp, #4]
  4003d4:	7023      	strb	r3, [r4, #0]
}
  4003d6:	e7d9      	b.n	40038c <usart_serial_getchar+0x24>
  4003d8:	400e0600 	.word	0x400e0600
  4003dc:	400e0800 	.word	0x400e0800
  4003e0:	40024000 	.word	0x40024000
  4003e4:	40028000 	.word	0x40028000
  4003e8:	004002f3 	.word	0x004002f3
  4003ec:	00400181 	.word	0x00400181

004003f0 <usart_serial_putchar>:
{
  4003f0:	b570      	push	{r4, r5, r6, lr}
  4003f2:	460c      	mov	r4, r1
	if (UART0 == (Uart*)p_usart) {
  4003f4:	4b18      	ldr	r3, [pc, #96]	; (400458 <usart_serial_putchar+0x68>)
  4003f6:	4298      	cmp	r0, r3
  4003f8:	d00a      	beq.n	400410 <usart_serial_putchar+0x20>
	if (UART1 == (Uart*)p_usart) {
  4003fa:	4b18      	ldr	r3, [pc, #96]	; (40045c <usart_serial_putchar+0x6c>)
  4003fc:	4298      	cmp	r0, r3
  4003fe:	d010      	beq.n	400422 <usart_serial_putchar+0x32>
	if (USART0 == p_usart) {
  400400:	4b17      	ldr	r3, [pc, #92]	; (400460 <usart_serial_putchar+0x70>)
  400402:	4298      	cmp	r0, r3
  400404:	d016      	beq.n	400434 <usart_serial_putchar+0x44>
	if (USART1 == p_usart) {
  400406:	4b17      	ldr	r3, [pc, #92]	; (400464 <usart_serial_putchar+0x74>)
  400408:	4298      	cmp	r0, r3
  40040a:	d01c      	beq.n	400446 <usart_serial_putchar+0x56>
	return 0;
  40040c:	2000      	movs	r0, #0
}
  40040e:	bd70      	pop	{r4, r5, r6, pc}
		while (uart_write((Uart*)p_usart, c)!=0);
  400410:	461e      	mov	r6, r3
  400412:	4d15      	ldr	r5, [pc, #84]	; (400468 <usart_serial_putchar+0x78>)
  400414:	4621      	mov	r1, r4
  400416:	4630      	mov	r0, r6
  400418:	47a8      	blx	r5
  40041a:	2800      	cmp	r0, #0
  40041c:	d1fa      	bne.n	400414 <usart_serial_putchar+0x24>
		return 1;
  40041e:	2001      	movs	r0, #1
  400420:	bd70      	pop	{r4, r5, r6, pc}
		while (uart_write((Uart*)p_usart, c)!=0);
  400422:	461e      	mov	r6, r3
  400424:	4d10      	ldr	r5, [pc, #64]	; (400468 <usart_serial_putchar+0x78>)
  400426:	4621      	mov	r1, r4
  400428:	4630      	mov	r0, r6
  40042a:	47a8      	blx	r5
  40042c:	2800      	cmp	r0, #0
  40042e:	d1fa      	bne.n	400426 <usart_serial_putchar+0x36>
		return 1;
  400430:	2001      	movs	r0, #1
  400432:	bd70      	pop	{r4, r5, r6, pc}
		while (usart_write(p_usart, c)!=0);
  400434:	461e      	mov	r6, r3
  400436:	4d0d      	ldr	r5, [pc, #52]	; (40046c <usart_serial_putchar+0x7c>)
  400438:	4621      	mov	r1, r4
  40043a:	4630      	mov	r0, r6
  40043c:	47a8      	blx	r5
  40043e:	2800      	cmp	r0, #0
  400440:	d1fa      	bne.n	400438 <usart_serial_putchar+0x48>
		return 1;
  400442:	2001      	movs	r0, #1
  400444:	bd70      	pop	{r4, r5, r6, pc}
		while (usart_write(p_usart, c)!=0);
  400446:	461e      	mov	r6, r3
  400448:	4d08      	ldr	r5, [pc, #32]	; (40046c <usart_serial_putchar+0x7c>)
  40044a:	4621      	mov	r1, r4
  40044c:	4630      	mov	r0, r6
  40044e:	47a8      	blx	r5
  400450:	2800      	cmp	r0, #0
  400452:	d1fa      	bne.n	40044a <usart_serial_putchar+0x5a>
		return 1;
  400454:	2001      	movs	r0, #1
  400456:	bd70      	pop	{r4, r5, r6, pc}
  400458:	400e0600 	.word	0x400e0600
  40045c:	400e0800 	.word	0x400e0800
  400460:	40024000 	.word	0x40024000
  400464:	40028000 	.word	0x40028000
  400468:	004002e3 	.word	0x004002e3
  40046c:	0040016d 	.word	0x0040016d

00400470 <vSensorISR>:

}

/* ISR Configuration */

void vSensorISR(const uint32_t id, const uint32_t index) {
  400470:	b508      	push	{r3, lr}
	puts("Entrou Sensor ISR \r\n");
  400472:	4808      	ldr	r0, [pc, #32]	; (400494 <vSensorISR+0x24>)
  400474:	4b08      	ldr	r3, [pc, #32]	; (400498 <vSensorISR+0x28>)
  400476:	4798      	blx	r3
	return (sensor_counter/58);
  400478:	4b08      	ldr	r3, [pc, #32]	; (40049c <vSensorISR+0x2c>)
  40047a:	681b      	ldr	r3, [r3, #0]
  40047c:	4808      	ldr	r0, [pc, #32]	; (4004a0 <vSensorISR+0x30>)
  40047e:	fb80 2003 	smull	r2, r0, r0, r3
  400482:	4418      	add	r0, r3
  400484:	17db      	asrs	r3, r3, #31
  400486:	ebc3 1060 	rsb	r0, r3, r0, asr #5
  40048a:	4b06      	ldr	r3, [pc, #24]	; (4004a4 <vSensorISR+0x34>)
  40048c:	4798      	blx	r3
	double distance = dGetDistance();
	//char buffer[50];
	//sprintf (buffer, "%.2f", distance);
	//printf("d sensor: %c\r\n",buffer[0]);
	vMalhaControle(distance);
  40048e:	4b06      	ldr	r3, [pc, #24]	; (4004a8 <vSensorISR+0x38>)
  400490:	4798      	blx	r3
  400492:	bd08      	pop	{r3, pc}
  400494:	00404430 	.word	0x00404430
  400498:	00401775 	.word	0x00401775
  40049c:	20000ad4 	.word	0x20000ad4
  4004a0:	8d3dcb09 	.word	0x8d3dcb09
  4004a4:	00401311 	.word	0x00401311
  4004a8:	0040034d 	.word	0x0040034d

004004ac <vClearSensorCounter>:
	sensor_counter = 0;
  4004ac:	2200      	movs	r2, #0
  4004ae:	4b01      	ldr	r3, [pc, #4]	; (4004b4 <vClearSensorCounter+0x8>)
  4004b0:	601a      	str	r2, [r3, #0]
  4004b2:	4770      	bx	lr
  4004b4:	20000ad4 	.word	0x20000ad4

004004b8 <vAddSensorCounter>:
	sensor_counter++;
  4004b8:	4a02      	ldr	r2, [pc, #8]	; (4004c4 <vAddSensorCounter+0xc>)
  4004ba:	6813      	ldr	r3, [r2, #0]
  4004bc:	3301      	adds	r3, #1
  4004be:	6013      	str	r3, [r2, #0]
  4004c0:	4770      	bx	lr
  4004c2:	bf00      	nop
  4004c4:	20000ad4 	.word	0x20000ad4

004004c8 <vConfigureUART>:
void vConfigureUART(void) {
  4004c8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  4004cc:	b084      	sub	sp, #16
	uart_settings.ul_mck = sysclk_get_peripheral_hz();
  4004ce:	f8df 808c 	ldr.w	r8, [pc, #140]	; 40055c <vConfigureUART+0x94>
  4004d2:	f8cd 8004 	str.w	r8, [sp, #4]
	uart_settings.ul_baudrate = opt->baudrate;
  4004d6:	4c16      	ldr	r4, [pc, #88]	; (400530 <vConfigureUART+0x68>)
  4004d8:	6823      	ldr	r3, [r4, #0]
  4004da:	9302      	str	r3, [sp, #8]
	uart_settings.ul_mode = opt->paritytype;
  4004dc:	68a3      	ldr	r3, [r4, #8]
  4004de:	9303      	str	r3, [sp, #12]
 *
 * \param ul_id Id (number) of the peripheral clock.
 */
static inline void sysclk_enable_peripheral_clock(uint32_t ul_id)
{
	pmc_enable_periph_clk(ul_id);
  4004e0:	2008      	movs	r0, #8
  4004e2:	4f14      	ldr	r7, [pc, #80]	; (400534 <vConfigureUART+0x6c>)
  4004e4:	47b8      	blx	r7
		uart_init((Uart*)p_usart, &uart_settings);
  4004e6:	4d14      	ldr	r5, [pc, #80]	; (400538 <vConfigureUART+0x70>)
  4004e8:	a901      	add	r1, sp, #4
  4004ea:	4628      	mov	r0, r5
  4004ec:	4e13      	ldr	r6, [pc, #76]	; (40053c <vConfigureUART+0x74>)
  4004ee:	47b0      	blx	r6
 * \param opt         Options needed to set up RS232 communication (see \ref usart_options_t).
 *
 */
static inline void stdio_serial_init(volatile void *usart, const usart_serial_options_t *opt)
{
	stdio_base = (void *)usart;
  4004f0:	4b13      	ldr	r3, [pc, #76]	; (400540 <vConfigureUART+0x78>)
  4004f2:	601d      	str	r5, [r3, #0]
	ptr_put = (int (*)(void volatile*,char))&usart_serial_putchar;
  4004f4:	4a13      	ldr	r2, [pc, #76]	; (400544 <vConfigureUART+0x7c>)
  4004f6:	4b14      	ldr	r3, [pc, #80]	; (400548 <vConfigureUART+0x80>)
  4004f8:	601a      	str	r2, [r3, #0]
	ptr_get = (void (*)(void volatile*,char*))&usart_serial_getchar;
  4004fa:	4a14      	ldr	r2, [pc, #80]	; (40054c <vConfigureUART+0x84>)
  4004fc:	4b14      	ldr	r3, [pc, #80]	; (400550 <vConfigureUART+0x88>)
  4004fe:	601a      	str	r2, [r3, #0]
	uart_settings.ul_mck = sysclk_get_peripheral_hz();
  400500:	f8cd 8004 	str.w	r8, [sp, #4]
	uart_settings.ul_baudrate = opt->baudrate;
  400504:	6823      	ldr	r3, [r4, #0]
  400506:	9302      	str	r3, [sp, #8]
	uart_settings.ul_mode = opt->paritytype;
  400508:	68a3      	ldr	r3, [r4, #8]
  40050a:	9303      	str	r3, [sp, #12]
  40050c:	2008      	movs	r0, #8
  40050e:	47b8      	blx	r7
		uart_init((Uart*)p_usart, &uart_settings);
  400510:	a901      	add	r1, sp, #4
  400512:	4628      	mov	r0, r5
  400514:	47b0      	blx	r6
	fdevopen((int (*)(char, FILE*))(_write),(int (*)(FILE*))(_read));
#  endif
#  if UC3 || SAM
	// For AVR32 and SAM GCC
	// Specify that stdout and stdin should not be buffered.
	setbuf(stdout, NULL);
  400516:	4d0f      	ldr	r5, [pc, #60]	; (400554 <vConfigureUART+0x8c>)
  400518:	682b      	ldr	r3, [r5, #0]
  40051a:	2100      	movs	r1, #0
  40051c:	6898      	ldr	r0, [r3, #8]
  40051e:	4c0e      	ldr	r4, [pc, #56]	; (400558 <vConfigureUART+0x90>)
  400520:	47a0      	blx	r4
	setbuf(stdin, NULL);
  400522:	682b      	ldr	r3, [r5, #0]
  400524:	2100      	movs	r1, #0
  400526:	6858      	ldr	r0, [r3, #4]
  400528:	47a0      	blx	r4
}
  40052a:	b004      	add	sp, #16
  40052c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  400530:	200000f4 	.word	0x200000f4
  400534:	00400e11 	.word	0x00400e11
  400538:	400e0600 	.word	0x400e0600
  40053c:	004002ad 	.word	0x004002ad
  400540:	20000b8c 	.word	0x20000b8c
  400544:	004003f1 	.word	0x004003f1
  400548:	20000b88 	.word	0x20000b88
  40054c:	00400369 	.word	0x00400369
  400550:	20000b84 	.word	0x20000b84
  400554:	20000108 	.word	0x20000108
  400558:	00401785 	.word	0x00401785
  40055c:	02dc6c00 	.word	0x02dc6c00

00400560 <SPI_Handler>:
void SPI_Handler(void) {
  400560:	b508      	push	{r3, lr}
	ili9225_spi_handler();
  400562:	4b01      	ldr	r3, [pc, #4]	; (400568 <SPI_Handler+0x8>)
  400564:	4798      	blx	r3
  400566:	bd08      	pop	{r3, pc}
  400568:	004001e9 	.word	0x004001e9

0040056c <TC0_Handler>:
void TC0_Handler(void) {
  40056c:	b508      	push	{r3, lr}
	tc_get_status(TC,CHANNEL);
  40056e:	2100      	movs	r1, #0
  400570:	4802      	ldr	r0, [pc, #8]	; (40057c <TC0_Handler+0x10>)
  400572:	4b03      	ldr	r3, [pc, #12]	; (400580 <TC0_Handler+0x14>)
  400574:	4798      	blx	r3
	vAddSensorCounter();
  400576:	4b03      	ldr	r3, [pc, #12]	; (400584 <TC0_Handler+0x18>)
  400578:	4798      	blx	r3
  40057a:	bd08      	pop	{r3, pc}
  40057c:	40010000 	.word	0x40010000
  400580:	00400235 	.word	0x00400235
  400584:	004004b9 	.word	0x004004b9

00400588 <TC1_Handler>:
void TC1_Handler(void) {
  400588:	b508      	push	{r3, lr}
	tc_get_status(TC_SENSOR,CHANNEL_SENSOR);	
  40058a:	2101      	movs	r1, #1
  40058c:	4804      	ldr	r0, [pc, #16]	; (4005a0 <TC1_Handler+0x18>)
  40058e:	4b05      	ldr	r3, [pc, #20]	; (4005a4 <TC1_Handler+0x1c>)
  400590:	4798      	blx	r3
	vAddSensorCounter();
  400592:	4b05      	ldr	r3, [pc, #20]	; (4005a8 <TC1_Handler+0x20>)
  400594:	4798      	blx	r3
	puts("Contando\r\n");
  400596:	4805      	ldr	r0, [pc, #20]	; (4005ac <TC1_Handler+0x24>)
  400598:	4b05      	ldr	r3, [pc, #20]	; (4005b0 <TC1_Handler+0x28>)
  40059a:	4798      	blx	r3
  40059c:	bd08      	pop	{r3, pc}
  40059e:	bf00      	nop
  4005a0:	40014000 	.word	0x40014000
  4005a4:	00400235 	.word	0x00400235
  4005a8:	004004b9 	.word	0x004004b9
  4005ac:	00404388 	.word	0x00404388
  4005b0:	00401775 	.word	0x00401775

004005b4 <vConfigureTimer>:
void vConfigureTimer() {
  4005b4:	b530      	push	{r4, r5, lr}
  4005b6:	b085      	sub	sp, #20
	pmc_enable_periph_clk(ID_TC);
  4005b8:	2017      	movs	r0, #23
  4005ba:	4b1b      	ldr	r3, [pc, #108]	; (400628 <vConfigureTimer+0x74>)
  4005bc:	4798      	blx	r3
	tc_find_mck_divisor(TC_FREQ,ul_sysclk,&ul_div,&ul_tcclk,ul_sysclk);
  4005be:	4c1b      	ldr	r4, [pc, #108]	; (40062c <vConfigureTimer+0x78>)
  4005c0:	9400      	str	r4, [sp, #0]
  4005c2:	ab03      	add	r3, sp, #12
  4005c4:	aa02      	add	r2, sp, #8
  4005c6:	4621      	mov	r1, r4
  4005c8:	4819      	ldr	r0, [pc, #100]	; (400630 <vConfigureTimer+0x7c>)
  4005ca:	4d1a      	ldr	r5, [pc, #104]	; (400634 <vConfigureTimer+0x80>)
  4005cc:	47a8      	blx	r5
	tc_init(TC,CHANNEL,TC_CMR_CPCTRG|ul_tcclk);
  4005ce:	4d1a      	ldr	r5, [pc, #104]	; (400638 <vConfigureTimer+0x84>)
  4005d0:	9a03      	ldr	r2, [sp, #12]
  4005d2:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
  4005d6:	2100      	movs	r1, #0
  4005d8:	4628      	mov	r0, r5
  4005da:	4b18      	ldr	r3, [pc, #96]	; (40063c <vConfigureTimer+0x88>)
  4005dc:	4798      	blx	r3
	RC = (ul_sysclk/ul_div)/TC_FREQ;
  4005de:	9a02      	ldr	r2, [sp, #8]
  4005e0:	fbb4 f2f2 	udiv	r2, r4, r2
  4005e4:	0952      	lsrs	r2, r2, #5
  4005e6:	4c16      	ldr	r4, [pc, #88]	; (400640 <vConfigureTimer+0x8c>)
  4005e8:	fba4 3202 	umull	r3, r2, r4, r2
    tc_write_rc(TC,CHANNEL,RC);
  4005ec:	09d2      	lsrs	r2, r2, #7
  4005ee:	2100      	movs	r1, #0
  4005f0:	4628      	mov	r0, r5
  4005f2:	4b14      	ldr	r3, [pc, #80]	; (400644 <vConfigureTimer+0x90>)
  4005f4:	4798      	blx	r3
	tc_enable_interrupt(TC,CHANNEL,TC_IER_CPCS);
  4005f6:	2210      	movs	r2, #16
  4005f8:	2100      	movs	r1, #0
  4005fa:	4628      	mov	r0, r5
  4005fc:	4b12      	ldr	r3, [pc, #72]	; (400648 <vConfigureTimer+0x94>)
  4005fe:	4798      	blx	r3
__STATIC_INLINE void NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
  if(IRQn < 0) {
    SCB->SHP[((uint32_t)(IRQn) & 0xF)-4] = ((priority << (8 - __NVIC_PRIO_BITS)) & 0xff); } /* set Priority for Cortex-M  System Interrupts */
  else {
    NVIC->IP[(uint32_t)(IRQn)] = ((priority << (8 - __NVIC_PRIO_BITS)) & 0xff);    }        /* set Priority for device specific Interrupts  */
  400600:	4b12      	ldr	r3, [pc, #72]	; (40064c <vConfigureTimer+0x98>)
  400602:	2230      	movs	r2, #48	; 0x30
  400604:	f883 2318 	strb.w	r2, [r3, #792]	; 0x318
  NVIC->ISER[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); /* enable interrupt */
  400608:	f44f 0200 	mov.w	r2, #8388608	; 0x800000
  40060c:	601a      	str	r2, [r3, #0]
	puts("Timer Configurado para 100ms\r\n");
  40060e:	4810      	ldr	r0, [pc, #64]	; (400650 <vConfigureTimer+0x9c>)
  400610:	4c10      	ldr	r4, [pc, #64]	; (400654 <vConfigureTimer+0xa0>)
  400612:	47a0      	blx	r4
	puts("Timer Configurado para 10us\r\n");
  400614:	4810      	ldr	r0, [pc, #64]	; (400658 <vConfigureTimer+0xa4>)
  400616:	47a0      	blx	r4
	tc_start(TC,CHANNEL);
  400618:	2100      	movs	r1, #0
  40061a:	4628      	mov	r0, r5
  40061c:	4b0f      	ldr	r3, [pc, #60]	; (40065c <vConfigureTimer+0xa8>)
  40061e:	4798      	blx	r3
	vReadSensor();
  400620:	4b0f      	ldr	r3, [pc, #60]	; (400660 <vConfigureTimer+0xac>)
  400622:	4798      	blx	r3
}
  400624:	b005      	add	sp, #20
  400626:	bd30      	pop	{r4, r5, pc}
  400628:	00400e11 	.word	0x00400e11
  40062c:	02dc6c00 	.word	0x02dc6c00
  400630:	000186a0 	.word	0x000186a0
  400634:	0040023d 	.word	0x0040023d
  400638:	40010000 	.word	0x40010000
  40063c:	00400205 	.word	0x00400205
  400640:	0a7c5ac5 	.word	0x0a7c5ac5
  400644:	00400225 	.word	0x00400225
  400648:	0040022d 	.word	0x0040022d
  40064c:	e000e100 	.word	0xe000e100
  400650:	004043b0 	.word	0x004043b0
  400654:	00401775 	.word	0x00401775
  400658:	004043d0 	.word	0x004043d0
  40065c:	0040021d 	.word	0x0040021d
  400660:	00400305 	.word	0x00400305

00400664 <vConfigureSensorISR>:
}


void vConfigureSensorISR() {
  400664:	b530      	push	{r4, r5, lr}
  400666:	b083      	sub	sp, #12
	puts("Configuracao Sensor ISR \r\n");
  400668:	4813      	ldr	r0, [pc, #76]	; (4006b8 <vConfigureSensorISR+0x54>)
  40066a:	4b14      	ldr	r3, [pc, #80]	; (4006bc <vConfigureSensorISR+0x58>)
  40066c:	4798      	blx	r3
	/* Configuracao da ISR no PIO_ECHO do Sensor */
	
	// Descomente essas linhas para ativar a interrupcao do Sensor
	// OBS: Altere o PIO_ECHO para um PIO apropriado
	
	pio_set_input(PIOA, PIO_ECHO, PIO_DEBOUNCE);
  40066e:	4c14      	ldr	r4, [pc, #80]	; (4006c0 <vConfigureSensorISR+0x5c>)
  400670:	2208      	movs	r2, #8
  400672:	f44f 4100 	mov.w	r1, #32768	; 0x8000
  400676:	4620      	mov	r0, r4
  400678:	4b12      	ldr	r3, [pc, #72]	; (4006c4 <vConfigureSensorISR+0x60>)
  40067a:	4798      	blx	r3
	pio_pull_down(PIOA,PIO_ECHO,1);
  40067c:	2201      	movs	r2, #1
  40067e:	f44f 4100 	mov.w	r1, #32768	; 0x8000
  400682:	4620      	mov	r0, r4
  400684:	4b10      	ldr	r3, [pc, #64]	; (4006c8 <vConfigureSensorISR+0x64>)
  400686:	4798      	blx	r3
	//pio_set_input(PIOA, PIO_ECHO, PIO_PULLUP | PIO_DEBOUNCE);
	pio_handler_set(PIOA,ID_PIOA,PIO_ECHO,PIO_IT_RISE_EDGE,vSensorISR);
  400688:	4b10      	ldr	r3, [pc, #64]	; (4006cc <vConfigureSensorISR+0x68>)
  40068a:	9300      	str	r3, [sp, #0]
  40068c:	2370      	movs	r3, #112	; 0x70
  40068e:	f44f 4200 	mov.w	r2, #32768	; 0x8000
  400692:	210b      	movs	r1, #11
  400694:	4620      	mov	r0, r4
  400696:	4d0e      	ldr	r5, [pc, #56]	; (4006d0 <vConfigureSensorISR+0x6c>)
  400698:	47a8      	blx	r5
	pio_enable_interrupt(PIOA,PIO_ECHO);
  40069a:	f44f 4100 	mov.w	r1, #32768	; 0x8000
  40069e:	4620      	mov	r0, r4
  4006a0:	4b0c      	ldr	r3, [pc, #48]	; (4006d4 <vConfigureSensorISR+0x70>)
  4006a2:	4798      	blx	r3
    NVIC->IP[(uint32_t)(IRQn)] = ((priority << (8 - __NVIC_PRIO_BITS)) & 0xff);    }        /* set Priority for device specific Interrupts  */
  4006a4:	4b0c      	ldr	r3, [pc, #48]	; (4006d8 <vConfigureSensorISR+0x74>)
  4006a6:	2210      	movs	r2, #16
  4006a8:	f883 230b 	strb.w	r2, [r3, #779]	; 0x30b
  NVIC->ISER[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); /* enable interrupt */
  4006ac:	f44f 6200 	mov.w	r2, #2048	; 0x800
  4006b0:	601a      	str	r2, [r3, #0]
	NVIC_SetPriority(PIOA_IRQn, SENSOR_PRIORITY);
	NVIC_EnableIRQ(PIOA_IRQn);

	// como fazer o output ??
	//pio_set_output(PIOA, PIO_TRIGGER, 0,1,1);
}
  4006b2:	b003      	add	sp, #12
  4006b4:	bd30      	pop	{r4, r5, pc}
  4006b6:	bf00      	nop
  4006b8:	00404394 	.word	0x00404394
  4006bc:	00401775 	.word	0x00401775
  4006c0:	400e0e00 	.word	0x400e0e00
  4006c4:	00400941 	.word	0x00400941
  4006c8:	00400999 	.word	0x00400999
  4006cc:	00400471 	.word	0x00400471
  4006d0:	00400c7d 	.word	0x00400c7d
  4006d4:	004009d5 	.word	0x004009d5
  4006d8:	e000e100 	.word	0xe000e100

004006dc <vPWMUpdateDuty>:
	PWM->PWM_ENA = PWM_ENA_CHID0;

}


void vPWMUpdateDuty (unsigned int duty) {
  4006dc:	b570      	push	{r4, r5, r6, lr}
  4006de:	4604      	mov	r4, r0
	unsigned int uiD = 800;
	unsigned int DD = uiD * duty;
  4006e0:	f44f 7348 	mov.w	r3, #800	; 0x320
  4006e4:	fb03 f300 	mul.w	r3, r3, r0
	float d = PWM_PERIOD * (duty/100);

	PWM->PWM_CH_NUM[0].PWM_CDTY = PWM_PERIOD - DD; //PWM_PERIOD * (duty/100);
  4006e8:	f64b 3580 	movw	r5, #48000	; 0xbb80
  4006ec:	1ae9      	subs	r1, r5, r3
  4006ee:	4a0c      	ldr	r2, [pc, #48]	; (400720 <vPWMUpdateDuty+0x44>)
  4006f0:	f8c2 1204 	str.w	r1, [r2, #516]	; 0x204

	printf("Period: %u // duty: %u // value: %u\r\n", PWM_PERIOD,duty,DD);
  4006f4:	4602      	mov	r2, r0
  4006f6:	4629      	mov	r1, r5
  4006f8:	480a      	ldr	r0, [pc, #40]	; (400724 <vPWMUpdateDuty+0x48>)
  4006fa:	4e0b      	ldr	r6, [pc, #44]	; (400728 <vPWMUpdateDuty+0x4c>)
  4006fc:	47b0      	blx	r6
	float d = PWM_PERIOD * (duty/100);
  4006fe:	480b      	ldr	r0, [pc, #44]	; (40072c <vPWMUpdateDuty+0x50>)
  400700:	fba0 3004 	umull	r3, r0, r0, r4
  400704:	0940      	lsrs	r0, r0, #5
  400706:	fb05 f000 	mul.w	r0, r5, r0
  40070a:	4b09      	ldr	r3, [pc, #36]	; (400730 <vPWMUpdateDuty+0x54>)
  40070c:	4798      	blx	r3
	printf("PWM Update: %u // %f\r\n", duty, d);
  40070e:	4b09      	ldr	r3, [pc, #36]	; (400734 <vPWMUpdateDuty+0x58>)
  400710:	4798      	blx	r3
  400712:	4602      	mov	r2, r0
  400714:	460b      	mov	r3, r1
  400716:	4621      	mov	r1, r4
  400718:	4807      	ldr	r0, [pc, #28]	; (400738 <vPWMUpdateDuty+0x5c>)
  40071a:	47b0      	blx	r6
  40071c:	bd70      	pop	{r4, r5, r6, pc}
  40071e:	bf00      	nop
  400720:	40020000 	.word	0x40020000
  400724:	004043f0 	.word	0x004043f0
  400728:	00401649 	.word	0x00401649
  40072c:	51eb851f 	.word	0x51eb851f
  400730:	00401549 	.word	0x00401549
  400734:	00401335 	.word	0x00401335
  400738:	00404418 	.word	0x00404418

0040073c <PWM_Handler>:
}

// Descomente a funcao de baixo para ativar a interrupcao do PWM

void PWM_Handler(void) {
  40073c:	b510      	push	{r4, lr}
	uint32_t events = pwm_channel_get_interrupt_status(PWM);
  40073e:	4807      	ldr	r0, [pc, #28]	; (40075c <PWM_Handler+0x20>)
  400740:	4b07      	ldr	r3, [pc, #28]	; (400760 <PWM_Handler+0x24>)
  400742:	4798      	blx	r3
	gpio_toggle_pin(LED1_GPIO);
  400744:	202e      	movs	r0, #46	; 0x2e
  400746:	4b07      	ldr	r3, [pc, #28]	; (400764 <PWM_Handler+0x28>)
  400748:	4798      	blx	r3
	vPWMUpdateDuty(btn_duty);
  40074a:	4c07      	ldr	r4, [pc, #28]	; (400768 <PWM_Handler+0x2c>)
  40074c:	6820      	ldr	r0, [r4, #0]
  40074e:	4b07      	ldr	r3, [pc, #28]	; (40076c <PWM_Handler+0x30>)
  400750:	4798      	blx	r3
	printf("PWM Handler: %u\r\n", btn_duty);
  400752:	6821      	ldr	r1, [r4, #0]
  400754:	4806      	ldr	r0, [pc, #24]	; (400770 <PWM_Handler+0x34>)
  400756:	4b07      	ldr	r3, [pc, #28]	; (400774 <PWM_Handler+0x38>)
  400758:	4798      	blx	r3
  40075a:	bd10      	pop	{r4, pc}
  40075c:	40020000 	.word	0x40020000
  400760:	00400201 	.word	0x00400201
  400764:	00400a15 	.word	0x00400a15
  400768:	200000f0 	.word	0x200000f0
  40076c:	004006dd 	.word	0x004006dd
  400770:	00404374 	.word	0x00404374
  400774:	00401649 	.word	0x00401649

00400778 <sysclk_init>:
{
}
#endif // CONFIG_USBCLK_SOURCE

void sysclk_init(void)
{
  400778:	b510      	push	{r4, lr}
	/* Set flash wait state to max in case the below clock switching. */
	system_init_flash(CHIP_FREQ_CPU_MAX);
  40077a:	480e      	ldr	r0, [pc, #56]	; (4007b4 <sysclk_init+0x3c>)
  40077c:	4b0e      	ldr	r3, [pc, #56]	; (4007b8 <sysclk_init+0x40>)
  40077e:	4798      	blx	r3
		pmc_switch_mainck_to_fastrc(CKGR_MOR_MOSCRCF_12_MHz);
		break;


	case OSC_MAINCK_XTAL:
		pmc_switch_mainck_to_xtal(PMC_OSC_XTAL,
  400780:	213e      	movs	r1, #62	; 0x3e
  400782:	2000      	movs	r0, #0
  400784:	4b0d      	ldr	r3, [pc, #52]	; (4007bc <sysclk_init+0x44>)
  400786:	4798      	blx	r3
	case OSC_MAINCK_4M_RC:
	case OSC_MAINCK_8M_RC:
	case OSC_MAINCK_12M_RC:
	case OSC_MAINCK_XTAL:
	case OSC_MAINCK_BYPASS:
		return pmc_osc_is_ready_mainck();
  400788:	4c0d      	ldr	r4, [pc, #52]	; (4007c0 <sysclk_init+0x48>)
  40078a:	47a0      	blx	r4
 *
 * \param id A number identifying the oscillator to wait for.
 */
static inline void osc_wait_ready(uint8_t id)
{
	while (!osc_is_ready(id)) {
  40078c:	2800      	cmp	r0, #0
  40078e:	d0fc      	beq.n	40078a <sysclk_init+0x12>
static inline void pll_enable(const struct pll_config *p_cfg, uint32_t ul_pll_id)
{
	Assert(ul_pll_id < NR_PLLS);

	if (ul_pll_id == PLLA_ID) {
		pmc_disable_pllack(); // Always stop PLL first!
  400790:	4b0c      	ldr	r3, [pc, #48]	; (4007c4 <sysclk_init+0x4c>)
  400792:	4798      	blx	r3
		PMC->CKGR_PLLAR = CKGR_PLLAR_ONE | p_cfg->ctrl;
  400794:	4a0c      	ldr	r2, [pc, #48]	; (4007c8 <sysclk_init+0x50>)
  400796:	4b0d      	ldr	r3, [pc, #52]	; (4007cc <sysclk_init+0x54>)
  400798:	629a      	str	r2, [r3, #40]	; 0x28
static inline uint32_t pll_is_locked(uint32_t ul_pll_id)
{
	Assert(ul_pll_id < NR_PLLS);

	if (ul_pll_id == PLLA_ID) {
		return pmc_is_locked_pllack();
  40079a:	4c0d      	ldr	r4, [pc, #52]	; (4007d0 <sysclk_init+0x58>)
  40079c:	47a0      	blx	r4
 */
static inline int pll_wait_for_lock(unsigned int pll_id)
{
	Assert(pll_id < NR_PLLS);

	while (!pll_is_locked(pll_id)) {
  40079e:	2800      	cmp	r0, #0
  4007a0:	d0fc      	beq.n	40079c <sysclk_init+0x24>

		pll_enable_source(CONFIG_PLL0_SOURCE);
		pll_config_defaults(&pllcfg, 0);
		pll_enable(&pllcfg, 0);
		pll_wait_for_lock(0);
		pmc_switch_mck_to_pllack(CONFIG_SYSCLK_PRES);
  4007a2:	2010      	movs	r0, #16
  4007a4:	4b0b      	ldr	r3, [pc, #44]	; (4007d4 <sysclk_init+0x5c>)
  4007a6:	4798      	blx	r3
	}
#endif

	/* Update the SystemFrequency variable */
	SystemCoreClockUpdate();
  4007a8:	4b0b      	ldr	r3, [pc, #44]	; (4007d8 <sysclk_init+0x60>)
  4007aa:	4798      	blx	r3

	/* Set a flash wait state depending on the new cpu frequency */
	system_init_flash(sysclk_get_cpu_hz());
  4007ac:	4801      	ldr	r0, [pc, #4]	; (4007b4 <sysclk_init+0x3c>)
  4007ae:	4b02      	ldr	r3, [pc, #8]	; (4007b8 <sysclk_init+0x40>)
  4007b0:	4798      	blx	r3
  4007b2:	bd10      	pop	{r4, pc}
  4007b4:	02dc6c00 	.word	0x02dc6c00
  4007b8:	200000ad 	.word	0x200000ad
  4007bc:	00400d8d 	.word	0x00400d8d
  4007c0:	00400de1 	.word	0x00400de1
  4007c4:	00400df1 	.word	0x00400df1
  4007c8:	20073f01 	.word	0x20073f01
  4007cc:	400e0400 	.word	0x400e0400
  4007d0:	00400e01 	.word	0x00400e01
  4007d4:	00400d29 	.word	0x00400d29
  4007d8:	00400ed9 	.word	0x00400ed9

004007dc <board_init>:
#include "conf_board.h"
#include "gpio.h"
#include "ioport.h"

void board_init(void)
{
  4007dc:	b510      	push	{r4, lr}
#ifndef CONF_BOARD_KEEP_WATCHDOG_AT_INIT
	/* Disable the watchdog */
	WDT->WDT_MR = WDT_MR_WDDIS;
  4007de:	f44f 4200 	mov.w	r2, #32768	; 0x8000
  4007e2:	4b2c      	ldr	r3, [pc, #176]	; (400894 <board_init+0xb8>)
  4007e4:	605a      	str	r2, [r3, #4]
  4007e6:	200b      	movs	r0, #11
  4007e8:	4c2b      	ldr	r4, [pc, #172]	; (400898 <board_init+0xbc>)
  4007ea:	47a0      	blx	r4
  4007ec:	200c      	movs	r0, #12
  4007ee:	47a0      	blx	r4
  4007f0:	200d      	movs	r0, #13
  4007f2:	47a0      	blx	r4
	 * Here IOPORT must be initialized for others to use before setting up IO.
	 */
	ioport_init();

	/* Configure LED pins */
	gpio_configure_pin(LED0_GPIO, LED0_FLAGS);
  4007f4:	f04f 5160 	mov.w	r1, #939524096	; 0x38000000
  4007f8:	2017      	movs	r0, #23
  4007fa:	4c28      	ldr	r4, [pc, #160]	; (40089c <board_init+0xc0>)
  4007fc:	47a0      	blx	r4
	gpio_configure_pin(LED1_GPIO, LED1_FLAGS);
  4007fe:	f04f 5160 	mov.w	r1, #939524096	; 0x38000000
  400802:	202e      	movs	r0, #46	; 0x2e
  400804:	47a0      	blx	r4

	/* Configure Push Button pins */
	gpio_configure_pin(GPIO_PUSH_BUTTON_1, GPIO_PUSH_BUTTON_1_FLAGS);
  400806:	4926      	ldr	r1, [pc, #152]	; (4008a0 <board_init+0xc4>)
  400808:	200f      	movs	r0, #15
  40080a:	47a0      	blx	r4
	gpio_configure_pin(GPIO_PUSH_BUTTON_2, GPIO_PUSH_BUTTON_2_FLAGS);
  40080c:	4925      	ldr	r1, [pc, #148]	; (4008a4 <board_init+0xc8>)
  40080e:	2010      	movs	r0, #16
  400810:	47a0      	blx	r4

#ifdef CONF_BOARD_UART_CONSOLE
	/* Configure UART pins */
	gpio_configure_group(PINS_UART0_PIO, PINS_UART0, PINS_UART0_FLAGS);
  400812:	f04f 6200 	mov.w	r2, #134217728	; 0x8000000
  400816:	f44f 61c0 	mov.w	r1, #1536	; 0x600
  40081a:	4823      	ldr	r0, [pc, #140]	; (4008a8 <board_init+0xcc>)
  40081c:	4b23      	ldr	r3, [pc, #140]	; (4008ac <board_init+0xd0>)
  40081e:	4798      	blx	r3
#endif

	/* Configure ADC example pins */
#ifdef CONF_BOARD_ADC
	/* TC TIOA configuration */
	gpio_configure_pin(PIN_TC0_TIOA0,PIN_TC0_TIOA0_FLAGS);
  400820:	f04f 5180 	mov.w	r1, #268435456	; 0x10000000
  400824:	2000      	movs	r0, #0
  400826:	47a0      	blx	r4

	/* ADC Trigger configuration */
	gpio_configure_pin(PINS_ADC_TRIG, PINS_ADC_TRIG_FLAG);
  400828:	f04f 5180 	mov.w	r1, #268435456	; 0x10000000
  40082c:	2008      	movs	r0, #8
  40082e:	47a0      	blx	r4
		gpio_configure_pin(TWI1_CLK_GPIO, TWI1_CLK_FLAGS);
#endif

	/* Configure SPI pins */
#if (defined CONF_BOARD_SPI) || (defined CONF_BOARD_SD_MMC_SPI)
	gpio_configure_pin(SPI_MISO_GPIO, SPI_MISO_FLAGS);
  400830:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
  400834:	200c      	movs	r0, #12
  400836:	47a0      	blx	r4
	gpio_configure_pin(SPI_MOSI_GPIO, SPI_MOSI_FLAGS);
  400838:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
  40083c:	200d      	movs	r0, #13
  40083e:	47a0      	blx	r4
	gpio_configure_pin(SPI_SPCK_GPIO, SPI_SPCK_FLAGS);
  400840:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
  400844:	200e      	movs	r0, #14
  400846:	47a0      	blx	r4

	#ifdef CONF_BOARD_SPI_NPCS1
		#if defined(CONF_BOARD_SPI_NPCS1_GPIO) && defined(CONF_BOARD_SPI_NPCS1_FLAGS)
			gpio_configure_pin(CONF_BOARD_SPI_NPCS1_GPIO, CONF_BOARD_SPI_NPCS1_FLAGS);
		#else
			gpio_configure_pin(SPI_NPCS1_PA31_GPIO, SPI_NPCS1_PA31_FLAGS);
  400848:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
  40084c:	201f      	movs	r0, #31
  40084e:	47a0      	blx	r4

	#ifdef CONF_BOARD_SPI_NPCS2
		#if defined(CONF_BOARD_SPI_NPCS2_GPIO) && defined(CONF_BOARD_SPI_NPCS2_FLAGS)
			gpio_configure_pin(CONF_BOARD_SPI_NPCS2_GPIO, CONF_BOARD_SPI_NPCS2_FLAGS);
		#else
			gpio_configure_pin(SPI_NPCS2_PA30_GPIO, SPI_NPCS2_PA30_FLAGS);
  400850:	f04f 5180 	mov.w	r1, #268435456	; 0x10000000
  400854:	201e      	movs	r0, #30
  400856:	47a0      	blx	r4
	gpio_set_pin_low(PIN_RE_IDX);
#endif

#ifdef CONF_BOARD_ILI9225
	/* Configure SPI LCD control pin */
	gpio_configure_pin(SPI_MISO_GPIO, SPI_MISO_FLAGS);
  400858:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
  40085c:	200c      	movs	r0, #12
  40085e:	47a0      	blx	r4
	gpio_configure_pin(SPI_MOSI_GPIO, SPI_MOSI_FLAGS);
  400860:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
  400864:	200d      	movs	r0, #13
  400866:	47a0      	blx	r4
	gpio_configure_pin(SPI_SPCK_GPIO, SPI_SPCK_FLAGS);
  400868:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
  40086c:	200e      	movs	r0, #14
  40086e:	47a0      	blx	r4
	gpio_configure_pin(SPI_NPCS2_PA30_GPIO, SPI_NPCS2_PA30_FLAGS);
  400870:	f04f 5180 	mov.w	r1, #268435456	; 0x10000000
  400874:	201e      	movs	r0, #30
  400876:	47a0      	blx	r4
	gpio_configure_pin(BOARD_ILI9225_RS_GPIO, BOARD_ILI9225_RS_FLAGS);
  400878:	f04f 5160 	mov.w	r1, #939524096	; 0x38000000
  40087c:	201c      	movs	r0, #28
  40087e:	47a0      	blx	r4
	gpio_configure_pin(BOARD_ILI9225_RSTN_GPIO, BOARD_ILI9225_RSTN_FLAGS);
  400880:	f04f 5160 	mov.w	r1, #939524096	; 0x38000000
  400884:	201d      	movs	r0, #29
  400886:	47a0      	blx	r4
#endif

#ifdef CONF_BOARD_AAT3193
	/* Configure Backlight control pin */
	gpio_configure_pin(BOARD_AAT31XX_SET_GPIO, BOARD_AAT31XX_SET_FLAGS);
  400888:	f04f 5160 	mov.w	r1, #939524096	; 0x38000000
  40088c:	204d      	movs	r0, #77	; 0x4d
  40088e:	47a0      	blx	r4
  400890:	bd10      	pop	{r4, pc}
  400892:	bf00      	nop
  400894:	400e1450 	.word	0x400e1450
  400898:	00400e11 	.word	0x00400e11
  40089c:	00400a35 	.word	0x00400a35
  4008a0:	28000079 	.word	0x28000079
  4008a4:	28000059 	.word	0x28000059
  4008a8:	400e0e00 	.word	0x400e0e00
  4008ac:	00400b55 	.word	0x00400b55

004008b0 <pio_set_peripheral>:
		const uint32_t ul_mask)
{
	uint32_t ul_sr;

	/* Disable interrupts on the pin(s) */
	p_pio->PIO_IDR = ul_mask;
  4008b0:	6442      	str	r2, [r0, #68]	; 0x44

#if (SAM3S || SAM3N || SAM4S || SAM4E || SAM4N || SAM4C || SAMG || SAM4CP || SAM4CM || SAMV71 || SAMV70 || SAME70 || SAMS70)
	switch (ul_type) {
  4008b2:	f1b1 5fc0 	cmp.w	r1, #402653184	; 0x18000000
  4008b6:	d039      	beq.n	40092c <pio_set_peripheral+0x7c>
  4008b8:	d813      	bhi.n	4008e2 <pio_set_peripheral+0x32>
  4008ba:	f1b1 6f00 	cmp.w	r1, #134217728	; 0x8000000
  4008be:	d025      	beq.n	40090c <pio_set_peripheral+0x5c>
  4008c0:	f1b1 5f80 	cmp.w	r1, #268435456	; 0x10000000
  4008c4:	d10a      	bne.n	4008dc <pio_set_peripheral+0x2c>

		ul_sr = p_pio->PIO_ABCDSR[1];
		p_pio->PIO_ABCDSR[1] &= (~ul_mask & ul_sr);
		break;
	case PIO_PERIPH_B:
		ul_sr = p_pio->PIO_ABCDSR[0];
  4008c6:	6f03      	ldr	r3, [r0, #112]	; 0x70
		p_pio->PIO_ABCDSR[0] = (ul_mask | ul_sr);
  4008c8:	4313      	orrs	r3, r2
  4008ca:	6703      	str	r3, [r0, #112]	; 0x70

		ul_sr = p_pio->PIO_ABCDSR[1];
  4008cc:	6f43      	ldr	r3, [r0, #116]	; 0x74
		p_pio->PIO_ABCDSR[1] &= (~ul_mask & ul_sr);
  4008ce:	6f41      	ldr	r1, [r0, #116]	; 0x74
  4008d0:	400b      	ands	r3, r1
  4008d2:	ea23 0302 	bic.w	r3, r3, r2
  4008d6:	6743      	str	r3, [r0, #116]	; 0x74
#else
#error "Unsupported device"
#endif

	/* Remove the pins from under the control of PIO */
	p_pio->PIO_PDR = ul_mask;
  4008d8:	6042      	str	r2, [r0, #4]
  4008da:	4770      	bx	lr
	switch (ul_type) {
  4008dc:	2900      	cmp	r1, #0
  4008de:	d1fb      	bne.n	4008d8 <pio_set_peripheral+0x28>
  4008e0:	4770      	bx	lr
  4008e2:	f1b1 5f20 	cmp.w	r1, #671088640	; 0x28000000
  4008e6:	d020      	beq.n	40092a <pio_set_peripheral+0x7a>
  4008e8:	d809      	bhi.n	4008fe <pio_set_peripheral+0x4e>
  4008ea:	f1b1 5f00 	cmp.w	r1, #536870912	; 0x20000000
  4008ee:	d1f3      	bne.n	4008d8 <pio_set_peripheral+0x28>
		ul_sr = p_pio->PIO_ABCDSR[0];
  4008f0:	6f03      	ldr	r3, [r0, #112]	; 0x70
		p_pio->PIO_ABCDSR[0] = (ul_mask | ul_sr);
  4008f2:	4313      	orrs	r3, r2
  4008f4:	6703      	str	r3, [r0, #112]	; 0x70
		ul_sr = p_pio->PIO_ABCDSR[1];
  4008f6:	6f43      	ldr	r3, [r0, #116]	; 0x74
		p_pio->PIO_ABCDSR[1] = (ul_mask | ul_sr);
  4008f8:	4313      	orrs	r3, r2
  4008fa:	6743      	str	r3, [r0, #116]	; 0x74
		break;
  4008fc:	e7ec      	b.n	4008d8 <pio_set_peripheral+0x28>
	switch (ul_type) {
  4008fe:	f1b1 5f40 	cmp.w	r1, #805306368	; 0x30000000
  400902:	d012      	beq.n	40092a <pio_set_peripheral+0x7a>
  400904:	f1b1 5f60 	cmp.w	r1, #939524096	; 0x38000000
  400908:	d00f      	beq.n	40092a <pio_set_peripheral+0x7a>
  40090a:	e7e5      	b.n	4008d8 <pio_set_peripheral+0x28>
{
  40090c:	b410      	push	{r4}
		ul_sr = p_pio->PIO_ABCDSR[0];
  40090e:	6f01      	ldr	r1, [r0, #112]	; 0x70
		p_pio->PIO_ABCDSR[0] &= (~ul_mask & ul_sr);
  400910:	6f04      	ldr	r4, [r0, #112]	; 0x70
  400912:	43d3      	mvns	r3, r2
  400914:	4021      	ands	r1, r4
  400916:	461c      	mov	r4, r3
  400918:	4019      	ands	r1, r3
  40091a:	6701      	str	r1, [r0, #112]	; 0x70
		ul_sr = p_pio->PIO_ABCDSR[1];
  40091c:	6f43      	ldr	r3, [r0, #116]	; 0x74
		p_pio->PIO_ABCDSR[1] &= (~ul_mask & ul_sr);
  40091e:	6f41      	ldr	r1, [r0, #116]	; 0x74
  400920:	400b      	ands	r3, r1
  400922:	4023      	ands	r3, r4
  400924:	6743      	str	r3, [r0, #116]	; 0x74
	p_pio->PIO_PDR = ul_mask;
  400926:	6042      	str	r2, [r0, #4]
}
  400928:	bc10      	pop	{r4}
  40092a:	4770      	bx	lr
		ul_sr = p_pio->PIO_ABCDSR[0];
  40092c:	6f03      	ldr	r3, [r0, #112]	; 0x70
		p_pio->PIO_ABCDSR[0] &= (~ul_mask & ul_sr);
  40092e:	6f01      	ldr	r1, [r0, #112]	; 0x70
  400930:	400b      	ands	r3, r1
  400932:	ea23 0302 	bic.w	r3, r3, r2
  400936:	6703      	str	r3, [r0, #112]	; 0x70
		ul_sr = p_pio->PIO_ABCDSR[1];
  400938:	6f43      	ldr	r3, [r0, #116]	; 0x74
		p_pio->PIO_ABCDSR[1] = (ul_mask | ul_sr);
  40093a:	4313      	orrs	r3, r2
  40093c:	6743      	str	r3, [r0, #116]	; 0x74
		break;
  40093e:	e7cb      	b.n	4008d8 <pio_set_peripheral+0x28>

00400940 <pio_set_input>:
 * \param p_pio Pointer to a PIO instance.
 * \param ul_mask Interrupt sources bit map.
 */
void pio_disable_interrupt(Pio *p_pio, const uint32_t ul_mask)
{
	p_pio->PIO_IDR = ul_mask;
  400940:	6441      	str	r1, [r0, #68]	; 0x44
	if (ul_pull_up_enable) {
  400942:	f012 0f01 	tst.w	r2, #1
		p_pio->PIO_PUER = ul_mask;
  400946:	bf14      	ite	ne
  400948:	6641      	strne	r1, [r0, #100]	; 0x64
		p_pio->PIO_PUDR = ul_mask;
  40094a:	6601      	streq	r1, [r0, #96]	; 0x60
	if (ul_attribute & (PIO_DEGLITCH | PIO_DEBOUNCE)) {
  40094c:	f012 0f0a 	tst.w	r2, #10
		p_pio->PIO_IFER = ul_mask;
  400950:	bf14      	ite	ne
  400952:	6201      	strne	r1, [r0, #32]
		p_pio->PIO_IFDR = ul_mask;
  400954:	6241      	streq	r1, [r0, #36]	; 0x24
	if (ul_attribute & PIO_DEGLITCH) {
  400956:	f012 0f02 	tst.w	r2, #2
  40095a:	d107      	bne.n	40096c <pio_set_input+0x2c>
		if (ul_attribute & PIO_DEBOUNCE) {
  40095c:	f012 0f08 	tst.w	r2, #8
			p_pio->PIO_IFSCER = ul_mask;
  400960:	bf18      	it	ne
  400962:	f8c0 1084 	strne.w	r1, [r0, #132]	; 0x84
	p_pio->PIO_ODR = ul_mask;
  400966:	6141      	str	r1, [r0, #20]
	p_pio->PIO_PER = ul_mask;
  400968:	6001      	str	r1, [r0, #0]
  40096a:	4770      	bx	lr
		p_pio->PIO_IFSCDR = ul_mask;
  40096c:	f8c0 1080 	str.w	r1, [r0, #128]	; 0x80
  400970:	e7f9      	b.n	400966 <pio_set_input+0x26>

00400972 <pio_set_output>:
{
  400972:	b410      	push	{r4}
  400974:	9c01      	ldr	r4, [sp, #4]
	p_pio->PIO_IDR = ul_mask;
  400976:	6441      	str	r1, [r0, #68]	; 0x44
	if (ul_pull_up_enable) {
  400978:	b944      	cbnz	r4, 40098c <pio_set_output+0x1a>
		p_pio->PIO_PUDR = ul_mask;
  40097a:	6601      	str	r1, [r0, #96]	; 0x60
	if (ul_multidrive_enable) {
  40097c:	b143      	cbz	r3, 400990 <pio_set_output+0x1e>
		p_pio->PIO_MDER = ul_mask;
  40097e:	6501      	str	r1, [r0, #80]	; 0x50
	if (ul_default_level) {
  400980:	b942      	cbnz	r2, 400994 <pio_set_output+0x22>
		p_pio->PIO_CODR = ul_mask;
  400982:	6341      	str	r1, [r0, #52]	; 0x34
	p_pio->PIO_OER = ul_mask;
  400984:	6101      	str	r1, [r0, #16]
	p_pio->PIO_PER = ul_mask;
  400986:	6001      	str	r1, [r0, #0]
}
  400988:	bc10      	pop	{r4}
  40098a:	4770      	bx	lr
		p_pio->PIO_PUER = ul_mask;
  40098c:	6641      	str	r1, [r0, #100]	; 0x64
  40098e:	e7f5      	b.n	40097c <pio_set_output+0xa>
		p_pio->PIO_MDDR = ul_mask;
  400990:	6541      	str	r1, [r0, #84]	; 0x54
  400992:	e7f5      	b.n	400980 <pio_set_output+0xe>
		p_pio->PIO_SODR = ul_mask;
  400994:	6301      	str	r1, [r0, #48]	; 0x30
  400996:	e7f5      	b.n	400984 <pio_set_output+0x12>

00400998 <pio_pull_down>:
	if (ul_pull_down_enable) {
  400998:	b912      	cbnz	r2, 4009a0 <pio_pull_down+0x8>
		p_pio->PIO_PPDDR = ul_mask;
  40099a:	f8c0 1090 	str.w	r1, [r0, #144]	; 0x90
  40099e:	4770      	bx	lr
		p_pio->PIO_PPDER = ul_mask;
  4009a0:	f8c0 1094 	str.w	r1, [r0, #148]	; 0x94
  4009a4:	4770      	bx	lr

004009a6 <pio_configure_interrupt>:
	if (ul_attr & PIO_IT_AIME) {
  4009a6:	f012 0f10 	tst.w	r2, #16
  4009aa:	d010      	beq.n	4009ce <pio_configure_interrupt+0x28>
		p_pio->PIO_AIMER = ul_mask;
  4009ac:	f8c0 10b0 	str.w	r1, [r0, #176]	; 0xb0
		if (ul_attr & PIO_IT_RE_OR_HL) {
  4009b0:	f012 0f20 	tst.w	r2, #32
			p_pio->PIO_REHLSR = ul_mask;
  4009b4:	bf14      	ite	ne
  4009b6:	f8c0 10d4 	strne.w	r1, [r0, #212]	; 0xd4
			p_pio->PIO_FELLSR = ul_mask;
  4009ba:	f8c0 10d0 	streq.w	r1, [r0, #208]	; 0xd0
		if (ul_attr & PIO_IT_EDGE) {
  4009be:	f012 0f40 	tst.w	r2, #64	; 0x40
			p_pio->PIO_ESR = ul_mask;
  4009c2:	bf14      	ite	ne
  4009c4:	f8c0 10c0 	strne.w	r1, [r0, #192]	; 0xc0
			p_pio->PIO_LSR = ul_mask;
  4009c8:	f8c0 10c4 	streq.w	r1, [r0, #196]	; 0xc4
  4009cc:	4770      	bx	lr
		p_pio->PIO_AIMDR = ul_mask;
  4009ce:	f8c0 10b4 	str.w	r1, [r0, #180]	; 0xb4
  4009d2:	4770      	bx	lr

004009d4 <pio_enable_interrupt>:
	p_pio->PIO_IER = ul_mask;
  4009d4:	6401      	str	r1, [r0, #64]	; 0x40
  4009d6:	4770      	bx	lr

004009d8 <pio_get_interrupt_status>:
 *
 * \return The interrupt status value.
 */
uint32_t pio_get_interrupt_status(const Pio *p_pio)
{
	return p_pio->PIO_ISR;
  4009d8:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
}
  4009da:	4770      	bx	lr

004009dc <pio_get_interrupt_mask>:
 *
 * \return The interrupt mask value.
 */
uint32_t pio_get_interrupt_mask(const Pio *p_pio)
{
	return p_pio->PIO_IMR;
  4009dc:	6c80      	ldr	r0, [r0, #72]	; 0x48
}
  4009de:	4770      	bx	lr

004009e0 <pio_set_pin_high>:
		p_pio = PIOC;
	} else {
		p_pio = (Pio *)((uint32_t)PIOA + (PIO_DELTA * (ul_pin >> 5)));
	}
#else
	p_pio = (Pio *)((uint32_t)PIOA + (PIO_DELTA * (ul_pin >> 5)));
  4009e0:	0943      	lsrs	r3, r0, #5
  4009e2:	f503 1300 	add.w	r3, r3, #2097152	; 0x200000
  4009e6:	f203 7307 	addw	r3, r3, #1799	; 0x707
  4009ea:	025b      	lsls	r3, r3, #9
	p_pio->PIO_SODR = 1 << (ul_pin & 0x1F);
  4009ec:	f000 001f 	and.w	r0, r0, #31
  4009f0:	2201      	movs	r2, #1
  4009f2:	fa02 f000 	lsl.w	r0, r2, r0
  4009f6:	6318      	str	r0, [r3, #48]	; 0x30
  4009f8:	4770      	bx	lr

004009fa <pio_set_pin_low>:
	p_pio = (Pio *)((uint32_t)PIOA + (PIO_DELTA * (ul_pin >> 5)));
  4009fa:	0943      	lsrs	r3, r0, #5
  4009fc:	f503 1300 	add.w	r3, r3, #2097152	; 0x200000
  400a00:	f203 7307 	addw	r3, r3, #1799	; 0x707
  400a04:	025b      	lsls	r3, r3, #9
	p_pio->PIO_CODR = 1 << (ul_pin & 0x1F);
  400a06:	f000 001f 	and.w	r0, r0, #31
  400a0a:	2201      	movs	r2, #1
  400a0c:	fa02 f000 	lsl.w	r0, r2, r0
  400a10:	6358      	str	r0, [r3, #52]	; 0x34
  400a12:	4770      	bx	lr

00400a14 <pio_toggle_pin>:
	p_pio = (Pio *)((uint32_t)PIOA + (PIO_DELTA * (ul_pin >> 5)));
  400a14:	0943      	lsrs	r3, r0, #5
  400a16:	f503 1300 	add.w	r3, r3, #2097152	; 0x200000
  400a1a:	f203 7307 	addw	r3, r3, #1799	; 0x707
  400a1e:	025b      	lsls	r3, r3, #9
	if (p_pio->PIO_ODSR & (1 << (ul_pin & 0x1F))) {
  400a20:	6b99      	ldr	r1, [r3, #56]	; 0x38
  400a22:	f000 021f 	and.w	r2, r0, #31
  400a26:	2001      	movs	r0, #1
  400a28:	4090      	lsls	r0, r2
  400a2a:	4201      	tst	r1, r0
		p_pio->PIO_CODR = 1 << (ul_pin & 0x1F);
  400a2c:	bf14      	ite	ne
  400a2e:	6358      	strne	r0, [r3, #52]	; 0x34
		p_pio->PIO_SODR = 1 << (ul_pin & 0x1F);
  400a30:	6318      	streq	r0, [r3, #48]	; 0x30
  400a32:	4770      	bx	lr

00400a34 <pio_configure_pin>:
{
  400a34:	b570      	push	{r4, r5, r6, lr}
  400a36:	b082      	sub	sp, #8
  400a38:	460d      	mov	r5, r1
	p_pio = (Pio *)((uint32_t)PIOA + (PIO_DELTA * (ul_pin >> 5)));
  400a3a:	0943      	lsrs	r3, r0, #5
  400a3c:	f503 1300 	add.w	r3, r3, #2097152	; 0x200000
  400a40:	f203 7307 	addw	r3, r3, #1799	; 0x707
  400a44:	025c      	lsls	r4, r3, #9
	switch (ul_flags & PIO_TYPE_Msk) {
  400a46:	f001 43f0 	and.w	r3, r1, #2013265920	; 0x78000000
  400a4a:	f1b3 5f00 	cmp.w	r3, #536870912	; 0x20000000
  400a4e:	d053      	beq.n	400af8 <pio_configure_pin+0xc4>
  400a50:	d80a      	bhi.n	400a68 <pio_configure_pin+0x34>
  400a52:	f1b3 5f80 	cmp.w	r3, #268435456	; 0x10000000
  400a56:	d02d      	beq.n	400ab4 <pio_configure_pin+0x80>
  400a58:	f1b3 5fc0 	cmp.w	r3, #402653184	; 0x18000000
  400a5c:	d03b      	beq.n	400ad6 <pio_configure_pin+0xa2>
  400a5e:	f1b3 6f00 	cmp.w	r3, #134217728	; 0x8000000
  400a62:	d015      	beq.n	400a90 <pio_configure_pin+0x5c>
		return 0;
  400a64:	2000      	movs	r0, #0
  400a66:	e023      	b.n	400ab0 <pio_configure_pin+0x7c>
	switch (ul_flags & PIO_TYPE_Msk) {
  400a68:	f1b3 5f40 	cmp.w	r3, #805306368	; 0x30000000
  400a6c:	d055      	beq.n	400b1a <pio_configure_pin+0xe6>
  400a6e:	f1b3 5f60 	cmp.w	r3, #939524096	; 0x38000000
  400a72:	d052      	beq.n	400b1a <pio_configure_pin+0xe6>
  400a74:	f1b3 5f20 	cmp.w	r3, #671088640	; 0x28000000
  400a78:	d1f4      	bne.n	400a64 <pio_configure_pin+0x30>
		pio_set_input(p_pio, (1 << (ul_pin & 0x1F)), ul_flags);
  400a7a:	f000 011f 	and.w	r1, r0, #31
  400a7e:	2601      	movs	r6, #1
  400a80:	462a      	mov	r2, r5
  400a82:	fa06 f101 	lsl.w	r1, r6, r1
  400a86:	4620      	mov	r0, r4
  400a88:	4b2f      	ldr	r3, [pc, #188]	; (400b48 <pio_configure_pin+0x114>)
  400a8a:	4798      	blx	r3
	return 1;
  400a8c:	4630      	mov	r0, r6
		break;
  400a8e:	e00f      	b.n	400ab0 <pio_configure_pin+0x7c>
		pio_set_peripheral(p_pio, PIO_PERIPH_A, (1 << (ul_pin & 0x1F)));
  400a90:	f000 001f 	and.w	r0, r0, #31
  400a94:	2601      	movs	r6, #1
  400a96:	4086      	lsls	r6, r0
  400a98:	4632      	mov	r2, r6
  400a9a:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
  400a9e:	4620      	mov	r0, r4
  400aa0:	4b2a      	ldr	r3, [pc, #168]	; (400b4c <pio_configure_pin+0x118>)
  400aa2:	4798      	blx	r3
	if (ul_pull_up_enable) {
  400aa4:	f015 0f01 	tst.w	r5, #1
		p_pio->PIO_PUER = ul_mask;
  400aa8:	bf14      	ite	ne
  400aaa:	6666      	strne	r6, [r4, #100]	; 0x64
		p_pio->PIO_PUDR = ul_mask;
  400aac:	6626      	streq	r6, [r4, #96]	; 0x60
	return 1;
  400aae:	2001      	movs	r0, #1
}
  400ab0:	b002      	add	sp, #8
  400ab2:	bd70      	pop	{r4, r5, r6, pc}
		pio_set_peripheral(p_pio, PIO_PERIPH_B, (1 << (ul_pin & 0x1F)));
  400ab4:	f000 001f 	and.w	r0, r0, #31
  400ab8:	2601      	movs	r6, #1
  400aba:	4086      	lsls	r6, r0
  400abc:	4632      	mov	r2, r6
  400abe:	f04f 5180 	mov.w	r1, #268435456	; 0x10000000
  400ac2:	4620      	mov	r0, r4
  400ac4:	4b21      	ldr	r3, [pc, #132]	; (400b4c <pio_configure_pin+0x118>)
  400ac6:	4798      	blx	r3
	if (ul_pull_up_enable) {
  400ac8:	f015 0f01 	tst.w	r5, #1
		p_pio->PIO_PUER = ul_mask;
  400acc:	bf14      	ite	ne
  400ace:	6666      	strne	r6, [r4, #100]	; 0x64
		p_pio->PIO_PUDR = ul_mask;
  400ad0:	6626      	streq	r6, [r4, #96]	; 0x60
	return 1;
  400ad2:	2001      	movs	r0, #1
  400ad4:	e7ec      	b.n	400ab0 <pio_configure_pin+0x7c>
		pio_set_peripheral(p_pio, PIO_PERIPH_C, (1 << (ul_pin & 0x1F)));
  400ad6:	f000 001f 	and.w	r0, r0, #31
  400ada:	2601      	movs	r6, #1
  400adc:	4086      	lsls	r6, r0
  400ade:	4632      	mov	r2, r6
  400ae0:	f04f 51c0 	mov.w	r1, #402653184	; 0x18000000
  400ae4:	4620      	mov	r0, r4
  400ae6:	4b19      	ldr	r3, [pc, #100]	; (400b4c <pio_configure_pin+0x118>)
  400ae8:	4798      	blx	r3
	if (ul_pull_up_enable) {
  400aea:	f015 0f01 	tst.w	r5, #1
		p_pio->PIO_PUER = ul_mask;
  400aee:	bf14      	ite	ne
  400af0:	6666      	strne	r6, [r4, #100]	; 0x64
		p_pio->PIO_PUDR = ul_mask;
  400af2:	6626      	streq	r6, [r4, #96]	; 0x60
	return 1;
  400af4:	2001      	movs	r0, #1
  400af6:	e7db      	b.n	400ab0 <pio_configure_pin+0x7c>
		pio_set_peripheral(p_pio, PIO_PERIPH_D, (1 << (ul_pin & 0x1F)));
  400af8:	f000 001f 	and.w	r0, r0, #31
  400afc:	2601      	movs	r6, #1
  400afe:	4086      	lsls	r6, r0
  400b00:	4632      	mov	r2, r6
  400b02:	f04f 5100 	mov.w	r1, #536870912	; 0x20000000
  400b06:	4620      	mov	r0, r4
  400b08:	4b10      	ldr	r3, [pc, #64]	; (400b4c <pio_configure_pin+0x118>)
  400b0a:	4798      	blx	r3
	if (ul_pull_up_enable) {
  400b0c:	f015 0f01 	tst.w	r5, #1
		p_pio->PIO_PUER = ul_mask;
  400b10:	bf14      	ite	ne
  400b12:	6666      	strne	r6, [r4, #100]	; 0x64
		p_pio->PIO_PUDR = ul_mask;
  400b14:	6626      	streq	r6, [r4, #96]	; 0x60
	return 1;
  400b16:	2001      	movs	r0, #1
  400b18:	e7ca      	b.n	400ab0 <pio_configure_pin+0x7c>
				((ul_flags & PIO_TYPE_PIO_OUTPUT_1)
  400b1a:	f005 5260 	and.w	r2, r5, #939524096	; 0x38000000
		pio_set_output(p_pio, (1 << (ul_pin & 0x1F)),
  400b1e:	f000 011f 	and.w	r1, r0, #31
  400b22:	2601      	movs	r6, #1
  400b24:	ea05 0306 	and.w	r3, r5, r6
  400b28:	9300      	str	r3, [sp, #0]
  400b2a:	f3c5 0380 	ubfx	r3, r5, #2, #1
  400b2e:	f1b2 5f60 	cmp.w	r2, #939524096	; 0x38000000
  400b32:	bf14      	ite	ne
  400b34:	2200      	movne	r2, #0
  400b36:	2201      	moveq	r2, #1
  400b38:	fa06 f101 	lsl.w	r1, r6, r1
  400b3c:	4620      	mov	r0, r4
  400b3e:	4c04      	ldr	r4, [pc, #16]	; (400b50 <pio_configure_pin+0x11c>)
  400b40:	47a0      	blx	r4
	return 1;
  400b42:	4630      	mov	r0, r6
		break;
  400b44:	e7b4      	b.n	400ab0 <pio_configure_pin+0x7c>
  400b46:	bf00      	nop
  400b48:	00400941 	.word	0x00400941
  400b4c:	004008b1 	.word	0x004008b1
  400b50:	00400973 	.word	0x00400973

00400b54 <pio_configure_pin_group>:
{
  400b54:	b570      	push	{r4, r5, r6, lr}
  400b56:	b082      	sub	sp, #8
  400b58:	4605      	mov	r5, r0
  400b5a:	460e      	mov	r6, r1
  400b5c:	4614      	mov	r4, r2
	switch (ul_flags & PIO_TYPE_Msk) {
  400b5e:	f002 43f0 	and.w	r3, r2, #2013265920	; 0x78000000
  400b62:	f1b3 5f00 	cmp.w	r3, #536870912	; 0x20000000
  400b66:	d03d      	beq.n	400be4 <pio_configure_pin_group+0x90>
  400b68:	d80a      	bhi.n	400b80 <pio_configure_pin_group+0x2c>
  400b6a:	f1b3 5f80 	cmp.w	r3, #268435456	; 0x10000000
  400b6e:	d021      	beq.n	400bb4 <pio_configure_pin_group+0x60>
  400b70:	f1b3 5fc0 	cmp.w	r3, #402653184	; 0x18000000
  400b74:	d02a      	beq.n	400bcc <pio_configure_pin_group+0x78>
  400b76:	f1b3 6f00 	cmp.w	r3, #134217728	; 0x8000000
  400b7a:	d00e      	beq.n	400b9a <pio_configure_pin_group+0x46>
		return 0;
  400b7c:	2000      	movs	r0, #0
  400b7e:	e017      	b.n	400bb0 <pio_configure_pin_group+0x5c>
	switch (ul_flags & PIO_TYPE_Msk) {
  400b80:	f1b3 5f40 	cmp.w	r3, #805306368	; 0x30000000
  400b84:	d03a      	beq.n	400bfc <pio_configure_pin_group+0xa8>
  400b86:	f1b3 5f60 	cmp.w	r3, #939524096	; 0x38000000
  400b8a:	d037      	beq.n	400bfc <pio_configure_pin_group+0xa8>
  400b8c:	f1b3 5f20 	cmp.w	r3, #671088640	; 0x28000000
  400b90:	d1f4      	bne.n	400b7c <pio_configure_pin_group+0x28>
		pio_set_input(p_pio, ul_mask, ul_flags);
  400b92:	4b23      	ldr	r3, [pc, #140]	; (400c20 <pio_configure_pin_group+0xcc>)
  400b94:	4798      	blx	r3
	return 1;
  400b96:	2001      	movs	r0, #1
		break;
  400b98:	e00a      	b.n	400bb0 <pio_configure_pin_group+0x5c>
		pio_set_peripheral(p_pio, PIO_PERIPH_A, ul_mask);
  400b9a:	460a      	mov	r2, r1
  400b9c:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
  400ba0:	4b20      	ldr	r3, [pc, #128]	; (400c24 <pio_configure_pin_group+0xd0>)
  400ba2:	4798      	blx	r3
	if (ul_pull_up_enable) {
  400ba4:	f014 0f01 	tst.w	r4, #1
		p_pio->PIO_PUER = ul_mask;
  400ba8:	bf14      	ite	ne
  400baa:	666e      	strne	r6, [r5, #100]	; 0x64
		p_pio->PIO_PUDR = ul_mask;
  400bac:	662e      	streq	r6, [r5, #96]	; 0x60
	return 1;
  400bae:	2001      	movs	r0, #1
}
  400bb0:	b002      	add	sp, #8
  400bb2:	bd70      	pop	{r4, r5, r6, pc}
		pio_set_peripheral(p_pio, PIO_PERIPH_B, ul_mask);
  400bb4:	460a      	mov	r2, r1
  400bb6:	f04f 5180 	mov.w	r1, #268435456	; 0x10000000
  400bba:	4b1a      	ldr	r3, [pc, #104]	; (400c24 <pio_configure_pin_group+0xd0>)
  400bbc:	4798      	blx	r3
	if (ul_pull_up_enable) {
  400bbe:	f014 0f01 	tst.w	r4, #1
		p_pio->PIO_PUER = ul_mask;
  400bc2:	bf14      	ite	ne
  400bc4:	666e      	strne	r6, [r5, #100]	; 0x64
		p_pio->PIO_PUDR = ul_mask;
  400bc6:	662e      	streq	r6, [r5, #96]	; 0x60
	return 1;
  400bc8:	2001      	movs	r0, #1
  400bca:	e7f1      	b.n	400bb0 <pio_configure_pin_group+0x5c>
		pio_set_peripheral(p_pio, PIO_PERIPH_C, ul_mask);
  400bcc:	460a      	mov	r2, r1
  400bce:	f04f 51c0 	mov.w	r1, #402653184	; 0x18000000
  400bd2:	4b14      	ldr	r3, [pc, #80]	; (400c24 <pio_configure_pin_group+0xd0>)
  400bd4:	4798      	blx	r3
	if (ul_pull_up_enable) {
  400bd6:	f014 0f01 	tst.w	r4, #1
		p_pio->PIO_PUER = ul_mask;
  400bda:	bf14      	ite	ne
  400bdc:	666e      	strne	r6, [r5, #100]	; 0x64
		p_pio->PIO_PUDR = ul_mask;
  400bde:	662e      	streq	r6, [r5, #96]	; 0x60
	return 1;
  400be0:	2001      	movs	r0, #1
  400be2:	e7e5      	b.n	400bb0 <pio_configure_pin_group+0x5c>
		pio_set_peripheral(p_pio, PIO_PERIPH_D, ul_mask);
  400be4:	460a      	mov	r2, r1
  400be6:	f04f 5100 	mov.w	r1, #536870912	; 0x20000000
  400bea:	4b0e      	ldr	r3, [pc, #56]	; (400c24 <pio_configure_pin_group+0xd0>)
  400bec:	4798      	blx	r3
	if (ul_pull_up_enable) {
  400bee:	f014 0f01 	tst.w	r4, #1
		p_pio->PIO_PUER = ul_mask;
  400bf2:	bf14      	ite	ne
  400bf4:	666e      	strne	r6, [r5, #100]	; 0x64
		p_pio->PIO_PUDR = ul_mask;
  400bf6:	662e      	streq	r6, [r5, #96]	; 0x60
	return 1;
  400bf8:	2001      	movs	r0, #1
  400bfa:	e7d9      	b.n	400bb0 <pio_configure_pin_group+0x5c>
				((ul_flags & PIO_TYPE_PIO_OUTPUT_1)
  400bfc:	f004 5260 	and.w	r2, r4, #939524096	; 0x38000000
		pio_set_output(p_pio, ul_mask,
  400c00:	f004 0301 	and.w	r3, r4, #1
  400c04:	9300      	str	r3, [sp, #0]
  400c06:	f3c4 0380 	ubfx	r3, r4, #2, #1
  400c0a:	f1b2 5f60 	cmp.w	r2, #939524096	; 0x38000000
  400c0e:	bf14      	ite	ne
  400c10:	2200      	movne	r2, #0
  400c12:	2201      	moveq	r2, #1
  400c14:	4631      	mov	r1, r6
  400c16:	4628      	mov	r0, r5
  400c18:	4c03      	ldr	r4, [pc, #12]	; (400c28 <pio_configure_pin_group+0xd4>)
  400c1a:	47a0      	blx	r4
	return 1;
  400c1c:	2001      	movs	r0, #1
		break;
  400c1e:	e7c7      	b.n	400bb0 <pio_configure_pin_group+0x5c>
  400c20:	00400941 	.word	0x00400941
  400c24:	004008b1 	.word	0x004008b1
  400c28:	00400973 	.word	0x00400973

00400c2c <pio_handler_process>:
 *
 * \param p_pio PIO controller base address.
 * \param ul_id PIO controller ID.
 */
void pio_handler_process(Pio *p_pio, uint32_t ul_id)
{
  400c2c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  400c30:	4604      	mov	r4, r0
  400c32:	4688      	mov	r8, r1
	uint32_t status;
	uint32_t i;

	/* Read PIO controller status */
	status = pio_get_interrupt_status(p_pio);
  400c34:	4b0e      	ldr	r3, [pc, #56]	; (400c70 <pio_handler_process+0x44>)
  400c36:	4798      	blx	r3
  400c38:	4605      	mov	r5, r0
	status &= pio_get_interrupt_mask(p_pio);
  400c3a:	4620      	mov	r0, r4
  400c3c:	4b0d      	ldr	r3, [pc, #52]	; (400c74 <pio_handler_process+0x48>)
  400c3e:	4798      	blx	r3

	/* Check pending events */
	if (status != 0) {
  400c40:	4005      	ands	r5, r0
  400c42:	d013      	beq.n	400c6c <pio_handler_process+0x40>
  400c44:	4c0c      	ldr	r4, [pc, #48]	; (400c78 <pio_handler_process+0x4c>)
  400c46:	f104 0660 	add.w	r6, r4, #96	; 0x60
  400c4a:	e003      	b.n	400c54 <pio_handler_process+0x28>
							gs_interrupt_sources[i].mask);
					status &= ~(gs_interrupt_sources[i].mask);
				}
			}
			i++;
			if (i >= MAX_INTERRUPT_SOURCES) {
  400c4c:	42b4      	cmp	r4, r6
  400c4e:	d00d      	beq.n	400c6c <pio_handler_process+0x40>
  400c50:	3410      	adds	r4, #16
		while (status != 0) {
  400c52:	b15d      	cbz	r5, 400c6c <pio_handler_process+0x40>
			if (gs_interrupt_sources[i].id == ul_id) {
  400c54:	6820      	ldr	r0, [r4, #0]
  400c56:	4540      	cmp	r0, r8
  400c58:	d1f8      	bne.n	400c4c <pio_handler_process+0x20>
				if ((status & gs_interrupt_sources[i].mask) != 0) {
  400c5a:	6861      	ldr	r1, [r4, #4]
  400c5c:	4229      	tst	r1, r5
  400c5e:	d0f5      	beq.n	400c4c <pio_handler_process+0x20>
					gs_interrupt_sources[i].handler(gs_interrupt_sources[i].id,
  400c60:	68e3      	ldr	r3, [r4, #12]
  400c62:	4798      	blx	r3
					status &= ~(gs_interrupt_sources[i].mask);
  400c64:	6863      	ldr	r3, [r4, #4]
  400c66:	ea25 0503 	bic.w	r5, r5, r3
  400c6a:	e7ef      	b.n	400c4c <pio_handler_process+0x20>
  400c6c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  400c70:	004009d9 	.word	0x004009d9
  400c74:	004009dd 	.word	0x004009dd
  400c78:	20000ad8 	.word	0x20000ad8

00400c7c <pio_handler_set>:
 *
 * \return 0 if successful, 1 if the maximum number of sources has been defined.
 */
uint32_t pio_handler_set(Pio *p_pio, uint32_t ul_id, uint32_t ul_mask,
		uint32_t ul_attr, void (*p_handler) (uint32_t, uint32_t))
{
  400c7c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    uint8_t i;
	struct s_interrupt_source *pSource;

	if (gs_ul_nb_sources >= MAX_INTERRUPT_SOURCES)
  400c7e:	4c18      	ldr	r4, [pc, #96]	; (400ce0 <pio_handler_set+0x64>)
  400c80:	6826      	ldr	r6, [r4, #0]
  400c82:	2e06      	cmp	r6, #6
  400c84:	d829      	bhi.n	400cda <pio_handler_set+0x5e>
  400c86:	f04f 0c00 	mov.w	ip, #0
  400c8a:	4664      	mov	r4, ip
		return 1;

    /* Check interrupt for this pin, if already defined, redefine it. */
	for (i = 0; i <= gs_ul_nb_sources; i++) {
		pSource = &(gs_interrupt_sources[i]);
		if (pSource->id == ul_id && pSource->mask == ul_mask) {
  400c8c:	4f15      	ldr	r7, [pc, #84]	; (400ce4 <pio_handler_set+0x68>)
  400c8e:	e004      	b.n	400c9a <pio_handler_set+0x1e>
	for (i = 0; i <= gs_ul_nb_sources; i++) {
  400c90:	3401      	adds	r4, #1
  400c92:	b2e4      	uxtb	r4, r4
  400c94:	46a4      	mov	ip, r4
  400c96:	42a6      	cmp	r6, r4
  400c98:	d309      	bcc.n	400cae <pio_handler_set+0x32>
		pSource = &(gs_interrupt_sources[i]);
  400c9a:	46a6      	mov	lr, r4
		if (pSource->id == ul_id && pSource->mask == ul_mask) {
  400c9c:	0125      	lsls	r5, r4, #4
  400c9e:	597d      	ldr	r5, [r7, r5]
  400ca0:	428d      	cmp	r5, r1
  400ca2:	d1f5      	bne.n	400c90 <pio_handler_set+0x14>
  400ca4:	eb07 1504 	add.w	r5, r7, r4, lsl #4
  400ca8:	686d      	ldr	r5, [r5, #4]
  400caa:	4295      	cmp	r5, r2
  400cac:	d1f0      	bne.n	400c90 <pio_handler_set+0x14>
			break;
		}
	}

	/* Define new source */
	pSource->id = ul_id;
  400cae:	4d0d      	ldr	r5, [pc, #52]	; (400ce4 <pio_handler_set+0x68>)
  400cb0:	ea4f 1e0e 	mov.w	lr, lr, lsl #4
  400cb4:	eb05 040e 	add.w	r4, r5, lr
  400cb8:	f845 100e 	str.w	r1, [r5, lr]
	pSource->mask = ul_mask;
  400cbc:	6062      	str	r2, [r4, #4]
	pSource->attr = ul_attr;
  400cbe:	60a3      	str	r3, [r4, #8]
	pSource->handler = p_handler;
  400cc0:	9906      	ldr	r1, [sp, #24]
  400cc2:	60e1      	str	r1, [r4, #12]
	if (i == gs_ul_nb_sources + 1) {
  400cc4:	3601      	adds	r6, #1
  400cc6:	4566      	cmp	r6, ip
		gs_ul_nb_sources++;
  400cc8:	bf04      	itt	eq
  400cca:	4905      	ldreq	r1, [pc, #20]	; (400ce0 <pio_handler_set+0x64>)
  400ccc:	600e      	streq	r6, [r1, #0]
  400cce:	4611      	mov	r1, r2
	}

	/* Configure interrupt mode */
	pio_configure_interrupt(p_pio, ul_mask, ul_attr);
  400cd0:	461a      	mov	r2, r3
  400cd2:	4b05      	ldr	r3, [pc, #20]	; (400ce8 <pio_handler_set+0x6c>)
  400cd4:	4798      	blx	r3

	return 0;
  400cd6:	2000      	movs	r0, #0
  400cd8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
		return 1;
  400cda:	2001      	movs	r0, #1
}
  400cdc:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  400cde:	bf00      	nop
  400ce0:	20000b48 	.word	0x20000b48
  400ce4:	20000ad8 	.word	0x20000ad8
  400ce8:	004009a7 	.word	0x004009a7

00400cec <PIOA_Handler>:
/**
 * \brief Parallel IO Controller A interrupt handler.
 * Redefined PIOA interrupt handler for NVIC interrupt table.
 */
void PIOA_Handler(void)
{
  400cec:	b508      	push	{r3, lr}
	pio_handler_process(PIOA, ID_PIOA);
  400cee:	210b      	movs	r1, #11
  400cf0:	4801      	ldr	r0, [pc, #4]	; (400cf8 <PIOA_Handler+0xc>)
  400cf2:	4b02      	ldr	r3, [pc, #8]	; (400cfc <PIOA_Handler+0x10>)
  400cf4:	4798      	blx	r3
  400cf6:	bd08      	pop	{r3, pc}
  400cf8:	400e0e00 	.word	0x400e0e00
  400cfc:	00400c2d 	.word	0x00400c2d

00400d00 <PIOB_Handler>:
/**
 * \brief Parallel IO Controller B interrupt handler
 * Redefined PIOB interrupt handler for NVIC interrupt table.
 */
void PIOB_Handler(void)
{
  400d00:	b508      	push	{r3, lr}
    pio_handler_process(PIOB, ID_PIOB);
  400d02:	210c      	movs	r1, #12
  400d04:	4801      	ldr	r0, [pc, #4]	; (400d0c <PIOB_Handler+0xc>)
  400d06:	4b02      	ldr	r3, [pc, #8]	; (400d10 <PIOB_Handler+0x10>)
  400d08:	4798      	blx	r3
  400d0a:	bd08      	pop	{r3, pc}
  400d0c:	400e1000 	.word	0x400e1000
  400d10:	00400c2d 	.word	0x00400c2d

00400d14 <PIOC_Handler>:
/**
 * \brief Parallel IO Controller C interrupt handler.
 * Redefined PIOC interrupt handler for NVIC interrupt table.
 */
void PIOC_Handler(void)
{
  400d14:	b508      	push	{r3, lr}
	pio_handler_process(PIOC, ID_PIOC);
  400d16:	210d      	movs	r1, #13
  400d18:	4801      	ldr	r0, [pc, #4]	; (400d20 <PIOC_Handler+0xc>)
  400d1a:	4b02      	ldr	r3, [pc, #8]	; (400d24 <PIOC_Handler+0x10>)
  400d1c:	4798      	blx	r3
  400d1e:	bd08      	pop	{r3, pc}
  400d20:	400e1200 	.word	0x400e1200
  400d24:	00400c2d 	.word	0x00400c2d

00400d28 <pmc_switch_mck_to_pllack>:
 */
uint32_t pmc_switch_mck_to_pllack(uint32_t ul_pres)
{
	uint32_t ul_timeout;

	PMC->PMC_MCKR = (PMC->PMC_MCKR & (~PMC_MCKR_PRES_Msk)) | ul_pres;
  400d28:	4a17      	ldr	r2, [pc, #92]	; (400d88 <pmc_switch_mck_to_pllack+0x60>)
  400d2a:	6b13      	ldr	r3, [r2, #48]	; 0x30
  400d2c:	f023 0370 	bic.w	r3, r3, #112	; 0x70
  400d30:	4318      	orrs	r0, r3
  400d32:	6310      	str	r0, [r2, #48]	; 0x30
	for (ul_timeout = PMC_TIMEOUT; !(PMC->PMC_SR & PMC_SR_MCKRDY);
  400d34:	6e93      	ldr	r3, [r2, #104]	; 0x68
  400d36:	f013 0f08 	tst.w	r3, #8
  400d3a:	d10a      	bne.n	400d52 <pmc_switch_mck_to_pllack+0x2a>
  400d3c:	f44f 6300 	mov.w	r3, #2048	; 0x800
  400d40:	4911      	ldr	r1, [pc, #68]	; (400d88 <pmc_switch_mck_to_pllack+0x60>)
  400d42:	6e8a      	ldr	r2, [r1, #104]	; 0x68
  400d44:	f012 0f08 	tst.w	r2, #8
  400d48:	d103      	bne.n	400d52 <pmc_switch_mck_to_pllack+0x2a>
			--ul_timeout) {
		if (ul_timeout == 0) {
  400d4a:	3b01      	subs	r3, #1
  400d4c:	d1f9      	bne.n	400d42 <pmc_switch_mck_to_pllack+0x1a>
			return 1;
  400d4e:	2001      	movs	r0, #1
  400d50:	4770      	bx	lr
		}
	}

	PMC->PMC_MCKR = (PMC->PMC_MCKR & (~PMC_MCKR_CSS_Msk)) |
  400d52:	4a0d      	ldr	r2, [pc, #52]	; (400d88 <pmc_switch_mck_to_pllack+0x60>)
  400d54:	6b13      	ldr	r3, [r2, #48]	; 0x30
  400d56:	f023 0303 	bic.w	r3, r3, #3
  400d5a:	f043 0302 	orr.w	r3, r3, #2
  400d5e:	6313      	str	r3, [r2, #48]	; 0x30
			PMC_MCKR_CSS_PLLA_CLK;

	for (ul_timeout = PMC_TIMEOUT; !(PMC->PMC_SR & PMC_SR_MCKRDY);
  400d60:	6e93      	ldr	r3, [r2, #104]	; 0x68
  400d62:	f013 0f08 	tst.w	r3, #8
  400d66:	d10a      	bne.n	400d7e <pmc_switch_mck_to_pllack+0x56>
  400d68:	f44f 6300 	mov.w	r3, #2048	; 0x800
  400d6c:	4906      	ldr	r1, [pc, #24]	; (400d88 <pmc_switch_mck_to_pllack+0x60>)
  400d6e:	6e8a      	ldr	r2, [r1, #104]	; 0x68
  400d70:	f012 0f08 	tst.w	r2, #8
  400d74:	d105      	bne.n	400d82 <pmc_switch_mck_to_pllack+0x5a>
			--ul_timeout) {
		if (ul_timeout == 0) {
  400d76:	3b01      	subs	r3, #1
  400d78:	d1f9      	bne.n	400d6e <pmc_switch_mck_to_pllack+0x46>
			return 1;
  400d7a:	2001      	movs	r0, #1
		}
	}

	return 0;
}
  400d7c:	4770      	bx	lr
	return 0;
  400d7e:	2000      	movs	r0, #0
  400d80:	4770      	bx	lr
  400d82:	2000      	movs	r0, #0
  400d84:	4770      	bx	lr
  400d86:	bf00      	nop
  400d88:	400e0400 	.word	0x400e0400

00400d8c <pmc_switch_mainck_to_xtal>:
 */
void pmc_switch_mainck_to_xtal(uint32_t ul_bypass,
		uint32_t ul_xtal_startup_time)
{
	/* Enable Main Xtal oscillator */
	if (ul_bypass) {
  400d8c:	b9c8      	cbnz	r0, 400dc2 <pmc_switch_mainck_to_xtal+0x36>
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTEN) |
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTBY |
				CKGR_MOR_MOSCSEL;
	} else {
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTBY) |
  400d8e:	4a11      	ldr	r2, [pc, #68]	; (400dd4 <pmc_switch_mainck_to_xtal+0x48>)
  400d90:	6a13      	ldr	r3, [r2, #32]
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTEN |
				CKGR_MOR_MOSCXTST(ul_xtal_startup_time);
  400d92:	0209      	lsls	r1, r1, #8
  400d94:	b289      	uxth	r1, r1
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTEN |
  400d96:	f423 135c 	bic.w	r3, r3, #3604480	; 0x370000
  400d9a:	f023 0303 	bic.w	r3, r3, #3
  400d9e:	f443 135c 	orr.w	r3, r3, #3604480	; 0x370000
  400da2:	f043 0301 	orr.w	r3, r3, #1
  400da6:	430b      	orrs	r3, r1
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTBY) |
  400da8:	6213      	str	r3, [r2, #32]
		/* Wait the Xtal to stabilize */
		while (!(PMC->PMC_SR & PMC_SR_MOSCXTS));
  400daa:	6e93      	ldr	r3, [r2, #104]	; 0x68
  400dac:	f013 0f01 	tst.w	r3, #1
  400db0:	d0fb      	beq.n	400daa <pmc_switch_mainck_to_xtal+0x1e>

		PMC->CKGR_MOR |= CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCSEL;
  400db2:	4a08      	ldr	r2, [pc, #32]	; (400dd4 <pmc_switch_mainck_to_xtal+0x48>)
  400db4:	6a13      	ldr	r3, [r2, #32]
  400db6:	f043 739b 	orr.w	r3, r3, #20316160	; 0x1360000
  400dba:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
  400dbe:	6213      	str	r3, [r2, #32]
  400dc0:	4770      	bx	lr
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTEN) |
  400dc2:	4904      	ldr	r1, [pc, #16]	; (400dd4 <pmc_switch_mainck_to_xtal+0x48>)
  400dc4:	6a0b      	ldr	r3, [r1, #32]
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTBY |
  400dc6:	4a04      	ldr	r2, [pc, #16]	; (400dd8 <pmc_switch_mainck_to_xtal+0x4c>)
  400dc8:	401a      	ands	r2, r3
  400dca:	4b04      	ldr	r3, [pc, #16]	; (400ddc <pmc_switch_mainck_to_xtal+0x50>)
  400dcc:	4313      	orrs	r3, r2
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTEN) |
  400dce:	620b      	str	r3, [r1, #32]
  400dd0:	4770      	bx	lr
  400dd2:	bf00      	nop
  400dd4:	400e0400 	.word	0x400e0400
  400dd8:	fec8fffc 	.word	0xfec8fffc
  400ddc:	01370002 	.word	0x01370002

00400de0 <pmc_osc_is_ready_mainck>:
 * \retval 1 Xtal is ready.
 * \retval 0 Xtal is not ready.
 */
uint32_t pmc_osc_is_ready_mainck(void)
{
	return PMC->PMC_SR & PMC_SR_MOSCSELS;
  400de0:	4b02      	ldr	r3, [pc, #8]	; (400dec <pmc_osc_is_ready_mainck+0xc>)
  400de2:	6e98      	ldr	r0, [r3, #104]	; 0x68
}
  400de4:	f400 3080 	and.w	r0, r0, #65536	; 0x10000
  400de8:	4770      	bx	lr
  400dea:	bf00      	nop
  400dec:	400e0400 	.word	0x400e0400

00400df0 <pmc_disable_pllack>:
void pmc_disable_pllack(void)
{
#if (SAM4C || SAM4CM || SAM4CP || SAMG)
	PMC->CKGR_PLLAR = CKGR_PLLAR_MULA(0);
#else
	PMC->CKGR_PLLAR = CKGR_PLLAR_ONE | CKGR_PLLAR_MULA(0);
  400df0:	f04f 5200 	mov.w	r2, #536870912	; 0x20000000
  400df4:	4b01      	ldr	r3, [pc, #4]	; (400dfc <pmc_disable_pllack+0xc>)
  400df6:	629a      	str	r2, [r3, #40]	; 0x28
  400df8:	4770      	bx	lr
  400dfa:	bf00      	nop
  400dfc:	400e0400 	.word	0x400e0400

00400e00 <pmc_is_locked_pllack>:
 * \retval 0 Not locked.
 * \retval 1 Locked.
 */
uint32_t pmc_is_locked_pllack(void)
{
	return (PMC->PMC_SR & PMC_SR_LOCKA);
  400e00:	4b02      	ldr	r3, [pc, #8]	; (400e0c <pmc_is_locked_pllack+0xc>)
  400e02:	6e98      	ldr	r0, [r3, #104]	; 0x68
}
  400e04:	f000 0002 	and.w	r0, r0, #2
  400e08:	4770      	bx	lr
  400e0a:	bf00      	nop
  400e0c:	400e0400 	.word	0x400e0400

00400e10 <pmc_enable_periph_clk>:
 * \retval 0 Success.
 * \retval 1 Invalid parameter.
 */
uint32_t pmc_enable_periph_clk(uint32_t ul_id)
{
	if (ul_id > MAX_PERIPH_ID) {
  400e10:	281f      	cmp	r0, #31
  400e12:	d80c      	bhi.n	400e2e <pmc_enable_periph_clk+0x1e>
		return 1;
	}

	if (ul_id < 32) {
		if ((PMC->PMC_PCSR0 & (1u << ul_id)) != (1u << ul_id)) {
  400e14:	4b08      	ldr	r3, [pc, #32]	; (400e38 <pmc_enable_periph_clk+0x28>)
  400e16:	699a      	ldr	r2, [r3, #24]
  400e18:	2301      	movs	r3, #1
  400e1a:	4083      	lsls	r3, r0
  400e1c:	4393      	bics	r3, r2
  400e1e:	d008      	beq.n	400e32 <pmc_enable_periph_clk+0x22>
			PMC->PMC_PCER0 = 1 << ul_id;
  400e20:	2301      	movs	r3, #1
  400e22:	fa03 f000 	lsl.w	r0, r3, r0
  400e26:	4b04      	ldr	r3, [pc, #16]	; (400e38 <pmc_enable_periph_clk+0x28>)
  400e28:	6118      	str	r0, [r3, #16]
			PMC->PMC_PCER1 = 1 << ul_id;
		}
#endif
	}

	return 0;
  400e2a:	2000      	movs	r0, #0
  400e2c:	4770      	bx	lr
		return 1;
  400e2e:	2001      	movs	r0, #1
  400e30:	4770      	bx	lr
	return 0;
  400e32:	2000      	movs	r0, #0
}
  400e34:	4770      	bx	lr
  400e36:	bf00      	nop
  400e38:	400e0400 	.word	0x400e0400

00400e3c <Dummy_Handler>:

/**
 * \brief Default interrupt handler for unused IRQs.
 */
void Dummy_Handler(void)
{
  400e3c:	e7fe      	b.n	400e3c <Dummy_Handler>
	...

00400e40 <Reset_Handler>:
/**
 * \brief This is the code that gets called on processor reset.
 * To initialize the device, and call the main() routine.
 */
void Reset_Handler(void)
{
  400e40:	b508      	push	{r3, lr}

	/* Initialize the relocate segment */
	pSrc = &_etext;
	pDest = &_srelocate;

	if (pSrc != pDest) {
  400e42:	4b1c      	ldr	r3, [pc, #112]	; (400eb4 <Reset_Handler+0x74>)
  400e44:	4a1c      	ldr	r2, [pc, #112]	; (400eb8 <Reset_Handler+0x78>)
  400e46:	429a      	cmp	r2, r3
  400e48:	d010      	beq.n	400e6c <Reset_Handler+0x2c>
		for (; pDest < &_erelocate;) {
  400e4a:	4b1c      	ldr	r3, [pc, #112]	; (400ebc <Reset_Handler+0x7c>)
  400e4c:	4a19      	ldr	r2, [pc, #100]	; (400eb4 <Reset_Handler+0x74>)
  400e4e:	429a      	cmp	r2, r3
  400e50:	d20c      	bcs.n	400e6c <Reset_Handler+0x2c>
  400e52:	3b01      	subs	r3, #1
  400e54:	1a9b      	subs	r3, r3, r2
  400e56:	f023 0303 	bic.w	r3, r3, #3
  400e5a:	3304      	adds	r3, #4
  400e5c:	4413      	add	r3, r2
  400e5e:	4916      	ldr	r1, [pc, #88]	; (400eb8 <Reset_Handler+0x78>)
			*pDest++ = *pSrc++;
  400e60:	f851 0b04 	ldr.w	r0, [r1], #4
  400e64:	f842 0b04 	str.w	r0, [r2], #4
		for (; pDest < &_erelocate;) {
  400e68:	429a      	cmp	r2, r3
  400e6a:	d1f9      	bne.n	400e60 <Reset_Handler+0x20>
		}
	}

	/* Clear the zero segment */
	for (pDest = &_szero; pDest < &_ezero;) {
  400e6c:	4b14      	ldr	r3, [pc, #80]	; (400ec0 <Reset_Handler+0x80>)
  400e6e:	4a15      	ldr	r2, [pc, #84]	; (400ec4 <Reset_Handler+0x84>)
  400e70:	429a      	cmp	r2, r3
  400e72:	d20a      	bcs.n	400e8a <Reset_Handler+0x4a>
  400e74:	3b01      	subs	r3, #1
  400e76:	1a9b      	subs	r3, r3, r2
  400e78:	f023 0303 	bic.w	r3, r3, #3
  400e7c:	3304      	adds	r3, #4
  400e7e:	4413      	add	r3, r2
		*pDest++ = 0;
  400e80:	2100      	movs	r1, #0
  400e82:	f842 1b04 	str.w	r1, [r2], #4
	for (pDest = &_szero; pDest < &_ezero;) {
  400e86:	4293      	cmp	r3, r2
  400e88:	d1fb      	bne.n	400e82 <Reset_Handler+0x42>
	}

	/* Set the vector table base address */
	pSrc = (uint32_t *) & _sfixed;
	SCB->VTOR = ((uint32_t) pSrc & SCB_VTOR_TBLOFF_Msk);
  400e8a:	4b0f      	ldr	r3, [pc, #60]	; (400ec8 <Reset_Handler+0x88>)
  400e8c:	f023 4260 	bic.w	r2, r3, #3758096384	; 0xe0000000
  400e90:	f022 027f 	bic.w	r2, r2, #127	; 0x7f
  400e94:	490d      	ldr	r1, [pc, #52]	; (400ecc <Reset_Handler+0x8c>)
  400e96:	608a      	str	r2, [r1, #8]

	if (((uint32_t) pSrc >= IRAM_ADDR) && ((uint32_t) pSrc < IRAM_ADDR + IRAM_SIZE)) {
  400e98:	f103 4360 	add.w	r3, r3, #3758096384	; 0xe0000000
  400e9c:	f5b3 4fc0 	cmp.w	r3, #24576	; 0x6000
  400ea0:	d203      	bcs.n	400eaa <Reset_Handler+0x6a>
		SCB->VTOR |= 1 << SCB_VTOR_TBLBASE_Pos;
  400ea2:	688b      	ldr	r3, [r1, #8]
  400ea4:	f043 5300 	orr.w	r3, r3, #536870912	; 0x20000000
  400ea8:	608b      	str	r3, [r1, #8]
	}

	/* Initialize the C library */
	__libc_init_array();
  400eaa:	4b09      	ldr	r3, [pc, #36]	; (400ed0 <Reset_Handler+0x90>)
  400eac:	4798      	blx	r3

	/* Branch to main function */
	main();
  400eae:	4b09      	ldr	r3, [pc, #36]	; (400ed4 <Reset_Handler+0x94>)
  400eb0:	4798      	blx	r3
  400eb2:	e7fe      	b.n	400eb2 <Reset_Handler+0x72>
  400eb4:	20000000 	.word	0x20000000
  400eb8:	004045f8 	.word	0x004045f8
  400ebc:	20000ab4 	.word	0x20000ab4
  400ec0:	20000b94 	.word	0x20000b94
  400ec4:	20000ab4 	.word	0x20000ab4
  400ec8:	00400000 	.word	0x00400000
  400ecc:	e000ed00 	.word	0xe000ed00
  400ed0:	004015f9 	.word	0x004015f9
  400ed4:	00401029 	.word	0x00401029

00400ed8 <SystemCoreClockUpdate>:
}

void SystemCoreClockUpdate(void)
{
	/* Determine clock frequency according to clock register values */
	switch (PMC->PMC_MCKR & PMC_MCKR_CSS_Msk) {
  400ed8:	4b38      	ldr	r3, [pc, #224]	; (400fbc <SystemCoreClockUpdate+0xe4>)
  400eda:	6b1b      	ldr	r3, [r3, #48]	; 0x30
  400edc:	f003 0303 	and.w	r3, r3, #3
  400ee0:	2b01      	cmp	r3, #1
  400ee2:	d01d      	beq.n	400f20 <SystemCoreClockUpdate+0x48>
  400ee4:	b183      	cbz	r3, 400f08 <SystemCoreClockUpdate+0x30>
  400ee6:	2b02      	cmp	r3, #2
  400ee8:	d036      	beq.n	400f58 <SystemCoreClockUpdate+0x80>
		SystemCoreClock /= ((((PMC->CKGR_PLLAR) & CKGR_PLLAR_DIVA_Msk) >> 
			                         CKGR_PLLAR_DIVA_Pos));
		break;
	}

	if ((PMC->PMC_MCKR & PMC_MCKR_PRES_Msk) == PMC_MCKR_PRES_CLK_3) {
  400eea:	4b34      	ldr	r3, [pc, #208]	; (400fbc <SystemCoreClockUpdate+0xe4>)
  400eec:	6b1b      	ldr	r3, [r3, #48]	; 0x30
  400eee:	f003 0370 	and.w	r3, r3, #112	; 0x70
  400ef2:	2b70      	cmp	r3, #112	; 0x70
  400ef4:	d059      	beq.n	400faa <SystemCoreClockUpdate+0xd2>
		SystemCoreClock /= 3U;
	} else { 
		SystemCoreClock >>= ((PMC->PMC_MCKR & PMC_MCKR_PRES_Msk) >> 
  400ef6:	4b31      	ldr	r3, [pc, #196]	; (400fbc <SystemCoreClockUpdate+0xe4>)
  400ef8:	6b1a      	ldr	r2, [r3, #48]	; 0x30
  400efa:	4931      	ldr	r1, [pc, #196]	; (400fc0 <SystemCoreClockUpdate+0xe8>)
  400efc:	f3c2 1202 	ubfx	r2, r2, #4, #3
  400f00:	680b      	ldr	r3, [r1, #0]
  400f02:	40d3      	lsrs	r3, r2
  400f04:	600b      	str	r3, [r1, #0]
  400f06:	4770      	bx	lr
		if (SUPC->SUPC_SR & SUPC_SR_OSCSEL) {
  400f08:	4b2e      	ldr	r3, [pc, #184]	; (400fc4 <SystemCoreClockUpdate+0xec>)
  400f0a:	695b      	ldr	r3, [r3, #20]
  400f0c:	f013 0f80 	tst.w	r3, #128	; 0x80
			SystemCoreClock = CHIP_FREQ_XTAL_32K;
  400f10:	bf14      	ite	ne
  400f12:	f44f 4200 	movne.w	r2, #32768	; 0x8000
			SystemCoreClock = CHIP_FREQ_SLCK_RC;
  400f16:	f44f 42fa 	moveq.w	r2, #32000	; 0x7d00
  400f1a:	4b29      	ldr	r3, [pc, #164]	; (400fc0 <SystemCoreClockUpdate+0xe8>)
  400f1c:	601a      	str	r2, [r3, #0]
  400f1e:	e7e4      	b.n	400eea <SystemCoreClockUpdate+0x12>
		if (PMC->CKGR_MOR & CKGR_MOR_MOSCSEL) {
  400f20:	4b26      	ldr	r3, [pc, #152]	; (400fbc <SystemCoreClockUpdate+0xe4>)
  400f22:	6a1b      	ldr	r3, [r3, #32]
  400f24:	f013 7f80 	tst.w	r3, #16777216	; 0x1000000
  400f28:	d003      	beq.n	400f32 <SystemCoreClockUpdate+0x5a>
			SystemCoreClock = CHIP_FREQ_XTAL_12M;
  400f2a:	4a27      	ldr	r2, [pc, #156]	; (400fc8 <SystemCoreClockUpdate+0xf0>)
  400f2c:	4b24      	ldr	r3, [pc, #144]	; (400fc0 <SystemCoreClockUpdate+0xe8>)
  400f2e:	601a      	str	r2, [r3, #0]
  400f30:	e7db      	b.n	400eea <SystemCoreClockUpdate+0x12>
			SystemCoreClock = CHIP_FREQ_MAINCK_RC_4MHZ;
  400f32:	4a26      	ldr	r2, [pc, #152]	; (400fcc <SystemCoreClockUpdate+0xf4>)
  400f34:	4b22      	ldr	r3, [pc, #136]	; (400fc0 <SystemCoreClockUpdate+0xe8>)
  400f36:	601a      	str	r2, [r3, #0]
			switch (PMC->CKGR_MOR & CKGR_MOR_MOSCRCF_Msk) {
  400f38:	4b20      	ldr	r3, [pc, #128]	; (400fbc <SystemCoreClockUpdate+0xe4>)
  400f3a:	6a1b      	ldr	r3, [r3, #32]
  400f3c:	f003 0370 	and.w	r3, r3, #112	; 0x70
  400f40:	2b10      	cmp	r3, #16
  400f42:	d005      	beq.n	400f50 <SystemCoreClockUpdate+0x78>
  400f44:	2b20      	cmp	r3, #32
  400f46:	d1d0      	bne.n	400eea <SystemCoreClockUpdate+0x12>
				SystemCoreClock *= 3U;
  400f48:	4a1f      	ldr	r2, [pc, #124]	; (400fc8 <SystemCoreClockUpdate+0xf0>)
  400f4a:	4b1d      	ldr	r3, [pc, #116]	; (400fc0 <SystemCoreClockUpdate+0xe8>)
  400f4c:	601a      	str	r2, [r3, #0]
				break;
  400f4e:	e7cc      	b.n	400eea <SystemCoreClockUpdate+0x12>
				SystemCoreClock *= 2U;
  400f50:	4a1f      	ldr	r2, [pc, #124]	; (400fd0 <SystemCoreClockUpdate+0xf8>)
  400f52:	4b1b      	ldr	r3, [pc, #108]	; (400fc0 <SystemCoreClockUpdate+0xe8>)
  400f54:	601a      	str	r2, [r3, #0]
				break;
  400f56:	e7c8      	b.n	400eea <SystemCoreClockUpdate+0x12>
		if (PMC->CKGR_MOR & CKGR_MOR_MOSCSEL) {
  400f58:	4b18      	ldr	r3, [pc, #96]	; (400fbc <SystemCoreClockUpdate+0xe4>)
  400f5a:	6a1b      	ldr	r3, [r3, #32]
  400f5c:	f013 7f80 	tst.w	r3, #16777216	; 0x1000000
  400f60:	d010      	beq.n	400f84 <SystemCoreClockUpdate+0xac>
			SystemCoreClock = CHIP_FREQ_XTAL_12M;
  400f62:	4a19      	ldr	r2, [pc, #100]	; (400fc8 <SystemCoreClockUpdate+0xf0>)
  400f64:	4b16      	ldr	r3, [pc, #88]	; (400fc0 <SystemCoreClockUpdate+0xe8>)
  400f66:	601a      	str	r2, [r3, #0]
		SystemCoreClock *= ((((PMC->CKGR_PLLAR) & CKGR_PLLAR_MULA_Msk) >> 
  400f68:	4a14      	ldr	r2, [pc, #80]	; (400fbc <SystemCoreClockUpdate+0xe4>)
  400f6a:	6a91      	ldr	r1, [r2, #40]	; 0x28
		SystemCoreClock /= ((((PMC->CKGR_PLLAR) & CKGR_PLLAR_DIVA_Msk) >> 
  400f6c:	6a92      	ldr	r2, [r2, #40]	; 0x28
  400f6e:	4814      	ldr	r0, [pc, #80]	; (400fc0 <SystemCoreClockUpdate+0xe8>)
		SystemCoreClock *= ((((PMC->CKGR_PLLAR) & CKGR_PLLAR_MULA_Msk) >> 
  400f70:	f3c1 410a 	ubfx	r1, r1, #16, #11
  400f74:	6803      	ldr	r3, [r0, #0]
  400f76:	fb01 3303 	mla	r3, r1, r3, r3
		SystemCoreClock /= ((((PMC->CKGR_PLLAR) & CKGR_PLLAR_DIVA_Msk) >> 
  400f7a:	b2d2      	uxtb	r2, r2
  400f7c:	fbb3 f3f2 	udiv	r3, r3, r2
  400f80:	6003      	str	r3, [r0, #0]
		break;
  400f82:	e7b2      	b.n	400eea <SystemCoreClockUpdate+0x12>
			SystemCoreClock = CHIP_FREQ_MAINCK_RC_4MHZ;
  400f84:	4a11      	ldr	r2, [pc, #68]	; (400fcc <SystemCoreClockUpdate+0xf4>)
  400f86:	4b0e      	ldr	r3, [pc, #56]	; (400fc0 <SystemCoreClockUpdate+0xe8>)
  400f88:	601a      	str	r2, [r3, #0]
			switch (PMC->CKGR_MOR & CKGR_MOR_MOSCRCF_Msk) {
  400f8a:	4b0c      	ldr	r3, [pc, #48]	; (400fbc <SystemCoreClockUpdate+0xe4>)
  400f8c:	6a1b      	ldr	r3, [r3, #32]
  400f8e:	f003 0370 	and.w	r3, r3, #112	; 0x70
  400f92:	2b10      	cmp	r3, #16
  400f94:	d005      	beq.n	400fa2 <SystemCoreClockUpdate+0xca>
  400f96:	2b20      	cmp	r3, #32
  400f98:	d1e6      	bne.n	400f68 <SystemCoreClockUpdate+0x90>
				SystemCoreClock *= 3U;
  400f9a:	4a0b      	ldr	r2, [pc, #44]	; (400fc8 <SystemCoreClockUpdate+0xf0>)
  400f9c:	4b08      	ldr	r3, [pc, #32]	; (400fc0 <SystemCoreClockUpdate+0xe8>)
  400f9e:	601a      	str	r2, [r3, #0]
				break;
  400fa0:	e7e2      	b.n	400f68 <SystemCoreClockUpdate+0x90>
				SystemCoreClock *= 2U;
  400fa2:	4a0b      	ldr	r2, [pc, #44]	; (400fd0 <SystemCoreClockUpdate+0xf8>)
  400fa4:	4b06      	ldr	r3, [pc, #24]	; (400fc0 <SystemCoreClockUpdate+0xe8>)
  400fa6:	601a      	str	r2, [r3, #0]
				break;
  400fa8:	e7de      	b.n	400f68 <SystemCoreClockUpdate+0x90>
		SystemCoreClock /= 3U;
  400faa:	4a05      	ldr	r2, [pc, #20]	; (400fc0 <SystemCoreClockUpdate+0xe8>)
  400fac:	6813      	ldr	r3, [r2, #0]
  400fae:	4909      	ldr	r1, [pc, #36]	; (400fd4 <SystemCoreClockUpdate+0xfc>)
  400fb0:	fba1 1303 	umull	r1, r3, r1, r3
  400fb4:	085b      	lsrs	r3, r3, #1
  400fb6:	6013      	str	r3, [r2, #0]
  400fb8:	4770      	bx	lr
  400fba:	bf00      	nop
  400fbc:	400e0400 	.word	0x400e0400
  400fc0:	20000104 	.word	0x20000104
  400fc4:	400e1410 	.word	0x400e1410
  400fc8:	00b71b00 	.word	0x00b71b00
  400fcc:	003d0900 	.word	0x003d0900
  400fd0:	007a1200 	.word	0x007a1200
  400fd4:	aaaaaaab 	.word	0xaaaaaaab

00400fd8 <_sbrk>:
{
	static unsigned char *heap = NULL;
	unsigned char *prev_heap;
	int ramend = (int)&__ram_end__;

	if (heap == NULL) {
  400fd8:	4b0a      	ldr	r3, [pc, #40]	; (401004 <_sbrk+0x2c>)
  400fda:	681b      	ldr	r3, [r3, #0]
  400fdc:	b153      	cbz	r3, 400ff4 <_sbrk+0x1c>
		heap = (unsigned char *)&_end;
	}
	prev_heap = heap;
  400fde:	4b09      	ldr	r3, [pc, #36]	; (401004 <_sbrk+0x2c>)
  400fe0:	681b      	ldr	r3, [r3, #0]

	if (((int)prev_heap + incr) > ramend) {
  400fe2:	181a      	adds	r2, r3, r0
  400fe4:	4908      	ldr	r1, [pc, #32]	; (401008 <_sbrk+0x30>)
  400fe6:	4291      	cmp	r1, r2
  400fe8:	db08      	blt.n	400ffc <_sbrk+0x24>
		return (caddr_t) -1;	
	}

	heap += incr;
  400fea:	4610      	mov	r0, r2
  400fec:	4a05      	ldr	r2, [pc, #20]	; (401004 <_sbrk+0x2c>)
  400fee:	6010      	str	r0, [r2, #0]

	return (caddr_t) prev_heap;
  400ff0:	4618      	mov	r0, r3
  400ff2:	4770      	bx	lr
		heap = (unsigned char *)&_end;
  400ff4:	4a05      	ldr	r2, [pc, #20]	; (40100c <_sbrk+0x34>)
  400ff6:	4b03      	ldr	r3, [pc, #12]	; (401004 <_sbrk+0x2c>)
  400ff8:	601a      	str	r2, [r3, #0]
  400ffa:	e7f0      	b.n	400fde <_sbrk+0x6>
		return (caddr_t) -1;	
  400ffc:	f04f 30ff 	mov.w	r0, #4294967295
}
  401000:	4770      	bx	lr
  401002:	bf00      	nop
  401004:	20000b4c 	.word	0x20000b4c
  401008:	20005ffc 	.word	0x20005ffc
  40100c:	20001398 	.word	0x20001398

00401010 <_close>:
}

extern int _close(int file)
{
	return -1;
}
  401010:	f04f 30ff 	mov.w	r0, #4294967295
  401014:	4770      	bx	lr

00401016 <_fstat>:

extern int _fstat(int file, struct stat *st)
{
	st->st_mode = S_IFCHR;
  401016:	f44f 5300 	mov.w	r3, #8192	; 0x2000
  40101a:	604b      	str	r3, [r1, #4]

	return 0;
}
  40101c:	2000      	movs	r0, #0
  40101e:	4770      	bx	lr

00401020 <_isatty>:

extern int _isatty(int file)
{
	return 1;
}
  401020:	2001      	movs	r0, #1
  401022:	4770      	bx	lr

00401024 <_lseek>:

extern int _lseek(int file, int ptr, int dir)
{
	return 0;
}
  401024:	2000      	movs	r0, #0
  401026:	4770      	bx	lr

00401028 <main>:
 */
#include <asf.h>
#include "BeamBall.h"

int main (void)
{
  401028:	b508      	push	{r3, lr}
	sysclk_init();
  40102a:	4b08      	ldr	r3, [pc, #32]	; (40104c <main+0x24>)
  40102c:	4798      	blx	r3
	board_init();
  40102e:	4b08      	ldr	r3, [pc, #32]	; (401050 <main+0x28>)
  401030:	4798      	blx	r3
	vConfigureUART();
  401032:	4b08      	ldr	r3, [pc, #32]	; (401054 <main+0x2c>)
  401034:	4798      	blx	r3

	puts("Inicializing Beam Ball\r\n");
  401036:	4808      	ldr	r0, [pc, #32]	; (401058 <main+0x30>)
  401038:	4b08      	ldr	r3, [pc, #32]	; (40105c <main+0x34>)
  40103a:	4798      	blx	r3
	//vConfigureButton(); //novo
	//vConfigurePWM();
	//puts("PWM configured complete\r\n");
	vConfigureSensorISR();
  40103c:	4b08      	ldr	r3, [pc, #32]	; (401060 <main+0x38>)
  40103e:	4798      	blx	r3
	vConfigureTimer();
  401040:	4b08      	ldr	r3, [pc, #32]	; (401064 <main+0x3c>)
  401042:	4798      	blx	r3
	
	//vConfigureLCD();
	//drawLCD();
	vReadSensor();
  401044:	4b08      	ldr	r3, [pc, #32]	; (401068 <main+0x40>)
  401046:	4798      	blx	r3
  401048:	e7fe      	b.n	401048 <main+0x20>
  40104a:	bf00      	nop
  40104c:	00400779 	.word	0x00400779
  401050:	004007dd 	.word	0x004007dd
  401054:	004004c9 	.word	0x004004c9
  401058:	00404448 	.word	0x00404448
  40105c:	00401775 	.word	0x00401775
  401060:	00400665 	.word	0x00400665
  401064:	004005b5 	.word	0x004005b5
  401068:	00400305 	.word	0x00400305

0040106c <__aeabi_drsub>:
  40106c:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
  401070:	e002      	b.n	401078 <__adddf3>
  401072:	bf00      	nop

00401074 <__aeabi_dsub>:
  401074:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

00401078 <__adddf3>:
  401078:	b530      	push	{r4, r5, lr}
  40107a:	ea4f 0441 	mov.w	r4, r1, lsl #1
  40107e:	ea4f 0543 	mov.w	r5, r3, lsl #1
  401082:	ea94 0f05 	teq	r4, r5
  401086:	bf08      	it	eq
  401088:	ea90 0f02 	teqeq	r0, r2
  40108c:	bf1f      	itttt	ne
  40108e:	ea54 0c00 	orrsne.w	ip, r4, r0
  401092:	ea55 0c02 	orrsne.w	ip, r5, r2
  401096:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
  40109a:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
  40109e:	f000 80e2 	beq.w	401266 <__adddf3+0x1ee>
  4010a2:	ea4f 5454 	mov.w	r4, r4, lsr #21
  4010a6:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
  4010aa:	bfb8      	it	lt
  4010ac:	426d      	neglt	r5, r5
  4010ae:	dd0c      	ble.n	4010ca <__adddf3+0x52>
  4010b0:	442c      	add	r4, r5
  4010b2:	ea80 0202 	eor.w	r2, r0, r2
  4010b6:	ea81 0303 	eor.w	r3, r1, r3
  4010ba:	ea82 0000 	eor.w	r0, r2, r0
  4010be:	ea83 0101 	eor.w	r1, r3, r1
  4010c2:	ea80 0202 	eor.w	r2, r0, r2
  4010c6:	ea81 0303 	eor.w	r3, r1, r3
  4010ca:	2d36      	cmp	r5, #54	; 0x36
  4010cc:	bf88      	it	hi
  4010ce:	bd30      	pophi	{r4, r5, pc}
  4010d0:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
  4010d4:	ea4f 3101 	mov.w	r1, r1, lsl #12
  4010d8:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
  4010dc:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
  4010e0:	d002      	beq.n	4010e8 <__adddf3+0x70>
  4010e2:	4240      	negs	r0, r0
  4010e4:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
  4010e8:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
  4010ec:	ea4f 3303 	mov.w	r3, r3, lsl #12
  4010f0:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
  4010f4:	d002      	beq.n	4010fc <__adddf3+0x84>
  4010f6:	4252      	negs	r2, r2
  4010f8:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
  4010fc:	ea94 0f05 	teq	r4, r5
  401100:	f000 80a7 	beq.w	401252 <__adddf3+0x1da>
  401104:	f1a4 0401 	sub.w	r4, r4, #1
  401108:	f1d5 0e20 	rsbs	lr, r5, #32
  40110c:	db0d      	blt.n	40112a <__adddf3+0xb2>
  40110e:	fa02 fc0e 	lsl.w	ip, r2, lr
  401112:	fa22 f205 	lsr.w	r2, r2, r5
  401116:	1880      	adds	r0, r0, r2
  401118:	f141 0100 	adc.w	r1, r1, #0
  40111c:	fa03 f20e 	lsl.w	r2, r3, lr
  401120:	1880      	adds	r0, r0, r2
  401122:	fa43 f305 	asr.w	r3, r3, r5
  401126:	4159      	adcs	r1, r3
  401128:	e00e      	b.n	401148 <__adddf3+0xd0>
  40112a:	f1a5 0520 	sub.w	r5, r5, #32
  40112e:	f10e 0e20 	add.w	lr, lr, #32
  401132:	2a01      	cmp	r2, #1
  401134:	fa03 fc0e 	lsl.w	ip, r3, lr
  401138:	bf28      	it	cs
  40113a:	f04c 0c02 	orrcs.w	ip, ip, #2
  40113e:	fa43 f305 	asr.w	r3, r3, r5
  401142:	18c0      	adds	r0, r0, r3
  401144:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
  401148:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
  40114c:	d507      	bpl.n	40115e <__adddf3+0xe6>
  40114e:	f04f 0e00 	mov.w	lr, #0
  401152:	f1dc 0c00 	rsbs	ip, ip, #0
  401156:	eb7e 0000 	sbcs.w	r0, lr, r0
  40115a:	eb6e 0101 	sbc.w	r1, lr, r1
  40115e:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
  401162:	d31b      	bcc.n	40119c <__adddf3+0x124>
  401164:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
  401168:	d30c      	bcc.n	401184 <__adddf3+0x10c>
  40116a:	0849      	lsrs	r1, r1, #1
  40116c:	ea5f 0030 	movs.w	r0, r0, rrx
  401170:	ea4f 0c3c 	mov.w	ip, ip, rrx
  401174:	f104 0401 	add.w	r4, r4, #1
  401178:	ea4f 5244 	mov.w	r2, r4, lsl #21
  40117c:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
  401180:	f080 809a 	bcs.w	4012b8 <__adddf3+0x240>
  401184:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
  401188:	bf08      	it	eq
  40118a:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
  40118e:	f150 0000 	adcs.w	r0, r0, #0
  401192:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
  401196:	ea41 0105 	orr.w	r1, r1, r5
  40119a:	bd30      	pop	{r4, r5, pc}
  40119c:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
  4011a0:	4140      	adcs	r0, r0
  4011a2:	eb41 0101 	adc.w	r1, r1, r1
  4011a6:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
  4011aa:	f1a4 0401 	sub.w	r4, r4, #1
  4011ae:	d1e9      	bne.n	401184 <__adddf3+0x10c>
  4011b0:	f091 0f00 	teq	r1, #0
  4011b4:	bf04      	itt	eq
  4011b6:	4601      	moveq	r1, r0
  4011b8:	2000      	moveq	r0, #0
  4011ba:	fab1 f381 	clz	r3, r1
  4011be:	bf08      	it	eq
  4011c0:	3320      	addeq	r3, #32
  4011c2:	f1a3 030b 	sub.w	r3, r3, #11
  4011c6:	f1b3 0220 	subs.w	r2, r3, #32
  4011ca:	da0c      	bge.n	4011e6 <__adddf3+0x16e>
  4011cc:	320c      	adds	r2, #12
  4011ce:	dd08      	ble.n	4011e2 <__adddf3+0x16a>
  4011d0:	f102 0c14 	add.w	ip, r2, #20
  4011d4:	f1c2 020c 	rsb	r2, r2, #12
  4011d8:	fa01 f00c 	lsl.w	r0, r1, ip
  4011dc:	fa21 f102 	lsr.w	r1, r1, r2
  4011e0:	e00c      	b.n	4011fc <__adddf3+0x184>
  4011e2:	f102 0214 	add.w	r2, r2, #20
  4011e6:	bfd8      	it	le
  4011e8:	f1c2 0c20 	rsble	ip, r2, #32
  4011ec:	fa01 f102 	lsl.w	r1, r1, r2
  4011f0:	fa20 fc0c 	lsr.w	ip, r0, ip
  4011f4:	bfdc      	itt	le
  4011f6:	ea41 010c 	orrle.w	r1, r1, ip
  4011fa:	4090      	lslle	r0, r2
  4011fc:	1ae4      	subs	r4, r4, r3
  4011fe:	bfa2      	ittt	ge
  401200:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
  401204:	4329      	orrge	r1, r5
  401206:	bd30      	popge	{r4, r5, pc}
  401208:	ea6f 0404 	mvn.w	r4, r4
  40120c:	3c1f      	subs	r4, #31
  40120e:	da1c      	bge.n	40124a <__adddf3+0x1d2>
  401210:	340c      	adds	r4, #12
  401212:	dc0e      	bgt.n	401232 <__adddf3+0x1ba>
  401214:	f104 0414 	add.w	r4, r4, #20
  401218:	f1c4 0220 	rsb	r2, r4, #32
  40121c:	fa20 f004 	lsr.w	r0, r0, r4
  401220:	fa01 f302 	lsl.w	r3, r1, r2
  401224:	ea40 0003 	orr.w	r0, r0, r3
  401228:	fa21 f304 	lsr.w	r3, r1, r4
  40122c:	ea45 0103 	orr.w	r1, r5, r3
  401230:	bd30      	pop	{r4, r5, pc}
  401232:	f1c4 040c 	rsb	r4, r4, #12
  401236:	f1c4 0220 	rsb	r2, r4, #32
  40123a:	fa20 f002 	lsr.w	r0, r0, r2
  40123e:	fa01 f304 	lsl.w	r3, r1, r4
  401242:	ea40 0003 	orr.w	r0, r0, r3
  401246:	4629      	mov	r1, r5
  401248:	bd30      	pop	{r4, r5, pc}
  40124a:	fa21 f004 	lsr.w	r0, r1, r4
  40124e:	4629      	mov	r1, r5
  401250:	bd30      	pop	{r4, r5, pc}
  401252:	f094 0f00 	teq	r4, #0
  401256:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
  40125a:	bf06      	itte	eq
  40125c:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
  401260:	3401      	addeq	r4, #1
  401262:	3d01      	subne	r5, #1
  401264:	e74e      	b.n	401104 <__adddf3+0x8c>
  401266:	ea7f 5c64 	mvns.w	ip, r4, asr #21
  40126a:	bf18      	it	ne
  40126c:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
  401270:	d029      	beq.n	4012c6 <__adddf3+0x24e>
  401272:	ea94 0f05 	teq	r4, r5
  401276:	bf08      	it	eq
  401278:	ea90 0f02 	teqeq	r0, r2
  40127c:	d005      	beq.n	40128a <__adddf3+0x212>
  40127e:	ea54 0c00 	orrs.w	ip, r4, r0
  401282:	bf04      	itt	eq
  401284:	4619      	moveq	r1, r3
  401286:	4610      	moveq	r0, r2
  401288:	bd30      	pop	{r4, r5, pc}
  40128a:	ea91 0f03 	teq	r1, r3
  40128e:	bf1e      	ittt	ne
  401290:	2100      	movne	r1, #0
  401292:	2000      	movne	r0, #0
  401294:	bd30      	popne	{r4, r5, pc}
  401296:	ea5f 5c54 	movs.w	ip, r4, lsr #21
  40129a:	d105      	bne.n	4012a8 <__adddf3+0x230>
  40129c:	0040      	lsls	r0, r0, #1
  40129e:	4149      	adcs	r1, r1
  4012a0:	bf28      	it	cs
  4012a2:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
  4012a6:	bd30      	pop	{r4, r5, pc}
  4012a8:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
  4012ac:	bf3c      	itt	cc
  4012ae:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
  4012b2:	bd30      	popcc	{r4, r5, pc}
  4012b4:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
  4012b8:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
  4012bc:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
  4012c0:	f04f 0000 	mov.w	r0, #0
  4012c4:	bd30      	pop	{r4, r5, pc}
  4012c6:	ea7f 5c64 	mvns.w	ip, r4, asr #21
  4012ca:	bf1a      	itte	ne
  4012cc:	4619      	movne	r1, r3
  4012ce:	4610      	movne	r0, r2
  4012d0:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
  4012d4:	bf1c      	itt	ne
  4012d6:	460b      	movne	r3, r1
  4012d8:	4602      	movne	r2, r0
  4012da:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
  4012de:	bf06      	itte	eq
  4012e0:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
  4012e4:	ea91 0f03 	teqeq	r1, r3
  4012e8:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
  4012ec:	bd30      	pop	{r4, r5, pc}
  4012ee:	bf00      	nop

004012f0 <__aeabi_ui2d>:
  4012f0:	f090 0f00 	teq	r0, #0
  4012f4:	bf04      	itt	eq
  4012f6:	2100      	moveq	r1, #0
  4012f8:	4770      	bxeq	lr
  4012fa:	b530      	push	{r4, r5, lr}
  4012fc:	f44f 6480 	mov.w	r4, #1024	; 0x400
  401300:	f104 0432 	add.w	r4, r4, #50	; 0x32
  401304:	f04f 0500 	mov.w	r5, #0
  401308:	f04f 0100 	mov.w	r1, #0
  40130c:	e750      	b.n	4011b0 <__adddf3+0x138>
  40130e:	bf00      	nop

00401310 <__aeabi_i2d>:
  401310:	f090 0f00 	teq	r0, #0
  401314:	bf04      	itt	eq
  401316:	2100      	moveq	r1, #0
  401318:	4770      	bxeq	lr
  40131a:	b530      	push	{r4, r5, lr}
  40131c:	f44f 6480 	mov.w	r4, #1024	; 0x400
  401320:	f104 0432 	add.w	r4, r4, #50	; 0x32
  401324:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
  401328:	bf48      	it	mi
  40132a:	4240      	negmi	r0, r0
  40132c:	f04f 0100 	mov.w	r1, #0
  401330:	e73e      	b.n	4011b0 <__adddf3+0x138>
  401332:	bf00      	nop

00401334 <__aeabi_f2d>:
  401334:	0042      	lsls	r2, r0, #1
  401336:	ea4f 01e2 	mov.w	r1, r2, asr #3
  40133a:	ea4f 0131 	mov.w	r1, r1, rrx
  40133e:	ea4f 7002 	mov.w	r0, r2, lsl #28
  401342:	bf1f      	itttt	ne
  401344:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
  401348:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
  40134c:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
  401350:	4770      	bxne	lr
  401352:	f092 0f00 	teq	r2, #0
  401356:	bf14      	ite	ne
  401358:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
  40135c:	4770      	bxeq	lr
  40135e:	b530      	push	{r4, r5, lr}
  401360:	f44f 7460 	mov.w	r4, #896	; 0x380
  401364:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
  401368:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
  40136c:	e720      	b.n	4011b0 <__adddf3+0x138>
  40136e:	bf00      	nop

00401370 <__aeabi_ul2d>:
  401370:	ea50 0201 	orrs.w	r2, r0, r1
  401374:	bf08      	it	eq
  401376:	4770      	bxeq	lr
  401378:	b530      	push	{r4, r5, lr}
  40137a:	f04f 0500 	mov.w	r5, #0
  40137e:	e00a      	b.n	401396 <__aeabi_l2d+0x16>

00401380 <__aeabi_l2d>:
  401380:	ea50 0201 	orrs.w	r2, r0, r1
  401384:	bf08      	it	eq
  401386:	4770      	bxeq	lr
  401388:	b530      	push	{r4, r5, lr}
  40138a:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
  40138e:	d502      	bpl.n	401396 <__aeabi_l2d+0x16>
  401390:	4240      	negs	r0, r0
  401392:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
  401396:	f44f 6480 	mov.w	r4, #1024	; 0x400
  40139a:	f104 0432 	add.w	r4, r4, #50	; 0x32
  40139e:	ea5f 5c91 	movs.w	ip, r1, lsr #22
  4013a2:	f43f aedc 	beq.w	40115e <__adddf3+0xe6>
  4013a6:	f04f 0203 	mov.w	r2, #3
  4013aa:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
  4013ae:	bf18      	it	ne
  4013b0:	3203      	addne	r2, #3
  4013b2:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
  4013b6:	bf18      	it	ne
  4013b8:	3203      	addne	r2, #3
  4013ba:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
  4013be:	f1c2 0320 	rsb	r3, r2, #32
  4013c2:	fa00 fc03 	lsl.w	ip, r0, r3
  4013c6:	fa20 f002 	lsr.w	r0, r0, r2
  4013ca:	fa01 fe03 	lsl.w	lr, r1, r3
  4013ce:	ea40 000e 	orr.w	r0, r0, lr
  4013d2:	fa21 f102 	lsr.w	r1, r1, r2
  4013d6:	4414      	add	r4, r2
  4013d8:	e6c1      	b.n	40115e <__adddf3+0xe6>
  4013da:	bf00      	nop

004013dc <__aeabi_frsub>:
  4013dc:	f080 4000 	eor.w	r0, r0, #2147483648	; 0x80000000
  4013e0:	e002      	b.n	4013e8 <__addsf3>
  4013e2:	bf00      	nop

004013e4 <__aeabi_fsub>:
  4013e4:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000

004013e8 <__addsf3>:
  4013e8:	0042      	lsls	r2, r0, #1
  4013ea:	bf1f      	itttt	ne
  4013ec:	ea5f 0341 	movsne.w	r3, r1, lsl #1
  4013f0:	ea92 0f03 	teqne	r2, r3
  4013f4:	ea7f 6c22 	mvnsne.w	ip, r2, asr #24
  4013f8:	ea7f 6c23 	mvnsne.w	ip, r3, asr #24
  4013fc:	d06a      	beq.n	4014d4 <__addsf3+0xec>
  4013fe:	ea4f 6212 	mov.w	r2, r2, lsr #24
  401402:	ebd2 6313 	rsbs	r3, r2, r3, lsr #24
  401406:	bfc1      	itttt	gt
  401408:	18d2      	addgt	r2, r2, r3
  40140a:	4041      	eorgt	r1, r0
  40140c:	4048      	eorgt	r0, r1
  40140e:	4041      	eorgt	r1, r0
  401410:	bfb8      	it	lt
  401412:	425b      	neglt	r3, r3
  401414:	2b19      	cmp	r3, #25
  401416:	bf88      	it	hi
  401418:	4770      	bxhi	lr
  40141a:	f010 4f00 	tst.w	r0, #2147483648	; 0x80000000
  40141e:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
  401422:	f020 407f 	bic.w	r0, r0, #4278190080	; 0xff000000
  401426:	bf18      	it	ne
  401428:	4240      	negne	r0, r0
  40142a:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
  40142e:	f441 0100 	orr.w	r1, r1, #8388608	; 0x800000
  401432:	f021 417f 	bic.w	r1, r1, #4278190080	; 0xff000000
  401436:	bf18      	it	ne
  401438:	4249      	negne	r1, r1
  40143a:	ea92 0f03 	teq	r2, r3
  40143e:	d03f      	beq.n	4014c0 <__addsf3+0xd8>
  401440:	f1a2 0201 	sub.w	r2, r2, #1
  401444:	fa41 fc03 	asr.w	ip, r1, r3
  401448:	eb10 000c 	adds.w	r0, r0, ip
  40144c:	f1c3 0320 	rsb	r3, r3, #32
  401450:	fa01 f103 	lsl.w	r1, r1, r3
  401454:	f000 4300 	and.w	r3, r0, #2147483648	; 0x80000000
  401458:	d502      	bpl.n	401460 <__addsf3+0x78>
  40145a:	4249      	negs	r1, r1
  40145c:	eb60 0040 	sbc.w	r0, r0, r0, lsl #1
  401460:	f5b0 0f00 	cmp.w	r0, #8388608	; 0x800000
  401464:	d313      	bcc.n	40148e <__addsf3+0xa6>
  401466:	f1b0 7f80 	cmp.w	r0, #16777216	; 0x1000000
  40146a:	d306      	bcc.n	40147a <__addsf3+0x92>
  40146c:	0840      	lsrs	r0, r0, #1
  40146e:	ea4f 0131 	mov.w	r1, r1, rrx
  401472:	f102 0201 	add.w	r2, r2, #1
  401476:	2afe      	cmp	r2, #254	; 0xfe
  401478:	d251      	bcs.n	40151e <__addsf3+0x136>
  40147a:	f1b1 4f00 	cmp.w	r1, #2147483648	; 0x80000000
  40147e:	eb40 50c2 	adc.w	r0, r0, r2, lsl #23
  401482:	bf08      	it	eq
  401484:	f020 0001 	biceq.w	r0, r0, #1
  401488:	ea40 0003 	orr.w	r0, r0, r3
  40148c:	4770      	bx	lr
  40148e:	0049      	lsls	r1, r1, #1
  401490:	eb40 0000 	adc.w	r0, r0, r0
  401494:	f410 0f00 	tst.w	r0, #8388608	; 0x800000
  401498:	f1a2 0201 	sub.w	r2, r2, #1
  40149c:	d1ed      	bne.n	40147a <__addsf3+0x92>
  40149e:	fab0 fc80 	clz	ip, r0
  4014a2:	f1ac 0c08 	sub.w	ip, ip, #8
  4014a6:	ebb2 020c 	subs.w	r2, r2, ip
  4014aa:	fa00 f00c 	lsl.w	r0, r0, ip
  4014ae:	bfaa      	itet	ge
  4014b0:	eb00 50c2 	addge.w	r0, r0, r2, lsl #23
  4014b4:	4252      	neglt	r2, r2
  4014b6:	4318      	orrge	r0, r3
  4014b8:	bfbc      	itt	lt
  4014ba:	40d0      	lsrlt	r0, r2
  4014bc:	4318      	orrlt	r0, r3
  4014be:	4770      	bx	lr
  4014c0:	f092 0f00 	teq	r2, #0
  4014c4:	f481 0100 	eor.w	r1, r1, #8388608	; 0x800000
  4014c8:	bf06      	itte	eq
  4014ca:	f480 0000 	eoreq.w	r0, r0, #8388608	; 0x800000
  4014ce:	3201      	addeq	r2, #1
  4014d0:	3b01      	subne	r3, #1
  4014d2:	e7b5      	b.n	401440 <__addsf3+0x58>
  4014d4:	ea4f 0341 	mov.w	r3, r1, lsl #1
  4014d8:	ea7f 6c22 	mvns.w	ip, r2, asr #24
  4014dc:	bf18      	it	ne
  4014de:	ea7f 6c23 	mvnsne.w	ip, r3, asr #24
  4014e2:	d021      	beq.n	401528 <__addsf3+0x140>
  4014e4:	ea92 0f03 	teq	r2, r3
  4014e8:	d004      	beq.n	4014f4 <__addsf3+0x10c>
  4014ea:	f092 0f00 	teq	r2, #0
  4014ee:	bf08      	it	eq
  4014f0:	4608      	moveq	r0, r1
  4014f2:	4770      	bx	lr
  4014f4:	ea90 0f01 	teq	r0, r1
  4014f8:	bf1c      	itt	ne
  4014fa:	2000      	movne	r0, #0
  4014fc:	4770      	bxne	lr
  4014fe:	f012 4f7f 	tst.w	r2, #4278190080	; 0xff000000
  401502:	d104      	bne.n	40150e <__addsf3+0x126>
  401504:	0040      	lsls	r0, r0, #1
  401506:	bf28      	it	cs
  401508:	f040 4000 	orrcs.w	r0, r0, #2147483648	; 0x80000000
  40150c:	4770      	bx	lr
  40150e:	f112 7200 	adds.w	r2, r2, #33554432	; 0x2000000
  401512:	bf3c      	itt	cc
  401514:	f500 0000 	addcc.w	r0, r0, #8388608	; 0x800000
  401518:	4770      	bxcc	lr
  40151a:	f000 4300 	and.w	r3, r0, #2147483648	; 0x80000000
  40151e:	f043 40fe 	orr.w	r0, r3, #2130706432	; 0x7f000000
  401522:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
  401526:	4770      	bx	lr
  401528:	ea7f 6222 	mvns.w	r2, r2, asr #24
  40152c:	bf16      	itet	ne
  40152e:	4608      	movne	r0, r1
  401530:	ea7f 6323 	mvnseq.w	r3, r3, asr #24
  401534:	4601      	movne	r1, r0
  401536:	0242      	lsls	r2, r0, #9
  401538:	bf06      	itte	eq
  40153a:	ea5f 2341 	movseq.w	r3, r1, lsl #9
  40153e:	ea90 0f01 	teqeq	r0, r1
  401542:	f440 0080 	orrne.w	r0, r0, #4194304	; 0x400000
  401546:	4770      	bx	lr

00401548 <__aeabi_ui2f>:
  401548:	f04f 0300 	mov.w	r3, #0
  40154c:	e004      	b.n	401558 <__aeabi_i2f+0x8>
  40154e:	bf00      	nop

00401550 <__aeabi_i2f>:
  401550:	f010 4300 	ands.w	r3, r0, #2147483648	; 0x80000000
  401554:	bf48      	it	mi
  401556:	4240      	negmi	r0, r0
  401558:	ea5f 0c00 	movs.w	ip, r0
  40155c:	bf08      	it	eq
  40155e:	4770      	bxeq	lr
  401560:	f043 4396 	orr.w	r3, r3, #1258291200	; 0x4b000000
  401564:	4601      	mov	r1, r0
  401566:	f04f 0000 	mov.w	r0, #0
  40156a:	e01c      	b.n	4015a6 <__aeabi_l2f+0x2a>

0040156c <__aeabi_ul2f>:
  40156c:	ea50 0201 	orrs.w	r2, r0, r1
  401570:	bf08      	it	eq
  401572:	4770      	bxeq	lr
  401574:	f04f 0300 	mov.w	r3, #0
  401578:	e00a      	b.n	401590 <__aeabi_l2f+0x14>
  40157a:	bf00      	nop

0040157c <__aeabi_l2f>:
  40157c:	ea50 0201 	orrs.w	r2, r0, r1
  401580:	bf08      	it	eq
  401582:	4770      	bxeq	lr
  401584:	f011 4300 	ands.w	r3, r1, #2147483648	; 0x80000000
  401588:	d502      	bpl.n	401590 <__aeabi_l2f+0x14>
  40158a:	4240      	negs	r0, r0
  40158c:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
  401590:	ea5f 0c01 	movs.w	ip, r1
  401594:	bf02      	ittt	eq
  401596:	4684      	moveq	ip, r0
  401598:	4601      	moveq	r1, r0
  40159a:	2000      	moveq	r0, #0
  40159c:	f043 43b6 	orr.w	r3, r3, #1526726656	; 0x5b000000
  4015a0:	bf08      	it	eq
  4015a2:	f1a3 5380 	subeq.w	r3, r3, #268435456	; 0x10000000
  4015a6:	f5a3 0300 	sub.w	r3, r3, #8388608	; 0x800000
  4015aa:	fabc f28c 	clz	r2, ip
  4015ae:	3a08      	subs	r2, #8
  4015b0:	eba3 53c2 	sub.w	r3, r3, r2, lsl #23
  4015b4:	db10      	blt.n	4015d8 <__aeabi_l2f+0x5c>
  4015b6:	fa01 fc02 	lsl.w	ip, r1, r2
  4015ba:	4463      	add	r3, ip
  4015bc:	fa00 fc02 	lsl.w	ip, r0, r2
  4015c0:	f1c2 0220 	rsb	r2, r2, #32
  4015c4:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
  4015c8:	fa20 f202 	lsr.w	r2, r0, r2
  4015cc:	eb43 0002 	adc.w	r0, r3, r2
  4015d0:	bf08      	it	eq
  4015d2:	f020 0001 	biceq.w	r0, r0, #1
  4015d6:	4770      	bx	lr
  4015d8:	f102 0220 	add.w	r2, r2, #32
  4015dc:	fa01 fc02 	lsl.w	ip, r1, r2
  4015e0:	f1c2 0220 	rsb	r2, r2, #32
  4015e4:	ea50 004c 	orrs.w	r0, r0, ip, lsl #1
  4015e8:	fa21 f202 	lsr.w	r2, r1, r2
  4015ec:	eb43 0002 	adc.w	r0, r3, r2
  4015f0:	bf08      	it	eq
  4015f2:	ea20 70dc 	biceq.w	r0, r0, ip, lsr #31
  4015f6:	4770      	bx	lr

004015f8 <__libc_init_array>:
  4015f8:	b570      	push	{r4, r5, r6, lr}
  4015fa:	4e0f      	ldr	r6, [pc, #60]	; (401638 <__libc_init_array+0x40>)
  4015fc:	4d0f      	ldr	r5, [pc, #60]	; (40163c <__libc_init_array+0x44>)
  4015fe:	1b76      	subs	r6, r6, r5
  401600:	10b6      	asrs	r6, r6, #2
  401602:	bf18      	it	ne
  401604:	2400      	movne	r4, #0
  401606:	d005      	beq.n	401614 <__libc_init_array+0x1c>
  401608:	3401      	adds	r4, #1
  40160a:	f855 3b04 	ldr.w	r3, [r5], #4
  40160e:	4798      	blx	r3
  401610:	42a6      	cmp	r6, r4
  401612:	d1f9      	bne.n	401608 <__libc_init_array+0x10>
  401614:	4e0a      	ldr	r6, [pc, #40]	; (401640 <__libc_init_array+0x48>)
  401616:	4d0b      	ldr	r5, [pc, #44]	; (401644 <__libc_init_array+0x4c>)
  401618:	f002 ffd8 	bl	4045cc <_init>
  40161c:	1b76      	subs	r6, r6, r5
  40161e:	10b6      	asrs	r6, r6, #2
  401620:	bf18      	it	ne
  401622:	2400      	movne	r4, #0
  401624:	d006      	beq.n	401634 <__libc_init_array+0x3c>
  401626:	3401      	adds	r4, #1
  401628:	f855 3b04 	ldr.w	r3, [r5], #4
  40162c:	4798      	blx	r3
  40162e:	42a6      	cmp	r6, r4
  401630:	d1f9      	bne.n	401626 <__libc_init_array+0x2e>
  401632:	bd70      	pop	{r4, r5, r6, pc}
  401634:	bd70      	pop	{r4, r5, r6, pc}
  401636:	bf00      	nop
  401638:	004045d8 	.word	0x004045d8
  40163c:	004045d8 	.word	0x004045d8
  401640:	004045e0 	.word	0x004045e0
  401644:	004045d8 	.word	0x004045d8

00401648 <iprintf>:
  401648:	b40f      	push	{r0, r1, r2, r3}
  40164a:	b510      	push	{r4, lr}
  40164c:	4b07      	ldr	r3, [pc, #28]	; (40166c <iprintf+0x24>)
  40164e:	b082      	sub	sp, #8
  401650:	ac04      	add	r4, sp, #16
  401652:	f854 2b04 	ldr.w	r2, [r4], #4
  401656:	6818      	ldr	r0, [r3, #0]
  401658:	4623      	mov	r3, r4
  40165a:	6881      	ldr	r1, [r0, #8]
  40165c:	9401      	str	r4, [sp, #4]
  40165e:	f000 f9ad 	bl	4019bc <_vfiprintf_r>
  401662:	b002      	add	sp, #8
  401664:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  401668:	b004      	add	sp, #16
  40166a:	4770      	bx	lr
  40166c:	20000108 	.word	0x20000108

00401670 <memset>:
  401670:	b470      	push	{r4, r5, r6}
  401672:	0786      	lsls	r6, r0, #30
  401674:	d046      	beq.n	401704 <memset+0x94>
  401676:	1e54      	subs	r4, r2, #1
  401678:	2a00      	cmp	r2, #0
  40167a:	d041      	beq.n	401700 <memset+0x90>
  40167c:	b2ca      	uxtb	r2, r1
  40167e:	4603      	mov	r3, r0
  401680:	e002      	b.n	401688 <memset+0x18>
  401682:	f114 34ff 	adds.w	r4, r4, #4294967295
  401686:	d33b      	bcc.n	401700 <memset+0x90>
  401688:	f803 2b01 	strb.w	r2, [r3], #1
  40168c:	079d      	lsls	r5, r3, #30
  40168e:	d1f8      	bne.n	401682 <memset+0x12>
  401690:	2c03      	cmp	r4, #3
  401692:	d92e      	bls.n	4016f2 <memset+0x82>
  401694:	b2cd      	uxtb	r5, r1
  401696:	ea45 2505 	orr.w	r5, r5, r5, lsl #8
  40169a:	2c0f      	cmp	r4, #15
  40169c:	ea45 4505 	orr.w	r5, r5, r5, lsl #16
  4016a0:	d919      	bls.n	4016d6 <memset+0x66>
  4016a2:	4626      	mov	r6, r4
  4016a4:	f103 0210 	add.w	r2, r3, #16
  4016a8:	3e10      	subs	r6, #16
  4016aa:	2e0f      	cmp	r6, #15
  4016ac:	f842 5c10 	str.w	r5, [r2, #-16]
  4016b0:	f842 5c0c 	str.w	r5, [r2, #-12]
  4016b4:	f842 5c08 	str.w	r5, [r2, #-8]
  4016b8:	f842 5c04 	str.w	r5, [r2, #-4]
  4016bc:	f102 0210 	add.w	r2, r2, #16
  4016c0:	d8f2      	bhi.n	4016a8 <memset+0x38>
  4016c2:	f1a4 0210 	sub.w	r2, r4, #16
  4016c6:	f022 020f 	bic.w	r2, r2, #15
  4016ca:	f004 040f 	and.w	r4, r4, #15
  4016ce:	3210      	adds	r2, #16
  4016d0:	2c03      	cmp	r4, #3
  4016d2:	4413      	add	r3, r2
  4016d4:	d90d      	bls.n	4016f2 <memset+0x82>
  4016d6:	461e      	mov	r6, r3
  4016d8:	4622      	mov	r2, r4
  4016da:	3a04      	subs	r2, #4
  4016dc:	2a03      	cmp	r2, #3
  4016de:	f846 5b04 	str.w	r5, [r6], #4
  4016e2:	d8fa      	bhi.n	4016da <memset+0x6a>
  4016e4:	1f22      	subs	r2, r4, #4
  4016e6:	f022 0203 	bic.w	r2, r2, #3
  4016ea:	3204      	adds	r2, #4
  4016ec:	4413      	add	r3, r2
  4016ee:	f004 0403 	and.w	r4, r4, #3
  4016f2:	b12c      	cbz	r4, 401700 <memset+0x90>
  4016f4:	b2c9      	uxtb	r1, r1
  4016f6:	441c      	add	r4, r3
  4016f8:	f803 1b01 	strb.w	r1, [r3], #1
  4016fc:	429c      	cmp	r4, r3
  4016fe:	d1fb      	bne.n	4016f8 <memset+0x88>
  401700:	bc70      	pop	{r4, r5, r6}
  401702:	4770      	bx	lr
  401704:	4614      	mov	r4, r2
  401706:	4603      	mov	r3, r0
  401708:	e7c2      	b.n	401690 <memset+0x20>
  40170a:	bf00      	nop

0040170c <_puts_r>:
  40170c:	b5f0      	push	{r4, r5, r6, r7, lr}
  40170e:	4605      	mov	r5, r0
  401710:	b089      	sub	sp, #36	; 0x24
  401712:	4608      	mov	r0, r1
  401714:	460c      	mov	r4, r1
  401716:	2701      	movs	r7, #1
  401718:	f000 f8e2 	bl	4018e0 <strlen>
  40171c:	2602      	movs	r6, #2
  40171e:	19c3      	adds	r3, r0, r7
  401720:	4913      	ldr	r1, [pc, #76]	; (401770 <_puts_r+0x64>)
  401722:	9303      	str	r3, [sp, #12]
  401724:	6bab      	ldr	r3, [r5, #56]	; 0x38
  401726:	aa04      	add	r2, sp, #16
  401728:	9404      	str	r4, [sp, #16]
  40172a:	9005      	str	r0, [sp, #20]
  40172c:	68ac      	ldr	r4, [r5, #8]
  40172e:	9707      	str	r7, [sp, #28]
  401730:	9602      	str	r6, [sp, #8]
  401732:	9106      	str	r1, [sp, #24]
  401734:	9201      	str	r2, [sp, #4]
  401736:	b1b3      	cbz	r3, 401766 <_puts_r+0x5a>
  401738:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  40173c:	049a      	lsls	r2, r3, #18
  40173e:	d406      	bmi.n	40174e <_puts_r+0x42>
  401740:	6e62      	ldr	r2, [r4, #100]	; 0x64
  401742:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
  401746:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
  40174a:	81a3      	strh	r3, [r4, #12]
  40174c:	6662      	str	r2, [r4, #100]	; 0x64
  40174e:	4621      	mov	r1, r4
  401750:	4628      	mov	r0, r5
  401752:	aa01      	add	r2, sp, #4
  401754:	f001 fabe 	bl	402cd4 <__sfvwrite_r>
  401758:	2800      	cmp	r0, #0
  40175a:	bf14      	ite	ne
  40175c:	f04f 30ff 	movne.w	r0, #4294967295
  401760:	200a      	moveq	r0, #10
  401762:	b009      	add	sp, #36	; 0x24
  401764:	bdf0      	pop	{r4, r5, r6, r7, pc}
  401766:	4628      	mov	r0, r5
  401768:	f001 f8fc 	bl	402964 <__sinit>
  40176c:	e7e4      	b.n	401738 <_puts_r+0x2c>
  40176e:	bf00      	nop
  401770:	004043ec 	.word	0x004043ec

00401774 <puts>:
  401774:	4b02      	ldr	r3, [pc, #8]	; (401780 <puts+0xc>)
  401776:	4601      	mov	r1, r0
  401778:	6818      	ldr	r0, [r3, #0]
  40177a:	f7ff bfc7 	b.w	40170c <_puts_r>
  40177e:	bf00      	nop
  401780:	20000108 	.word	0x20000108

00401784 <setbuf>:
  401784:	2900      	cmp	r1, #0
  401786:	bf0c      	ite	eq
  401788:	2202      	moveq	r2, #2
  40178a:	2200      	movne	r2, #0
  40178c:	f44f 6380 	mov.w	r3, #1024	; 0x400
  401790:	f000 b800 	b.w	401794 <setvbuf>

00401794 <setvbuf>:
  401794:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
  401798:	4d50      	ldr	r5, [pc, #320]	; (4018dc <setvbuf+0x148>)
  40179a:	b083      	sub	sp, #12
  40179c:	682d      	ldr	r5, [r5, #0]
  40179e:	4604      	mov	r4, r0
  4017a0:	460f      	mov	r7, r1
  4017a2:	4690      	mov	r8, r2
  4017a4:	461e      	mov	r6, r3
  4017a6:	b115      	cbz	r5, 4017ae <setvbuf+0x1a>
  4017a8:	6bab      	ldr	r3, [r5, #56]	; 0x38
  4017aa:	2b00      	cmp	r3, #0
  4017ac:	d077      	beq.n	40189e <setvbuf+0x10a>
  4017ae:	f1b8 0f02 	cmp.w	r8, #2
  4017b2:	d004      	beq.n	4017be <setvbuf+0x2a>
  4017b4:	f1b8 0f01 	cmp.w	r8, #1
  4017b8:	d87d      	bhi.n	4018b6 <setvbuf+0x122>
  4017ba:	2e00      	cmp	r6, #0
  4017bc:	db7b      	blt.n	4018b6 <setvbuf+0x122>
  4017be:	4621      	mov	r1, r4
  4017c0:	4628      	mov	r0, r5
  4017c2:	f001 f83b 	bl	40283c <_fflush_r>
  4017c6:	6b21      	ldr	r1, [r4, #48]	; 0x30
  4017c8:	b141      	cbz	r1, 4017dc <setvbuf+0x48>
  4017ca:	f104 0340 	add.w	r3, r4, #64	; 0x40
  4017ce:	4299      	cmp	r1, r3
  4017d0:	d002      	beq.n	4017d8 <setvbuf+0x44>
  4017d2:	4628      	mov	r0, r5
  4017d4:	f001 f998 	bl	402b08 <_free_r>
  4017d8:	2300      	movs	r3, #0
  4017da:	6323      	str	r3, [r4, #48]	; 0x30
  4017dc:	2200      	movs	r2, #0
  4017de:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  4017e2:	61a2      	str	r2, [r4, #24]
  4017e4:	6062      	str	r2, [r4, #4]
  4017e6:	061a      	lsls	r2, r3, #24
  4017e8:	d452      	bmi.n	401890 <setvbuf+0xfc>
  4017ea:	f423 634a 	bic.w	r3, r3, #3232	; 0xca0
  4017ee:	f023 0303 	bic.w	r3, r3, #3
  4017f2:	f1b8 0f02 	cmp.w	r8, #2
  4017f6:	81a3      	strh	r3, [r4, #12]
  4017f8:	d037      	beq.n	40186a <setvbuf+0xd6>
  4017fa:	ab01      	add	r3, sp, #4
  4017fc:	466a      	mov	r2, sp
  4017fe:	4621      	mov	r1, r4
  401800:	4628      	mov	r0, r5
  401802:	f001 fc17 	bl	403034 <__swhatbuf_r>
  401806:	89a3      	ldrh	r3, [r4, #12]
  401808:	4318      	orrs	r0, r3
  40180a:	81a0      	strh	r0, [r4, #12]
  40180c:	b316      	cbz	r6, 401854 <setvbuf+0xc0>
  40180e:	b317      	cbz	r7, 401856 <setvbuf+0xc2>
  401810:	6bab      	ldr	r3, [r5, #56]	; 0x38
  401812:	2b00      	cmp	r3, #0
  401814:	d04b      	beq.n	4018ae <setvbuf+0x11a>
  401816:	9b00      	ldr	r3, [sp, #0]
  401818:	6027      	str	r7, [r4, #0]
  40181a:	429e      	cmp	r6, r3
  40181c:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  401820:	6127      	str	r7, [r4, #16]
  401822:	bf1c      	itt	ne
  401824:	f443 6300 	orrne.w	r3, r3, #2048	; 0x800
  401828:	81a3      	strhne	r3, [r4, #12]
  40182a:	f1b8 0f01 	cmp.w	r8, #1
  40182e:	bf04      	itt	eq
  401830:	f043 0301 	orreq.w	r3, r3, #1
  401834:	81a3      	strheq	r3, [r4, #12]
  401836:	b29b      	uxth	r3, r3
  401838:	f013 0008 	ands.w	r0, r3, #8
  40183c:	6166      	str	r6, [r4, #20]
  40183e:	d023      	beq.n	401888 <setvbuf+0xf4>
  401840:	f013 0001 	ands.w	r0, r3, #1
  401844:	d02f      	beq.n	4018a6 <setvbuf+0x112>
  401846:	2000      	movs	r0, #0
  401848:	4276      	negs	r6, r6
  40184a:	61a6      	str	r6, [r4, #24]
  40184c:	60a0      	str	r0, [r4, #8]
  40184e:	b003      	add	sp, #12
  401850:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
  401854:	9e00      	ldr	r6, [sp, #0]
  401856:	4630      	mov	r0, r6
  401858:	f001 fc5e 	bl	403118 <malloc>
  40185c:	4607      	mov	r7, r0
  40185e:	b368      	cbz	r0, 4018bc <setvbuf+0x128>
  401860:	89a3      	ldrh	r3, [r4, #12]
  401862:	f043 0380 	orr.w	r3, r3, #128	; 0x80
  401866:	81a3      	strh	r3, [r4, #12]
  401868:	e7d2      	b.n	401810 <setvbuf+0x7c>
  40186a:	2000      	movs	r0, #0
  40186c:	2500      	movs	r5, #0
  40186e:	2101      	movs	r1, #1
  401870:	f104 0243 	add.w	r2, r4, #67	; 0x43
  401874:	f043 0302 	orr.w	r3, r3, #2
  401878:	81a3      	strh	r3, [r4, #12]
  40187a:	60a5      	str	r5, [r4, #8]
  40187c:	6161      	str	r1, [r4, #20]
  40187e:	6022      	str	r2, [r4, #0]
  401880:	6122      	str	r2, [r4, #16]
  401882:	b003      	add	sp, #12
  401884:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
  401888:	60a0      	str	r0, [r4, #8]
  40188a:	b003      	add	sp, #12
  40188c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
  401890:	6921      	ldr	r1, [r4, #16]
  401892:	4628      	mov	r0, r5
  401894:	f001 f938 	bl	402b08 <_free_r>
  401898:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  40189c:	e7a5      	b.n	4017ea <setvbuf+0x56>
  40189e:	4628      	mov	r0, r5
  4018a0:	f001 f860 	bl	402964 <__sinit>
  4018a4:	e783      	b.n	4017ae <setvbuf+0x1a>
  4018a6:	60a6      	str	r6, [r4, #8]
  4018a8:	b003      	add	sp, #12
  4018aa:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
  4018ae:	4628      	mov	r0, r5
  4018b0:	f001 f858 	bl	402964 <__sinit>
  4018b4:	e7af      	b.n	401816 <setvbuf+0x82>
  4018b6:	f04f 30ff 	mov.w	r0, #4294967295
  4018ba:	e7e2      	b.n	401882 <setvbuf+0xee>
  4018bc:	f8dd 9000 	ldr.w	r9, [sp]
  4018c0:	45b1      	cmp	r9, r6
  4018c2:	d006      	beq.n	4018d2 <setvbuf+0x13e>
  4018c4:	4648      	mov	r0, r9
  4018c6:	f001 fc27 	bl	403118 <malloc>
  4018ca:	4607      	mov	r7, r0
  4018cc:	b108      	cbz	r0, 4018d2 <setvbuf+0x13e>
  4018ce:	464e      	mov	r6, r9
  4018d0:	e7c6      	b.n	401860 <setvbuf+0xcc>
  4018d2:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  4018d6:	f04f 30ff 	mov.w	r0, #4294967295
  4018da:	e7c7      	b.n	40186c <setvbuf+0xd8>
  4018dc:	20000108 	.word	0x20000108

004018e0 <strlen>:
  4018e0:	f020 0103 	bic.w	r1, r0, #3
  4018e4:	f010 0003 	ands.w	r0, r0, #3
  4018e8:	f1c0 0000 	rsb	r0, r0, #0
  4018ec:	f851 3b04 	ldr.w	r3, [r1], #4
  4018f0:	f100 0c04 	add.w	ip, r0, #4
  4018f4:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
  4018f8:	f06f 0200 	mvn.w	r2, #0
  4018fc:	bf1c      	itt	ne
  4018fe:	fa22 f20c 	lsrne.w	r2, r2, ip
  401902:	4313      	orrne	r3, r2
  401904:	f04f 0c01 	mov.w	ip, #1
  401908:	ea4c 2c0c 	orr.w	ip, ip, ip, lsl #8
  40190c:	ea4c 4c0c 	orr.w	ip, ip, ip, lsl #16
  401910:	eba3 020c 	sub.w	r2, r3, ip
  401914:	ea22 0203 	bic.w	r2, r2, r3
  401918:	ea12 12cc 	ands.w	r2, r2, ip, lsl #7
  40191c:	bf04      	itt	eq
  40191e:	f851 3b04 	ldreq.w	r3, [r1], #4
  401922:	3004      	addeq	r0, #4
  401924:	d0f4      	beq.n	401910 <strlen+0x30>
  401926:	f1c2 0100 	rsb	r1, r2, #0
  40192a:	ea02 0201 	and.w	r2, r2, r1
  40192e:	fab2 f282 	clz	r2, r2
  401932:	f1c2 021f 	rsb	r2, r2, #31
  401936:	eb00 00d2 	add.w	r0, r0, r2, lsr #3
  40193a:	4770      	bx	lr

0040193c <__sprint_r.part.0>:
  40193c:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
  401940:	6e4b      	ldr	r3, [r1, #100]	; 0x64
  401942:	4693      	mov	fp, r2
  401944:	049c      	lsls	r4, r3, #18
  401946:	d52f      	bpl.n	4019a8 <__sprint_r.part.0+0x6c>
  401948:	6893      	ldr	r3, [r2, #8]
  40194a:	6812      	ldr	r2, [r2, #0]
  40194c:	b353      	cbz	r3, 4019a4 <__sprint_r.part.0+0x68>
  40194e:	460e      	mov	r6, r1
  401950:	4607      	mov	r7, r0
  401952:	f102 0908 	add.w	r9, r2, #8
  401956:	e919 0420 	ldmdb	r9, {r5, sl}
  40195a:	ea5f 089a 	movs.w	r8, sl, lsr #2
  40195e:	d017      	beq.n	401990 <__sprint_r.part.0+0x54>
  401960:	2400      	movs	r4, #0
  401962:	3d04      	subs	r5, #4
  401964:	e001      	b.n	40196a <__sprint_r.part.0+0x2e>
  401966:	45a0      	cmp	r8, r4
  401968:	d010      	beq.n	40198c <__sprint_r.part.0+0x50>
  40196a:	4632      	mov	r2, r6
  40196c:	f855 1f04 	ldr.w	r1, [r5, #4]!
  401970:	4638      	mov	r0, r7
  401972:	f001 f867 	bl	402a44 <_fputwc_r>
  401976:	1c43      	adds	r3, r0, #1
  401978:	f104 0401 	add.w	r4, r4, #1
  40197c:	d1f3      	bne.n	401966 <__sprint_r.part.0+0x2a>
  40197e:	2300      	movs	r3, #0
  401980:	f8cb 3008 	str.w	r3, [fp, #8]
  401984:	f8cb 3004 	str.w	r3, [fp, #4]
  401988:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
  40198c:	f8db 3008 	ldr.w	r3, [fp, #8]
  401990:	f02a 0a03 	bic.w	sl, sl, #3
  401994:	eba3 030a 	sub.w	r3, r3, sl
  401998:	f8cb 3008 	str.w	r3, [fp, #8]
  40199c:	f109 0908 	add.w	r9, r9, #8
  4019a0:	2b00      	cmp	r3, #0
  4019a2:	d1d8      	bne.n	401956 <__sprint_r.part.0+0x1a>
  4019a4:	2000      	movs	r0, #0
  4019a6:	e7ea      	b.n	40197e <__sprint_r.part.0+0x42>
  4019a8:	f001 f994 	bl	402cd4 <__sfvwrite_r>
  4019ac:	2300      	movs	r3, #0
  4019ae:	f8cb 3008 	str.w	r3, [fp, #8]
  4019b2:	f8cb 3004 	str.w	r3, [fp, #4]
  4019b6:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
  4019ba:	bf00      	nop

004019bc <_vfiprintf_r>:
  4019bc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  4019c0:	b0ad      	sub	sp, #180	; 0xb4
  4019c2:	461d      	mov	r5, r3
  4019c4:	9101      	str	r1, [sp, #4]
  4019c6:	4691      	mov	r9, r2
  4019c8:	9308      	str	r3, [sp, #32]
  4019ca:	9006      	str	r0, [sp, #24]
  4019cc:	b118      	cbz	r0, 4019d6 <_vfiprintf_r+0x1a>
  4019ce:	6b83      	ldr	r3, [r0, #56]	; 0x38
  4019d0:	2b00      	cmp	r3, #0
  4019d2:	f000 80e0 	beq.w	401b96 <_vfiprintf_r+0x1da>
  4019d6:	9c01      	ldr	r4, [sp, #4]
  4019d8:	f9b4 000c 	ldrsh.w	r0, [r4, #12]
  4019dc:	b281      	uxth	r1, r0
  4019de:	048b      	lsls	r3, r1, #18
  4019e0:	d407      	bmi.n	4019f2 <_vfiprintf_r+0x36>
  4019e2:	6e63      	ldr	r3, [r4, #100]	; 0x64
  4019e4:	f440 5100 	orr.w	r1, r0, #8192	; 0x2000
  4019e8:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
  4019ec:	81a1      	strh	r1, [r4, #12]
  4019ee:	6663      	str	r3, [r4, #100]	; 0x64
  4019f0:	b289      	uxth	r1, r1
  4019f2:	070f      	lsls	r7, r1, #28
  4019f4:	f140 80b1 	bpl.w	401b5a <_vfiprintf_r+0x19e>
  4019f8:	9b01      	ldr	r3, [sp, #4]
  4019fa:	691b      	ldr	r3, [r3, #16]
  4019fc:	2b00      	cmp	r3, #0
  4019fe:	f000 80ac 	beq.w	401b5a <_vfiprintf_r+0x19e>
  401a02:	f001 011a 	and.w	r1, r1, #26
  401a06:	290a      	cmp	r1, #10
  401a08:	f000 80b5 	beq.w	401b76 <_vfiprintf_r+0x1ba>
  401a0c:	2300      	movs	r3, #0
  401a0e:	f10d 0a70 	add.w	sl, sp, #112	; 0x70
  401a12:	46d3      	mov	fp, sl
  401a14:	930b      	str	r3, [sp, #44]	; 0x2c
  401a16:	9304      	str	r3, [sp, #16]
  401a18:	9311      	str	r3, [sp, #68]	; 0x44
  401a1a:	9310      	str	r3, [sp, #64]	; 0x40
  401a1c:	f8cd a03c 	str.w	sl, [sp, #60]	; 0x3c
  401a20:	f899 3000 	ldrb.w	r3, [r9]
  401a24:	464c      	mov	r4, r9
  401a26:	b1fb      	cbz	r3, 401a68 <_vfiprintf_r+0xac>
  401a28:	2b25      	cmp	r3, #37	; 0x25
  401a2a:	d102      	bne.n	401a32 <_vfiprintf_r+0x76>
  401a2c:	e01c      	b.n	401a68 <_vfiprintf_r+0xac>
  401a2e:	2b25      	cmp	r3, #37	; 0x25
  401a30:	d003      	beq.n	401a3a <_vfiprintf_r+0x7e>
  401a32:	f814 3f01 	ldrb.w	r3, [r4, #1]!
  401a36:	2b00      	cmp	r3, #0
  401a38:	d1f9      	bne.n	401a2e <_vfiprintf_r+0x72>
  401a3a:	eba4 0509 	sub.w	r5, r4, r9
  401a3e:	b19d      	cbz	r5, 401a68 <_vfiprintf_r+0xac>
  401a40:	9b10      	ldr	r3, [sp, #64]	; 0x40
  401a42:	9a11      	ldr	r2, [sp, #68]	; 0x44
  401a44:	3301      	adds	r3, #1
  401a46:	442a      	add	r2, r5
  401a48:	2b07      	cmp	r3, #7
  401a4a:	f8cb 9000 	str.w	r9, [fp]
  401a4e:	f8cb 5004 	str.w	r5, [fp, #4]
  401a52:	9211      	str	r2, [sp, #68]	; 0x44
  401a54:	9310      	str	r3, [sp, #64]	; 0x40
  401a56:	dd7a      	ble.n	401b4e <_vfiprintf_r+0x192>
  401a58:	2a00      	cmp	r2, #0
  401a5a:	f040 8493 	bne.w	402384 <_vfiprintf_r+0x9c8>
  401a5e:	46d3      	mov	fp, sl
  401a60:	9b04      	ldr	r3, [sp, #16]
  401a62:	9210      	str	r2, [sp, #64]	; 0x40
  401a64:	442b      	add	r3, r5
  401a66:	9304      	str	r3, [sp, #16]
  401a68:	7823      	ldrb	r3, [r4, #0]
  401a6a:	2b00      	cmp	r3, #0
  401a6c:	f000 83b6 	beq.w	4021dc <_vfiprintf_r+0x820>
  401a70:	2000      	movs	r0, #0
  401a72:	f04f 0300 	mov.w	r3, #0
  401a76:	f104 0901 	add.w	r9, r4, #1
  401a7a:	f88d 3037 	strb.w	r3, [sp, #55]	; 0x37
  401a7e:	7862      	ldrb	r2, [r4, #1]
  401a80:	4606      	mov	r6, r0
  401a82:	4605      	mov	r5, r0
  401a84:	4603      	mov	r3, r0
  401a86:	f04f 34ff 	mov.w	r4, #4294967295
  401a8a:	f109 0901 	add.w	r9, r9, #1
  401a8e:	f1a2 0120 	sub.w	r1, r2, #32
  401a92:	2958      	cmp	r1, #88	; 0x58
  401a94:	f200 830a 	bhi.w	4020ac <_vfiprintf_r+0x6f0>
  401a98:	e8df f011 	tbh	[pc, r1, lsl #1]
  401a9c:	0308023f 	.word	0x0308023f
  401aa0:	02e70308 	.word	0x02e70308
  401aa4:	03080308 	.word	0x03080308
  401aa8:	03080308 	.word	0x03080308
  401aac:	03080308 	.word	0x03080308
  401ab0:	02ec0080 	.word	0x02ec0080
  401ab4:	00880308 	.word	0x00880308
  401ab8:	0308027f 	.word	0x0308027f
  401abc:	01db01d6 	.word	0x01db01d6
  401ac0:	01db01db 	.word	0x01db01db
  401ac4:	01db01db 	.word	0x01db01db
  401ac8:	01db01db 	.word	0x01db01db
  401acc:	01db01db 	.word	0x01db01db
  401ad0:	03080308 	.word	0x03080308
  401ad4:	03080308 	.word	0x03080308
  401ad8:	03080308 	.word	0x03080308
  401adc:	03080308 	.word	0x03080308
  401ae0:	03080308 	.word	0x03080308
  401ae4:	03080247 	.word	0x03080247
  401ae8:	03080308 	.word	0x03080308
  401aec:	03080308 	.word	0x03080308
  401af0:	03080308 	.word	0x03080308
  401af4:	03080308 	.word	0x03080308
  401af8:	024e0308 	.word	0x024e0308
  401afc:	03080308 	.word	0x03080308
  401b00:	03080308 	.word	0x03080308
  401b04:	02520308 	.word	0x02520308
  401b08:	03080308 	.word	0x03080308
  401b0c:	0308025a 	.word	0x0308025a
  401b10:	03080308 	.word	0x03080308
  401b14:	03080308 	.word	0x03080308
  401b18:	03080308 	.word	0x03080308
  401b1c:	03080308 	.word	0x03080308
  401b20:	01e90308 	.word	0x01e90308
  401b24:	030801fe 	.word	0x030801fe
  401b28:	03080308 	.word	0x03080308
  401b2c:	01fe0303 	.word	0x01fe0303
  401b30:	03080308 	.word	0x03080308
  401b34:	03080299 	.word	0x03080299
  401b38:	008d02f1 	.word	0x008d02f1
  401b3c:	02bf02ad 	.word	0x02bf02ad
  401b40:	02c40308 	.word	0x02c40308
  401b44:	01c40308 	.word	0x01c40308
  401b48:	03080308 	.word	0x03080308
  401b4c:	02a6      	.short	0x02a6
  401b4e:	f10b 0b08 	add.w	fp, fp, #8
  401b52:	9b04      	ldr	r3, [sp, #16]
  401b54:	442b      	add	r3, r5
  401b56:	9304      	str	r3, [sp, #16]
  401b58:	e786      	b.n	401a68 <_vfiprintf_r+0xac>
  401b5a:	9c01      	ldr	r4, [sp, #4]
  401b5c:	9806      	ldr	r0, [sp, #24]
  401b5e:	4621      	mov	r1, r4
  401b60:	f000 fd5c 	bl	40261c <__swsetup_r>
  401b64:	2800      	cmp	r0, #0
  401b66:	f040 8345 	bne.w	4021f4 <_vfiprintf_r+0x838>
  401b6a:	89a1      	ldrh	r1, [r4, #12]
  401b6c:	f001 011a 	and.w	r1, r1, #26
  401b70:	290a      	cmp	r1, #10
  401b72:	f47f af4b 	bne.w	401a0c <_vfiprintf_r+0x50>
  401b76:	9901      	ldr	r1, [sp, #4]
  401b78:	f9b1 300e 	ldrsh.w	r3, [r1, #14]
  401b7c:	2b00      	cmp	r3, #0
  401b7e:	f6ff af45 	blt.w	401a0c <_vfiprintf_r+0x50>
  401b82:	462b      	mov	r3, r5
  401b84:	464a      	mov	r2, r9
  401b86:	9806      	ldr	r0, [sp, #24]
  401b88:	f000 fd12 	bl	4025b0 <__sbprintf>
  401b8c:	9004      	str	r0, [sp, #16]
  401b8e:	9804      	ldr	r0, [sp, #16]
  401b90:	b02d      	add	sp, #180	; 0xb4
  401b92:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  401b96:	f000 fee5 	bl	402964 <__sinit>
  401b9a:	e71c      	b.n	4019d6 <_vfiprintf_r+0x1a>
  401b9c:	9908      	ldr	r1, [sp, #32]
  401b9e:	460a      	mov	r2, r1
  401ba0:	680d      	ldr	r5, [r1, #0]
  401ba2:	3204      	adds	r2, #4
  401ba4:	2d00      	cmp	r5, #0
  401ba6:	9208      	str	r2, [sp, #32]
  401ba8:	da02      	bge.n	401bb0 <_vfiprintf_r+0x1f4>
  401baa:	426d      	negs	r5, r5
  401bac:	f043 0304 	orr.w	r3, r3, #4
  401bb0:	f899 2000 	ldrb.w	r2, [r9]
  401bb4:	e769      	b.n	401a8a <_vfiprintf_r+0xce>
  401bb6:	9507      	str	r5, [sp, #28]
  401bb8:	f013 0220 	ands.w	r2, r3, #32
  401bbc:	f040 843d 	bne.w	40243a <_vfiprintf_r+0xa7e>
  401bc0:	f013 0110 	ands.w	r1, r3, #16
  401bc4:	f040 83e9 	bne.w	40239a <_vfiprintf_r+0x9de>
  401bc8:	f013 0240 	ands.w	r2, r3, #64	; 0x40
  401bcc:	f000 83e5 	beq.w	40239a <_vfiprintf_r+0x9de>
  401bd0:	9808      	ldr	r0, [sp, #32]
  401bd2:	460a      	mov	r2, r1
  401bd4:	4601      	mov	r1, r0
  401bd6:	2700      	movs	r7, #0
  401bd8:	3104      	adds	r1, #4
  401bda:	8806      	ldrh	r6, [r0, #0]
  401bdc:	9108      	str	r1, [sp, #32]
  401bde:	f04f 0100 	mov.w	r1, #0
  401be2:	2500      	movs	r5, #0
  401be4:	f88d 1037 	strb.w	r1, [sp, #55]	; 0x37
  401be8:	1c61      	adds	r1, r4, #1
  401bea:	f000 8177 	beq.w	401edc <_vfiprintf_r+0x520>
  401bee:	f023 0180 	bic.w	r1, r3, #128	; 0x80
  401bf2:	9103      	str	r1, [sp, #12]
  401bf4:	ea56 0107 	orrs.w	r1, r6, r7
  401bf8:	f040 8175 	bne.w	401ee6 <_vfiprintf_r+0x52a>
  401bfc:	2c00      	cmp	r4, #0
  401bfe:	f040 8354 	bne.w	4022aa <_vfiprintf_r+0x8ee>
  401c02:	2a00      	cmp	r2, #0
  401c04:	f040 8393 	bne.w	40232e <_vfiprintf_r+0x972>
  401c08:	f013 0301 	ands.w	r3, r3, #1
  401c0c:	9305      	str	r3, [sp, #20]
  401c0e:	f000 8442 	beq.w	402496 <_vfiprintf_r+0xada>
  401c12:	2330      	movs	r3, #48	; 0x30
  401c14:	f10d 08b0 	add.w	r8, sp, #176	; 0xb0
  401c18:	f808 3d41 	strb.w	r3, [r8, #-65]!
  401c1c:	9b05      	ldr	r3, [sp, #20]
  401c1e:	42a3      	cmp	r3, r4
  401c20:	bfb8      	it	lt
  401c22:	4623      	movlt	r3, r4
  401c24:	9302      	str	r3, [sp, #8]
  401c26:	b10d      	cbz	r5, 401c2c <_vfiprintf_r+0x270>
  401c28:	3301      	adds	r3, #1
  401c2a:	9302      	str	r3, [sp, #8]
  401c2c:	9b03      	ldr	r3, [sp, #12]
  401c2e:	f013 0302 	ands.w	r3, r3, #2
  401c32:	9309      	str	r3, [sp, #36]	; 0x24
  401c34:	d002      	beq.n	401c3c <_vfiprintf_r+0x280>
  401c36:	9b02      	ldr	r3, [sp, #8]
  401c38:	3302      	adds	r3, #2
  401c3a:	9302      	str	r3, [sp, #8]
  401c3c:	9b03      	ldr	r3, [sp, #12]
  401c3e:	f013 0384 	ands.w	r3, r3, #132	; 0x84
  401c42:	930a      	str	r3, [sp, #40]	; 0x28
  401c44:	f040 8261 	bne.w	40210a <_vfiprintf_r+0x74e>
  401c48:	9b07      	ldr	r3, [sp, #28]
  401c4a:	9a02      	ldr	r2, [sp, #8]
  401c4c:	1a9d      	subs	r5, r3, r2
  401c4e:	2d00      	cmp	r5, #0
  401c50:	f340 825b 	ble.w	40210a <_vfiprintf_r+0x74e>
  401c54:	2d10      	cmp	r5, #16
  401c56:	f340 8468 	ble.w	40252a <_vfiprintf_r+0xb6e>
  401c5a:	9b10      	ldr	r3, [sp, #64]	; 0x40
  401c5c:	46de      	mov	lr, fp
  401c5e:	2710      	movs	r7, #16
  401c60:	46a3      	mov	fp, r4
  401c62:	9a11      	ldr	r2, [sp, #68]	; 0x44
  401c64:	4eb8      	ldr	r6, [pc, #736]	; (401f48 <_vfiprintf_r+0x58c>)
  401c66:	4619      	mov	r1, r3
  401c68:	9c06      	ldr	r4, [sp, #24]
  401c6a:	e007      	b.n	401c7c <_vfiprintf_r+0x2c0>
  401c6c:	f101 0c02 	add.w	ip, r1, #2
  401c70:	4601      	mov	r1, r0
  401c72:	f10e 0e08 	add.w	lr, lr, #8
  401c76:	3d10      	subs	r5, #16
  401c78:	2d10      	cmp	r5, #16
  401c7a:	dd11      	ble.n	401ca0 <_vfiprintf_r+0x2e4>
  401c7c:	1c48      	adds	r0, r1, #1
  401c7e:	3210      	adds	r2, #16
  401c80:	2807      	cmp	r0, #7
  401c82:	9211      	str	r2, [sp, #68]	; 0x44
  401c84:	e88e 00c0 	stmia.w	lr, {r6, r7}
  401c88:	9010      	str	r0, [sp, #64]	; 0x40
  401c8a:	ddef      	ble.n	401c6c <_vfiprintf_r+0x2b0>
  401c8c:	2a00      	cmp	r2, #0
  401c8e:	f040 8227 	bne.w	4020e0 <_vfiprintf_r+0x724>
  401c92:	3d10      	subs	r5, #16
  401c94:	2d10      	cmp	r5, #16
  401c96:	4611      	mov	r1, r2
  401c98:	f04f 0c01 	mov.w	ip, #1
  401c9c:	46d6      	mov	lr, sl
  401c9e:	dced      	bgt.n	401c7c <_vfiprintf_r+0x2c0>
  401ca0:	465c      	mov	r4, fp
  401ca2:	4661      	mov	r1, ip
  401ca4:	46f3      	mov	fp, lr
  401ca6:	442a      	add	r2, r5
  401ca8:	2907      	cmp	r1, #7
  401caa:	9211      	str	r2, [sp, #68]	; 0x44
  401cac:	f8cb 6000 	str.w	r6, [fp]
  401cb0:	f8cb 5004 	str.w	r5, [fp, #4]
  401cb4:	9110      	str	r1, [sp, #64]	; 0x40
  401cb6:	f300 82e4 	bgt.w	402282 <_vfiprintf_r+0x8c6>
  401cba:	f89d 5037 	ldrb.w	r5, [sp, #55]	; 0x37
  401cbe:	f10b 0b08 	add.w	fp, fp, #8
  401cc2:	1c48      	adds	r0, r1, #1
  401cc4:	2d00      	cmp	r5, #0
  401cc6:	f040 8228 	bne.w	40211a <_vfiprintf_r+0x75e>
  401cca:	9b09      	ldr	r3, [sp, #36]	; 0x24
  401ccc:	2b00      	cmp	r3, #0
  401cce:	f000 8242 	beq.w	402156 <_vfiprintf_r+0x79a>
  401cd2:	2102      	movs	r1, #2
  401cd4:	ab0e      	add	r3, sp, #56	; 0x38
  401cd6:	440a      	add	r2, r1
  401cd8:	2807      	cmp	r0, #7
  401cda:	9211      	str	r2, [sp, #68]	; 0x44
  401cdc:	9010      	str	r0, [sp, #64]	; 0x40
  401cde:	f8cb 1004 	str.w	r1, [fp, #4]
  401ce2:	f8cb 3000 	str.w	r3, [fp]
  401ce6:	f340 8232 	ble.w	40214e <_vfiprintf_r+0x792>
  401cea:	2a00      	cmp	r2, #0
  401cec:	f040 8378 	bne.w	4023e0 <_vfiprintf_r+0xa24>
  401cf0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  401cf2:	2001      	movs	r0, #1
  401cf4:	2b80      	cmp	r3, #128	; 0x80
  401cf6:	4611      	mov	r1, r2
  401cf8:	46d3      	mov	fp, sl
  401cfa:	f040 8230 	bne.w	40215e <_vfiprintf_r+0x7a2>
  401cfe:	9b07      	ldr	r3, [sp, #28]
  401d00:	9d02      	ldr	r5, [sp, #8]
  401d02:	1b5e      	subs	r6, r3, r5
  401d04:	2e00      	cmp	r6, #0
  401d06:	f340 822a 	ble.w	40215e <_vfiprintf_r+0x7a2>
  401d0a:	2e10      	cmp	r6, #16
  401d0c:	f340 8428 	ble.w	402560 <_vfiprintf_r+0xba4>
  401d10:	46dc      	mov	ip, fp
  401d12:	2710      	movs	r7, #16
  401d14:	46a3      	mov	fp, r4
  401d16:	4d8d      	ldr	r5, [pc, #564]	; (401f4c <_vfiprintf_r+0x590>)
  401d18:	9c06      	ldr	r4, [sp, #24]
  401d1a:	e007      	b.n	401d2c <_vfiprintf_r+0x370>
  401d1c:	f101 0e02 	add.w	lr, r1, #2
  401d20:	4601      	mov	r1, r0
  401d22:	f10c 0c08 	add.w	ip, ip, #8
  401d26:	3e10      	subs	r6, #16
  401d28:	2e10      	cmp	r6, #16
  401d2a:	dd11      	ble.n	401d50 <_vfiprintf_r+0x394>
  401d2c:	1c48      	adds	r0, r1, #1
  401d2e:	3210      	adds	r2, #16
  401d30:	2807      	cmp	r0, #7
  401d32:	9211      	str	r2, [sp, #68]	; 0x44
  401d34:	e88c 00a0 	stmia.w	ip, {r5, r7}
  401d38:	9010      	str	r0, [sp, #64]	; 0x40
  401d3a:	ddef      	ble.n	401d1c <_vfiprintf_r+0x360>
  401d3c:	2a00      	cmp	r2, #0
  401d3e:	f040 8293 	bne.w	402268 <_vfiprintf_r+0x8ac>
  401d42:	3e10      	subs	r6, #16
  401d44:	2e10      	cmp	r6, #16
  401d46:	f04f 0e01 	mov.w	lr, #1
  401d4a:	4611      	mov	r1, r2
  401d4c:	46d4      	mov	ip, sl
  401d4e:	dced      	bgt.n	401d2c <_vfiprintf_r+0x370>
  401d50:	465c      	mov	r4, fp
  401d52:	46e3      	mov	fp, ip
  401d54:	4432      	add	r2, r6
  401d56:	f1be 0f07 	cmp.w	lr, #7
  401d5a:	9211      	str	r2, [sp, #68]	; 0x44
  401d5c:	e88b 0060 	stmia.w	fp, {r5, r6}
  401d60:	f8cd e040 	str.w	lr, [sp, #64]	; 0x40
  401d64:	f300 8356 	bgt.w	402414 <_vfiprintf_r+0xa58>
  401d68:	9b05      	ldr	r3, [sp, #20]
  401d6a:	f10b 0b08 	add.w	fp, fp, #8
  401d6e:	1ae4      	subs	r4, r4, r3
  401d70:	2c00      	cmp	r4, #0
  401d72:	f10e 0001 	add.w	r0, lr, #1
  401d76:	4671      	mov	r1, lr
  401d78:	f300 81f6 	bgt.w	402168 <_vfiprintf_r+0x7ac>
  401d7c:	9905      	ldr	r1, [sp, #20]
  401d7e:	2807      	cmp	r0, #7
  401d80:	440a      	add	r2, r1
  401d82:	9211      	str	r2, [sp, #68]	; 0x44
  401d84:	f8cb 8000 	str.w	r8, [fp]
  401d88:	f8cb 1004 	str.w	r1, [fp, #4]
  401d8c:	9010      	str	r0, [sp, #64]	; 0x40
  401d8e:	f340 8252 	ble.w	402236 <_vfiprintf_r+0x87a>
  401d92:	2a00      	cmp	r2, #0
  401d94:	f040 82eb 	bne.w	40236e <_vfiprintf_r+0x9b2>
  401d98:	9b03      	ldr	r3, [sp, #12]
  401d9a:	9210      	str	r2, [sp, #64]	; 0x40
  401d9c:	0758      	lsls	r0, r3, #29
  401d9e:	d538      	bpl.n	401e12 <_vfiprintf_r+0x456>
  401da0:	9b07      	ldr	r3, [sp, #28]
  401da2:	9902      	ldr	r1, [sp, #8]
  401da4:	1a5c      	subs	r4, r3, r1
  401da6:	2c00      	cmp	r4, #0
  401da8:	f340 82b7 	ble.w	40231a <_vfiprintf_r+0x95e>
  401dac:	46d3      	mov	fp, sl
  401dae:	2c10      	cmp	r4, #16
  401db0:	f340 83ca 	ble.w	402548 <_vfiprintf_r+0xb8c>
  401db4:	2510      	movs	r5, #16
  401db6:	9910      	ldr	r1, [sp, #64]	; 0x40
  401db8:	4e63      	ldr	r6, [pc, #396]	; (401f48 <_vfiprintf_r+0x58c>)
  401dba:	9f06      	ldr	r7, [sp, #24]
  401dbc:	f8dd 8004 	ldr.w	r8, [sp, #4]
  401dc0:	e006      	b.n	401dd0 <_vfiprintf_r+0x414>
  401dc2:	1c88      	adds	r0, r1, #2
  401dc4:	4619      	mov	r1, r3
  401dc6:	f10b 0b08 	add.w	fp, fp, #8
  401dca:	3c10      	subs	r4, #16
  401dcc:	2c10      	cmp	r4, #16
  401dce:	dd13      	ble.n	401df8 <_vfiprintf_r+0x43c>
  401dd0:	1c4b      	adds	r3, r1, #1
  401dd2:	3210      	adds	r2, #16
  401dd4:	2b07      	cmp	r3, #7
  401dd6:	9211      	str	r2, [sp, #68]	; 0x44
  401dd8:	f8cb 6000 	str.w	r6, [fp]
  401ddc:	f8cb 5004 	str.w	r5, [fp, #4]
  401de0:	9310      	str	r3, [sp, #64]	; 0x40
  401de2:	ddee      	ble.n	401dc2 <_vfiprintf_r+0x406>
  401de4:	2a00      	cmp	r2, #0
  401de6:	f040 8209 	bne.w	4021fc <_vfiprintf_r+0x840>
  401dea:	3c10      	subs	r4, #16
  401dec:	2c10      	cmp	r4, #16
  401dee:	f04f 0001 	mov.w	r0, #1
  401df2:	4611      	mov	r1, r2
  401df4:	46d3      	mov	fp, sl
  401df6:	dceb      	bgt.n	401dd0 <_vfiprintf_r+0x414>
  401df8:	4422      	add	r2, r4
  401dfa:	2807      	cmp	r0, #7
  401dfc:	9211      	str	r2, [sp, #68]	; 0x44
  401dfe:	f8cb 6000 	str.w	r6, [fp]
  401e02:	f8cb 4004 	str.w	r4, [fp, #4]
  401e06:	9010      	str	r0, [sp, #64]	; 0x40
  401e08:	f340 8220 	ble.w	40224c <_vfiprintf_r+0x890>
  401e0c:	2a00      	cmp	r2, #0
  401e0e:	f040 8354 	bne.w	4024ba <_vfiprintf_r+0xafe>
  401e12:	9b04      	ldr	r3, [sp, #16]
  401e14:	9a07      	ldr	r2, [sp, #28]
  401e16:	9902      	ldr	r1, [sp, #8]
  401e18:	428a      	cmp	r2, r1
  401e1a:	bfac      	ite	ge
  401e1c:	189b      	addge	r3, r3, r2
  401e1e:	185b      	addlt	r3, r3, r1
  401e20:	9304      	str	r3, [sp, #16]
  401e22:	e21c      	b.n	40225e <_vfiprintf_r+0x8a2>
  401e24:	9507      	str	r5, [sp, #28]
  401e26:	069e      	lsls	r6, r3, #26
  401e28:	f100 8313 	bmi.w	402452 <_vfiprintf_r+0xa96>
  401e2c:	9908      	ldr	r1, [sp, #32]
  401e2e:	06dd      	lsls	r5, r3, #27
  401e30:	460a      	mov	r2, r1
  401e32:	f100 82c5 	bmi.w	4023c0 <_vfiprintf_r+0xa04>
  401e36:	0658      	lsls	r0, r3, #25
  401e38:	f140 82c2 	bpl.w	4023c0 <_vfiprintf_r+0xa04>
  401e3c:	880e      	ldrh	r6, [r1, #0]
  401e3e:	3104      	adds	r1, #4
  401e40:	2700      	movs	r7, #0
  401e42:	2201      	movs	r2, #1
  401e44:	9108      	str	r1, [sp, #32]
  401e46:	e6ca      	b.n	401bde <_vfiprintf_r+0x222>
  401e48:	f043 0380 	orr.w	r3, r3, #128	; 0x80
  401e4c:	f899 2000 	ldrb.w	r2, [r9]
  401e50:	e61b      	b.n	401a8a <_vfiprintf_r+0xce>
  401e52:	2500      	movs	r5, #0
  401e54:	f1a2 0130 	sub.w	r1, r2, #48	; 0x30
  401e58:	f819 2b01 	ldrb.w	r2, [r9], #1
  401e5c:	eb05 0585 	add.w	r5, r5, r5, lsl #2
  401e60:	eb01 0545 	add.w	r5, r1, r5, lsl #1
  401e64:	f1a2 0130 	sub.w	r1, r2, #48	; 0x30
  401e68:	2909      	cmp	r1, #9
  401e6a:	d9f5      	bls.n	401e58 <_vfiprintf_r+0x49c>
  401e6c:	e60f      	b.n	401a8e <_vfiprintf_r+0xd2>
  401e6e:	2201      	movs	r2, #1
  401e70:	9808      	ldr	r0, [sp, #32]
  401e72:	4611      	mov	r1, r2
  401e74:	9202      	str	r2, [sp, #8]
  401e76:	6802      	ldr	r2, [r0, #0]
  401e78:	f04f 0400 	mov.w	r4, #0
  401e7c:	f88d 2048 	strb.w	r2, [sp, #72]	; 0x48
  401e80:	4602      	mov	r2, r0
  401e82:	3204      	adds	r2, #4
  401e84:	9507      	str	r5, [sp, #28]
  401e86:	f88d 4037 	strb.w	r4, [sp, #55]	; 0x37
  401e8a:	9105      	str	r1, [sp, #20]
  401e8c:	9208      	str	r2, [sp, #32]
  401e8e:	f10d 0848 	add.w	r8, sp, #72	; 0x48
  401e92:	9303      	str	r3, [sp, #12]
  401e94:	2400      	movs	r4, #0
  401e96:	e6c9      	b.n	401c2c <_vfiprintf_r+0x270>
  401e98:	9507      	str	r5, [sp, #28]
  401e9a:	2800      	cmp	r0, #0
  401e9c:	f040 837e 	bne.w	40259c <_vfiprintf_r+0xbe0>
  401ea0:	069e      	lsls	r6, r3, #26
  401ea2:	f100 82ec 	bmi.w	40247e <_vfiprintf_r+0xac2>
  401ea6:	9908      	ldr	r1, [sp, #32]
  401ea8:	06dd      	lsls	r5, r3, #27
  401eaa:	460a      	mov	r2, r1
  401eac:	f100 8281 	bmi.w	4023b2 <_vfiprintf_r+0x9f6>
  401eb0:	0658      	lsls	r0, r3, #25
  401eb2:	f140 827e 	bpl.w	4023b2 <_vfiprintf_r+0x9f6>
  401eb6:	f9b1 6000 	ldrsh.w	r6, [r1]
  401eba:	3204      	adds	r2, #4
  401ebc:	17f7      	asrs	r7, r6, #31
  401ebe:	4630      	mov	r0, r6
  401ec0:	4639      	mov	r1, r7
  401ec2:	9208      	str	r2, [sp, #32]
  401ec4:	2800      	cmp	r0, #0
  401ec6:	f171 0200 	sbcs.w	r2, r1, #0
  401eca:	f2c0 82e7 	blt.w	40249c <_vfiprintf_r+0xae0>
  401ece:	1c61      	adds	r1, r4, #1
  401ed0:	f89d 5037 	ldrb.w	r5, [sp, #55]	; 0x37
  401ed4:	f04f 0201 	mov.w	r2, #1
  401ed8:	f47f ae89 	bne.w	401bee <_vfiprintf_r+0x232>
  401edc:	ea56 0107 	orrs.w	r1, r6, r7
  401ee0:	f000 81e4 	beq.w	4022ac <_vfiprintf_r+0x8f0>
  401ee4:	9303      	str	r3, [sp, #12]
  401ee6:	2a01      	cmp	r2, #1
  401ee8:	f000 8224 	beq.w	402334 <_vfiprintf_r+0x978>
  401eec:	2a02      	cmp	r2, #2
  401eee:	f040 81f1 	bne.w	4022d4 <_vfiprintf_r+0x918>
  401ef2:	46d0      	mov	r8, sl
  401ef4:	980b      	ldr	r0, [sp, #44]	; 0x2c
  401ef6:	0933      	lsrs	r3, r6, #4
  401ef8:	ea43 7307 	orr.w	r3, r3, r7, lsl #28
  401efc:	0939      	lsrs	r1, r7, #4
  401efe:	f006 020f 	and.w	r2, r6, #15
  401f02:	460f      	mov	r7, r1
  401f04:	461e      	mov	r6, r3
  401f06:	5c83      	ldrb	r3, [r0, r2]
  401f08:	f808 3d01 	strb.w	r3, [r8, #-1]!
  401f0c:	ea56 0307 	orrs.w	r3, r6, r7
  401f10:	d1f1      	bne.n	401ef6 <_vfiprintf_r+0x53a>
  401f12:	ebaa 0308 	sub.w	r3, sl, r8
  401f16:	9305      	str	r3, [sp, #20]
  401f18:	e680      	b.n	401c1c <_vfiprintf_r+0x260>
  401f1a:	f899 2000 	ldrb.w	r2, [r9]
  401f1e:	2e00      	cmp	r6, #0
  401f20:	f47f adb3 	bne.w	401a8a <_vfiprintf_r+0xce>
  401f24:	2001      	movs	r0, #1
  401f26:	2620      	movs	r6, #32
  401f28:	e5af      	b.n	401a8a <_vfiprintf_r+0xce>
  401f2a:	9507      	str	r5, [sp, #28]
  401f2c:	2800      	cmp	r0, #0
  401f2e:	f040 8332 	bne.w	402596 <_vfiprintf_r+0xbda>
  401f32:	f043 0310 	orr.w	r3, r3, #16
  401f36:	e7b3      	b.n	401ea0 <_vfiprintf_r+0x4e4>
  401f38:	9507      	str	r5, [sp, #28]
  401f3a:	f043 0310 	orr.w	r3, r3, #16
  401f3e:	e63b      	b.n	401bb8 <_vfiprintf_r+0x1fc>
  401f40:	9507      	str	r5, [sp, #28]
  401f42:	f043 0310 	orr.w	r3, r3, #16
  401f46:	e76e      	b.n	401e26 <_vfiprintf_r+0x46a>
  401f48:	00404498 	.word	0x00404498
  401f4c:	004044a8 	.word	0x004044a8
  401f50:	9507      	str	r5, [sp, #28]
  401f52:	2800      	cmp	r0, #0
  401f54:	f040 8316 	bne.w	402584 <_vfiprintf_r+0xbc8>
  401f58:	49ae      	ldr	r1, [pc, #696]	; (402214 <_vfiprintf_r+0x858>)
  401f5a:	910b      	str	r1, [sp, #44]	; 0x2c
  401f5c:	069f      	lsls	r7, r3, #26
  401f5e:	f100 8284 	bmi.w	40246a <_vfiprintf_r+0xaae>
  401f62:	9808      	ldr	r0, [sp, #32]
  401f64:	06de      	lsls	r6, r3, #27
  401f66:	4601      	mov	r1, r0
  401f68:	f100 821e 	bmi.w	4023a8 <_vfiprintf_r+0x9ec>
  401f6c:	065d      	lsls	r5, r3, #25
  401f6e:	f140 821b 	bpl.w	4023a8 <_vfiprintf_r+0x9ec>
  401f72:	2700      	movs	r7, #0
  401f74:	3104      	adds	r1, #4
  401f76:	8806      	ldrh	r6, [r0, #0]
  401f78:	9108      	str	r1, [sp, #32]
  401f7a:	07d8      	lsls	r0, r3, #31
  401f7c:	f140 81d5 	bpl.w	40232a <_vfiprintf_r+0x96e>
  401f80:	ea56 0107 	orrs.w	r1, r6, r7
  401f84:	f000 81d1 	beq.w	40232a <_vfiprintf_r+0x96e>
  401f88:	2130      	movs	r1, #48	; 0x30
  401f8a:	f88d 2039 	strb.w	r2, [sp, #57]	; 0x39
  401f8e:	f043 0302 	orr.w	r3, r3, #2
  401f92:	f88d 1038 	strb.w	r1, [sp, #56]	; 0x38
  401f96:	2202      	movs	r2, #2
  401f98:	e621      	b.n	401bde <_vfiprintf_r+0x222>
  401f9a:	f899 2000 	ldrb.w	r2, [r9]
  401f9e:	f109 0701 	add.w	r7, r9, #1
  401fa2:	2a2a      	cmp	r2, #42	; 0x2a
  401fa4:	f000 82e0 	beq.w	402568 <_vfiprintf_r+0xbac>
  401fa8:	f1a2 0130 	sub.w	r1, r2, #48	; 0x30
  401fac:	2909      	cmp	r1, #9
  401fae:	46b9      	mov	r9, r7
  401fb0:	f04f 0400 	mov.w	r4, #0
  401fb4:	f63f ad6b 	bhi.w	401a8e <_vfiprintf_r+0xd2>
  401fb8:	f819 2b01 	ldrb.w	r2, [r9], #1
  401fbc:	eb04 0484 	add.w	r4, r4, r4, lsl #2
  401fc0:	eb01 0444 	add.w	r4, r1, r4, lsl #1
  401fc4:	f1a2 0130 	sub.w	r1, r2, #48	; 0x30
  401fc8:	2909      	cmp	r1, #9
  401fca:	d9f5      	bls.n	401fb8 <_vfiprintf_r+0x5fc>
  401fcc:	e55f      	b.n	401a8e <_vfiprintf_r+0xd2>
  401fce:	f899 2000 	ldrb.w	r2, [r9]
  401fd2:	2a6c      	cmp	r2, #108	; 0x6c
  401fd4:	bf03      	ittte	eq
  401fd6:	f899 2001 	ldrbeq.w	r2, [r9, #1]
  401fda:	f043 0320 	orreq.w	r3, r3, #32
  401fde:	f109 0901 	addeq.w	r9, r9, #1
  401fe2:	f043 0310 	orrne.w	r3, r3, #16
  401fe6:	e550      	b.n	401a8a <_vfiprintf_r+0xce>
  401fe8:	9507      	str	r5, [sp, #28]
  401fea:	2800      	cmp	r0, #0
  401fec:	f040 82d0 	bne.w	402590 <_vfiprintf_r+0xbd4>
  401ff0:	4989      	ldr	r1, [pc, #548]	; (402218 <_vfiprintf_r+0x85c>)
  401ff2:	910b      	str	r1, [sp, #44]	; 0x2c
  401ff4:	e7b2      	b.n	401f5c <_vfiprintf_r+0x5a0>
  401ff6:	2278      	movs	r2, #120	; 0x78
  401ff8:	2130      	movs	r1, #48	; 0x30
  401ffa:	9507      	str	r5, [sp, #28]
  401ffc:	9d08      	ldr	r5, [sp, #32]
  401ffe:	f88d 2039 	strb.w	r2, [sp, #57]	; 0x39
  402002:	1d2a      	adds	r2, r5, #4
  402004:	9208      	str	r2, [sp, #32]
  402006:	4a84      	ldr	r2, [pc, #528]	; (402218 <_vfiprintf_r+0x85c>)
  402008:	682e      	ldr	r6, [r5, #0]
  40200a:	920b      	str	r2, [sp, #44]	; 0x2c
  40200c:	f043 0302 	orr.w	r3, r3, #2
  402010:	f88d 1038 	strb.w	r1, [sp, #56]	; 0x38
  402014:	2700      	movs	r7, #0
  402016:	2202      	movs	r2, #2
  402018:	e5e1      	b.n	401bde <_vfiprintf_r+0x222>
  40201a:	f043 0320 	orr.w	r3, r3, #32
  40201e:	f899 2000 	ldrb.w	r2, [r9]
  402022:	e532      	b.n	401a8a <_vfiprintf_r+0xce>
  402024:	f04f 0200 	mov.w	r2, #0
  402028:	9908      	ldr	r1, [sp, #32]
  40202a:	9507      	str	r5, [sp, #28]
  40202c:	f8d1 8000 	ldr.w	r8, [r1]
  402030:	f88d 2037 	strb.w	r2, [sp, #55]	; 0x37
  402034:	1d0d      	adds	r5, r1, #4
  402036:	f1b8 0f00 	cmp.w	r8, #0
  40203a:	f000 827c 	beq.w	402536 <_vfiprintf_r+0xb7a>
  40203e:	1c67      	adds	r7, r4, #1
  402040:	f000 825b 	beq.w	4024fa <_vfiprintf_r+0xb3e>
  402044:	4622      	mov	r2, r4
  402046:	2100      	movs	r1, #0
  402048:	4640      	mov	r0, r8
  40204a:	9302      	str	r3, [sp, #8]
  40204c:	f001 fb24 	bl	403698 <memchr>
  402050:	9b02      	ldr	r3, [sp, #8]
  402052:	2800      	cmp	r0, #0
  402054:	f000 827c 	beq.w	402550 <_vfiprintf_r+0xb94>
  402058:	eba0 0208 	sub.w	r2, r0, r8
  40205c:	9508      	str	r5, [sp, #32]
  40205e:	9205      	str	r2, [sp, #20]
  402060:	9303      	str	r3, [sp, #12]
  402062:	f89d 5037 	ldrb.w	r5, [sp, #55]	; 0x37
  402066:	2400      	movs	r4, #0
  402068:	e5d8      	b.n	401c1c <_vfiprintf_r+0x260>
  40206a:	f043 0301 	orr.w	r3, r3, #1
  40206e:	f899 2000 	ldrb.w	r2, [r9]
  402072:	e50a      	b.n	401a8a <_vfiprintf_r+0xce>
  402074:	f899 2000 	ldrb.w	r2, [r9]
  402078:	2001      	movs	r0, #1
  40207a:	262b      	movs	r6, #43	; 0x2b
  40207c:	e505      	b.n	401a8a <_vfiprintf_r+0xce>
  40207e:	2800      	cmp	r0, #0
  402080:	f040 8283 	bne.w	40258a <_vfiprintf_r+0xbce>
  402084:	0699      	lsls	r1, r3, #26
  402086:	f100 822b 	bmi.w	4024e0 <_vfiprintf_r+0xb24>
  40208a:	06da      	lsls	r2, r3, #27
  40208c:	d421      	bmi.n	4020d2 <_vfiprintf_r+0x716>
  40208e:	065b      	lsls	r3, r3, #25
  402090:	d51f      	bpl.n	4020d2 <_vfiprintf_r+0x716>
  402092:	9a08      	ldr	r2, [sp, #32]
  402094:	6813      	ldr	r3, [r2, #0]
  402096:	3204      	adds	r2, #4
  402098:	9208      	str	r2, [sp, #32]
  40209a:	f8bd 2010 	ldrh.w	r2, [sp, #16]
  40209e:	801a      	strh	r2, [r3, #0]
  4020a0:	e4be      	b.n	401a20 <_vfiprintf_r+0x64>
  4020a2:	f043 0340 	orr.w	r3, r3, #64	; 0x40
  4020a6:	f899 2000 	ldrb.w	r2, [r9]
  4020aa:	e4ee      	b.n	401a8a <_vfiprintf_r+0xce>
  4020ac:	9507      	str	r5, [sp, #28]
  4020ae:	2800      	cmp	r0, #0
  4020b0:	f040 8265 	bne.w	40257e <_vfiprintf_r+0xbc2>
  4020b4:	2a00      	cmp	r2, #0
  4020b6:	f000 8091 	beq.w	4021dc <_vfiprintf_r+0x820>
  4020ba:	2101      	movs	r1, #1
  4020bc:	f88d 2048 	strb.w	r2, [sp, #72]	; 0x48
  4020c0:	f04f 0200 	mov.w	r2, #0
  4020c4:	9102      	str	r1, [sp, #8]
  4020c6:	f88d 2037 	strb.w	r2, [sp, #55]	; 0x37
  4020ca:	9105      	str	r1, [sp, #20]
  4020cc:	f10d 0848 	add.w	r8, sp, #72	; 0x48
  4020d0:	e6df      	b.n	401e92 <_vfiprintf_r+0x4d6>
  4020d2:	9a08      	ldr	r2, [sp, #32]
  4020d4:	6813      	ldr	r3, [r2, #0]
  4020d6:	3204      	adds	r2, #4
  4020d8:	9208      	str	r2, [sp, #32]
  4020da:	9a04      	ldr	r2, [sp, #16]
  4020dc:	601a      	str	r2, [r3, #0]
  4020de:	e49f      	b.n	401a20 <_vfiprintf_r+0x64>
  4020e0:	aa0f      	add	r2, sp, #60	; 0x3c
  4020e2:	9901      	ldr	r1, [sp, #4]
  4020e4:	4620      	mov	r0, r4
  4020e6:	f7ff fc29 	bl	40193c <__sprint_r.part.0>
  4020ea:	2800      	cmp	r0, #0
  4020ec:	d17d      	bne.n	4021ea <_vfiprintf_r+0x82e>
  4020ee:	9910      	ldr	r1, [sp, #64]	; 0x40
  4020f0:	46d6      	mov	lr, sl
  4020f2:	9a11      	ldr	r2, [sp, #68]	; 0x44
  4020f4:	f101 0c01 	add.w	ip, r1, #1
  4020f8:	e5bd      	b.n	401c76 <_vfiprintf_r+0x2ba>
  4020fa:	aa0f      	add	r2, sp, #60	; 0x3c
  4020fc:	9901      	ldr	r1, [sp, #4]
  4020fe:	9806      	ldr	r0, [sp, #24]
  402100:	f7ff fc1c 	bl	40193c <__sprint_r.part.0>
  402104:	2800      	cmp	r0, #0
  402106:	d170      	bne.n	4021ea <_vfiprintf_r+0x82e>
  402108:	46d3      	mov	fp, sl
  40210a:	9910      	ldr	r1, [sp, #64]	; 0x40
  40210c:	f89d 5037 	ldrb.w	r5, [sp, #55]	; 0x37
  402110:	9a11      	ldr	r2, [sp, #68]	; 0x44
  402112:	1c48      	adds	r0, r1, #1
  402114:	2d00      	cmp	r5, #0
  402116:	f43f add8 	beq.w	401cca <_vfiprintf_r+0x30e>
  40211a:	2101      	movs	r1, #1
  40211c:	f10d 0537 	add.w	r5, sp, #55	; 0x37
  402120:	440a      	add	r2, r1
  402122:	2807      	cmp	r0, #7
  402124:	9211      	str	r2, [sp, #68]	; 0x44
  402126:	9010      	str	r0, [sp, #64]	; 0x40
  402128:	f8cb 1004 	str.w	r1, [fp, #4]
  40212c:	f8cb 5000 	str.w	r5, [fp]
  402130:	f340 80b6 	ble.w	4022a0 <_vfiprintf_r+0x8e4>
  402134:	2a00      	cmp	r2, #0
  402136:	f040 8160 	bne.w	4023fa <_vfiprintf_r+0xa3e>
  40213a:	9b09      	ldr	r3, [sp, #36]	; 0x24
  40213c:	2b00      	cmp	r3, #0
  40213e:	f43f add7 	beq.w	401cf0 <_vfiprintf_r+0x334>
  402142:	2202      	movs	r2, #2
  402144:	4608      	mov	r0, r1
  402146:	46d3      	mov	fp, sl
  402148:	ab0e      	add	r3, sp, #56	; 0x38
  40214a:	921d      	str	r2, [sp, #116]	; 0x74
  40214c:	931c      	str	r3, [sp, #112]	; 0x70
  40214e:	4601      	mov	r1, r0
  402150:	f10b 0b08 	add.w	fp, fp, #8
  402154:	3001      	adds	r0, #1
  402156:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  402158:	2b80      	cmp	r3, #128	; 0x80
  40215a:	f43f add0 	beq.w	401cfe <_vfiprintf_r+0x342>
  40215e:	9b05      	ldr	r3, [sp, #20]
  402160:	1ae4      	subs	r4, r4, r3
  402162:	2c00      	cmp	r4, #0
  402164:	f77f ae0a 	ble.w	401d7c <_vfiprintf_r+0x3c0>
  402168:	2c10      	cmp	r4, #16
  40216a:	f340 81b7 	ble.w	4024dc <_vfiprintf_r+0xb20>
  40216e:	46de      	mov	lr, fp
  402170:	2610      	movs	r6, #16
  402172:	4d2a      	ldr	r5, [pc, #168]	; (40221c <_vfiprintf_r+0x860>)
  402174:	9f06      	ldr	r7, [sp, #24]
  402176:	f8dd b004 	ldr.w	fp, [sp, #4]
  40217a:	e006      	b.n	40218a <_vfiprintf_r+0x7ce>
  40217c:	1c88      	adds	r0, r1, #2
  40217e:	4619      	mov	r1, r3
  402180:	f10e 0e08 	add.w	lr, lr, #8
  402184:	3c10      	subs	r4, #16
  402186:	2c10      	cmp	r4, #16
  402188:	dd0f      	ble.n	4021aa <_vfiprintf_r+0x7ee>
  40218a:	1c4b      	adds	r3, r1, #1
  40218c:	3210      	adds	r2, #16
  40218e:	2b07      	cmp	r3, #7
  402190:	9211      	str	r2, [sp, #68]	; 0x44
  402192:	e88e 0060 	stmia.w	lr, {r5, r6}
  402196:	9310      	str	r3, [sp, #64]	; 0x40
  402198:	ddf0      	ble.n	40217c <_vfiprintf_r+0x7c0>
  40219a:	b9a2      	cbnz	r2, 4021c6 <_vfiprintf_r+0x80a>
  40219c:	3c10      	subs	r4, #16
  40219e:	2c10      	cmp	r4, #16
  4021a0:	f04f 0001 	mov.w	r0, #1
  4021a4:	4611      	mov	r1, r2
  4021a6:	46d6      	mov	lr, sl
  4021a8:	dcef      	bgt.n	40218a <_vfiprintf_r+0x7ce>
  4021aa:	46f3      	mov	fp, lr
  4021ac:	4422      	add	r2, r4
  4021ae:	2807      	cmp	r0, #7
  4021b0:	9211      	str	r2, [sp, #68]	; 0x44
  4021b2:	f8cb 5000 	str.w	r5, [fp]
  4021b6:	f8cb 4004 	str.w	r4, [fp, #4]
  4021ba:	9010      	str	r0, [sp, #64]	; 0x40
  4021bc:	dc30      	bgt.n	402220 <_vfiprintf_r+0x864>
  4021be:	f10b 0b08 	add.w	fp, fp, #8
  4021c2:	3001      	adds	r0, #1
  4021c4:	e5da      	b.n	401d7c <_vfiprintf_r+0x3c0>
  4021c6:	aa0f      	add	r2, sp, #60	; 0x3c
  4021c8:	4659      	mov	r1, fp
  4021ca:	4638      	mov	r0, r7
  4021cc:	f7ff fbb6 	bl	40193c <__sprint_r.part.0>
  4021d0:	b958      	cbnz	r0, 4021ea <_vfiprintf_r+0x82e>
  4021d2:	9910      	ldr	r1, [sp, #64]	; 0x40
  4021d4:	46d6      	mov	lr, sl
  4021d6:	9a11      	ldr	r2, [sp, #68]	; 0x44
  4021d8:	1c48      	adds	r0, r1, #1
  4021da:	e7d3      	b.n	402184 <_vfiprintf_r+0x7c8>
  4021dc:	9b11      	ldr	r3, [sp, #68]	; 0x44
  4021de:	b123      	cbz	r3, 4021ea <_vfiprintf_r+0x82e>
  4021e0:	9806      	ldr	r0, [sp, #24]
  4021e2:	aa0f      	add	r2, sp, #60	; 0x3c
  4021e4:	9901      	ldr	r1, [sp, #4]
  4021e6:	f7ff fba9 	bl	40193c <__sprint_r.part.0>
  4021ea:	9b01      	ldr	r3, [sp, #4]
  4021ec:	899b      	ldrh	r3, [r3, #12]
  4021ee:	065b      	lsls	r3, r3, #25
  4021f0:	f57f accd 	bpl.w	401b8e <_vfiprintf_r+0x1d2>
  4021f4:	f04f 33ff 	mov.w	r3, #4294967295
  4021f8:	9304      	str	r3, [sp, #16]
  4021fa:	e4c8      	b.n	401b8e <_vfiprintf_r+0x1d2>
  4021fc:	aa0f      	add	r2, sp, #60	; 0x3c
  4021fe:	4641      	mov	r1, r8
  402200:	4638      	mov	r0, r7
  402202:	f7ff fb9b 	bl	40193c <__sprint_r.part.0>
  402206:	2800      	cmp	r0, #0
  402208:	d1ef      	bne.n	4021ea <_vfiprintf_r+0x82e>
  40220a:	9910      	ldr	r1, [sp, #64]	; 0x40
  40220c:	46d3      	mov	fp, sl
  40220e:	9a11      	ldr	r2, [sp, #68]	; 0x44
  402210:	1c48      	adds	r0, r1, #1
  402212:	e5da      	b.n	401dca <_vfiprintf_r+0x40e>
  402214:	00404468 	.word	0x00404468
  402218:	0040447c 	.word	0x0040447c
  40221c:	004044a8 	.word	0x004044a8
  402220:	2a00      	cmp	r2, #0
  402222:	f040 80fd 	bne.w	402420 <_vfiprintf_r+0xa64>
  402226:	2301      	movs	r3, #1
  402228:	46d3      	mov	fp, sl
  40222a:	9a05      	ldr	r2, [sp, #20]
  40222c:	f8cd 8070 	str.w	r8, [sp, #112]	; 0x70
  402230:	921d      	str	r2, [sp, #116]	; 0x74
  402232:	9211      	str	r2, [sp, #68]	; 0x44
  402234:	9310      	str	r3, [sp, #64]	; 0x40
  402236:	f10b 0b08 	add.w	fp, fp, #8
  40223a:	9b03      	ldr	r3, [sp, #12]
  40223c:	0759      	lsls	r1, r3, #29
  40223e:	d505      	bpl.n	40224c <_vfiprintf_r+0x890>
  402240:	9b07      	ldr	r3, [sp, #28]
  402242:	9902      	ldr	r1, [sp, #8]
  402244:	1a5c      	subs	r4, r3, r1
  402246:	2c00      	cmp	r4, #0
  402248:	f73f adb1 	bgt.w	401dae <_vfiprintf_r+0x3f2>
  40224c:	9b04      	ldr	r3, [sp, #16]
  40224e:	9907      	ldr	r1, [sp, #28]
  402250:	9802      	ldr	r0, [sp, #8]
  402252:	4281      	cmp	r1, r0
  402254:	bfac      	ite	ge
  402256:	185b      	addge	r3, r3, r1
  402258:	181b      	addlt	r3, r3, r0
  40225a:	9304      	str	r3, [sp, #16]
  40225c:	bb7a      	cbnz	r2, 4022be <_vfiprintf_r+0x902>
  40225e:	2300      	movs	r3, #0
  402260:	46d3      	mov	fp, sl
  402262:	9310      	str	r3, [sp, #64]	; 0x40
  402264:	f7ff bbdc 	b.w	401a20 <_vfiprintf_r+0x64>
  402268:	aa0f      	add	r2, sp, #60	; 0x3c
  40226a:	9901      	ldr	r1, [sp, #4]
  40226c:	4620      	mov	r0, r4
  40226e:	f7ff fb65 	bl	40193c <__sprint_r.part.0>
  402272:	2800      	cmp	r0, #0
  402274:	d1b9      	bne.n	4021ea <_vfiprintf_r+0x82e>
  402276:	9910      	ldr	r1, [sp, #64]	; 0x40
  402278:	46d4      	mov	ip, sl
  40227a:	9a11      	ldr	r2, [sp, #68]	; 0x44
  40227c:	f101 0e01 	add.w	lr, r1, #1
  402280:	e551      	b.n	401d26 <_vfiprintf_r+0x36a>
  402282:	2a00      	cmp	r2, #0
  402284:	f47f af39 	bne.w	4020fa <_vfiprintf_r+0x73e>
  402288:	f89d 1037 	ldrb.w	r1, [sp, #55]	; 0x37
  40228c:	2900      	cmp	r1, #0
  40228e:	f000 810e 	beq.w	4024ae <_vfiprintf_r+0xaf2>
  402292:	2201      	movs	r2, #1
  402294:	46d3      	mov	fp, sl
  402296:	4610      	mov	r0, r2
  402298:	f10d 0137 	add.w	r1, sp, #55	; 0x37
  40229c:	921d      	str	r2, [sp, #116]	; 0x74
  40229e:	911c      	str	r1, [sp, #112]	; 0x70
  4022a0:	4601      	mov	r1, r0
  4022a2:	f10b 0b08 	add.w	fp, fp, #8
  4022a6:	3001      	adds	r0, #1
  4022a8:	e50f      	b.n	401cca <_vfiprintf_r+0x30e>
  4022aa:	9b03      	ldr	r3, [sp, #12]
  4022ac:	2a01      	cmp	r2, #1
  4022ae:	f000 808e 	beq.w	4023ce <_vfiprintf_r+0xa12>
  4022b2:	2a02      	cmp	r2, #2
  4022b4:	d10b      	bne.n	4022ce <_vfiprintf_r+0x912>
  4022b6:	9303      	str	r3, [sp, #12]
  4022b8:	2600      	movs	r6, #0
  4022ba:	2700      	movs	r7, #0
  4022bc:	e619      	b.n	401ef2 <_vfiprintf_r+0x536>
  4022be:	aa0f      	add	r2, sp, #60	; 0x3c
  4022c0:	9901      	ldr	r1, [sp, #4]
  4022c2:	9806      	ldr	r0, [sp, #24]
  4022c4:	f7ff fb3a 	bl	40193c <__sprint_r.part.0>
  4022c8:	2800      	cmp	r0, #0
  4022ca:	d0c8      	beq.n	40225e <_vfiprintf_r+0x8a2>
  4022cc:	e78d      	b.n	4021ea <_vfiprintf_r+0x82e>
  4022ce:	2600      	movs	r6, #0
  4022d0:	2700      	movs	r7, #0
  4022d2:	9303      	str	r3, [sp, #12]
  4022d4:	4651      	mov	r1, sl
  4022d6:	e000      	b.n	4022da <_vfiprintf_r+0x91e>
  4022d8:	4641      	mov	r1, r8
  4022da:	08f2      	lsrs	r2, r6, #3
  4022dc:	ea42 7247 	orr.w	r2, r2, r7, lsl #29
  4022e0:	08f8      	lsrs	r0, r7, #3
  4022e2:	f006 0307 	and.w	r3, r6, #7
  4022e6:	4607      	mov	r7, r0
  4022e8:	4616      	mov	r6, r2
  4022ea:	3330      	adds	r3, #48	; 0x30
  4022ec:	ea56 0207 	orrs.w	r2, r6, r7
  4022f0:	f801 3c01 	strb.w	r3, [r1, #-1]
  4022f4:	f101 38ff 	add.w	r8, r1, #4294967295
  4022f8:	d1ee      	bne.n	4022d8 <_vfiprintf_r+0x91c>
  4022fa:	9a03      	ldr	r2, [sp, #12]
  4022fc:	07d6      	lsls	r6, r2, #31
  4022fe:	f57f ae08 	bpl.w	401f12 <_vfiprintf_r+0x556>
  402302:	2b30      	cmp	r3, #48	; 0x30
  402304:	f43f ae05 	beq.w	401f12 <_vfiprintf_r+0x556>
  402308:	2330      	movs	r3, #48	; 0x30
  40230a:	3902      	subs	r1, #2
  40230c:	f808 3c01 	strb.w	r3, [r8, #-1]
  402310:	ebaa 0301 	sub.w	r3, sl, r1
  402314:	9305      	str	r3, [sp, #20]
  402316:	4688      	mov	r8, r1
  402318:	e480      	b.n	401c1c <_vfiprintf_r+0x260>
  40231a:	9b04      	ldr	r3, [sp, #16]
  40231c:	9a07      	ldr	r2, [sp, #28]
  40231e:	428a      	cmp	r2, r1
  402320:	bfac      	ite	ge
  402322:	189b      	addge	r3, r3, r2
  402324:	185b      	addlt	r3, r3, r1
  402326:	9304      	str	r3, [sp, #16]
  402328:	e799      	b.n	40225e <_vfiprintf_r+0x8a2>
  40232a:	2202      	movs	r2, #2
  40232c:	e457      	b.n	401bde <_vfiprintf_r+0x222>
  40232e:	9405      	str	r4, [sp, #20]
  402330:	46d0      	mov	r8, sl
  402332:	e473      	b.n	401c1c <_vfiprintf_r+0x260>
  402334:	2f00      	cmp	r7, #0
  402336:	bf08      	it	eq
  402338:	2e0a      	cmpeq	r6, #10
  40233a:	d347      	bcc.n	4023cc <_vfiprintf_r+0xa10>
  40233c:	46d0      	mov	r8, sl
  40233e:	4630      	mov	r0, r6
  402340:	4639      	mov	r1, r7
  402342:	220a      	movs	r2, #10
  402344:	2300      	movs	r3, #0
  402346:	f001 fe75 	bl	404034 <__aeabi_uldivmod>
  40234a:	3230      	adds	r2, #48	; 0x30
  40234c:	f808 2d01 	strb.w	r2, [r8, #-1]!
  402350:	4630      	mov	r0, r6
  402352:	4639      	mov	r1, r7
  402354:	2300      	movs	r3, #0
  402356:	220a      	movs	r2, #10
  402358:	f001 fe6c 	bl	404034 <__aeabi_uldivmod>
  40235c:	4606      	mov	r6, r0
  40235e:	460f      	mov	r7, r1
  402360:	ea56 0307 	orrs.w	r3, r6, r7
  402364:	d1eb      	bne.n	40233e <_vfiprintf_r+0x982>
  402366:	ebaa 0308 	sub.w	r3, sl, r8
  40236a:	9305      	str	r3, [sp, #20]
  40236c:	e456      	b.n	401c1c <_vfiprintf_r+0x260>
  40236e:	aa0f      	add	r2, sp, #60	; 0x3c
  402370:	9901      	ldr	r1, [sp, #4]
  402372:	9806      	ldr	r0, [sp, #24]
  402374:	f7ff fae2 	bl	40193c <__sprint_r.part.0>
  402378:	2800      	cmp	r0, #0
  40237a:	f47f af36 	bne.w	4021ea <_vfiprintf_r+0x82e>
  40237e:	46d3      	mov	fp, sl
  402380:	9a11      	ldr	r2, [sp, #68]	; 0x44
  402382:	e75a      	b.n	40223a <_vfiprintf_r+0x87e>
  402384:	aa0f      	add	r2, sp, #60	; 0x3c
  402386:	9901      	ldr	r1, [sp, #4]
  402388:	9806      	ldr	r0, [sp, #24]
  40238a:	f7ff fad7 	bl	40193c <__sprint_r.part.0>
  40238e:	2800      	cmp	r0, #0
  402390:	f47f af2b 	bne.w	4021ea <_vfiprintf_r+0x82e>
  402394:	46d3      	mov	fp, sl
  402396:	f7ff bbdc 	b.w	401b52 <_vfiprintf_r+0x196>
  40239a:	9808      	ldr	r0, [sp, #32]
  40239c:	2700      	movs	r7, #0
  40239e:	4601      	mov	r1, r0
  4023a0:	3104      	adds	r1, #4
  4023a2:	6806      	ldr	r6, [r0, #0]
  4023a4:	9108      	str	r1, [sp, #32]
  4023a6:	e41a      	b.n	401bde <_vfiprintf_r+0x222>
  4023a8:	680e      	ldr	r6, [r1, #0]
  4023aa:	3104      	adds	r1, #4
  4023ac:	9108      	str	r1, [sp, #32]
  4023ae:	2700      	movs	r7, #0
  4023b0:	e5e3      	b.n	401f7a <_vfiprintf_r+0x5be>
  4023b2:	6816      	ldr	r6, [r2, #0]
  4023b4:	3204      	adds	r2, #4
  4023b6:	17f7      	asrs	r7, r6, #31
  4023b8:	9208      	str	r2, [sp, #32]
  4023ba:	4630      	mov	r0, r6
  4023bc:	4639      	mov	r1, r7
  4023be:	e581      	b.n	401ec4 <_vfiprintf_r+0x508>
  4023c0:	3104      	adds	r1, #4
  4023c2:	6816      	ldr	r6, [r2, #0]
  4023c4:	2700      	movs	r7, #0
  4023c6:	2201      	movs	r2, #1
  4023c8:	9108      	str	r1, [sp, #32]
  4023ca:	e408      	b.n	401bde <_vfiprintf_r+0x222>
  4023cc:	9b03      	ldr	r3, [sp, #12]
  4023ce:	9303      	str	r3, [sp, #12]
  4023d0:	2301      	movs	r3, #1
  4023d2:	f10d 08b0 	add.w	r8, sp, #176	; 0xb0
  4023d6:	3630      	adds	r6, #48	; 0x30
  4023d8:	f808 6d41 	strb.w	r6, [r8, #-65]!
  4023dc:	9305      	str	r3, [sp, #20]
  4023de:	e41d      	b.n	401c1c <_vfiprintf_r+0x260>
  4023e0:	aa0f      	add	r2, sp, #60	; 0x3c
  4023e2:	9901      	ldr	r1, [sp, #4]
  4023e4:	9806      	ldr	r0, [sp, #24]
  4023e6:	f7ff faa9 	bl	40193c <__sprint_r.part.0>
  4023ea:	2800      	cmp	r0, #0
  4023ec:	f47f aefd 	bne.w	4021ea <_vfiprintf_r+0x82e>
  4023f0:	9910      	ldr	r1, [sp, #64]	; 0x40
  4023f2:	46d3      	mov	fp, sl
  4023f4:	9a11      	ldr	r2, [sp, #68]	; 0x44
  4023f6:	1c48      	adds	r0, r1, #1
  4023f8:	e6ad      	b.n	402156 <_vfiprintf_r+0x79a>
  4023fa:	aa0f      	add	r2, sp, #60	; 0x3c
  4023fc:	9901      	ldr	r1, [sp, #4]
  4023fe:	9806      	ldr	r0, [sp, #24]
  402400:	f7ff fa9c 	bl	40193c <__sprint_r.part.0>
  402404:	2800      	cmp	r0, #0
  402406:	f47f aef0 	bne.w	4021ea <_vfiprintf_r+0x82e>
  40240a:	9910      	ldr	r1, [sp, #64]	; 0x40
  40240c:	46d3      	mov	fp, sl
  40240e:	9a11      	ldr	r2, [sp, #68]	; 0x44
  402410:	1c48      	adds	r0, r1, #1
  402412:	e45a      	b.n	401cca <_vfiprintf_r+0x30e>
  402414:	2a00      	cmp	r2, #0
  402416:	d17b      	bne.n	402510 <_vfiprintf_r+0xb54>
  402418:	2001      	movs	r0, #1
  40241a:	4611      	mov	r1, r2
  40241c:	46d3      	mov	fp, sl
  40241e:	e69e      	b.n	40215e <_vfiprintf_r+0x7a2>
  402420:	aa0f      	add	r2, sp, #60	; 0x3c
  402422:	9901      	ldr	r1, [sp, #4]
  402424:	9806      	ldr	r0, [sp, #24]
  402426:	f7ff fa89 	bl	40193c <__sprint_r.part.0>
  40242a:	2800      	cmp	r0, #0
  40242c:	f47f aedd 	bne.w	4021ea <_vfiprintf_r+0x82e>
  402430:	9810      	ldr	r0, [sp, #64]	; 0x40
  402432:	46d3      	mov	fp, sl
  402434:	9a11      	ldr	r2, [sp, #68]	; 0x44
  402436:	3001      	adds	r0, #1
  402438:	e4a0      	b.n	401d7c <_vfiprintf_r+0x3c0>
  40243a:	9d08      	ldr	r5, [sp, #32]
  40243c:	3507      	adds	r5, #7
  40243e:	f025 0207 	bic.w	r2, r5, #7
  402442:	f102 0108 	add.w	r1, r2, #8
  402446:	e9d2 6700 	ldrd	r6, r7, [r2]
  40244a:	9108      	str	r1, [sp, #32]
  40244c:	2200      	movs	r2, #0
  40244e:	f7ff bbc6 	b.w	401bde <_vfiprintf_r+0x222>
  402452:	9d08      	ldr	r5, [sp, #32]
  402454:	3507      	adds	r5, #7
  402456:	f025 0207 	bic.w	r2, r5, #7
  40245a:	f102 0108 	add.w	r1, r2, #8
  40245e:	e9d2 6700 	ldrd	r6, r7, [r2]
  402462:	9108      	str	r1, [sp, #32]
  402464:	2201      	movs	r2, #1
  402466:	f7ff bbba 	b.w	401bde <_vfiprintf_r+0x222>
  40246a:	9d08      	ldr	r5, [sp, #32]
  40246c:	3507      	adds	r5, #7
  40246e:	f025 0107 	bic.w	r1, r5, #7
  402472:	f101 0008 	add.w	r0, r1, #8
  402476:	9008      	str	r0, [sp, #32]
  402478:	e9d1 6700 	ldrd	r6, r7, [r1]
  40247c:	e57d      	b.n	401f7a <_vfiprintf_r+0x5be>
  40247e:	9d08      	ldr	r5, [sp, #32]
  402480:	3507      	adds	r5, #7
  402482:	f025 0507 	bic.w	r5, r5, #7
  402486:	f105 0208 	add.w	r2, r5, #8
  40248a:	e9d5 0100 	ldrd	r0, r1, [r5]
  40248e:	9208      	str	r2, [sp, #32]
  402490:	4606      	mov	r6, r0
  402492:	460f      	mov	r7, r1
  402494:	e516      	b.n	401ec4 <_vfiprintf_r+0x508>
  402496:	46d0      	mov	r8, sl
  402498:	f7ff bbc0 	b.w	401c1c <_vfiprintf_r+0x260>
  40249c:	252d      	movs	r5, #45	; 0x2d
  40249e:	4276      	negs	r6, r6
  4024a0:	eb67 0747 	sbc.w	r7, r7, r7, lsl #1
  4024a4:	f88d 5037 	strb.w	r5, [sp, #55]	; 0x37
  4024a8:	2201      	movs	r2, #1
  4024aa:	f7ff bb9d 	b.w	401be8 <_vfiprintf_r+0x22c>
  4024ae:	9b09      	ldr	r3, [sp, #36]	; 0x24
  4024b0:	b96b      	cbnz	r3, 4024ce <_vfiprintf_r+0xb12>
  4024b2:	4611      	mov	r1, r2
  4024b4:	2001      	movs	r0, #1
  4024b6:	46d3      	mov	fp, sl
  4024b8:	e651      	b.n	40215e <_vfiprintf_r+0x7a2>
  4024ba:	aa0f      	add	r2, sp, #60	; 0x3c
  4024bc:	9901      	ldr	r1, [sp, #4]
  4024be:	9806      	ldr	r0, [sp, #24]
  4024c0:	f7ff fa3c 	bl	40193c <__sprint_r.part.0>
  4024c4:	2800      	cmp	r0, #0
  4024c6:	f47f ae90 	bne.w	4021ea <_vfiprintf_r+0x82e>
  4024ca:	9a11      	ldr	r2, [sp, #68]	; 0x44
  4024cc:	e6be      	b.n	40224c <_vfiprintf_r+0x890>
  4024ce:	2202      	movs	r2, #2
  4024d0:	ab0e      	add	r3, sp, #56	; 0x38
  4024d2:	921d      	str	r2, [sp, #116]	; 0x74
  4024d4:	931c      	str	r3, [sp, #112]	; 0x70
  4024d6:	2001      	movs	r0, #1
  4024d8:	46d3      	mov	fp, sl
  4024da:	e638      	b.n	40214e <_vfiprintf_r+0x792>
  4024dc:	4d31      	ldr	r5, [pc, #196]	; (4025a4 <_vfiprintf_r+0xbe8>)
  4024de:	e665      	b.n	4021ac <_vfiprintf_r+0x7f0>
  4024e0:	9a08      	ldr	r2, [sp, #32]
  4024e2:	4613      	mov	r3, r2
  4024e4:	3304      	adds	r3, #4
  4024e6:	9308      	str	r3, [sp, #32]
  4024e8:	9b04      	ldr	r3, [sp, #16]
  4024ea:	6811      	ldr	r1, [r2, #0]
  4024ec:	17dd      	asrs	r5, r3, #31
  4024ee:	461a      	mov	r2, r3
  4024f0:	462b      	mov	r3, r5
  4024f2:	e9c1 2300 	strd	r2, r3, [r1]
  4024f6:	f7ff ba93 	b.w	401a20 <_vfiprintf_r+0x64>
  4024fa:	4640      	mov	r0, r8
  4024fc:	9508      	str	r5, [sp, #32]
  4024fe:	9303      	str	r3, [sp, #12]
  402500:	f7ff f9ee 	bl	4018e0 <strlen>
  402504:	2400      	movs	r4, #0
  402506:	9005      	str	r0, [sp, #20]
  402508:	f89d 5037 	ldrb.w	r5, [sp, #55]	; 0x37
  40250c:	f7ff bb86 	b.w	401c1c <_vfiprintf_r+0x260>
  402510:	aa0f      	add	r2, sp, #60	; 0x3c
  402512:	9901      	ldr	r1, [sp, #4]
  402514:	9806      	ldr	r0, [sp, #24]
  402516:	f7ff fa11 	bl	40193c <__sprint_r.part.0>
  40251a:	2800      	cmp	r0, #0
  40251c:	f47f ae65 	bne.w	4021ea <_vfiprintf_r+0x82e>
  402520:	9910      	ldr	r1, [sp, #64]	; 0x40
  402522:	46d3      	mov	fp, sl
  402524:	9a11      	ldr	r2, [sp, #68]	; 0x44
  402526:	1c48      	adds	r0, r1, #1
  402528:	e619      	b.n	40215e <_vfiprintf_r+0x7a2>
  40252a:	9910      	ldr	r1, [sp, #64]	; 0x40
  40252c:	9a11      	ldr	r2, [sp, #68]	; 0x44
  40252e:	3101      	adds	r1, #1
  402530:	4e1d      	ldr	r6, [pc, #116]	; (4025a8 <_vfiprintf_r+0xbec>)
  402532:	f7ff bbb8 	b.w	401ca6 <_vfiprintf_r+0x2ea>
  402536:	2c06      	cmp	r4, #6
  402538:	bf28      	it	cs
  40253a:	2406      	movcs	r4, #6
  40253c:	9508      	str	r5, [sp, #32]
  40253e:	9405      	str	r4, [sp, #20]
  402540:	9402      	str	r4, [sp, #8]
  402542:	f8df 8068 	ldr.w	r8, [pc, #104]	; 4025ac <_vfiprintf_r+0xbf0>
  402546:	e4a4      	b.n	401e92 <_vfiprintf_r+0x4d6>
  402548:	9810      	ldr	r0, [sp, #64]	; 0x40
  40254a:	4e17      	ldr	r6, [pc, #92]	; (4025a8 <_vfiprintf_r+0xbec>)
  40254c:	3001      	adds	r0, #1
  40254e:	e453      	b.n	401df8 <_vfiprintf_r+0x43c>
  402550:	9405      	str	r4, [sp, #20]
  402552:	9508      	str	r5, [sp, #32]
  402554:	9303      	str	r3, [sp, #12]
  402556:	4604      	mov	r4, r0
  402558:	f89d 5037 	ldrb.w	r5, [sp, #55]	; 0x37
  40255c:	f7ff bb5e 	b.w	401c1c <_vfiprintf_r+0x260>
  402560:	4686      	mov	lr, r0
  402562:	4d10      	ldr	r5, [pc, #64]	; (4025a4 <_vfiprintf_r+0xbe8>)
  402564:	f7ff bbf6 	b.w	401d54 <_vfiprintf_r+0x398>
  402568:	9908      	ldr	r1, [sp, #32]
  40256a:	f899 2001 	ldrb.w	r2, [r9, #1]
  40256e:	680c      	ldr	r4, [r1, #0]
  402570:	3104      	adds	r1, #4
  402572:	ea44 74e4 	orr.w	r4, r4, r4, asr #31
  402576:	46b9      	mov	r9, r7
  402578:	9108      	str	r1, [sp, #32]
  40257a:	f7ff ba86 	b.w	401a8a <_vfiprintf_r+0xce>
  40257e:	f88d 6037 	strb.w	r6, [sp, #55]	; 0x37
  402582:	e597      	b.n	4020b4 <_vfiprintf_r+0x6f8>
  402584:	f88d 6037 	strb.w	r6, [sp, #55]	; 0x37
  402588:	e4e6      	b.n	401f58 <_vfiprintf_r+0x59c>
  40258a:	f88d 6037 	strb.w	r6, [sp, #55]	; 0x37
  40258e:	e579      	b.n	402084 <_vfiprintf_r+0x6c8>
  402590:	f88d 6037 	strb.w	r6, [sp, #55]	; 0x37
  402594:	e52c      	b.n	401ff0 <_vfiprintf_r+0x634>
  402596:	f88d 6037 	strb.w	r6, [sp, #55]	; 0x37
  40259a:	e4ca      	b.n	401f32 <_vfiprintf_r+0x576>
  40259c:	f88d 6037 	strb.w	r6, [sp, #55]	; 0x37
  4025a0:	e47e      	b.n	401ea0 <_vfiprintf_r+0x4e4>
  4025a2:	bf00      	nop
  4025a4:	004044a8 	.word	0x004044a8
  4025a8:	00404498 	.word	0x00404498
  4025ac:	00404490 	.word	0x00404490

004025b0 <__sbprintf>:
  4025b0:	b570      	push	{r4, r5, r6, lr}
  4025b2:	460c      	mov	r4, r1
  4025b4:	2600      	movs	r6, #0
  4025b6:	f44f 6580 	mov.w	r5, #1024	; 0x400
  4025ba:	8989      	ldrh	r1, [r1, #12]
  4025bc:	f5ad 6d8d 	sub.w	sp, sp, #1128	; 0x468
  4025c0:	f021 0102 	bic.w	r1, r1, #2
  4025c4:	f8ad 100c 	strh.w	r1, [sp, #12]
  4025c8:	9606      	str	r6, [sp, #24]
  4025ca:	6e61      	ldr	r1, [r4, #100]	; 0x64
  4025cc:	89e6      	ldrh	r6, [r4, #14]
  4025ce:	9119      	str	r1, [sp, #100]	; 0x64
  4025d0:	f8ad 600e 	strh.w	r6, [sp, #14]
  4025d4:	69e1      	ldr	r1, [r4, #28]
  4025d6:	6a66      	ldr	r6, [r4, #36]	; 0x24
  4025d8:	9107      	str	r1, [sp, #28]
  4025da:	9609      	str	r6, [sp, #36]	; 0x24
  4025dc:	4669      	mov	r1, sp
  4025de:	ae1a      	add	r6, sp, #104	; 0x68
  4025e0:	9600      	str	r6, [sp, #0]
  4025e2:	9604      	str	r6, [sp, #16]
  4025e4:	9502      	str	r5, [sp, #8]
  4025e6:	9505      	str	r5, [sp, #20]
  4025e8:	4606      	mov	r6, r0
  4025ea:	f7ff f9e7 	bl	4019bc <_vfiprintf_r>
  4025ee:	1e05      	subs	r5, r0, #0
  4025f0:	db07      	blt.n	402602 <__sbprintf+0x52>
  4025f2:	4630      	mov	r0, r6
  4025f4:	4669      	mov	r1, sp
  4025f6:	f000 f921 	bl	40283c <_fflush_r>
  4025fa:	2800      	cmp	r0, #0
  4025fc:	bf18      	it	ne
  4025fe:	f04f 35ff 	movne.w	r5, #4294967295
  402602:	f8bd 300c 	ldrh.w	r3, [sp, #12]
  402606:	065b      	lsls	r3, r3, #25
  402608:	d503      	bpl.n	402612 <__sbprintf+0x62>
  40260a:	89a3      	ldrh	r3, [r4, #12]
  40260c:	f043 0340 	orr.w	r3, r3, #64	; 0x40
  402610:	81a3      	strh	r3, [r4, #12]
  402612:	4628      	mov	r0, r5
  402614:	f50d 6d8d 	add.w	sp, sp, #1128	; 0x468
  402618:	bd70      	pop	{r4, r5, r6, pc}
  40261a:	bf00      	nop

0040261c <__swsetup_r>:
  40261c:	b538      	push	{r3, r4, r5, lr}
  40261e:	4b30      	ldr	r3, [pc, #192]	; (4026e0 <__swsetup_r+0xc4>)
  402620:	4605      	mov	r5, r0
  402622:	6818      	ldr	r0, [r3, #0]
  402624:	460c      	mov	r4, r1
  402626:	b110      	cbz	r0, 40262e <__swsetup_r+0x12>
  402628:	6b83      	ldr	r3, [r0, #56]	; 0x38
  40262a:	2b00      	cmp	r3, #0
  40262c:	d038      	beq.n	4026a0 <__swsetup_r+0x84>
  40262e:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
  402632:	b293      	uxth	r3, r2
  402634:	0718      	lsls	r0, r3, #28
  402636:	d50c      	bpl.n	402652 <__swsetup_r+0x36>
  402638:	6920      	ldr	r0, [r4, #16]
  40263a:	b1a8      	cbz	r0, 402668 <__swsetup_r+0x4c>
  40263c:	f013 0201 	ands.w	r2, r3, #1
  402640:	d01e      	beq.n	402680 <__swsetup_r+0x64>
  402642:	2200      	movs	r2, #0
  402644:	6963      	ldr	r3, [r4, #20]
  402646:	60a2      	str	r2, [r4, #8]
  402648:	425b      	negs	r3, r3
  40264a:	61a3      	str	r3, [r4, #24]
  40264c:	b1f0      	cbz	r0, 40268c <__swsetup_r+0x70>
  40264e:	2000      	movs	r0, #0
  402650:	bd38      	pop	{r3, r4, r5, pc}
  402652:	06d9      	lsls	r1, r3, #27
  402654:	d53b      	bpl.n	4026ce <__swsetup_r+0xb2>
  402656:	0758      	lsls	r0, r3, #29
  402658:	d425      	bmi.n	4026a6 <__swsetup_r+0x8a>
  40265a:	6920      	ldr	r0, [r4, #16]
  40265c:	f042 0308 	orr.w	r3, r2, #8
  402660:	81a3      	strh	r3, [r4, #12]
  402662:	b29b      	uxth	r3, r3
  402664:	2800      	cmp	r0, #0
  402666:	d1e9      	bne.n	40263c <__swsetup_r+0x20>
  402668:	f403 7220 	and.w	r2, r3, #640	; 0x280
  40266c:	f5b2 7f00 	cmp.w	r2, #512	; 0x200
  402670:	d0e4      	beq.n	40263c <__swsetup_r+0x20>
  402672:	4628      	mov	r0, r5
  402674:	4621      	mov	r1, r4
  402676:	f000 fd0b 	bl	403090 <__smakebuf_r>
  40267a:	89a3      	ldrh	r3, [r4, #12]
  40267c:	6920      	ldr	r0, [r4, #16]
  40267e:	e7dd      	b.n	40263c <__swsetup_r+0x20>
  402680:	0799      	lsls	r1, r3, #30
  402682:	bf58      	it	pl
  402684:	6962      	ldrpl	r2, [r4, #20]
  402686:	60a2      	str	r2, [r4, #8]
  402688:	2800      	cmp	r0, #0
  40268a:	d1e0      	bne.n	40264e <__swsetup_r+0x32>
  40268c:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  402690:	061a      	lsls	r2, r3, #24
  402692:	d5dd      	bpl.n	402650 <__swsetup_r+0x34>
  402694:	f043 0340 	orr.w	r3, r3, #64	; 0x40
  402698:	81a3      	strh	r3, [r4, #12]
  40269a:	f04f 30ff 	mov.w	r0, #4294967295
  40269e:	bd38      	pop	{r3, r4, r5, pc}
  4026a0:	f000 f960 	bl	402964 <__sinit>
  4026a4:	e7c3      	b.n	40262e <__swsetup_r+0x12>
  4026a6:	6b21      	ldr	r1, [r4, #48]	; 0x30
  4026a8:	b151      	cbz	r1, 4026c0 <__swsetup_r+0xa4>
  4026aa:	f104 0340 	add.w	r3, r4, #64	; 0x40
  4026ae:	4299      	cmp	r1, r3
  4026b0:	d004      	beq.n	4026bc <__swsetup_r+0xa0>
  4026b2:	4628      	mov	r0, r5
  4026b4:	f000 fa28 	bl	402b08 <_free_r>
  4026b8:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
  4026bc:	2300      	movs	r3, #0
  4026be:	6323      	str	r3, [r4, #48]	; 0x30
  4026c0:	2300      	movs	r3, #0
  4026c2:	6920      	ldr	r0, [r4, #16]
  4026c4:	f022 0224 	bic.w	r2, r2, #36	; 0x24
  4026c8:	e884 0009 	stmia.w	r4, {r0, r3}
  4026cc:	e7c6      	b.n	40265c <__swsetup_r+0x40>
  4026ce:	2309      	movs	r3, #9
  4026d0:	f042 0240 	orr.w	r2, r2, #64	; 0x40
  4026d4:	602b      	str	r3, [r5, #0]
  4026d6:	f04f 30ff 	mov.w	r0, #4294967295
  4026da:	81a2      	strh	r2, [r4, #12]
  4026dc:	bd38      	pop	{r3, r4, r5, pc}
  4026de:	bf00      	nop
  4026e0:	20000108 	.word	0x20000108

004026e4 <register_fini>:
  4026e4:	4b02      	ldr	r3, [pc, #8]	; (4026f0 <register_fini+0xc>)
  4026e6:	b113      	cbz	r3, 4026ee <register_fini+0xa>
  4026e8:	4802      	ldr	r0, [pc, #8]	; (4026f4 <register_fini+0x10>)
  4026ea:	f000 b805 	b.w	4026f8 <atexit>
  4026ee:	4770      	bx	lr
  4026f0:	00000000 	.word	0x00000000
  4026f4:	00402979 	.word	0x00402979

004026f8 <atexit>:
  4026f8:	2300      	movs	r3, #0
  4026fa:	4601      	mov	r1, r0
  4026fc:	461a      	mov	r2, r3
  4026fe:	4618      	mov	r0, r3
  402700:	f001 bb9e 	b.w	403e40 <__register_exitproc>

00402704 <__sflush_r>:
  402704:	f9b1 300c 	ldrsh.w	r3, [r1, #12]
  402708:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  40270c:	b29a      	uxth	r2, r3
  40270e:	460d      	mov	r5, r1
  402710:	0711      	lsls	r1, r2, #28
  402712:	4680      	mov	r8, r0
  402714:	d43a      	bmi.n	40278c <__sflush_r+0x88>
  402716:	686a      	ldr	r2, [r5, #4]
  402718:	f443 6300 	orr.w	r3, r3, #2048	; 0x800
  40271c:	2a00      	cmp	r2, #0
  40271e:	81ab      	strh	r3, [r5, #12]
  402720:	dd70      	ble.n	402804 <__sflush_r+0x100>
  402722:	6aac      	ldr	r4, [r5, #40]	; 0x28
  402724:	2c00      	cmp	r4, #0
  402726:	d04a      	beq.n	4027be <__sflush_r+0xba>
  402728:	2200      	movs	r2, #0
  40272a:	b29b      	uxth	r3, r3
  40272c:	f8d8 6000 	ldr.w	r6, [r8]
  402730:	f8c8 2000 	str.w	r2, [r8]
  402734:	f413 5280 	ands.w	r2, r3, #4096	; 0x1000
  402738:	d068      	beq.n	40280c <__sflush_r+0x108>
  40273a:	6d2a      	ldr	r2, [r5, #80]	; 0x50
  40273c:	075f      	lsls	r7, r3, #29
  40273e:	d505      	bpl.n	40274c <__sflush_r+0x48>
  402740:	6869      	ldr	r1, [r5, #4]
  402742:	6b2b      	ldr	r3, [r5, #48]	; 0x30
  402744:	1a52      	subs	r2, r2, r1
  402746:	b10b      	cbz	r3, 40274c <__sflush_r+0x48>
  402748:	6beb      	ldr	r3, [r5, #60]	; 0x3c
  40274a:	1ad2      	subs	r2, r2, r3
  40274c:	2300      	movs	r3, #0
  40274e:	69e9      	ldr	r1, [r5, #28]
  402750:	4640      	mov	r0, r8
  402752:	47a0      	blx	r4
  402754:	1c44      	adds	r4, r0, #1
  402756:	d03d      	beq.n	4027d4 <__sflush_r+0xd0>
  402758:	2100      	movs	r1, #0
  40275a:	f9b5 300c 	ldrsh.w	r3, [r5, #12]
  40275e:	692a      	ldr	r2, [r5, #16]
  402760:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
  402764:	81ab      	strh	r3, [r5, #12]
  402766:	04db      	lsls	r3, r3, #19
  402768:	6069      	str	r1, [r5, #4]
  40276a:	602a      	str	r2, [r5, #0]
  40276c:	d448      	bmi.n	402800 <__sflush_r+0xfc>
  40276e:	6b29      	ldr	r1, [r5, #48]	; 0x30
  402770:	f8c8 6000 	str.w	r6, [r8]
  402774:	b319      	cbz	r1, 4027be <__sflush_r+0xba>
  402776:	f105 0340 	add.w	r3, r5, #64	; 0x40
  40277a:	4299      	cmp	r1, r3
  40277c:	d002      	beq.n	402784 <__sflush_r+0x80>
  40277e:	4640      	mov	r0, r8
  402780:	f000 f9c2 	bl	402b08 <_free_r>
  402784:	2000      	movs	r0, #0
  402786:	6328      	str	r0, [r5, #48]	; 0x30
  402788:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  40278c:	692e      	ldr	r6, [r5, #16]
  40278e:	b1b6      	cbz	r6, 4027be <__sflush_r+0xba>
  402790:	0791      	lsls	r1, r2, #30
  402792:	bf18      	it	ne
  402794:	2300      	movne	r3, #0
  402796:	682c      	ldr	r4, [r5, #0]
  402798:	bf08      	it	eq
  40279a:	696b      	ldreq	r3, [r5, #20]
  40279c:	602e      	str	r6, [r5, #0]
  40279e:	1ba4      	subs	r4, r4, r6
  4027a0:	60ab      	str	r3, [r5, #8]
  4027a2:	e00a      	b.n	4027ba <__sflush_r+0xb6>
  4027a4:	4623      	mov	r3, r4
  4027a6:	4632      	mov	r2, r6
  4027a8:	6a6f      	ldr	r7, [r5, #36]	; 0x24
  4027aa:	69e9      	ldr	r1, [r5, #28]
  4027ac:	4640      	mov	r0, r8
  4027ae:	47b8      	blx	r7
  4027b0:	2800      	cmp	r0, #0
  4027b2:	eba4 0400 	sub.w	r4, r4, r0
  4027b6:	4406      	add	r6, r0
  4027b8:	dd04      	ble.n	4027c4 <__sflush_r+0xc0>
  4027ba:	2c00      	cmp	r4, #0
  4027bc:	dcf2      	bgt.n	4027a4 <__sflush_r+0xa0>
  4027be:	2000      	movs	r0, #0
  4027c0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  4027c4:	89ab      	ldrh	r3, [r5, #12]
  4027c6:	f04f 30ff 	mov.w	r0, #4294967295
  4027ca:	f043 0340 	orr.w	r3, r3, #64	; 0x40
  4027ce:	81ab      	strh	r3, [r5, #12]
  4027d0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  4027d4:	f8d8 4000 	ldr.w	r4, [r8]
  4027d8:	2c1d      	cmp	r4, #29
  4027da:	d8f3      	bhi.n	4027c4 <__sflush_r+0xc0>
  4027dc:	4b16      	ldr	r3, [pc, #88]	; (402838 <__sflush_r+0x134>)
  4027de:	40e3      	lsrs	r3, r4
  4027e0:	43db      	mvns	r3, r3
  4027e2:	f013 0301 	ands.w	r3, r3, #1
  4027e6:	d1ed      	bne.n	4027c4 <__sflush_r+0xc0>
  4027e8:	f9b5 200c 	ldrsh.w	r2, [r5, #12]
  4027ec:	6929      	ldr	r1, [r5, #16]
  4027ee:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
  4027f2:	81aa      	strh	r2, [r5, #12]
  4027f4:	04d2      	lsls	r2, r2, #19
  4027f6:	606b      	str	r3, [r5, #4]
  4027f8:	6029      	str	r1, [r5, #0]
  4027fa:	d5b8      	bpl.n	40276e <__sflush_r+0x6a>
  4027fc:	2c00      	cmp	r4, #0
  4027fe:	d1b6      	bne.n	40276e <__sflush_r+0x6a>
  402800:	6528      	str	r0, [r5, #80]	; 0x50
  402802:	e7b4      	b.n	40276e <__sflush_r+0x6a>
  402804:	6bea      	ldr	r2, [r5, #60]	; 0x3c
  402806:	2a00      	cmp	r2, #0
  402808:	dc8b      	bgt.n	402722 <__sflush_r+0x1e>
  40280a:	e7d8      	b.n	4027be <__sflush_r+0xba>
  40280c:	2301      	movs	r3, #1
  40280e:	69e9      	ldr	r1, [r5, #28]
  402810:	4640      	mov	r0, r8
  402812:	47a0      	blx	r4
  402814:	1c43      	adds	r3, r0, #1
  402816:	4602      	mov	r2, r0
  402818:	d002      	beq.n	402820 <__sflush_r+0x11c>
  40281a:	89ab      	ldrh	r3, [r5, #12]
  40281c:	6aac      	ldr	r4, [r5, #40]	; 0x28
  40281e:	e78d      	b.n	40273c <__sflush_r+0x38>
  402820:	f8d8 3000 	ldr.w	r3, [r8]
  402824:	2b00      	cmp	r3, #0
  402826:	d0f8      	beq.n	40281a <__sflush_r+0x116>
  402828:	2b1d      	cmp	r3, #29
  40282a:	d001      	beq.n	402830 <__sflush_r+0x12c>
  40282c:	2b16      	cmp	r3, #22
  40282e:	d1c9      	bne.n	4027c4 <__sflush_r+0xc0>
  402830:	f8c8 6000 	str.w	r6, [r8]
  402834:	e7c3      	b.n	4027be <__sflush_r+0xba>
  402836:	bf00      	nop
  402838:	20400001 	.word	0x20400001

0040283c <_fflush_r>:
  40283c:	b510      	push	{r4, lr}
  40283e:	4604      	mov	r4, r0
  402840:	b082      	sub	sp, #8
  402842:	b108      	cbz	r0, 402848 <_fflush_r+0xc>
  402844:	6b83      	ldr	r3, [r0, #56]	; 0x38
  402846:	b153      	cbz	r3, 40285e <_fflush_r+0x22>
  402848:	f9b1 000c 	ldrsh.w	r0, [r1, #12]
  40284c:	b908      	cbnz	r0, 402852 <_fflush_r+0x16>
  40284e:	b002      	add	sp, #8
  402850:	bd10      	pop	{r4, pc}
  402852:	4620      	mov	r0, r4
  402854:	b002      	add	sp, #8
  402856:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  40285a:	f7ff bf53 	b.w	402704 <__sflush_r>
  40285e:	9101      	str	r1, [sp, #4]
  402860:	f000 f880 	bl	402964 <__sinit>
  402864:	9901      	ldr	r1, [sp, #4]
  402866:	e7ef      	b.n	402848 <_fflush_r+0xc>

00402868 <_cleanup_r>:
  402868:	4901      	ldr	r1, [pc, #4]	; (402870 <_cleanup_r+0x8>)
  40286a:	f000 bbad 	b.w	402fc8 <_fwalk_reent>
  40286e:	bf00      	nop
  402870:	00403f11 	.word	0x00403f11

00402874 <__sinit.part.1>:
  402874:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  402878:	4607      	mov	r7, r0
  40287a:	2400      	movs	r4, #0
  40287c:	2304      	movs	r3, #4
  40287e:	2103      	movs	r1, #3
  402880:	687d      	ldr	r5, [r7, #4]
  402882:	4833      	ldr	r0, [pc, #204]	; (402950 <__sinit.part.1+0xdc>)
  402884:	f507 723b 	add.w	r2, r7, #748	; 0x2ec
  402888:	63f8      	str	r0, [r7, #60]	; 0x3c
  40288a:	f8c7 12e4 	str.w	r1, [r7, #740]	; 0x2e4
  40288e:	f8c7 22e8 	str.w	r2, [r7, #744]	; 0x2e8
  402892:	f8c7 42e0 	str.w	r4, [r7, #736]	; 0x2e0
  402896:	b083      	sub	sp, #12
  402898:	602c      	str	r4, [r5, #0]
  40289a:	606c      	str	r4, [r5, #4]
  40289c:	60ac      	str	r4, [r5, #8]
  40289e:	666c      	str	r4, [r5, #100]	; 0x64
  4028a0:	81ec      	strh	r4, [r5, #14]
  4028a2:	612c      	str	r4, [r5, #16]
  4028a4:	616c      	str	r4, [r5, #20]
  4028a6:	61ac      	str	r4, [r5, #24]
  4028a8:	81ab      	strh	r3, [r5, #12]
  4028aa:	4621      	mov	r1, r4
  4028ac:	f105 005c 	add.w	r0, r5, #92	; 0x5c
  4028b0:	2208      	movs	r2, #8
  4028b2:	f7fe fedd 	bl	401670 <memset>
  4028b6:	2301      	movs	r3, #1
  4028b8:	2209      	movs	r2, #9
  4028ba:	68be      	ldr	r6, [r7, #8]
  4028bc:	f8df b094 	ldr.w	fp, [pc, #148]	; 402954 <__sinit.part.1+0xe0>
  4028c0:	f8df a094 	ldr.w	sl, [pc, #148]	; 402958 <__sinit.part.1+0xe4>
  4028c4:	f8df 9094 	ldr.w	r9, [pc, #148]	; 40295c <__sinit.part.1+0xe8>
  4028c8:	f8df 8094 	ldr.w	r8, [pc, #148]	; 402960 <__sinit.part.1+0xec>
  4028cc:	f8c5 b020 	str.w	fp, [r5, #32]
  4028d0:	f8c5 a024 	str.w	sl, [r5, #36]	; 0x24
  4028d4:	f8c5 9028 	str.w	r9, [r5, #40]	; 0x28
  4028d8:	f8c5 802c 	str.w	r8, [r5, #44]	; 0x2c
  4028dc:	61ed      	str	r5, [r5, #28]
  4028de:	4621      	mov	r1, r4
  4028e0:	81f3      	strh	r3, [r6, #14]
  4028e2:	81b2      	strh	r2, [r6, #12]
  4028e4:	f106 005c 	add.w	r0, r6, #92	; 0x5c
  4028e8:	6034      	str	r4, [r6, #0]
  4028ea:	6074      	str	r4, [r6, #4]
  4028ec:	60b4      	str	r4, [r6, #8]
  4028ee:	6674      	str	r4, [r6, #100]	; 0x64
  4028f0:	6134      	str	r4, [r6, #16]
  4028f2:	6174      	str	r4, [r6, #20]
  4028f4:	61b4      	str	r4, [r6, #24]
  4028f6:	2208      	movs	r2, #8
  4028f8:	9301      	str	r3, [sp, #4]
  4028fa:	f7fe feb9 	bl	401670 <memset>
  4028fe:	2012      	movs	r0, #18
  402900:	2202      	movs	r2, #2
  402902:	68fd      	ldr	r5, [r7, #12]
  402904:	4621      	mov	r1, r4
  402906:	61f6      	str	r6, [r6, #28]
  402908:	f8c6 b020 	str.w	fp, [r6, #32]
  40290c:	f8c6 a024 	str.w	sl, [r6, #36]	; 0x24
  402910:	f8c6 9028 	str.w	r9, [r6, #40]	; 0x28
  402914:	f8c6 802c 	str.w	r8, [r6, #44]	; 0x2c
  402918:	81a8      	strh	r0, [r5, #12]
  40291a:	81ea      	strh	r2, [r5, #14]
  40291c:	602c      	str	r4, [r5, #0]
  40291e:	606c      	str	r4, [r5, #4]
  402920:	60ac      	str	r4, [r5, #8]
  402922:	666c      	str	r4, [r5, #100]	; 0x64
  402924:	612c      	str	r4, [r5, #16]
  402926:	616c      	str	r4, [r5, #20]
  402928:	61ac      	str	r4, [r5, #24]
  40292a:	f105 005c 	add.w	r0, r5, #92	; 0x5c
  40292e:	2208      	movs	r2, #8
  402930:	f7fe fe9e 	bl	401670 <memset>
  402934:	9b01      	ldr	r3, [sp, #4]
  402936:	61ed      	str	r5, [r5, #28]
  402938:	f8c5 b020 	str.w	fp, [r5, #32]
  40293c:	f8c5 a024 	str.w	sl, [r5, #36]	; 0x24
  402940:	f8c5 9028 	str.w	r9, [r5, #40]	; 0x28
  402944:	f8c5 802c 	str.w	r8, [r5, #44]	; 0x2c
  402948:	63bb      	str	r3, [r7, #56]	; 0x38
  40294a:	b003      	add	sp, #12
  40294c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  402950:	00402869 	.word	0x00402869
  402954:	00403c71 	.word	0x00403c71
  402958:	00403c95 	.word	0x00403c95
  40295c:	00403cd1 	.word	0x00403cd1
  402960:	00403cf1 	.word	0x00403cf1

00402964 <__sinit>:
  402964:	6b83      	ldr	r3, [r0, #56]	; 0x38
  402966:	b103      	cbz	r3, 40296a <__sinit+0x6>
  402968:	4770      	bx	lr
  40296a:	f7ff bf83 	b.w	402874 <__sinit.part.1>
  40296e:	bf00      	nop

00402970 <__sfp_lock_acquire>:
  402970:	4770      	bx	lr
  402972:	bf00      	nop

00402974 <__sfp_lock_release>:
  402974:	4770      	bx	lr
  402976:	bf00      	nop

00402978 <__libc_fini_array>:
  402978:	b538      	push	{r3, r4, r5, lr}
  40297a:	4c0a      	ldr	r4, [pc, #40]	; (4029a4 <__libc_fini_array+0x2c>)
  40297c:	4d0a      	ldr	r5, [pc, #40]	; (4029a8 <__libc_fini_array+0x30>)
  40297e:	1b64      	subs	r4, r4, r5
  402980:	10a4      	asrs	r4, r4, #2
  402982:	d00a      	beq.n	40299a <__libc_fini_array+0x22>
  402984:	f104 4380 	add.w	r3, r4, #1073741824	; 0x40000000
  402988:	3b01      	subs	r3, #1
  40298a:	eb05 0583 	add.w	r5, r5, r3, lsl #2
  40298e:	3c01      	subs	r4, #1
  402990:	f855 3904 	ldr.w	r3, [r5], #-4
  402994:	4798      	blx	r3
  402996:	2c00      	cmp	r4, #0
  402998:	d1f9      	bne.n	40298e <__libc_fini_array+0x16>
  40299a:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  40299e:	f001 be1f 	b.w	4045e0 <_fini>
  4029a2:	bf00      	nop
  4029a4:	004045f0 	.word	0x004045f0
  4029a8:	004045ec 	.word	0x004045ec

004029ac <__fputwc>:
  4029ac:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
  4029b0:	b083      	sub	sp, #12
  4029b2:	4607      	mov	r7, r0
  4029b4:	4688      	mov	r8, r1
  4029b6:	4614      	mov	r4, r2
  4029b8:	f000 fb2e 	bl	403018 <__locale_mb_cur_max>
  4029bc:	2801      	cmp	r0, #1
  4029be:	d033      	beq.n	402a28 <__fputwc+0x7c>
  4029c0:	4642      	mov	r2, r8
  4029c2:	f104 035c 	add.w	r3, r4, #92	; 0x5c
  4029c6:	a901      	add	r1, sp, #4
  4029c8:	4638      	mov	r0, r7
  4029ca:	f001 f9ed 	bl	403da8 <_wcrtomb_r>
  4029ce:	1c42      	adds	r2, r0, #1
  4029d0:	4606      	mov	r6, r0
  4029d2:	d022      	beq.n	402a1a <__fputwc+0x6e>
  4029d4:	b390      	cbz	r0, 402a3c <__fputwc+0x90>
  4029d6:	f89d 1004 	ldrb.w	r1, [sp, #4]
  4029da:	2500      	movs	r5, #0
  4029dc:	f10d 0904 	add.w	r9, sp, #4
  4029e0:	e008      	b.n	4029f4 <__fputwc+0x48>
  4029e2:	6823      	ldr	r3, [r4, #0]
  4029e4:	1c5a      	adds	r2, r3, #1
  4029e6:	6022      	str	r2, [r4, #0]
  4029e8:	7019      	strb	r1, [r3, #0]
  4029ea:	3501      	adds	r5, #1
  4029ec:	42b5      	cmp	r5, r6
  4029ee:	d225      	bcs.n	402a3c <__fputwc+0x90>
  4029f0:	f815 1009 	ldrb.w	r1, [r5, r9]
  4029f4:	68a3      	ldr	r3, [r4, #8]
  4029f6:	3b01      	subs	r3, #1
  4029f8:	2b00      	cmp	r3, #0
  4029fa:	60a3      	str	r3, [r4, #8]
  4029fc:	daf1      	bge.n	4029e2 <__fputwc+0x36>
  4029fe:	69a2      	ldr	r2, [r4, #24]
  402a00:	4293      	cmp	r3, r2
  402a02:	db01      	blt.n	402a08 <__fputwc+0x5c>
  402a04:	290a      	cmp	r1, #10
  402a06:	d1ec      	bne.n	4029e2 <__fputwc+0x36>
  402a08:	4622      	mov	r2, r4
  402a0a:	4638      	mov	r0, r7
  402a0c:	f001 f974 	bl	403cf8 <__swbuf_r>
  402a10:	1c43      	adds	r3, r0, #1
  402a12:	d1ea      	bne.n	4029ea <__fputwc+0x3e>
  402a14:	b003      	add	sp, #12
  402a16:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
  402a1a:	89a3      	ldrh	r3, [r4, #12]
  402a1c:	f043 0340 	orr.w	r3, r3, #64	; 0x40
  402a20:	81a3      	strh	r3, [r4, #12]
  402a22:	b003      	add	sp, #12
  402a24:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
  402a28:	f108 33ff 	add.w	r3, r8, #4294967295
  402a2c:	2bfe      	cmp	r3, #254	; 0xfe
  402a2e:	d8c7      	bhi.n	4029c0 <__fputwc+0x14>
  402a30:	fa5f f188 	uxtb.w	r1, r8
  402a34:	4606      	mov	r6, r0
  402a36:	f88d 1004 	strb.w	r1, [sp, #4]
  402a3a:	e7ce      	b.n	4029da <__fputwc+0x2e>
  402a3c:	4640      	mov	r0, r8
  402a3e:	b003      	add	sp, #12
  402a40:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}

00402a44 <_fputwc_r>:
  402a44:	f9b2 300c 	ldrsh.w	r3, [r2, #12]
  402a48:	f413 5f00 	tst.w	r3, #8192	; 0x2000
  402a4c:	d10a      	bne.n	402a64 <_fputwc_r+0x20>
  402a4e:	b410      	push	{r4}
  402a50:	6e54      	ldr	r4, [r2, #100]	; 0x64
  402a52:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
  402a56:	f444 5400 	orr.w	r4, r4, #8192	; 0x2000
  402a5a:	6654      	str	r4, [r2, #100]	; 0x64
  402a5c:	8193      	strh	r3, [r2, #12]
  402a5e:	bc10      	pop	{r4}
  402a60:	f7ff bfa4 	b.w	4029ac <__fputwc>
  402a64:	f7ff bfa2 	b.w	4029ac <__fputwc>

00402a68 <_malloc_trim_r>:
  402a68:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  402a6a:	460c      	mov	r4, r1
  402a6c:	4f23      	ldr	r7, [pc, #140]	; (402afc <_malloc_trim_r+0x94>)
  402a6e:	4606      	mov	r6, r0
  402a70:	f000 ff32 	bl	4038d8 <__malloc_lock>
  402a74:	68bb      	ldr	r3, [r7, #8]
  402a76:	f5c4 617e 	rsb	r1, r4, #4064	; 0xfe0
  402a7a:	685d      	ldr	r5, [r3, #4]
  402a7c:	310f      	adds	r1, #15
  402a7e:	f025 0503 	bic.w	r5, r5, #3
  402a82:	4429      	add	r1, r5
  402a84:	f421 617f 	bic.w	r1, r1, #4080	; 0xff0
  402a88:	f021 010f 	bic.w	r1, r1, #15
  402a8c:	f5a1 5480 	sub.w	r4, r1, #4096	; 0x1000
  402a90:	f5b4 5f80 	cmp.w	r4, #4096	; 0x1000
  402a94:	db07      	blt.n	402aa6 <_malloc_trim_r+0x3e>
  402a96:	2100      	movs	r1, #0
  402a98:	4630      	mov	r0, r6
  402a9a:	f001 f8d7 	bl	403c4c <_sbrk_r>
  402a9e:	68bb      	ldr	r3, [r7, #8]
  402aa0:	442b      	add	r3, r5
  402aa2:	4298      	cmp	r0, r3
  402aa4:	d004      	beq.n	402ab0 <_malloc_trim_r+0x48>
  402aa6:	4630      	mov	r0, r6
  402aa8:	f000 ff18 	bl	4038dc <__malloc_unlock>
  402aac:	2000      	movs	r0, #0
  402aae:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  402ab0:	4261      	negs	r1, r4
  402ab2:	4630      	mov	r0, r6
  402ab4:	f001 f8ca 	bl	403c4c <_sbrk_r>
  402ab8:	3001      	adds	r0, #1
  402aba:	d00d      	beq.n	402ad8 <_malloc_trim_r+0x70>
  402abc:	4b10      	ldr	r3, [pc, #64]	; (402b00 <_malloc_trim_r+0x98>)
  402abe:	68ba      	ldr	r2, [r7, #8]
  402ac0:	6819      	ldr	r1, [r3, #0]
  402ac2:	1b2d      	subs	r5, r5, r4
  402ac4:	f045 0501 	orr.w	r5, r5, #1
  402ac8:	4630      	mov	r0, r6
  402aca:	1b09      	subs	r1, r1, r4
  402acc:	6055      	str	r5, [r2, #4]
  402ace:	6019      	str	r1, [r3, #0]
  402ad0:	f000 ff04 	bl	4038dc <__malloc_unlock>
  402ad4:	2001      	movs	r0, #1
  402ad6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  402ad8:	2100      	movs	r1, #0
  402ada:	4630      	mov	r0, r6
  402adc:	f001 f8b6 	bl	403c4c <_sbrk_r>
  402ae0:	68ba      	ldr	r2, [r7, #8]
  402ae2:	1a83      	subs	r3, r0, r2
  402ae4:	2b0f      	cmp	r3, #15
  402ae6:	ddde      	ble.n	402aa6 <_malloc_trim_r+0x3e>
  402ae8:	4c06      	ldr	r4, [pc, #24]	; (402b04 <_malloc_trim_r+0x9c>)
  402aea:	4905      	ldr	r1, [pc, #20]	; (402b00 <_malloc_trim_r+0x98>)
  402aec:	6824      	ldr	r4, [r4, #0]
  402aee:	f043 0301 	orr.w	r3, r3, #1
  402af2:	1b00      	subs	r0, r0, r4
  402af4:	6053      	str	r3, [r2, #4]
  402af6:	6008      	str	r0, [r1, #0]
  402af8:	e7d5      	b.n	402aa6 <_malloc_trim_r+0x3e>
  402afa:	bf00      	nop
  402afc:	200006a4 	.word	0x200006a4
  402b00:	20000b50 	.word	0x20000b50
  402b04:	20000aac 	.word	0x20000aac

00402b08 <_free_r>:
  402b08:	2900      	cmp	r1, #0
  402b0a:	d044      	beq.n	402b96 <_free_r+0x8e>
  402b0c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  402b10:	460d      	mov	r5, r1
  402b12:	4680      	mov	r8, r0
  402b14:	f000 fee0 	bl	4038d8 <__malloc_lock>
  402b18:	f855 7c04 	ldr.w	r7, [r5, #-4]
  402b1c:	4969      	ldr	r1, [pc, #420]	; (402cc4 <_free_r+0x1bc>)
  402b1e:	f1a5 0408 	sub.w	r4, r5, #8
  402b22:	f027 0301 	bic.w	r3, r7, #1
  402b26:	18e2      	adds	r2, r4, r3
  402b28:	688e      	ldr	r6, [r1, #8]
  402b2a:	6850      	ldr	r0, [r2, #4]
  402b2c:	42b2      	cmp	r2, r6
  402b2e:	f020 0003 	bic.w	r0, r0, #3
  402b32:	d05e      	beq.n	402bf2 <_free_r+0xea>
  402b34:	07fe      	lsls	r6, r7, #31
  402b36:	6050      	str	r0, [r2, #4]
  402b38:	d40b      	bmi.n	402b52 <_free_r+0x4a>
  402b3a:	f855 7c08 	ldr.w	r7, [r5, #-8]
  402b3e:	f101 0e08 	add.w	lr, r1, #8
  402b42:	1be4      	subs	r4, r4, r7
  402b44:	68a5      	ldr	r5, [r4, #8]
  402b46:	443b      	add	r3, r7
  402b48:	4575      	cmp	r5, lr
  402b4a:	d06d      	beq.n	402c28 <_free_r+0x120>
  402b4c:	68e7      	ldr	r7, [r4, #12]
  402b4e:	60ef      	str	r7, [r5, #12]
  402b50:	60bd      	str	r5, [r7, #8]
  402b52:	1815      	adds	r5, r2, r0
  402b54:	686d      	ldr	r5, [r5, #4]
  402b56:	07ed      	lsls	r5, r5, #31
  402b58:	d53e      	bpl.n	402bd8 <_free_r+0xd0>
  402b5a:	f043 0201 	orr.w	r2, r3, #1
  402b5e:	6062      	str	r2, [r4, #4]
  402b60:	50e3      	str	r3, [r4, r3]
  402b62:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
  402b66:	d217      	bcs.n	402b98 <_free_r+0x90>
  402b68:	2201      	movs	r2, #1
  402b6a:	08db      	lsrs	r3, r3, #3
  402b6c:	1098      	asrs	r0, r3, #2
  402b6e:	684d      	ldr	r5, [r1, #4]
  402b70:	4413      	add	r3, r2
  402b72:	f851 7033 	ldr.w	r7, [r1, r3, lsl #3]
  402b76:	4082      	lsls	r2, r0
  402b78:	eb01 00c3 	add.w	r0, r1, r3, lsl #3
  402b7c:	432a      	orrs	r2, r5
  402b7e:	3808      	subs	r0, #8
  402b80:	60e0      	str	r0, [r4, #12]
  402b82:	60a7      	str	r7, [r4, #8]
  402b84:	604a      	str	r2, [r1, #4]
  402b86:	f841 4033 	str.w	r4, [r1, r3, lsl #3]
  402b8a:	60fc      	str	r4, [r7, #12]
  402b8c:	4640      	mov	r0, r8
  402b8e:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
  402b92:	f000 bea3 	b.w	4038dc <__malloc_unlock>
  402b96:	4770      	bx	lr
  402b98:	0a5a      	lsrs	r2, r3, #9
  402b9a:	2a04      	cmp	r2, #4
  402b9c:	d852      	bhi.n	402c44 <_free_r+0x13c>
  402b9e:	099a      	lsrs	r2, r3, #6
  402ba0:	f102 0739 	add.w	r7, r2, #57	; 0x39
  402ba4:	00ff      	lsls	r7, r7, #3
  402ba6:	f102 0538 	add.w	r5, r2, #56	; 0x38
  402baa:	19c8      	adds	r0, r1, r7
  402bac:	59ca      	ldr	r2, [r1, r7]
  402bae:	3808      	subs	r0, #8
  402bb0:	4290      	cmp	r0, r2
  402bb2:	d04f      	beq.n	402c54 <_free_r+0x14c>
  402bb4:	6851      	ldr	r1, [r2, #4]
  402bb6:	f021 0103 	bic.w	r1, r1, #3
  402bba:	428b      	cmp	r3, r1
  402bbc:	d232      	bcs.n	402c24 <_free_r+0x11c>
  402bbe:	6892      	ldr	r2, [r2, #8]
  402bc0:	4290      	cmp	r0, r2
  402bc2:	d1f7      	bne.n	402bb4 <_free_r+0xac>
  402bc4:	68c3      	ldr	r3, [r0, #12]
  402bc6:	60a0      	str	r0, [r4, #8]
  402bc8:	60e3      	str	r3, [r4, #12]
  402bca:	609c      	str	r4, [r3, #8]
  402bcc:	60c4      	str	r4, [r0, #12]
  402bce:	4640      	mov	r0, r8
  402bd0:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
  402bd4:	f000 be82 	b.w	4038dc <__malloc_unlock>
  402bd8:	6895      	ldr	r5, [r2, #8]
  402bda:	4f3b      	ldr	r7, [pc, #236]	; (402cc8 <_free_r+0x1c0>)
  402bdc:	4403      	add	r3, r0
  402bde:	42bd      	cmp	r5, r7
  402be0:	d040      	beq.n	402c64 <_free_r+0x15c>
  402be2:	68d0      	ldr	r0, [r2, #12]
  402be4:	f043 0201 	orr.w	r2, r3, #1
  402be8:	60e8      	str	r0, [r5, #12]
  402bea:	6085      	str	r5, [r0, #8]
  402bec:	6062      	str	r2, [r4, #4]
  402bee:	50e3      	str	r3, [r4, r3]
  402bf0:	e7b7      	b.n	402b62 <_free_r+0x5a>
  402bf2:	07ff      	lsls	r7, r7, #31
  402bf4:	4403      	add	r3, r0
  402bf6:	d407      	bmi.n	402c08 <_free_r+0x100>
  402bf8:	f855 5c08 	ldr.w	r5, [r5, #-8]
  402bfc:	1b64      	subs	r4, r4, r5
  402bfe:	68e2      	ldr	r2, [r4, #12]
  402c00:	68a0      	ldr	r0, [r4, #8]
  402c02:	442b      	add	r3, r5
  402c04:	60c2      	str	r2, [r0, #12]
  402c06:	6090      	str	r0, [r2, #8]
  402c08:	4a30      	ldr	r2, [pc, #192]	; (402ccc <_free_r+0x1c4>)
  402c0a:	f043 0001 	orr.w	r0, r3, #1
  402c0e:	6812      	ldr	r2, [r2, #0]
  402c10:	6060      	str	r0, [r4, #4]
  402c12:	4293      	cmp	r3, r2
  402c14:	608c      	str	r4, [r1, #8]
  402c16:	d3b9      	bcc.n	402b8c <_free_r+0x84>
  402c18:	4b2d      	ldr	r3, [pc, #180]	; (402cd0 <_free_r+0x1c8>)
  402c1a:	4640      	mov	r0, r8
  402c1c:	6819      	ldr	r1, [r3, #0]
  402c1e:	f7ff ff23 	bl	402a68 <_malloc_trim_r>
  402c22:	e7b3      	b.n	402b8c <_free_r+0x84>
  402c24:	4610      	mov	r0, r2
  402c26:	e7cd      	b.n	402bc4 <_free_r+0xbc>
  402c28:	1811      	adds	r1, r2, r0
  402c2a:	6849      	ldr	r1, [r1, #4]
  402c2c:	07c9      	lsls	r1, r1, #31
  402c2e:	d444      	bmi.n	402cba <_free_r+0x1b2>
  402c30:	6891      	ldr	r1, [r2, #8]
  402c32:	4403      	add	r3, r0
  402c34:	68d2      	ldr	r2, [r2, #12]
  402c36:	f043 0001 	orr.w	r0, r3, #1
  402c3a:	60ca      	str	r2, [r1, #12]
  402c3c:	6091      	str	r1, [r2, #8]
  402c3e:	6060      	str	r0, [r4, #4]
  402c40:	50e3      	str	r3, [r4, r3]
  402c42:	e7a3      	b.n	402b8c <_free_r+0x84>
  402c44:	2a14      	cmp	r2, #20
  402c46:	d816      	bhi.n	402c76 <_free_r+0x16e>
  402c48:	f102 075c 	add.w	r7, r2, #92	; 0x5c
  402c4c:	00ff      	lsls	r7, r7, #3
  402c4e:	f102 055b 	add.w	r5, r2, #91	; 0x5b
  402c52:	e7aa      	b.n	402baa <_free_r+0xa2>
  402c54:	2301      	movs	r3, #1
  402c56:	10aa      	asrs	r2, r5, #2
  402c58:	684d      	ldr	r5, [r1, #4]
  402c5a:	4093      	lsls	r3, r2
  402c5c:	432b      	orrs	r3, r5
  402c5e:	604b      	str	r3, [r1, #4]
  402c60:	4603      	mov	r3, r0
  402c62:	e7b0      	b.n	402bc6 <_free_r+0xbe>
  402c64:	f043 0201 	orr.w	r2, r3, #1
  402c68:	614c      	str	r4, [r1, #20]
  402c6a:	610c      	str	r4, [r1, #16]
  402c6c:	60e5      	str	r5, [r4, #12]
  402c6e:	60a5      	str	r5, [r4, #8]
  402c70:	6062      	str	r2, [r4, #4]
  402c72:	50e3      	str	r3, [r4, r3]
  402c74:	e78a      	b.n	402b8c <_free_r+0x84>
  402c76:	2a54      	cmp	r2, #84	; 0x54
  402c78:	d806      	bhi.n	402c88 <_free_r+0x180>
  402c7a:	0b1a      	lsrs	r2, r3, #12
  402c7c:	f102 076f 	add.w	r7, r2, #111	; 0x6f
  402c80:	00ff      	lsls	r7, r7, #3
  402c82:	f102 056e 	add.w	r5, r2, #110	; 0x6e
  402c86:	e790      	b.n	402baa <_free_r+0xa2>
  402c88:	f5b2 7faa 	cmp.w	r2, #340	; 0x154
  402c8c:	d806      	bhi.n	402c9c <_free_r+0x194>
  402c8e:	0bda      	lsrs	r2, r3, #15
  402c90:	f102 0778 	add.w	r7, r2, #120	; 0x78
  402c94:	00ff      	lsls	r7, r7, #3
  402c96:	f102 0577 	add.w	r5, r2, #119	; 0x77
  402c9a:	e786      	b.n	402baa <_free_r+0xa2>
  402c9c:	f240 5054 	movw	r0, #1364	; 0x554
  402ca0:	4282      	cmp	r2, r0
  402ca2:	d806      	bhi.n	402cb2 <_free_r+0x1aa>
  402ca4:	0c9a      	lsrs	r2, r3, #18
  402ca6:	f102 077d 	add.w	r7, r2, #125	; 0x7d
  402caa:	00ff      	lsls	r7, r7, #3
  402cac:	f102 057c 	add.w	r5, r2, #124	; 0x7c
  402cb0:	e77b      	b.n	402baa <_free_r+0xa2>
  402cb2:	f44f 777e 	mov.w	r7, #1016	; 0x3f8
  402cb6:	257e      	movs	r5, #126	; 0x7e
  402cb8:	e777      	b.n	402baa <_free_r+0xa2>
  402cba:	f043 0101 	orr.w	r1, r3, #1
  402cbe:	6061      	str	r1, [r4, #4]
  402cc0:	6013      	str	r3, [r2, #0]
  402cc2:	e763      	b.n	402b8c <_free_r+0x84>
  402cc4:	200006a4 	.word	0x200006a4
  402cc8:	200006ac 	.word	0x200006ac
  402ccc:	20000ab0 	.word	0x20000ab0
  402cd0:	20000b80 	.word	0x20000b80

00402cd4 <__sfvwrite_r>:
  402cd4:	6893      	ldr	r3, [r2, #8]
  402cd6:	2b00      	cmp	r3, #0
  402cd8:	d071      	beq.n	402dbe <__sfvwrite_r+0xea>
  402cda:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  402cde:	898b      	ldrh	r3, [r1, #12]
  402ce0:	b083      	sub	sp, #12
  402ce2:	460c      	mov	r4, r1
  402ce4:	0719      	lsls	r1, r3, #28
  402ce6:	9000      	str	r0, [sp, #0]
  402ce8:	4616      	mov	r6, r2
  402cea:	d525      	bpl.n	402d38 <__sfvwrite_r+0x64>
  402cec:	6922      	ldr	r2, [r4, #16]
  402cee:	b31a      	cbz	r2, 402d38 <__sfvwrite_r+0x64>
  402cf0:	f013 0002 	ands.w	r0, r3, #2
  402cf4:	6835      	ldr	r5, [r6, #0]
  402cf6:	d02b      	beq.n	402d50 <__sfvwrite_r+0x7c>
  402cf8:	f04f 0900 	mov.w	r9, #0
  402cfc:	46b0      	mov	r8, r6
  402cfe:	464f      	mov	r7, r9
  402d00:	f8df a2c0 	ldr.w	sl, [pc, #704]	; 402fc4 <__sfvwrite_r+0x2f0>
  402d04:	2f00      	cmp	r7, #0
  402d06:	d055      	beq.n	402db4 <__sfvwrite_r+0xe0>
  402d08:	4557      	cmp	r7, sl
  402d0a:	463b      	mov	r3, r7
  402d0c:	464a      	mov	r2, r9
  402d0e:	bf28      	it	cs
  402d10:	4653      	movcs	r3, sl
  402d12:	69e1      	ldr	r1, [r4, #28]
  402d14:	9800      	ldr	r0, [sp, #0]
  402d16:	6a66      	ldr	r6, [r4, #36]	; 0x24
  402d18:	47b0      	blx	r6
  402d1a:	2800      	cmp	r0, #0
  402d1c:	dd56      	ble.n	402dcc <__sfvwrite_r+0xf8>
  402d1e:	f8d8 3008 	ldr.w	r3, [r8, #8]
  402d22:	4481      	add	r9, r0
  402d24:	1a1b      	subs	r3, r3, r0
  402d26:	1a3f      	subs	r7, r7, r0
  402d28:	f8c8 3008 	str.w	r3, [r8, #8]
  402d2c:	2b00      	cmp	r3, #0
  402d2e:	d1e9      	bne.n	402d04 <__sfvwrite_r+0x30>
  402d30:	2000      	movs	r0, #0
  402d32:	b003      	add	sp, #12
  402d34:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  402d38:	4621      	mov	r1, r4
  402d3a:	9800      	ldr	r0, [sp, #0]
  402d3c:	f7ff fc6e 	bl	40261c <__swsetup_r>
  402d40:	2800      	cmp	r0, #0
  402d42:	f040 8135 	bne.w	402fb0 <__sfvwrite_r+0x2dc>
  402d46:	89a3      	ldrh	r3, [r4, #12]
  402d48:	6835      	ldr	r5, [r6, #0]
  402d4a:	f013 0002 	ands.w	r0, r3, #2
  402d4e:	d1d3      	bne.n	402cf8 <__sfvwrite_r+0x24>
  402d50:	f013 0901 	ands.w	r9, r3, #1
  402d54:	d144      	bne.n	402de0 <__sfvwrite_r+0x10c>
  402d56:	464f      	mov	r7, r9
  402d58:	9601      	str	r6, [sp, #4]
  402d5a:	b337      	cbz	r7, 402daa <__sfvwrite_r+0xd6>
  402d5c:	059a      	lsls	r2, r3, #22
  402d5e:	f8d4 8008 	ldr.w	r8, [r4, #8]
  402d62:	f140 8085 	bpl.w	402e70 <__sfvwrite_r+0x19c>
  402d66:	4547      	cmp	r7, r8
  402d68:	46c3      	mov	fp, r8
  402d6a:	f0c0 80ad 	bcc.w	402ec8 <__sfvwrite_r+0x1f4>
  402d6e:	f413 6f90 	tst.w	r3, #1152	; 0x480
  402d72:	f040 80ae 	bne.w	402ed2 <__sfvwrite_r+0x1fe>
  402d76:	46ba      	mov	sl, r7
  402d78:	6820      	ldr	r0, [r4, #0]
  402d7a:	465a      	mov	r2, fp
  402d7c:	4649      	mov	r1, r9
  402d7e:	f000 fd47 	bl	403810 <memmove>
  402d82:	68a2      	ldr	r2, [r4, #8]
  402d84:	6823      	ldr	r3, [r4, #0]
  402d86:	eba2 0208 	sub.w	r2, r2, r8
  402d8a:	445b      	add	r3, fp
  402d8c:	60a2      	str	r2, [r4, #8]
  402d8e:	6023      	str	r3, [r4, #0]
  402d90:	9a01      	ldr	r2, [sp, #4]
  402d92:	44d1      	add	r9, sl
  402d94:	6893      	ldr	r3, [r2, #8]
  402d96:	eba7 070a 	sub.w	r7, r7, sl
  402d9a:	eba3 030a 	sub.w	r3, r3, sl
  402d9e:	6093      	str	r3, [r2, #8]
  402da0:	2b00      	cmp	r3, #0
  402da2:	d0c5      	beq.n	402d30 <__sfvwrite_r+0x5c>
  402da4:	89a3      	ldrh	r3, [r4, #12]
  402da6:	2f00      	cmp	r7, #0
  402da8:	d1d8      	bne.n	402d5c <__sfvwrite_r+0x88>
  402daa:	f8d5 9000 	ldr.w	r9, [r5]
  402dae:	686f      	ldr	r7, [r5, #4]
  402db0:	3508      	adds	r5, #8
  402db2:	e7d2      	b.n	402d5a <__sfvwrite_r+0x86>
  402db4:	f8d5 9000 	ldr.w	r9, [r5]
  402db8:	686f      	ldr	r7, [r5, #4]
  402dba:	3508      	adds	r5, #8
  402dbc:	e7a2      	b.n	402d04 <__sfvwrite_r+0x30>
  402dbe:	2000      	movs	r0, #0
  402dc0:	4770      	bx	lr
  402dc2:	4621      	mov	r1, r4
  402dc4:	9800      	ldr	r0, [sp, #0]
  402dc6:	f7ff fd39 	bl	40283c <_fflush_r>
  402dca:	b378      	cbz	r0, 402e2c <__sfvwrite_r+0x158>
  402dcc:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  402dd0:	f04f 30ff 	mov.w	r0, #4294967295
  402dd4:	f043 0340 	orr.w	r3, r3, #64	; 0x40
  402dd8:	81a3      	strh	r3, [r4, #12]
  402dda:	b003      	add	sp, #12
  402ddc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  402de0:	4681      	mov	r9, r0
  402de2:	4633      	mov	r3, r6
  402de4:	464e      	mov	r6, r9
  402de6:	46a8      	mov	r8, r5
  402de8:	469a      	mov	sl, r3
  402dea:	464d      	mov	r5, r9
  402dec:	b356      	cbz	r6, 402e44 <__sfvwrite_r+0x170>
  402dee:	2800      	cmp	r0, #0
  402df0:	d032      	beq.n	402e58 <__sfvwrite_r+0x184>
  402df2:	45b1      	cmp	r9, r6
  402df4:	46cb      	mov	fp, r9
  402df6:	bf28      	it	cs
  402df8:	46b3      	movcs	fp, r6
  402dfa:	6820      	ldr	r0, [r4, #0]
  402dfc:	6923      	ldr	r3, [r4, #16]
  402dfe:	465f      	mov	r7, fp
  402e00:	4298      	cmp	r0, r3
  402e02:	6962      	ldr	r2, [r4, #20]
  402e04:	d904      	bls.n	402e10 <__sfvwrite_r+0x13c>
  402e06:	68a3      	ldr	r3, [r4, #8]
  402e08:	4413      	add	r3, r2
  402e0a:	459b      	cmp	fp, r3
  402e0c:	f300 80a8 	bgt.w	402f60 <__sfvwrite_r+0x28c>
  402e10:	4593      	cmp	fp, r2
  402e12:	db4d      	blt.n	402eb0 <__sfvwrite_r+0x1dc>
  402e14:	4613      	mov	r3, r2
  402e16:	6a67      	ldr	r7, [r4, #36]	; 0x24
  402e18:	462a      	mov	r2, r5
  402e1a:	69e1      	ldr	r1, [r4, #28]
  402e1c:	9800      	ldr	r0, [sp, #0]
  402e1e:	47b8      	blx	r7
  402e20:	1e07      	subs	r7, r0, #0
  402e22:	ddd3      	ble.n	402dcc <__sfvwrite_r+0xf8>
  402e24:	ebb9 0907 	subs.w	r9, r9, r7
  402e28:	d0cb      	beq.n	402dc2 <__sfvwrite_r+0xee>
  402e2a:	2001      	movs	r0, #1
  402e2c:	f8da 3008 	ldr.w	r3, [sl, #8]
  402e30:	443d      	add	r5, r7
  402e32:	1bdb      	subs	r3, r3, r7
  402e34:	1bf6      	subs	r6, r6, r7
  402e36:	f8ca 3008 	str.w	r3, [sl, #8]
  402e3a:	2b00      	cmp	r3, #0
  402e3c:	f43f af78 	beq.w	402d30 <__sfvwrite_r+0x5c>
  402e40:	2e00      	cmp	r6, #0
  402e42:	d1d4      	bne.n	402dee <__sfvwrite_r+0x11a>
  402e44:	f108 0308 	add.w	r3, r8, #8
  402e48:	f853 6c04 	ldr.w	r6, [r3, #-4]
  402e4c:	4698      	mov	r8, r3
  402e4e:	f853 5c08 	ldr.w	r5, [r3, #-8]
  402e52:	3308      	adds	r3, #8
  402e54:	2e00      	cmp	r6, #0
  402e56:	d0f7      	beq.n	402e48 <__sfvwrite_r+0x174>
  402e58:	4632      	mov	r2, r6
  402e5a:	210a      	movs	r1, #10
  402e5c:	4628      	mov	r0, r5
  402e5e:	f000 fc1b 	bl	403698 <memchr>
  402e62:	2800      	cmp	r0, #0
  402e64:	f000 80a1 	beq.w	402faa <__sfvwrite_r+0x2d6>
  402e68:	3001      	adds	r0, #1
  402e6a:	eba0 0905 	sub.w	r9, r0, r5
  402e6e:	e7c0      	b.n	402df2 <__sfvwrite_r+0x11e>
  402e70:	6820      	ldr	r0, [r4, #0]
  402e72:	6923      	ldr	r3, [r4, #16]
  402e74:	4298      	cmp	r0, r3
  402e76:	d802      	bhi.n	402e7e <__sfvwrite_r+0x1aa>
  402e78:	6963      	ldr	r3, [r4, #20]
  402e7a:	429f      	cmp	r7, r3
  402e7c:	d25d      	bcs.n	402f3a <__sfvwrite_r+0x266>
  402e7e:	45b8      	cmp	r8, r7
  402e80:	bf28      	it	cs
  402e82:	46b8      	movcs	r8, r7
  402e84:	4649      	mov	r1, r9
  402e86:	4642      	mov	r2, r8
  402e88:	f000 fcc2 	bl	403810 <memmove>
  402e8c:	68a3      	ldr	r3, [r4, #8]
  402e8e:	6822      	ldr	r2, [r4, #0]
  402e90:	eba3 0308 	sub.w	r3, r3, r8
  402e94:	4442      	add	r2, r8
  402e96:	60a3      	str	r3, [r4, #8]
  402e98:	6022      	str	r2, [r4, #0]
  402e9a:	b10b      	cbz	r3, 402ea0 <__sfvwrite_r+0x1cc>
  402e9c:	46c2      	mov	sl, r8
  402e9e:	e777      	b.n	402d90 <__sfvwrite_r+0xbc>
  402ea0:	4621      	mov	r1, r4
  402ea2:	9800      	ldr	r0, [sp, #0]
  402ea4:	f7ff fcca 	bl	40283c <_fflush_r>
  402ea8:	2800      	cmp	r0, #0
  402eaa:	d18f      	bne.n	402dcc <__sfvwrite_r+0xf8>
  402eac:	46c2      	mov	sl, r8
  402eae:	e76f      	b.n	402d90 <__sfvwrite_r+0xbc>
  402eb0:	465a      	mov	r2, fp
  402eb2:	4629      	mov	r1, r5
  402eb4:	f000 fcac 	bl	403810 <memmove>
  402eb8:	68a2      	ldr	r2, [r4, #8]
  402eba:	6823      	ldr	r3, [r4, #0]
  402ebc:	eba2 020b 	sub.w	r2, r2, fp
  402ec0:	445b      	add	r3, fp
  402ec2:	60a2      	str	r2, [r4, #8]
  402ec4:	6023      	str	r3, [r4, #0]
  402ec6:	e7ad      	b.n	402e24 <__sfvwrite_r+0x150>
  402ec8:	46b8      	mov	r8, r7
  402eca:	46ba      	mov	sl, r7
  402ecc:	46bb      	mov	fp, r7
  402ece:	6820      	ldr	r0, [r4, #0]
  402ed0:	e753      	b.n	402d7a <__sfvwrite_r+0xa6>
  402ed2:	6962      	ldr	r2, [r4, #20]
  402ed4:	6820      	ldr	r0, [r4, #0]
  402ed6:	6921      	ldr	r1, [r4, #16]
  402ed8:	eb02 0842 	add.w	r8, r2, r2, lsl #1
  402edc:	eba0 0a01 	sub.w	sl, r0, r1
  402ee0:	eb08 78d8 	add.w	r8, r8, r8, lsr #31
  402ee4:	f10a 0001 	add.w	r0, sl, #1
  402ee8:	ea4f 0868 	mov.w	r8, r8, asr #1
  402eec:	4438      	add	r0, r7
  402eee:	4540      	cmp	r0, r8
  402ef0:	4642      	mov	r2, r8
  402ef2:	bf84      	itt	hi
  402ef4:	4680      	movhi	r8, r0
  402ef6:	4642      	movhi	r2, r8
  402ef8:	055b      	lsls	r3, r3, #21
  402efa:	d544      	bpl.n	402f86 <__sfvwrite_r+0x2b2>
  402efc:	4611      	mov	r1, r2
  402efe:	9800      	ldr	r0, [sp, #0]
  402f00:	f000 f912 	bl	403128 <_malloc_r>
  402f04:	4683      	mov	fp, r0
  402f06:	2800      	cmp	r0, #0
  402f08:	d055      	beq.n	402fb6 <__sfvwrite_r+0x2e2>
  402f0a:	4652      	mov	r2, sl
  402f0c:	6921      	ldr	r1, [r4, #16]
  402f0e:	f000 fc09 	bl	403724 <memcpy>
  402f12:	89a3      	ldrh	r3, [r4, #12]
  402f14:	f423 6390 	bic.w	r3, r3, #1152	; 0x480
  402f18:	f043 0380 	orr.w	r3, r3, #128	; 0x80
  402f1c:	81a3      	strh	r3, [r4, #12]
  402f1e:	eb0b 000a 	add.w	r0, fp, sl
  402f22:	eba8 030a 	sub.w	r3, r8, sl
  402f26:	f8c4 b010 	str.w	fp, [r4, #16]
  402f2a:	f8c4 8014 	str.w	r8, [r4, #20]
  402f2e:	6020      	str	r0, [r4, #0]
  402f30:	60a3      	str	r3, [r4, #8]
  402f32:	46b8      	mov	r8, r7
  402f34:	46ba      	mov	sl, r7
  402f36:	46bb      	mov	fp, r7
  402f38:	e71f      	b.n	402d7a <__sfvwrite_r+0xa6>
  402f3a:	f06f 4200 	mvn.w	r2, #2147483648	; 0x80000000
  402f3e:	42ba      	cmp	r2, r7
  402f40:	bf28      	it	cs
  402f42:	463a      	movcs	r2, r7
  402f44:	fb92 f2f3 	sdiv	r2, r2, r3
  402f48:	69e1      	ldr	r1, [r4, #28]
  402f4a:	fb03 f302 	mul.w	r3, r3, r2
  402f4e:	9800      	ldr	r0, [sp, #0]
  402f50:	464a      	mov	r2, r9
  402f52:	6a66      	ldr	r6, [r4, #36]	; 0x24
  402f54:	47b0      	blx	r6
  402f56:	f1b0 0a00 	subs.w	sl, r0, #0
  402f5a:	f73f af19 	bgt.w	402d90 <__sfvwrite_r+0xbc>
  402f5e:	e735      	b.n	402dcc <__sfvwrite_r+0xf8>
  402f60:	461a      	mov	r2, r3
  402f62:	4629      	mov	r1, r5
  402f64:	9301      	str	r3, [sp, #4]
  402f66:	f000 fc53 	bl	403810 <memmove>
  402f6a:	6822      	ldr	r2, [r4, #0]
  402f6c:	9b01      	ldr	r3, [sp, #4]
  402f6e:	4621      	mov	r1, r4
  402f70:	441a      	add	r2, r3
  402f72:	6022      	str	r2, [r4, #0]
  402f74:	9800      	ldr	r0, [sp, #0]
  402f76:	f7ff fc61 	bl	40283c <_fflush_r>
  402f7a:	9b01      	ldr	r3, [sp, #4]
  402f7c:	2800      	cmp	r0, #0
  402f7e:	f47f af25 	bne.w	402dcc <__sfvwrite_r+0xf8>
  402f82:	461f      	mov	r7, r3
  402f84:	e74e      	b.n	402e24 <__sfvwrite_r+0x150>
  402f86:	9800      	ldr	r0, [sp, #0]
  402f88:	f000 fcaa 	bl	4038e0 <_realloc_r>
  402f8c:	4683      	mov	fp, r0
  402f8e:	2800      	cmp	r0, #0
  402f90:	d1c5      	bne.n	402f1e <__sfvwrite_r+0x24a>
  402f92:	9d00      	ldr	r5, [sp, #0]
  402f94:	6921      	ldr	r1, [r4, #16]
  402f96:	4628      	mov	r0, r5
  402f98:	f7ff fdb6 	bl	402b08 <_free_r>
  402f9c:	220c      	movs	r2, #12
  402f9e:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  402fa2:	602a      	str	r2, [r5, #0]
  402fa4:	f023 0380 	bic.w	r3, r3, #128	; 0x80
  402fa8:	e712      	b.n	402dd0 <__sfvwrite_r+0xfc>
  402faa:	f106 0901 	add.w	r9, r6, #1
  402fae:	e720      	b.n	402df2 <__sfvwrite_r+0x11e>
  402fb0:	f04f 30ff 	mov.w	r0, #4294967295
  402fb4:	e6bd      	b.n	402d32 <__sfvwrite_r+0x5e>
  402fb6:	220c      	movs	r2, #12
  402fb8:	9900      	ldr	r1, [sp, #0]
  402fba:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  402fbe:	600a      	str	r2, [r1, #0]
  402fc0:	e706      	b.n	402dd0 <__sfvwrite_r+0xfc>
  402fc2:	bf00      	nop
  402fc4:	7ffffc00 	.word	0x7ffffc00

00402fc8 <_fwalk_reent>:
  402fc8:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
  402fcc:	f510 7638 	adds.w	r6, r0, #736	; 0x2e0
  402fd0:	d01e      	beq.n	403010 <_fwalk_reent+0x48>
  402fd2:	4688      	mov	r8, r1
  402fd4:	4607      	mov	r7, r0
  402fd6:	f04f 0900 	mov.w	r9, #0
  402fda:	6875      	ldr	r5, [r6, #4]
  402fdc:	68b4      	ldr	r4, [r6, #8]
  402fde:	3d01      	subs	r5, #1
  402fe0:	d410      	bmi.n	403004 <_fwalk_reent+0x3c>
  402fe2:	89a3      	ldrh	r3, [r4, #12]
  402fe4:	3d01      	subs	r5, #1
  402fe6:	2b01      	cmp	r3, #1
  402fe8:	d908      	bls.n	402ffc <_fwalk_reent+0x34>
  402fea:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
  402fee:	3301      	adds	r3, #1
  402ff0:	d004      	beq.n	402ffc <_fwalk_reent+0x34>
  402ff2:	4621      	mov	r1, r4
  402ff4:	4638      	mov	r0, r7
  402ff6:	47c0      	blx	r8
  402ff8:	ea49 0900 	orr.w	r9, r9, r0
  402ffc:	1c6b      	adds	r3, r5, #1
  402ffe:	f104 0468 	add.w	r4, r4, #104	; 0x68
  403002:	d1ee      	bne.n	402fe2 <_fwalk_reent+0x1a>
  403004:	6836      	ldr	r6, [r6, #0]
  403006:	2e00      	cmp	r6, #0
  403008:	d1e7      	bne.n	402fda <_fwalk_reent+0x12>
  40300a:	4648      	mov	r0, r9
  40300c:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  403010:	46b1      	mov	r9, r6
  403012:	4648      	mov	r0, r9
  403014:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}

00403018 <__locale_mb_cur_max>:
  403018:	4b04      	ldr	r3, [pc, #16]	; (40302c <__locale_mb_cur_max+0x14>)
  40301a:	4a05      	ldr	r2, [pc, #20]	; (403030 <__locale_mb_cur_max+0x18>)
  40301c:	681b      	ldr	r3, [r3, #0]
  40301e:	6b5b      	ldr	r3, [r3, #52]	; 0x34
  403020:	2b00      	cmp	r3, #0
  403022:	bf08      	it	eq
  403024:	4613      	moveq	r3, r2
  403026:	f893 0128 	ldrb.w	r0, [r3, #296]	; 0x128
  40302a:	4770      	bx	lr
  40302c:	20000108 	.word	0x20000108
  403030:	20000538 	.word	0x20000538

00403034 <__swhatbuf_r>:
  403034:	b570      	push	{r4, r5, r6, lr}
  403036:	460c      	mov	r4, r1
  403038:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
  40303c:	b090      	sub	sp, #64	; 0x40
  40303e:	2900      	cmp	r1, #0
  403040:	4615      	mov	r5, r2
  403042:	461e      	mov	r6, r3
  403044:	db14      	blt.n	403070 <__swhatbuf_r+0x3c>
  403046:	aa01      	add	r2, sp, #4
  403048:	f000 ffa2 	bl	403f90 <_fstat_r>
  40304c:	2800      	cmp	r0, #0
  40304e:	db0f      	blt.n	403070 <__swhatbuf_r+0x3c>
  403050:	9a02      	ldr	r2, [sp, #8]
  403052:	f44f 6380 	mov.w	r3, #1024	; 0x400
  403056:	f402 4270 	and.w	r2, r2, #61440	; 0xf000
  40305a:	f5a2 5200 	sub.w	r2, r2, #8192	; 0x2000
  40305e:	fab2 f282 	clz	r2, r2
  403062:	f44f 6000 	mov.w	r0, #2048	; 0x800
  403066:	0952      	lsrs	r2, r2, #5
  403068:	6032      	str	r2, [r6, #0]
  40306a:	602b      	str	r3, [r5, #0]
  40306c:	b010      	add	sp, #64	; 0x40
  40306e:	bd70      	pop	{r4, r5, r6, pc}
  403070:	2300      	movs	r3, #0
  403072:	89a2      	ldrh	r2, [r4, #12]
  403074:	6033      	str	r3, [r6, #0]
  403076:	f012 0080 	ands.w	r0, r2, #128	; 0x80
  40307a:	d004      	beq.n	403086 <__swhatbuf_r+0x52>
  40307c:	2240      	movs	r2, #64	; 0x40
  40307e:	4618      	mov	r0, r3
  403080:	602a      	str	r2, [r5, #0]
  403082:	b010      	add	sp, #64	; 0x40
  403084:	bd70      	pop	{r4, r5, r6, pc}
  403086:	f44f 6380 	mov.w	r3, #1024	; 0x400
  40308a:	602b      	str	r3, [r5, #0]
  40308c:	b010      	add	sp, #64	; 0x40
  40308e:	bd70      	pop	{r4, r5, r6, pc}

00403090 <__smakebuf_r>:
  403090:	898a      	ldrh	r2, [r1, #12]
  403092:	460b      	mov	r3, r1
  403094:	0792      	lsls	r2, r2, #30
  403096:	d506      	bpl.n	4030a6 <__smakebuf_r+0x16>
  403098:	2101      	movs	r1, #1
  40309a:	f103 0243 	add.w	r2, r3, #67	; 0x43
  40309e:	6159      	str	r1, [r3, #20]
  4030a0:	601a      	str	r2, [r3, #0]
  4030a2:	611a      	str	r2, [r3, #16]
  4030a4:	4770      	bx	lr
  4030a6:	b5f0      	push	{r4, r5, r6, r7, lr}
  4030a8:	b083      	sub	sp, #12
  4030aa:	ab01      	add	r3, sp, #4
  4030ac:	466a      	mov	r2, sp
  4030ae:	460c      	mov	r4, r1
  4030b0:	4605      	mov	r5, r0
  4030b2:	f7ff ffbf 	bl	403034 <__swhatbuf_r>
  4030b6:	9900      	ldr	r1, [sp, #0]
  4030b8:	4606      	mov	r6, r0
  4030ba:	4628      	mov	r0, r5
  4030bc:	f000 f834 	bl	403128 <_malloc_r>
  4030c0:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  4030c4:	b1d0      	cbz	r0, 4030fc <__smakebuf_r+0x6c>
  4030c6:	e89d 0006 	ldmia.w	sp, {r1, r2}
  4030ca:	4f12      	ldr	r7, [pc, #72]	; (403114 <__smakebuf_r+0x84>)
  4030cc:	f043 0380 	orr.w	r3, r3, #128	; 0x80
  4030d0:	63ef      	str	r7, [r5, #60]	; 0x3c
  4030d2:	81a3      	strh	r3, [r4, #12]
  4030d4:	6020      	str	r0, [r4, #0]
  4030d6:	6120      	str	r0, [r4, #16]
  4030d8:	6161      	str	r1, [r4, #20]
  4030da:	b91a      	cbnz	r2, 4030e4 <__smakebuf_r+0x54>
  4030dc:	4333      	orrs	r3, r6
  4030de:	81a3      	strh	r3, [r4, #12]
  4030e0:	b003      	add	sp, #12
  4030e2:	bdf0      	pop	{r4, r5, r6, r7, pc}
  4030e4:	4628      	mov	r0, r5
  4030e6:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
  4030ea:	f000 ff65 	bl	403fb8 <_isatty_r>
  4030ee:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  4030f2:	2800      	cmp	r0, #0
  4030f4:	d0f2      	beq.n	4030dc <__smakebuf_r+0x4c>
  4030f6:	f043 0301 	orr.w	r3, r3, #1
  4030fa:	e7ef      	b.n	4030dc <__smakebuf_r+0x4c>
  4030fc:	059a      	lsls	r2, r3, #22
  4030fe:	d4ef      	bmi.n	4030e0 <__smakebuf_r+0x50>
  403100:	2101      	movs	r1, #1
  403102:	f104 0243 	add.w	r2, r4, #67	; 0x43
  403106:	f043 0302 	orr.w	r3, r3, #2
  40310a:	81a3      	strh	r3, [r4, #12]
  40310c:	6161      	str	r1, [r4, #20]
  40310e:	6022      	str	r2, [r4, #0]
  403110:	6122      	str	r2, [r4, #16]
  403112:	e7e5      	b.n	4030e0 <__smakebuf_r+0x50>
  403114:	00402869 	.word	0x00402869

00403118 <malloc>:
  403118:	4b02      	ldr	r3, [pc, #8]	; (403124 <malloc+0xc>)
  40311a:	4601      	mov	r1, r0
  40311c:	6818      	ldr	r0, [r3, #0]
  40311e:	f000 b803 	b.w	403128 <_malloc_r>
  403122:	bf00      	nop
  403124:	20000108 	.word	0x20000108

00403128 <_malloc_r>:
  403128:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  40312c:	f101 060b 	add.w	r6, r1, #11
  403130:	2e16      	cmp	r6, #22
  403132:	b083      	sub	sp, #12
  403134:	4605      	mov	r5, r0
  403136:	f240 809e 	bls.w	403276 <_malloc_r+0x14e>
  40313a:	f036 0607 	bics.w	r6, r6, #7
  40313e:	f100 80bd 	bmi.w	4032bc <_malloc_r+0x194>
  403142:	42b1      	cmp	r1, r6
  403144:	f200 80ba 	bhi.w	4032bc <_malloc_r+0x194>
  403148:	f000 fbc6 	bl	4038d8 <__malloc_lock>
  40314c:	f5b6 7ffc 	cmp.w	r6, #504	; 0x1f8
  403150:	f0c0 8285 	bcc.w	40365e <_malloc_r+0x536>
  403154:	0a73      	lsrs	r3, r6, #9
  403156:	f000 80b8 	beq.w	4032ca <_malloc_r+0x1a2>
  40315a:	2b04      	cmp	r3, #4
  40315c:	f200 816c 	bhi.w	403438 <_malloc_r+0x310>
  403160:	09b3      	lsrs	r3, r6, #6
  403162:	f103 0039 	add.w	r0, r3, #57	; 0x39
  403166:	f103 0e38 	add.w	lr, r3, #56	; 0x38
  40316a:	00c1      	lsls	r1, r0, #3
  40316c:	4fb8      	ldr	r7, [pc, #736]	; (403450 <_malloc_r+0x328>)
  40316e:	4439      	add	r1, r7
  403170:	684c      	ldr	r4, [r1, #4]
  403172:	3908      	subs	r1, #8
  403174:	42a1      	cmp	r1, r4
  403176:	d106      	bne.n	403186 <_malloc_r+0x5e>
  403178:	e00c      	b.n	403194 <_malloc_r+0x6c>
  40317a:	2a00      	cmp	r2, #0
  40317c:	f280 80ab 	bge.w	4032d6 <_malloc_r+0x1ae>
  403180:	68e4      	ldr	r4, [r4, #12]
  403182:	42a1      	cmp	r1, r4
  403184:	d006      	beq.n	403194 <_malloc_r+0x6c>
  403186:	6863      	ldr	r3, [r4, #4]
  403188:	f023 0303 	bic.w	r3, r3, #3
  40318c:	1b9a      	subs	r2, r3, r6
  40318e:	2a0f      	cmp	r2, #15
  403190:	ddf3      	ble.n	40317a <_malloc_r+0x52>
  403192:	4670      	mov	r0, lr
  403194:	693c      	ldr	r4, [r7, #16]
  403196:	f8df e2cc 	ldr.w	lr, [pc, #716]	; 403464 <_malloc_r+0x33c>
  40319a:	4574      	cmp	r4, lr
  40319c:	f000 819e 	beq.w	4034dc <_malloc_r+0x3b4>
  4031a0:	6863      	ldr	r3, [r4, #4]
  4031a2:	f023 0303 	bic.w	r3, r3, #3
  4031a6:	1b9a      	subs	r2, r3, r6
  4031a8:	2a0f      	cmp	r2, #15
  4031aa:	f300 8183 	bgt.w	4034b4 <_malloc_r+0x38c>
  4031ae:	2a00      	cmp	r2, #0
  4031b0:	f8c7 e014 	str.w	lr, [r7, #20]
  4031b4:	f8c7 e010 	str.w	lr, [r7, #16]
  4031b8:	f280 8091 	bge.w	4032de <_malloc_r+0x1b6>
  4031bc:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
  4031c0:	f080 8154 	bcs.w	40346c <_malloc_r+0x344>
  4031c4:	2201      	movs	r2, #1
  4031c6:	08db      	lsrs	r3, r3, #3
  4031c8:	6879      	ldr	r1, [r7, #4]
  4031ca:	ea4f 0ca3 	mov.w	ip, r3, asr #2
  4031ce:	4413      	add	r3, r2
  4031d0:	f857 8033 	ldr.w	r8, [r7, r3, lsl #3]
  4031d4:	fa02 f20c 	lsl.w	r2, r2, ip
  4031d8:	eb07 0cc3 	add.w	ip, r7, r3, lsl #3
  4031dc:	430a      	orrs	r2, r1
  4031de:	f1ac 0108 	sub.w	r1, ip, #8
  4031e2:	60e1      	str	r1, [r4, #12]
  4031e4:	f8c4 8008 	str.w	r8, [r4, #8]
  4031e8:	607a      	str	r2, [r7, #4]
  4031ea:	f847 4033 	str.w	r4, [r7, r3, lsl #3]
  4031ee:	f8c8 400c 	str.w	r4, [r8, #12]
  4031f2:	2401      	movs	r4, #1
  4031f4:	1083      	asrs	r3, r0, #2
  4031f6:	409c      	lsls	r4, r3
  4031f8:	4294      	cmp	r4, r2
  4031fa:	d87d      	bhi.n	4032f8 <_malloc_r+0x1d0>
  4031fc:	4214      	tst	r4, r2
  4031fe:	d106      	bne.n	40320e <_malloc_r+0xe6>
  403200:	f020 0003 	bic.w	r0, r0, #3
  403204:	0064      	lsls	r4, r4, #1
  403206:	4214      	tst	r4, r2
  403208:	f100 0004 	add.w	r0, r0, #4
  40320c:	d0fa      	beq.n	403204 <_malloc_r+0xdc>
  40320e:	eb07 09c0 	add.w	r9, r7, r0, lsl #3
  403212:	46cc      	mov	ip, r9
  403214:	4680      	mov	r8, r0
  403216:	f8dc 300c 	ldr.w	r3, [ip, #12]
  40321a:	459c      	cmp	ip, r3
  40321c:	d107      	bne.n	40322e <_malloc_r+0x106>
  40321e:	e15f      	b.n	4034e0 <_malloc_r+0x3b8>
  403220:	2a00      	cmp	r2, #0
  403222:	f280 816d 	bge.w	403500 <_malloc_r+0x3d8>
  403226:	68db      	ldr	r3, [r3, #12]
  403228:	459c      	cmp	ip, r3
  40322a:	f000 8159 	beq.w	4034e0 <_malloc_r+0x3b8>
  40322e:	6859      	ldr	r1, [r3, #4]
  403230:	f021 0103 	bic.w	r1, r1, #3
  403234:	1b8a      	subs	r2, r1, r6
  403236:	2a0f      	cmp	r2, #15
  403238:	ddf2      	ble.n	403220 <_malloc_r+0xf8>
  40323a:	68dc      	ldr	r4, [r3, #12]
  40323c:	f8d3 c008 	ldr.w	ip, [r3, #8]
  403240:	f046 0801 	orr.w	r8, r6, #1
  403244:	4628      	mov	r0, r5
  403246:	441e      	add	r6, r3
  403248:	f042 0501 	orr.w	r5, r2, #1
  40324c:	f8c3 8004 	str.w	r8, [r3, #4]
  403250:	f8cc 400c 	str.w	r4, [ip, #12]
  403254:	f8c4 c008 	str.w	ip, [r4, #8]
  403258:	617e      	str	r6, [r7, #20]
  40325a:	613e      	str	r6, [r7, #16]
  40325c:	f8c6 e00c 	str.w	lr, [r6, #12]
  403260:	f8c6 e008 	str.w	lr, [r6, #8]
  403264:	6075      	str	r5, [r6, #4]
  403266:	505a      	str	r2, [r3, r1]
  403268:	9300      	str	r3, [sp, #0]
  40326a:	f000 fb37 	bl	4038dc <__malloc_unlock>
  40326e:	9b00      	ldr	r3, [sp, #0]
  403270:	f103 0408 	add.w	r4, r3, #8
  403274:	e01e      	b.n	4032b4 <_malloc_r+0x18c>
  403276:	2910      	cmp	r1, #16
  403278:	d820      	bhi.n	4032bc <_malloc_r+0x194>
  40327a:	f000 fb2d 	bl	4038d8 <__malloc_lock>
  40327e:	2610      	movs	r6, #16
  403280:	2318      	movs	r3, #24
  403282:	2002      	movs	r0, #2
  403284:	4f72      	ldr	r7, [pc, #456]	; (403450 <_malloc_r+0x328>)
  403286:	443b      	add	r3, r7
  403288:	685c      	ldr	r4, [r3, #4]
  40328a:	f1a3 0208 	sub.w	r2, r3, #8
  40328e:	4294      	cmp	r4, r2
  403290:	f000 812f 	beq.w	4034f2 <_malloc_r+0x3ca>
  403294:	6863      	ldr	r3, [r4, #4]
  403296:	68e1      	ldr	r1, [r4, #12]
  403298:	f023 0303 	bic.w	r3, r3, #3
  40329c:	4423      	add	r3, r4
  40329e:	685a      	ldr	r2, [r3, #4]
  4032a0:	68a6      	ldr	r6, [r4, #8]
  4032a2:	f042 0201 	orr.w	r2, r2, #1
  4032a6:	60f1      	str	r1, [r6, #12]
  4032a8:	4628      	mov	r0, r5
  4032aa:	608e      	str	r6, [r1, #8]
  4032ac:	605a      	str	r2, [r3, #4]
  4032ae:	f000 fb15 	bl	4038dc <__malloc_unlock>
  4032b2:	3408      	adds	r4, #8
  4032b4:	4620      	mov	r0, r4
  4032b6:	b003      	add	sp, #12
  4032b8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  4032bc:	2400      	movs	r4, #0
  4032be:	230c      	movs	r3, #12
  4032c0:	4620      	mov	r0, r4
  4032c2:	602b      	str	r3, [r5, #0]
  4032c4:	b003      	add	sp, #12
  4032c6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  4032ca:	2040      	movs	r0, #64	; 0x40
  4032cc:	f44f 7100 	mov.w	r1, #512	; 0x200
  4032d0:	f04f 0e3f 	mov.w	lr, #63	; 0x3f
  4032d4:	e74a      	b.n	40316c <_malloc_r+0x44>
  4032d6:	4423      	add	r3, r4
  4032d8:	685a      	ldr	r2, [r3, #4]
  4032da:	68e1      	ldr	r1, [r4, #12]
  4032dc:	e7e0      	b.n	4032a0 <_malloc_r+0x178>
  4032de:	4423      	add	r3, r4
  4032e0:	685a      	ldr	r2, [r3, #4]
  4032e2:	4628      	mov	r0, r5
  4032e4:	f042 0201 	orr.w	r2, r2, #1
  4032e8:	605a      	str	r2, [r3, #4]
  4032ea:	3408      	adds	r4, #8
  4032ec:	f000 faf6 	bl	4038dc <__malloc_unlock>
  4032f0:	4620      	mov	r0, r4
  4032f2:	b003      	add	sp, #12
  4032f4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  4032f8:	68bc      	ldr	r4, [r7, #8]
  4032fa:	6863      	ldr	r3, [r4, #4]
  4032fc:	f023 0803 	bic.w	r8, r3, #3
  403300:	45b0      	cmp	r8, r6
  403302:	d304      	bcc.n	40330e <_malloc_r+0x1e6>
  403304:	eba8 0306 	sub.w	r3, r8, r6
  403308:	2b0f      	cmp	r3, #15
  40330a:	f300 8085 	bgt.w	403418 <_malloc_r+0x2f0>
  40330e:	f8df 9158 	ldr.w	r9, [pc, #344]	; 403468 <_malloc_r+0x340>
  403312:	4b50      	ldr	r3, [pc, #320]	; (403454 <_malloc_r+0x32c>)
  403314:	f8d9 2000 	ldr.w	r2, [r9]
  403318:	681b      	ldr	r3, [r3, #0]
  40331a:	3201      	adds	r2, #1
  40331c:	4433      	add	r3, r6
  40331e:	eb04 0a08 	add.w	sl, r4, r8
  403322:	f000 8154 	beq.w	4035ce <_malloc_r+0x4a6>
  403326:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
  40332a:	330f      	adds	r3, #15
  40332c:	f423 6b7f 	bic.w	fp, r3, #4080	; 0xff0
  403330:	f02b 0b0f 	bic.w	fp, fp, #15
  403334:	4659      	mov	r1, fp
  403336:	4628      	mov	r0, r5
  403338:	f000 fc88 	bl	403c4c <_sbrk_r>
  40333c:	1c41      	adds	r1, r0, #1
  40333e:	4602      	mov	r2, r0
  403340:	f000 80fb 	beq.w	40353a <_malloc_r+0x412>
  403344:	4582      	cmp	sl, r0
  403346:	f200 80f6 	bhi.w	403536 <_malloc_r+0x40e>
  40334a:	4b43      	ldr	r3, [pc, #268]	; (403458 <_malloc_r+0x330>)
  40334c:	6819      	ldr	r1, [r3, #0]
  40334e:	4459      	add	r1, fp
  403350:	6019      	str	r1, [r3, #0]
  403352:	f000 814c 	beq.w	4035ee <_malloc_r+0x4c6>
  403356:	f8d9 0000 	ldr.w	r0, [r9]
  40335a:	3001      	adds	r0, #1
  40335c:	bf1b      	ittet	ne
  40335e:	eba2 0a0a 	subne.w	sl, r2, sl
  403362:	4451      	addne	r1, sl
  403364:	f8c9 2000 	streq.w	r2, [r9]
  403368:	6019      	strne	r1, [r3, #0]
  40336a:	f012 0107 	ands.w	r1, r2, #7
  40336e:	f000 8114 	beq.w	40359a <_malloc_r+0x472>
  403372:	f1c1 0008 	rsb	r0, r1, #8
  403376:	f5c1 5180 	rsb	r1, r1, #4096	; 0x1000
  40337a:	4402      	add	r2, r0
  40337c:	3108      	adds	r1, #8
  40337e:	eb02 090b 	add.w	r9, r2, fp
  403382:	f3c9 090b 	ubfx	r9, r9, #0, #12
  403386:	eba1 0909 	sub.w	r9, r1, r9
  40338a:	4649      	mov	r1, r9
  40338c:	4628      	mov	r0, r5
  40338e:	9301      	str	r3, [sp, #4]
  403390:	9200      	str	r2, [sp, #0]
  403392:	f000 fc5b 	bl	403c4c <_sbrk_r>
  403396:	1c43      	adds	r3, r0, #1
  403398:	e89d 000c 	ldmia.w	sp, {r2, r3}
  40339c:	f000 8142 	beq.w	403624 <_malloc_r+0x4fc>
  4033a0:	1a80      	subs	r0, r0, r2
  4033a2:	4448      	add	r0, r9
  4033a4:	f040 0001 	orr.w	r0, r0, #1
  4033a8:	6819      	ldr	r1, [r3, #0]
  4033aa:	42bc      	cmp	r4, r7
  4033ac:	4449      	add	r1, r9
  4033ae:	60ba      	str	r2, [r7, #8]
  4033b0:	6019      	str	r1, [r3, #0]
  4033b2:	6050      	str	r0, [r2, #4]
  4033b4:	d017      	beq.n	4033e6 <_malloc_r+0x2be>
  4033b6:	f1b8 0f0f 	cmp.w	r8, #15
  4033ba:	f240 80fa 	bls.w	4035b2 <_malloc_r+0x48a>
  4033be:	f04f 0c05 	mov.w	ip, #5
  4033c2:	6862      	ldr	r2, [r4, #4]
  4033c4:	f1a8 000c 	sub.w	r0, r8, #12
  4033c8:	f020 0007 	bic.w	r0, r0, #7
  4033cc:	f002 0201 	and.w	r2, r2, #1
  4033d0:	eb04 0e00 	add.w	lr, r4, r0
  4033d4:	4302      	orrs	r2, r0
  4033d6:	280f      	cmp	r0, #15
  4033d8:	6062      	str	r2, [r4, #4]
  4033da:	f8ce c004 	str.w	ip, [lr, #4]
  4033de:	f8ce c008 	str.w	ip, [lr, #8]
  4033e2:	f200 8116 	bhi.w	403612 <_malloc_r+0x4ea>
  4033e6:	4b1d      	ldr	r3, [pc, #116]	; (40345c <_malloc_r+0x334>)
  4033e8:	68bc      	ldr	r4, [r7, #8]
  4033ea:	681a      	ldr	r2, [r3, #0]
  4033ec:	4291      	cmp	r1, r2
  4033ee:	bf88      	it	hi
  4033f0:	6019      	strhi	r1, [r3, #0]
  4033f2:	4b1b      	ldr	r3, [pc, #108]	; (403460 <_malloc_r+0x338>)
  4033f4:	681a      	ldr	r2, [r3, #0]
  4033f6:	4291      	cmp	r1, r2
  4033f8:	6862      	ldr	r2, [r4, #4]
  4033fa:	bf88      	it	hi
  4033fc:	6019      	strhi	r1, [r3, #0]
  4033fe:	f022 0203 	bic.w	r2, r2, #3
  403402:	4296      	cmp	r6, r2
  403404:	eba2 0306 	sub.w	r3, r2, r6
  403408:	d801      	bhi.n	40340e <_malloc_r+0x2e6>
  40340a:	2b0f      	cmp	r3, #15
  40340c:	dc04      	bgt.n	403418 <_malloc_r+0x2f0>
  40340e:	4628      	mov	r0, r5
  403410:	f000 fa64 	bl	4038dc <__malloc_unlock>
  403414:	2400      	movs	r4, #0
  403416:	e74d      	b.n	4032b4 <_malloc_r+0x18c>
  403418:	f046 0201 	orr.w	r2, r6, #1
  40341c:	f043 0301 	orr.w	r3, r3, #1
  403420:	4426      	add	r6, r4
  403422:	6062      	str	r2, [r4, #4]
  403424:	4628      	mov	r0, r5
  403426:	60be      	str	r6, [r7, #8]
  403428:	3408      	adds	r4, #8
  40342a:	6073      	str	r3, [r6, #4]
  40342c:	f000 fa56 	bl	4038dc <__malloc_unlock>
  403430:	4620      	mov	r0, r4
  403432:	b003      	add	sp, #12
  403434:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  403438:	2b14      	cmp	r3, #20
  40343a:	d970      	bls.n	40351e <_malloc_r+0x3f6>
  40343c:	2b54      	cmp	r3, #84	; 0x54
  40343e:	f200 80a2 	bhi.w	403586 <_malloc_r+0x45e>
  403442:	0b33      	lsrs	r3, r6, #12
  403444:	f103 006f 	add.w	r0, r3, #111	; 0x6f
  403448:	f103 0e6e 	add.w	lr, r3, #110	; 0x6e
  40344c:	00c1      	lsls	r1, r0, #3
  40344e:	e68d      	b.n	40316c <_malloc_r+0x44>
  403450:	200006a4 	.word	0x200006a4
  403454:	20000b80 	.word	0x20000b80
  403458:	20000b50 	.word	0x20000b50
  40345c:	20000b78 	.word	0x20000b78
  403460:	20000b7c 	.word	0x20000b7c
  403464:	200006ac 	.word	0x200006ac
  403468:	20000aac 	.word	0x20000aac
  40346c:	0a5a      	lsrs	r2, r3, #9
  40346e:	2a04      	cmp	r2, #4
  403470:	d95b      	bls.n	40352a <_malloc_r+0x402>
  403472:	2a14      	cmp	r2, #20
  403474:	f200 80ae 	bhi.w	4035d4 <_malloc_r+0x4ac>
  403478:	f102 015c 	add.w	r1, r2, #92	; 0x5c
  40347c:	00c9      	lsls	r1, r1, #3
  40347e:	325b      	adds	r2, #91	; 0x5b
  403480:	eb07 0c01 	add.w	ip, r7, r1
  403484:	5879      	ldr	r1, [r7, r1]
  403486:	f1ac 0c08 	sub.w	ip, ip, #8
  40348a:	458c      	cmp	ip, r1
  40348c:	f000 8088 	beq.w	4035a0 <_malloc_r+0x478>
  403490:	684a      	ldr	r2, [r1, #4]
  403492:	f022 0203 	bic.w	r2, r2, #3
  403496:	4293      	cmp	r3, r2
  403498:	d273      	bcs.n	403582 <_malloc_r+0x45a>
  40349a:	6889      	ldr	r1, [r1, #8]
  40349c:	458c      	cmp	ip, r1
  40349e:	d1f7      	bne.n	403490 <_malloc_r+0x368>
  4034a0:	f8dc 300c 	ldr.w	r3, [ip, #12]
  4034a4:	687a      	ldr	r2, [r7, #4]
  4034a6:	60e3      	str	r3, [r4, #12]
  4034a8:	f8c4 c008 	str.w	ip, [r4, #8]
  4034ac:	609c      	str	r4, [r3, #8]
  4034ae:	f8cc 400c 	str.w	r4, [ip, #12]
  4034b2:	e69e      	b.n	4031f2 <_malloc_r+0xca>
  4034b4:	f046 0c01 	orr.w	ip, r6, #1
  4034b8:	f042 0101 	orr.w	r1, r2, #1
  4034bc:	4426      	add	r6, r4
  4034be:	f8c4 c004 	str.w	ip, [r4, #4]
  4034c2:	4628      	mov	r0, r5
  4034c4:	617e      	str	r6, [r7, #20]
  4034c6:	613e      	str	r6, [r7, #16]
  4034c8:	f8c6 e00c 	str.w	lr, [r6, #12]
  4034cc:	f8c6 e008 	str.w	lr, [r6, #8]
  4034d0:	6071      	str	r1, [r6, #4]
  4034d2:	50e2      	str	r2, [r4, r3]
  4034d4:	f000 fa02 	bl	4038dc <__malloc_unlock>
  4034d8:	3408      	adds	r4, #8
  4034da:	e6eb      	b.n	4032b4 <_malloc_r+0x18c>
  4034dc:	687a      	ldr	r2, [r7, #4]
  4034de:	e688      	b.n	4031f2 <_malloc_r+0xca>
  4034e0:	f108 0801 	add.w	r8, r8, #1
  4034e4:	f018 0f03 	tst.w	r8, #3
  4034e8:	f10c 0c08 	add.w	ip, ip, #8
  4034ec:	f47f ae93 	bne.w	403216 <_malloc_r+0xee>
  4034f0:	e02d      	b.n	40354e <_malloc_r+0x426>
  4034f2:	68dc      	ldr	r4, [r3, #12]
  4034f4:	42a3      	cmp	r3, r4
  4034f6:	bf08      	it	eq
  4034f8:	3002      	addeq	r0, #2
  4034fa:	f43f ae4b 	beq.w	403194 <_malloc_r+0x6c>
  4034fe:	e6c9      	b.n	403294 <_malloc_r+0x16c>
  403500:	461c      	mov	r4, r3
  403502:	4419      	add	r1, r3
  403504:	684a      	ldr	r2, [r1, #4]
  403506:	68db      	ldr	r3, [r3, #12]
  403508:	f854 6f08 	ldr.w	r6, [r4, #8]!
  40350c:	f042 0201 	orr.w	r2, r2, #1
  403510:	604a      	str	r2, [r1, #4]
  403512:	4628      	mov	r0, r5
  403514:	60f3      	str	r3, [r6, #12]
  403516:	609e      	str	r6, [r3, #8]
  403518:	f000 f9e0 	bl	4038dc <__malloc_unlock>
  40351c:	e6ca      	b.n	4032b4 <_malloc_r+0x18c>
  40351e:	f103 005c 	add.w	r0, r3, #92	; 0x5c
  403522:	f103 0e5b 	add.w	lr, r3, #91	; 0x5b
  403526:	00c1      	lsls	r1, r0, #3
  403528:	e620      	b.n	40316c <_malloc_r+0x44>
  40352a:	099a      	lsrs	r2, r3, #6
  40352c:	f102 0139 	add.w	r1, r2, #57	; 0x39
  403530:	00c9      	lsls	r1, r1, #3
  403532:	3238      	adds	r2, #56	; 0x38
  403534:	e7a4      	b.n	403480 <_malloc_r+0x358>
  403536:	42bc      	cmp	r4, r7
  403538:	d054      	beq.n	4035e4 <_malloc_r+0x4bc>
  40353a:	68bc      	ldr	r4, [r7, #8]
  40353c:	6862      	ldr	r2, [r4, #4]
  40353e:	f022 0203 	bic.w	r2, r2, #3
  403542:	e75e      	b.n	403402 <_malloc_r+0x2da>
  403544:	f859 3908 	ldr.w	r3, [r9], #-8
  403548:	4599      	cmp	r9, r3
  40354a:	f040 8086 	bne.w	40365a <_malloc_r+0x532>
  40354e:	f010 0f03 	tst.w	r0, #3
  403552:	f100 30ff 	add.w	r0, r0, #4294967295
  403556:	d1f5      	bne.n	403544 <_malloc_r+0x41c>
  403558:	687b      	ldr	r3, [r7, #4]
  40355a:	ea23 0304 	bic.w	r3, r3, r4
  40355e:	607b      	str	r3, [r7, #4]
  403560:	0064      	lsls	r4, r4, #1
  403562:	429c      	cmp	r4, r3
  403564:	f63f aec8 	bhi.w	4032f8 <_malloc_r+0x1d0>
  403568:	2c00      	cmp	r4, #0
  40356a:	f43f aec5 	beq.w	4032f8 <_malloc_r+0x1d0>
  40356e:	421c      	tst	r4, r3
  403570:	4640      	mov	r0, r8
  403572:	f47f ae4c 	bne.w	40320e <_malloc_r+0xe6>
  403576:	0064      	lsls	r4, r4, #1
  403578:	421c      	tst	r4, r3
  40357a:	f100 0004 	add.w	r0, r0, #4
  40357e:	d0fa      	beq.n	403576 <_malloc_r+0x44e>
  403580:	e645      	b.n	40320e <_malloc_r+0xe6>
  403582:	468c      	mov	ip, r1
  403584:	e78c      	b.n	4034a0 <_malloc_r+0x378>
  403586:	f5b3 7faa 	cmp.w	r3, #340	; 0x154
  40358a:	d815      	bhi.n	4035b8 <_malloc_r+0x490>
  40358c:	0bf3      	lsrs	r3, r6, #15
  40358e:	f103 0078 	add.w	r0, r3, #120	; 0x78
  403592:	f103 0e77 	add.w	lr, r3, #119	; 0x77
  403596:	00c1      	lsls	r1, r0, #3
  403598:	e5e8      	b.n	40316c <_malloc_r+0x44>
  40359a:	f44f 5180 	mov.w	r1, #4096	; 0x1000
  40359e:	e6ee      	b.n	40337e <_malloc_r+0x256>
  4035a0:	2101      	movs	r1, #1
  4035a2:	687b      	ldr	r3, [r7, #4]
  4035a4:	1092      	asrs	r2, r2, #2
  4035a6:	fa01 f202 	lsl.w	r2, r1, r2
  4035aa:	431a      	orrs	r2, r3
  4035ac:	607a      	str	r2, [r7, #4]
  4035ae:	4663      	mov	r3, ip
  4035b0:	e779      	b.n	4034a6 <_malloc_r+0x37e>
  4035b2:	2301      	movs	r3, #1
  4035b4:	6053      	str	r3, [r2, #4]
  4035b6:	e72a      	b.n	40340e <_malloc_r+0x2e6>
  4035b8:	f240 5254 	movw	r2, #1364	; 0x554
  4035bc:	4293      	cmp	r3, r2
  4035be:	d822      	bhi.n	403606 <_malloc_r+0x4de>
  4035c0:	0cb3      	lsrs	r3, r6, #18
  4035c2:	f103 007d 	add.w	r0, r3, #125	; 0x7d
  4035c6:	f103 0e7c 	add.w	lr, r3, #124	; 0x7c
  4035ca:	00c1      	lsls	r1, r0, #3
  4035cc:	e5ce      	b.n	40316c <_malloc_r+0x44>
  4035ce:	f103 0b10 	add.w	fp, r3, #16
  4035d2:	e6af      	b.n	403334 <_malloc_r+0x20c>
  4035d4:	2a54      	cmp	r2, #84	; 0x54
  4035d6:	d829      	bhi.n	40362c <_malloc_r+0x504>
  4035d8:	0b1a      	lsrs	r2, r3, #12
  4035da:	f102 016f 	add.w	r1, r2, #111	; 0x6f
  4035de:	00c9      	lsls	r1, r1, #3
  4035e0:	326e      	adds	r2, #110	; 0x6e
  4035e2:	e74d      	b.n	403480 <_malloc_r+0x358>
  4035e4:	4b20      	ldr	r3, [pc, #128]	; (403668 <_malloc_r+0x540>)
  4035e6:	6819      	ldr	r1, [r3, #0]
  4035e8:	4459      	add	r1, fp
  4035ea:	6019      	str	r1, [r3, #0]
  4035ec:	e6b3      	b.n	403356 <_malloc_r+0x22e>
  4035ee:	f3ca 000b 	ubfx	r0, sl, #0, #12
  4035f2:	2800      	cmp	r0, #0
  4035f4:	f47f aeaf 	bne.w	403356 <_malloc_r+0x22e>
  4035f8:	eb08 030b 	add.w	r3, r8, fp
  4035fc:	68ba      	ldr	r2, [r7, #8]
  4035fe:	f043 0301 	orr.w	r3, r3, #1
  403602:	6053      	str	r3, [r2, #4]
  403604:	e6ef      	b.n	4033e6 <_malloc_r+0x2be>
  403606:	207f      	movs	r0, #127	; 0x7f
  403608:	f44f 717e 	mov.w	r1, #1016	; 0x3f8
  40360c:	f04f 0e7e 	mov.w	lr, #126	; 0x7e
  403610:	e5ac      	b.n	40316c <_malloc_r+0x44>
  403612:	f104 0108 	add.w	r1, r4, #8
  403616:	4628      	mov	r0, r5
  403618:	9300      	str	r3, [sp, #0]
  40361a:	f7ff fa75 	bl	402b08 <_free_r>
  40361e:	9b00      	ldr	r3, [sp, #0]
  403620:	6819      	ldr	r1, [r3, #0]
  403622:	e6e0      	b.n	4033e6 <_malloc_r+0x2be>
  403624:	2001      	movs	r0, #1
  403626:	f04f 0900 	mov.w	r9, #0
  40362a:	e6bd      	b.n	4033a8 <_malloc_r+0x280>
  40362c:	f5b2 7faa 	cmp.w	r2, #340	; 0x154
  403630:	d805      	bhi.n	40363e <_malloc_r+0x516>
  403632:	0bda      	lsrs	r2, r3, #15
  403634:	f102 0178 	add.w	r1, r2, #120	; 0x78
  403638:	00c9      	lsls	r1, r1, #3
  40363a:	3277      	adds	r2, #119	; 0x77
  40363c:	e720      	b.n	403480 <_malloc_r+0x358>
  40363e:	f240 5154 	movw	r1, #1364	; 0x554
  403642:	428a      	cmp	r2, r1
  403644:	d805      	bhi.n	403652 <_malloc_r+0x52a>
  403646:	0c9a      	lsrs	r2, r3, #18
  403648:	f102 017d 	add.w	r1, r2, #125	; 0x7d
  40364c:	00c9      	lsls	r1, r1, #3
  40364e:	327c      	adds	r2, #124	; 0x7c
  403650:	e716      	b.n	403480 <_malloc_r+0x358>
  403652:	f44f 717e 	mov.w	r1, #1016	; 0x3f8
  403656:	227e      	movs	r2, #126	; 0x7e
  403658:	e712      	b.n	403480 <_malloc_r+0x358>
  40365a:	687b      	ldr	r3, [r7, #4]
  40365c:	e780      	b.n	403560 <_malloc_r+0x438>
  40365e:	08f0      	lsrs	r0, r6, #3
  403660:	f106 0308 	add.w	r3, r6, #8
  403664:	e60e      	b.n	403284 <_malloc_r+0x15c>
  403666:	bf00      	nop
  403668:	20000b50 	.word	0x20000b50

0040366c <__ascii_mbtowc>:
  40366c:	b082      	sub	sp, #8
  40366e:	b149      	cbz	r1, 403684 <__ascii_mbtowc+0x18>
  403670:	b15a      	cbz	r2, 40368a <__ascii_mbtowc+0x1e>
  403672:	b16b      	cbz	r3, 403690 <__ascii_mbtowc+0x24>
  403674:	7813      	ldrb	r3, [r2, #0]
  403676:	600b      	str	r3, [r1, #0]
  403678:	7812      	ldrb	r2, [r2, #0]
  40367a:	1c10      	adds	r0, r2, #0
  40367c:	bf18      	it	ne
  40367e:	2001      	movne	r0, #1
  403680:	b002      	add	sp, #8
  403682:	4770      	bx	lr
  403684:	a901      	add	r1, sp, #4
  403686:	2a00      	cmp	r2, #0
  403688:	d1f3      	bne.n	403672 <__ascii_mbtowc+0x6>
  40368a:	4610      	mov	r0, r2
  40368c:	b002      	add	sp, #8
  40368e:	4770      	bx	lr
  403690:	f06f 0001 	mvn.w	r0, #1
  403694:	e7f4      	b.n	403680 <__ascii_mbtowc+0x14>
  403696:	bf00      	nop

00403698 <memchr>:
  403698:	0783      	lsls	r3, r0, #30
  40369a:	b470      	push	{r4, r5, r6}
  40369c:	b2cd      	uxtb	r5, r1
  40369e:	d03d      	beq.n	40371c <memchr+0x84>
  4036a0:	1e54      	subs	r4, r2, #1
  4036a2:	b30a      	cbz	r2, 4036e8 <memchr+0x50>
  4036a4:	7803      	ldrb	r3, [r0, #0]
  4036a6:	42ab      	cmp	r3, r5
  4036a8:	d01f      	beq.n	4036ea <memchr+0x52>
  4036aa:	1c43      	adds	r3, r0, #1
  4036ac:	e005      	b.n	4036ba <memchr+0x22>
  4036ae:	f114 34ff 	adds.w	r4, r4, #4294967295
  4036b2:	d319      	bcc.n	4036e8 <memchr+0x50>
  4036b4:	7802      	ldrb	r2, [r0, #0]
  4036b6:	42aa      	cmp	r2, r5
  4036b8:	d017      	beq.n	4036ea <memchr+0x52>
  4036ba:	f013 0f03 	tst.w	r3, #3
  4036be:	4618      	mov	r0, r3
  4036c0:	f103 0301 	add.w	r3, r3, #1
  4036c4:	d1f3      	bne.n	4036ae <memchr+0x16>
  4036c6:	2c03      	cmp	r4, #3
  4036c8:	d811      	bhi.n	4036ee <memchr+0x56>
  4036ca:	b34c      	cbz	r4, 403720 <memchr+0x88>
  4036cc:	7803      	ldrb	r3, [r0, #0]
  4036ce:	42ab      	cmp	r3, r5
  4036d0:	d00b      	beq.n	4036ea <memchr+0x52>
  4036d2:	4404      	add	r4, r0
  4036d4:	1c43      	adds	r3, r0, #1
  4036d6:	e002      	b.n	4036de <memchr+0x46>
  4036d8:	7802      	ldrb	r2, [r0, #0]
  4036da:	42aa      	cmp	r2, r5
  4036dc:	d005      	beq.n	4036ea <memchr+0x52>
  4036de:	429c      	cmp	r4, r3
  4036e0:	4618      	mov	r0, r3
  4036e2:	f103 0301 	add.w	r3, r3, #1
  4036e6:	d1f7      	bne.n	4036d8 <memchr+0x40>
  4036e8:	2000      	movs	r0, #0
  4036ea:	bc70      	pop	{r4, r5, r6}
  4036ec:	4770      	bx	lr
  4036ee:	0209      	lsls	r1, r1, #8
  4036f0:	b289      	uxth	r1, r1
  4036f2:	4329      	orrs	r1, r5
  4036f4:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
  4036f8:	6803      	ldr	r3, [r0, #0]
  4036fa:	4606      	mov	r6, r0
  4036fc:	404b      	eors	r3, r1
  4036fe:	f1a3 3201 	sub.w	r2, r3, #16843009	; 0x1010101
  403702:	ea22 0303 	bic.w	r3, r2, r3
  403706:	f013 3f80 	tst.w	r3, #2155905152	; 0x80808080
  40370a:	f100 0004 	add.w	r0, r0, #4
  40370e:	d103      	bne.n	403718 <memchr+0x80>
  403710:	3c04      	subs	r4, #4
  403712:	2c03      	cmp	r4, #3
  403714:	d8f0      	bhi.n	4036f8 <memchr+0x60>
  403716:	e7d8      	b.n	4036ca <memchr+0x32>
  403718:	4630      	mov	r0, r6
  40371a:	e7d7      	b.n	4036cc <memchr+0x34>
  40371c:	4614      	mov	r4, r2
  40371e:	e7d2      	b.n	4036c6 <memchr+0x2e>
  403720:	4620      	mov	r0, r4
  403722:	e7e2      	b.n	4036ea <memchr+0x52>

00403724 <memcpy>:
  403724:	4684      	mov	ip, r0
  403726:	ea41 0300 	orr.w	r3, r1, r0
  40372a:	f013 0303 	ands.w	r3, r3, #3
  40372e:	d149      	bne.n	4037c4 <memcpy+0xa0>
  403730:	3a40      	subs	r2, #64	; 0x40
  403732:	d323      	bcc.n	40377c <memcpy+0x58>
  403734:	680b      	ldr	r3, [r1, #0]
  403736:	6003      	str	r3, [r0, #0]
  403738:	684b      	ldr	r3, [r1, #4]
  40373a:	6043      	str	r3, [r0, #4]
  40373c:	688b      	ldr	r3, [r1, #8]
  40373e:	6083      	str	r3, [r0, #8]
  403740:	68cb      	ldr	r3, [r1, #12]
  403742:	60c3      	str	r3, [r0, #12]
  403744:	690b      	ldr	r3, [r1, #16]
  403746:	6103      	str	r3, [r0, #16]
  403748:	694b      	ldr	r3, [r1, #20]
  40374a:	6143      	str	r3, [r0, #20]
  40374c:	698b      	ldr	r3, [r1, #24]
  40374e:	6183      	str	r3, [r0, #24]
  403750:	69cb      	ldr	r3, [r1, #28]
  403752:	61c3      	str	r3, [r0, #28]
  403754:	6a0b      	ldr	r3, [r1, #32]
  403756:	6203      	str	r3, [r0, #32]
  403758:	6a4b      	ldr	r3, [r1, #36]	; 0x24
  40375a:	6243      	str	r3, [r0, #36]	; 0x24
  40375c:	6a8b      	ldr	r3, [r1, #40]	; 0x28
  40375e:	6283      	str	r3, [r0, #40]	; 0x28
  403760:	6acb      	ldr	r3, [r1, #44]	; 0x2c
  403762:	62c3      	str	r3, [r0, #44]	; 0x2c
  403764:	6b0b      	ldr	r3, [r1, #48]	; 0x30
  403766:	6303      	str	r3, [r0, #48]	; 0x30
  403768:	6b4b      	ldr	r3, [r1, #52]	; 0x34
  40376a:	6343      	str	r3, [r0, #52]	; 0x34
  40376c:	6b8b      	ldr	r3, [r1, #56]	; 0x38
  40376e:	6383      	str	r3, [r0, #56]	; 0x38
  403770:	6bcb      	ldr	r3, [r1, #60]	; 0x3c
  403772:	63c3      	str	r3, [r0, #60]	; 0x3c
  403774:	3040      	adds	r0, #64	; 0x40
  403776:	3140      	adds	r1, #64	; 0x40
  403778:	3a40      	subs	r2, #64	; 0x40
  40377a:	d2db      	bcs.n	403734 <memcpy+0x10>
  40377c:	3230      	adds	r2, #48	; 0x30
  40377e:	d30b      	bcc.n	403798 <memcpy+0x74>
  403780:	680b      	ldr	r3, [r1, #0]
  403782:	6003      	str	r3, [r0, #0]
  403784:	684b      	ldr	r3, [r1, #4]
  403786:	6043      	str	r3, [r0, #4]
  403788:	688b      	ldr	r3, [r1, #8]
  40378a:	6083      	str	r3, [r0, #8]
  40378c:	68cb      	ldr	r3, [r1, #12]
  40378e:	60c3      	str	r3, [r0, #12]
  403790:	3010      	adds	r0, #16
  403792:	3110      	adds	r1, #16
  403794:	3a10      	subs	r2, #16
  403796:	d2f3      	bcs.n	403780 <memcpy+0x5c>
  403798:	320c      	adds	r2, #12
  40379a:	d305      	bcc.n	4037a8 <memcpy+0x84>
  40379c:	f851 3b04 	ldr.w	r3, [r1], #4
  4037a0:	f840 3b04 	str.w	r3, [r0], #4
  4037a4:	3a04      	subs	r2, #4
  4037a6:	d2f9      	bcs.n	40379c <memcpy+0x78>
  4037a8:	3204      	adds	r2, #4
  4037aa:	d008      	beq.n	4037be <memcpy+0x9a>
  4037ac:	07d2      	lsls	r2, r2, #31
  4037ae:	bf1c      	itt	ne
  4037b0:	f811 3b01 	ldrbne.w	r3, [r1], #1
  4037b4:	f800 3b01 	strbne.w	r3, [r0], #1
  4037b8:	d301      	bcc.n	4037be <memcpy+0x9a>
  4037ba:	880b      	ldrh	r3, [r1, #0]
  4037bc:	8003      	strh	r3, [r0, #0]
  4037be:	4660      	mov	r0, ip
  4037c0:	4770      	bx	lr
  4037c2:	bf00      	nop
  4037c4:	2a08      	cmp	r2, #8
  4037c6:	d313      	bcc.n	4037f0 <memcpy+0xcc>
  4037c8:	078b      	lsls	r3, r1, #30
  4037ca:	d0b1      	beq.n	403730 <memcpy+0xc>
  4037cc:	f010 0303 	ands.w	r3, r0, #3
  4037d0:	d0ae      	beq.n	403730 <memcpy+0xc>
  4037d2:	f1c3 0304 	rsb	r3, r3, #4
  4037d6:	1ad2      	subs	r2, r2, r3
  4037d8:	07db      	lsls	r3, r3, #31
  4037da:	bf1c      	itt	ne
  4037dc:	f811 3b01 	ldrbne.w	r3, [r1], #1
  4037e0:	f800 3b01 	strbne.w	r3, [r0], #1
  4037e4:	d3a4      	bcc.n	403730 <memcpy+0xc>
  4037e6:	f831 3b02 	ldrh.w	r3, [r1], #2
  4037ea:	f820 3b02 	strh.w	r3, [r0], #2
  4037ee:	e79f      	b.n	403730 <memcpy+0xc>
  4037f0:	3a04      	subs	r2, #4
  4037f2:	d3d9      	bcc.n	4037a8 <memcpy+0x84>
  4037f4:	3a01      	subs	r2, #1
  4037f6:	f811 3b01 	ldrb.w	r3, [r1], #1
  4037fa:	f800 3b01 	strb.w	r3, [r0], #1
  4037fe:	d2f9      	bcs.n	4037f4 <memcpy+0xd0>
  403800:	780b      	ldrb	r3, [r1, #0]
  403802:	7003      	strb	r3, [r0, #0]
  403804:	784b      	ldrb	r3, [r1, #1]
  403806:	7043      	strb	r3, [r0, #1]
  403808:	788b      	ldrb	r3, [r1, #2]
  40380a:	7083      	strb	r3, [r0, #2]
  40380c:	4660      	mov	r0, ip
  40380e:	4770      	bx	lr

00403810 <memmove>:
  403810:	4288      	cmp	r0, r1
  403812:	b5f0      	push	{r4, r5, r6, r7, lr}
  403814:	d90d      	bls.n	403832 <memmove+0x22>
  403816:	188b      	adds	r3, r1, r2
  403818:	4298      	cmp	r0, r3
  40381a:	d20a      	bcs.n	403832 <memmove+0x22>
  40381c:	1884      	adds	r4, r0, r2
  40381e:	2a00      	cmp	r2, #0
  403820:	d051      	beq.n	4038c6 <memmove+0xb6>
  403822:	4622      	mov	r2, r4
  403824:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
  403828:	4299      	cmp	r1, r3
  40382a:	f802 4d01 	strb.w	r4, [r2, #-1]!
  40382e:	d1f9      	bne.n	403824 <memmove+0x14>
  403830:	bdf0      	pop	{r4, r5, r6, r7, pc}
  403832:	2a0f      	cmp	r2, #15
  403834:	d948      	bls.n	4038c8 <memmove+0xb8>
  403836:	ea41 0300 	orr.w	r3, r1, r0
  40383a:	079b      	lsls	r3, r3, #30
  40383c:	d146      	bne.n	4038cc <memmove+0xbc>
  40383e:	4615      	mov	r5, r2
  403840:	f100 0410 	add.w	r4, r0, #16
  403844:	f101 0310 	add.w	r3, r1, #16
  403848:	f853 6c10 	ldr.w	r6, [r3, #-16]
  40384c:	3d10      	subs	r5, #16
  40384e:	f844 6c10 	str.w	r6, [r4, #-16]
  403852:	f853 6c0c 	ldr.w	r6, [r3, #-12]
  403856:	2d0f      	cmp	r5, #15
  403858:	f844 6c0c 	str.w	r6, [r4, #-12]
  40385c:	f853 6c08 	ldr.w	r6, [r3, #-8]
  403860:	f104 0410 	add.w	r4, r4, #16
  403864:	f844 6c18 	str.w	r6, [r4, #-24]
  403868:	f853 6c04 	ldr.w	r6, [r3, #-4]
  40386c:	f103 0310 	add.w	r3, r3, #16
  403870:	f844 6c14 	str.w	r6, [r4, #-20]
  403874:	d8e8      	bhi.n	403848 <memmove+0x38>
  403876:	f1a2 0310 	sub.w	r3, r2, #16
  40387a:	f023 030f 	bic.w	r3, r3, #15
  40387e:	f002 0e0f 	and.w	lr, r2, #15
  403882:	3310      	adds	r3, #16
  403884:	f1be 0f03 	cmp.w	lr, #3
  403888:	4419      	add	r1, r3
  40388a:	4403      	add	r3, r0
  40388c:	d921      	bls.n	4038d2 <memmove+0xc2>
  40388e:	460e      	mov	r6, r1
  403890:	4674      	mov	r4, lr
  403892:	1f1d      	subs	r5, r3, #4
  403894:	f856 7b04 	ldr.w	r7, [r6], #4
  403898:	3c04      	subs	r4, #4
  40389a:	2c03      	cmp	r4, #3
  40389c:	f845 7f04 	str.w	r7, [r5, #4]!
  4038a0:	d8f8      	bhi.n	403894 <memmove+0x84>
  4038a2:	f1ae 0404 	sub.w	r4, lr, #4
  4038a6:	f024 0403 	bic.w	r4, r4, #3
  4038aa:	3404      	adds	r4, #4
  4038ac:	4421      	add	r1, r4
  4038ae:	4423      	add	r3, r4
  4038b0:	f002 0203 	and.w	r2, r2, #3
  4038b4:	b162      	cbz	r2, 4038d0 <memmove+0xc0>
  4038b6:	3b01      	subs	r3, #1
  4038b8:	440a      	add	r2, r1
  4038ba:	f811 4b01 	ldrb.w	r4, [r1], #1
  4038be:	428a      	cmp	r2, r1
  4038c0:	f803 4f01 	strb.w	r4, [r3, #1]!
  4038c4:	d1f9      	bne.n	4038ba <memmove+0xaa>
  4038c6:	bdf0      	pop	{r4, r5, r6, r7, pc}
  4038c8:	4603      	mov	r3, r0
  4038ca:	e7f3      	b.n	4038b4 <memmove+0xa4>
  4038cc:	4603      	mov	r3, r0
  4038ce:	e7f2      	b.n	4038b6 <memmove+0xa6>
  4038d0:	bdf0      	pop	{r4, r5, r6, r7, pc}
  4038d2:	4672      	mov	r2, lr
  4038d4:	e7ee      	b.n	4038b4 <memmove+0xa4>
  4038d6:	bf00      	nop

004038d8 <__malloc_lock>:
  4038d8:	4770      	bx	lr
  4038da:	bf00      	nop

004038dc <__malloc_unlock>:
  4038dc:	4770      	bx	lr
  4038de:	bf00      	nop

004038e0 <_realloc_r>:
  4038e0:	2900      	cmp	r1, #0
  4038e2:	f000 8094 	beq.w	403a0e <_realloc_r+0x12e>
  4038e6:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  4038ea:	460c      	mov	r4, r1
  4038ec:	4615      	mov	r5, r2
  4038ee:	b083      	sub	sp, #12
  4038f0:	4680      	mov	r8, r0
  4038f2:	f105 060b 	add.w	r6, r5, #11
  4038f6:	f7ff ffef 	bl	4038d8 <__malloc_lock>
  4038fa:	f854 ec04 	ldr.w	lr, [r4, #-4]
  4038fe:	2e16      	cmp	r6, #22
  403900:	f02e 0703 	bic.w	r7, lr, #3
  403904:	f1a4 0908 	sub.w	r9, r4, #8
  403908:	d83c      	bhi.n	403984 <_realloc_r+0xa4>
  40390a:	2210      	movs	r2, #16
  40390c:	4616      	mov	r6, r2
  40390e:	42b5      	cmp	r5, r6
  403910:	d83d      	bhi.n	40398e <_realloc_r+0xae>
  403912:	4297      	cmp	r7, r2
  403914:	da43      	bge.n	40399e <_realloc_r+0xbe>
  403916:	4bc6      	ldr	r3, [pc, #792]	; (403c30 <_realloc_r+0x350>)
  403918:	eb09 0007 	add.w	r0, r9, r7
  40391c:	6899      	ldr	r1, [r3, #8]
  40391e:	4288      	cmp	r0, r1
  403920:	f000 80c3 	beq.w	403aaa <_realloc_r+0x1ca>
  403924:	6843      	ldr	r3, [r0, #4]
  403926:	f023 0101 	bic.w	r1, r3, #1
  40392a:	4401      	add	r1, r0
  40392c:	6849      	ldr	r1, [r1, #4]
  40392e:	07c9      	lsls	r1, r1, #31
  403930:	d54d      	bpl.n	4039ce <_realloc_r+0xee>
  403932:	f01e 0f01 	tst.w	lr, #1
  403936:	f000 809b 	beq.w	403a70 <_realloc_r+0x190>
  40393a:	4629      	mov	r1, r5
  40393c:	4640      	mov	r0, r8
  40393e:	f7ff fbf3 	bl	403128 <_malloc_r>
  403942:	4605      	mov	r5, r0
  403944:	2800      	cmp	r0, #0
  403946:	d03b      	beq.n	4039c0 <_realloc_r+0xe0>
  403948:	f854 3c04 	ldr.w	r3, [r4, #-4]
  40394c:	f1a0 0208 	sub.w	r2, r0, #8
  403950:	f023 0301 	bic.w	r3, r3, #1
  403954:	444b      	add	r3, r9
  403956:	429a      	cmp	r2, r3
  403958:	f000 812b 	beq.w	403bb2 <_realloc_r+0x2d2>
  40395c:	1f3a      	subs	r2, r7, #4
  40395e:	2a24      	cmp	r2, #36	; 0x24
  403960:	f200 8118 	bhi.w	403b94 <_realloc_r+0x2b4>
  403964:	2a13      	cmp	r2, #19
  403966:	f200 80eb 	bhi.w	403b40 <_realloc_r+0x260>
  40396a:	4603      	mov	r3, r0
  40396c:	4622      	mov	r2, r4
  40396e:	6811      	ldr	r1, [r2, #0]
  403970:	6019      	str	r1, [r3, #0]
  403972:	6851      	ldr	r1, [r2, #4]
  403974:	6059      	str	r1, [r3, #4]
  403976:	6892      	ldr	r2, [r2, #8]
  403978:	609a      	str	r2, [r3, #8]
  40397a:	4621      	mov	r1, r4
  40397c:	4640      	mov	r0, r8
  40397e:	f7ff f8c3 	bl	402b08 <_free_r>
  403982:	e01d      	b.n	4039c0 <_realloc_r+0xe0>
  403984:	f026 0607 	bic.w	r6, r6, #7
  403988:	2e00      	cmp	r6, #0
  40398a:	4632      	mov	r2, r6
  40398c:	dabf      	bge.n	40390e <_realloc_r+0x2e>
  40398e:	2500      	movs	r5, #0
  403990:	230c      	movs	r3, #12
  403992:	4628      	mov	r0, r5
  403994:	f8c8 3000 	str.w	r3, [r8]
  403998:	b003      	add	sp, #12
  40399a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  40399e:	4625      	mov	r5, r4
  4039a0:	1bbb      	subs	r3, r7, r6
  4039a2:	2b0f      	cmp	r3, #15
  4039a4:	f8d9 2004 	ldr.w	r2, [r9, #4]
  4039a8:	d81d      	bhi.n	4039e6 <_realloc_r+0x106>
  4039aa:	f002 0201 	and.w	r2, r2, #1
  4039ae:	433a      	orrs	r2, r7
  4039b0:	eb09 0107 	add.w	r1, r9, r7
  4039b4:	f8c9 2004 	str.w	r2, [r9, #4]
  4039b8:	684b      	ldr	r3, [r1, #4]
  4039ba:	f043 0301 	orr.w	r3, r3, #1
  4039be:	604b      	str	r3, [r1, #4]
  4039c0:	4640      	mov	r0, r8
  4039c2:	f7ff ff8b 	bl	4038dc <__malloc_unlock>
  4039c6:	4628      	mov	r0, r5
  4039c8:	b003      	add	sp, #12
  4039ca:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  4039ce:	f023 0303 	bic.w	r3, r3, #3
  4039d2:	18f9      	adds	r1, r7, r3
  4039d4:	4291      	cmp	r1, r2
  4039d6:	db1d      	blt.n	403a14 <_realloc_r+0x134>
  4039d8:	68c3      	ldr	r3, [r0, #12]
  4039da:	6882      	ldr	r2, [r0, #8]
  4039dc:	4625      	mov	r5, r4
  4039de:	60d3      	str	r3, [r2, #12]
  4039e0:	460f      	mov	r7, r1
  4039e2:	609a      	str	r2, [r3, #8]
  4039e4:	e7dc      	b.n	4039a0 <_realloc_r+0xc0>
  4039e6:	f002 0201 	and.w	r2, r2, #1
  4039ea:	eb09 0106 	add.w	r1, r9, r6
  4039ee:	f043 0301 	orr.w	r3, r3, #1
  4039f2:	4332      	orrs	r2, r6
  4039f4:	f8c9 2004 	str.w	r2, [r9, #4]
  4039f8:	444f      	add	r7, r9
  4039fa:	604b      	str	r3, [r1, #4]
  4039fc:	687b      	ldr	r3, [r7, #4]
  4039fe:	3108      	adds	r1, #8
  403a00:	f043 0301 	orr.w	r3, r3, #1
  403a04:	607b      	str	r3, [r7, #4]
  403a06:	4640      	mov	r0, r8
  403a08:	f7ff f87e 	bl	402b08 <_free_r>
  403a0c:	e7d8      	b.n	4039c0 <_realloc_r+0xe0>
  403a0e:	4611      	mov	r1, r2
  403a10:	f7ff bb8a 	b.w	403128 <_malloc_r>
  403a14:	f01e 0f01 	tst.w	lr, #1
  403a18:	d18f      	bne.n	40393a <_realloc_r+0x5a>
  403a1a:	f854 1c08 	ldr.w	r1, [r4, #-8]
  403a1e:	eba9 0a01 	sub.w	sl, r9, r1
  403a22:	f8da 1004 	ldr.w	r1, [sl, #4]
  403a26:	f021 0103 	bic.w	r1, r1, #3
  403a2a:	440b      	add	r3, r1
  403a2c:	443b      	add	r3, r7
  403a2e:	4293      	cmp	r3, r2
  403a30:	db26      	blt.n	403a80 <_realloc_r+0x1a0>
  403a32:	4655      	mov	r5, sl
  403a34:	68c1      	ldr	r1, [r0, #12]
  403a36:	6880      	ldr	r0, [r0, #8]
  403a38:	1f3a      	subs	r2, r7, #4
  403a3a:	60c1      	str	r1, [r0, #12]
  403a3c:	6088      	str	r0, [r1, #8]
  403a3e:	f855 0f08 	ldr.w	r0, [r5, #8]!
  403a42:	f8da 100c 	ldr.w	r1, [sl, #12]
  403a46:	2a24      	cmp	r2, #36	; 0x24
  403a48:	60c1      	str	r1, [r0, #12]
  403a4a:	6088      	str	r0, [r1, #8]
  403a4c:	d826      	bhi.n	403a9c <_realloc_r+0x1bc>
  403a4e:	2a13      	cmp	r2, #19
  403a50:	f240 8081 	bls.w	403b56 <_realloc_r+0x276>
  403a54:	6821      	ldr	r1, [r4, #0]
  403a56:	2a1b      	cmp	r2, #27
  403a58:	f8ca 1008 	str.w	r1, [sl, #8]
  403a5c:	6861      	ldr	r1, [r4, #4]
  403a5e:	f8ca 100c 	str.w	r1, [sl, #12]
  403a62:	f200 80ad 	bhi.w	403bc0 <_realloc_r+0x2e0>
  403a66:	f104 0008 	add.w	r0, r4, #8
  403a6a:	f10a 0210 	add.w	r2, sl, #16
  403a6e:	e074      	b.n	403b5a <_realloc_r+0x27a>
  403a70:	f854 3c08 	ldr.w	r3, [r4, #-8]
  403a74:	eba9 0a03 	sub.w	sl, r9, r3
  403a78:	f8da 1004 	ldr.w	r1, [sl, #4]
  403a7c:	f021 0103 	bic.w	r1, r1, #3
  403a80:	187b      	adds	r3, r7, r1
  403a82:	4293      	cmp	r3, r2
  403a84:	f6ff af59 	blt.w	40393a <_realloc_r+0x5a>
  403a88:	4655      	mov	r5, sl
  403a8a:	f8da 100c 	ldr.w	r1, [sl, #12]
  403a8e:	f855 0f08 	ldr.w	r0, [r5, #8]!
  403a92:	1f3a      	subs	r2, r7, #4
  403a94:	2a24      	cmp	r2, #36	; 0x24
  403a96:	60c1      	str	r1, [r0, #12]
  403a98:	6088      	str	r0, [r1, #8]
  403a9a:	d9d8      	bls.n	403a4e <_realloc_r+0x16e>
  403a9c:	4621      	mov	r1, r4
  403a9e:	4628      	mov	r0, r5
  403aa0:	461f      	mov	r7, r3
  403aa2:	46d1      	mov	r9, sl
  403aa4:	f7ff feb4 	bl	403810 <memmove>
  403aa8:	e77a      	b.n	4039a0 <_realloc_r+0xc0>
  403aaa:	6841      	ldr	r1, [r0, #4]
  403aac:	f106 0010 	add.w	r0, r6, #16
  403ab0:	f021 0b03 	bic.w	fp, r1, #3
  403ab4:	44bb      	add	fp, r7
  403ab6:	4583      	cmp	fp, r0
  403ab8:	da58      	bge.n	403b6c <_realloc_r+0x28c>
  403aba:	f01e 0f01 	tst.w	lr, #1
  403abe:	f47f af3c 	bne.w	40393a <_realloc_r+0x5a>
  403ac2:	f854 1c08 	ldr.w	r1, [r4, #-8]
  403ac6:	eba9 0a01 	sub.w	sl, r9, r1
  403aca:	f8da 1004 	ldr.w	r1, [sl, #4]
  403ace:	f021 0103 	bic.w	r1, r1, #3
  403ad2:	448b      	add	fp, r1
  403ad4:	4558      	cmp	r0, fp
  403ad6:	dcd3      	bgt.n	403a80 <_realloc_r+0x1a0>
  403ad8:	4655      	mov	r5, sl
  403ada:	f8da 100c 	ldr.w	r1, [sl, #12]
  403ade:	f855 0f08 	ldr.w	r0, [r5, #8]!
  403ae2:	1f3a      	subs	r2, r7, #4
  403ae4:	2a24      	cmp	r2, #36	; 0x24
  403ae6:	60c1      	str	r1, [r0, #12]
  403ae8:	6088      	str	r0, [r1, #8]
  403aea:	f200 808d 	bhi.w	403c08 <_realloc_r+0x328>
  403aee:	2a13      	cmp	r2, #19
  403af0:	f240 8087 	bls.w	403c02 <_realloc_r+0x322>
  403af4:	6821      	ldr	r1, [r4, #0]
  403af6:	2a1b      	cmp	r2, #27
  403af8:	f8ca 1008 	str.w	r1, [sl, #8]
  403afc:	6861      	ldr	r1, [r4, #4]
  403afe:	f8ca 100c 	str.w	r1, [sl, #12]
  403b02:	f200 8088 	bhi.w	403c16 <_realloc_r+0x336>
  403b06:	f104 0108 	add.w	r1, r4, #8
  403b0a:	f10a 0210 	add.w	r2, sl, #16
  403b0e:	6808      	ldr	r0, [r1, #0]
  403b10:	6010      	str	r0, [r2, #0]
  403b12:	6848      	ldr	r0, [r1, #4]
  403b14:	6050      	str	r0, [r2, #4]
  403b16:	6889      	ldr	r1, [r1, #8]
  403b18:	6091      	str	r1, [r2, #8]
  403b1a:	ebab 0206 	sub.w	r2, fp, r6
  403b1e:	eb0a 0106 	add.w	r1, sl, r6
  403b22:	f042 0201 	orr.w	r2, r2, #1
  403b26:	6099      	str	r1, [r3, #8]
  403b28:	604a      	str	r2, [r1, #4]
  403b2a:	f8da 3004 	ldr.w	r3, [sl, #4]
  403b2e:	4640      	mov	r0, r8
  403b30:	f003 0301 	and.w	r3, r3, #1
  403b34:	431e      	orrs	r6, r3
  403b36:	f8ca 6004 	str.w	r6, [sl, #4]
  403b3a:	f7ff fecf 	bl	4038dc <__malloc_unlock>
  403b3e:	e742      	b.n	4039c6 <_realloc_r+0xe6>
  403b40:	6823      	ldr	r3, [r4, #0]
  403b42:	2a1b      	cmp	r2, #27
  403b44:	6003      	str	r3, [r0, #0]
  403b46:	6863      	ldr	r3, [r4, #4]
  403b48:	6043      	str	r3, [r0, #4]
  403b4a:	d827      	bhi.n	403b9c <_realloc_r+0x2bc>
  403b4c:	f100 0308 	add.w	r3, r0, #8
  403b50:	f104 0208 	add.w	r2, r4, #8
  403b54:	e70b      	b.n	40396e <_realloc_r+0x8e>
  403b56:	4620      	mov	r0, r4
  403b58:	462a      	mov	r2, r5
  403b5a:	6801      	ldr	r1, [r0, #0]
  403b5c:	461f      	mov	r7, r3
  403b5e:	6011      	str	r1, [r2, #0]
  403b60:	6841      	ldr	r1, [r0, #4]
  403b62:	46d1      	mov	r9, sl
  403b64:	6051      	str	r1, [r2, #4]
  403b66:	6883      	ldr	r3, [r0, #8]
  403b68:	6093      	str	r3, [r2, #8]
  403b6a:	e719      	b.n	4039a0 <_realloc_r+0xc0>
  403b6c:	ebab 0b06 	sub.w	fp, fp, r6
  403b70:	eb09 0106 	add.w	r1, r9, r6
  403b74:	f04b 0201 	orr.w	r2, fp, #1
  403b78:	6099      	str	r1, [r3, #8]
  403b7a:	604a      	str	r2, [r1, #4]
  403b7c:	f854 3c04 	ldr.w	r3, [r4, #-4]
  403b80:	4640      	mov	r0, r8
  403b82:	f003 0301 	and.w	r3, r3, #1
  403b86:	431e      	orrs	r6, r3
  403b88:	f844 6c04 	str.w	r6, [r4, #-4]
  403b8c:	f7ff fea6 	bl	4038dc <__malloc_unlock>
  403b90:	4625      	mov	r5, r4
  403b92:	e718      	b.n	4039c6 <_realloc_r+0xe6>
  403b94:	4621      	mov	r1, r4
  403b96:	f7ff fe3b 	bl	403810 <memmove>
  403b9a:	e6ee      	b.n	40397a <_realloc_r+0x9a>
  403b9c:	68a3      	ldr	r3, [r4, #8]
  403b9e:	2a24      	cmp	r2, #36	; 0x24
  403ba0:	6083      	str	r3, [r0, #8]
  403ba2:	68e3      	ldr	r3, [r4, #12]
  403ba4:	60c3      	str	r3, [r0, #12]
  403ba6:	d018      	beq.n	403bda <_realloc_r+0x2fa>
  403ba8:	f100 0310 	add.w	r3, r0, #16
  403bac:	f104 0210 	add.w	r2, r4, #16
  403bb0:	e6dd      	b.n	40396e <_realloc_r+0x8e>
  403bb2:	f850 3c04 	ldr.w	r3, [r0, #-4]
  403bb6:	4625      	mov	r5, r4
  403bb8:	f023 0303 	bic.w	r3, r3, #3
  403bbc:	441f      	add	r7, r3
  403bbe:	e6ef      	b.n	4039a0 <_realloc_r+0xc0>
  403bc0:	68a1      	ldr	r1, [r4, #8]
  403bc2:	2a24      	cmp	r2, #36	; 0x24
  403bc4:	f8ca 1010 	str.w	r1, [sl, #16]
  403bc8:	68e1      	ldr	r1, [r4, #12]
  403bca:	f8ca 1014 	str.w	r1, [sl, #20]
  403bce:	d00d      	beq.n	403bec <_realloc_r+0x30c>
  403bd0:	f104 0010 	add.w	r0, r4, #16
  403bd4:	f10a 0218 	add.w	r2, sl, #24
  403bd8:	e7bf      	b.n	403b5a <_realloc_r+0x27a>
  403bda:	6922      	ldr	r2, [r4, #16]
  403bdc:	f100 0318 	add.w	r3, r0, #24
  403be0:	6102      	str	r2, [r0, #16]
  403be2:	6961      	ldr	r1, [r4, #20]
  403be4:	f104 0218 	add.w	r2, r4, #24
  403be8:	6141      	str	r1, [r0, #20]
  403bea:	e6c0      	b.n	40396e <_realloc_r+0x8e>
  403bec:	6922      	ldr	r2, [r4, #16]
  403bee:	f104 0018 	add.w	r0, r4, #24
  403bf2:	f8ca 2018 	str.w	r2, [sl, #24]
  403bf6:	6961      	ldr	r1, [r4, #20]
  403bf8:	f10a 0220 	add.w	r2, sl, #32
  403bfc:	f8ca 101c 	str.w	r1, [sl, #28]
  403c00:	e7ab      	b.n	403b5a <_realloc_r+0x27a>
  403c02:	4621      	mov	r1, r4
  403c04:	462a      	mov	r2, r5
  403c06:	e782      	b.n	403b0e <_realloc_r+0x22e>
  403c08:	4621      	mov	r1, r4
  403c0a:	4628      	mov	r0, r5
  403c0c:	9301      	str	r3, [sp, #4]
  403c0e:	f7ff fdff 	bl	403810 <memmove>
  403c12:	9b01      	ldr	r3, [sp, #4]
  403c14:	e781      	b.n	403b1a <_realloc_r+0x23a>
  403c16:	68a1      	ldr	r1, [r4, #8]
  403c18:	2a24      	cmp	r2, #36	; 0x24
  403c1a:	f8ca 1010 	str.w	r1, [sl, #16]
  403c1e:	68e1      	ldr	r1, [r4, #12]
  403c20:	f8ca 1014 	str.w	r1, [sl, #20]
  403c24:	d006      	beq.n	403c34 <_realloc_r+0x354>
  403c26:	f104 0110 	add.w	r1, r4, #16
  403c2a:	f10a 0218 	add.w	r2, sl, #24
  403c2e:	e76e      	b.n	403b0e <_realloc_r+0x22e>
  403c30:	200006a4 	.word	0x200006a4
  403c34:	6922      	ldr	r2, [r4, #16]
  403c36:	f104 0118 	add.w	r1, r4, #24
  403c3a:	f8ca 2018 	str.w	r2, [sl, #24]
  403c3e:	6960      	ldr	r0, [r4, #20]
  403c40:	f10a 0220 	add.w	r2, sl, #32
  403c44:	f8ca 001c 	str.w	r0, [sl, #28]
  403c48:	e761      	b.n	403b0e <_realloc_r+0x22e>
  403c4a:	bf00      	nop

00403c4c <_sbrk_r>:
  403c4c:	b538      	push	{r3, r4, r5, lr}
  403c4e:	2300      	movs	r3, #0
  403c50:	4c06      	ldr	r4, [pc, #24]	; (403c6c <_sbrk_r+0x20>)
  403c52:	4605      	mov	r5, r0
  403c54:	4608      	mov	r0, r1
  403c56:	6023      	str	r3, [r4, #0]
  403c58:	f7fd f9be 	bl	400fd8 <_sbrk>
  403c5c:	1c43      	adds	r3, r0, #1
  403c5e:	d000      	beq.n	403c62 <_sbrk_r+0x16>
  403c60:	bd38      	pop	{r3, r4, r5, pc}
  403c62:	6823      	ldr	r3, [r4, #0]
  403c64:	2b00      	cmp	r3, #0
  403c66:	d0fb      	beq.n	403c60 <_sbrk_r+0x14>
  403c68:	602b      	str	r3, [r5, #0]
  403c6a:	bd38      	pop	{r3, r4, r5, pc}
  403c6c:	20000b90 	.word	0x20000b90

00403c70 <__sread>:
  403c70:	b510      	push	{r4, lr}
  403c72:	460c      	mov	r4, r1
  403c74:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
  403c78:	f000 f9c6 	bl	404008 <_read_r>
  403c7c:	2800      	cmp	r0, #0
  403c7e:	db03      	blt.n	403c88 <__sread+0x18>
  403c80:	6d23      	ldr	r3, [r4, #80]	; 0x50
  403c82:	4403      	add	r3, r0
  403c84:	6523      	str	r3, [r4, #80]	; 0x50
  403c86:	bd10      	pop	{r4, pc}
  403c88:	89a3      	ldrh	r3, [r4, #12]
  403c8a:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
  403c8e:	81a3      	strh	r3, [r4, #12]
  403c90:	bd10      	pop	{r4, pc}
  403c92:	bf00      	nop

00403c94 <__swrite>:
  403c94:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  403c98:	460c      	mov	r4, r1
  403c9a:	f9b1 100c 	ldrsh.w	r1, [r1, #12]
  403c9e:	461f      	mov	r7, r3
  403ca0:	05cb      	lsls	r3, r1, #23
  403ca2:	4616      	mov	r6, r2
  403ca4:	4605      	mov	r5, r0
  403ca6:	d507      	bpl.n	403cb8 <__swrite+0x24>
  403ca8:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
  403cac:	2302      	movs	r3, #2
  403cae:	2200      	movs	r2, #0
  403cb0:	f000 f994 	bl	403fdc <_lseek_r>
  403cb4:	f9b4 100c 	ldrsh.w	r1, [r4, #12]
  403cb8:	f421 5180 	bic.w	r1, r1, #4096	; 0x1000
  403cbc:	81a1      	strh	r1, [r4, #12]
  403cbe:	463b      	mov	r3, r7
  403cc0:	4632      	mov	r2, r6
  403cc2:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
  403cc6:	4628      	mov	r0, r5
  403cc8:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
  403ccc:	f000 b8a2 	b.w	403e14 <_write_r>

00403cd0 <__sseek>:
  403cd0:	b510      	push	{r4, lr}
  403cd2:	460c      	mov	r4, r1
  403cd4:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
  403cd8:	f000 f980 	bl	403fdc <_lseek_r>
  403cdc:	89a3      	ldrh	r3, [r4, #12]
  403cde:	1c42      	adds	r2, r0, #1
  403ce0:	bf0e      	itee	eq
  403ce2:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
  403ce6:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
  403cea:	6520      	strne	r0, [r4, #80]	; 0x50
  403cec:	81a3      	strh	r3, [r4, #12]
  403cee:	bd10      	pop	{r4, pc}

00403cf0 <__sclose>:
  403cf0:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
  403cf4:	f000 b8fa 	b.w	403eec <_close_r>

00403cf8 <__swbuf_r>:
  403cf8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  403cfa:	460d      	mov	r5, r1
  403cfc:	4614      	mov	r4, r2
  403cfe:	4606      	mov	r6, r0
  403d00:	b110      	cbz	r0, 403d08 <__swbuf_r+0x10>
  403d02:	6b83      	ldr	r3, [r0, #56]	; 0x38
  403d04:	2b00      	cmp	r3, #0
  403d06:	d04b      	beq.n	403da0 <__swbuf_r+0xa8>
  403d08:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
  403d0c:	69a3      	ldr	r3, [r4, #24]
  403d0e:	b291      	uxth	r1, r2
  403d10:	0708      	lsls	r0, r1, #28
  403d12:	60a3      	str	r3, [r4, #8]
  403d14:	d539      	bpl.n	403d8a <__swbuf_r+0x92>
  403d16:	6923      	ldr	r3, [r4, #16]
  403d18:	2b00      	cmp	r3, #0
  403d1a:	d036      	beq.n	403d8a <__swbuf_r+0x92>
  403d1c:	b2ed      	uxtb	r5, r5
  403d1e:	0489      	lsls	r1, r1, #18
  403d20:	462f      	mov	r7, r5
  403d22:	d515      	bpl.n	403d50 <__swbuf_r+0x58>
  403d24:	6822      	ldr	r2, [r4, #0]
  403d26:	6961      	ldr	r1, [r4, #20]
  403d28:	1ad3      	subs	r3, r2, r3
  403d2a:	428b      	cmp	r3, r1
  403d2c:	da1c      	bge.n	403d68 <__swbuf_r+0x70>
  403d2e:	3301      	adds	r3, #1
  403d30:	68a1      	ldr	r1, [r4, #8]
  403d32:	1c50      	adds	r0, r2, #1
  403d34:	3901      	subs	r1, #1
  403d36:	60a1      	str	r1, [r4, #8]
  403d38:	6020      	str	r0, [r4, #0]
  403d3a:	7015      	strb	r5, [r2, #0]
  403d3c:	6962      	ldr	r2, [r4, #20]
  403d3e:	429a      	cmp	r2, r3
  403d40:	d01a      	beq.n	403d78 <__swbuf_r+0x80>
  403d42:	89a3      	ldrh	r3, [r4, #12]
  403d44:	07db      	lsls	r3, r3, #31
  403d46:	d501      	bpl.n	403d4c <__swbuf_r+0x54>
  403d48:	2d0a      	cmp	r5, #10
  403d4a:	d015      	beq.n	403d78 <__swbuf_r+0x80>
  403d4c:	4638      	mov	r0, r7
  403d4e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  403d50:	6e61      	ldr	r1, [r4, #100]	; 0x64
  403d52:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
  403d56:	f421 5100 	bic.w	r1, r1, #8192	; 0x2000
  403d5a:	81a2      	strh	r2, [r4, #12]
  403d5c:	6822      	ldr	r2, [r4, #0]
  403d5e:	6661      	str	r1, [r4, #100]	; 0x64
  403d60:	6961      	ldr	r1, [r4, #20]
  403d62:	1ad3      	subs	r3, r2, r3
  403d64:	428b      	cmp	r3, r1
  403d66:	dbe2      	blt.n	403d2e <__swbuf_r+0x36>
  403d68:	4621      	mov	r1, r4
  403d6a:	4630      	mov	r0, r6
  403d6c:	f7fe fd66 	bl	40283c <_fflush_r>
  403d70:	b940      	cbnz	r0, 403d84 <__swbuf_r+0x8c>
  403d72:	2301      	movs	r3, #1
  403d74:	6822      	ldr	r2, [r4, #0]
  403d76:	e7db      	b.n	403d30 <__swbuf_r+0x38>
  403d78:	4621      	mov	r1, r4
  403d7a:	4630      	mov	r0, r6
  403d7c:	f7fe fd5e 	bl	40283c <_fflush_r>
  403d80:	2800      	cmp	r0, #0
  403d82:	d0e3      	beq.n	403d4c <__swbuf_r+0x54>
  403d84:	f04f 37ff 	mov.w	r7, #4294967295
  403d88:	e7e0      	b.n	403d4c <__swbuf_r+0x54>
  403d8a:	4621      	mov	r1, r4
  403d8c:	4630      	mov	r0, r6
  403d8e:	f7fe fc45 	bl	40261c <__swsetup_r>
  403d92:	2800      	cmp	r0, #0
  403d94:	d1f6      	bne.n	403d84 <__swbuf_r+0x8c>
  403d96:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
  403d9a:	6923      	ldr	r3, [r4, #16]
  403d9c:	b291      	uxth	r1, r2
  403d9e:	e7bd      	b.n	403d1c <__swbuf_r+0x24>
  403da0:	f7fe fde0 	bl	402964 <__sinit>
  403da4:	e7b0      	b.n	403d08 <__swbuf_r+0x10>
  403da6:	bf00      	nop

00403da8 <_wcrtomb_r>:
  403da8:	b5f0      	push	{r4, r5, r6, r7, lr}
  403daa:	4606      	mov	r6, r0
  403dac:	b085      	sub	sp, #20
  403dae:	461f      	mov	r7, r3
  403db0:	b189      	cbz	r1, 403dd6 <_wcrtomb_r+0x2e>
  403db2:	4c10      	ldr	r4, [pc, #64]	; (403df4 <_wcrtomb_r+0x4c>)
  403db4:	4d10      	ldr	r5, [pc, #64]	; (403df8 <_wcrtomb_r+0x50>)
  403db6:	6824      	ldr	r4, [r4, #0]
  403db8:	6b64      	ldr	r4, [r4, #52]	; 0x34
  403dba:	2c00      	cmp	r4, #0
  403dbc:	bf08      	it	eq
  403dbe:	462c      	moveq	r4, r5
  403dc0:	f8d4 40e0 	ldr.w	r4, [r4, #224]	; 0xe0
  403dc4:	47a0      	blx	r4
  403dc6:	1c43      	adds	r3, r0, #1
  403dc8:	d103      	bne.n	403dd2 <_wcrtomb_r+0x2a>
  403dca:	2200      	movs	r2, #0
  403dcc:	238a      	movs	r3, #138	; 0x8a
  403dce:	603a      	str	r2, [r7, #0]
  403dd0:	6033      	str	r3, [r6, #0]
  403dd2:	b005      	add	sp, #20
  403dd4:	bdf0      	pop	{r4, r5, r6, r7, pc}
  403dd6:	460c      	mov	r4, r1
  403dd8:	4a06      	ldr	r2, [pc, #24]	; (403df4 <_wcrtomb_r+0x4c>)
  403dda:	4d07      	ldr	r5, [pc, #28]	; (403df8 <_wcrtomb_r+0x50>)
  403ddc:	6811      	ldr	r1, [r2, #0]
  403dde:	4622      	mov	r2, r4
  403de0:	6b4c      	ldr	r4, [r1, #52]	; 0x34
  403de2:	a901      	add	r1, sp, #4
  403de4:	2c00      	cmp	r4, #0
  403de6:	bf08      	it	eq
  403de8:	462c      	moveq	r4, r5
  403dea:	f8d4 40e0 	ldr.w	r4, [r4, #224]	; 0xe0
  403dee:	47a0      	blx	r4
  403df0:	e7e9      	b.n	403dc6 <_wcrtomb_r+0x1e>
  403df2:	bf00      	nop
  403df4:	20000108 	.word	0x20000108
  403df8:	20000538 	.word	0x20000538

00403dfc <__ascii_wctomb>:
  403dfc:	b119      	cbz	r1, 403e06 <__ascii_wctomb+0xa>
  403dfe:	2aff      	cmp	r2, #255	; 0xff
  403e00:	d803      	bhi.n	403e0a <__ascii_wctomb+0xe>
  403e02:	700a      	strb	r2, [r1, #0]
  403e04:	2101      	movs	r1, #1
  403e06:	4608      	mov	r0, r1
  403e08:	4770      	bx	lr
  403e0a:	238a      	movs	r3, #138	; 0x8a
  403e0c:	f04f 31ff 	mov.w	r1, #4294967295
  403e10:	6003      	str	r3, [r0, #0]
  403e12:	e7f8      	b.n	403e06 <__ascii_wctomb+0xa>

00403e14 <_write_r>:
  403e14:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  403e16:	460e      	mov	r6, r1
  403e18:	2500      	movs	r5, #0
  403e1a:	4c08      	ldr	r4, [pc, #32]	; (403e3c <_write_r+0x28>)
  403e1c:	4611      	mov	r1, r2
  403e1e:	4607      	mov	r7, r0
  403e20:	461a      	mov	r2, r3
  403e22:	4630      	mov	r0, r6
  403e24:	6025      	str	r5, [r4, #0]
  403e26:	f7fc f9b7 	bl	400198 <_write>
  403e2a:	1c43      	adds	r3, r0, #1
  403e2c:	d000      	beq.n	403e30 <_write_r+0x1c>
  403e2e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  403e30:	6823      	ldr	r3, [r4, #0]
  403e32:	2b00      	cmp	r3, #0
  403e34:	d0fb      	beq.n	403e2e <_write_r+0x1a>
  403e36:	603b      	str	r3, [r7, #0]
  403e38:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  403e3a:	bf00      	nop
  403e3c:	20000b90 	.word	0x20000b90

00403e40 <__register_exitproc>:
  403e40:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
  403e44:	4c27      	ldr	r4, [pc, #156]	; (403ee4 <__register_exitproc+0xa4>)
  403e46:	4607      	mov	r7, r0
  403e48:	6826      	ldr	r6, [r4, #0]
  403e4a:	4688      	mov	r8, r1
  403e4c:	f8d6 4148 	ldr.w	r4, [r6, #328]	; 0x148
  403e50:	4692      	mov	sl, r2
  403e52:	4699      	mov	r9, r3
  403e54:	2c00      	cmp	r4, #0
  403e56:	d03c      	beq.n	403ed2 <__register_exitproc+0x92>
  403e58:	6865      	ldr	r5, [r4, #4]
  403e5a:	2d1f      	cmp	r5, #31
  403e5c:	dc1a      	bgt.n	403e94 <__register_exitproc+0x54>
  403e5e:	f105 0e01 	add.w	lr, r5, #1
  403e62:	b17f      	cbz	r7, 403e84 <__register_exitproc+0x44>
  403e64:	2001      	movs	r0, #1
  403e66:	eb04 0385 	add.w	r3, r4, r5, lsl #2
  403e6a:	f8c3 a088 	str.w	sl, [r3, #136]	; 0x88
  403e6e:	f8d4 1188 	ldr.w	r1, [r4, #392]	; 0x188
  403e72:	fa00 f205 	lsl.w	r2, r0, r5
  403e76:	4311      	orrs	r1, r2
  403e78:	2f02      	cmp	r7, #2
  403e7a:	f8c4 1188 	str.w	r1, [r4, #392]	; 0x188
  403e7e:	f8c3 9108 	str.w	r9, [r3, #264]	; 0x108
  403e82:	d020      	beq.n	403ec6 <__register_exitproc+0x86>
  403e84:	3502      	adds	r5, #2
  403e86:	f8c4 e004 	str.w	lr, [r4, #4]
  403e8a:	2000      	movs	r0, #0
  403e8c:	f844 8025 	str.w	r8, [r4, r5, lsl #2]
  403e90:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  403e94:	4b14      	ldr	r3, [pc, #80]	; (403ee8 <__register_exitproc+0xa8>)
  403e96:	b30b      	cbz	r3, 403edc <__register_exitproc+0x9c>
  403e98:	f44f 70c8 	mov.w	r0, #400	; 0x190
  403e9c:	f7ff f93c 	bl	403118 <malloc>
  403ea0:	4604      	mov	r4, r0
  403ea2:	b1d8      	cbz	r0, 403edc <__register_exitproc+0x9c>
  403ea4:	2000      	movs	r0, #0
  403ea6:	f8d6 3148 	ldr.w	r3, [r6, #328]	; 0x148
  403eaa:	f04f 0e01 	mov.w	lr, #1
  403eae:	6060      	str	r0, [r4, #4]
  403eb0:	6023      	str	r3, [r4, #0]
  403eb2:	4605      	mov	r5, r0
  403eb4:	f8c6 4148 	str.w	r4, [r6, #328]	; 0x148
  403eb8:	f8c4 0188 	str.w	r0, [r4, #392]	; 0x188
  403ebc:	f8c4 018c 	str.w	r0, [r4, #396]	; 0x18c
  403ec0:	2f00      	cmp	r7, #0
  403ec2:	d0df      	beq.n	403e84 <__register_exitproc+0x44>
  403ec4:	e7ce      	b.n	403e64 <__register_exitproc+0x24>
  403ec6:	f8d4 318c 	ldr.w	r3, [r4, #396]	; 0x18c
  403eca:	431a      	orrs	r2, r3
  403ecc:	f8c4 218c 	str.w	r2, [r4, #396]	; 0x18c
  403ed0:	e7d8      	b.n	403e84 <__register_exitproc+0x44>
  403ed2:	f506 74a6 	add.w	r4, r6, #332	; 0x14c
  403ed6:	f8c6 4148 	str.w	r4, [r6, #328]	; 0x148
  403eda:	e7bd      	b.n	403e58 <__register_exitproc+0x18>
  403edc:	f04f 30ff 	mov.w	r0, #4294967295
  403ee0:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  403ee4:	00404464 	.word	0x00404464
  403ee8:	00403119 	.word	0x00403119

00403eec <_close_r>:
  403eec:	b538      	push	{r3, r4, r5, lr}
  403eee:	2300      	movs	r3, #0
  403ef0:	4c06      	ldr	r4, [pc, #24]	; (403f0c <_close_r+0x20>)
  403ef2:	4605      	mov	r5, r0
  403ef4:	4608      	mov	r0, r1
  403ef6:	6023      	str	r3, [r4, #0]
  403ef8:	f7fd f88a 	bl	401010 <_close>
  403efc:	1c43      	adds	r3, r0, #1
  403efe:	d000      	beq.n	403f02 <_close_r+0x16>
  403f00:	bd38      	pop	{r3, r4, r5, pc}
  403f02:	6823      	ldr	r3, [r4, #0]
  403f04:	2b00      	cmp	r3, #0
  403f06:	d0fb      	beq.n	403f00 <_close_r+0x14>
  403f08:	602b      	str	r3, [r5, #0]
  403f0a:	bd38      	pop	{r3, r4, r5, pc}
  403f0c:	20000b90 	.word	0x20000b90

00403f10 <_fclose_r>:
  403f10:	b570      	push	{r4, r5, r6, lr}
  403f12:	b139      	cbz	r1, 403f24 <_fclose_r+0x14>
  403f14:	4605      	mov	r5, r0
  403f16:	460c      	mov	r4, r1
  403f18:	b108      	cbz	r0, 403f1e <_fclose_r+0xe>
  403f1a:	6b83      	ldr	r3, [r0, #56]	; 0x38
  403f1c:	b383      	cbz	r3, 403f80 <_fclose_r+0x70>
  403f1e:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  403f22:	b913      	cbnz	r3, 403f2a <_fclose_r+0x1a>
  403f24:	2600      	movs	r6, #0
  403f26:	4630      	mov	r0, r6
  403f28:	bd70      	pop	{r4, r5, r6, pc}
  403f2a:	4621      	mov	r1, r4
  403f2c:	4628      	mov	r0, r5
  403f2e:	f7fe fbe9 	bl	402704 <__sflush_r>
  403f32:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
  403f34:	4606      	mov	r6, r0
  403f36:	b133      	cbz	r3, 403f46 <_fclose_r+0x36>
  403f38:	69e1      	ldr	r1, [r4, #28]
  403f3a:	4628      	mov	r0, r5
  403f3c:	4798      	blx	r3
  403f3e:	2800      	cmp	r0, #0
  403f40:	bfb8      	it	lt
  403f42:	f04f 36ff 	movlt.w	r6, #4294967295
  403f46:	89a3      	ldrh	r3, [r4, #12]
  403f48:	061b      	lsls	r3, r3, #24
  403f4a:	d41c      	bmi.n	403f86 <_fclose_r+0x76>
  403f4c:	6b21      	ldr	r1, [r4, #48]	; 0x30
  403f4e:	b141      	cbz	r1, 403f62 <_fclose_r+0x52>
  403f50:	f104 0340 	add.w	r3, r4, #64	; 0x40
  403f54:	4299      	cmp	r1, r3
  403f56:	d002      	beq.n	403f5e <_fclose_r+0x4e>
  403f58:	4628      	mov	r0, r5
  403f5a:	f7fe fdd5 	bl	402b08 <_free_r>
  403f5e:	2300      	movs	r3, #0
  403f60:	6323      	str	r3, [r4, #48]	; 0x30
  403f62:	6c61      	ldr	r1, [r4, #68]	; 0x44
  403f64:	b121      	cbz	r1, 403f70 <_fclose_r+0x60>
  403f66:	4628      	mov	r0, r5
  403f68:	f7fe fdce 	bl	402b08 <_free_r>
  403f6c:	2300      	movs	r3, #0
  403f6e:	6463      	str	r3, [r4, #68]	; 0x44
  403f70:	f7fe fcfe 	bl	402970 <__sfp_lock_acquire>
  403f74:	2300      	movs	r3, #0
  403f76:	81a3      	strh	r3, [r4, #12]
  403f78:	f7fe fcfc 	bl	402974 <__sfp_lock_release>
  403f7c:	4630      	mov	r0, r6
  403f7e:	bd70      	pop	{r4, r5, r6, pc}
  403f80:	f7fe fcf0 	bl	402964 <__sinit>
  403f84:	e7cb      	b.n	403f1e <_fclose_r+0xe>
  403f86:	6921      	ldr	r1, [r4, #16]
  403f88:	4628      	mov	r0, r5
  403f8a:	f7fe fdbd 	bl	402b08 <_free_r>
  403f8e:	e7dd      	b.n	403f4c <_fclose_r+0x3c>

00403f90 <_fstat_r>:
  403f90:	b570      	push	{r4, r5, r6, lr}
  403f92:	460d      	mov	r5, r1
  403f94:	2300      	movs	r3, #0
  403f96:	4c07      	ldr	r4, [pc, #28]	; (403fb4 <_fstat_r+0x24>)
  403f98:	4606      	mov	r6, r0
  403f9a:	4611      	mov	r1, r2
  403f9c:	4628      	mov	r0, r5
  403f9e:	6023      	str	r3, [r4, #0]
  403fa0:	f7fd f839 	bl	401016 <_fstat>
  403fa4:	1c43      	adds	r3, r0, #1
  403fa6:	d000      	beq.n	403faa <_fstat_r+0x1a>
  403fa8:	bd70      	pop	{r4, r5, r6, pc}
  403faa:	6823      	ldr	r3, [r4, #0]
  403fac:	2b00      	cmp	r3, #0
  403fae:	d0fb      	beq.n	403fa8 <_fstat_r+0x18>
  403fb0:	6033      	str	r3, [r6, #0]
  403fb2:	bd70      	pop	{r4, r5, r6, pc}
  403fb4:	20000b90 	.word	0x20000b90

00403fb8 <_isatty_r>:
  403fb8:	b538      	push	{r3, r4, r5, lr}
  403fba:	2300      	movs	r3, #0
  403fbc:	4c06      	ldr	r4, [pc, #24]	; (403fd8 <_isatty_r+0x20>)
  403fbe:	4605      	mov	r5, r0
  403fc0:	4608      	mov	r0, r1
  403fc2:	6023      	str	r3, [r4, #0]
  403fc4:	f7fd f82c 	bl	401020 <_isatty>
  403fc8:	1c43      	adds	r3, r0, #1
  403fca:	d000      	beq.n	403fce <_isatty_r+0x16>
  403fcc:	bd38      	pop	{r3, r4, r5, pc}
  403fce:	6823      	ldr	r3, [r4, #0]
  403fd0:	2b00      	cmp	r3, #0
  403fd2:	d0fb      	beq.n	403fcc <_isatty_r+0x14>
  403fd4:	602b      	str	r3, [r5, #0]
  403fd6:	bd38      	pop	{r3, r4, r5, pc}
  403fd8:	20000b90 	.word	0x20000b90

00403fdc <_lseek_r>:
  403fdc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  403fde:	460e      	mov	r6, r1
  403fe0:	2500      	movs	r5, #0
  403fe2:	4c08      	ldr	r4, [pc, #32]	; (404004 <_lseek_r+0x28>)
  403fe4:	4611      	mov	r1, r2
  403fe6:	4607      	mov	r7, r0
  403fe8:	461a      	mov	r2, r3
  403fea:	4630      	mov	r0, r6
  403fec:	6025      	str	r5, [r4, #0]
  403fee:	f7fd f819 	bl	401024 <_lseek>
  403ff2:	1c43      	adds	r3, r0, #1
  403ff4:	d000      	beq.n	403ff8 <_lseek_r+0x1c>
  403ff6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  403ff8:	6823      	ldr	r3, [r4, #0]
  403ffa:	2b00      	cmp	r3, #0
  403ffc:	d0fb      	beq.n	403ff6 <_lseek_r+0x1a>
  403ffe:	603b      	str	r3, [r7, #0]
  404000:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  404002:	bf00      	nop
  404004:	20000b90 	.word	0x20000b90

00404008 <_read_r>:
  404008:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  40400a:	460e      	mov	r6, r1
  40400c:	2500      	movs	r5, #0
  40400e:	4c08      	ldr	r4, [pc, #32]	; (404030 <_read_r+0x28>)
  404010:	4611      	mov	r1, r2
  404012:	4607      	mov	r7, r0
  404014:	461a      	mov	r2, r3
  404016:	4630      	mov	r0, r6
  404018:	6025      	str	r5, [r4, #0]
  40401a:	f7fc f889 	bl	400130 <_read>
  40401e:	1c43      	adds	r3, r0, #1
  404020:	d000      	beq.n	404024 <_read_r+0x1c>
  404022:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  404024:	6823      	ldr	r3, [r4, #0]
  404026:	2b00      	cmp	r3, #0
  404028:	d0fb      	beq.n	404022 <_read_r+0x1a>
  40402a:	603b      	str	r3, [r7, #0]
  40402c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  40402e:	bf00      	nop
  404030:	20000b90 	.word	0x20000b90

00404034 <__aeabi_uldivmod>:
  404034:	b953      	cbnz	r3, 40404c <__aeabi_uldivmod+0x18>
  404036:	b94a      	cbnz	r2, 40404c <__aeabi_uldivmod+0x18>
  404038:	2900      	cmp	r1, #0
  40403a:	bf08      	it	eq
  40403c:	2800      	cmpeq	r0, #0
  40403e:	bf1c      	itt	ne
  404040:	f04f 31ff 	movne.w	r1, #4294967295
  404044:	f04f 30ff 	movne.w	r0, #4294967295
  404048:	f000 b97a 	b.w	404340 <__aeabi_idiv0>
  40404c:	f1ad 0c08 	sub.w	ip, sp, #8
  404050:	e96d ce04 	strd	ip, lr, [sp, #-16]!
  404054:	f000 f806 	bl	404064 <__udivmoddi4>
  404058:	f8dd e004 	ldr.w	lr, [sp, #4]
  40405c:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
  404060:	b004      	add	sp, #16
  404062:	4770      	bx	lr

00404064 <__udivmoddi4>:
  404064:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
  404068:	468c      	mov	ip, r1
  40406a:	460e      	mov	r6, r1
  40406c:	4604      	mov	r4, r0
  40406e:	9d08      	ldr	r5, [sp, #32]
  404070:	2b00      	cmp	r3, #0
  404072:	d150      	bne.n	404116 <__udivmoddi4+0xb2>
  404074:	428a      	cmp	r2, r1
  404076:	4617      	mov	r7, r2
  404078:	d96c      	bls.n	404154 <__udivmoddi4+0xf0>
  40407a:	fab2 fe82 	clz	lr, r2
  40407e:	f1be 0f00 	cmp.w	lr, #0
  404082:	d00b      	beq.n	40409c <__udivmoddi4+0x38>
  404084:	f1ce 0c20 	rsb	ip, lr, #32
  404088:	fa01 f60e 	lsl.w	r6, r1, lr
  40408c:	fa20 fc0c 	lsr.w	ip, r0, ip
  404090:	fa02 f70e 	lsl.w	r7, r2, lr
  404094:	ea4c 0c06 	orr.w	ip, ip, r6
  404098:	fa00 f40e 	lsl.w	r4, r0, lr
  40409c:	0c3a      	lsrs	r2, r7, #16
  40409e:	fbbc f9f2 	udiv	r9, ip, r2
  4040a2:	b2bb      	uxth	r3, r7
  4040a4:	fb02 cc19 	mls	ip, r2, r9, ip
  4040a8:	fb09 fa03 	mul.w	sl, r9, r3
  4040ac:	ea4f 4814 	mov.w	r8, r4, lsr #16
  4040b0:	ea48 460c 	orr.w	r6, r8, ip, lsl #16
  4040b4:	45b2      	cmp	sl, r6
  4040b6:	d90a      	bls.n	4040ce <__udivmoddi4+0x6a>
  4040b8:	19f6      	adds	r6, r6, r7
  4040ba:	f109 31ff 	add.w	r1, r9, #4294967295
  4040be:	f080 8125 	bcs.w	40430c <__udivmoddi4+0x2a8>
  4040c2:	45b2      	cmp	sl, r6
  4040c4:	f240 8122 	bls.w	40430c <__udivmoddi4+0x2a8>
  4040c8:	f1a9 0902 	sub.w	r9, r9, #2
  4040cc:	443e      	add	r6, r7
  4040ce:	eba6 060a 	sub.w	r6, r6, sl
  4040d2:	fbb6 f0f2 	udiv	r0, r6, r2
  4040d6:	fb02 6610 	mls	r6, r2, r0, r6
  4040da:	fb00 f303 	mul.w	r3, r0, r3
  4040de:	b2a4      	uxth	r4, r4
  4040e0:	ea44 4406 	orr.w	r4, r4, r6, lsl #16
  4040e4:	42a3      	cmp	r3, r4
  4040e6:	d909      	bls.n	4040fc <__udivmoddi4+0x98>
  4040e8:	19e4      	adds	r4, r4, r7
  4040ea:	f100 32ff 	add.w	r2, r0, #4294967295
  4040ee:	f080 810b 	bcs.w	404308 <__udivmoddi4+0x2a4>
  4040f2:	42a3      	cmp	r3, r4
  4040f4:	f240 8108 	bls.w	404308 <__udivmoddi4+0x2a4>
  4040f8:	3802      	subs	r0, #2
  4040fa:	443c      	add	r4, r7
  4040fc:	2100      	movs	r1, #0
  4040fe:	1ae4      	subs	r4, r4, r3
  404100:	ea40 4009 	orr.w	r0, r0, r9, lsl #16
  404104:	2d00      	cmp	r5, #0
  404106:	d062      	beq.n	4041ce <__udivmoddi4+0x16a>
  404108:	2300      	movs	r3, #0
  40410a:	fa24 f40e 	lsr.w	r4, r4, lr
  40410e:	602c      	str	r4, [r5, #0]
  404110:	606b      	str	r3, [r5, #4]
  404112:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  404116:	428b      	cmp	r3, r1
  404118:	d907      	bls.n	40412a <__udivmoddi4+0xc6>
  40411a:	2d00      	cmp	r5, #0
  40411c:	d055      	beq.n	4041ca <__udivmoddi4+0x166>
  40411e:	2100      	movs	r1, #0
  404120:	e885 0041 	stmia.w	r5, {r0, r6}
  404124:	4608      	mov	r0, r1
  404126:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  40412a:	fab3 f183 	clz	r1, r3
  40412e:	2900      	cmp	r1, #0
  404130:	f040 808f 	bne.w	404252 <__udivmoddi4+0x1ee>
  404134:	42b3      	cmp	r3, r6
  404136:	d302      	bcc.n	40413e <__udivmoddi4+0xda>
  404138:	4282      	cmp	r2, r0
  40413a:	f200 80fc 	bhi.w	404336 <__udivmoddi4+0x2d2>
  40413e:	1a84      	subs	r4, r0, r2
  404140:	eb66 0603 	sbc.w	r6, r6, r3
  404144:	2001      	movs	r0, #1
  404146:	46b4      	mov	ip, r6
  404148:	2d00      	cmp	r5, #0
  40414a:	d040      	beq.n	4041ce <__udivmoddi4+0x16a>
  40414c:	e885 1010 	stmia.w	r5, {r4, ip}
  404150:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  404154:	b912      	cbnz	r2, 40415c <__udivmoddi4+0xf8>
  404156:	2701      	movs	r7, #1
  404158:	fbb7 f7f2 	udiv	r7, r7, r2
  40415c:	fab7 fe87 	clz	lr, r7
  404160:	f1be 0f00 	cmp.w	lr, #0
  404164:	d135      	bne.n	4041d2 <__udivmoddi4+0x16e>
  404166:	2101      	movs	r1, #1
  404168:	1bf6      	subs	r6, r6, r7
  40416a:	ea4f 4c17 	mov.w	ip, r7, lsr #16
  40416e:	fa1f f887 	uxth.w	r8, r7
  404172:	fbb6 f2fc 	udiv	r2, r6, ip
  404176:	fb0c 6612 	mls	r6, ip, r2, r6
  40417a:	fb08 f002 	mul.w	r0, r8, r2
  40417e:	0c23      	lsrs	r3, r4, #16
  404180:	ea43 4606 	orr.w	r6, r3, r6, lsl #16
  404184:	42b0      	cmp	r0, r6
  404186:	d907      	bls.n	404198 <__udivmoddi4+0x134>
  404188:	19f6      	adds	r6, r6, r7
  40418a:	f102 33ff 	add.w	r3, r2, #4294967295
  40418e:	d202      	bcs.n	404196 <__udivmoddi4+0x132>
  404190:	42b0      	cmp	r0, r6
  404192:	f200 80d2 	bhi.w	40433a <__udivmoddi4+0x2d6>
  404196:	461a      	mov	r2, r3
  404198:	1a36      	subs	r6, r6, r0
  40419a:	fbb6 f0fc 	udiv	r0, r6, ip
  40419e:	fb0c 6610 	mls	r6, ip, r0, r6
  4041a2:	fb08 f800 	mul.w	r8, r8, r0
  4041a6:	b2a3      	uxth	r3, r4
  4041a8:	ea43 4406 	orr.w	r4, r3, r6, lsl #16
  4041ac:	45a0      	cmp	r8, r4
  4041ae:	d907      	bls.n	4041c0 <__udivmoddi4+0x15c>
  4041b0:	19e4      	adds	r4, r4, r7
  4041b2:	f100 33ff 	add.w	r3, r0, #4294967295
  4041b6:	d202      	bcs.n	4041be <__udivmoddi4+0x15a>
  4041b8:	45a0      	cmp	r8, r4
  4041ba:	f200 80b9 	bhi.w	404330 <__udivmoddi4+0x2cc>
  4041be:	4618      	mov	r0, r3
  4041c0:	eba4 0408 	sub.w	r4, r4, r8
  4041c4:	ea40 4002 	orr.w	r0, r0, r2, lsl #16
  4041c8:	e79c      	b.n	404104 <__udivmoddi4+0xa0>
  4041ca:	4629      	mov	r1, r5
  4041cc:	4628      	mov	r0, r5
  4041ce:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  4041d2:	fa07 f70e 	lsl.w	r7, r7, lr
  4041d6:	f1ce 0320 	rsb	r3, lr, #32
  4041da:	fa26 f203 	lsr.w	r2, r6, r3
  4041de:	ea4f 4c17 	mov.w	ip, r7, lsr #16
  4041e2:	fbb2 f1fc 	udiv	r1, r2, ip
  4041e6:	fa1f f887 	uxth.w	r8, r7
  4041ea:	fb0c 2211 	mls	r2, ip, r1, r2
  4041ee:	fa06 f60e 	lsl.w	r6, r6, lr
  4041f2:	fa20 f303 	lsr.w	r3, r0, r3
  4041f6:	fb01 f908 	mul.w	r9, r1, r8
  4041fa:	4333      	orrs	r3, r6
  4041fc:	0c1e      	lsrs	r6, r3, #16
  4041fe:	ea46 4602 	orr.w	r6, r6, r2, lsl #16
  404202:	45b1      	cmp	r9, r6
  404204:	fa00 f40e 	lsl.w	r4, r0, lr
  404208:	d909      	bls.n	40421e <__udivmoddi4+0x1ba>
  40420a:	19f6      	adds	r6, r6, r7
  40420c:	f101 32ff 	add.w	r2, r1, #4294967295
  404210:	f080 808c 	bcs.w	40432c <__udivmoddi4+0x2c8>
  404214:	45b1      	cmp	r9, r6
  404216:	f240 8089 	bls.w	40432c <__udivmoddi4+0x2c8>
  40421a:	3902      	subs	r1, #2
  40421c:	443e      	add	r6, r7
  40421e:	eba6 0609 	sub.w	r6, r6, r9
  404222:	fbb6 f0fc 	udiv	r0, r6, ip
  404226:	fb0c 6210 	mls	r2, ip, r0, r6
  40422a:	fb00 f908 	mul.w	r9, r0, r8
  40422e:	b29e      	uxth	r6, r3
  404230:	ea46 4602 	orr.w	r6, r6, r2, lsl #16
  404234:	45b1      	cmp	r9, r6
  404236:	d907      	bls.n	404248 <__udivmoddi4+0x1e4>
  404238:	19f6      	adds	r6, r6, r7
  40423a:	f100 33ff 	add.w	r3, r0, #4294967295
  40423e:	d271      	bcs.n	404324 <__udivmoddi4+0x2c0>
  404240:	45b1      	cmp	r9, r6
  404242:	d96f      	bls.n	404324 <__udivmoddi4+0x2c0>
  404244:	3802      	subs	r0, #2
  404246:	443e      	add	r6, r7
  404248:	eba6 0609 	sub.w	r6, r6, r9
  40424c:	ea40 4101 	orr.w	r1, r0, r1, lsl #16
  404250:	e78f      	b.n	404172 <__udivmoddi4+0x10e>
  404252:	f1c1 0720 	rsb	r7, r1, #32
  404256:	fa22 f807 	lsr.w	r8, r2, r7
  40425a:	408b      	lsls	r3, r1
  40425c:	ea48 0303 	orr.w	r3, r8, r3
  404260:	fa26 f407 	lsr.w	r4, r6, r7
  404264:	ea4f 4e13 	mov.w	lr, r3, lsr #16
  404268:	fbb4 f9fe 	udiv	r9, r4, lr
  40426c:	fa1f fc83 	uxth.w	ip, r3
  404270:	fb0e 4419 	mls	r4, lr, r9, r4
  404274:	408e      	lsls	r6, r1
  404276:	fa20 f807 	lsr.w	r8, r0, r7
  40427a:	fb09 fa0c 	mul.w	sl, r9, ip
  40427e:	ea48 0806 	orr.w	r8, r8, r6
  404282:	ea4f 4618 	mov.w	r6, r8, lsr #16
  404286:	ea46 4404 	orr.w	r4, r6, r4, lsl #16
  40428a:	45a2      	cmp	sl, r4
  40428c:	fa02 f201 	lsl.w	r2, r2, r1
  404290:	fa00 f601 	lsl.w	r6, r0, r1
  404294:	d908      	bls.n	4042a8 <__udivmoddi4+0x244>
  404296:	18e4      	adds	r4, r4, r3
  404298:	f109 30ff 	add.w	r0, r9, #4294967295
  40429c:	d244      	bcs.n	404328 <__udivmoddi4+0x2c4>
  40429e:	45a2      	cmp	sl, r4
  4042a0:	d942      	bls.n	404328 <__udivmoddi4+0x2c4>
  4042a2:	f1a9 0902 	sub.w	r9, r9, #2
  4042a6:	441c      	add	r4, r3
  4042a8:	eba4 040a 	sub.w	r4, r4, sl
  4042ac:	fbb4 f0fe 	udiv	r0, r4, lr
  4042b0:	fb0e 4410 	mls	r4, lr, r0, r4
  4042b4:	fb00 fc0c 	mul.w	ip, r0, ip
  4042b8:	fa1f f888 	uxth.w	r8, r8
  4042bc:	ea48 4404 	orr.w	r4, r8, r4, lsl #16
  4042c0:	45a4      	cmp	ip, r4
  4042c2:	d907      	bls.n	4042d4 <__udivmoddi4+0x270>
  4042c4:	18e4      	adds	r4, r4, r3
  4042c6:	f100 3eff 	add.w	lr, r0, #4294967295
  4042ca:	d229      	bcs.n	404320 <__udivmoddi4+0x2bc>
  4042cc:	45a4      	cmp	ip, r4
  4042ce:	d927      	bls.n	404320 <__udivmoddi4+0x2bc>
  4042d0:	3802      	subs	r0, #2
  4042d2:	441c      	add	r4, r3
  4042d4:	ea40 4009 	orr.w	r0, r0, r9, lsl #16
  4042d8:	fba0 8902 	umull	r8, r9, r0, r2
  4042dc:	eba4 0c0c 	sub.w	ip, r4, ip
  4042e0:	45cc      	cmp	ip, r9
  4042e2:	46c2      	mov	sl, r8
  4042e4:	46ce      	mov	lr, r9
  4042e6:	d315      	bcc.n	404314 <__udivmoddi4+0x2b0>
  4042e8:	d012      	beq.n	404310 <__udivmoddi4+0x2ac>
  4042ea:	b155      	cbz	r5, 404302 <__udivmoddi4+0x29e>
  4042ec:	ebb6 030a 	subs.w	r3, r6, sl
  4042f0:	eb6c 060e 	sbc.w	r6, ip, lr
  4042f4:	fa06 f707 	lsl.w	r7, r6, r7
  4042f8:	40cb      	lsrs	r3, r1
  4042fa:	431f      	orrs	r7, r3
  4042fc:	40ce      	lsrs	r6, r1
  4042fe:	602f      	str	r7, [r5, #0]
  404300:	606e      	str	r6, [r5, #4]
  404302:	2100      	movs	r1, #0
  404304:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  404308:	4610      	mov	r0, r2
  40430a:	e6f7      	b.n	4040fc <__udivmoddi4+0x98>
  40430c:	4689      	mov	r9, r1
  40430e:	e6de      	b.n	4040ce <__udivmoddi4+0x6a>
  404310:	4546      	cmp	r6, r8
  404312:	d2ea      	bcs.n	4042ea <__udivmoddi4+0x286>
  404314:	ebb8 0a02 	subs.w	sl, r8, r2
  404318:	eb69 0e03 	sbc.w	lr, r9, r3
  40431c:	3801      	subs	r0, #1
  40431e:	e7e4      	b.n	4042ea <__udivmoddi4+0x286>
  404320:	4670      	mov	r0, lr
  404322:	e7d7      	b.n	4042d4 <__udivmoddi4+0x270>
  404324:	4618      	mov	r0, r3
  404326:	e78f      	b.n	404248 <__udivmoddi4+0x1e4>
  404328:	4681      	mov	r9, r0
  40432a:	e7bd      	b.n	4042a8 <__udivmoddi4+0x244>
  40432c:	4611      	mov	r1, r2
  40432e:	e776      	b.n	40421e <__udivmoddi4+0x1ba>
  404330:	3802      	subs	r0, #2
  404332:	443c      	add	r4, r7
  404334:	e744      	b.n	4041c0 <__udivmoddi4+0x15c>
  404336:	4608      	mov	r0, r1
  404338:	e706      	b.n	404148 <__udivmoddi4+0xe4>
  40433a:	3a02      	subs	r2, #2
  40433c:	443e      	add	r6, r7
  40433e:	e72b      	b.n	404198 <__udivmoddi4+0x134>

00404340 <__aeabi_idiv0>:
  404340:	4770      	bx	lr
  404342:	bf00      	nop
  404344:	63657845 	.word	0x63657845
  404348:	6e617475 	.word	0x6e617475
  40434c:	4d206f64 	.word	0x4d206f64
  404350:	61686c61 	.word	0x61686c61
  404354:	20656420 	.word	0x20656420
  404358:	746e6f43 	.word	0x746e6f43
  40435c:	656c6f72 	.word	0x656c6f72
  404360:	00000a0d 	.word	0x00000a0d
  404364:	64616552 	.word	0x64616552
  404368:	6e657320 	.word	0x6e657320
  40436c:	21726f73 	.word	0x21726f73
  404370:	00000a0d 	.word	0x00000a0d
  404374:	204d5750 	.word	0x204d5750
  404378:	646e6148 	.word	0x646e6148
  40437c:	3a72656c 	.word	0x3a72656c
  404380:	0d752520 	.word	0x0d752520
  404384:	0000000a 	.word	0x0000000a
  404388:	746e6f43 	.word	0x746e6f43
  40438c:	6f646e61 	.word	0x6f646e61
  404390:	00000a0d 	.word	0x00000a0d
  404394:	666e6f43 	.word	0x666e6f43
  404398:	72756769 	.word	0x72756769
  40439c:	6f616361 	.word	0x6f616361
  4043a0:	6e655320 	.word	0x6e655320
  4043a4:	20726f73 	.word	0x20726f73
  4043a8:	20525349 	.word	0x20525349
  4043ac:	00000a0d 	.word	0x00000a0d
  4043b0:	656d6954 	.word	0x656d6954
  4043b4:	6f432072 	.word	0x6f432072
  4043b8:	6769666e 	.word	0x6769666e
  4043bc:	64617275 	.word	0x64617275
  4043c0:	6170206f 	.word	0x6170206f
  4043c4:	31206172 	.word	0x31206172
  4043c8:	736d3030 	.word	0x736d3030
  4043cc:	00000a0d 	.word	0x00000a0d
  4043d0:	656d6954 	.word	0x656d6954
  4043d4:	6f432072 	.word	0x6f432072
  4043d8:	6769666e 	.word	0x6769666e
  4043dc:	64617275 	.word	0x64617275
  4043e0:	6170206f 	.word	0x6170206f
  4043e4:	31206172 	.word	0x31206172
  4043e8:	0d737530 	.word	0x0d737530
  4043ec:	0000000a 	.word	0x0000000a
  4043f0:	69726550 	.word	0x69726550
  4043f4:	203a646f 	.word	0x203a646f
  4043f8:	2f207525 	.word	0x2f207525
  4043fc:	7564202f 	.word	0x7564202f
  404400:	203a7974 	.word	0x203a7974
  404404:	2f207525 	.word	0x2f207525
  404408:	6176202f 	.word	0x6176202f
  40440c:	3a65756c 	.word	0x3a65756c
  404410:	0d752520 	.word	0x0d752520
  404414:	0000000a 	.word	0x0000000a
  404418:	204d5750 	.word	0x204d5750
  40441c:	61647055 	.word	0x61647055
  404420:	203a6574 	.word	0x203a6574
  404424:	2f207525 	.word	0x2f207525
  404428:	6625202f 	.word	0x6625202f
  40442c:	00000a0d 	.word	0x00000a0d
  404430:	72746e45 	.word	0x72746e45
  404434:	5320756f 	.word	0x5320756f
  404438:	6f736e65 	.word	0x6f736e65
  40443c:	53492072 	.word	0x53492072
  404440:	0a0d2052 	.word	0x0a0d2052
  404444:	00000000 	.word	0x00000000
  404448:	63696e49 	.word	0x63696e49
  40444c:	696c6169 	.word	0x696c6169
  404450:	676e697a 	.word	0x676e697a
  404454:	61654220 	.word	0x61654220
  404458:	6142206d 	.word	0x6142206d
  40445c:	0a0d6c6c 	.word	0x0a0d6c6c
  404460:	00000000 	.word	0x00000000

00404464 <_global_impure_ptr>:
  404464:	20000110 33323130 37363534 42413938     ... 0123456789AB
  404474:	46454443 00000000 33323130 37363534     CDEF....01234567
  404484:	62613938 66656463 00000000 6c756e28     89abcdef....(nul
  404494:	0000296c                                l)..

00404498 <blanks.7202>:
  404498:	20202020 20202020 20202020 20202020                     

004044a8 <zeroes.7203>:
  4044a8:	30303030 30303030 30303030 30303030     0000000000000000
  4044b8:	00000043 49534f50 00000058 0000002e     C...POSIX.......

004044c8 <_ctype_>:
  4044c8:	20202000 20202020 28282020 20282828     .         ((((( 
  4044d8:	20202020 20202020 20202020 20202020                     
  4044e8:	10108820 10101010 10101010 10101010      ...............
  4044f8:	04040410 04040404 10040404 10101010     ................
  404508:	41411010 41414141 01010101 01010101     ..AAAAAA........
  404518:	01010101 01010101 01010101 10101010     ................
  404528:	42421010 42424242 02020202 02020202     ..BBBBBB........
  404538:	02020202 02020202 02020202 10101010     ................
  404548:	00000020 00000000 00000000 00000000      ...............
	...

004045cc <_init>:
  4045cc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  4045ce:	bf00      	nop
  4045d0:	bcf8      	pop	{r3, r4, r5, r6, r7}
  4045d2:	bc08      	pop	{r3}
  4045d4:	469e      	mov	lr, r3
  4045d6:	4770      	bx	lr

004045d8 <__init_array_start>:
  4045d8:	004026e5 	.word	0x004026e5

004045dc <__frame_dummy_init_array_entry>:
  4045dc:	004000e9                                ..@.

004045e0 <_fini>:
  4045e0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  4045e2:	bf00      	nop
  4045e4:	bcf8      	pop	{r3, r4, r5, r6, r7}
  4045e6:	bc08      	pop	{r3}
  4045e8:	469e      	mov	lr, r3
  4045ea:	4770      	bx	lr

004045ec <__fini_array_start>:
  4045ec:	004000c5 	.word	0x004000c5

Disassembly of section .relocate:

20000000 <portable_delay_cycles>:
RAMFUNC
void portable_delay_cycles(unsigned long n)
{
	UNUSED(n);

	__asm (
20000000:	f3bf 8f5f 	dmb	sy
20000004:	3801      	subs	r0, #1
20000006:	d1fb      	bne.n	20000000 <portable_delay_cycles>
20000008:	4770      	bx	lr
	...

2000000c <SystemInit>:
	EFC->EEFC_FMR = EEFC_FMR_FWS(3);
2000000c:	f44f 7240 	mov.w	r2, #768	; 0x300
20000010:	4b1f      	ldr	r3, [pc, #124]	; (20000090 <SystemInit+0x84>)
20000012:	601a      	str	r2, [r3, #0]
	if (!(PMC->CKGR_MOR & CKGR_MOR_MOSCSEL)) {
20000014:	f5a3 63c0 	sub.w	r3, r3, #1536	; 0x600
20000018:	6a1b      	ldr	r3, [r3, #32]
2000001a:	f013 7f80 	tst.w	r3, #16777216	; 0x1000000
2000001e:	d107      	bne.n	20000030 <SystemInit+0x24>
		PMC->CKGR_MOR = SYS_CKGR_MOR_KEY_VALUE | SYS_BOARD_OSCOUNT | 
20000020:	4a1c      	ldr	r2, [pc, #112]	; (20000094 <SystemInit+0x88>)
20000022:	4b1d      	ldr	r3, [pc, #116]	; (20000098 <SystemInit+0x8c>)
20000024:	621a      	str	r2, [r3, #32]
		while (!(PMC->PMC_SR & PMC_SR_MOSCXTS)) {
20000026:	461a      	mov	r2, r3
20000028:	6e93      	ldr	r3, [r2, #104]	; 0x68
2000002a:	f013 0f01 	tst.w	r3, #1
2000002e:	d0fb      	beq.n	20000028 <SystemInit+0x1c>
	PMC->CKGR_MOR = SYS_CKGR_MOR_KEY_VALUE | SYS_BOARD_OSCOUNT | 
20000030:	4a1a      	ldr	r2, [pc, #104]	; (2000009c <SystemInit+0x90>)
20000032:	4b19      	ldr	r3, [pc, #100]	; (20000098 <SystemInit+0x8c>)
20000034:	621a      	str	r2, [r3, #32]
	while (!(PMC->PMC_SR & PMC_SR_MOSCSELS)) {
20000036:	461a      	mov	r2, r3
20000038:	6e93      	ldr	r3, [r2, #104]	; 0x68
2000003a:	f413 3f80 	tst.w	r3, #65536	; 0x10000
2000003e:	d0fb      	beq.n	20000038 <SystemInit+0x2c>
	PMC->PMC_MCKR = (PMC->PMC_MCKR & ~(uint32_t)PMC_MCKR_CSS_Msk) | 
20000040:	4a15      	ldr	r2, [pc, #84]	; (20000098 <SystemInit+0x8c>)
20000042:	6b13      	ldr	r3, [r2, #48]	; 0x30
20000044:	f023 0303 	bic.w	r3, r3, #3
20000048:	f043 0301 	orr.w	r3, r3, #1
2000004c:	6313      	str	r3, [r2, #48]	; 0x30
	while (!(PMC->PMC_SR & PMC_SR_MCKRDY)) {
2000004e:	6e93      	ldr	r3, [r2, #104]	; 0x68
20000050:	f013 0f08 	tst.w	r3, #8
20000054:	d0fb      	beq.n	2000004e <SystemInit+0x42>
	PMC->CKGR_PLLAR = SYS_BOARD_PLLAR;
20000056:	4a12      	ldr	r2, [pc, #72]	; (200000a0 <SystemInit+0x94>)
20000058:	4b0f      	ldr	r3, [pc, #60]	; (20000098 <SystemInit+0x8c>)
2000005a:	629a      	str	r2, [r3, #40]	; 0x28
	while (!(PMC->PMC_SR & PMC_SR_LOCKA)) {
2000005c:	461a      	mov	r2, r3
2000005e:	6e93      	ldr	r3, [r2, #104]	; 0x68
20000060:	f013 0f02 	tst.w	r3, #2
20000064:	d0fb      	beq.n	2000005e <SystemInit+0x52>
	PMC->PMC_MCKR = (SYS_BOARD_MCKR & ~PMC_MCKR_CSS_Msk) | 
20000066:	2211      	movs	r2, #17
20000068:	4b0b      	ldr	r3, [pc, #44]	; (20000098 <SystemInit+0x8c>)
2000006a:	631a      	str	r2, [r3, #48]	; 0x30
	while (!(PMC->PMC_SR & PMC_SR_MCKRDY)) {
2000006c:	461a      	mov	r2, r3
2000006e:	6e93      	ldr	r3, [r2, #104]	; 0x68
20000070:	f013 0f08 	tst.w	r3, #8
20000074:	d0fb      	beq.n	2000006e <SystemInit+0x62>
	PMC->PMC_MCKR = SYS_BOARD_MCKR;
20000076:	2212      	movs	r2, #18
20000078:	4b07      	ldr	r3, [pc, #28]	; (20000098 <SystemInit+0x8c>)
2000007a:	631a      	str	r2, [r3, #48]	; 0x30
	while (!(PMC->PMC_SR & PMC_SR_MCKRDY)) {
2000007c:	461a      	mov	r2, r3
2000007e:	6e93      	ldr	r3, [r2, #104]	; 0x68
20000080:	f013 0f08 	tst.w	r3, #8
20000084:	d0fb      	beq.n	2000007e <SystemInit+0x72>
	SystemCoreClock = CHIP_FREQ_CPU_MAX;
20000086:	4a07      	ldr	r2, [pc, #28]	; (200000a4 <SystemInit+0x98>)
20000088:	4b07      	ldr	r3, [pc, #28]	; (200000a8 <SystemInit+0x9c>)
2000008a:	601a      	str	r2, [r3, #0]
2000008c:	4770      	bx	lr
2000008e:	bf00      	nop
20000090:	400e0a00 	.word	0x400e0a00
20000094:	00370809 	.word	0x00370809
20000098:	400e0400 	.word	0x400e0400
2000009c:	01370809 	.word	0x01370809
200000a0:	20073f01 	.word	0x20073f01
200000a4:	02dc6c00 	.word	0x02dc6c00
200000a8:	20000104 	.word	0x20000104

200000ac <system_init_flash>:
__no_inline
RAMFUNC
void system_init_flash(uint32_t ul_clk)
{
	/* Set FWS for embedded Flash access according to operating frequency */
	if (ul_clk < CHIP_FREQ_FWS_0) {
200000ac:	4b0c      	ldr	r3, [pc, #48]	; (200000e0 <system_init_flash+0x34>)
200000ae:	4298      	cmp	r0, r3
200000b0:	d90c      	bls.n	200000cc <system_init_flash+0x20>
		EFC->EEFC_FMR = EEFC_FMR_FWS(0);
	} else if (ul_clk < CHIP_FREQ_FWS_1) {
200000b2:	4b0c      	ldr	r3, [pc, #48]	; (200000e4 <system_init_flash+0x38>)
200000b4:	4298      	cmp	r0, r3
200000b6:	d90d      	bls.n	200000d4 <system_init_flash+0x28>
		EFC->EEFC_FMR = EEFC_FMR_FWS(1);
	} else if (ul_clk < CHIP_FREQ_FWS_2) {
200000b8:	4b0b      	ldr	r3, [pc, #44]	; (200000e8 <system_init_flash+0x3c>)
200000ba:	4298      	cmp	r0, r3
		EFC->EEFC_FMR = EEFC_FMR_FWS(2);
200000bc:	bf94      	ite	ls
200000be:	f44f 7200 	movls.w	r2, #512	; 0x200
	} else {
		EFC->EEFC_FMR = EEFC_FMR_FWS(3);
200000c2:	f44f 7240 	movhi.w	r2, #768	; 0x300
200000c6:	4b09      	ldr	r3, [pc, #36]	; (200000ec <system_init_flash+0x40>)
200000c8:	601a      	str	r2, [r3, #0]
200000ca:	4770      	bx	lr
		EFC->EEFC_FMR = EEFC_FMR_FWS(0);
200000cc:	2200      	movs	r2, #0
200000ce:	4b07      	ldr	r3, [pc, #28]	; (200000ec <system_init_flash+0x40>)
200000d0:	601a      	str	r2, [r3, #0]
200000d2:	4770      	bx	lr
		EFC->EEFC_FMR = EEFC_FMR_FWS(1);
200000d4:	f44f 7280 	mov.w	r2, #256	; 0x100
200000d8:	4b04      	ldr	r3, [pc, #16]	; (200000ec <system_init_flash+0x40>)
200000da:	601a      	str	r2, [r3, #0]
200000dc:	4770      	bx	lr
200000de:	bf00      	nop
200000e0:	01406f3f 	.word	0x01406f3f
200000e4:	01e847ff 	.word	0x01e847ff
200000e8:	02dc6bff 	.word	0x02dc6bff
200000ec:	400e0a00 	.word	0x400e0a00

200000f0 <btn_duty>:
200000f0:	00000001                                ....

200000f4 <usart_options.8098>:
200000f4:	0001c200 000000c0 00000800 00000000     ................

20000104 <SystemCoreClock>:
20000104:	003d0900                                ..=.

20000108 <_impure_ptr>:
20000108:	20000110 00000000                       ... ....

20000110 <impure_data>:
20000110:	00000000 200003fc 20000464 200004cc     ....... d.. ... 
	...
200001b8:	00000001 00000000 abcd330e e66d1234     .........3..4.m.
200001c8:	0005deec 0000000b 00000000 00000000     ................
	...

20000538 <__global_locale>:
20000538:	00000043 00000000 00000000 00000000     C...............
	...
20000558:	00000043 00000000 00000000 00000000     C...............
	...
20000578:	00000043 00000000 00000000 00000000     C...............
	...
20000598:	00000043 00000000 00000000 00000000     C...............
	...
200005b8:	00000043 00000000 00000000 00000000     C...............
	...
200005d8:	00000043 00000000 00000000 00000000     C...............
	...
200005f8:	00000043 00000000 00000000 00000000     C...............
	...
20000618:	00403dfd 0040366d 00000000 004044c8     .=@.m6@......D@.
20000628:	004044c4 00404444 00404444 00404444     .D@.DD@.DD@.DD@.
20000638:	00404444 00404444 00404444 00404444     DD@.DD@.DD@.DD@.
20000648:	00404444 00404444 ffffffff ffffffff     DD@.DD@.........
20000658:	ffffffff 0000ffff 53410001 00494943     ..........ASCII.
	...
20000680:	53410000 00494943 00000000 00000000     ..ASCII.........
	...

200006a4 <__malloc_av_>:
	...
200006ac:	200006a4 200006a4 200006ac 200006ac     ... ... ... ... 
200006bc:	200006b4 200006b4 200006bc 200006bc     ... ... ... ... 
200006cc:	200006c4 200006c4 200006cc 200006cc     ... ... ... ... 
200006dc:	200006d4 200006d4 200006dc 200006dc     ... ... ... ... 
200006ec:	200006e4 200006e4 200006ec 200006ec     ... ... ... ... 
200006fc:	200006f4 200006f4 200006fc 200006fc     ... ... ... ... 
2000070c:	20000704 20000704 2000070c 2000070c     ... ... ... ... 
2000071c:	20000714 20000714 2000071c 2000071c     ... ... ... ... 
2000072c:	20000724 20000724 2000072c 2000072c     $.. $.. ,.. ,.. 
2000073c:	20000734 20000734 2000073c 2000073c     4.. 4.. <.. <.. 
2000074c:	20000744 20000744 2000074c 2000074c     D.. D.. L.. L.. 
2000075c:	20000754 20000754 2000075c 2000075c     T.. T.. \.. \.. 
2000076c:	20000764 20000764 2000076c 2000076c     d.. d.. l.. l.. 
2000077c:	20000774 20000774 2000077c 2000077c     t.. t.. |.. |.. 
2000078c:	20000784 20000784 2000078c 2000078c     ... ... ... ... 
2000079c:	20000794 20000794 2000079c 2000079c     ... ... ... ... 
200007ac:	200007a4 200007a4 200007ac 200007ac     ... ... ... ... 
200007bc:	200007b4 200007b4 200007bc 200007bc     ... ... ... ... 
200007cc:	200007c4 200007c4 200007cc 200007cc     ... ... ... ... 
200007dc:	200007d4 200007d4 200007dc 200007dc     ... ... ... ... 
200007ec:	200007e4 200007e4 200007ec 200007ec     ... ... ... ... 
200007fc:	200007f4 200007f4 200007fc 200007fc     ... ... ... ... 
2000080c:	20000804 20000804 2000080c 2000080c     ... ... ... ... 
2000081c:	20000814 20000814 2000081c 2000081c     ... ... ... ... 
2000082c:	20000824 20000824 2000082c 2000082c     $.. $.. ,.. ,.. 
2000083c:	20000834 20000834 2000083c 2000083c     4.. 4.. <.. <.. 
2000084c:	20000844 20000844 2000084c 2000084c     D.. D.. L.. L.. 
2000085c:	20000854 20000854 2000085c 2000085c     T.. T.. \.. \.. 
2000086c:	20000864 20000864 2000086c 2000086c     d.. d.. l.. l.. 
2000087c:	20000874 20000874 2000087c 2000087c     t.. t.. |.. |.. 
2000088c:	20000884 20000884 2000088c 2000088c     ... ... ... ... 
2000089c:	20000894 20000894 2000089c 2000089c     ... ... ... ... 
200008ac:	200008a4 200008a4 200008ac 200008ac     ... ... ... ... 
200008bc:	200008b4 200008b4 200008bc 200008bc     ... ... ... ... 
200008cc:	200008c4 200008c4 200008cc 200008cc     ... ... ... ... 
200008dc:	200008d4 200008d4 200008dc 200008dc     ... ... ... ... 
200008ec:	200008e4 200008e4 200008ec 200008ec     ... ... ... ... 
200008fc:	200008f4 200008f4 200008fc 200008fc     ... ... ... ... 
2000090c:	20000904 20000904 2000090c 2000090c     ... ... ... ... 
2000091c:	20000914 20000914 2000091c 2000091c     ... ... ... ... 
2000092c:	20000924 20000924 2000092c 2000092c     $.. $.. ,.. ,.. 
2000093c:	20000934 20000934 2000093c 2000093c     4.. 4.. <.. <.. 
2000094c:	20000944 20000944 2000094c 2000094c     D.. D.. L.. L.. 
2000095c:	20000954 20000954 2000095c 2000095c     T.. T.. \.. \.. 
2000096c:	20000964 20000964 2000096c 2000096c     d.. d.. l.. l.. 
2000097c:	20000974 20000974 2000097c 2000097c     t.. t.. |.. |.. 
2000098c:	20000984 20000984 2000098c 2000098c     ... ... ... ... 
2000099c:	20000994 20000994 2000099c 2000099c     ... ... ... ... 
200009ac:	200009a4 200009a4 200009ac 200009ac     ... ... ... ... 
200009bc:	200009b4 200009b4 200009bc 200009bc     ... ... ... ... 
200009cc:	200009c4 200009c4 200009cc 200009cc     ... ... ... ... 
200009dc:	200009d4 200009d4 200009dc 200009dc     ... ... ... ... 
200009ec:	200009e4 200009e4 200009ec 200009ec     ... ... ... ... 
200009fc:	200009f4 200009f4 200009fc 200009fc     ... ... ... ... 
20000a0c:	20000a04 20000a04 20000a0c 20000a0c     ... ... ... ... 
20000a1c:	20000a14 20000a14 20000a1c 20000a1c     ... ... ... ... 
20000a2c:	20000a24 20000a24 20000a2c 20000a2c     $.. $.. ,.. ,.. 
20000a3c:	20000a34 20000a34 20000a3c 20000a3c     4.. 4.. <.. <.. 
20000a4c:	20000a44 20000a44 20000a4c 20000a4c     D.. D.. L.. L.. 
20000a5c:	20000a54 20000a54 20000a5c 20000a5c     T.. T.. \.. \.. 
20000a6c:	20000a64 20000a64 20000a6c 20000a6c     d.. d.. l.. l.. 
20000a7c:	20000a74 20000a74 20000a7c 20000a7c     t.. t.. |.. |.. 
20000a8c:	20000a84 20000a84 20000a8c 20000a8c     ... ... ... ... 
20000a9c:	20000a94 20000a94 20000a9c 20000a9c     ... ... ... ... 

20000aac <__malloc_sbrk_base>:
20000aac:	ffffffff                                ....

20000ab0 <__malloc_trim_threshold>:
20000ab0:	00020000                                ....
