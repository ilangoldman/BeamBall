
BeamBall.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000091a4  00400000  00400000  00010000  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .ARM.exidx    00000008  004091a4  004091a4  000191a4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  2 .relocate     00000aac  20000000  004091ac  00020000  2**3
                  CONTENTS, ALLOC, LOAD, CODE
  3 .bss          0000048c  20000aac  00409c58  00020aac  2**2
                  ALLOC
  4 .stack        00000800  20000f38  0040a0e4  00020aac  2**0
                  ALLOC
  5 .ARM.attributes 00000029  00000000  00000000  00020aac  2**0
                  CONTENTS, READONLY
  6 .comment      00000059  00000000  00000000  00020ad5  2**0
                  CONTENTS, READONLY
  7 .debug_info   000201ff  00000000  00000000  00020b2e  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 00004a91  00000000  00000000  00040d2d  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_loc    00007ed9  00000000  00000000  000457be  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_aranges 00000d98  00000000  00000000  0004d697  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000dc8  00000000  00000000  0004e42f  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_macro  00014ad3  00000000  00000000  0004f1f7  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_line   0001363b  00000000  00000000  00063cca  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_str    000488d8  00000000  00000000  00077305  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_frame  00003354  00000000  00000000  000bfbe0  2**2
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00400000 <exception_table>:
  400000:	38 17 00 20 55 11 40 00 53 11 40 00 53 11 40 00     8.. U.@.S.@.S.@.
  400010:	53 11 40 00 53 11 40 00 53 11 40 00 00 00 00 00     S.@.S.@.S.@.....
	...
  40002c:	ed 13 40 00 53 11 40 00 00 00 00 00 9d 14 40 00     ..@.S.@.......@.
  40003c:	e9 1f 40 00 53 11 40 00 53 11 40 00 53 11 40 00     ..@.S.@.S.@.S.@.
  40004c:	53 11 40 00 53 11 40 00 53 11 40 00 53 11 40 00     S.@.S.@.S.@.S.@.
  40005c:	53 11 40 00 53 11 40 00 53 11 40 00 53 11 40 00     S.@.S.@.S.@.S.@.
  40006c:	1d 0e 40 00 31 0e 40 00 45 0e 40 00 53 11 40 00     ..@.1.@.E.@.S.@.
  40007c:	53 11 40 00 53 11 40 00 53 11 40 00 53 11 40 00     S.@.S.@.S.@.S.@.
  40008c:	53 11 40 00 53 11 40 00 51 1d 40 00 53 11 40 00     S.@.S.@.Q.@.S.@.
  40009c:	0d 1e 40 00 53 11 40 00 53 11 40 00 53 11 40 00     ..@.S.@.S.@.S.@.
  4000ac:	53 11 40 00 53 11 40 00 53 11 40 00 53 11 40 00     S.@.S.@.S.@.S.@.
  4000bc:	53 11 40 00 53 11 40 00                             S.@.S.@.

004000c4 <__do_global_dtors_aux>:
  4000c4:	b510      	push	{r4, lr}
  4000c6:	4c05      	ldr	r4, [pc, #20]	; (4000dc <__do_global_dtors_aux+0x18>)
  4000c8:	7823      	ldrb	r3, [r4, #0]
  4000ca:	b933      	cbnz	r3, 4000da <__do_global_dtors_aux+0x16>
  4000cc:	4b04      	ldr	r3, [pc, #16]	; (4000e0 <__do_global_dtors_aux+0x1c>)
  4000ce:	b113      	cbz	r3, 4000d6 <__do_global_dtors_aux+0x12>
  4000d0:	4804      	ldr	r0, [pc, #16]	; (4000e4 <__do_global_dtors_aux+0x20>)
  4000d2:	f3af 8000 	nop.w
  4000d6:	2301      	movs	r3, #1
  4000d8:	7023      	strb	r3, [r4, #0]
  4000da:	bd10      	pop	{r4, pc}
  4000dc:	20000aac 	.word	0x20000aac
  4000e0:	00000000 	.word	0x00000000
  4000e4:	004091ac 	.word	0x004091ac

004000e8 <frame_dummy>:
  4000e8:	4b0c      	ldr	r3, [pc, #48]	; (40011c <frame_dummy+0x34>)
  4000ea:	b143      	cbz	r3, 4000fe <frame_dummy+0x16>
  4000ec:	480c      	ldr	r0, [pc, #48]	; (400120 <frame_dummy+0x38>)
  4000ee:	b510      	push	{r4, lr}
  4000f0:	490c      	ldr	r1, [pc, #48]	; (400124 <frame_dummy+0x3c>)
  4000f2:	f3af 8000 	nop.w
  4000f6:	480c      	ldr	r0, [pc, #48]	; (400128 <frame_dummy+0x40>)
  4000f8:	6803      	ldr	r3, [r0, #0]
  4000fa:	b923      	cbnz	r3, 400106 <frame_dummy+0x1e>
  4000fc:	bd10      	pop	{r4, pc}
  4000fe:	480a      	ldr	r0, [pc, #40]	; (400128 <frame_dummy+0x40>)
  400100:	6803      	ldr	r3, [r0, #0]
  400102:	b933      	cbnz	r3, 400112 <frame_dummy+0x2a>
  400104:	4770      	bx	lr
  400106:	4b09      	ldr	r3, [pc, #36]	; (40012c <frame_dummy+0x44>)
  400108:	2b00      	cmp	r3, #0
  40010a:	d0f7      	beq.n	4000fc <frame_dummy+0x14>
  40010c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  400110:	4718      	bx	r3
  400112:	4b06      	ldr	r3, [pc, #24]	; (40012c <frame_dummy+0x44>)
  400114:	2b00      	cmp	r3, #0
  400116:	d0f5      	beq.n	400104 <frame_dummy+0x1c>
  400118:	4718      	bx	r3
  40011a:	bf00      	nop
  40011c:	00000000 	.word	0x00000000
  400120:	004091ac 	.word	0x004091ac
  400124:	20000ab0 	.word	0x20000ab0
  400128:	004091ac 	.word	0x004091ac
  40012c:	00000000 	.word	0x00000000

00400130 <sysclk_init>:
{
}
#endif // CONFIG_USBCLK_SOURCE

void sysclk_init(void)
{
  400130:	b510      	push	{r4, lr}
	/* Set flash wait state to max in case the below clock switching. */
	system_init_flash(CHIP_FREQ_CPU_MAX);
  400132:	480e      	ldr	r0, [pc, #56]	; (40016c <sysclk_init+0x3c>)
  400134:	4b0e      	ldr	r3, [pc, #56]	; (400170 <sysclk_init+0x40>)
  400136:	4798      	blx	r3
		pmc_switch_mainck_to_fastrc(CKGR_MOR_MOSCRCF_12_MHz);
		break;


	case OSC_MAINCK_XTAL:
		pmc_switch_mainck_to_xtal(PMC_OSC_XTAL,
  400138:	213e      	movs	r1, #62	; 0x3e
  40013a:	2000      	movs	r0, #0
  40013c:	4b0d      	ldr	r3, [pc, #52]	; (400174 <sysclk_init+0x44>)
  40013e:	4798      	blx	r3
	case OSC_MAINCK_4M_RC:
	case OSC_MAINCK_8M_RC:
	case OSC_MAINCK_12M_RC:
	case OSC_MAINCK_XTAL:
	case OSC_MAINCK_BYPASS:
		return pmc_osc_is_ready_mainck();
  400140:	4c0d      	ldr	r4, [pc, #52]	; (400178 <sysclk_init+0x48>)
  400142:	47a0      	blx	r4
 *
 * \param id A number identifying the oscillator to wait for.
 */
static inline void osc_wait_ready(uint8_t id)
{
	while (!osc_is_ready(id)) {
  400144:	2800      	cmp	r0, #0
  400146:	d0fc      	beq.n	400142 <sysclk_init+0x12>
static inline void pll_enable(const struct pll_config *p_cfg, uint32_t ul_pll_id)
{
	Assert(ul_pll_id < NR_PLLS);

	if (ul_pll_id == PLLA_ID) {
		pmc_disable_pllack(); // Always stop PLL first!
  400148:	4b0c      	ldr	r3, [pc, #48]	; (40017c <sysclk_init+0x4c>)
  40014a:	4798      	blx	r3
		PMC->CKGR_PLLAR = CKGR_PLLAR_ONE | p_cfg->ctrl;
  40014c:	4a0c      	ldr	r2, [pc, #48]	; (400180 <sysclk_init+0x50>)
  40014e:	4b0d      	ldr	r3, [pc, #52]	; (400184 <sysclk_init+0x54>)
  400150:	629a      	str	r2, [r3, #40]	; 0x28
static inline uint32_t pll_is_locked(uint32_t ul_pll_id)
{
	Assert(ul_pll_id < NR_PLLS);

	if (ul_pll_id == PLLA_ID) {
		return pmc_is_locked_pllack();
  400152:	4c0d      	ldr	r4, [pc, #52]	; (400188 <sysclk_init+0x58>)
  400154:	47a0      	blx	r4
 */
static inline int pll_wait_for_lock(unsigned int pll_id)
{
	Assert(pll_id < NR_PLLS);

	while (!pll_is_locked(pll_id)) {
  400156:	2800      	cmp	r0, #0
  400158:	d0fc      	beq.n	400154 <sysclk_init+0x24>

		pll_enable_source(CONFIG_PLL0_SOURCE);
		pll_config_defaults(&pllcfg, 0);
		pll_enable(&pllcfg, 0);
		pll_wait_for_lock(0);
		pmc_switch_mck_to_pllack(CONFIG_SYSCLK_PRES);
  40015a:	2000      	movs	r0, #0
  40015c:	4b0b      	ldr	r3, [pc, #44]	; (40018c <sysclk_init+0x5c>)
  40015e:	4798      	blx	r3
	}
#endif

	/* Update the SystemFrequency variable */
	SystemCoreClockUpdate();
  400160:	4b0b      	ldr	r3, [pc, #44]	; (400190 <sysclk_init+0x60>)
  400162:	4798      	blx	r3

	/* Set a flash wait state depending on the new cpu frequency */
	system_init_flash(sysclk_get_cpu_hz());
  400164:	4801      	ldr	r0, [pc, #4]	; (40016c <sysclk_init+0x3c>)
  400166:	4b02      	ldr	r3, [pc, #8]	; (400170 <sysclk_init+0x40>)
  400168:	4798      	blx	r3
  40016a:	bd10      	pop	{r4, pc}
  40016c:	02dc6c00 	.word	0x02dc6c00
  400170:	200000ad 	.word	0x200000ad
  400174:	00400ebd 	.word	0x00400ebd
  400178:	00400f11 	.word	0x00400f11
  40017c:	00400f21 	.word	0x00400f21
  400180:	20033f01 	.word	0x20033f01
  400184:	400e0400 	.word	0x400e0400
  400188:	00400f31 	.word	0x00400f31
  40018c:	00400e59 	.word	0x00400e59
  400190:	004011ed 	.word	0x004011ed

00400194 <spi_master_init>:
 *
 * \param p_spi  Base address of the SPI instance.
 *
 */
void spi_master_init(Spi *p_spi)
{
  400194:	b510      	push	{r4, lr}
  400196:	4604      	mov	r4, r0
#if SAMG55
	flexcom_enable(BOARD_FLEXCOM_SPI);
	flexcom_set_opmode(BOARD_FLEXCOM_SPI, FLEXCOM_SPI);
#else
	spi_enable_clock(p_spi);
  400198:	4b10      	ldr	r3, [pc, #64]	; (4001dc <spi_master_init+0x48>)
  40019a:	4798      	blx	r3
 *
 * \param p_spi Pointer to an SPI instance.
 */
static inline void spi_reset(Spi *p_spi)
{
	p_spi->SPI_CR = SPI_CR_SWRST;
  40019c:	2380      	movs	r3, #128	; 0x80
  40019e:	6023      	str	r3, [r4, #0]
 *
 * \param p_spi Pointer to an SPI instance.
 */
static inline void spi_set_master_mode(Spi *p_spi)
{
	p_spi->SPI_MR |= SPI_MR_MSTR;
  4001a0:	6863      	ldr	r3, [r4, #4]
  4001a2:	f043 0301 	orr.w	r3, r3, #1
  4001a6:	6063      	str	r3, [r4, #4]
 *
 * \param p_spi Pointer to an SPI instance.
 */
static inline void spi_disable_mode_fault_detect(Spi *p_spi)
{
	p_spi->SPI_MR |= SPI_MR_MODFDIS;
  4001a8:	6863      	ldr	r3, [r4, #4]
  4001aa:	f043 0310 	orr.w	r3, r3, #16
  4001ae:	6063      	str	r3, [r4, #4]
 *
 * \param p_spi Pointer to an SPI instance.
 */
static inline void spi_disable_loopback(Spi *p_spi)
{
	p_spi->SPI_MR &= (~SPI_MR_LLB);
  4001b0:	6863      	ldr	r3, [r4, #4]
  4001b2:	f023 0380 	bic.w	r3, r3, #128	; 0x80
  4001b6:	6063      	str	r3, [r4, #4]
#endif
	spi_reset(p_spi);
	spi_set_master_mode(p_spi);
	spi_disable_mode_fault_detect(p_spi);
	spi_disable_loopback(p_spi);
	spi_set_peripheral_chip_select_value(p_spi, DEFAULT_CHIP_ID);
  4001b8:	2100      	movs	r1, #0
  4001ba:	4620      	mov	r0, r4
  4001bc:	4b08      	ldr	r3, [pc, #32]	; (4001e0 <spi_master_init+0x4c>)
  4001be:	4798      	blx	r3
	p_spi->SPI_MR &= (~SPI_MR_PS);
  4001c0:	6863      	ldr	r3, [r4, #4]
  4001c2:	f023 0302 	bic.w	r3, r3, #2
  4001c6:	6063      	str	r3, [r4, #4]
	p_spi->SPI_MR &= (~SPI_MR_PCSDEC);
  4001c8:	6863      	ldr	r3, [r4, #4]
  4001ca:	f023 0304 	bic.w	r3, r3, #4
  4001ce:	6063      	str	r3, [r4, #4]
	spi_set_fixed_peripheral_select(p_spi);
	spi_disable_peripheral_select_decode(p_spi);
	spi_set_delay_between_chip_select(p_spi, CONFIG_SPI_MASTER_DELAY_BCS);
  4001d0:	2100      	movs	r1, #0
  4001d2:	4620      	mov	r0, r4
  4001d4:	4b03      	ldr	r3, [pc, #12]	; (4001e4 <spi_master_init+0x50>)
  4001d6:	4798      	blx	r3
  4001d8:	bd10      	pop	{r4, pc}
  4001da:	bf00      	nop
  4001dc:	00400f6d 	.word	0x00400f6d
  4001e0:	00400f7d 	.word	0x00400f7d
  4001e4:	00400f93 	.word	0x00400f93

004001e8 <spi_master_setup_device>:
 * \param baud_rate Baud rate for communication with slave device in Hz.
 * \param sel_id    Board specific select id.
 */
void spi_master_setup_device(Spi *p_spi, struct spi_device *device,
		spi_flags_t flags, uint32_t baud_rate, board_spi_select_id_t sel_id)
{
  4001e8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  4001ec:	4604      	mov	r4, r0
  4001ee:	460d      	mov	r5, r1
  4001f0:	4616      	mov	r6, r2
#if (SAM4L)
    int16_t baud_div = spi_calc_baudrate_div(baud_rate, sysclk_get_pba_hz());
#else
	int16_t baud_div = spi_calc_baudrate_div(baud_rate, sysclk_get_peripheral_hz());
  4001f2:	4915      	ldr	r1, [pc, #84]	; (400248 <spi_master_setup_device+0x60>)
  4001f4:	4618      	mov	r0, r3
  4001f6:	4b15      	ldr	r3, [pc, #84]	; (40024c <spi_master_setup_device+0x64>)
  4001f8:	4798      	blx	r3
  4001fa:	4607      	mov	r7, r0
	/* avoid Cppcheck Warning */
	UNUSED(sel_id);
	if (-1 == baud_div) {
		Assert(0 == "Failed to find baudrate divider");
	}
	spi_set_transfer_delay(p_spi, device->id, CONFIG_SPI_MASTER_DELAY_BS,
  4001fc:	2300      	movs	r3, #0
  4001fe:	461a      	mov	r2, r3
  400200:	6829      	ldr	r1, [r5, #0]
  400202:	4620      	mov	r0, r4
  400204:	f8df 805c 	ldr.w	r8, [pc, #92]	; 400264 <spi_master_setup_device+0x7c>
  400208:	47c0      	blx	r8
			CONFIG_SPI_MASTER_DELAY_BCT);
	spi_set_bits_per_transfer(p_spi, device->id,
  40020a:	2208      	movs	r2, #8
  40020c:	6829      	ldr	r1, [r5, #0]
  40020e:	4620      	mov	r0, r4
  400210:	4b0f      	ldr	r3, [pc, #60]	; (400250 <spi_master_setup_device+0x68>)
  400212:	4798      	blx	r3
			CONFIG_SPI_MASTER_BITS_PER_TRANSFER);
	spi_set_baudrate_div(p_spi, device->id, baud_div);
  400214:	b2fa      	uxtb	r2, r7
  400216:	6829      	ldr	r1, [r5, #0]
  400218:	4620      	mov	r0, r4
  40021a:	4b0e      	ldr	r3, [pc, #56]	; (400254 <spi_master_setup_device+0x6c>)
  40021c:	4798      	blx	r3
	spi_configure_cs_behavior(p_spi, device->id, SPI_CS_KEEP_LOW);
  40021e:	2208      	movs	r2, #8
  400220:	6829      	ldr	r1, [r5, #0]
  400222:	4620      	mov	r0, r4
  400224:	4b0c      	ldr	r3, [pc, #48]	; (400258 <spi_master_setup_device+0x70>)
  400226:	4798      	blx	r3
	spi_set_clock_polarity(p_spi, device->id, flags >> 1);
  400228:	0872      	lsrs	r2, r6, #1
  40022a:	6829      	ldr	r1, [r5, #0]
  40022c:	4620      	mov	r0, r4
  40022e:	4b0b      	ldr	r3, [pc, #44]	; (40025c <spi_master_setup_device+0x74>)
  400230:	4798      	blx	r3
	spi_set_clock_phase(p_spi, device->id, ((flags & 0x1) ^ 0x1));
  400232:	f086 0201 	eor.w	r2, r6, #1
  400236:	f002 0201 	and.w	r2, r2, #1
  40023a:	6829      	ldr	r1, [r5, #0]
  40023c:	4620      	mov	r0, r4
  40023e:	4b08      	ldr	r3, [pc, #32]	; (400260 <spi_master_setup_device+0x78>)
  400240:	4798      	blx	r3
  400242:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  400246:	bf00      	nop
  400248:	02dc6c00 	.word	0x02dc6c00
  40024c:	0040106f 	.word	0x0040106f
  400250:	0040105b 	.word	0x0040105b
  400254:	00401085 	.word	0x00401085
  400258:	00401015 	.word	0x00401015
  40025c:	00400fd9 	.word	0x00400fd9
  400260:	00400ff7 	.word	0x00400ff7
  400264:	004010ab 	.word	0x004010ab

00400268 <spi_select_device>:
 * \param p_spi   Base address of the SPI instance.
 * \param device  SPI device.
 *
 */
void spi_select_device(Spi *p_spi, struct spi_device *device)
{
  400268:	b508      	push	{r3, lr}
	if (p_spi->SPI_MR & SPI_MR_PCSDEC) {
  40026a:	6843      	ldr	r3, [r0, #4]
	if (spi_get_peripheral_select_decode_setting(p_spi)) {
  40026c:	f013 0f04 	tst.w	r3, #4
  400270:	d006      	beq.n	400280 <spi_select_device+0x18>
		if (device->id < MAX_NUM_WITH_DECODER) {
  400272:	6809      	ldr	r1, [r1, #0]
  400274:	290f      	cmp	r1, #15
  400276:	d900      	bls.n	40027a <spi_select_device+0x12>
  400278:	bd08      	pop	{r3, pc}
			spi_set_peripheral_chip_select_value(p_spi, device->id);
  40027a:	4b06      	ldr	r3, [pc, #24]	; (400294 <spi_select_device+0x2c>)
  40027c:	4798      	blx	r3
  40027e:	bd08      	pop	{r3, pc}
		}
	} else {
		if (device->id < MAX_NUM_WITHOUT_DECODER) {
  400280:	6809      	ldr	r1, [r1, #0]
  400282:	2903      	cmp	r1, #3
  400284:	d8f8      	bhi.n	400278 <spi_select_device+0x10>
			spi_set_peripheral_chip_select_value(p_spi, (~(1 << device->id)));
  400286:	2301      	movs	r3, #1
  400288:	fa03 f101 	lsl.w	r1, r3, r1
  40028c:	43c9      	mvns	r1, r1
  40028e:	4b01      	ldr	r3, [pc, #4]	; (400294 <spi_select_device+0x2c>)
  400290:	4798      	blx	r3
		}
	}
}
  400292:	e7f1      	b.n	400278 <spi_select_device+0x10>
  400294:	00400f7d 	.word	0x00400f7d

00400298 <_read>:
int __attribute__((weak))
_read (int file, char * ptr, int len); // Remove GCC compiler warning

int __attribute__((weak))
_read (int file, char * ptr, int len)
{
  400298:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
	int nChars = 0;

	if (file != 0) {
  40029c:	b980      	cbnz	r0, 4002c0 <_read+0x28>
  40029e:	460c      	mov	r4, r1
  4002a0:	4690      	mov	r8, r2
		return -1;
	}

	for (; len > 0; --len) {
  4002a2:	2a00      	cmp	r2, #0
  4002a4:	dd0f      	ble.n	4002c6 <_read+0x2e>
  4002a6:	188f      	adds	r7, r1, r2
		ptr_get(stdio_base, ptr);
  4002a8:	4e08      	ldr	r6, [pc, #32]	; (4002cc <_read+0x34>)
  4002aa:	4d09      	ldr	r5, [pc, #36]	; (4002d0 <_read+0x38>)
  4002ac:	6830      	ldr	r0, [r6, #0]
  4002ae:	4621      	mov	r1, r4
  4002b0:	682b      	ldr	r3, [r5, #0]
  4002b2:	4798      	blx	r3
		ptr++;
  4002b4:	3401      	adds	r4, #1
	for (; len > 0; --len) {
  4002b6:	42bc      	cmp	r4, r7
  4002b8:	d1f8      	bne.n	4002ac <_read+0x14>
		nChars++;
	}
	return nChars;
}
  4002ba:	4640      	mov	r0, r8
  4002bc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
		return -1;
  4002c0:	f04f 38ff 	mov.w	r8, #4294967295
  4002c4:	e7f9      	b.n	4002ba <_read+0x22>
	for (; len > 0; --len) {
  4002c6:	4680      	mov	r8, r0
  4002c8:	e7f7      	b.n	4002ba <_read+0x22>
  4002ca:	bf00      	nop
  4002cc:	20000f0c 	.word	0x20000f0c
  4002d0:	20000f04 	.word	0x20000f04

004002d4 <_write>:
int __attribute__((weak))
_write (int file, const char *ptr, int len)
{
	int nChars = 0;

	if ((file != 1) && (file != 2) && (file!=3)) {
  4002d4:	3801      	subs	r0, #1
  4002d6:	2802      	cmp	r0, #2
  4002d8:	d815      	bhi.n	400306 <_write+0x32>
{
  4002da:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  4002de:	460e      	mov	r6, r1
  4002e0:	4614      	mov	r4, r2
		return -1;
	}

	for (; len != 0; --len) {
  4002e2:	b19a      	cbz	r2, 40030c <_write+0x38>
  4002e4:	460d      	mov	r5, r1
		if (ptr_put(stdio_base, *ptr++) < 0) {
  4002e6:	f8df 8038 	ldr.w	r8, [pc, #56]	; 400320 <_write+0x4c>
  4002ea:	4f0c      	ldr	r7, [pc, #48]	; (40031c <_write+0x48>)
  4002ec:	f8d8 0000 	ldr.w	r0, [r8]
  4002f0:	f815 1b01 	ldrb.w	r1, [r5], #1
  4002f4:	683b      	ldr	r3, [r7, #0]
  4002f6:	4798      	blx	r3
  4002f8:	2800      	cmp	r0, #0
  4002fa:	db0a      	blt.n	400312 <_write+0x3e>
  4002fc:	1ba8      	subs	r0, r5, r6
	for (; len != 0; --len) {
  4002fe:	3c01      	subs	r4, #1
  400300:	d1f4      	bne.n	4002ec <_write+0x18>
  400302:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
		return -1;
  400306:	f04f 30ff 	mov.w	r0, #4294967295
  40030a:	4770      	bx	lr
	for (; len != 0; --len) {
  40030c:	4610      	mov	r0, r2
  40030e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
			return -1;
  400312:	f04f 30ff 	mov.w	r0, #4294967295
		}
		++nChars;
	}
	return nChars;
}
  400316:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  40031a:	bf00      	nop
  40031c:	20000f08 	.word	0x20000f08
  400320:	20000f0c 	.word	0x20000f0c

00400324 <board_init>:
#include "conf_board.h"
#include "gpio.h"
#include "ioport.h"

void board_init(void)
{
  400324:	b510      	push	{r4, lr}
#ifndef CONF_BOARD_KEEP_WATCHDOG_AT_INIT
	/* Disable the watchdog */
	WDT->WDT_MR = WDT_MR_WDDIS;
  400326:	f44f 4200 	mov.w	r2, #32768	; 0x8000
  40032a:	4b1e      	ldr	r3, [pc, #120]	; (4003a4 <board_init+0x80>)
  40032c:	605a      	str	r2, [r3, #4]
 *
 * \param ul_id Id (number) of the peripheral clock.
 */
static inline void sysclk_enable_peripheral_clock(uint32_t ul_id)
{
	pmc_enable_periph_clk(ul_id);
  40032e:	200b      	movs	r0, #11
  400330:	4c1d      	ldr	r4, [pc, #116]	; (4003a8 <board_init+0x84>)
  400332:	47a0      	blx	r4
  400334:	200c      	movs	r0, #12
  400336:	47a0      	blx	r4
  400338:	200d      	movs	r0, #13
  40033a:	47a0      	blx	r4
	 * Here IOPORT must be initialized for others to use before setting up IO.
	 */
	ioport_init();

	/* Configure LED pins */
	gpio_configure_pin(LED0_GPIO, LED0_FLAGS);
  40033c:	f04f 5160 	mov.w	r1, #939524096	; 0x38000000
  400340:	2017      	movs	r0, #23
  400342:	4c1a      	ldr	r4, [pc, #104]	; (4003ac <board_init+0x88>)
  400344:	47a0      	blx	r4
	gpio_configure_pin(LED1_GPIO, LED1_FLAGS);
  400346:	f04f 5160 	mov.w	r1, #939524096	; 0x38000000
  40034a:	202e      	movs	r0, #46	; 0x2e
  40034c:	47a0      	blx	r4

	/* Configure Push Button pins */
	gpio_configure_pin(GPIO_PUSH_BUTTON_1, GPIO_PUSH_BUTTON_1_FLAGS);
  40034e:	4918      	ldr	r1, [pc, #96]	; (4003b0 <board_init+0x8c>)
  400350:	200f      	movs	r0, #15
  400352:	47a0      	blx	r4
	gpio_configure_pin(GPIO_PUSH_BUTTON_2, GPIO_PUSH_BUTTON_2_FLAGS);
  400354:	4917      	ldr	r1, [pc, #92]	; (4003b4 <board_init+0x90>)
  400356:	2010      	movs	r0, #16
  400358:	47a0      	blx	r4

#ifdef CONF_BOARD_UART_CONSOLE
	/* Configure UART pins */
	gpio_configure_group(PINS_UART0_PIO, PINS_UART0, PINS_UART0_FLAGS);
  40035a:	f04f 6200 	mov.w	r2, #134217728	; 0x8000000
  40035e:	f44f 61c0 	mov.w	r1, #1536	; 0x600
  400362:	4815      	ldr	r0, [pc, #84]	; (4003b8 <board_init+0x94>)
  400364:	4b15      	ldr	r3, [pc, #84]	; (4003bc <board_init+0x98>)
  400366:	4798      	blx	r3
	gpio_set_pin_low(PIN_RE_IDX);
#endif

#ifdef CONF_BOARD_ILI9225
	/* Configure SPI LCD control pin */
	gpio_configure_pin(SPI_MISO_GPIO, SPI_MISO_FLAGS);
  400368:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
  40036c:	200c      	movs	r0, #12
  40036e:	47a0      	blx	r4
	gpio_configure_pin(SPI_MOSI_GPIO, SPI_MOSI_FLAGS);
  400370:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
  400374:	200d      	movs	r0, #13
  400376:	47a0      	blx	r4
	gpio_configure_pin(SPI_SPCK_GPIO, SPI_SPCK_FLAGS);
  400378:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
  40037c:	200e      	movs	r0, #14
  40037e:	47a0      	blx	r4
	gpio_configure_pin(SPI_NPCS2_PA30_GPIO, SPI_NPCS2_PA30_FLAGS);
  400380:	f04f 5180 	mov.w	r1, #268435456	; 0x10000000
  400384:	201e      	movs	r0, #30
  400386:	47a0      	blx	r4
	gpio_configure_pin(BOARD_ILI9225_RS_GPIO, BOARD_ILI9225_RS_FLAGS);
  400388:	f04f 5160 	mov.w	r1, #939524096	; 0x38000000
  40038c:	201c      	movs	r0, #28
  40038e:	47a0      	blx	r4
	gpio_configure_pin(BOARD_ILI9225_RSTN_GPIO, BOARD_ILI9225_RSTN_FLAGS);
  400390:	f04f 5160 	mov.w	r1, #939524096	; 0x38000000
  400394:	201d      	movs	r0, #29
  400396:	47a0      	blx	r4
#endif

#ifdef CONF_BOARD_AAT3193
	/* Configure Backlight control pin */
	gpio_configure_pin(BOARD_AAT31XX_SET_GPIO, BOARD_AAT31XX_SET_FLAGS);
  400398:	f04f 5160 	mov.w	r1, #939524096	; 0x38000000
  40039c:	204d      	movs	r0, #77	; 0x4d
  40039e:	47a0      	blx	r4
  4003a0:	bd10      	pop	{r4, pc}
  4003a2:	bf00      	nop
  4003a4:	400e1450 	.word	0x400e1450
  4003a8:	00400f41 	.word	0x00400f41
  4003ac:	00400bd5 	.word	0x00400bd5
  4003b0:	28000079 	.word	0x28000079
  4003b4:	28000059 	.word	0x28000059
  4003b8:	400e0e00 	.word	0x400e0e00
  4003bc:	00400cf5 	.word	0x00400cf5

004003c0 <aat31xx_set_backlight>:
 * \param ul_level backlight level.
 *
 * \note pin BOARD_AAT31XX_SET_GPIO must be configured before calling aat31xx_set_backlight.
 */
void aat31xx_set_backlight(uint32_t ul_level)
{
  4003c0:	b4f0      	push	{r4, r5, r6, r7}
  4003c2:	b082      	sub	sp, #8
#ifdef CONF_BOARD_AAT3155
	ul_level = AAT31XX_MAX_BACKLIGHT_LEVEL - ul_level + 1;
#endif

#ifdef CONF_BOARD_AAT3193
	ul_level = AAT31XX_MAX_BACKLIGHT_LEVEL - ul_level + 1;
  4003c4:	f1c0 0011 	rsb	r0, r0, #17
#endif

	/* Ensure valid level */
	ul_level = (ul_level > AAT31XX_MAX_BACKLIGHT_LEVEL) ? AAT31XX_MAX_BACKLIGHT_LEVEL : ul_level;
  4003c8:	2810      	cmp	r0, #16
  4003ca:	bf28      	it	cs
  4003cc:	2010      	movcs	r0, #16
	ul_level = (ul_level < AAT31XX_MIN_BACKLIGHT_LEVEL) ? AAT31XX_MIN_BACKLIGHT_LEVEL : ul_level;
  4003ce:	2800      	cmp	r0, #0
  4003d0:	bf08      	it	eq
  4003d2:	2001      	moveq	r0, #1
{
  4003d4:	2100      	movs	r1, #0
	Pio *base = arch_ioport_pin_to_base(pin);

	if (level) {
		base->PIO_SODR = arch_ioport_pin_to_mask(pin);
	} else {
		base->PIO_CODR = arch_ioport_pin_to_mask(pin);
  4003d6:	4d10      	ldr	r5, [pc, #64]	; (400418 <aat31xx_set_backlight+0x58>)
  4003d8:	f44f 5600 	mov.w	r6, #8192	; 0x2000
  4003dc:	4637      	mov	r7, r6

	/* Set new backlight level */
	for (i = 0; i < ul_level; i++) {
		ioport_set_pin_level(BOARD_AAT31XX_SET_GPIO, IOPORT_PIN_LEVEL_LOW);
		ul_delay = DELAY_PULSE;
  4003de:	2418      	movs	r4, #24
  4003e0:	636f      	str	r7, [r5, #52]	; 0x34
  4003e2:	9401      	str	r4, [sp, #4]
		while (ul_delay--) {
  4003e4:	9b01      	ldr	r3, [sp, #4]
  4003e6:	1e5a      	subs	r2, r3, #1
  4003e8:	9201      	str	r2, [sp, #4]
  4003ea:	2b00      	cmp	r3, #0
  4003ec:	d1fa      	bne.n	4003e4 <aat31xx_set_backlight+0x24>
		base->PIO_SODR = arch_ioport_pin_to_mask(pin);
  4003ee:	632e      	str	r6, [r5, #48]	; 0x30
		}

		ioport_set_pin_level(BOARD_AAT31XX_SET_GPIO, IOPORT_PIN_LEVEL_HIGH);

		ul_delay = DELAY_PULSE;
  4003f0:	9401      	str	r4, [sp, #4]
		while (ul_delay--) {
  4003f2:	9b01      	ldr	r3, [sp, #4]
  4003f4:	1e5a      	subs	r2, r3, #1
  4003f6:	9201      	str	r2, [sp, #4]
  4003f8:	2b00      	cmp	r3, #0
  4003fa:	d1fa      	bne.n	4003f2 <aat31xx_set_backlight+0x32>
	for (i = 0; i < ul_level; i++) {
  4003fc:	3101      	adds	r1, #1
  4003fe:	4281      	cmp	r1, r0
  400400:	d3ee      	bcc.n	4003e0 <aat31xx_set_backlight+0x20>
		}
	}

	ul_delay = DELAY_ENABLE;
  400402:	f44f 3300 	mov.w	r3, #131072	; 0x20000
  400406:	9301      	str	r3, [sp, #4]
	while (ul_delay--) {
  400408:	9b01      	ldr	r3, [sp, #4]
  40040a:	1e5a      	subs	r2, r3, #1
  40040c:	9201      	str	r2, [sp, #4]
  40040e:	2b00      	cmp	r3, #0
  400410:	d1fa      	bne.n	400408 <aat31xx_set_backlight+0x48>
	}
}
  400412:	b002      	add	sp, #8
  400414:	bcf0      	pop	{r4, r5, r6, r7}
  400416:	4770      	bx	lr
  400418:	400e1200 	.word	0x400e1200

0040041c <aat31xx_disable_backlight>:

/**
 * \brief Switch off backlight.
 */
void aat31xx_disable_backlight(void)
{
  40041c:	b082      	sub	sp, #8
		base->PIO_CODR = arch_ioport_pin_to_mask(pin);
  40041e:	f44f 5200 	mov.w	r2, #8192	; 0x2000
  400422:	4b06      	ldr	r3, [pc, #24]	; (40043c <aat31xx_disable_backlight+0x20>)
  400424:	635a      	str	r2, [r3, #52]	; 0x34
	volatile uint32_t ul_delay;

	ioport_set_pin_level(BOARD_AAT31XX_SET_GPIO, IOPORT_PIN_LEVEL_LOW);

	ul_delay = DELAY_DISABLE;
  400426:	f44f 3300 	mov.w	r3, #131072	; 0x20000
  40042a:	9301      	str	r3, [sp, #4]
	while (ul_delay--) {
  40042c:	9b01      	ldr	r3, [sp, #4]
  40042e:	1e5a      	subs	r2, r3, #1
  400430:	9201      	str	r2, [sp, #4]
  400432:	2b00      	cmp	r3, #0
  400434:	d1fa      	bne.n	40042c <aat31xx_disable_backlight+0x10>
	}
}
  400436:	b002      	add	sp, #8
  400438:	4770      	bx	lr
  40043a:	bf00      	nop
  40043c:	400e1200 	.word	0x400e1200

00400440 <ili9225_delay>:

/**
 * \brief Delay function.
 */
static void ili9225_delay(uint32_t ul_ms)
{
  400440:	b082      	sub	sp, #8
	volatile uint32_t i;

	for(i = 0; i < ul_ms; i++) {
  400442:	2300      	movs	r3, #0
  400444:	9301      	str	r3, [sp, #4]
  400446:	9b01      	ldr	r3, [sp, #4]
  400448:	4298      	cmp	r0, r3
  40044a:	d911      	bls.n	400470 <ili9225_delay+0x30>
		for(i = 0; i < 100000; i++) {
  40044c:	2100      	movs	r1, #0
  40044e:	4a09      	ldr	r2, [pc, #36]	; (400474 <ili9225_delay+0x34>)
  400450:	9101      	str	r1, [sp, #4]
  400452:	9b01      	ldr	r3, [sp, #4]
  400454:	4293      	cmp	r3, r2
  400456:	d805      	bhi.n	400464 <ili9225_delay+0x24>
  400458:	9b01      	ldr	r3, [sp, #4]
  40045a:	3301      	adds	r3, #1
  40045c:	9301      	str	r3, [sp, #4]
  40045e:	9b01      	ldr	r3, [sp, #4]
  400460:	4293      	cmp	r3, r2
  400462:	d9f9      	bls.n	400458 <ili9225_delay+0x18>
	for(i = 0; i < ul_ms; i++) {
  400464:	9b01      	ldr	r3, [sp, #4]
  400466:	3301      	adds	r3, #1
  400468:	9301      	str	r3, [sp, #4]
  40046a:	9b01      	ldr	r3, [sp, #4]
  40046c:	4283      	cmp	r3, r0
  40046e:	d3ef      	bcc.n	400450 <ili9225_delay+0x10>
		}
	}
}
  400470:	b002      	add	sp, #8
  400472:	4770      	bx	lr
  400474:	0001869f 	.word	0x0001869f

00400478 <ili9225_check_box_coordinates>:
 * \param p_ul_x2 X coordinate of lower-right corner on LCD.
 * \param p_ul_y2 Y coordinate of lower-right corner on LCD.
 */
static void ili9225_check_box_coordinates(uint32_t *p_ul_x1, uint32_t *p_ul_y1,
		uint32_t *p_ul_x2, uint32_t *p_ul_y2)
{
  400478:	b430      	push	{r4, r5}
	uint32_t ul;

	if (*p_ul_x1 >= ILI9225_LCD_WIDTH) {
  40047a:	6804      	ldr	r4, [r0, #0]
  40047c:	2caf      	cmp	r4, #175	; 0xaf
		*p_ul_x1 = ILI9225_LCD_WIDTH - 1;
  40047e:	bf84      	itt	hi
  400480:	24af      	movhi	r4, #175	; 0xaf
  400482:	6004      	strhi	r4, [r0, #0]
	}

	if (*p_ul_x2 >= ILI9225_LCD_WIDTH) {
  400484:	6814      	ldr	r4, [r2, #0]
  400486:	2caf      	cmp	r4, #175	; 0xaf
		*p_ul_x2 = ILI9225_LCD_WIDTH - 1;
  400488:	bf84      	itt	hi
  40048a:	24af      	movhi	r4, #175	; 0xaf
  40048c:	6014      	strhi	r4, [r2, #0]
	}

	if (*p_ul_y1 >= ILI9225_LCD_HEIGHT) {
  40048e:	680c      	ldr	r4, [r1, #0]
  400490:	2cdb      	cmp	r4, #219	; 0xdb
		*p_ul_y1 = ILI9225_LCD_HEIGHT - 1;
  400492:	bf84      	itt	hi
  400494:	24db      	movhi	r4, #219	; 0xdb
  400496:	600c      	strhi	r4, [r1, #0]
	}

	if (*p_ul_y2 >= ILI9225_LCD_HEIGHT) {
  400498:	681c      	ldr	r4, [r3, #0]
  40049a:	2cdb      	cmp	r4, #219	; 0xdb
		*p_ul_y2 = ILI9225_LCD_HEIGHT - 1;
  40049c:	bf84      	itt	hi
  40049e:	24db      	movhi	r4, #219	; 0xdb
  4004a0:	601c      	strhi	r4, [r3, #0]
	}

	if (*p_ul_x1 > *p_ul_x2) {
  4004a2:	6804      	ldr	r4, [r0, #0]
  4004a4:	6815      	ldr	r5, [r2, #0]
  4004a6:	42ac      	cmp	r4, r5
		ul = *p_ul_x1;
		*p_ul_x1 = *p_ul_x2;
  4004a8:	bf84      	itt	hi
  4004aa:	6005      	strhi	r5, [r0, #0]
		*p_ul_x2 = ul;
  4004ac:	6014      	strhi	r4, [r2, #0]
	}

	if (*p_ul_y1 > *p_ul_y2) {
  4004ae:	680a      	ldr	r2, [r1, #0]
  4004b0:	6818      	ldr	r0, [r3, #0]
  4004b2:	4282      	cmp	r2, r0
		ul = *p_ul_y1;
		*p_ul_y1 = *p_ul_y2;
  4004b4:	bf84      	itt	hi
  4004b6:	6008      	strhi	r0, [r1, #0]
		*p_ul_y2 = ul;
  4004b8:	601a      	strhi	r2, [r3, #0]
	}
}
  4004ba:	bc30      	pop	{r4, r5}
  4004bc:	4770      	bx	lr
	...

004004c0 <ili9225_write_cmd>:
{
  4004c0:	b570      	push	{r4, r5, r6, lr}
  4004c2:	4606      	mov	r6, r0
	spi_set_bits_per_transfer(BOARD_ILI9225_SPI, BOARD_ILI9225_SPI_NPCS, SPI_CSR_BITS_8_BIT);
  4004c4:	4c0b      	ldr	r4, [pc, #44]	; (4004f4 <ili9225_write_cmd+0x34>)
  4004c6:	2200      	movs	r2, #0
  4004c8:	2102      	movs	r1, #2
  4004ca:	4620      	mov	r0, r4
  4004cc:	4d0a      	ldr	r5, [pc, #40]	; (4004f8 <ili9225_write_cmd+0x38>)
  4004ce:	47a8      	blx	r5
	p_spi->SPI_CR = SPI_CR_SPIEN;
  4004d0:	2301      	movs	r3, #1
  4004d2:	6023      	str	r3, [r4, #0]
	gpio_set_pin_low(BOARD_ILI9225_RS_GPIO);
  4004d4:	201c      	movs	r0, #28
  4004d6:	4b09      	ldr	r3, [pc, #36]	; (4004fc <ili9225_write_cmd+0x3c>)
  4004d8:	4798      	blx	r3
	spi_write(BOARD_ILI9225_SPI, uc_cmd, BOARD_ILI9225_SPI_NPCS, 0);
  4004da:	2300      	movs	r3, #0
  4004dc:	2202      	movs	r2, #2
  4004de:	4631      	mov	r1, r6
  4004e0:	4620      	mov	r0, r4
  4004e2:	4e07      	ldr	r6, [pc, #28]	; (400500 <ili9225_write_cmd+0x40>)
  4004e4:	47b0      	blx	r6
	p_spi->SPI_CR = SPI_CR_SPIDIS;
  4004e6:	2102      	movs	r1, #2
  4004e8:	6021      	str	r1, [r4, #0]
	spi_set_bits_per_transfer(BOARD_ILI9225_SPI, BOARD_ILI9225_SPI_NPCS, SPI_CSR_BITS_16_BIT);
  4004ea:	2280      	movs	r2, #128	; 0x80
  4004ec:	4620      	mov	r0, r4
  4004ee:	47a8      	blx	r5
  4004f0:	bd70      	pop	{r4, r5, r6, pc}
  4004f2:	bf00      	nop
  4004f4:	40008000 	.word	0x40008000
  4004f8:	0040105b 	.word	0x0040105b
  4004fc:	00400b9b 	.word	0x00400b9b
  400500:	00400fa5 	.word	0x00400fa5

00400504 <ili9225_write_ram>:
{
  400504:	b538      	push	{r3, r4, r5, lr}
  400506:	4605      	mov	r5, r0
	p_spi->SPI_CR = SPI_CR_SPIEN;
  400508:	4c07      	ldr	r4, [pc, #28]	; (400528 <ili9225_write_ram+0x24>)
  40050a:	2301      	movs	r3, #1
  40050c:	6023      	str	r3, [r4, #0]
	gpio_set_pin_high(BOARD_ILI9225_RS_GPIO);
  40050e:	201c      	movs	r0, #28
  400510:	4b06      	ldr	r3, [pc, #24]	; (40052c <ili9225_write_ram+0x28>)
  400512:	4798      	blx	r3
	spi_write(BOARD_ILI9225_SPI, us_data, BOARD_ILI9225_SPI_NPCS, 0);
  400514:	2300      	movs	r3, #0
  400516:	2202      	movs	r2, #2
  400518:	4629      	mov	r1, r5
  40051a:	4620      	mov	r0, r4
  40051c:	4d04      	ldr	r5, [pc, #16]	; (400530 <ili9225_write_ram+0x2c>)
  40051e:	47a8      	blx	r5
	p_spi->SPI_CR = SPI_CR_SPIDIS;
  400520:	2302      	movs	r3, #2
  400522:	6023      	str	r3, [r4, #0]
  400524:	bd38      	pop	{r3, r4, r5, pc}
  400526:	bf00      	nop
  400528:	40008000 	.word	0x40008000
  40052c:	00400b81 	.word	0x00400b81
  400530:	00400fa5 	.word	0x00400fa5

00400534 <ili9225_write_register>:
{
  400534:	b510      	push	{r4, lr}
  400536:	460c      	mov	r4, r1
	ili9225_write_cmd(uc_reg);
  400538:	4b02      	ldr	r3, [pc, #8]	; (400544 <ili9225_write_register+0x10>)
  40053a:	4798      	blx	r3
	ili9225_write_ram(us_data);
  40053c:	4620      	mov	r0, r4
  40053e:	4b02      	ldr	r3, [pc, #8]	; (400548 <ili9225_write_register+0x14>)
  400540:	4798      	blx	r3
  400542:	bd10      	pop	{r4, pc}
  400544:	004004c1 	.word	0x004004c1
  400548:	00400505 	.word	0x00400505

0040054c <ili9225_write_ram_buffer>:
	if (ul_size == 0)
  40054c:	b901      	cbnz	r1, 400550 <ili9225_write_ram_buffer+0x4>
  40054e:	4770      	bx	lr
{
  400550:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  400554:	b082      	sub	sp, #8
  400556:	460c      	mov	r4, r1
  400558:	4605      	mov	r5, r0
	p_spi->SPI_CR = SPI_CR_SPIEN;
  40055a:	2201      	movs	r2, #1
  40055c:	4b10      	ldr	r3, [pc, #64]	; (4005a0 <ili9225_write_ram_buffer+0x54>)
  40055e:	601a      	str	r2, [r3, #0]
	gpio_set_pin_high(BOARD_ILI9225_RS_GPIO);
  400560:	201c      	movs	r0, #28
  400562:	4b10      	ldr	r3, [pc, #64]	; (4005a4 <ili9225_write_ram_buffer+0x58>)
  400564:	4798      	blx	r3
	for(i = 0; i < ul_size; i++){
  400566:	2300      	movs	r3, #0
  400568:	9301      	str	r3, [sp, #4]
  40056a:	9b01      	ldr	r3, [sp, #4]
  40056c:	429c      	cmp	r4, r3
  40056e:	d910      	bls.n	400592 <ili9225_write_ram_buffer+0x46>
		spi_write(BOARD_ILI9225_SPI, p_us_buf[i], BOARD_ILI9225_SPI_NPCS, 0);
  400570:	f8df 802c 	ldr.w	r8, [pc, #44]	; 4005a0 <ili9225_write_ram_buffer+0x54>
  400574:	2700      	movs	r7, #0
  400576:	4e0c      	ldr	r6, [pc, #48]	; (4005a8 <ili9225_write_ram_buffer+0x5c>)
  400578:	9901      	ldr	r1, [sp, #4]
  40057a:	463b      	mov	r3, r7
  40057c:	2202      	movs	r2, #2
  40057e:	f835 1011 	ldrh.w	r1, [r5, r1, lsl #1]
  400582:	4640      	mov	r0, r8
  400584:	47b0      	blx	r6
	for(i = 0; i < ul_size; i++){
  400586:	9b01      	ldr	r3, [sp, #4]
  400588:	3301      	adds	r3, #1
  40058a:	9301      	str	r3, [sp, #4]
  40058c:	9b01      	ldr	r3, [sp, #4]
  40058e:	429c      	cmp	r4, r3
  400590:	d8f2      	bhi.n	400578 <ili9225_write_ram_buffer+0x2c>
	p_spi->SPI_CR = SPI_CR_SPIDIS;
  400592:	2202      	movs	r2, #2
  400594:	4b02      	ldr	r3, [pc, #8]	; (4005a0 <ili9225_write_ram_buffer+0x54>)
  400596:	601a      	str	r2, [r3, #0]
}
  400598:	b002      	add	sp, #8
  40059a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  40059e:	bf00      	nop
  4005a0:	40008000 	.word	0x40008000
  4005a4:	00400b81 	.word	0x00400b81
  4005a8:	00400fa5 	.word	0x00400fa5

004005ac <ili9225_spi_handler>:
 *
 * \return The interrupt mask value.
 */
static inline uint32_t spi_read_interrupt_mask(Spi *p_spi)
{
	return p_spi->SPI_IMR;
  4005ac:	4b03      	ldr	r3, [pc, #12]	; (4005bc <ili9225_spi_handler+0x10>)
  4005ae:	69da      	ldr	r2, [r3, #28]
	p_spi->SPI_IDR = ul_sources;
  4005b0:	619a      	str	r2, [r3, #24]
	/* Disable interrupts */
	ul_spi_reg = spi_read_interrupt_mask(BOARD_ILI9225_SPI);
	spi_disable_interrupt(BOARD_ILI9225_SPI, ul_spi_reg);

	/* Set the flag to notify the end of transfer */
	g_by_transfend_flag = 1;
  4005b2:	2201      	movs	r2, #1
  4005b4:	4b02      	ldr	r3, [pc, #8]	; (4005c0 <ili9225_spi_handler+0x14>)
  4005b6:	701a      	strb	r2, [r3, #0]
  4005b8:	4770      	bx	lr
  4005ba:	bf00      	nop
  4005bc:	40008000 	.word	0x40008000
  4005c0:	20000ac8 	.word	0x20000ac8

004005c4 <ili9225_display_on>:

/**
 * \brief Turn on the LCD.
 */
void ili9225_display_on(void)
{
  4005c4:	b508      	push	{r3, lr}
	ili9225_write_register(ILI9225_DISP_CTRL1,
  4005c6:	f241 0117 	movw	r1, #4119	; 0x1017
  4005ca:	2007      	movs	r0, #7
  4005cc:	4b01      	ldr	r3, [pc, #4]	; (4005d4 <ili9225_display_on+0x10>)
  4005ce:	4798      	blx	r3
  4005d0:	bd08      	pop	{r3, pc}
  4005d2:	bf00      	nop
  4005d4:	00400535 	.word	0x00400535

004005d8 <ili9225_display_off>:

/**
 * \brief Turn off the LCD.
 */
void ili9225_display_off(void)
{
  4005d8:	b508      	push	{r3, lr}
	ili9225_write_register(ILI9225_DISP_CTRL1, 0x0000);
  4005da:	2100      	movs	r1, #0
  4005dc:	2007      	movs	r0, #7
  4005de:	4b01      	ldr	r3, [pc, #4]	; (4005e4 <ili9225_display_off+0xc>)
  4005e0:	4798      	blx	r3
  4005e2:	bd08      	pop	{r3, pc}
  4005e4:	00400535 	.word	0x00400535

004005e8 <ili9225_set_foreground_color>:
{
	uint32_t i;
	ili9225_color_t w_color;

	/* Convert 24 bit RGB color into 5-6-5 RGB color */
	w_color = (ul_rgb24bits & 0xF80000) >> 8 |
  4005e8:	0a02      	lsrs	r2, r0, #8
  4005ea:	f422 62ff 	bic.w	r2, r2, #2040	; 0x7f8
  4005ee:	f022 0207 	bic.w	r2, r2, #7
			(ul_rgb24bits & 0x00FC00) >> 5 |
  4005f2:	0943      	lsrs	r3, r0, #5
  4005f4:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
	w_color = (ul_rgb24bits & 0xF80000) >> 8 |
  4005f8:	431a      	orrs	r2, r3
			(ul_rgb24bits & 0x0000F8) >> 3;
  4005fa:	f3c0 00c4 	ubfx	r0, r0, #3, #5
	w_color = (ul_rgb24bits & 0xF80000) >> 8 |
  4005fe:	4302      	orrs	r2, r0
  400600:	b292      	uxth	r2, r2
  400602:	4904      	ldr	r1, [pc, #16]	; (400614 <ili9225_set_foreground_color+0x2c>)
  400604:	1e8b      	subs	r3, r1, #2
  400606:	f501 71af 	add.w	r1, r1, #350	; 0x15e

	/* Fill the cache with selected color */
	for (i = 0; i < LCD_DATA_CACHE_SIZE; ++i) {
		g_ul_pixel_cache[i] = w_color;
  40060a:	f823 2f02 	strh.w	r2, [r3, #2]!
	for (i = 0; i < LCD_DATA_CACHE_SIZE; ++i) {
  40060e:	428b      	cmp	r3, r1
  400610:	d1fb      	bne.n	40060a <ili9225_set_foreground_color+0x22>
	}
}
  400612:	4770      	bx	lr
  400614:	20000acc 	.word	0x20000acc

00400618 <ili9225_set_window>:
 * \param ul_width The width of the window.
 * \param ul_height The height of the window.
 */
void ili9225_set_window(uint32_t ul_x, uint32_t ul_y, uint32_t ul_width,
		uint32_t ul_height)
{
  400618:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  40061a:	460e      	mov	r6, r1
  40061c:	461c      	mov	r4, r3
	Assert(ul_width <= (0xB0 - ul_x));
	Assert(ul_height <= (0xDC - ul_y));

	/* Set Horizontal Address End Position */
	ili9225_write_register(ILI9225_HORIZONTAL_WINDOW_ADDR1,
			ILI9225_HORIZONTAL_WINDOW_ADDR1_HEA((uint16_t)(ul_x + ul_width - 1)));
  40061e:	b287      	uxth	r7, r0
  400620:	3a01      	subs	r2, #1
  400622:	18b9      	adds	r1, r7, r2
	ili9225_write_register(ILI9225_HORIZONTAL_WINDOW_ADDR1,
  400624:	b2c9      	uxtb	r1, r1
  400626:	2036      	movs	r0, #54	; 0x36
  400628:	4d07      	ldr	r5, [pc, #28]	; (400648 <ili9225_set_window+0x30>)
  40062a:	47a8      	blx	r5

	/* Set Horizontal Address Start Position */
	ili9225_write_register(ILI9225_HORIZONTAL_WINDOW_ADDR2,
  40062c:	b2f9      	uxtb	r1, r7
  40062e:	2037      	movs	r0, #55	; 0x37
  400630:	47a8      	blx	r5
			ILI9225_HORIZONTAL_WINDOW_ADDR2_HSA((uint16_t)ul_x));

	/* Set Vertical Address End Position */
	ili9225_write_register(ILI9225_VERTICAL_WINDOW_ADDR1,
			ILI9225_VERTICAL_WINDOW_ADDR1_VEA((uint16_t)(ul_y + ul_height - 1)));
  400632:	b2b6      	uxth	r6, r6
  400634:	3c01      	subs	r4, #1
  400636:	1931      	adds	r1, r6, r4
	ili9225_write_register(ILI9225_VERTICAL_WINDOW_ADDR1,
  400638:	b2c9      	uxtb	r1, r1
  40063a:	2038      	movs	r0, #56	; 0x38
  40063c:	47a8      	blx	r5

	/* Set Vertical Address Start Position */
	ili9225_write_register(ILI9225_VERTICAL_WINDOW_ADDR2,
  40063e:	b2f1      	uxtb	r1, r6
  400640:	2039      	movs	r0, #57	; 0x39
  400642:	47a8      	blx	r5
  400644:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  400646:	bf00      	nop
  400648:	00400535 	.word	0x00400535

0040064c <ili9225_set_cursor_position>:
 *
 * \param ul_x X coordinate of upper-left corner on LCD.
 * \param ul_y Y coordinate of upper-left corner on LCD.
 */
void ili9225_set_cursor_position(uint16_t ul_x, uint16_t ul_y)
{
  40064c:	b538      	push	{r3, r4, r5, lr}
  40064e:	460d      	mov	r5, r1
	/* GRAM Horizontal/Vertical Address Set (R20h, R21h) */
	ili9225_write_register(ILI9225_RAM_ADDR_SET1, ILI9225_RAM_ADDR_SET1_AD(ul_x));  /* column */
  400650:	b2c1      	uxtb	r1, r0
  400652:	2020      	movs	r0, #32
  400654:	4c02      	ldr	r4, [pc, #8]	; (400660 <ili9225_set_cursor_position+0x14>)
  400656:	47a0      	blx	r4
	ili9225_write_register(ILI9225_RAM_ADDR_SET2, ILI9225_RAM_ADDR_SET2_AD(ul_y));  /* row */
  400658:	b2e9      	uxtb	r1, r5
  40065a:	2021      	movs	r0, #33	; 0x21
  40065c:	47a0      	blx	r4
  40065e:	bd38      	pop	{r3, r4, r5, pc}
  400660:	00400535 	.word	0x00400535

00400664 <ili9225_init>:
{
  400664:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
  400668:	b084      	sub	sp, #16
  40066a:	4681      	mov	r9, r0
	struct spi_device ILI9225_SPI_DEVICE = {
  40066c:	f04f 0802 	mov.w	r8, #2
  400670:	af04      	add	r7, sp, #16
  400672:	f847 8d04 	str.w	r8, [r7, #-4]!
	gpio_set_pin_high(BOARD_ILI9225_RSTN_GPIO);
  400676:	201d      	movs	r0, #29
  400678:	4c5e      	ldr	r4, [pc, #376]	; (4007f4 <ili9225_init+0x190>)
  40067a:	47a0      	blx	r4
	ili9225_delay(2); /* wait for at least 2ms */
  40067c:	4640      	mov	r0, r8
  40067e:	4e5e      	ldr	r6, [pc, #376]	; (4007f8 <ili9225_init+0x194>)
  400680:	47b0      	blx	r6
	gpio_set_pin_low(BOARD_ILI9225_RSTN_GPIO);
  400682:	201d      	movs	r0, #29
  400684:	4b5d      	ldr	r3, [pc, #372]	; (4007fc <ili9225_init+0x198>)
  400686:	4798      	blx	r3
	ili9225_delay(20); /* wait for at least 20ms */
  400688:	2014      	movs	r0, #20
  40068a:	47b0      	blx	r6
	gpio_set_pin_high(BOARD_ILI9225_RSTN_GPIO);
  40068c:	201d      	movs	r0, #29
  40068e:	47a0      	blx	r4
	ili9225_delay(50); /* wait for at least 50ms */
  400690:	2032      	movs	r0, #50	; 0x32
  400692:	47b0      	blx	r6
	p_spi->SPI_CR = SPI_CR_SPIDIS;
  400694:	4c5a      	ldr	r4, [pc, #360]	; (400800 <ili9225_init+0x19c>)
  400696:	f8c4 8000 	str.w	r8, [r4]
	p_spi->SPI_CR = SPI_CR_SWRST;
  40069a:	2380      	movs	r3, #128	; 0x80
  40069c:	6023      	str	r3, [r4, #0]
	p_spi->SPI_CR = SPI_CR_LASTXFER;
  40069e:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
  4006a2:	6023      	str	r3, [r4, #0]

    \param [in]      IRQn  External interrupt number. Value cannot be negative.
 */
__STATIC_INLINE void NVIC_DisableIRQ(IRQn_Type IRQn)
{
  NVIC->ICER[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); /* disable interrupt */
  4006a4:	4b57      	ldr	r3, [pc, #348]	; (400804 <ili9225_init+0x1a0>)
  4006a6:	f44f 1200 	mov.w	r2, #2097152	; 0x200000
  4006aa:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80

    \param [in]      IRQn  External interrupt number. Value cannot be negative.
 */
__STATIC_INLINE void NVIC_ClearPendingIRQ(IRQn_Type IRQn)
{
  NVIC->ICPR[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); /* Clear pending interrupt */
  4006ae:	f8c3 2180 	str.w	r2, [r3, #384]	; 0x180
__STATIC_INLINE void NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
  if(IRQn < 0) {
    SCB->SHP[((uint32_t)(IRQn) & 0xF)-4] = ((priority << (8 - __NVIC_PRIO_BITS)) & 0xff); } /* set Priority for Cortex-M  System Interrupts */
  else {
    NVIC->IP[(uint32_t)(IRQn)] = ((priority << (8 - __NVIC_PRIO_BITS)) & 0xff);    }        /* set Priority for device specific Interrupts  */
  4006b2:	2500      	movs	r5, #0
  4006b4:	f883 5315 	strb.w	r5, [r3, #789]	; 0x315
  NVIC->ISER[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); /* enable interrupt */
  4006b8:	601a      	str	r2, [r3, #0]
	spi_master_init(BOARD_ILI9225_SPI);
  4006ba:	4620      	mov	r0, r4
  4006bc:	4b52      	ldr	r3, [pc, #328]	; (400808 <ili9225_init+0x1a4>)
  4006be:	4798      	blx	r3
	spi_master_setup_device(BOARD_ILI9225_SPI, &ILI9225_SPI_DEVICE, SPI_MODE_0, ILI9225_SPI_BAUDRATE, 0);
  4006c0:	9500      	str	r5, [sp, #0]
  4006c2:	4b52      	ldr	r3, [pc, #328]	; (40080c <ili9225_init+0x1a8>)
  4006c4:	462a      	mov	r2, r5
  4006c6:	4639      	mov	r1, r7
  4006c8:	4620      	mov	r0, r4
  4006ca:	f8df a15c 	ldr.w	sl, [pc, #348]	; 400828 <ili9225_init+0x1c4>
  4006ce:	47d0      	blx	sl
	spi_select_device(BOARD_ILI9225_SPI, &ILI9225_SPI_DEVICE);
  4006d0:	4639      	mov	r1, r7
  4006d2:	4620      	mov	r0, r4
  4006d4:	4b4e      	ldr	r3, [pc, #312]	; (400810 <ili9225_init+0x1ac>)
  4006d6:	4798      	blx	r3
	p_spi->SPI_CR = SPI_CR_SPIEN;
  4006d8:	2701      	movs	r7, #1
  4006da:	6027      	str	r7, [r4, #0]
	p_spi->SPI_IER = ul_sources;
  4006dc:	6167      	str	r7, [r4, #20]
	ili9225_display_off();
  4006de:	4b4d      	ldr	r3, [pc, #308]	; (400814 <ili9225_init+0x1b0>)
  4006e0:	4798      	blx	r3
	ili9225_write_register(ILI9225_DRIVER_OUTPUT_CTRL, ILI9225_DRIVER_OUTPUT_CTRL_SS |
  4006e2:	f44f 718e 	mov.w	r1, #284	; 0x11c
  4006e6:	4638      	mov	r0, r7
  4006e8:	4c4b      	ldr	r4, [pc, #300]	; (400818 <ili9225_init+0x1b4>)
  4006ea:	47a0      	blx	r4
	ili9225_write_register(ILI9225_LCD_AC_DRIVING_CTRL, ILI9225_LCD_AC_DRIVING_CTRL_INV(0x01));
  4006ec:	f44f 7180 	mov.w	r1, #256	; 0x100
  4006f0:	4640      	mov	r0, r8
  4006f2:	47a0      	blx	r4
	ili9225_write_register(ILI9225_ENTRY_MODE, ILI9225_ENTRY_MODE_BGR | ILI9225_ENTRY_MODE_ID(0x03));
  4006f4:	f241 0130 	movw	r1, #4144	; 0x1030
  4006f8:	2003      	movs	r0, #3
  4006fa:	47a0      	blx	r4
	ili9225_write_register(ILI9225_BLANK_PERIOD_CTRL1, ILI9225_BLANK_PERIOD_CTRL1_BP(0x08) |
  4006fc:	f640 0108 	movw	r1, #2056	; 0x808
  400700:	2008      	movs	r0, #8
  400702:	47a0      	blx	r4
	ili9225_write_register(ILI9225_INTERFACE_CTRL, ILI9225_INTERFACE_CTRL_RIM(0x01));
  400704:	4639      	mov	r1, r7
  400706:	200c      	movs	r0, #12
  400708:	47a0      	blx	r4
	ili9225_write_register(ILI9225_OSC_CTRL, ILI9225_OSC_CTRL_ON | ILI9225_OSC_CTRL_FOSC(0x0a));
  40070a:	f640 2101 	movw	r1, #2561	; 0xa01
  40070e:	200f      	movs	r0, #15
  400710:	47a0      	blx	r4
	ili9225_write_register(ILI9225_RAM_ADDR_SET1, ILI9225_RAM_ADDR_SET1_AD(ILI9225_LCD_WIDTH));
  400712:	21b0      	movs	r1, #176	; 0xb0
  400714:	2020      	movs	r0, #32
  400716:	47a0      	blx	r4
	ili9225_write_register(ILI9225_RAM_ADDR_SET2, ILI9225_RAM_ADDR_SET2_AD(ILI9225_LCD_HEIGHT));
  400718:	21dc      	movs	r1, #220	; 0xdc
  40071a:	2021      	movs	r0, #33	; 0x21
  40071c:	47a0      	blx	r4
	ili9225_write_register(ILI9225_POWER_CTRL1, ILI9225_POWER_CTRL1_SAP(0x0A));
  40071e:	f44f 6120 	mov.w	r1, #2560	; 0xa00
  400722:	2010      	movs	r0, #16
  400724:	47a0      	blx	r4
	ili9225_write_register(ILI9225_POWER_CTRL2, ILI9225_POWER_CTRL2_APON | ILI9225_POWER_CTRL2_AON |
  400726:	f241 0138 	movw	r1, #4152	; 0x1038
  40072a:	2011      	movs	r0, #17
  40072c:	47a0      	blx	r4
	ili9225_delay(50); /* Wait for at least 50ms */
  40072e:	2032      	movs	r0, #50	; 0x32
  400730:	47b0      	blx	r6
	ili9225_write_register(ILI9225_POWER_CTRL3, ILI9225_POWER_CTRL3_BT(0x01) |
  400732:	f241 1121 	movw	r1, #4385	; 0x1121
  400736:	2012      	movs	r0, #18
  400738:	47a0      	blx	r4
	ili9225_write_register(ILI9225_POWER_CTRL4, ILI9225_POWER_CTRL4_GVD(0x4e));
  40073a:	214e      	movs	r1, #78	; 0x4e
  40073c:	2013      	movs	r0, #19
  40073e:	47a0      	blx	r4
	ili9225_write_register(ILI9225_POWER_CTRL5, ILI9225_POWER_CTRL5_VCM(0x67) |
  400740:	f246 716f 	movw	r1, #26479	; 0x676f
  400744:	2014      	movs	r0, #20
  400746:	47a0      	blx	r4
	ili9225_write_register(ILI9225_GATE_SCAN_CTRL, 0x0000);
  400748:	4629      	mov	r1, r5
  40074a:	2030      	movs	r0, #48	; 0x30
  40074c:	47a0      	blx	r4
	ili9225_write_register(ILI9225_VERTICAL_SCROLL_CTRL1,
  40074e:	21db      	movs	r1, #219	; 0xdb
  400750:	2031      	movs	r0, #49	; 0x31
  400752:	47a0      	blx	r4
	ili9225_write_register(ILI9225_VERTICAL_SCROLL_CTRL2, 0x0000);
  400754:	4629      	mov	r1, r5
  400756:	2032      	movs	r0, #50	; 0x32
  400758:	47a0      	blx	r4
	ili9225_write_register(ILI9225_VERTICAL_SCROLL_CTRL3, 0x0000);
  40075a:	4629      	mov	r1, r5
  40075c:	2033      	movs	r0, #51	; 0x33
  40075e:	47a0      	blx	r4
	ili9225_write_register(ILI9225_PARTIAL_DRIVING_POS1,
  400760:	21db      	movs	r1, #219	; 0xdb
  400762:	2034      	movs	r0, #52	; 0x34
  400764:	47a0      	blx	r4
	ili9225_write_register(ILI9225_PARTIAL_DRIVING_POS2, 0x0000);
  400766:	4629      	mov	r1, r5
  400768:	2035      	movs	r0, #53	; 0x35
  40076a:	47a0      	blx	r4
	ili9225_write_register(ILI9225_HORIZONTAL_WINDOW_ADDR1,
  40076c:	21b0      	movs	r1, #176	; 0xb0
  40076e:	2036      	movs	r0, #54	; 0x36
  400770:	47a0      	blx	r4
	ili9225_write_register(ILI9225_HORIZONTAL_WINDOW_ADDR2, 0x0000);
  400772:	4629      	mov	r1, r5
  400774:	2037      	movs	r0, #55	; 0x37
  400776:	47a0      	blx	r4
	ili9225_write_register(ILI9225_VERTICAL_WINDOW_ADDR1,
  400778:	21dc      	movs	r1, #220	; 0xdc
  40077a:	2038      	movs	r0, #56	; 0x38
  40077c:	47a0      	blx	r4
	ili9225_write_register(ILI9225_VERTICAL_WINDOW_ADDR2, 0x0000);
  40077e:	4629      	mov	r1, r5
  400780:	2039      	movs	r0, #57	; 0x39
  400782:	47a0      	blx	r4
	ili9225_write_register(ILI9225_GAMMA_CTRL1, 0x0000);
  400784:	4629      	mov	r1, r5
  400786:	2050      	movs	r0, #80	; 0x50
  400788:	47a0      	blx	r4
	ili9225_write_register(ILI9225_GAMMA_CTRL2, ILI9225_GAMMA_CTRL2_KP3(0x06) |
  40078a:	f240 610a 	movw	r1, #1546	; 0x60a
  40078e:	2051      	movs	r0, #81	; 0x51
  400790:	47a0      	blx	r4
	ili9225_write_register(ILI9225_GAMMA_CTRL3, ILI9225_GAMMA_CTRL3_KP5(0x0D) |
  400792:	f640 510a 	movw	r1, #3338	; 0xd0a
  400796:	2052      	movs	r0, #82	; 0x52
  400798:	47a0      	blx	r4
	ili9225_write_register(ILI9225_GAMMA_CTRL4, ILI9225_GAMMA_CTRL4_RP1(0x03) |
  40079a:	f240 3103 	movw	r1, #771	; 0x303
  40079e:	2053      	movs	r0, #83	; 0x53
  4007a0:	47a0      	blx	r4
	ili9225_write_register(ILI9225_GAMMA_CTRL5, ILI9225_GAMMA_CTRL5_KN1(0x0A) |
  4007a2:	f640 210d 	movw	r1, #2573	; 0xa0d
  4007a6:	2054      	movs	r0, #84	; 0x54
  4007a8:	47a0      	blx	r4
	ili9225_write_register(ILI9225_GAMMA_CTRL6, ILI9225_GAMMA_CTRL6_KN3(0x0A) |
  4007aa:	f640 2106 	movw	r1, #2566	; 0xa06
  4007ae:	2055      	movs	r0, #85	; 0x55
  4007b0:	47a0      	blx	r4
	ili9225_write_register(ILI9225_GAMMA_CTRL7, 0x0000);
  4007b2:	4629      	mov	r1, r5
  4007b4:	2056      	movs	r0, #86	; 0x56
  4007b6:	47a0      	blx	r4
	ili9225_write_register(ILI9225_GAMMA_CTRL8, ILI9225_GAMMA_CTRL8_RN1(0x03) |
  4007b8:	f240 3103 	movw	r1, #771	; 0x303
  4007bc:	2057      	movs	r0, #87	; 0x57
  4007be:	47a0      	blx	r4
	ili9225_write_register(ILI9225_GAMMA_CTRL9, 0x0000);
  4007c0:	4629      	mov	r1, r5
  4007c2:	2058      	movs	r0, #88	; 0x58
  4007c4:	47a0      	blx	r4
	ili9225_write_register(ILI9225_GAMMA_CTRL10, 0x0000);
  4007c6:	4629      	mov	r1, r5
  4007c8:	2059      	movs	r0, #89	; 0x59
  4007ca:	47a0      	blx	r4
	ili9225_set_window(0, 0, p_opt->ul_width, p_opt->ul_height);
  4007cc:	f8d9 3004 	ldr.w	r3, [r9, #4]
  4007d0:	f8d9 2000 	ldr.w	r2, [r9]
  4007d4:	4629      	mov	r1, r5
  4007d6:	4628      	mov	r0, r5
  4007d8:	4c10      	ldr	r4, [pc, #64]	; (40081c <ili9225_init+0x1b8>)
  4007da:	47a0      	blx	r4
	ili9225_set_foreground_color(p_opt->foreground_color);
  4007dc:	f8d9 0008 	ldr.w	r0, [r9, #8]
  4007e0:	4b0f      	ldr	r3, [pc, #60]	; (400820 <ili9225_init+0x1bc>)
  4007e2:	4798      	blx	r3
	ili9225_set_cursor_position(0, 0);
  4007e4:	4629      	mov	r1, r5
  4007e6:	4628      	mov	r0, r5
  4007e8:	4b0e      	ldr	r3, [pc, #56]	; (400824 <ili9225_init+0x1c0>)
  4007ea:	4798      	blx	r3
}
  4007ec:	4628      	mov	r0, r5
  4007ee:	b004      	add	sp, #16
  4007f0:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  4007f4:	00400b81 	.word	0x00400b81
  4007f8:	00400441 	.word	0x00400441
  4007fc:	00400b9b 	.word	0x00400b9b
  400800:	40008000 	.word	0x40008000
  400804:	e000e100 	.word	0xe000e100
  400808:	00400195 	.word	0x00400195
  40080c:	00bebc20 	.word	0x00bebc20
  400810:	00400269 	.word	0x00400269
  400814:	004005d9 	.word	0x004005d9
  400818:	00400535 	.word	0x00400535
  40081c:	00400619 	.word	0x00400619
  400820:	004005e9 	.word	0x004005e9
  400824:	0040064d 	.word	0x0040064d
  400828:	004001e9 	.word	0x004001e9

0040082c <ili9225_draw_pixel>:
 *
 * \return 0 if succeeds, otherwise fails.
 */
uint32_t ili9225_draw_pixel(uint32_t ul_x, uint32_t ul_y)
{
	if ((ul_x >= ILI9225_LCD_WIDTH) || (ul_y >= ILI9225_LCD_HEIGHT)) {
  40082c:	28af      	cmp	r0, #175	; 0xaf
  40082e:	d811      	bhi.n	400854 <ili9225_draw_pixel+0x28>
  400830:	29db      	cmp	r1, #219	; 0xdb
  400832:	d901      	bls.n	400838 <ili9225_draw_pixel+0xc>
		return 1;
  400834:	2001      	movs	r0, #1
  400836:	4770      	bx	lr
{
  400838:	b508      	push	{r3, lr}
	}

	/* Set cursor */
	ili9225_set_cursor_position(ul_x, ul_y);
  40083a:	b289      	uxth	r1, r1
  40083c:	b280      	uxth	r0, r0
  40083e:	4b06      	ldr	r3, [pc, #24]	; (400858 <ili9225_draw_pixel+0x2c>)
  400840:	4798      	blx	r3
	ili9225_write_cmd(ILI9225_GRAM_DATA_REG);
  400842:	2022      	movs	r0, #34	; 0x22
  400844:	4b05      	ldr	r3, [pc, #20]	; (40085c <ili9225_draw_pixel+0x30>)
  400846:	4798      	blx	r3

	/* Prepare to write in GRAM */
	ili9225_write_ram_prepare();
	ili9225_write_ram(*g_ul_pixel_cache);
  400848:	4b05      	ldr	r3, [pc, #20]	; (400860 <ili9225_draw_pixel+0x34>)
  40084a:	8818      	ldrh	r0, [r3, #0]
  40084c:	4b05      	ldr	r3, [pc, #20]	; (400864 <ili9225_draw_pixel+0x38>)
  40084e:	4798      	blx	r3
	return 0;
  400850:	2000      	movs	r0, #0
  400852:	bd08      	pop	{r3, pc}
		return 1;
  400854:	2001      	movs	r0, #1
  400856:	4770      	bx	lr
  400858:	0040064d 	.word	0x0040064d
  40085c:	004004c1 	.word	0x004004c1
  400860:	20000acc 	.word	0x20000acc
  400864:	00400505 	.word	0x00400505

00400868 <ili9225_draw_filled_rectangle>:
 * \param ul_x2 X coordinate of lower-right corner on LCD.
 * \param ul_y2 Y coordinate of lower-right corner on LCD.
 */
void ili9225_draw_filled_rectangle(uint32_t ul_x1, uint32_t ul_y1,
		uint32_t ul_x2, uint32_t ul_y2)
{
  400868:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  40086c:	b084      	sub	sp, #16
  40086e:	9003      	str	r0, [sp, #12]
  400870:	9102      	str	r1, [sp, #8]
  400872:	9201      	str	r2, [sp, #4]
  400874:	aa04      	add	r2, sp, #16
  400876:	f842 3d10 	str.w	r3, [r2, #-16]!
	uint32_t size, blocks;

	/* Swap coordinates if necessary */
	ili9225_check_box_coordinates(&ul_x1, &ul_y1, &ul_x2, &ul_y2);
  40087a:	4613      	mov	r3, r2
  40087c:	aa01      	add	r2, sp, #4
  40087e:	a902      	add	r1, sp, #8
  400880:	a803      	add	r0, sp, #12
  400882:	4c21      	ldr	r4, [pc, #132]	; (400908 <ili9225_draw_filled_rectangle+0xa0>)
  400884:	47a0      	blx	r4

	/* Determine the refresh window area */
	ili9225_set_window(ul_x1, ul_y1, (ul_x2 - ul_x1) + 1, (ul_y2 - ul_y1) + 1);
  400886:	9803      	ldr	r0, [sp, #12]
  400888:	9902      	ldr	r1, [sp, #8]
  40088a:	9b00      	ldr	r3, [sp, #0]
  40088c:	3301      	adds	r3, #1
  40088e:	9a01      	ldr	r2, [sp, #4]
  400890:	3201      	adds	r2, #1
  400892:	1a5b      	subs	r3, r3, r1
  400894:	1a12      	subs	r2, r2, r0
  400896:	4c1d      	ldr	r4, [pc, #116]	; (40090c <ili9225_draw_filled_rectangle+0xa4>)
  400898:	47a0      	blx	r4

	/* Set cursor */
	ili9225_set_cursor_position(ul_x1, ul_y1);
  40089a:	f8bd 1008 	ldrh.w	r1, [sp, #8]
  40089e:	f8bd 000c 	ldrh.w	r0, [sp, #12]
  4008a2:	4b1b      	ldr	r3, [pc, #108]	; (400910 <ili9225_draw_filled_rectangle+0xa8>)
  4008a4:	4798      	blx	r3
	ili9225_write_cmd(ILI9225_GRAM_DATA_REG);
  4008a6:	2022      	movs	r0, #34	; 0x22
  4008a8:	4b1a      	ldr	r3, [pc, #104]	; (400914 <ili9225_draw_filled_rectangle+0xac>)
  4008aa:	4798      	blx	r3

	/* Prepare to write in GRAM */
	ili9225_write_ram_prepare();

	size = (ul_x2 - ul_x1 + 1) * (ul_y2 - ul_y1 + 1);
  4008ac:	9a03      	ldr	r2, [sp, #12]
  4008ae:	9b01      	ldr	r3, [sp, #4]
  4008b0:	1a9a      	subs	r2, r3, r2
  4008b2:	9b00      	ldr	r3, [sp, #0]
  4008b4:	f103 0801 	add.w	r8, r3, #1
  4008b8:	9b02      	ldr	r3, [sp, #8]
  4008ba:	eba8 0803 	sub.w	r8, r8, r3
  4008be:	fb02 8808 	mla	r8, r2, r8, r8
	/* Send pixels blocks => one SPI IT / block */
	blocks = size / LCD_DATA_CACHE_SIZE;
  4008c2:	4b15      	ldr	r3, [pc, #84]	; (400918 <ili9225_draw_filled_rectangle+0xb0>)
  4008c4:	fba3 2308 	umull	r2, r3, r3, r8
  4008c8:	09db      	lsrs	r3, r3, #7
	while (blocks--) {
  4008ca:	b153      	cbz	r3, 4008e2 <ili9225_draw_filled_rectangle+0x7a>
  4008cc:	1e5c      	subs	r4, r3, #1
		ili9225_write_ram_buffer(g_ul_pixel_cache, LCD_DATA_CACHE_SIZE);
  4008ce:	4f13      	ldr	r7, [pc, #76]	; (40091c <ili9225_draw_filled_rectangle+0xb4>)
  4008d0:	26b0      	movs	r6, #176	; 0xb0
  4008d2:	4d13      	ldr	r5, [pc, #76]	; (400920 <ili9225_draw_filled_rectangle+0xb8>)
  4008d4:	4631      	mov	r1, r6
  4008d6:	4638      	mov	r0, r7
  4008d8:	47a8      	blx	r5
	while (blocks--) {
  4008da:	3c01      	subs	r4, #1
  4008dc:	f1b4 3fff 	cmp.w	r4, #4294967295
  4008e0:	d1f8      	bne.n	4008d4 <ili9225_draw_filled_rectangle+0x6c>
	}
	/* Send remaining pixels */
	ili9225_write_ram_buffer(g_ul_pixel_cache, size % LCD_DATA_CACHE_SIZE);
  4008e2:	490d      	ldr	r1, [pc, #52]	; (400918 <ili9225_draw_filled_rectangle+0xb0>)
  4008e4:	fba1 3108 	umull	r3, r1, r1, r8
  4008e8:	09c9      	lsrs	r1, r1, #7
  4008ea:	24b0      	movs	r4, #176	; 0xb0
  4008ec:	fb04 8111 	mls	r1, r4, r1, r8
  4008f0:	480a      	ldr	r0, [pc, #40]	; (40091c <ili9225_draw_filled_rectangle+0xb4>)
  4008f2:	4b0b      	ldr	r3, [pc, #44]	; (400920 <ili9225_draw_filled_rectangle+0xb8>)
  4008f4:	4798      	blx	r3

	/* Reset the refresh window area */
	ili9225_set_window(0, 0, ILI9225_LCD_WIDTH, ILI9225_LCD_HEIGHT);
  4008f6:	23dc      	movs	r3, #220	; 0xdc
  4008f8:	4622      	mov	r2, r4
  4008fa:	2100      	movs	r1, #0
  4008fc:	4608      	mov	r0, r1
  4008fe:	4c03      	ldr	r4, [pc, #12]	; (40090c <ili9225_draw_filled_rectangle+0xa4>)
  400900:	47a0      	blx	r4
}
  400902:	b004      	add	sp, #16
  400904:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  400908:	00400479 	.word	0x00400479
  40090c:	00400619 	.word	0x00400619
  400910:	0040064d 	.word	0x0040064d
  400914:	004004c1 	.word	0x004004c1
  400918:	ba2e8ba3 	.word	0xba2e8ba3
  40091c:	20000acc 	.word	0x20000acc
  400920:	0040054d 	.word	0x0040054d

00400924 <ili9225_draw_circle>:
{
	int32_t   d;    /* Decision Variable */
	uint32_t  curX; /* Current X Value */
	uint32_t  curY; /* Current Y Value */

	if (ul_r == 0) {
  400924:	2a00      	cmp	r2, #0
  400926:	d049      	beq.n	4009bc <ili9225_draw_circle+0x98>
{
  400928:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  40092c:	b083      	sub	sp, #12
  40092e:	4680      	mov	r8, r0
  400930:	4689      	mov	r9, r1
  400932:	4616      	mov	r6, r2
		return 1;
	}

	d = 3 - (ul_r << 1);
  400934:	0057      	lsls	r7, r2, #1
  400936:	f1c7 0703 	rsb	r7, r7, #3
	curX = 0;
  40093a:	2500      	movs	r5, #0
	curY = ul_r;

	while (curX <= curY) {
		ili9225_draw_pixel(ul_x + curX, ul_y + curY);
  40093c:	4c20      	ldr	r4, [pc, #128]	; (4009c0 <ili9225_draw_circle+0x9c>)
  40093e:	e005      	b.n	40094c <ili9225_draw_circle+0x28>
		ili9225_draw_pixel(ul_x + curY, ul_y - curX);
		ili9225_draw_pixel(ul_x - curY, ul_y + curX);
		ili9225_draw_pixel(ul_x - curY, ul_y - curX);

		if (d < 0) {
			d += (curX << 2) + 6;
  400940:	3706      	adds	r7, #6
  400942:	eb07 0785 	add.w	r7, r7, r5, lsl #2
		} else {
			d += ((curX - curY) << 2) + 10;
			curY--;
		}
		curX++;
  400946:	3501      	adds	r5, #1
	while (curX <= curY) {
  400948:	42ae      	cmp	r6, r5
  40094a:	d333      	bcc.n	4009b4 <ili9225_draw_circle+0x90>
		ili9225_draw_pixel(ul_x + curX, ul_y + curY);
  40094c:	eb08 0305 	add.w	r3, r8, r5
  400950:	eb09 0b06 	add.w	fp, r9, r6
  400954:	4659      	mov	r1, fp
  400956:	9301      	str	r3, [sp, #4]
  400958:	4618      	mov	r0, r3
  40095a:	47a0      	blx	r4
		ili9225_draw_pixel(ul_x + curX, ul_y - curY);
  40095c:	eba9 0a06 	sub.w	sl, r9, r6
  400960:	4651      	mov	r1, sl
  400962:	9801      	ldr	r0, [sp, #4]
  400964:	47a0      	blx	r4
		ili9225_draw_pixel(ul_x - curX, ul_y + curY);
  400966:	eba8 0305 	sub.w	r3, r8, r5
  40096a:	4659      	mov	r1, fp
  40096c:	469b      	mov	fp, r3
  40096e:	4618      	mov	r0, r3
  400970:	47a0      	blx	r4
		ili9225_draw_pixel(ul_x - curX, ul_y - curY);
  400972:	4651      	mov	r1, sl
  400974:	4658      	mov	r0, fp
  400976:	47a0      	blx	r4
		ili9225_draw_pixel(ul_x + curY, ul_y + curX);
  400978:	eb08 0306 	add.w	r3, r8, r6
  40097c:	eb09 0b05 	add.w	fp, r9, r5
  400980:	4659      	mov	r1, fp
  400982:	9301      	str	r3, [sp, #4]
  400984:	4618      	mov	r0, r3
  400986:	47a0      	blx	r4
		ili9225_draw_pixel(ul_x + curY, ul_y - curX);
  400988:	eba9 0a05 	sub.w	sl, r9, r5
  40098c:	4651      	mov	r1, sl
  40098e:	9801      	ldr	r0, [sp, #4]
  400990:	47a0      	blx	r4
		ili9225_draw_pixel(ul_x - curY, ul_y + curX);
  400992:	eba8 0306 	sub.w	r3, r8, r6
  400996:	4659      	mov	r1, fp
  400998:	469b      	mov	fp, r3
  40099a:	4618      	mov	r0, r3
  40099c:	47a0      	blx	r4
		ili9225_draw_pixel(ul_x - curY, ul_y - curX);
  40099e:	4651      	mov	r1, sl
  4009a0:	4658      	mov	r0, fp
  4009a2:	47a0      	blx	r4
		if (d < 0) {
  4009a4:	2f00      	cmp	r7, #0
  4009a6:	dbcb      	blt.n	400940 <ili9225_draw_circle+0x1c>
			d += ((curX - curY) << 2) + 10;
  4009a8:	1bab      	subs	r3, r5, r6
  4009aa:	370a      	adds	r7, #10
  4009ac:	eb07 0783 	add.w	r7, r7, r3, lsl #2
			curY--;
  4009b0:	3e01      	subs	r6, #1
  4009b2:	e7c8      	b.n	400946 <ili9225_draw_circle+0x22>
	}

	return 0;
  4009b4:	2000      	movs	r0, #0
}
  4009b6:	b003      	add	sp, #12
  4009b8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
		return 1;
  4009bc:	2001      	movs	r0, #1
  4009be:	4770      	bx	lr
  4009c0:	0040082d 	.word	0x0040082d

004009c4 <ili9225_draw_string>:
 * \param ul_x X coordinate of string top-left corner.
 * \param ul_y Y coordinate of string top-left corner.
 * \param p_str String to display.
 */
void ili9225_draw_string(uint32_t ul_x, uint32_t ul_y, const uint8_t *p_str)
{
  4009c4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  4009c8:	b085      	sub	sp, #20
  4009ca:	9003      	str	r0, [sp, #12]
  4009cc:	9202      	str	r2, [sp, #8]
	uint32_t xorg = ul_x;

	while (*p_str != 0) {
  4009ce:	7813      	ldrb	r3, [r2, #0]
  4009d0:	2b00      	cmp	r3, #0
  4009d2:	d048      	beq.n	400a66 <ili9225_draw_string+0xa2>
  4009d4:	468b      	mov	fp, r1
  4009d6:	9001      	str	r0, [sp, #4]
				ili9225_draw_pixel(ul_x + col, ul_y + row);
  4009d8:	f8df 8094 	ldr.w	r8, [pc, #148]	; 400a70 <ili9225_draw_string+0xac>
  4009dc:	e033      	b.n	400a46 <ili9225_draw_string+0x82>
		/* If newline, jump to the next line (font height + 2) */
		if (*p_str == '\n') {
			ul_y += gfont.height + 2;
  4009de:	f10b 0b10 	add.w	fp, fp, #16
			ul_x = xorg;
  4009e2:	9b03      	ldr	r3, [sp, #12]
  4009e4:	9301      	str	r3, [sp, #4]
  4009e6:	e029      	b.n	400a3c <ili9225_draw_string+0x78>
  4009e8:	3c01      	subs	r4, #1
		for (row = 0; row < 8; row++) {
  4009ea:	f1b4 3fff 	cmp.w	r4, #4294967295
  4009ee:	d009      	beq.n	400a04 <ili9225_draw_string+0x40>
			if ((p_uc_charset10x14[offset0] >> (7 - row)) & 0x1) {
  4009f0:	782b      	ldrb	r3, [r5, #0]
  4009f2:	4123      	asrs	r3, r4
  4009f4:	f013 0f01 	tst.w	r3, #1
  4009f8:	d0f6      	beq.n	4009e8 <ili9225_draw_string+0x24>
				ili9225_draw_pixel(ul_x + col, ul_y + row);
  4009fa:	ebaa 0104 	sub.w	r1, sl, r4
  4009fe:	4630      	mov	r0, r6
  400a00:	47c0      	blx	r8
  400a02:	e7f1      	b.n	4009e8 <ili9225_draw_string+0x24>
		for (row = 0; row < 8; row++) {
  400a04:	2407      	movs	r4, #7
				ili9225_draw_pixel(ul_x + col, ul_y + row + 8);
  400a06:	f10b 090f 	add.w	r9, fp, #15
  400a0a:	e002      	b.n	400a12 <ili9225_draw_string+0x4e>
  400a0c:	3c01      	subs	r4, #1
		for (row = 0; row < 6; row++) {
  400a0e:	2c01      	cmp	r4, #1
  400a10:	d009      	beq.n	400a26 <ili9225_draw_string+0x62>
			if ((p_uc_charset10x14[offset1] >> (7 - row)) & 0x1) {
  400a12:	787b      	ldrb	r3, [r7, #1]
  400a14:	4123      	asrs	r3, r4
  400a16:	f013 0f01 	tst.w	r3, #1
  400a1a:	d0f7      	beq.n	400a0c <ili9225_draw_string+0x48>
				ili9225_draw_pixel(ul_x + col, ul_y + row + 8);
  400a1c:	eba9 0104 	sub.w	r1, r9, r4
  400a20:	4630      	mov	r0, r6
  400a22:	47c0      	blx	r8
  400a24:	e7f2      	b.n	400a0c <ili9225_draw_string+0x48>
  400a26:	3502      	adds	r5, #2
  400a28:	3601      	adds	r6, #1
	for (col = 0; col < 10; col++) {
  400a2a:	9b00      	ldr	r3, [sp, #0]
  400a2c:	42b3      	cmp	r3, r6
  400a2e:	d002      	beq.n	400a36 <ili9225_draw_string+0x72>
	offset = ((uint32_t)uc_c - 0x20) * 20;
  400a30:	2407      	movs	r4, #7
  400a32:	462f      	mov	r7, r5
  400a34:	e7dc      	b.n	4009f0 <ili9225_draw_string+0x2c>
		} else {
			/* Draw the character and place cursor right after (font width + 2) */
			ili9225_draw_char(ul_x, ul_y, *p_str);
			ul_x += gfont.width + 2;
  400a36:	9b01      	ldr	r3, [sp, #4]
  400a38:	330c      	adds	r3, #12
  400a3a:	9301      	str	r3, [sp, #4]
	while (*p_str != 0) {
  400a3c:	9a02      	ldr	r2, [sp, #8]
  400a3e:	f812 3f01 	ldrb.w	r3, [r2, #1]!
  400a42:	9202      	str	r2, [sp, #8]
  400a44:	b17b      	cbz	r3, 400a66 <ili9225_draw_string+0xa2>
		if (*p_str == '\n') {
  400a46:	2b0a      	cmp	r3, #10
  400a48:	d0c9      	beq.n	4009de <ili9225_draw_string+0x1a>
	offset = ((uint32_t)uc_c - 0x20) * 20;
  400a4a:	eb03 0383 	add.w	r3, r3, r3, lsl #2
  400a4e:	4d07      	ldr	r5, [pc, #28]	; (400a6c <ili9225_draw_string+0xa8>)
  400a50:	eb05 0383 	add.w	r3, r5, r3, lsl #2
  400a54:	f5a3 7520 	sub.w	r5, r3, #640	; 0x280
  400a58:	9e01      	ldr	r6, [sp, #4]
  400a5a:	4633      	mov	r3, r6
  400a5c:	330a      	adds	r3, #10
  400a5e:	9300      	str	r3, [sp, #0]
				ili9225_draw_pixel(ul_x + col, ul_y + row);
  400a60:	f10b 0a07 	add.w	sl, fp, #7
  400a64:	e7e4      	b.n	400a30 <ili9225_draw_string+0x6c>
		}
		p_str++;
	}
}
  400a66:	b005      	add	sp, #20
  400a68:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  400a6c:	004085e8 	.word	0x004085e8
  400a70:	0040082d 	.word	0x0040082d

00400a74 <pio_set_peripheral>:
		const uint32_t ul_mask)
{
	uint32_t ul_sr;

	/* Disable interrupts on the pin(s) */
	p_pio->PIO_IDR = ul_mask;
  400a74:	6442      	str	r2, [r0, #68]	; 0x44

#if (SAM3S || SAM3N || SAM4S || SAM4E || SAM4N || SAM4C || SAMG || SAM4CP || SAM4CM || SAMV71 || SAMV70 || SAME70 || SAMS70)
	switch (ul_type) {
  400a76:	f1b1 5fc0 	cmp.w	r1, #402653184	; 0x18000000
  400a7a:	d039      	beq.n	400af0 <pio_set_peripheral+0x7c>
  400a7c:	d813      	bhi.n	400aa6 <pio_set_peripheral+0x32>
  400a7e:	f1b1 6f00 	cmp.w	r1, #134217728	; 0x8000000
  400a82:	d025      	beq.n	400ad0 <pio_set_peripheral+0x5c>
  400a84:	f1b1 5f80 	cmp.w	r1, #268435456	; 0x10000000
  400a88:	d10a      	bne.n	400aa0 <pio_set_peripheral+0x2c>

		ul_sr = p_pio->PIO_ABCDSR[1];
		p_pio->PIO_ABCDSR[1] &= (~ul_mask & ul_sr);
		break;
	case PIO_PERIPH_B:
		ul_sr = p_pio->PIO_ABCDSR[0];
  400a8a:	6f03      	ldr	r3, [r0, #112]	; 0x70
		p_pio->PIO_ABCDSR[0] = (ul_mask | ul_sr);
  400a8c:	4313      	orrs	r3, r2
  400a8e:	6703      	str	r3, [r0, #112]	; 0x70

		ul_sr = p_pio->PIO_ABCDSR[1];
  400a90:	6f43      	ldr	r3, [r0, #116]	; 0x74
		p_pio->PIO_ABCDSR[1] &= (~ul_mask & ul_sr);
  400a92:	6f41      	ldr	r1, [r0, #116]	; 0x74
  400a94:	400b      	ands	r3, r1
  400a96:	ea23 0302 	bic.w	r3, r3, r2
  400a9a:	6743      	str	r3, [r0, #116]	; 0x74
#else
#error "Unsupported device"
#endif

	/* Remove the pins from under the control of PIO */
	p_pio->PIO_PDR = ul_mask;
  400a9c:	6042      	str	r2, [r0, #4]
  400a9e:	4770      	bx	lr
	switch (ul_type) {
  400aa0:	2900      	cmp	r1, #0
  400aa2:	d1fb      	bne.n	400a9c <pio_set_peripheral+0x28>
  400aa4:	4770      	bx	lr
  400aa6:	f1b1 5f20 	cmp.w	r1, #671088640	; 0x28000000
  400aaa:	d020      	beq.n	400aee <pio_set_peripheral+0x7a>
  400aac:	d809      	bhi.n	400ac2 <pio_set_peripheral+0x4e>
  400aae:	f1b1 5f00 	cmp.w	r1, #536870912	; 0x20000000
  400ab2:	d1f3      	bne.n	400a9c <pio_set_peripheral+0x28>
		ul_sr = p_pio->PIO_ABCDSR[0];
  400ab4:	6f03      	ldr	r3, [r0, #112]	; 0x70
		p_pio->PIO_ABCDSR[0] = (ul_mask | ul_sr);
  400ab6:	4313      	orrs	r3, r2
  400ab8:	6703      	str	r3, [r0, #112]	; 0x70
		ul_sr = p_pio->PIO_ABCDSR[1];
  400aba:	6f43      	ldr	r3, [r0, #116]	; 0x74
		p_pio->PIO_ABCDSR[1] = (ul_mask | ul_sr);
  400abc:	4313      	orrs	r3, r2
  400abe:	6743      	str	r3, [r0, #116]	; 0x74
		break;
  400ac0:	e7ec      	b.n	400a9c <pio_set_peripheral+0x28>
	switch (ul_type) {
  400ac2:	f1b1 5f40 	cmp.w	r1, #805306368	; 0x30000000
  400ac6:	d012      	beq.n	400aee <pio_set_peripheral+0x7a>
  400ac8:	f1b1 5f60 	cmp.w	r1, #939524096	; 0x38000000
  400acc:	d00f      	beq.n	400aee <pio_set_peripheral+0x7a>
  400ace:	e7e5      	b.n	400a9c <pio_set_peripheral+0x28>
{
  400ad0:	b410      	push	{r4}
		ul_sr = p_pio->PIO_ABCDSR[0];
  400ad2:	6f01      	ldr	r1, [r0, #112]	; 0x70
		p_pio->PIO_ABCDSR[0] &= (~ul_mask & ul_sr);
  400ad4:	6f04      	ldr	r4, [r0, #112]	; 0x70
  400ad6:	43d3      	mvns	r3, r2
  400ad8:	4021      	ands	r1, r4
  400ada:	461c      	mov	r4, r3
  400adc:	4019      	ands	r1, r3
  400ade:	6701      	str	r1, [r0, #112]	; 0x70
		ul_sr = p_pio->PIO_ABCDSR[1];
  400ae0:	6f43      	ldr	r3, [r0, #116]	; 0x74
		p_pio->PIO_ABCDSR[1] &= (~ul_mask & ul_sr);
  400ae2:	6f41      	ldr	r1, [r0, #116]	; 0x74
  400ae4:	400b      	ands	r3, r1
  400ae6:	4023      	ands	r3, r4
  400ae8:	6743      	str	r3, [r0, #116]	; 0x74
	p_pio->PIO_PDR = ul_mask;
  400aea:	6042      	str	r2, [r0, #4]
}
  400aec:	bc10      	pop	{r4}
  400aee:	4770      	bx	lr
		ul_sr = p_pio->PIO_ABCDSR[0];
  400af0:	6f03      	ldr	r3, [r0, #112]	; 0x70
		p_pio->PIO_ABCDSR[0] &= (~ul_mask & ul_sr);
  400af2:	6f01      	ldr	r1, [r0, #112]	; 0x70
  400af4:	400b      	ands	r3, r1
  400af6:	ea23 0302 	bic.w	r3, r3, r2
  400afa:	6703      	str	r3, [r0, #112]	; 0x70
		ul_sr = p_pio->PIO_ABCDSR[1];
  400afc:	6f43      	ldr	r3, [r0, #116]	; 0x74
		p_pio->PIO_ABCDSR[1] = (ul_mask | ul_sr);
  400afe:	4313      	orrs	r3, r2
  400b00:	6743      	str	r3, [r0, #116]	; 0x74
		break;
  400b02:	e7cb      	b.n	400a9c <pio_set_peripheral+0x28>

00400b04 <pio_set_input>:
 * \param p_pio Pointer to a PIO instance.
 * \param ul_mask Interrupt sources bit map.
 */
void pio_disable_interrupt(Pio *p_pio, const uint32_t ul_mask)
{
	p_pio->PIO_IDR = ul_mask;
  400b04:	6441      	str	r1, [r0, #68]	; 0x44
	if (ul_pull_up_enable) {
  400b06:	f012 0f01 	tst.w	r2, #1
		p_pio->PIO_PUER = ul_mask;
  400b0a:	bf14      	ite	ne
  400b0c:	6641      	strne	r1, [r0, #100]	; 0x64
		p_pio->PIO_PUDR = ul_mask;
  400b0e:	6601      	streq	r1, [r0, #96]	; 0x60
	if (ul_attribute & (PIO_DEGLITCH | PIO_DEBOUNCE)) {
  400b10:	f012 0f0a 	tst.w	r2, #10
		p_pio->PIO_IFER = ul_mask;
  400b14:	bf14      	ite	ne
  400b16:	6201      	strne	r1, [r0, #32]
		p_pio->PIO_IFDR = ul_mask;
  400b18:	6241      	streq	r1, [r0, #36]	; 0x24
	if (ul_attribute & PIO_DEGLITCH) {
  400b1a:	f012 0f02 	tst.w	r2, #2
  400b1e:	d107      	bne.n	400b30 <pio_set_input+0x2c>
		if (ul_attribute & PIO_DEBOUNCE) {
  400b20:	f012 0f08 	tst.w	r2, #8
			p_pio->PIO_IFSCER = ul_mask;
  400b24:	bf18      	it	ne
  400b26:	f8c0 1084 	strne.w	r1, [r0, #132]	; 0x84
	p_pio->PIO_ODR = ul_mask;
  400b2a:	6141      	str	r1, [r0, #20]
	p_pio->PIO_PER = ul_mask;
  400b2c:	6001      	str	r1, [r0, #0]
  400b2e:	4770      	bx	lr
		p_pio->PIO_IFSCDR = ul_mask;
  400b30:	f8c0 1080 	str.w	r1, [r0, #128]	; 0x80
  400b34:	e7f9      	b.n	400b2a <pio_set_input+0x26>

00400b36 <pio_set_output>:
{
  400b36:	b410      	push	{r4}
  400b38:	9c01      	ldr	r4, [sp, #4]
	p_pio->PIO_IDR = ul_mask;
  400b3a:	6441      	str	r1, [r0, #68]	; 0x44
	if (ul_pull_up_enable) {
  400b3c:	b944      	cbnz	r4, 400b50 <pio_set_output+0x1a>
		p_pio->PIO_PUDR = ul_mask;
  400b3e:	6601      	str	r1, [r0, #96]	; 0x60
	if (ul_multidrive_enable) {
  400b40:	b143      	cbz	r3, 400b54 <pio_set_output+0x1e>
		p_pio->PIO_MDER = ul_mask;
  400b42:	6501      	str	r1, [r0, #80]	; 0x50
	if (ul_default_level) {
  400b44:	b942      	cbnz	r2, 400b58 <pio_set_output+0x22>
		p_pio->PIO_CODR = ul_mask;
  400b46:	6341      	str	r1, [r0, #52]	; 0x34
	p_pio->PIO_OER = ul_mask;
  400b48:	6101      	str	r1, [r0, #16]
	p_pio->PIO_PER = ul_mask;
  400b4a:	6001      	str	r1, [r0, #0]
}
  400b4c:	bc10      	pop	{r4}
  400b4e:	4770      	bx	lr
		p_pio->PIO_PUER = ul_mask;
  400b50:	6641      	str	r1, [r0, #100]	; 0x64
  400b52:	e7f5      	b.n	400b40 <pio_set_output+0xa>
		p_pio->PIO_MDDR = ul_mask;
  400b54:	6541      	str	r1, [r0, #84]	; 0x54
  400b56:	e7f5      	b.n	400b44 <pio_set_output+0xe>
		p_pio->PIO_SODR = ul_mask;
  400b58:	6301      	str	r1, [r0, #48]	; 0x30
  400b5a:	e7f5      	b.n	400b48 <pio_set_output+0x12>

00400b5c <pio_get_interrupt_status>:
 *
 * \return The interrupt status value.
 */
uint32_t pio_get_interrupt_status(const Pio *p_pio)
{
	return p_pio->PIO_ISR;
  400b5c:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
}
  400b5e:	4770      	bx	lr

00400b60 <pio_get_interrupt_mask>:
 *
 * \return The interrupt mask value.
 */
uint32_t pio_get_interrupt_mask(const Pio *p_pio)
{
	return p_pio->PIO_IMR;
  400b60:	6c80      	ldr	r0, [r0, #72]	; 0x48
}
  400b62:	4770      	bx	lr

00400b64 <pio_get_pin_value>:
		p_pio = PIOC;
	} else {
		p_pio = (Pio *)((uint32_t)PIOA + (PIO_DELTA * (ul_pin >> 5)));
	}
#else
	p_pio = (Pio *)((uint32_t)PIOA + (PIO_DELTA * (ul_pin >> 5)));
  400b64:	0943      	lsrs	r3, r0, #5
  400b66:	f503 1300 	add.w	r3, r3, #2097152	; 0x200000
  400b6a:	f203 7307 	addw	r3, r3, #1799	; 0x707
  400b6e:	025b      	lsls	r3, r3, #9
	return (p_pio->PIO_PDSR >> (ul_pin & 0x1F)) & 1;
  400b70:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
  400b72:	f000 001f 	and.w	r0, r0, #31
  400b76:	fa23 f000 	lsr.w	r0, r3, r0
}
  400b7a:	f000 0001 	and.w	r0, r0, #1
  400b7e:	4770      	bx	lr

00400b80 <pio_set_pin_high>:
	p_pio = (Pio *)((uint32_t)PIOA + (PIO_DELTA * (ul_pin >> 5)));
  400b80:	0943      	lsrs	r3, r0, #5
  400b82:	f503 1300 	add.w	r3, r3, #2097152	; 0x200000
  400b86:	f203 7307 	addw	r3, r3, #1799	; 0x707
  400b8a:	025b      	lsls	r3, r3, #9
	p_pio->PIO_SODR = 1 << (ul_pin & 0x1F);
  400b8c:	f000 001f 	and.w	r0, r0, #31
  400b90:	2201      	movs	r2, #1
  400b92:	fa02 f000 	lsl.w	r0, r2, r0
  400b96:	6318      	str	r0, [r3, #48]	; 0x30
  400b98:	4770      	bx	lr

00400b9a <pio_set_pin_low>:
	p_pio = (Pio *)((uint32_t)PIOA + (PIO_DELTA * (ul_pin >> 5)));
  400b9a:	0943      	lsrs	r3, r0, #5
  400b9c:	f503 1300 	add.w	r3, r3, #2097152	; 0x200000
  400ba0:	f203 7307 	addw	r3, r3, #1799	; 0x707
  400ba4:	025b      	lsls	r3, r3, #9
	p_pio->PIO_CODR = 1 << (ul_pin & 0x1F);
  400ba6:	f000 001f 	and.w	r0, r0, #31
  400baa:	2201      	movs	r2, #1
  400bac:	fa02 f000 	lsl.w	r0, r2, r0
  400bb0:	6358      	str	r0, [r3, #52]	; 0x34
  400bb2:	4770      	bx	lr

00400bb4 <pio_toggle_pin>:
	p_pio = (Pio *)((uint32_t)PIOA + (PIO_DELTA * (ul_pin >> 5)));
  400bb4:	0943      	lsrs	r3, r0, #5
  400bb6:	f503 1300 	add.w	r3, r3, #2097152	; 0x200000
  400bba:	f203 7307 	addw	r3, r3, #1799	; 0x707
  400bbe:	025b      	lsls	r3, r3, #9
	if (p_pio->PIO_ODSR & (1 << (ul_pin & 0x1F))) {
  400bc0:	6b99      	ldr	r1, [r3, #56]	; 0x38
  400bc2:	f000 021f 	and.w	r2, r0, #31
  400bc6:	2001      	movs	r0, #1
  400bc8:	4090      	lsls	r0, r2
  400bca:	4201      	tst	r1, r0
		p_pio->PIO_CODR = 1 << (ul_pin & 0x1F);
  400bcc:	bf14      	ite	ne
  400bce:	6358      	strne	r0, [r3, #52]	; 0x34
		p_pio->PIO_SODR = 1 << (ul_pin & 0x1F);
  400bd0:	6318      	streq	r0, [r3, #48]	; 0x30
  400bd2:	4770      	bx	lr

00400bd4 <pio_configure_pin>:
{
  400bd4:	b570      	push	{r4, r5, r6, lr}
  400bd6:	b082      	sub	sp, #8
  400bd8:	460d      	mov	r5, r1
	p_pio = (Pio *)((uint32_t)PIOA + (PIO_DELTA * (ul_pin >> 5)));
  400bda:	0943      	lsrs	r3, r0, #5
  400bdc:	f503 1300 	add.w	r3, r3, #2097152	; 0x200000
  400be0:	f203 7307 	addw	r3, r3, #1799	; 0x707
  400be4:	025c      	lsls	r4, r3, #9
	switch (ul_flags & PIO_TYPE_Msk) {
  400be6:	f001 43f0 	and.w	r3, r1, #2013265920	; 0x78000000
  400bea:	f1b3 5f00 	cmp.w	r3, #536870912	; 0x20000000
  400bee:	d053      	beq.n	400c98 <pio_configure_pin+0xc4>
  400bf0:	d80a      	bhi.n	400c08 <pio_configure_pin+0x34>
  400bf2:	f1b3 5f80 	cmp.w	r3, #268435456	; 0x10000000
  400bf6:	d02d      	beq.n	400c54 <pio_configure_pin+0x80>
  400bf8:	f1b3 5fc0 	cmp.w	r3, #402653184	; 0x18000000
  400bfc:	d03b      	beq.n	400c76 <pio_configure_pin+0xa2>
  400bfe:	f1b3 6f00 	cmp.w	r3, #134217728	; 0x8000000
  400c02:	d015      	beq.n	400c30 <pio_configure_pin+0x5c>
		return 0;
  400c04:	2000      	movs	r0, #0
  400c06:	e023      	b.n	400c50 <pio_configure_pin+0x7c>
	switch (ul_flags & PIO_TYPE_Msk) {
  400c08:	f1b3 5f40 	cmp.w	r3, #805306368	; 0x30000000
  400c0c:	d055      	beq.n	400cba <pio_configure_pin+0xe6>
  400c0e:	f1b3 5f60 	cmp.w	r3, #939524096	; 0x38000000
  400c12:	d052      	beq.n	400cba <pio_configure_pin+0xe6>
  400c14:	f1b3 5f20 	cmp.w	r3, #671088640	; 0x28000000
  400c18:	d1f4      	bne.n	400c04 <pio_configure_pin+0x30>
		pio_set_input(p_pio, (1 << (ul_pin & 0x1F)), ul_flags);
  400c1a:	f000 011f 	and.w	r1, r0, #31
  400c1e:	2601      	movs	r6, #1
  400c20:	462a      	mov	r2, r5
  400c22:	fa06 f101 	lsl.w	r1, r6, r1
  400c26:	4620      	mov	r0, r4
  400c28:	4b2f      	ldr	r3, [pc, #188]	; (400ce8 <pio_configure_pin+0x114>)
  400c2a:	4798      	blx	r3
	return 1;
  400c2c:	4630      	mov	r0, r6
		break;
  400c2e:	e00f      	b.n	400c50 <pio_configure_pin+0x7c>
		pio_set_peripheral(p_pio, PIO_PERIPH_A, (1 << (ul_pin & 0x1F)));
  400c30:	f000 001f 	and.w	r0, r0, #31
  400c34:	2601      	movs	r6, #1
  400c36:	4086      	lsls	r6, r0
  400c38:	4632      	mov	r2, r6
  400c3a:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
  400c3e:	4620      	mov	r0, r4
  400c40:	4b2a      	ldr	r3, [pc, #168]	; (400cec <pio_configure_pin+0x118>)
  400c42:	4798      	blx	r3
	if (ul_pull_up_enable) {
  400c44:	f015 0f01 	tst.w	r5, #1
		p_pio->PIO_PUER = ul_mask;
  400c48:	bf14      	ite	ne
  400c4a:	6666      	strne	r6, [r4, #100]	; 0x64
		p_pio->PIO_PUDR = ul_mask;
  400c4c:	6626      	streq	r6, [r4, #96]	; 0x60
	return 1;
  400c4e:	2001      	movs	r0, #1
}
  400c50:	b002      	add	sp, #8
  400c52:	bd70      	pop	{r4, r5, r6, pc}
		pio_set_peripheral(p_pio, PIO_PERIPH_B, (1 << (ul_pin & 0x1F)));
  400c54:	f000 001f 	and.w	r0, r0, #31
  400c58:	2601      	movs	r6, #1
  400c5a:	4086      	lsls	r6, r0
  400c5c:	4632      	mov	r2, r6
  400c5e:	f04f 5180 	mov.w	r1, #268435456	; 0x10000000
  400c62:	4620      	mov	r0, r4
  400c64:	4b21      	ldr	r3, [pc, #132]	; (400cec <pio_configure_pin+0x118>)
  400c66:	4798      	blx	r3
	if (ul_pull_up_enable) {
  400c68:	f015 0f01 	tst.w	r5, #1
		p_pio->PIO_PUER = ul_mask;
  400c6c:	bf14      	ite	ne
  400c6e:	6666      	strne	r6, [r4, #100]	; 0x64
		p_pio->PIO_PUDR = ul_mask;
  400c70:	6626      	streq	r6, [r4, #96]	; 0x60
	return 1;
  400c72:	2001      	movs	r0, #1
  400c74:	e7ec      	b.n	400c50 <pio_configure_pin+0x7c>
		pio_set_peripheral(p_pio, PIO_PERIPH_C, (1 << (ul_pin & 0x1F)));
  400c76:	f000 001f 	and.w	r0, r0, #31
  400c7a:	2601      	movs	r6, #1
  400c7c:	4086      	lsls	r6, r0
  400c7e:	4632      	mov	r2, r6
  400c80:	f04f 51c0 	mov.w	r1, #402653184	; 0x18000000
  400c84:	4620      	mov	r0, r4
  400c86:	4b19      	ldr	r3, [pc, #100]	; (400cec <pio_configure_pin+0x118>)
  400c88:	4798      	blx	r3
	if (ul_pull_up_enable) {
  400c8a:	f015 0f01 	tst.w	r5, #1
		p_pio->PIO_PUER = ul_mask;
  400c8e:	bf14      	ite	ne
  400c90:	6666      	strne	r6, [r4, #100]	; 0x64
		p_pio->PIO_PUDR = ul_mask;
  400c92:	6626      	streq	r6, [r4, #96]	; 0x60
	return 1;
  400c94:	2001      	movs	r0, #1
  400c96:	e7db      	b.n	400c50 <pio_configure_pin+0x7c>
		pio_set_peripheral(p_pio, PIO_PERIPH_D, (1 << (ul_pin & 0x1F)));
  400c98:	f000 001f 	and.w	r0, r0, #31
  400c9c:	2601      	movs	r6, #1
  400c9e:	4086      	lsls	r6, r0
  400ca0:	4632      	mov	r2, r6
  400ca2:	f04f 5100 	mov.w	r1, #536870912	; 0x20000000
  400ca6:	4620      	mov	r0, r4
  400ca8:	4b10      	ldr	r3, [pc, #64]	; (400cec <pio_configure_pin+0x118>)
  400caa:	4798      	blx	r3
	if (ul_pull_up_enable) {
  400cac:	f015 0f01 	tst.w	r5, #1
		p_pio->PIO_PUER = ul_mask;
  400cb0:	bf14      	ite	ne
  400cb2:	6666      	strne	r6, [r4, #100]	; 0x64
		p_pio->PIO_PUDR = ul_mask;
  400cb4:	6626      	streq	r6, [r4, #96]	; 0x60
	return 1;
  400cb6:	2001      	movs	r0, #1
  400cb8:	e7ca      	b.n	400c50 <pio_configure_pin+0x7c>
				((ul_flags & PIO_TYPE_PIO_OUTPUT_1)
  400cba:	f005 5260 	and.w	r2, r5, #939524096	; 0x38000000
		pio_set_output(p_pio, (1 << (ul_pin & 0x1F)),
  400cbe:	f000 011f 	and.w	r1, r0, #31
  400cc2:	2601      	movs	r6, #1
  400cc4:	ea05 0306 	and.w	r3, r5, r6
  400cc8:	9300      	str	r3, [sp, #0]
  400cca:	f3c5 0380 	ubfx	r3, r5, #2, #1
  400cce:	f1b2 5f60 	cmp.w	r2, #939524096	; 0x38000000
  400cd2:	bf14      	ite	ne
  400cd4:	2200      	movne	r2, #0
  400cd6:	2201      	moveq	r2, #1
  400cd8:	fa06 f101 	lsl.w	r1, r6, r1
  400cdc:	4620      	mov	r0, r4
  400cde:	4c04      	ldr	r4, [pc, #16]	; (400cf0 <pio_configure_pin+0x11c>)
  400ce0:	47a0      	blx	r4
	return 1;
  400ce2:	4630      	mov	r0, r6
		break;
  400ce4:	e7b4      	b.n	400c50 <pio_configure_pin+0x7c>
  400ce6:	bf00      	nop
  400ce8:	00400b05 	.word	0x00400b05
  400cec:	00400a75 	.word	0x00400a75
  400cf0:	00400b37 	.word	0x00400b37

00400cf4 <pio_configure_pin_group>:
{
  400cf4:	b570      	push	{r4, r5, r6, lr}
  400cf6:	b082      	sub	sp, #8
  400cf8:	4605      	mov	r5, r0
  400cfa:	460e      	mov	r6, r1
  400cfc:	4614      	mov	r4, r2
	switch (ul_flags & PIO_TYPE_Msk) {
  400cfe:	f002 43f0 	and.w	r3, r2, #2013265920	; 0x78000000
  400d02:	f1b3 5f00 	cmp.w	r3, #536870912	; 0x20000000
  400d06:	d03d      	beq.n	400d84 <pio_configure_pin_group+0x90>
  400d08:	d80a      	bhi.n	400d20 <pio_configure_pin_group+0x2c>
  400d0a:	f1b3 5f80 	cmp.w	r3, #268435456	; 0x10000000
  400d0e:	d021      	beq.n	400d54 <pio_configure_pin_group+0x60>
  400d10:	f1b3 5fc0 	cmp.w	r3, #402653184	; 0x18000000
  400d14:	d02a      	beq.n	400d6c <pio_configure_pin_group+0x78>
  400d16:	f1b3 6f00 	cmp.w	r3, #134217728	; 0x8000000
  400d1a:	d00e      	beq.n	400d3a <pio_configure_pin_group+0x46>
		return 0;
  400d1c:	2000      	movs	r0, #0
  400d1e:	e017      	b.n	400d50 <pio_configure_pin_group+0x5c>
	switch (ul_flags & PIO_TYPE_Msk) {
  400d20:	f1b3 5f40 	cmp.w	r3, #805306368	; 0x30000000
  400d24:	d03a      	beq.n	400d9c <pio_configure_pin_group+0xa8>
  400d26:	f1b3 5f60 	cmp.w	r3, #939524096	; 0x38000000
  400d2a:	d037      	beq.n	400d9c <pio_configure_pin_group+0xa8>
  400d2c:	f1b3 5f20 	cmp.w	r3, #671088640	; 0x28000000
  400d30:	d1f4      	bne.n	400d1c <pio_configure_pin_group+0x28>
		pio_set_input(p_pio, ul_mask, ul_flags);
  400d32:	4b23      	ldr	r3, [pc, #140]	; (400dc0 <pio_configure_pin_group+0xcc>)
  400d34:	4798      	blx	r3
	return 1;
  400d36:	2001      	movs	r0, #1
		break;
  400d38:	e00a      	b.n	400d50 <pio_configure_pin_group+0x5c>
		pio_set_peripheral(p_pio, PIO_PERIPH_A, ul_mask);
  400d3a:	460a      	mov	r2, r1
  400d3c:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
  400d40:	4b20      	ldr	r3, [pc, #128]	; (400dc4 <pio_configure_pin_group+0xd0>)
  400d42:	4798      	blx	r3
	if (ul_pull_up_enable) {
  400d44:	f014 0f01 	tst.w	r4, #1
		p_pio->PIO_PUER = ul_mask;
  400d48:	bf14      	ite	ne
  400d4a:	666e      	strne	r6, [r5, #100]	; 0x64
		p_pio->PIO_PUDR = ul_mask;
  400d4c:	662e      	streq	r6, [r5, #96]	; 0x60
	return 1;
  400d4e:	2001      	movs	r0, #1
}
  400d50:	b002      	add	sp, #8
  400d52:	bd70      	pop	{r4, r5, r6, pc}
		pio_set_peripheral(p_pio, PIO_PERIPH_B, ul_mask);
  400d54:	460a      	mov	r2, r1
  400d56:	f04f 5180 	mov.w	r1, #268435456	; 0x10000000
  400d5a:	4b1a      	ldr	r3, [pc, #104]	; (400dc4 <pio_configure_pin_group+0xd0>)
  400d5c:	4798      	blx	r3
	if (ul_pull_up_enable) {
  400d5e:	f014 0f01 	tst.w	r4, #1
		p_pio->PIO_PUER = ul_mask;
  400d62:	bf14      	ite	ne
  400d64:	666e      	strne	r6, [r5, #100]	; 0x64
		p_pio->PIO_PUDR = ul_mask;
  400d66:	662e      	streq	r6, [r5, #96]	; 0x60
	return 1;
  400d68:	2001      	movs	r0, #1
  400d6a:	e7f1      	b.n	400d50 <pio_configure_pin_group+0x5c>
		pio_set_peripheral(p_pio, PIO_PERIPH_C, ul_mask);
  400d6c:	460a      	mov	r2, r1
  400d6e:	f04f 51c0 	mov.w	r1, #402653184	; 0x18000000
  400d72:	4b14      	ldr	r3, [pc, #80]	; (400dc4 <pio_configure_pin_group+0xd0>)
  400d74:	4798      	blx	r3
	if (ul_pull_up_enable) {
  400d76:	f014 0f01 	tst.w	r4, #1
		p_pio->PIO_PUER = ul_mask;
  400d7a:	bf14      	ite	ne
  400d7c:	666e      	strne	r6, [r5, #100]	; 0x64
		p_pio->PIO_PUDR = ul_mask;
  400d7e:	662e      	streq	r6, [r5, #96]	; 0x60
	return 1;
  400d80:	2001      	movs	r0, #1
  400d82:	e7e5      	b.n	400d50 <pio_configure_pin_group+0x5c>
		pio_set_peripheral(p_pio, PIO_PERIPH_D, ul_mask);
  400d84:	460a      	mov	r2, r1
  400d86:	f04f 5100 	mov.w	r1, #536870912	; 0x20000000
  400d8a:	4b0e      	ldr	r3, [pc, #56]	; (400dc4 <pio_configure_pin_group+0xd0>)
  400d8c:	4798      	blx	r3
	if (ul_pull_up_enable) {
  400d8e:	f014 0f01 	tst.w	r4, #1
		p_pio->PIO_PUER = ul_mask;
  400d92:	bf14      	ite	ne
  400d94:	666e      	strne	r6, [r5, #100]	; 0x64
		p_pio->PIO_PUDR = ul_mask;
  400d96:	662e      	streq	r6, [r5, #96]	; 0x60
	return 1;
  400d98:	2001      	movs	r0, #1
  400d9a:	e7d9      	b.n	400d50 <pio_configure_pin_group+0x5c>
				((ul_flags & PIO_TYPE_PIO_OUTPUT_1)
  400d9c:	f004 5260 	and.w	r2, r4, #939524096	; 0x38000000
		pio_set_output(p_pio, ul_mask,
  400da0:	f004 0301 	and.w	r3, r4, #1
  400da4:	9300      	str	r3, [sp, #0]
  400da6:	f3c4 0380 	ubfx	r3, r4, #2, #1
  400daa:	f1b2 5f60 	cmp.w	r2, #939524096	; 0x38000000
  400dae:	bf14      	ite	ne
  400db0:	2200      	movne	r2, #0
  400db2:	2201      	moveq	r2, #1
  400db4:	4631      	mov	r1, r6
  400db6:	4628      	mov	r0, r5
  400db8:	4c03      	ldr	r4, [pc, #12]	; (400dc8 <pio_configure_pin_group+0xd4>)
  400dba:	47a0      	blx	r4
	return 1;
  400dbc:	2001      	movs	r0, #1
		break;
  400dbe:	e7c7      	b.n	400d50 <pio_configure_pin_group+0x5c>
  400dc0:	00400b05 	.word	0x00400b05
  400dc4:	00400a75 	.word	0x00400a75
  400dc8:	00400b37 	.word	0x00400b37

00400dcc <pio_handler_process>:
 *
 * \param p_pio PIO controller base address.
 * \param ul_id PIO controller ID.
 */
void pio_handler_process(Pio *p_pio, uint32_t ul_id)
{
  400dcc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  400dd0:	4604      	mov	r4, r0
  400dd2:	4688      	mov	r8, r1
	uint32_t status;
	uint32_t i;

	/* Read PIO controller status */
	status = pio_get_interrupt_status(p_pio);
  400dd4:	4b0e      	ldr	r3, [pc, #56]	; (400e10 <pio_handler_process+0x44>)
  400dd6:	4798      	blx	r3
  400dd8:	4605      	mov	r5, r0
	status &= pio_get_interrupt_mask(p_pio);
  400dda:	4620      	mov	r0, r4
  400ddc:	4b0d      	ldr	r3, [pc, #52]	; (400e14 <pio_handler_process+0x48>)
  400dde:	4798      	blx	r3

	/* Check pending events */
	if (status != 0) {
  400de0:	4005      	ands	r5, r0
  400de2:	d013      	beq.n	400e0c <pio_handler_process+0x40>
  400de4:	4c0c      	ldr	r4, [pc, #48]	; (400e18 <pio_handler_process+0x4c>)
  400de6:	f104 0660 	add.w	r6, r4, #96	; 0x60
  400dea:	e003      	b.n	400df4 <pio_handler_process+0x28>
							gs_interrupt_sources[i].mask);
					status &= ~(gs_interrupt_sources[i].mask);
				}
			}
			i++;
			if (i >= MAX_INTERRUPT_SOURCES) {
  400dec:	42b4      	cmp	r4, r6
  400dee:	d00d      	beq.n	400e0c <pio_handler_process+0x40>
  400df0:	3410      	adds	r4, #16
		while (status != 0) {
  400df2:	b15d      	cbz	r5, 400e0c <pio_handler_process+0x40>
			if (gs_interrupt_sources[i].id == ul_id) {
  400df4:	6820      	ldr	r0, [r4, #0]
  400df6:	4540      	cmp	r0, r8
  400df8:	d1f8      	bne.n	400dec <pio_handler_process+0x20>
				if ((status & gs_interrupt_sources[i].mask) != 0) {
  400dfa:	6861      	ldr	r1, [r4, #4]
  400dfc:	4229      	tst	r1, r5
  400dfe:	d0f5      	beq.n	400dec <pio_handler_process+0x20>
					gs_interrupt_sources[i].handler(gs_interrupt_sources[i].id,
  400e00:	68e3      	ldr	r3, [r4, #12]
  400e02:	4798      	blx	r3
					status &= ~(gs_interrupt_sources[i].mask);
  400e04:	6863      	ldr	r3, [r4, #4]
  400e06:	ea25 0503 	bic.w	r5, r5, r3
  400e0a:	e7ef      	b.n	400dec <pio_handler_process+0x20>
  400e0c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  400e10:	00400b5d 	.word	0x00400b5d
  400e14:	00400b61 	.word	0x00400b61
  400e18:	20000c2c 	.word	0x20000c2c

00400e1c <PIOA_Handler>:
/**
 * \brief Parallel IO Controller A interrupt handler.
 * Redefined PIOA interrupt handler for NVIC interrupt table.
 */
void PIOA_Handler(void)
{
  400e1c:	b508      	push	{r3, lr}
	pio_handler_process(PIOA, ID_PIOA);
  400e1e:	210b      	movs	r1, #11
  400e20:	4801      	ldr	r0, [pc, #4]	; (400e28 <PIOA_Handler+0xc>)
  400e22:	4b02      	ldr	r3, [pc, #8]	; (400e2c <PIOA_Handler+0x10>)
  400e24:	4798      	blx	r3
  400e26:	bd08      	pop	{r3, pc}
  400e28:	400e0e00 	.word	0x400e0e00
  400e2c:	00400dcd 	.word	0x00400dcd

00400e30 <PIOB_Handler>:
/**
 * \brief Parallel IO Controller B interrupt handler
 * Redefined PIOB interrupt handler for NVIC interrupt table.
 */
void PIOB_Handler(void)
{
  400e30:	b508      	push	{r3, lr}
    pio_handler_process(PIOB, ID_PIOB);
  400e32:	210c      	movs	r1, #12
  400e34:	4801      	ldr	r0, [pc, #4]	; (400e3c <PIOB_Handler+0xc>)
  400e36:	4b02      	ldr	r3, [pc, #8]	; (400e40 <PIOB_Handler+0x10>)
  400e38:	4798      	blx	r3
  400e3a:	bd08      	pop	{r3, pc}
  400e3c:	400e1000 	.word	0x400e1000
  400e40:	00400dcd 	.word	0x00400dcd

00400e44 <PIOC_Handler>:
/**
 * \brief Parallel IO Controller C interrupt handler.
 * Redefined PIOC interrupt handler for NVIC interrupt table.
 */
void PIOC_Handler(void)
{
  400e44:	b508      	push	{r3, lr}
	pio_handler_process(PIOC, ID_PIOC);
  400e46:	210d      	movs	r1, #13
  400e48:	4801      	ldr	r0, [pc, #4]	; (400e50 <PIOC_Handler+0xc>)
  400e4a:	4b02      	ldr	r3, [pc, #8]	; (400e54 <PIOC_Handler+0x10>)
  400e4c:	4798      	blx	r3
  400e4e:	bd08      	pop	{r3, pc}
  400e50:	400e1200 	.word	0x400e1200
  400e54:	00400dcd 	.word	0x00400dcd

00400e58 <pmc_switch_mck_to_pllack>:
 */
uint32_t pmc_switch_mck_to_pllack(uint32_t ul_pres)
{
	uint32_t ul_timeout;

	PMC->PMC_MCKR = (PMC->PMC_MCKR & (~PMC_MCKR_PRES_Msk)) | ul_pres;
  400e58:	4a17      	ldr	r2, [pc, #92]	; (400eb8 <pmc_switch_mck_to_pllack+0x60>)
  400e5a:	6b13      	ldr	r3, [r2, #48]	; 0x30
  400e5c:	f023 0370 	bic.w	r3, r3, #112	; 0x70
  400e60:	4318      	orrs	r0, r3
  400e62:	6310      	str	r0, [r2, #48]	; 0x30
	for (ul_timeout = PMC_TIMEOUT; !(PMC->PMC_SR & PMC_SR_MCKRDY);
  400e64:	6e93      	ldr	r3, [r2, #104]	; 0x68
  400e66:	f013 0f08 	tst.w	r3, #8
  400e6a:	d10a      	bne.n	400e82 <pmc_switch_mck_to_pllack+0x2a>
  400e6c:	f44f 6300 	mov.w	r3, #2048	; 0x800
  400e70:	4911      	ldr	r1, [pc, #68]	; (400eb8 <pmc_switch_mck_to_pllack+0x60>)
  400e72:	6e8a      	ldr	r2, [r1, #104]	; 0x68
  400e74:	f012 0f08 	tst.w	r2, #8
  400e78:	d103      	bne.n	400e82 <pmc_switch_mck_to_pllack+0x2a>
			--ul_timeout) {
		if (ul_timeout == 0) {
  400e7a:	3b01      	subs	r3, #1
  400e7c:	d1f9      	bne.n	400e72 <pmc_switch_mck_to_pllack+0x1a>
			return 1;
  400e7e:	2001      	movs	r0, #1
  400e80:	4770      	bx	lr
		}
	}

	PMC->PMC_MCKR = (PMC->PMC_MCKR & (~PMC_MCKR_CSS_Msk)) |
  400e82:	4a0d      	ldr	r2, [pc, #52]	; (400eb8 <pmc_switch_mck_to_pllack+0x60>)
  400e84:	6b13      	ldr	r3, [r2, #48]	; 0x30
  400e86:	f023 0303 	bic.w	r3, r3, #3
  400e8a:	f043 0302 	orr.w	r3, r3, #2
  400e8e:	6313      	str	r3, [r2, #48]	; 0x30
			PMC_MCKR_CSS_PLLA_CLK;

	for (ul_timeout = PMC_TIMEOUT; !(PMC->PMC_SR & PMC_SR_MCKRDY);
  400e90:	6e93      	ldr	r3, [r2, #104]	; 0x68
  400e92:	f013 0f08 	tst.w	r3, #8
  400e96:	d10a      	bne.n	400eae <pmc_switch_mck_to_pllack+0x56>
  400e98:	f44f 6300 	mov.w	r3, #2048	; 0x800
  400e9c:	4906      	ldr	r1, [pc, #24]	; (400eb8 <pmc_switch_mck_to_pllack+0x60>)
  400e9e:	6e8a      	ldr	r2, [r1, #104]	; 0x68
  400ea0:	f012 0f08 	tst.w	r2, #8
  400ea4:	d105      	bne.n	400eb2 <pmc_switch_mck_to_pllack+0x5a>
			--ul_timeout) {
		if (ul_timeout == 0) {
  400ea6:	3b01      	subs	r3, #1
  400ea8:	d1f9      	bne.n	400e9e <pmc_switch_mck_to_pllack+0x46>
			return 1;
  400eaa:	2001      	movs	r0, #1
		}
	}

	return 0;
}
  400eac:	4770      	bx	lr
	return 0;
  400eae:	2000      	movs	r0, #0
  400eb0:	4770      	bx	lr
  400eb2:	2000      	movs	r0, #0
  400eb4:	4770      	bx	lr
  400eb6:	bf00      	nop
  400eb8:	400e0400 	.word	0x400e0400

00400ebc <pmc_switch_mainck_to_xtal>:
 */
void pmc_switch_mainck_to_xtal(uint32_t ul_bypass,
		uint32_t ul_xtal_startup_time)
{
	/* Enable Main Xtal oscillator */
	if (ul_bypass) {
  400ebc:	b9c8      	cbnz	r0, 400ef2 <pmc_switch_mainck_to_xtal+0x36>
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTEN) |
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTBY |
				CKGR_MOR_MOSCSEL;
	} else {
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTBY) |
  400ebe:	4a11      	ldr	r2, [pc, #68]	; (400f04 <pmc_switch_mainck_to_xtal+0x48>)
  400ec0:	6a13      	ldr	r3, [r2, #32]
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTEN |
				CKGR_MOR_MOSCXTST(ul_xtal_startup_time);
  400ec2:	0209      	lsls	r1, r1, #8
  400ec4:	b289      	uxth	r1, r1
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTEN |
  400ec6:	f423 135c 	bic.w	r3, r3, #3604480	; 0x370000
  400eca:	f023 0303 	bic.w	r3, r3, #3
  400ece:	f443 135c 	orr.w	r3, r3, #3604480	; 0x370000
  400ed2:	f043 0301 	orr.w	r3, r3, #1
  400ed6:	430b      	orrs	r3, r1
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTBY) |
  400ed8:	6213      	str	r3, [r2, #32]
		/* Wait the Xtal to stabilize */
		while (!(PMC->PMC_SR & PMC_SR_MOSCXTS));
  400eda:	6e93      	ldr	r3, [r2, #104]	; 0x68
  400edc:	f013 0f01 	tst.w	r3, #1
  400ee0:	d0fb      	beq.n	400eda <pmc_switch_mainck_to_xtal+0x1e>

		PMC->CKGR_MOR |= CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCSEL;
  400ee2:	4a08      	ldr	r2, [pc, #32]	; (400f04 <pmc_switch_mainck_to_xtal+0x48>)
  400ee4:	6a13      	ldr	r3, [r2, #32]
  400ee6:	f043 739b 	orr.w	r3, r3, #20316160	; 0x1360000
  400eea:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
  400eee:	6213      	str	r3, [r2, #32]
  400ef0:	4770      	bx	lr
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTEN) |
  400ef2:	4904      	ldr	r1, [pc, #16]	; (400f04 <pmc_switch_mainck_to_xtal+0x48>)
  400ef4:	6a0b      	ldr	r3, [r1, #32]
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTBY |
  400ef6:	4a04      	ldr	r2, [pc, #16]	; (400f08 <pmc_switch_mainck_to_xtal+0x4c>)
  400ef8:	401a      	ands	r2, r3
  400efa:	4b04      	ldr	r3, [pc, #16]	; (400f0c <pmc_switch_mainck_to_xtal+0x50>)
  400efc:	4313      	orrs	r3, r2
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTEN) |
  400efe:	620b      	str	r3, [r1, #32]
  400f00:	4770      	bx	lr
  400f02:	bf00      	nop
  400f04:	400e0400 	.word	0x400e0400
  400f08:	fec8fffc 	.word	0xfec8fffc
  400f0c:	01370002 	.word	0x01370002

00400f10 <pmc_osc_is_ready_mainck>:
 * \retval 1 Xtal is ready.
 * \retval 0 Xtal is not ready.
 */
uint32_t pmc_osc_is_ready_mainck(void)
{
	return PMC->PMC_SR & PMC_SR_MOSCSELS;
  400f10:	4b02      	ldr	r3, [pc, #8]	; (400f1c <pmc_osc_is_ready_mainck+0xc>)
  400f12:	6e98      	ldr	r0, [r3, #104]	; 0x68
}
  400f14:	f400 3080 	and.w	r0, r0, #65536	; 0x10000
  400f18:	4770      	bx	lr
  400f1a:	bf00      	nop
  400f1c:	400e0400 	.word	0x400e0400

00400f20 <pmc_disable_pllack>:
void pmc_disable_pllack(void)
{
#if (SAM4C || SAM4CM || SAM4CP || SAMG)
	PMC->CKGR_PLLAR = CKGR_PLLAR_MULA(0);
#else
	PMC->CKGR_PLLAR = CKGR_PLLAR_ONE | CKGR_PLLAR_MULA(0);
  400f20:	f04f 5200 	mov.w	r2, #536870912	; 0x20000000
  400f24:	4b01      	ldr	r3, [pc, #4]	; (400f2c <pmc_disable_pllack+0xc>)
  400f26:	629a      	str	r2, [r3, #40]	; 0x28
  400f28:	4770      	bx	lr
  400f2a:	bf00      	nop
  400f2c:	400e0400 	.word	0x400e0400

00400f30 <pmc_is_locked_pllack>:
 * \retval 0 Not locked.
 * \retval 1 Locked.
 */
uint32_t pmc_is_locked_pllack(void)
{
	return (PMC->PMC_SR & PMC_SR_LOCKA);
  400f30:	4b02      	ldr	r3, [pc, #8]	; (400f3c <pmc_is_locked_pllack+0xc>)
  400f32:	6e98      	ldr	r0, [r3, #104]	; 0x68
}
  400f34:	f000 0002 	and.w	r0, r0, #2
  400f38:	4770      	bx	lr
  400f3a:	bf00      	nop
  400f3c:	400e0400 	.word	0x400e0400

00400f40 <pmc_enable_periph_clk>:
 * \retval 0 Success.
 * \retval 1 Invalid parameter.
 */
uint32_t pmc_enable_periph_clk(uint32_t ul_id)
{
	if (ul_id > MAX_PERIPH_ID) {
  400f40:	281f      	cmp	r0, #31
  400f42:	d80c      	bhi.n	400f5e <pmc_enable_periph_clk+0x1e>
		return 1;
	}

	if (ul_id < 32) {
		if ((PMC->PMC_PCSR0 & (1u << ul_id)) != (1u << ul_id)) {
  400f44:	4b08      	ldr	r3, [pc, #32]	; (400f68 <pmc_enable_periph_clk+0x28>)
  400f46:	699a      	ldr	r2, [r3, #24]
  400f48:	2301      	movs	r3, #1
  400f4a:	4083      	lsls	r3, r0
  400f4c:	4393      	bics	r3, r2
  400f4e:	d008      	beq.n	400f62 <pmc_enable_periph_clk+0x22>
			PMC->PMC_PCER0 = 1 << ul_id;
  400f50:	2301      	movs	r3, #1
  400f52:	fa03 f000 	lsl.w	r0, r3, r0
  400f56:	4b04      	ldr	r3, [pc, #16]	; (400f68 <pmc_enable_periph_clk+0x28>)
  400f58:	6118      	str	r0, [r3, #16]
			PMC->PMC_PCER1 = 1 << ul_id;
		}
#endif
	}

	return 0;
  400f5a:	2000      	movs	r0, #0
  400f5c:	4770      	bx	lr
		return 1;
  400f5e:	2001      	movs	r0, #1
  400f60:	4770      	bx	lr
	return 0;
  400f62:	2000      	movs	r0, #0
}
  400f64:	4770      	bx	lr
  400f66:	bf00      	nop
  400f68:	400e0400 	.word	0x400e0400

00400f6c <spi_enable_clock>:
 * \brief Enable SPI clock.
 *
 * \param p_spi Pointer to an SPI instance.
 */
void spi_enable_clock(Spi *p_spi)
{
  400f6c:	b508      	push	{r3, lr}
  400f6e:	2015      	movs	r0, #21
  400f70:	4b01      	ldr	r3, [pc, #4]	; (400f78 <spi_enable_clock+0xc>)
  400f72:	4798      	blx	r3
  400f74:	bd08      	pop	{r3, pc}
  400f76:	bf00      	nop
  400f78:	00400f41 	.word	0x00400f41

00400f7c <spi_set_peripheral_chip_select_value>:
 *                 \ref spi_enable_peripheral_select_decode,
 *                 \ref spi_disable_peripheral_select_decode.
 */
void spi_set_peripheral_chip_select_value(Spi *p_spi, uint32_t ul_value)
{
	p_spi->SPI_MR &= (~SPI_MR_PCS_Msk);
  400f7c:	6843      	ldr	r3, [r0, #4]
  400f7e:	f423 2370 	bic.w	r3, r3, #983040	; 0xf0000
  400f82:	6043      	str	r3, [r0, #4]
	p_spi->SPI_MR |= SPI_MR_PCS(ul_value);
  400f84:	6843      	ldr	r3, [r0, #4]
  400f86:	0409      	lsls	r1, r1, #16
  400f88:	f401 2170 	and.w	r1, r1, #983040	; 0xf0000
  400f8c:	4319      	orrs	r1, r3
  400f8e:	6041      	str	r1, [r0, #4]
  400f90:	4770      	bx	lr

00400f92 <spi_set_delay_between_chip_select>:
 * \param p_spi Pointer to an SPI instance.
 * \param ul_delay Delay between chip selects (in number of MCK clocks).
 */
void spi_set_delay_between_chip_select(Spi *p_spi, uint32_t ul_delay)
{
	p_spi->SPI_MR &= (~SPI_MR_DLYBCS_Msk);
  400f92:	6843      	ldr	r3, [r0, #4]
  400f94:	f023 437f 	bic.w	r3, r3, #4278190080	; 0xff000000
  400f98:	6043      	str	r3, [r0, #4]
	p_spi->SPI_MR |= SPI_MR_DLYBCS(ul_delay);
  400f9a:	6843      	ldr	r3, [r0, #4]
  400f9c:	ea43 6101 	orr.w	r1, r3, r1, lsl #24
  400fa0:	6041      	str	r1, [r0, #4]
  400fa2:	4770      	bx	lr

00400fa4 <spi_write>:
 * \retval SPI_OK on Success.
 * \retval SPI_ERROR_TIMEOUT on Time-out.
 */
spi_status_t spi_write(Spi *p_spi, uint16_t us_data,
		uint8_t uc_pcs, uint8_t uc_last)
{
  400fa4:	b430      	push	{r4, r5}
	uint32_t timeout = SPI_TIMEOUT;
	uint32_t value;

	while (!(p_spi->SPI_SR & SPI_SR_TDRE)) {
  400fa6:	f643 2499 	movw	r4, #15001	; 0x3a99
  400faa:	6905      	ldr	r5, [r0, #16]
  400fac:	f015 0f02 	tst.w	r5, #2
  400fb0:	d103      	bne.n	400fba <spi_write+0x16>
		if (!timeout--) {
  400fb2:	3c01      	subs	r4, #1
  400fb4:	d1f9      	bne.n	400faa <spi_write+0x6>
			return SPI_ERROR_TIMEOUT;
  400fb6:	2001      	movs	r0, #1
  400fb8:	e00c      	b.n	400fd4 <spi_write+0x30>
	if (p_spi->SPI_MR & SPI_MR_PS) {
  400fba:	6844      	ldr	r4, [r0, #4]
		}
	}

	if (spi_get_peripheral_select_mode(p_spi)) {
  400fbc:	f014 0f02 	tst.w	r4, #2
  400fc0:	d006      	beq.n	400fd0 <spi_write+0x2c>
		value = SPI_TDR_TD(us_data) | SPI_TDR_PCS(uc_pcs);
  400fc2:	0412      	lsls	r2, r2, #16
  400fc4:	f402 2270 	and.w	r2, r2, #983040	; 0xf0000
  400fc8:	4311      	orrs	r1, r2
		if (uc_last) {
  400fca:	b10b      	cbz	r3, 400fd0 <spi_write+0x2c>
			value |= SPI_TDR_LASTXFER;
  400fcc:	f041 7180 	orr.w	r1, r1, #16777216	; 0x1000000
		}
	} else {
		value = SPI_TDR_TD(us_data);
	}

	p_spi->SPI_TDR = value;
  400fd0:	60c1      	str	r1, [r0, #12]

	return SPI_OK;
  400fd2:	2000      	movs	r0, #0
}
  400fd4:	bc30      	pop	{r4, r5}
  400fd6:	4770      	bx	lr

00400fd8 <spi_set_clock_polarity>:
 * \param ul_polarity Default clock state is logical one(high)/zero(low).
 */
void spi_set_clock_polarity(Spi *p_spi, uint32_t ul_pcs_ch,
		uint32_t ul_polarity)
{
	if (ul_polarity) {
  400fd8:	b932      	cbnz	r2, 400fe8 <spi_set_clock_polarity+0x10>
  400fda:	eb00 0081 	add.w	r0, r0, r1, lsl #2
		p_spi->SPI_CSR[ul_pcs_ch] |= SPI_CSR_CPOL;
	} else {
		p_spi->SPI_CSR[ul_pcs_ch] &= (~SPI_CSR_CPOL);
  400fde:	6b03      	ldr	r3, [r0, #48]	; 0x30
  400fe0:	f023 0301 	bic.w	r3, r3, #1
  400fe4:	6303      	str	r3, [r0, #48]	; 0x30
  400fe6:	4770      	bx	lr
  400fe8:	eb00 0081 	add.w	r0, r0, r1, lsl #2
		p_spi->SPI_CSR[ul_pcs_ch] |= SPI_CSR_CPOL;
  400fec:	6b03      	ldr	r3, [r0, #48]	; 0x30
  400fee:	f043 0301 	orr.w	r3, r3, #1
  400ff2:	6303      	str	r3, [r0, #48]	; 0x30
  400ff4:	4770      	bx	lr

00400ff6 <spi_set_clock_phase>:
 *  \param ul_pcs_ch Peripheral Chip Select channel (0~3).
 *  \param ul_phase Data capture on the rising/falling edge of clock.
 */
void spi_set_clock_phase(Spi *p_spi, uint32_t ul_pcs_ch, uint32_t ul_phase)
{
	if (ul_phase) {
  400ff6:	b932      	cbnz	r2, 401006 <spi_set_clock_phase+0x10>
  400ff8:	eb00 0081 	add.w	r0, r0, r1, lsl #2
		p_spi->SPI_CSR[ul_pcs_ch] |= SPI_CSR_NCPHA;
	} else {
		p_spi->SPI_CSR[ul_pcs_ch] &= (~SPI_CSR_NCPHA);
  400ffc:	6b03      	ldr	r3, [r0, #48]	; 0x30
  400ffe:	f023 0302 	bic.w	r3, r3, #2
  401002:	6303      	str	r3, [r0, #48]	; 0x30
  401004:	4770      	bx	lr
  401006:	eb00 0081 	add.w	r0, r0, r1, lsl #2
		p_spi->SPI_CSR[ul_pcs_ch] |= SPI_CSR_NCPHA;
  40100a:	6b03      	ldr	r3, [r0, #48]	; 0x30
  40100c:	f043 0302 	orr.w	r3, r3, #2
  401010:	6303      	str	r3, [r0, #48]	; 0x30
  401012:	4770      	bx	lr

00401014 <spi_configure_cs_behavior>:
 * \param ul_cs_behavior Behavior of the Chip Select after transfer.
 */
void spi_configure_cs_behavior(Spi *p_spi, uint32_t ul_pcs_ch,
		uint32_t ul_cs_behavior)
{
	if (ul_cs_behavior == SPI_CS_RISE_FORCED) {
  401014:	2a04      	cmp	r2, #4
  401016:	d003      	beq.n	401020 <spi_configure_cs_behavior+0xc>
		p_spi->SPI_CSR[ul_pcs_ch] &= (~SPI_CSR_CSAAT);
		p_spi->SPI_CSR[ul_pcs_ch] |= SPI_CSR_CSNAAT;
	} else if (ul_cs_behavior == SPI_CS_RISE_NO_TX) {
  401018:	b16a      	cbz	r2, 401036 <spi_configure_cs_behavior+0x22>
		p_spi->SPI_CSR[ul_pcs_ch] &= (~SPI_CSR_CSAAT);
		p_spi->SPI_CSR[ul_pcs_ch] &= (~SPI_CSR_CSNAAT);
	} else if (ul_cs_behavior == SPI_CS_KEEP_LOW) {
  40101a:	2a08      	cmp	r2, #8
  40101c:	d016      	beq.n	40104c <spi_configure_cs_behavior+0x38>
  40101e:	4770      	bx	lr
  401020:	eb00 0081 	add.w	r0, r0, r1, lsl #2
		p_spi->SPI_CSR[ul_pcs_ch] &= (~SPI_CSR_CSAAT);
  401024:	6b03      	ldr	r3, [r0, #48]	; 0x30
  401026:	f023 0308 	bic.w	r3, r3, #8
  40102a:	6303      	str	r3, [r0, #48]	; 0x30
		p_spi->SPI_CSR[ul_pcs_ch] |= SPI_CSR_CSNAAT;
  40102c:	6b03      	ldr	r3, [r0, #48]	; 0x30
  40102e:	f043 0304 	orr.w	r3, r3, #4
  401032:	6303      	str	r3, [r0, #48]	; 0x30
  401034:	4770      	bx	lr
  401036:	eb00 0081 	add.w	r0, r0, r1, lsl #2
		p_spi->SPI_CSR[ul_pcs_ch] &= (~SPI_CSR_CSAAT);
  40103a:	6b03      	ldr	r3, [r0, #48]	; 0x30
  40103c:	f023 0308 	bic.w	r3, r3, #8
  401040:	6303      	str	r3, [r0, #48]	; 0x30
		p_spi->SPI_CSR[ul_pcs_ch] &= (~SPI_CSR_CSNAAT);
  401042:	6b03      	ldr	r3, [r0, #48]	; 0x30
  401044:	f023 0304 	bic.w	r3, r3, #4
  401048:	6303      	str	r3, [r0, #48]	; 0x30
  40104a:	4770      	bx	lr
  40104c:	eb00 0081 	add.w	r0, r0, r1, lsl #2
		p_spi->SPI_CSR[ul_pcs_ch] |= SPI_CSR_CSAAT;
  401050:	6b03      	ldr	r3, [r0, #48]	; 0x30
  401052:	f043 0308 	orr.w	r3, r3, #8
  401056:	6303      	str	r3, [r0, #48]	; 0x30
	}
}
  401058:	e7e1      	b.n	40101e <spi_configure_cs_behavior+0xa>

0040105a <spi_set_bits_per_transfer>:
 * \param ul_bits Number of bits (8~16), use the pattern defined
 *        in the device header file.
 */
void spi_set_bits_per_transfer(Spi *p_spi, uint32_t ul_pcs_ch,
		uint32_t ul_bits)
{
  40105a:	eb00 0181 	add.w	r1, r0, r1, lsl #2
	p_spi->SPI_CSR[ul_pcs_ch] &= (~SPI_CSR_BITS_Msk);
  40105e:	6b0b      	ldr	r3, [r1, #48]	; 0x30
  401060:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
  401064:	630b      	str	r3, [r1, #48]	; 0x30
	p_spi->SPI_CSR[ul_pcs_ch] |= ul_bits;
  401066:	6b0b      	ldr	r3, [r1, #48]	; 0x30
  401068:	431a      	orrs	r2, r3
  40106a:	630a      	str	r2, [r1, #48]	; 0x30
  40106c:	4770      	bx	lr

0040106e <spi_calc_baudrate_div>:
 *   \retval > 0  Success.
 *   \retval < 0  Error.
 */
int16_t spi_calc_baudrate_div(const uint32_t baudrate, uint32_t mck)
{
	int baud_div = div_ceil(mck, baudrate);
  40106e:	1e43      	subs	r3, r0, #1
  401070:	4419      	add	r1, r3
  401072:	fbb1 f0f0 	udiv	r0, r1, r0

	/* The value of baud_div is from 1 to 255 in the SCBR field. */
	if (baud_div <= 0 || baud_div > 255) {
  401076:	1e43      	subs	r3, r0, #1
  401078:	2bfe      	cmp	r3, #254	; 0xfe
		return -1;
	}

	return baud_div;
  40107a:	bf94      	ite	ls
  40107c:	b200      	sxthls	r0, r0
		return -1;
  40107e:	f04f 30ff 	movhi.w	r0, #4294967295
}
  401082:	4770      	bx	lr

00401084 <spi_set_baudrate_div>:
 */
int16_t spi_set_baudrate_div(Spi *p_spi, uint32_t ul_pcs_ch,
		uint8_t uc_baudrate_divider)
{
    /* Programming the SCBR field to 0 is forbidden */
    if (!uc_baudrate_divider)
  401084:	b172      	cbz	r2, 4010a4 <spi_set_baudrate_div+0x20>
{
  401086:	b410      	push	{r4}
  401088:	4614      	mov	r4, r2
  40108a:	eb00 0181 	add.w	r1, r0, r1, lsl #2
        return -1;

	p_spi->SPI_CSR[ul_pcs_ch] &= (~SPI_CSR_SCBR_Msk);
  40108e:	6b0b      	ldr	r3, [r1, #48]	; 0x30
  401090:	f423 437f 	bic.w	r3, r3, #65280	; 0xff00
  401094:	630b      	str	r3, [r1, #48]	; 0x30
	p_spi->SPI_CSR[ul_pcs_ch] |= SPI_CSR_SCBR(uc_baudrate_divider);
  401096:	6b0a      	ldr	r2, [r1, #48]	; 0x30
  401098:	ea42 2204 	orr.w	r2, r2, r4, lsl #8
  40109c:	630a      	str	r2, [r1, #48]	; 0x30
    return 0;
  40109e:	2000      	movs	r0, #0
}
  4010a0:	bc10      	pop	{r4}
  4010a2:	4770      	bx	lr
        return -1;
  4010a4:	f04f 30ff 	mov.w	r0, #4294967295
  4010a8:	4770      	bx	lr

004010aa <spi_set_transfer_delay>:
 * \param uc_dlybs Delay before SPCK (in number of MCK clocks).
 * \param uc_dlybct Delay between consecutive transfers (in number of MCK clocks).
 */
void spi_set_transfer_delay(Spi *p_spi, uint32_t ul_pcs_ch,
		uint8_t uc_dlybs, uint8_t uc_dlybct)
{
  4010aa:	b410      	push	{r4}
  4010ac:	eb00 0181 	add.w	r1, r0, r1, lsl #2
	p_spi->SPI_CSR[ul_pcs_ch] &= ~(SPI_CSR_DLYBS_Msk | SPI_CSR_DLYBCT_Msk);
  4010b0:	6b08      	ldr	r0, [r1, #48]	; 0x30
  4010b2:	b280      	uxth	r0, r0
  4010b4:	6308      	str	r0, [r1, #48]	; 0x30
	p_spi->SPI_CSR[ul_pcs_ch] |= SPI_CSR_DLYBS(uc_dlybs)
  4010b6:	6b0c      	ldr	r4, [r1, #48]	; 0x30
  4010b8:	ea44 6303 	orr.w	r3, r4, r3, lsl #24
  4010bc:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
  4010c0:	630b      	str	r3, [r1, #48]	; 0x30
			| SPI_CSR_DLYBCT(uc_dlybct);
}
  4010c2:	bc10      	pop	{r4}
  4010c4:	4770      	bx	lr

004010c6 <tc_get_status>:
	/* Validate inputs. */
	Assert(p_tc);
	Assert(ul_channel <
			(sizeof(p_tc->TC_CHANNEL) / sizeof(p_tc->TC_CHANNEL[0])));
			
	tc_channel = p_tc->TC_CHANNEL + ul_channel;
  4010c6:	eb00 1181 	add.w	r1, r0, r1, lsl #6
	return tc_channel->TC_SR;
  4010ca:	6a08      	ldr	r0, [r1, #32]
}
  4010cc:	4770      	bx	lr

004010ce <uart_init>:
 *
 * \retval 0 Success.
 * \retval 1 Bad baud rate generator value.
 */
uint32_t uart_init(Uart *p_uart, const sam_uart_opt_t *p_uart_opt)
{
  4010ce:	b410      	push	{r4}
	uint32_t cd = 0;

	/* Reset and disable receiver & transmitter */
	p_uart->UART_CR = UART_CR_RSTRX | UART_CR_RSTTX
  4010d0:	23ac      	movs	r3, #172	; 0xac
  4010d2:	6003      	str	r3, [r0, #0]
			| UART_CR_RXDIS | UART_CR_TXDIS;

	/* Check and configure baudrate */
	/* Asynchronous, no oversampling */
	cd = (p_uart_opt->ul_mck / p_uart_opt->ul_baudrate) / UART_MCK_DIV;
  4010d4:	680b      	ldr	r3, [r1, #0]
  4010d6:	684a      	ldr	r2, [r1, #4]
  4010d8:	fbb3 f3f2 	udiv	r3, r3, r2
  4010dc:	091b      	lsrs	r3, r3, #4
	if (cd < UART_MCK_DIV_MIN_FACTOR || cd > UART_MCK_DIV_MAX_FACTOR)
  4010de:	1e5c      	subs	r4, r3, #1
  4010e0:	f64f 72fe 	movw	r2, #65534	; 0xfffe
  4010e4:	4294      	cmp	r4, r2
  4010e6:	d80b      	bhi.n	401100 <uart_init+0x32>
		return 1;

	p_uart->UART_BRGR = cd;
  4010e8:	6203      	str	r3, [r0, #32]
	/* Configure mode */
	p_uart->UART_MR = p_uart_opt->ul_mode;
  4010ea:	688b      	ldr	r3, [r1, #8]
  4010ec:	6043      	str	r3, [r0, #4]

#if (!SAMV71 && !SAMV70 && !SAME70 && !SAMS70)
	/* Disable PDC channel */
	p_uart->UART_PTCR = UART_PTCR_RXTDIS | UART_PTCR_TXTDIS;
  4010ee:	f240 2302 	movw	r3, #514	; 0x202
  4010f2:	f8c0 3120 	str.w	r3, [r0, #288]	; 0x120
#endif

	/* Enable receiver and transmitter */
	p_uart->UART_CR = UART_CR_RXEN | UART_CR_TXEN;
  4010f6:	2350      	movs	r3, #80	; 0x50
  4010f8:	6003      	str	r3, [r0, #0]

	return 0;
  4010fa:	2000      	movs	r0, #0
}
  4010fc:	bc10      	pop	{r4}
  4010fe:	4770      	bx	lr
		return 1;
  401100:	2001      	movs	r0, #1
  401102:	e7fb      	b.n	4010fc <uart_init+0x2e>

00401104 <uart_write>:
 * \retval 1 I/O Failure, UART is not ready.
 */
uint32_t uart_write(Uart *p_uart, const uint8_t uc_data)
{
	/* Check if the transmitter is ready */
	if (!(p_uart->UART_SR & UART_SR_TXRDY))
  401104:	6943      	ldr	r3, [r0, #20]
  401106:	f013 0f02 	tst.w	r3, #2
		return 1;

	/* Send character */
	p_uart->UART_THR = uc_data;
  40110a:	bf1a      	itte	ne
  40110c:	61c1      	strne	r1, [r0, #28]
	return 0;
  40110e:	2000      	movne	r0, #0
		return 1;
  401110:	2001      	moveq	r0, #1
}
  401112:	4770      	bx	lr

00401114 <uart_read>:
 * \retval 1 I/O Failure, UART is not ready.
 */
uint32_t uart_read(Uart *p_uart, uint8_t *puc_data)
{
	/* Check if the receiver is ready */
	if ((p_uart->UART_SR & UART_SR_RXRDY) == 0)
  401114:	6943      	ldr	r3, [r0, #20]
  401116:	f013 0f01 	tst.w	r3, #1
		return 1;

	/* Read character */
	*puc_data = (uint8_t) p_uart->UART_RHR;
  40111a:	bf1d      	ittte	ne
  40111c:	6983      	ldrne	r3, [r0, #24]
  40111e:	700b      	strbne	r3, [r1, #0]
	return 0;
  401120:	2000      	movne	r0, #0
		return 1;
  401122:	2001      	moveq	r0, #1
}
  401124:	4770      	bx	lr

00401126 <usart_write>:
 * \retval 0 on success.
 * \retval 1 on failure.
 */
uint32_t usart_write(Usart *p_usart, uint32_t c)
{
	if (!(p_usart->US_CSR & US_CSR_TXRDY)) {
  401126:	6943      	ldr	r3, [r0, #20]
  401128:	f013 0f02 	tst.w	r3, #2
		return 1;
	}

	p_usart->US_THR = US_THR_TXCHR(c);
  40112c:	bf1d      	ittte	ne
  40112e:	f3c1 0108 	ubfxne	r1, r1, #0, #9
  401132:	61c1      	strne	r1, [r0, #28]
	return 0;
  401134:	2000      	movne	r0, #0
		return 1;
  401136:	2001      	moveq	r0, #1
}
  401138:	4770      	bx	lr

0040113a <usart_read>:
 * \retval 0 on success.
 * \retval 1 if no data is available or errors.
 */
uint32_t usart_read(Usart *p_usart, uint32_t *c)
{
	if (!(p_usart->US_CSR & US_CSR_RXRDY)) {
  40113a:	6943      	ldr	r3, [r0, #20]
  40113c:	f013 0f01 	tst.w	r3, #1
  401140:	d005      	beq.n	40114e <usart_read+0x14>
		return 1;
	}

	/* Read character */
	*c = p_usart->US_RHR & US_RHR_RXCHR_Msk;
  401142:	6983      	ldr	r3, [r0, #24]
  401144:	f3c3 0308 	ubfx	r3, r3, #0, #9
  401148:	600b      	str	r3, [r1, #0]

	return 0;
  40114a:	2000      	movs	r0, #0
  40114c:	4770      	bx	lr
		return 1;
  40114e:	2001      	movs	r0, #1
}
  401150:	4770      	bx	lr

00401152 <Dummy_Handler>:

/**
 * \brief Default interrupt handler for unused IRQs.
 */
void Dummy_Handler(void)
{
  401152:	e7fe      	b.n	401152 <Dummy_Handler>

00401154 <Reset_Handler>:
/**
 * \brief This is the code that gets called on processor reset.
 * To initialize the device, and call the main() routine.
 */
void Reset_Handler(void)
{
  401154:	b508      	push	{r3, lr}

	/* Initialize the relocate segment */
	pSrc = &_etext;
	pDest = &_srelocate;

	if (pSrc != pDest) {
  401156:	4b1c      	ldr	r3, [pc, #112]	; (4011c8 <Reset_Handler+0x74>)
  401158:	4a1c      	ldr	r2, [pc, #112]	; (4011cc <Reset_Handler+0x78>)
  40115a:	429a      	cmp	r2, r3
  40115c:	d010      	beq.n	401180 <Reset_Handler+0x2c>
		for (; pDest < &_erelocate;) {
  40115e:	4b1c      	ldr	r3, [pc, #112]	; (4011d0 <Reset_Handler+0x7c>)
  401160:	4a19      	ldr	r2, [pc, #100]	; (4011c8 <Reset_Handler+0x74>)
  401162:	429a      	cmp	r2, r3
  401164:	d20c      	bcs.n	401180 <Reset_Handler+0x2c>
  401166:	3b01      	subs	r3, #1
  401168:	1a9b      	subs	r3, r3, r2
  40116a:	f023 0303 	bic.w	r3, r3, #3
  40116e:	3304      	adds	r3, #4
  401170:	4413      	add	r3, r2
  401172:	4916      	ldr	r1, [pc, #88]	; (4011cc <Reset_Handler+0x78>)
			*pDest++ = *pSrc++;
  401174:	f851 0b04 	ldr.w	r0, [r1], #4
  401178:	f842 0b04 	str.w	r0, [r2], #4
		for (; pDest < &_erelocate;) {
  40117c:	429a      	cmp	r2, r3
  40117e:	d1f9      	bne.n	401174 <Reset_Handler+0x20>
		}
	}

	/* Clear the zero segment */
	for (pDest = &_szero; pDest < &_ezero;) {
  401180:	4b14      	ldr	r3, [pc, #80]	; (4011d4 <Reset_Handler+0x80>)
  401182:	4a15      	ldr	r2, [pc, #84]	; (4011d8 <Reset_Handler+0x84>)
  401184:	429a      	cmp	r2, r3
  401186:	d20a      	bcs.n	40119e <Reset_Handler+0x4a>
  401188:	3b01      	subs	r3, #1
  40118a:	1a9b      	subs	r3, r3, r2
  40118c:	f023 0303 	bic.w	r3, r3, #3
  401190:	3304      	adds	r3, #4
  401192:	4413      	add	r3, r2
		*pDest++ = 0;
  401194:	2100      	movs	r1, #0
  401196:	f842 1b04 	str.w	r1, [r2], #4
	for (pDest = &_szero; pDest < &_ezero;) {
  40119a:	4293      	cmp	r3, r2
  40119c:	d1fb      	bne.n	401196 <Reset_Handler+0x42>
	}

	/* Set the vector table base address */
	pSrc = (uint32_t *) & _sfixed;
	SCB->VTOR = ((uint32_t) pSrc & SCB_VTOR_TBLOFF_Msk);
  40119e:	4b0f      	ldr	r3, [pc, #60]	; (4011dc <Reset_Handler+0x88>)
  4011a0:	f023 4260 	bic.w	r2, r3, #3758096384	; 0xe0000000
  4011a4:	f022 027f 	bic.w	r2, r2, #127	; 0x7f
  4011a8:	490d      	ldr	r1, [pc, #52]	; (4011e0 <Reset_Handler+0x8c>)
  4011aa:	608a      	str	r2, [r1, #8]

	if (((uint32_t) pSrc >= IRAM_ADDR) && ((uint32_t) pSrc < IRAM_ADDR + IRAM_SIZE)) {
  4011ac:	f103 4360 	add.w	r3, r3, #3758096384	; 0xe0000000
  4011b0:	f5b3 4fc0 	cmp.w	r3, #24576	; 0x6000
  4011b4:	d203      	bcs.n	4011be <Reset_Handler+0x6a>
		SCB->VTOR |= 1 << SCB_VTOR_TBLBASE_Pos;
  4011b6:	688b      	ldr	r3, [r1, #8]
  4011b8:	f043 5300 	orr.w	r3, r3, #536870912	; 0x20000000
  4011bc:	608b      	str	r3, [r1, #8]
	}

	/* Initialize the C library */
	__libc_init_array();
  4011be:	4b09      	ldr	r3, [pc, #36]	; (4011e4 <Reset_Handler+0x90>)
  4011c0:	4798      	blx	r3

	/* Branch to main function */
	main();
  4011c2:	4b09      	ldr	r3, [pc, #36]	; (4011e8 <Reset_Handler+0x94>)
  4011c4:	4798      	blx	r3
  4011c6:	e7fe      	b.n	4011c6 <Reset_Handler+0x72>
  4011c8:	20000000 	.word	0x20000000
  4011cc:	004091ac 	.word	0x004091ac
  4011d0:	20000aac 	.word	0x20000aac
  4011d4:	20000f38 	.word	0x20000f38
  4011d8:	20000aac 	.word	0x20000aac
  4011dc:	00400000 	.word	0x00400000
  4011e0:	e000ed00 	.word	0xe000ed00
  4011e4:	00402201 	.word	0x00402201
  4011e8:	00402011 	.word	0x00402011

004011ec <SystemCoreClockUpdate>:
}

void SystemCoreClockUpdate(void)
{
	/* Determine clock frequency according to clock register values */
	switch (PMC->PMC_MCKR & PMC_MCKR_CSS_Msk) {
  4011ec:	4b38      	ldr	r3, [pc, #224]	; (4012d0 <SystemCoreClockUpdate+0xe4>)
  4011ee:	6b1b      	ldr	r3, [r3, #48]	; 0x30
  4011f0:	f003 0303 	and.w	r3, r3, #3
  4011f4:	2b01      	cmp	r3, #1
  4011f6:	d01d      	beq.n	401234 <SystemCoreClockUpdate+0x48>
  4011f8:	b183      	cbz	r3, 40121c <SystemCoreClockUpdate+0x30>
  4011fa:	2b02      	cmp	r3, #2
  4011fc:	d036      	beq.n	40126c <SystemCoreClockUpdate+0x80>
		SystemCoreClock /= ((((PMC->CKGR_PLLAR) & CKGR_PLLAR_DIVA_Msk) >> 
			                         CKGR_PLLAR_DIVA_Pos));
		break;
	}

	if ((PMC->PMC_MCKR & PMC_MCKR_PRES_Msk) == PMC_MCKR_PRES_CLK_3) {
  4011fe:	4b34      	ldr	r3, [pc, #208]	; (4012d0 <SystemCoreClockUpdate+0xe4>)
  401200:	6b1b      	ldr	r3, [r3, #48]	; 0x30
  401202:	f003 0370 	and.w	r3, r3, #112	; 0x70
  401206:	2b70      	cmp	r3, #112	; 0x70
  401208:	d059      	beq.n	4012be <SystemCoreClockUpdate+0xd2>
		SystemCoreClock /= 3U;
	} else { 
		SystemCoreClock >>= ((PMC->PMC_MCKR & PMC_MCKR_PRES_Msk) >> 
  40120a:	4b31      	ldr	r3, [pc, #196]	; (4012d0 <SystemCoreClockUpdate+0xe4>)
  40120c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
  40120e:	4931      	ldr	r1, [pc, #196]	; (4012d4 <SystemCoreClockUpdate+0xe8>)
  401210:	f3c2 1202 	ubfx	r2, r2, #4, #3
  401214:	680b      	ldr	r3, [r1, #0]
  401216:	40d3      	lsrs	r3, r2
  401218:	600b      	str	r3, [r1, #0]
  40121a:	4770      	bx	lr
		if (SUPC->SUPC_SR & SUPC_SR_OSCSEL) {
  40121c:	4b2e      	ldr	r3, [pc, #184]	; (4012d8 <SystemCoreClockUpdate+0xec>)
  40121e:	695b      	ldr	r3, [r3, #20]
  401220:	f013 0f80 	tst.w	r3, #128	; 0x80
			SystemCoreClock = CHIP_FREQ_XTAL_32K;
  401224:	bf14      	ite	ne
  401226:	f44f 4200 	movne.w	r2, #32768	; 0x8000
			SystemCoreClock = CHIP_FREQ_SLCK_RC;
  40122a:	f44f 42fa 	moveq.w	r2, #32000	; 0x7d00
  40122e:	4b29      	ldr	r3, [pc, #164]	; (4012d4 <SystemCoreClockUpdate+0xe8>)
  401230:	601a      	str	r2, [r3, #0]
  401232:	e7e4      	b.n	4011fe <SystemCoreClockUpdate+0x12>
		if (PMC->CKGR_MOR & CKGR_MOR_MOSCSEL) {
  401234:	4b26      	ldr	r3, [pc, #152]	; (4012d0 <SystemCoreClockUpdate+0xe4>)
  401236:	6a1b      	ldr	r3, [r3, #32]
  401238:	f013 7f80 	tst.w	r3, #16777216	; 0x1000000
  40123c:	d003      	beq.n	401246 <SystemCoreClockUpdate+0x5a>
			SystemCoreClock = CHIP_FREQ_XTAL_12M;
  40123e:	4a27      	ldr	r2, [pc, #156]	; (4012dc <SystemCoreClockUpdate+0xf0>)
  401240:	4b24      	ldr	r3, [pc, #144]	; (4012d4 <SystemCoreClockUpdate+0xe8>)
  401242:	601a      	str	r2, [r3, #0]
  401244:	e7db      	b.n	4011fe <SystemCoreClockUpdate+0x12>
			SystemCoreClock = CHIP_FREQ_MAINCK_RC_4MHZ;
  401246:	4a26      	ldr	r2, [pc, #152]	; (4012e0 <SystemCoreClockUpdate+0xf4>)
  401248:	4b22      	ldr	r3, [pc, #136]	; (4012d4 <SystemCoreClockUpdate+0xe8>)
  40124a:	601a      	str	r2, [r3, #0]
			switch (PMC->CKGR_MOR & CKGR_MOR_MOSCRCF_Msk) {
  40124c:	4b20      	ldr	r3, [pc, #128]	; (4012d0 <SystemCoreClockUpdate+0xe4>)
  40124e:	6a1b      	ldr	r3, [r3, #32]
  401250:	f003 0370 	and.w	r3, r3, #112	; 0x70
  401254:	2b10      	cmp	r3, #16
  401256:	d005      	beq.n	401264 <SystemCoreClockUpdate+0x78>
  401258:	2b20      	cmp	r3, #32
  40125a:	d1d0      	bne.n	4011fe <SystemCoreClockUpdate+0x12>
				SystemCoreClock *= 3U;
  40125c:	4a1f      	ldr	r2, [pc, #124]	; (4012dc <SystemCoreClockUpdate+0xf0>)
  40125e:	4b1d      	ldr	r3, [pc, #116]	; (4012d4 <SystemCoreClockUpdate+0xe8>)
  401260:	601a      	str	r2, [r3, #0]
				break;
  401262:	e7cc      	b.n	4011fe <SystemCoreClockUpdate+0x12>
				SystemCoreClock *= 2U;
  401264:	4a1f      	ldr	r2, [pc, #124]	; (4012e4 <SystemCoreClockUpdate+0xf8>)
  401266:	4b1b      	ldr	r3, [pc, #108]	; (4012d4 <SystemCoreClockUpdate+0xe8>)
  401268:	601a      	str	r2, [r3, #0]
				break;
  40126a:	e7c8      	b.n	4011fe <SystemCoreClockUpdate+0x12>
		if (PMC->CKGR_MOR & CKGR_MOR_MOSCSEL) {
  40126c:	4b18      	ldr	r3, [pc, #96]	; (4012d0 <SystemCoreClockUpdate+0xe4>)
  40126e:	6a1b      	ldr	r3, [r3, #32]
  401270:	f013 7f80 	tst.w	r3, #16777216	; 0x1000000
  401274:	d010      	beq.n	401298 <SystemCoreClockUpdate+0xac>
			SystemCoreClock = CHIP_FREQ_XTAL_12M;
  401276:	4a19      	ldr	r2, [pc, #100]	; (4012dc <SystemCoreClockUpdate+0xf0>)
  401278:	4b16      	ldr	r3, [pc, #88]	; (4012d4 <SystemCoreClockUpdate+0xe8>)
  40127a:	601a      	str	r2, [r3, #0]
		SystemCoreClock *= ((((PMC->CKGR_PLLAR) & CKGR_PLLAR_MULA_Msk) >> 
  40127c:	4a14      	ldr	r2, [pc, #80]	; (4012d0 <SystemCoreClockUpdate+0xe4>)
  40127e:	6a91      	ldr	r1, [r2, #40]	; 0x28
		SystemCoreClock /= ((((PMC->CKGR_PLLAR) & CKGR_PLLAR_DIVA_Msk) >> 
  401280:	6a92      	ldr	r2, [r2, #40]	; 0x28
  401282:	4814      	ldr	r0, [pc, #80]	; (4012d4 <SystemCoreClockUpdate+0xe8>)
		SystemCoreClock *= ((((PMC->CKGR_PLLAR) & CKGR_PLLAR_MULA_Msk) >> 
  401284:	f3c1 410a 	ubfx	r1, r1, #16, #11
  401288:	6803      	ldr	r3, [r0, #0]
  40128a:	fb01 3303 	mla	r3, r1, r3, r3
		SystemCoreClock /= ((((PMC->CKGR_PLLAR) & CKGR_PLLAR_DIVA_Msk) >> 
  40128e:	b2d2      	uxtb	r2, r2
  401290:	fbb3 f3f2 	udiv	r3, r3, r2
  401294:	6003      	str	r3, [r0, #0]
		break;
  401296:	e7b2      	b.n	4011fe <SystemCoreClockUpdate+0x12>
			SystemCoreClock = CHIP_FREQ_MAINCK_RC_4MHZ;
  401298:	4a11      	ldr	r2, [pc, #68]	; (4012e0 <SystemCoreClockUpdate+0xf4>)
  40129a:	4b0e      	ldr	r3, [pc, #56]	; (4012d4 <SystemCoreClockUpdate+0xe8>)
  40129c:	601a      	str	r2, [r3, #0]
			switch (PMC->CKGR_MOR & CKGR_MOR_MOSCRCF_Msk) {
  40129e:	4b0c      	ldr	r3, [pc, #48]	; (4012d0 <SystemCoreClockUpdate+0xe4>)
  4012a0:	6a1b      	ldr	r3, [r3, #32]
  4012a2:	f003 0370 	and.w	r3, r3, #112	; 0x70
  4012a6:	2b10      	cmp	r3, #16
  4012a8:	d005      	beq.n	4012b6 <SystemCoreClockUpdate+0xca>
  4012aa:	2b20      	cmp	r3, #32
  4012ac:	d1e6      	bne.n	40127c <SystemCoreClockUpdate+0x90>
				SystemCoreClock *= 3U;
  4012ae:	4a0b      	ldr	r2, [pc, #44]	; (4012dc <SystemCoreClockUpdate+0xf0>)
  4012b0:	4b08      	ldr	r3, [pc, #32]	; (4012d4 <SystemCoreClockUpdate+0xe8>)
  4012b2:	601a      	str	r2, [r3, #0]
				break;
  4012b4:	e7e2      	b.n	40127c <SystemCoreClockUpdate+0x90>
				SystemCoreClock *= 2U;
  4012b6:	4a0b      	ldr	r2, [pc, #44]	; (4012e4 <SystemCoreClockUpdate+0xf8>)
  4012b8:	4b06      	ldr	r3, [pc, #24]	; (4012d4 <SystemCoreClockUpdate+0xe8>)
  4012ba:	601a      	str	r2, [r3, #0]
				break;
  4012bc:	e7de      	b.n	40127c <SystemCoreClockUpdate+0x90>
		SystemCoreClock /= 3U;
  4012be:	4a05      	ldr	r2, [pc, #20]	; (4012d4 <SystemCoreClockUpdate+0xe8>)
  4012c0:	6813      	ldr	r3, [r2, #0]
  4012c2:	4909      	ldr	r1, [pc, #36]	; (4012e8 <SystemCoreClockUpdate+0xfc>)
  4012c4:	fba1 1303 	umull	r1, r3, r1, r3
  4012c8:	085b      	lsrs	r3, r3, #1
  4012ca:	6013      	str	r3, [r2, #0]
  4012cc:	4770      	bx	lr
  4012ce:	bf00      	nop
  4012d0:	400e0400 	.word	0x400e0400
  4012d4:	200000f0 	.word	0x200000f0
  4012d8:	400e1410 	.word	0x400e1410
  4012dc:	00b71b00 	.word	0x00b71b00
  4012e0:	003d0900 	.word	0x003d0900
  4012e4:	007a1200 	.word	0x007a1200
  4012e8:	aaaaaaab 	.word	0xaaaaaaab

004012ec <_sbrk>:
{
	static unsigned char *heap = NULL;
	unsigned char *prev_heap;
	int ramend = (int)&__ram_end__;

	if (heap == NULL) {
  4012ec:	4b0a      	ldr	r3, [pc, #40]	; (401318 <_sbrk+0x2c>)
  4012ee:	681b      	ldr	r3, [r3, #0]
  4012f0:	b153      	cbz	r3, 401308 <_sbrk+0x1c>
		heap = (unsigned char *)&_end;
	}
	prev_heap = heap;
  4012f2:	4b09      	ldr	r3, [pc, #36]	; (401318 <_sbrk+0x2c>)
  4012f4:	681b      	ldr	r3, [r3, #0]

	if (((int)prev_heap + incr) > ramend) {
  4012f6:	181a      	adds	r2, r3, r0
  4012f8:	4908      	ldr	r1, [pc, #32]	; (40131c <_sbrk+0x30>)
  4012fa:	4291      	cmp	r1, r2
  4012fc:	db08      	blt.n	401310 <_sbrk+0x24>
		return (caddr_t) -1;	
	}

	heap += incr;
  4012fe:	4610      	mov	r0, r2
  401300:	4a05      	ldr	r2, [pc, #20]	; (401318 <_sbrk+0x2c>)
  401302:	6010      	str	r0, [r2, #0]

	return (caddr_t) prev_heap;
  401304:	4618      	mov	r0, r3
  401306:	4770      	bx	lr
		heap = (unsigned char *)&_end;
  401308:	4a05      	ldr	r2, [pc, #20]	; (401320 <_sbrk+0x34>)
  40130a:	4b03      	ldr	r3, [pc, #12]	; (401318 <_sbrk+0x2c>)
  40130c:	601a      	str	r2, [r3, #0]
  40130e:	e7f0      	b.n	4012f2 <_sbrk+0x6>
		return (caddr_t) -1;	
  401310:	f04f 30ff 	mov.w	r0, #4294967295
}
  401314:	4770      	bx	lr
  401316:	bf00      	nop
  401318:	20000c9c 	.word	0x20000c9c
  40131c:	20005ffc 	.word	0x20005ffc
  401320:	20001738 	.word	0x20001738

00401324 <_close>:
}

extern int _close(int file)
{
	return -1;
}
  401324:	f04f 30ff 	mov.w	r0, #4294967295
  401328:	4770      	bx	lr

0040132a <_fstat>:

extern int _fstat(int file, struct stat *st)
{
	st->st_mode = S_IFCHR;
  40132a:	f44f 5300 	mov.w	r3, #8192	; 0x2000
  40132e:	604b      	str	r3, [r1, #4]

	return 0;
}
  401330:	2000      	movs	r0, #0
  401332:	4770      	bx	lr

00401334 <_isatty>:

extern int _isatty(int file)
{
	return 1;
}
  401334:	2001      	movs	r0, #1
  401336:	4770      	bx	lr

00401338 <_lseek>:

extern int _lseek(int file, int ptr, int dir)
{
	return 0;
}
  401338:	2000      	movs	r0, #0
  40133a:	4770      	bx	lr

0040133c <vListInitialise>:
void vListInitialise( xList *pxList )
{
	/* The list structure contains a list item which is used to mark the
	end of the list.  To initialise the list the list end is inserted
	as the only list entry. */
	pxList->pxIndex = ( xListItem * ) &( pxList->xListEnd );
  40133c:	f100 0308 	add.w	r3, r0, #8
  401340:	6043      	str	r3, [r0, #4]

	/* The list end value is the highest possible value in the list to
	ensure it remains at the end of the list. */
	pxList->xListEnd.xItemValue = portMAX_DELAY;
  401342:	f04f 32ff 	mov.w	r2, #4294967295
  401346:	6082      	str	r2, [r0, #8]

	/* The list end next and previous pointers point to itself so we know
	when the list is empty. */
	pxList->xListEnd.pxNext = ( xListItem * ) &( pxList->xListEnd );
  401348:	60c3      	str	r3, [r0, #12]
	pxList->xListEnd.pxPrevious = ( xListItem * ) &( pxList->xListEnd );
  40134a:	6103      	str	r3, [r0, #16]

	pxList->uxNumberOfItems = ( unsigned portBASE_TYPE ) 0U;
  40134c:	2300      	movs	r3, #0
  40134e:	6003      	str	r3, [r0, #0]
  401350:	4770      	bx	lr

00401352 <vListInitialiseItem>:
/*-----------------------------------------------------------*/

void vListInitialiseItem( xListItem *pxItem )
{
	/* Make sure the list item is not recorded as being on a list. */
	pxItem->pvContainer = NULL;
  401352:	2300      	movs	r3, #0
  401354:	6103      	str	r3, [r0, #16]
  401356:	4770      	bx	lr

00401358 <vListInsertEnd>:

	/* Insert a new list item into pxList, but rather than sort the list,
	makes the new list item the last item to be removed by a call to
	pvListGetOwnerOfNextEntry.  This means it has to be the item pointed to by
	the pxIndex member. */
	pxIndex = pxList->pxIndex;
  401358:	6843      	ldr	r3, [r0, #4]

	pxNewListItem->pxNext = pxIndex->pxNext;
  40135a:	685a      	ldr	r2, [r3, #4]
  40135c:	604a      	str	r2, [r1, #4]
	pxNewListItem->pxPrevious = pxList->pxIndex;
  40135e:	6842      	ldr	r2, [r0, #4]
  401360:	608a      	str	r2, [r1, #8]
	pxIndex->pxNext->pxPrevious = ( volatile xListItem * ) pxNewListItem;
  401362:	685a      	ldr	r2, [r3, #4]
  401364:	6091      	str	r1, [r2, #8]
	pxIndex->pxNext = ( volatile xListItem * ) pxNewListItem;
  401366:	6059      	str	r1, [r3, #4]
	pxList->pxIndex = ( volatile xListItem * ) pxNewListItem;
  401368:	6041      	str	r1, [r0, #4]

	/* Remember which list the item is in. */
	pxNewListItem->pvContainer = ( void * ) pxList;
  40136a:	6108      	str	r0, [r1, #16]

	( pxList->uxNumberOfItems )++;
  40136c:	6803      	ldr	r3, [r0, #0]
  40136e:	3301      	adds	r3, #1
  401370:	6003      	str	r3, [r0, #0]
  401372:	4770      	bx	lr

00401374 <vListInsert>:
}
/*-----------------------------------------------------------*/

void vListInsert( xList *pxList, xListItem *pxNewListItem )
{
  401374:	b410      	push	{r4}
volatile xListItem *pxIterator;
portTickType xValueOfInsertion;

	/* Insert the new list item into the list, sorted in ulListItem order. */
	xValueOfInsertion = pxNewListItem->xItemValue;
  401376:	680c      	ldr	r4, [r1, #0]
	are stored in ready lists (all of which have the same ulListItem value)
	get an equal share of the CPU.  However, if the xItemValue is the same as
	the back marker the iteration loop below will not end.  This means we need
	to guard against this by checking the value first and modifying the
	algorithm slightly if necessary. */
	if( xValueOfInsertion == portMAX_DELAY )
  401378:	f1b4 3fff 	cmp.w	r4, #4294967295
  40137c:	d015      	beq.n	4013aa <vListInsert+0x36>
			   before the scheduler has been started (are interrupts firing
			   before vTaskStartScheduler() has been called?).
		See http://www.freertos.org/FAQHelp.html for more tips.
		**********************************************************************/

		for( pxIterator = ( xListItem * ) &( pxList->xListEnd ); pxIterator->pxNext->xItemValue <= xValueOfInsertion; pxIterator = pxIterator->pxNext )
  40137e:	f100 0308 	add.w	r3, r0, #8
  401382:	68c2      	ldr	r2, [r0, #12]
  401384:	6812      	ldr	r2, [r2, #0]
  401386:	4294      	cmp	r4, r2
  401388:	d304      	bcc.n	401394 <vListInsert+0x20>
  40138a:	685b      	ldr	r3, [r3, #4]
  40138c:	685a      	ldr	r2, [r3, #4]
  40138e:	6812      	ldr	r2, [r2, #0]
  401390:	4294      	cmp	r4, r2
  401392:	d2fa      	bcs.n	40138a <vListInsert+0x16>
			/* There is nothing to do here, we are just iterating to the
			wanted insertion position. */
		}
	}

	pxNewListItem->pxNext = pxIterator->pxNext;
  401394:	685a      	ldr	r2, [r3, #4]
  401396:	604a      	str	r2, [r1, #4]
	pxNewListItem->pxNext->pxPrevious = ( volatile xListItem * ) pxNewListItem;
  401398:	6091      	str	r1, [r2, #8]
	pxNewListItem->pxPrevious = pxIterator;
  40139a:	608b      	str	r3, [r1, #8]
	pxIterator->pxNext = ( volatile xListItem * ) pxNewListItem;
  40139c:	6059      	str	r1, [r3, #4]

	/* Remember which list the item is in.  This allows fast removal of the
	item later. */
	pxNewListItem->pvContainer = ( void * ) pxList;
  40139e:	6108      	str	r0, [r1, #16]

	( pxList->uxNumberOfItems )++;
  4013a0:	6803      	ldr	r3, [r0, #0]
  4013a2:	3301      	adds	r3, #1
  4013a4:	6003      	str	r3, [r0, #0]
}
  4013a6:	bc10      	pop	{r4}
  4013a8:	4770      	bx	lr
		pxIterator = pxList->xListEnd.pxPrevious;
  4013aa:	6903      	ldr	r3, [r0, #16]
  4013ac:	e7f2      	b.n	401394 <vListInsert+0x20>

004013ae <vListRemove>:

void vListRemove( xListItem *pxItemToRemove )
{
xList * pxList;

	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
  4013ae:	6843      	ldr	r3, [r0, #4]
  4013b0:	6882      	ldr	r2, [r0, #8]
  4013b2:	609a      	str	r2, [r3, #8]
	pxItemToRemove->pxPrevious->pxNext = pxItemToRemove->pxNext;
  4013b4:	6883      	ldr	r3, [r0, #8]
  4013b6:	6842      	ldr	r2, [r0, #4]
  4013b8:	605a      	str	r2, [r3, #4]

	/* The list item knows which list it is in.  Obtain the list from the list
	item. */
	pxList = ( xList * ) pxItemToRemove->pvContainer;
  4013ba:	6903      	ldr	r3, [r0, #16]

	/* Make sure the index is left pointing to a valid item. */
	if( pxList->pxIndex == pxItemToRemove )
  4013bc:	685a      	ldr	r2, [r3, #4]
  4013be:	4290      	cmp	r0, r2
	{
		pxList->pxIndex = pxItemToRemove->pxPrevious;
  4013c0:	bf04      	itt	eq
  4013c2:	6882      	ldreq	r2, [r0, #8]
  4013c4:	605a      	streq	r2, [r3, #4]
	}

	pxItemToRemove->pvContainer = NULL;
  4013c6:	2200      	movs	r2, #0
  4013c8:	6102      	str	r2, [r0, #16]
	( pxList->uxNumberOfItems )--;
  4013ca:	681a      	ldr	r2, [r3, #0]
  4013cc:	3a01      	subs	r2, #1
  4013ce:	601a      	str	r2, [r3, #0]
  4013d0:	4770      	bx	lr

004013d2 <pxPortInitialiseStack>:
		pdTASK_CODE pxCode, void *pvParameters)
{
	/* Simulate the stack frame as it would be created by a context switch
	interrupt. */
	pxTopOfStack--;  /* Offset added to account for the way the MCU uses the stack on entry/exit of interrupts. */
	*pxTopOfStack = portINITIAL_XPSR;  /* xPSR */
  4013d2:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
  4013d6:	f840 3c04 	str.w	r3, [r0, #-4]
	pxTopOfStack--;
	*pxTopOfStack = (portSTACK_TYPE) pxCode;  /* PC */
  4013da:	f840 1c08 	str.w	r1, [r0, #-8]
	pxTopOfStack--;
	*pxTopOfStack = 0;  /* LR */
  4013de:	2300      	movs	r3, #0
  4013e0:	f840 3c0c 	str.w	r3, [r0, #-12]
	pxTopOfStack -= 5;  /* R12, R3, R2 and R1. */
	*pxTopOfStack = (portSTACK_TYPE) pvParameters;  /* R0 */
  4013e4:	f840 2c20 	str.w	r2, [r0, #-32]
	pxTopOfStack -= 8;  /* R11, R10, R9, R8, R7, R6, R5 and R4. */

	return pxTopOfStack;
}
  4013e8:	3840      	subs	r0, #64	; 0x40
  4013ea:	4770      	bx	lr

004013ec <SVC_Handler>:
/**
 * \brief Handler for Sytem supervisor call.
 */
void vPortSVCHandler(void)
{
	__asm volatile (" ldr r3, pxCurrentTCBConst2  \n"  /* Restore the context. */
  4013ec:	4b06      	ldr	r3, [pc, #24]	; (401408 <pxCurrentTCBConst2>)
  4013ee:	6819      	ldr	r1, [r3, #0]
  4013f0:	6808      	ldr	r0, [r1, #0]
  4013f2:	e8b0 0ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp}
  4013f6:	f380 8809 	msr	PSP, r0
  4013fa:	f04f 0000 	mov.w	r0, #0
  4013fe:	f380 8811 	msr	BASEPRI, r0
  401402:	f04e 0e0d 	orr.w	lr, lr, #13
  401406:	4770      	bx	lr

00401408 <pxCurrentTCBConst2>:
  401408:	20000cdc 	.word	0x20000cdc

0040140c <vPortStartFirstTask>:
/**
 * \brief Start schedule first task.
 */
void vPortStartFirstTask(void)
{
	__asm volatile (" ldr r0, =0xE000ED08   \n"  /* Use the NVIC offset register to locate the stack. */
  40140c:	4802      	ldr	r0, [pc, #8]	; (401418 <vPortStartFirstTask+0xc>)
  40140e:	6800      	ldr	r0, [r0, #0]
  401410:	6800      	ldr	r0, [r0, #0]
  401412:	f380 8808 	msr	MSP, r0
  401416:	df00      	svc	0
  401418:	e000ed08 	.word	0xe000ed08

0040141c <xPortStartScheduler>:

/**
 * \brief See header file for description.
 */
portBASE_TYPE xPortStartScheduler(void)
{
  40141c:	b510      	push	{r4, lr}
	/* Make PendSV, CallSV and SysTick the same priroity as the kernel. */
	*(portNVIC_SYSPRI2) |= portNVIC_PENDSV_PRI;
  40141e:	4b0c      	ldr	r3, [pc, #48]	; (401450 <xPortStartScheduler+0x34>)
  401420:	681a      	ldr	r2, [r3, #0]
  401422:	f442 0270 	orr.w	r2, r2, #15728640	; 0xf00000
  401426:	601a      	str	r2, [r3, #0]
	*(portNVIC_SYSPRI2) |= portNVIC_SYSTICK_PRI;
  401428:	681a      	ldr	r2, [r3, #0]
  40142a:	f042 4270 	orr.w	r2, r2, #4026531840	; 0xf0000000
  40142e:	601a      	str	r2, [r3, #0]
 * frequency.
 */
void prvSetupTimerInterrupt(void)
{
	/* Configure SysTick to interrupt at the requested rate. */
	*(portNVIC_SYSTICK_LOAD) =
  401430:	f64b 327f 	movw	r2, #47999	; 0xbb7f
  401434:	f6a3 530c 	subw	r3, r3, #3340	; 0xd0c
  401438:	601a      	str	r2, [r3, #0]
			(configCPU_CLOCK_HZ / configTICK_RATE_HZ) - 1UL;
	*(portNVIC_SYSTICK_CTRL) =
  40143a:	2207      	movs	r2, #7
  40143c:	3b04      	subs	r3, #4
  40143e:	601a      	str	r2, [r3, #0]
	uxCriticalNesting = 0;
  401440:	2400      	movs	r4, #0
  401442:	4b04      	ldr	r3, [pc, #16]	; (401454 <xPortStartScheduler+0x38>)
  401444:	601c      	str	r4, [r3, #0]
	vPortStartFirstTask();
  401446:	4b04      	ldr	r3, [pc, #16]	; (401458 <xPortStartScheduler+0x3c>)
  401448:	4798      	blx	r3
}
  40144a:	4620      	mov	r0, r4
  40144c:	bd10      	pop	{r4, pc}
  40144e:	bf00      	nop
  401450:	e000ed20 	.word	0xe000ed20
  401454:	200000f4 	.word	0x200000f4
  401458:	0040140d 	.word	0x0040140d

0040145c <vPortYieldFromISR>:
	*(portNVIC_INT_CTRL) = portNVIC_PENDSVSET;
  40145c:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
  401460:	4b01      	ldr	r3, [pc, #4]	; (401468 <vPortYieldFromISR+0xc>)
  401462:	601a      	str	r2, [r3, #0]
  401464:	4770      	bx	lr
  401466:	bf00      	nop
  401468:	e000ed04 	.word	0xe000ed04

0040146c <vPortEnterCritical>:
	portDISABLE_INTERRUPTS();
  40146c:	f04f 0050 	mov.w	r0, #80	; 0x50
  401470:	f380 8811 	msr	BASEPRI, r0
	uxCriticalNesting++;
  401474:	4a02      	ldr	r2, [pc, #8]	; (401480 <vPortEnterCritical+0x14>)
  401476:	6813      	ldr	r3, [r2, #0]
  401478:	3301      	adds	r3, #1
  40147a:	6013      	str	r3, [r2, #0]
  40147c:	4770      	bx	lr
  40147e:	bf00      	nop
  401480:	200000f4 	.word	0x200000f4

00401484 <vPortExitCritical>:
	uxCriticalNesting--;
  401484:	4a04      	ldr	r2, [pc, #16]	; (401498 <vPortExitCritical+0x14>)
  401486:	6813      	ldr	r3, [r2, #0]
  401488:	3b01      	subs	r3, #1
  40148a:	6013      	str	r3, [r2, #0]
	if (uxCriticalNesting == 0) {
  40148c:	b91b      	cbnz	r3, 401496 <vPortExitCritical+0x12>
		portENABLE_INTERRUPTS();
  40148e:	f04f 0000 	mov.w	r0, #0
  401492:	f380 8811 	msr	BASEPRI, r0
  401496:	4770      	bx	lr
  401498:	200000f4 	.word	0x200000f4

0040149c <PendSV_Handler>:
	__asm volatile (" mrs r0, psp      \n"
  40149c:	f3ef 8009 	mrs	r0, PSP
  4014a0:	4b0c      	ldr	r3, [pc, #48]	; (4014d4 <pxCurrentTCBConst>)
  4014a2:	681a      	ldr	r2, [r3, #0]
  4014a4:	e920 0ff0 	stmdb	r0!, {r4, r5, r6, r7, r8, r9, sl, fp}
  4014a8:	6010      	str	r0, [r2, #0]
  4014aa:	e92d 4008 	stmdb	sp!, {r3, lr}
  4014ae:	f04f 0050 	mov.w	r0, #80	; 0x50
  4014b2:	f380 8811 	msr	BASEPRI, r0
  4014b6:	f000 fbaf 	bl	401c18 <vTaskSwitchContext>
  4014ba:	f04f 0000 	mov.w	r0, #0
  4014be:	f380 8811 	msr	BASEPRI, r0
  4014c2:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  4014c6:	6819      	ldr	r1, [r3, #0]
  4014c8:	6808      	ldr	r0, [r1, #0]
  4014ca:	e8b0 0ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp}
  4014ce:	f380 8809 	msr	PSP, r0
  4014d2:	4770      	bx	lr

004014d4 <pxCurrentTCBConst>:
  4014d4:	20000cdc 	.word	0x20000cdc

004014d8 <xPortSysTickHandler>:
{
  4014d8:	b508      	push	{r3, lr}
	ulDummy = portSET_INTERRUPT_MASK_FROM_ISR();
  4014da:	f04f 0050 	mov.w	r0, #80	; 0x50
  4014de:	f380 8811 	msr	BASEPRI, r0
		vTaskIncrementTick();
  4014e2:	4b03      	ldr	r3, [pc, #12]	; (4014f0 <xPortSysTickHandler+0x18>)
  4014e4:	4798      	blx	r3
	portCLEAR_INTERRUPT_MASK_FROM_ISR(ulDummy);
  4014e6:	f04f 0000 	mov.w	r0, #0
  4014ea:	f380 8811 	msr	BASEPRI, r0
  4014ee:	bd08      	pop	{r3, pc}
  4014f0:	004018f9 	.word	0x004018f9

004014f4 <pvPortMalloc>:
#undef MPU_WRAPPERS_INCLUDED_FROM_API_FILE

/*-----------------------------------------------------------*/

void *pvPortMalloc( size_t xWantedSize )
{
  4014f4:	b510      	push	{r4, lr}
  4014f6:	4604      	mov	r4, r0
void *pvReturn;

	vTaskSuspendAll();
  4014f8:	4b04      	ldr	r3, [pc, #16]	; (40150c <pvPortMalloc+0x18>)
  4014fa:	4798      	blx	r3
	{
		pvReturn = malloc( xWantedSize );
  4014fc:	4620      	mov	r0, r4
  4014fe:	4b04      	ldr	r3, [pc, #16]	; (401510 <pvPortMalloc+0x1c>)
  401500:	4798      	blx	r3
  401502:	4604      	mov	r4, r0
	}
	xTaskResumeAll();
  401504:	4b03      	ldr	r3, [pc, #12]	; (401514 <pvPortMalloc+0x20>)
  401506:	4798      	blx	r3
		}
	}
	#endif

	return pvReturn;
}
  401508:	4620      	mov	r0, r4
  40150a:	bd10      	pop	{r4, pc}
  40150c:	004018dd 	.word	0x004018dd
  401510:	00402279 	.word	0x00402279
  401514:	00401a19 	.word	0x00401a19

00401518 <vPortFree>:
/*-----------------------------------------------------------*/

void vPortFree( void *pv )
{
	if( pv )
  401518:	b148      	cbz	r0, 40152e <vPortFree+0x16>
{
  40151a:	b510      	push	{r4, lr}
  40151c:	4604      	mov	r4, r0
	{
		vTaskSuspendAll();
  40151e:	4b04      	ldr	r3, [pc, #16]	; (401530 <vPortFree+0x18>)
  401520:	4798      	blx	r3
		{
			free( pv );
  401522:	4620      	mov	r0, r4
  401524:	4b03      	ldr	r3, [pc, #12]	; (401534 <vPortFree+0x1c>)
  401526:	4798      	blx	r3
		}
		xTaskResumeAll();
  401528:	4b03      	ldr	r3, [pc, #12]	; (401538 <vPortFree+0x20>)
  40152a:	4798      	blx	r3
  40152c:	bd10      	pop	{r4, pc}
  40152e:	4770      	bx	lr
  401530:	004018dd 	.word	0x004018dd
  401534:	00402289 	.word	0x00402289
  401538:	00401a19 	.word	0x00401a19

0040153c <xQueueCreate>:
/*-----------------------------------------------------------
 * PUBLIC QUEUE MANAGEMENT API documented in queue.h
 *----------------------------------------------------------*/

xQueueHandle xQueueCreate( unsigned portBASE_TYPE uxQueueLength, unsigned portBASE_TYPE uxItemSize )
{
  40153c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
xQUEUE *pxNewQueue;
size_t xQueueSizeInBytes;
xQueueHandle xReturn = NULL;

	/* Allocate the new queue structure. */
	if( uxQueueLength > ( unsigned portBASE_TYPE ) 0 )
  40153e:	b348      	cbz	r0, 401594 <xQueueCreate+0x58>
  401540:	4607      	mov	r7, r0
  401542:	460d      	mov	r5, r1
	{
		pxNewQueue = ( xQUEUE * ) pvPortMalloc( sizeof( xQUEUE ) );
  401544:	204c      	movs	r0, #76	; 0x4c
  401546:	4b15      	ldr	r3, [pc, #84]	; (40159c <xQueueCreate+0x60>)
  401548:	4798      	blx	r3
		if( pxNewQueue != NULL )
  40154a:	4604      	mov	r4, r0
  40154c:	b320      	cbz	r0, 401598 <xQueueCreate+0x5c>
		{
			/* Create the list of pointers to queue items.  The queue is one byte
			longer than asked for to make wrap checking easier/faster. */
			xQueueSizeInBytes = ( size_t ) ( uxQueueLength * uxItemSize ) + ( size_t ) 1;
  40154e:	fb05 f607 	mul.w	r6, r5, r7

			pxNewQueue->pcHead = ( signed char * ) pvPortMalloc( xQueueSizeInBytes );
  401552:	1c70      	adds	r0, r6, #1
  401554:	4b11      	ldr	r3, [pc, #68]	; (40159c <xQueueCreate+0x60>)
  401556:	4798      	blx	r3
  401558:	6020      	str	r0, [r4, #0]
			if( pxNewQueue->pcHead != NULL )
  40155a:	b1b0      	cbz	r0, 40158a <xQueueCreate+0x4e>
			{
				/* Initialise the queue members as described above where the
				queue type is defined. */
				pxNewQueue->pcTail = pxNewQueue->pcHead + ( uxQueueLength * uxItemSize );
  40155c:	1983      	adds	r3, r0, r6
  40155e:	6063      	str	r3, [r4, #4]
				pxNewQueue->uxMessagesWaiting = ( unsigned portBASE_TYPE ) 0U;
  401560:	2300      	movs	r3, #0
  401562:	63a3      	str	r3, [r4, #56]	; 0x38
				pxNewQueue->pcWriteTo = pxNewQueue->pcHead;
  401564:	60a0      	str	r0, [r4, #8]
				pxNewQueue->pcReadFrom = pxNewQueue->pcHead + ( ( uxQueueLength - ( unsigned portBASE_TYPE ) 1U ) * uxItemSize );
  401566:	1b76      	subs	r6, r6, r5
  401568:	4430      	add	r0, r6
  40156a:	60e0      	str	r0, [r4, #12]
				pxNewQueue->uxLength = uxQueueLength;
  40156c:	63e7      	str	r7, [r4, #60]	; 0x3c
				pxNewQueue->uxItemSize = uxItemSize;
  40156e:	6425      	str	r5, [r4, #64]	; 0x40
				pxNewQueue->xRxLock = queueUNLOCKED;
  401570:	f04f 33ff 	mov.w	r3, #4294967295
  401574:	6463      	str	r3, [r4, #68]	; 0x44
				pxNewQueue->xTxLock = queueUNLOCKED;
  401576:	64a3      	str	r3, [r4, #72]	; 0x48

				/* Likewise ensure the event queues start with the correct state. */
				vListInitialise( &( pxNewQueue->xTasksWaitingToSend ) );
  401578:	f104 0010 	add.w	r0, r4, #16
  40157c:	4d08      	ldr	r5, [pc, #32]	; (4015a0 <xQueueCreate+0x64>)
  40157e:	47a8      	blx	r5
				vListInitialise( &( pxNewQueue->xTasksWaitingToReceive ) );
  401580:	f104 0024 	add.w	r0, r4, #36	; 0x24
  401584:	47a8      	blx	r5
	}

	configASSERT( xReturn );

	return xReturn;
}
  401586:	4620      	mov	r0, r4
  401588:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
				vPortFree( pxNewQueue );
  40158a:	4620      	mov	r0, r4
  40158c:	4b05      	ldr	r3, [pc, #20]	; (4015a4 <xQueueCreate+0x68>)
  40158e:	4798      	blx	r3
xQueueHandle xReturn = NULL;
  401590:	2400      	movs	r4, #0
  401592:	e7f8      	b.n	401586 <xQueueCreate+0x4a>
  401594:	2400      	movs	r4, #0
  401596:	e7f6      	b.n	401586 <xQueueCreate+0x4a>
  401598:	2400      	movs	r4, #0
	return xReturn;
  40159a:	e7f4      	b.n	401586 <xQueueCreate+0x4a>
  40159c:	004014f5 	.word	0x004014f5
  4015a0:	0040133d 	.word	0x0040133d
  4015a4:	00401519 	.word	0x00401519

004015a8 <prvAddCurrentTaskToDelayedList>:
	#endif
}
/*-----------------------------------------------------------*/

static void prvAddCurrentTaskToDelayedList( portTickType xTimeToWake )
{
  4015a8:	b510      	push	{r4, lr}
	/* The list item will be inserted in wake time order. */
	listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xGenericListItem ), xTimeToWake );
  4015aa:	4b0f      	ldr	r3, [pc, #60]	; (4015e8 <prvAddCurrentTaskToDelayedList+0x40>)
  4015ac:	681b      	ldr	r3, [r3, #0]
  4015ae:	6058      	str	r0, [r3, #4]

	if( xTimeToWake < xTickCount )
  4015b0:	4b0e      	ldr	r3, [pc, #56]	; (4015ec <prvAddCurrentTaskToDelayedList+0x44>)
  4015b2:	681b      	ldr	r3, [r3, #0]
  4015b4:	4298      	cmp	r0, r3
  4015b6:	d30e      	bcc.n	4015d6 <prvAddCurrentTaskToDelayedList+0x2e>
  4015b8:	4604      	mov	r4, r0
		vListInsert( ( xList * ) pxOverflowDelayedTaskList, ( xListItem * ) &( pxCurrentTCB->xGenericListItem ) );
	}
	else
	{
		/* The wake time has not overflowed, so we can use the current block list. */
		vListInsert( ( xList * ) pxDelayedTaskList, ( xListItem * ) &( pxCurrentTCB->xGenericListItem ) );
  4015ba:	4b0d      	ldr	r3, [pc, #52]	; (4015f0 <prvAddCurrentTaskToDelayedList+0x48>)
  4015bc:	6818      	ldr	r0, [r3, #0]
  4015be:	4b0a      	ldr	r3, [pc, #40]	; (4015e8 <prvAddCurrentTaskToDelayedList+0x40>)
  4015c0:	6819      	ldr	r1, [r3, #0]
  4015c2:	3104      	adds	r1, #4
  4015c4:	4b0b      	ldr	r3, [pc, #44]	; (4015f4 <prvAddCurrentTaskToDelayedList+0x4c>)
  4015c6:	4798      	blx	r3

		/* If the task entering the blocked state was placed at the head of the
		list of blocked tasks then xNextTaskUnblockTime needs to be updated
		too. */
		if( xTimeToWake < xNextTaskUnblockTime )
  4015c8:	4b0b      	ldr	r3, [pc, #44]	; (4015f8 <prvAddCurrentTaskToDelayedList+0x50>)
  4015ca:	681b      	ldr	r3, [r3, #0]
  4015cc:	429c      	cmp	r4, r3
		{
			xNextTaskUnblockTime = xTimeToWake;
  4015ce:	bf3c      	itt	cc
  4015d0:	4b09      	ldrcc	r3, [pc, #36]	; (4015f8 <prvAddCurrentTaskToDelayedList+0x50>)
  4015d2:	601c      	strcc	r4, [r3, #0]
  4015d4:	bd10      	pop	{r4, pc}
		vListInsert( ( xList * ) pxOverflowDelayedTaskList, ( xListItem * ) &( pxCurrentTCB->xGenericListItem ) );
  4015d6:	4b09      	ldr	r3, [pc, #36]	; (4015fc <prvAddCurrentTaskToDelayedList+0x54>)
  4015d8:	6818      	ldr	r0, [r3, #0]
  4015da:	4b03      	ldr	r3, [pc, #12]	; (4015e8 <prvAddCurrentTaskToDelayedList+0x40>)
  4015dc:	6819      	ldr	r1, [r3, #0]
  4015de:	3104      	adds	r1, #4
  4015e0:	4b04      	ldr	r3, [pc, #16]	; (4015f4 <prvAddCurrentTaskToDelayedList+0x4c>)
  4015e2:	4798      	blx	r3
  4015e4:	bd10      	pop	{r4, pc}
  4015e6:	bf00      	nop
  4015e8:	20000cdc 	.word	0x20000cdc
  4015ec:	20000dc0 	.word	0x20000dc0
  4015f0:	20000ce0 	.word	0x20000ce0
  4015f4:	00401375 	.word	0x00401375
  4015f8:	200000fc 	.word	0x200000fc
  4015fc:	20000ce4 	.word	0x20000ce4

00401600 <prvIdleTask>:
{
  401600:	b508      	push	{r3, lr}
			taskYIELD();
  401602:	4d02      	ldr	r5, [pc, #8]	; (40160c <prvIdleTask+0xc>)
			vApplicationIdleHook();
  401604:	4c02      	ldr	r4, [pc, #8]	; (401610 <prvIdleTask+0x10>)
			taskYIELD();
  401606:	47a8      	blx	r5
			vApplicationIdleHook();
  401608:	47a0      	blx	r4
  40160a:	e7fc      	b.n	401606 <prvIdleTask+0x6>
  40160c:	0040145d 	.word	0x0040145d
  401610:	0040200d 	.word	0x0040200d

00401614 <prvListTaskWithinSingleList>:
/*-----------------------------------------------------------*/

#if ( configUSE_TRACE_FACILITY == 1 )

	static void prvListTaskWithinSingleList( const signed char *pcWriteBuffer, xList *pxList, signed char cStatus )
	{
  401614:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  401618:	b087      	sub	sp, #28
  40161a:	9005      	str	r0, [sp, #20]
  40161c:	460d      	mov	r5, r1
  40161e:	4693      	mov	fp, r2
	volatile tskTCB *pxNextTCB, *pxFirstTCB;
	unsigned short usStackRemaining;

		/* Write the details of all the TCB's in pxList into the buffer. */
		listGET_OWNER_OF_NEXT_ENTRY( pxFirstTCB, pxList );
  401620:	684b      	ldr	r3, [r1, #4]
  401622:	685b      	ldr	r3, [r3, #4]
  401624:	604b      	str	r3, [r1, #4]
  401626:	f101 0708 	add.w	r7, r1, #8
  40162a:	42bb      	cmp	r3, r7
  40162c:	bf04      	itt	eq
  40162e:	68cb      	ldreq	r3, [r1, #12]
  401630:	604b      	streq	r3, [r1, #4]
  401632:	684b      	ldr	r3, [r1, #4]
  401634:	f8d3 a00c 	ldr.w	sl, [r3, #12]
			{
				usStackRemaining = usTaskCheckFreeStackSpace( ( unsigned char * ) pxNextTCB->pxStack );
			}
			#endif

			sprintf( pcStatusString, ( char * ) "%s\t\t%c\t%u\t%u\t%u\r\n", pxNextTCB->pcTaskName, cStatus, ( unsigned int ) pxNextTCB->uxPriority, usStackRemaining, ( unsigned int ) pxNextTCB->uxTCBNumber );
  401638:	f8df 9064 	ldr.w	r9, [pc, #100]	; 4016a0 <prvListTaskWithinSingleList+0x8c>
  40163c:	4e16      	ldr	r6, [pc, #88]	; (401698 <prvListTaskWithinSingleList+0x84>)
  40163e:	f8df 8064 	ldr.w	r8, [pc, #100]	; 4016a4 <prvListTaskWithinSingleList+0x90>
			listGET_OWNER_OF_NEXT_ENTRY( pxNextTCB, pxList );
  401642:	686b      	ldr	r3, [r5, #4]
  401644:	685b      	ldr	r3, [r3, #4]
  401646:	606b      	str	r3, [r5, #4]
  401648:	429f      	cmp	r7, r3
  40164a:	bf04      	itt	eq
  40164c:	68eb      	ldreq	r3, [r5, #12]
  40164e:	606b      	streq	r3, [r5, #4]
  401650:	686b      	ldr	r3, [r5, #4]
  401652:	68dc      	ldr	r4, [r3, #12]
				usStackRemaining = usTaskCheckFreeStackSpace( ( unsigned char * ) pxNextTCB->pxStack );
  401654:	6b22      	ldr	r2, [r4, #48]	; 0x30

	static unsigned short usTaskCheckFreeStackSpace( const unsigned char * pucStackByte )
	{
	register unsigned short usCount = 0;

		while( *pucStackByte == tskSTACK_FILL_BYTE )
  401656:	7813      	ldrb	r3, [r2, #0]
  401658:	2ba5      	cmp	r3, #165	; 0xa5
  40165a:	d11b      	bne.n	401694 <prvListTaskWithinSingleList+0x80>
  40165c:	2300      	movs	r3, #0
		{
			pucStackByte -= portSTACK_GROWTH;
			usCount++;
  40165e:	3301      	adds	r3, #1
  401660:	b29b      	uxth	r3, r3
		while( *pucStackByte == tskSTACK_FILL_BYTE )
  401662:	f812 1f01 	ldrb.w	r1, [r2, #1]!
  401666:	29a5      	cmp	r1, #165	; 0xa5
  401668:	d0f9      	beq.n	40165e <prvListTaskWithinSingleList+0x4a>
			sprintf( pcStatusString, ( char * ) "%s\t\t%c\t%u\t%u\t%u\r\n", pxNextTCB->pcTaskName, cStatus, ( unsigned int ) pxNextTCB->uxPriority, usStackRemaining, ( unsigned int ) pxNextTCB->uxTCBNumber );
  40166a:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
  40166c:	6c61      	ldr	r1, [r4, #68]	; 0x44
  40166e:	9102      	str	r1, [sp, #8]
  401670:	089b      	lsrs	r3, r3, #2
  401672:	9301      	str	r3, [sp, #4]
  401674:	9200      	str	r2, [sp, #0]
  401676:	465b      	mov	r3, fp
  401678:	f104 0234 	add.w	r2, r4, #52	; 0x34
  40167c:	4649      	mov	r1, r9
  40167e:	4630      	mov	r0, r6
  401680:	47c0      	blx	r8
			strcat( ( char * ) pcWriteBuffer, ( char * ) pcStatusString );
  401682:	4631      	mov	r1, r6
  401684:	9805      	ldr	r0, [sp, #20]
  401686:	4b05      	ldr	r3, [pc, #20]	; (40169c <prvListTaskWithinSingleList+0x88>)
  401688:	4798      	blx	r3
		} while( pxNextTCB != pxFirstTCB );
  40168a:	45a2      	cmp	sl, r4
  40168c:	d1d9      	bne.n	401642 <prvListTaskWithinSingleList+0x2e>
	}
  40168e:	b007      	add	sp, #28
  401690:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	register unsigned short usCount = 0;
  401694:	2300      	movs	r3, #0
  401696:	e7e8      	b.n	40166a <prvListTaskWithinSingleList+0x56>
  401698:	20000ca0 	.word	0x20000ca0
  40169c:	00402b99 	.word	0x00402b99
  4016a0:	00408d68 	.word	0x00408d68
  4016a4:	00402b4d 	.word	0x00402b4d

004016a8 <xTaskGenericCreate>:
{
  4016a8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  4016ac:	b083      	sub	sp, #12
  4016ae:	4683      	mov	fp, r0
  4016b0:	460e      	mov	r6, r1
  4016b2:	4615      	mov	r5, r2
  4016b4:	9301      	str	r3, [sp, #4]
  4016b6:	f8dd a030 	ldr.w	sl, [sp, #48]	; 0x30
  4016ba:	f8dd 9034 	ldr.w	r9, [sp, #52]	; 0x34
  4016be:	9f0e      	ldr	r7, [sp, #56]	; 0x38
	pxNewTCB = ( tskTCB * ) pvPortMalloc( sizeof( tskTCB ) );
  4016c0:	204c      	movs	r0, #76	; 0x4c
  4016c2:	4b59      	ldr	r3, [pc, #356]	; (401828 <xTaskGenericCreate+0x180>)
  4016c4:	4798      	blx	r3
	if( pxNewTCB != NULL )
  4016c6:	2800      	cmp	r0, #0
  4016c8:	d07c      	beq.n	4017c4 <xTaskGenericCreate+0x11c>
  4016ca:	4604      	mov	r4, r0
		pxNewTCB->pxStack = ( portSTACK_TYPE * ) pvPortMallocAligned( ( ( ( size_t )usStackDepth ) * sizeof( portSTACK_TYPE ) ), puxStackBuffer );
  4016cc:	2f00      	cmp	r7, #0
  4016ce:	d06f      	beq.n	4017b0 <xTaskGenericCreate+0x108>
  4016d0:	6307      	str	r7, [r0, #48]	; 0x30
			memset( pxNewTCB->pxStack, tskSTACK_FILL_BYTE, usStackDepth * sizeof( portSTACK_TYPE ) );
  4016d2:	00aa      	lsls	r2, r5, #2
  4016d4:	21a5      	movs	r1, #165	; 0xa5
  4016d6:	4638      	mov	r0, r7
  4016d8:	4b54      	ldr	r3, [pc, #336]	; (40182c <xTaskGenericCreate+0x184>)
  4016da:	4798      	blx	r3
			pxTopOfStack = pxNewTCB->pxStack + ( usStackDepth - ( unsigned short ) 1 );
  4016dc:	f105 4280 	add.w	r2, r5, #1073741824	; 0x40000000
  4016e0:	3a01      	subs	r2, #1
  4016e2:	6b25      	ldr	r5, [r4, #48]	; 0x30
  4016e4:	eb05 0582 	add.w	r5, r5, r2, lsl #2
			pxTopOfStack = ( portSTACK_TYPE * ) ( ( ( unsigned long ) pxTopOfStack ) & ( ( unsigned long ) ~portBYTE_ALIGNMENT_MASK  ) );
  4016e8:	f025 0507 	bic.w	r5, r5, #7
		strncpy( ( char * ) pxTCB->pcTaskName, ( const char * ) pcName, ( unsigned short ) configMAX_TASK_NAME_LEN );
  4016ec:	2210      	movs	r2, #16
  4016ee:	4631      	mov	r1, r6
  4016f0:	f104 0034 	add.w	r0, r4, #52	; 0x34
  4016f4:	4b4e      	ldr	r3, [pc, #312]	; (401830 <xTaskGenericCreate+0x188>)
  4016f6:	4798      	blx	r3
	pxTCB->pcTaskName[ ( unsigned short ) configMAX_TASK_NAME_LEN - ( unsigned short ) 1 ] = ( signed char ) '\0';
  4016f8:	2300      	movs	r3, #0
  4016fa:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
  4016fe:	4656      	mov	r6, sl
  401700:	2e04      	cmp	r6, #4
  401702:	bf28      	it	cs
  401704:	2604      	movcs	r6, #4
	pxTCB->uxPriority = uxPriority;
  401706:	62e6      	str	r6, [r4, #44]	; 0x2c
		pxTCB->uxBasePriority = uxPriority;
  401708:	64a6      	str	r6, [r4, #72]	; 0x48
	vListInitialiseItem( &( pxTCB->xGenericListItem ) );
  40170a:	1d27      	adds	r7, r4, #4
  40170c:	4638      	mov	r0, r7
  40170e:	f8df 8170 	ldr.w	r8, [pc, #368]	; 401880 <xTaskGenericCreate+0x1d8>
  401712:	47c0      	blx	r8
	vListInitialiseItem( &( pxTCB->xEventListItem ) );
  401714:	f104 0018 	add.w	r0, r4, #24
  401718:	47c0      	blx	r8
	listSET_LIST_ITEM_OWNER( &( pxTCB->xGenericListItem ), pxTCB );
  40171a:	6124      	str	r4, [r4, #16]
	listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), configMAX_PRIORITIES - ( portTickType ) uxPriority );
  40171c:	f1c6 0605 	rsb	r6, r6, #5
  401720:	61a6      	str	r6, [r4, #24]
	listSET_LIST_ITEM_OWNER( &( pxTCB->xEventListItem ), pxTCB );
  401722:	6264      	str	r4, [r4, #36]	; 0x24
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
  401724:	9a01      	ldr	r2, [sp, #4]
  401726:	4659      	mov	r1, fp
  401728:	4628      	mov	r0, r5
  40172a:	4b42      	ldr	r3, [pc, #264]	; (401834 <xTaskGenericCreate+0x18c>)
  40172c:	4798      	blx	r3
  40172e:	6020      	str	r0, [r4, #0]
		if( ( void * ) pxCreatedTask != NULL )
  401730:	f1b9 0f00 	cmp.w	r9, #0
  401734:	d001      	beq.n	40173a <xTaskGenericCreate+0x92>
			*pxCreatedTask = ( xTaskHandle ) pxNewTCB;
  401736:	f8c9 4000 	str.w	r4, [r9]
		taskENTER_CRITICAL();
  40173a:	4b3f      	ldr	r3, [pc, #252]	; (401838 <xTaskGenericCreate+0x190>)
  40173c:	4798      	blx	r3
			uxCurrentNumberOfTasks++;
  40173e:	4a3f      	ldr	r2, [pc, #252]	; (40183c <xTaskGenericCreate+0x194>)
  401740:	6813      	ldr	r3, [r2, #0]
  401742:	3301      	adds	r3, #1
  401744:	6013      	str	r3, [r2, #0]
			if( pxCurrentTCB == NULL )
  401746:	4b3e      	ldr	r3, [pc, #248]	; (401840 <xTaskGenericCreate+0x198>)
  401748:	681b      	ldr	r3, [r3, #0]
  40174a:	2b00      	cmp	r3, #0
  40174c:	d03d      	beq.n	4017ca <xTaskGenericCreate+0x122>
				if( xSchedulerRunning == pdFALSE )
  40174e:	4b3d      	ldr	r3, [pc, #244]	; (401844 <xTaskGenericCreate+0x19c>)
  401750:	681b      	ldr	r3, [r3, #0]
  401752:	b933      	cbnz	r3, 401762 <xTaskGenericCreate+0xba>
					if( pxCurrentTCB->uxPriority <= uxPriority )
  401754:	4b3a      	ldr	r3, [pc, #232]	; (401840 <xTaskGenericCreate+0x198>)
  401756:	681b      	ldr	r3, [r3, #0]
  401758:	6adb      	ldr	r3, [r3, #44]	; 0x2c
  40175a:	459a      	cmp	sl, r3
						pxCurrentTCB = pxNewTCB;
  40175c:	bf24      	itt	cs
  40175e:	4b38      	ldrcs	r3, [pc, #224]	; (401840 <xTaskGenericCreate+0x198>)
  401760:	601c      	strcs	r4, [r3, #0]
			if( pxNewTCB->uxPriority > uxTopUsedPriority )
  401762:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
  401764:	4b38      	ldr	r3, [pc, #224]	; (401848 <xTaskGenericCreate+0x1a0>)
  401766:	681b      	ldr	r3, [r3, #0]
  401768:	4298      	cmp	r0, r3
				uxTopUsedPriority = pxNewTCB->uxPriority;
  40176a:	bf84      	itt	hi
  40176c:	4b36      	ldrhi	r3, [pc, #216]	; (401848 <xTaskGenericCreate+0x1a0>)
  40176e:	6018      	strhi	r0, [r3, #0]
				pxNewTCB->uxTCBNumber = uxTaskNumber;
  401770:	4a36      	ldr	r2, [pc, #216]	; (40184c <xTaskGenericCreate+0x1a4>)
  401772:	6813      	ldr	r3, [r2, #0]
  401774:	6463      	str	r3, [r4, #68]	; 0x44
			uxTaskNumber++;
  401776:	3301      	adds	r3, #1
  401778:	6013      	str	r3, [r2, #0]
			prvAddTaskToReadyQueue( pxNewTCB );
  40177a:	4b35      	ldr	r3, [pc, #212]	; (401850 <xTaskGenericCreate+0x1a8>)
  40177c:	681b      	ldr	r3, [r3, #0]
  40177e:	4298      	cmp	r0, r3
  401780:	bf84      	itt	hi
  401782:	4b33      	ldrhi	r3, [pc, #204]	; (401850 <xTaskGenericCreate+0x1a8>)
  401784:	6018      	strhi	r0, [r3, #0]
  401786:	eb00 0080 	add.w	r0, r0, r0, lsl #2
  40178a:	4639      	mov	r1, r7
  40178c:	4b31      	ldr	r3, [pc, #196]	; (401854 <xTaskGenericCreate+0x1ac>)
  40178e:	eb03 0080 	add.w	r0, r3, r0, lsl #2
  401792:	4b31      	ldr	r3, [pc, #196]	; (401858 <xTaskGenericCreate+0x1b0>)
  401794:	4798      	blx	r3
		taskEXIT_CRITICAL();
  401796:	4b31      	ldr	r3, [pc, #196]	; (40185c <xTaskGenericCreate+0x1b4>)
  401798:	4798      	blx	r3
		if( xSchedulerRunning != pdFALSE )
  40179a:	4b2a      	ldr	r3, [pc, #168]	; (401844 <xTaskGenericCreate+0x19c>)
  40179c:	681b      	ldr	r3, [r3, #0]
  40179e:	2b00      	cmp	r3, #0
  4017a0:	d03d      	beq.n	40181e <xTaskGenericCreate+0x176>
			if( pxCurrentTCB->uxPriority < uxPriority )
  4017a2:	4b27      	ldr	r3, [pc, #156]	; (401840 <xTaskGenericCreate+0x198>)
  4017a4:	681b      	ldr	r3, [r3, #0]
  4017a6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
  4017a8:	459a      	cmp	sl, r3
  4017aa:	d834      	bhi.n	401816 <xTaskGenericCreate+0x16e>
  4017ac:	2001      	movs	r0, #1
	return xReturn;
  4017ae:	e037      	b.n	401820 <xTaskGenericCreate+0x178>
		pxNewTCB->pxStack = ( portSTACK_TYPE * ) pvPortMallocAligned( ( ( ( size_t )usStackDepth ) * sizeof( portSTACK_TYPE ) ), puxStackBuffer );
  4017b0:	00a8      	lsls	r0, r5, #2
  4017b2:	4b1d      	ldr	r3, [pc, #116]	; (401828 <xTaskGenericCreate+0x180>)
  4017b4:	4798      	blx	r3
  4017b6:	4607      	mov	r7, r0
  4017b8:	6320      	str	r0, [r4, #48]	; 0x30
		if( pxNewTCB->pxStack == NULL )
  4017ba:	2800      	cmp	r0, #0
  4017bc:	d189      	bne.n	4016d2 <xTaskGenericCreate+0x2a>
			vPortFree( pxNewTCB );
  4017be:	4620      	mov	r0, r4
  4017c0:	4b27      	ldr	r3, [pc, #156]	; (401860 <xTaskGenericCreate+0x1b8>)
  4017c2:	4798      	blx	r3
		xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
  4017c4:	f04f 30ff 	mov.w	r0, #4294967295
  4017c8:	e02a      	b.n	401820 <xTaskGenericCreate+0x178>
				pxCurrentTCB =  pxNewTCB;
  4017ca:	4b1d      	ldr	r3, [pc, #116]	; (401840 <xTaskGenericCreate+0x198>)
  4017cc:	601c      	str	r4, [r3, #0]
				if( uxCurrentNumberOfTasks == ( unsigned portBASE_TYPE ) 1 )
  4017ce:	6813      	ldr	r3, [r2, #0]
  4017d0:	2b01      	cmp	r3, #1
  4017d2:	d1c6      	bne.n	401762 <xTaskGenericCreate+0xba>
		vListInitialise( ( xList * ) &( pxReadyTasksLists[ uxPriority ] ) );
  4017d4:	4e1f      	ldr	r6, [pc, #124]	; (401854 <xTaskGenericCreate+0x1ac>)
  4017d6:	4630      	mov	r0, r6
  4017d8:	4d22      	ldr	r5, [pc, #136]	; (401864 <xTaskGenericCreate+0x1bc>)
  4017da:	47a8      	blx	r5
  4017dc:	f106 0014 	add.w	r0, r6, #20
  4017e0:	47a8      	blx	r5
  4017e2:	f106 0028 	add.w	r0, r6, #40	; 0x28
  4017e6:	47a8      	blx	r5
  4017e8:	f106 003c 	add.w	r0, r6, #60	; 0x3c
  4017ec:	47a8      	blx	r5
  4017ee:	f106 0050 	add.w	r0, r6, #80	; 0x50
  4017f2:	47a8      	blx	r5
	vListInitialise( ( xList * ) &xDelayedTaskList1 );
  4017f4:	f8df 808c 	ldr.w	r8, [pc, #140]	; 401884 <xTaskGenericCreate+0x1dc>
  4017f8:	4640      	mov	r0, r8
  4017fa:	47a8      	blx	r5
	vListInitialise( ( xList * ) &xDelayedTaskList2 );
  4017fc:	4e1a      	ldr	r6, [pc, #104]	; (401868 <xTaskGenericCreate+0x1c0>)
  4017fe:	4630      	mov	r0, r6
  401800:	47a8      	blx	r5
	vListInitialise( ( xList * ) &xPendingReadyList );
  401802:	481a      	ldr	r0, [pc, #104]	; (40186c <xTaskGenericCreate+0x1c4>)
  401804:	47a8      	blx	r5
		vListInitialise( ( xList * ) &xSuspendedTaskList );
  401806:	481a      	ldr	r0, [pc, #104]	; (401870 <xTaskGenericCreate+0x1c8>)
  401808:	47a8      	blx	r5
	pxDelayedTaskList = &xDelayedTaskList1;
  40180a:	4b1a      	ldr	r3, [pc, #104]	; (401874 <xTaskGenericCreate+0x1cc>)
  40180c:	f8c3 8000 	str.w	r8, [r3]
	pxOverflowDelayedTaskList = &xDelayedTaskList2;
  401810:	4b19      	ldr	r3, [pc, #100]	; (401878 <xTaskGenericCreate+0x1d0>)
  401812:	601e      	str	r6, [r3, #0]
  401814:	e7a5      	b.n	401762 <xTaskGenericCreate+0xba>
				portYIELD_WITHIN_API();
  401816:	4b19      	ldr	r3, [pc, #100]	; (40187c <xTaskGenericCreate+0x1d4>)
  401818:	4798      	blx	r3
  40181a:	2001      	movs	r0, #1
  40181c:	e000      	b.n	401820 <xTaskGenericCreate+0x178>
  40181e:	2001      	movs	r0, #1
}
  401820:	b003      	add	sp, #12
  401822:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  401826:	bf00      	nop
  401828:	004014f5 	.word	0x004014f5
  40182c:	00402929 	.word	0x00402929
  401830:	00402cf1 	.word	0x00402cf1
  401834:	004013d3 	.word	0x004013d3
  401838:	0040146d 	.word	0x0040146d
  40183c:	20000d4c 	.word	0x20000d4c
  401840:	20000cdc 	.word	0x20000cdc
  401844:	20000da8 	.word	0x20000da8
  401848:	20000d60 	.word	0x20000d60
  40184c:	20000d58 	.word	0x20000d58
  401850:	20000d5c 	.word	0x20000d5c
  401854:	20000ce8 	.word	0x20000ce8
  401858:	00401359 	.word	0x00401359
  40185c:	00401485 	.word	0x00401485
  401860:	00401519 	.word	0x00401519
  401864:	0040133d 	.word	0x0040133d
  401868:	20000d78 	.word	0x20000d78
  40186c:	20000d94 	.word	0x20000d94
  401870:	20000dac 	.word	0x20000dac
  401874:	20000ce0 	.word	0x20000ce0
  401878:	20000ce4 	.word	0x20000ce4
  40187c:	0040145d 	.word	0x0040145d
  401880:	00401353 	.word	0x00401353
  401884:	20000d64 	.word	0x20000d64

00401888 <vTaskStartScheduler>:
{
  401888:	b510      	push	{r4, lr}
  40188a:	b084      	sub	sp, #16
	xReturn = xTaskCreate( prvIdleTask, ( signed char * ) "IDLE", tskIDLE_STACK_SIZE, ( void * ) NULL, ( tskIDLE_PRIORITY | portPRIVILEGE_BIT ), ( xTaskHandle * ) NULL );
  40188c:	2300      	movs	r3, #0
  40188e:	9303      	str	r3, [sp, #12]
  401890:	9302      	str	r3, [sp, #8]
  401892:	9301      	str	r3, [sp, #4]
  401894:	9300      	str	r3, [sp, #0]
  401896:	2246      	movs	r2, #70	; 0x46
  401898:	490a      	ldr	r1, [pc, #40]	; (4018c4 <vTaskStartScheduler+0x3c>)
  40189a:	480b      	ldr	r0, [pc, #44]	; (4018c8 <vTaskStartScheduler+0x40>)
  40189c:	4c0b      	ldr	r4, [pc, #44]	; (4018cc <vTaskStartScheduler+0x44>)
  40189e:	47a0      	blx	r4
	if( xReturn == pdPASS )
  4018a0:	2801      	cmp	r0, #1
  4018a2:	d001      	beq.n	4018a8 <vTaskStartScheduler+0x20>
}
  4018a4:	b004      	add	sp, #16
  4018a6:	bd10      	pop	{r4, pc}
		portDISABLE_INTERRUPTS();
  4018a8:	f04f 0050 	mov.w	r0, #80	; 0x50
  4018ac:	f380 8811 	msr	BASEPRI, r0
		xSchedulerRunning = pdTRUE;
  4018b0:	2201      	movs	r2, #1
  4018b2:	4b07      	ldr	r3, [pc, #28]	; (4018d0 <vTaskStartScheduler+0x48>)
  4018b4:	601a      	str	r2, [r3, #0]
		xTickCount = ( portTickType ) 0;
  4018b6:	2200      	movs	r2, #0
  4018b8:	4b06      	ldr	r3, [pc, #24]	; (4018d4 <vTaskStartScheduler+0x4c>)
  4018ba:	601a      	str	r2, [r3, #0]
		if( xPortStartScheduler() )
  4018bc:	4b06      	ldr	r3, [pc, #24]	; (4018d8 <vTaskStartScheduler+0x50>)
  4018be:	4798      	blx	r3
}
  4018c0:	e7f0      	b.n	4018a4 <vTaskStartScheduler+0x1c>
  4018c2:	bf00      	nop
  4018c4:	00408d90 	.word	0x00408d90
  4018c8:	00401601 	.word	0x00401601
  4018cc:	004016a9 	.word	0x004016a9
  4018d0:	20000da8 	.word	0x20000da8
  4018d4:	20000dc0 	.word	0x20000dc0
  4018d8:	0040141d 	.word	0x0040141d

004018dc <vTaskSuspendAll>:
	++uxSchedulerSuspended;
  4018dc:	4a02      	ldr	r2, [pc, #8]	; (4018e8 <vTaskSuspendAll+0xc>)
  4018de:	6813      	ldr	r3, [r2, #0]
  4018e0:	3301      	adds	r3, #1
  4018e2:	6013      	str	r3, [r2, #0]
  4018e4:	4770      	bx	lr
  4018e6:	bf00      	nop
  4018e8:	20000d54 	.word	0x20000d54

004018ec <uxTaskGetNumberOfTasks>:
	return uxCurrentNumberOfTasks;
  4018ec:	4b01      	ldr	r3, [pc, #4]	; (4018f4 <uxTaskGetNumberOfTasks+0x8>)
  4018ee:	6818      	ldr	r0, [r3, #0]
}
  4018f0:	4770      	bx	lr
  4018f2:	bf00      	nop
  4018f4:	20000d4c 	.word	0x20000d4c

004018f8 <vTaskIncrementTick>:
{
  4018f8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
	if( uxSchedulerSuspended == ( unsigned portBASE_TYPE ) pdFALSE )
  4018fc:	4b3a      	ldr	r3, [pc, #232]	; (4019e8 <vTaskIncrementTick+0xf0>)
  4018fe:	681b      	ldr	r3, [r3, #0]
  401900:	2b00      	cmp	r3, #0
  401902:	d162      	bne.n	4019ca <vTaskIncrementTick+0xd2>
		++xTickCount;
  401904:	4b39      	ldr	r3, [pc, #228]	; (4019ec <vTaskIncrementTick+0xf4>)
  401906:	681a      	ldr	r2, [r3, #0]
  401908:	3201      	adds	r2, #1
  40190a:	601a      	str	r2, [r3, #0]
		if( xTickCount == ( portTickType ) 0 )
  40190c:	681b      	ldr	r3, [r3, #0]
  40190e:	b983      	cbnz	r3, 401932 <vTaskIncrementTick+0x3a>
			pxTemp = pxDelayedTaskList;
  401910:	4b37      	ldr	r3, [pc, #220]	; (4019f0 <vTaskIncrementTick+0xf8>)
  401912:	6819      	ldr	r1, [r3, #0]
			pxDelayedTaskList = pxOverflowDelayedTaskList;
  401914:	4a37      	ldr	r2, [pc, #220]	; (4019f4 <vTaskIncrementTick+0xfc>)
  401916:	6810      	ldr	r0, [r2, #0]
  401918:	6018      	str	r0, [r3, #0]
			pxOverflowDelayedTaskList = pxTemp;
  40191a:	6011      	str	r1, [r2, #0]
			xNumOfOverflows++;
  40191c:	4936      	ldr	r1, [pc, #216]	; (4019f8 <vTaskIncrementTick+0x100>)
  40191e:	680a      	ldr	r2, [r1, #0]
  401920:	3201      	adds	r2, #1
  401922:	600a      	str	r2, [r1, #0]
			if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
  401924:	681b      	ldr	r3, [r3, #0]
  401926:	681b      	ldr	r3, [r3, #0]
  401928:	b9db      	cbnz	r3, 401962 <vTaskIncrementTick+0x6a>
				xNextTaskUnblockTime = portMAX_DELAY;
  40192a:	f04f 32ff 	mov.w	r2, #4294967295
  40192e:	4b33      	ldr	r3, [pc, #204]	; (4019fc <vTaskIncrementTick+0x104>)
  401930:	601a      	str	r2, [r3, #0]
		prvCheckDelayedTasks();
  401932:	4b2e      	ldr	r3, [pc, #184]	; (4019ec <vTaskIncrementTick+0xf4>)
  401934:	681a      	ldr	r2, [r3, #0]
  401936:	4b31      	ldr	r3, [pc, #196]	; (4019fc <vTaskIncrementTick+0x104>)
  401938:	681b      	ldr	r3, [r3, #0]
  40193a:	429a      	cmp	r2, r3
  40193c:	d34b      	bcc.n	4019d6 <vTaskIncrementTick+0xde>
  40193e:	4b2c      	ldr	r3, [pc, #176]	; (4019f0 <vTaskIncrementTick+0xf8>)
  401940:	681b      	ldr	r3, [r3, #0]
  401942:	681b      	ldr	r3, [r3, #0]
  401944:	b1ab      	cbz	r3, 401972 <vTaskIncrementTick+0x7a>
  401946:	4b2a      	ldr	r3, [pc, #168]	; (4019f0 <vTaskIncrementTick+0xf8>)
  401948:	681b      	ldr	r3, [r3, #0]
  40194a:	68db      	ldr	r3, [r3, #12]
  40194c:	68dc      	ldr	r4, [r3, #12]
  40194e:	6863      	ldr	r3, [r4, #4]
  401950:	4a26      	ldr	r2, [pc, #152]	; (4019ec <vTaskIncrementTick+0xf4>)
  401952:	6812      	ldr	r2, [r2, #0]
  401954:	4293      	cmp	r3, r2
  401956:	d811      	bhi.n	40197c <vTaskIncrementTick+0x84>
  401958:	4e29      	ldr	r6, [pc, #164]	; (401a00 <vTaskIncrementTick+0x108>)
  40195a:	4f2a      	ldr	r7, [pc, #168]	; (401a04 <vTaskIncrementTick+0x10c>)
  40195c:	f8df 80b4 	ldr.w	r8, [pc, #180]	; 401a14 <vTaskIncrementTick+0x11c>
  401960:	e02c      	b.n	4019bc <vTaskIncrementTick+0xc4>
				pxTCB = ( tskTCB * ) listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList );
  401962:	4b23      	ldr	r3, [pc, #140]	; (4019f0 <vTaskIncrementTick+0xf8>)
  401964:	681b      	ldr	r3, [r3, #0]
  401966:	68db      	ldr	r3, [r3, #12]
  401968:	68db      	ldr	r3, [r3, #12]
				xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( pxTCB->xGenericListItem ) );
  40196a:	685a      	ldr	r2, [r3, #4]
  40196c:	4b23      	ldr	r3, [pc, #140]	; (4019fc <vTaskIncrementTick+0x104>)
  40196e:	601a      	str	r2, [r3, #0]
  401970:	e7df      	b.n	401932 <vTaskIncrementTick+0x3a>
		prvCheckDelayedTasks();
  401972:	f04f 32ff 	mov.w	r2, #4294967295
  401976:	4b21      	ldr	r3, [pc, #132]	; (4019fc <vTaskIncrementTick+0x104>)
  401978:	601a      	str	r2, [r3, #0]
  40197a:	e02c      	b.n	4019d6 <vTaskIncrementTick+0xde>
  40197c:	4a1f      	ldr	r2, [pc, #124]	; (4019fc <vTaskIncrementTick+0x104>)
  40197e:	6013      	str	r3, [r2, #0]
  401980:	e029      	b.n	4019d6 <vTaskIncrementTick+0xde>
  401982:	f104 0018 	add.w	r0, r4, #24
  401986:	47b0      	blx	r6
  401988:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
  40198a:	683b      	ldr	r3, [r7, #0]
  40198c:	4298      	cmp	r0, r3
  40198e:	bf88      	it	hi
  401990:	6038      	strhi	r0, [r7, #0]
  401992:	eb00 0080 	add.w	r0, r0, r0, lsl #2
  401996:	4629      	mov	r1, r5
  401998:	eb08 0080 	add.w	r0, r8, r0, lsl #2
  40199c:	4b1a      	ldr	r3, [pc, #104]	; (401a08 <vTaskIncrementTick+0x110>)
  40199e:	4798      	blx	r3
  4019a0:	4b13      	ldr	r3, [pc, #76]	; (4019f0 <vTaskIncrementTick+0xf8>)
  4019a2:	681b      	ldr	r3, [r3, #0]
  4019a4:	681b      	ldr	r3, [r3, #0]
  4019a6:	2b00      	cmp	r3, #0
  4019a8:	d0e3      	beq.n	401972 <vTaskIncrementTick+0x7a>
  4019aa:	4b11      	ldr	r3, [pc, #68]	; (4019f0 <vTaskIncrementTick+0xf8>)
  4019ac:	681b      	ldr	r3, [r3, #0]
  4019ae:	68db      	ldr	r3, [r3, #12]
  4019b0:	68dc      	ldr	r4, [r3, #12]
  4019b2:	6863      	ldr	r3, [r4, #4]
  4019b4:	4a0d      	ldr	r2, [pc, #52]	; (4019ec <vTaskIncrementTick+0xf4>)
  4019b6:	6812      	ldr	r2, [r2, #0]
  4019b8:	4293      	cmp	r3, r2
  4019ba:	d8df      	bhi.n	40197c <vTaskIncrementTick+0x84>
  4019bc:	1d25      	adds	r5, r4, #4
  4019be:	4628      	mov	r0, r5
  4019c0:	47b0      	blx	r6
  4019c2:	6aa3      	ldr	r3, [r4, #40]	; 0x28
  4019c4:	2b00      	cmp	r3, #0
  4019c6:	d1dc      	bne.n	401982 <vTaskIncrementTick+0x8a>
  4019c8:	e7de      	b.n	401988 <vTaskIncrementTick+0x90>
		++uxMissedTicks;
  4019ca:	4a10      	ldr	r2, [pc, #64]	; (401a0c <vTaskIncrementTick+0x114>)
  4019cc:	6813      	ldr	r3, [r2, #0]
  4019ce:	3301      	adds	r3, #1
  4019d0:	6013      	str	r3, [r2, #0]
			vApplicationTickHook();
  4019d2:	4b0f      	ldr	r3, [pc, #60]	; (401a10 <vTaskIncrementTick+0x118>)
  4019d4:	4798      	blx	r3
		if( uxMissedTicks == ( unsigned portBASE_TYPE ) 0U )
  4019d6:	4b0d      	ldr	r3, [pc, #52]	; (401a0c <vTaskIncrementTick+0x114>)
  4019d8:	681b      	ldr	r3, [r3, #0]
  4019da:	b10b      	cbz	r3, 4019e0 <vTaskIncrementTick+0xe8>
  4019dc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
			vApplicationTickHook();
  4019e0:	4b0b      	ldr	r3, [pc, #44]	; (401a10 <vTaskIncrementTick+0x118>)
  4019e2:	4798      	blx	r3
}
  4019e4:	e7fa      	b.n	4019dc <vTaskIncrementTick+0xe4>
  4019e6:	bf00      	nop
  4019e8:	20000d54 	.word	0x20000d54
  4019ec:	20000dc0 	.word	0x20000dc0
  4019f0:	20000ce0 	.word	0x20000ce0
  4019f4:	20000ce4 	.word	0x20000ce4
  4019f8:	20000d90 	.word	0x20000d90
  4019fc:	200000fc 	.word	0x200000fc
  401a00:	004013af 	.word	0x004013af
  401a04:	20000d5c 	.word	0x20000d5c
  401a08:	00401359 	.word	0x00401359
  401a0c:	20000d50 	.word	0x20000d50
  401a10:	0040200f 	.word	0x0040200f
  401a14:	20000ce8 	.word	0x20000ce8

00401a18 <xTaskResumeAll>:
{
  401a18:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
	taskENTER_CRITICAL();
  401a1c:	4b2b      	ldr	r3, [pc, #172]	; (401acc <xTaskResumeAll+0xb4>)
  401a1e:	4798      	blx	r3
		--uxSchedulerSuspended;
  401a20:	4b2b      	ldr	r3, [pc, #172]	; (401ad0 <xTaskResumeAll+0xb8>)
  401a22:	681a      	ldr	r2, [r3, #0]
  401a24:	3a01      	subs	r2, #1
  401a26:	601a      	str	r2, [r3, #0]
		if( uxSchedulerSuspended == ( unsigned portBASE_TYPE ) pdFALSE )
  401a28:	681b      	ldr	r3, [r3, #0]
  401a2a:	2b00      	cmp	r3, #0
  401a2c:	d148      	bne.n	401ac0 <xTaskResumeAll+0xa8>
			if( uxCurrentNumberOfTasks > ( unsigned portBASE_TYPE ) 0 )
  401a2e:	4b29      	ldr	r3, [pc, #164]	; (401ad4 <xTaskResumeAll+0xbc>)
  401a30:	681b      	ldr	r3, [r3, #0]
  401a32:	b133      	cbz	r3, 401a42 <xTaskResumeAll+0x2a>
  401a34:	2600      	movs	r6, #0
				while( listLIST_IS_EMPTY( ( xList * ) &xPendingReadyList ) == pdFALSE )
  401a36:	4f28      	ldr	r7, [pc, #160]	; (401ad8 <xTaskResumeAll+0xc0>)
					vListRemove( &( pxTCB->xEventListItem ) );
  401a38:	f8df 80c0 	ldr.w	r8, [pc, #192]	; 401afc <xTaskResumeAll+0xe4>
					prvAddTaskToReadyQueue( pxTCB );
  401a3c:	f8df 90c0 	ldr.w	r9, [pc, #192]	; 401b00 <xTaskResumeAll+0xe8>
  401a40:	e01f      	b.n	401a82 <xTaskResumeAll+0x6a>
signed portBASE_TYPE xAlreadyYielded = pdFALSE;
  401a42:	2600      	movs	r6, #0
  401a44:	e03d      	b.n	401ac2 <xTaskResumeAll+0xaa>
					pxTCB = ( tskTCB * ) listGET_OWNER_OF_HEAD_ENTRY(  ( ( xList * ) &xPendingReadyList ) );
  401a46:	68fb      	ldr	r3, [r7, #12]
  401a48:	68dc      	ldr	r4, [r3, #12]
					vListRemove( &( pxTCB->xEventListItem ) );
  401a4a:	f104 0018 	add.w	r0, r4, #24
  401a4e:	47c0      	blx	r8
					vListRemove( &( pxTCB->xGenericListItem ) );
  401a50:	1d25      	adds	r5, r4, #4
  401a52:	4628      	mov	r0, r5
  401a54:	47c0      	blx	r8
					prvAddTaskToReadyQueue( pxTCB );
  401a56:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
  401a58:	f8d9 3000 	ldr.w	r3, [r9]
  401a5c:	4298      	cmp	r0, r3
  401a5e:	bf88      	it	hi
  401a60:	f8c9 0000 	strhi.w	r0, [r9]
  401a64:	eb00 0080 	add.w	r0, r0, r0, lsl #2
  401a68:	4629      	mov	r1, r5
  401a6a:	4b1c      	ldr	r3, [pc, #112]	; (401adc <xTaskResumeAll+0xc4>)
  401a6c:	eb03 0080 	add.w	r0, r3, r0, lsl #2
  401a70:	4b1b      	ldr	r3, [pc, #108]	; (401ae0 <xTaskResumeAll+0xc8>)
  401a72:	4798      	blx	r3
					if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
  401a74:	4b1b      	ldr	r3, [pc, #108]	; (401ae4 <xTaskResumeAll+0xcc>)
  401a76:	681b      	ldr	r3, [r3, #0]
  401a78:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
  401a7a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
						xYieldRequired = pdTRUE;
  401a7c:	429a      	cmp	r2, r3
  401a7e:	bf28      	it	cs
  401a80:	2601      	movcs	r6, #1
				while( listLIST_IS_EMPTY( ( xList * ) &xPendingReadyList ) == pdFALSE )
  401a82:	683b      	ldr	r3, [r7, #0]
  401a84:	2b00      	cmp	r3, #0
  401a86:	d1de      	bne.n	401a46 <xTaskResumeAll+0x2e>
				if( uxMissedTicks > ( unsigned portBASE_TYPE ) 0 )
  401a88:	4b17      	ldr	r3, [pc, #92]	; (401ae8 <xTaskResumeAll+0xd0>)
  401a8a:	681b      	ldr	r3, [r3, #0]
  401a8c:	b15b      	cbz	r3, 401aa6 <xTaskResumeAll+0x8e>
					while( uxMissedTicks > ( unsigned portBASE_TYPE ) 0 )
  401a8e:	4b16      	ldr	r3, [pc, #88]	; (401ae8 <xTaskResumeAll+0xd0>)
  401a90:	681b      	ldr	r3, [r3, #0]
  401a92:	b143      	cbz	r3, 401aa6 <xTaskResumeAll+0x8e>
						vTaskIncrementTick();
  401a94:	4d15      	ldr	r5, [pc, #84]	; (401aec <xTaskResumeAll+0xd4>)
						--uxMissedTicks;
  401a96:	4c14      	ldr	r4, [pc, #80]	; (401ae8 <xTaskResumeAll+0xd0>)
						vTaskIncrementTick();
  401a98:	47a8      	blx	r5
						--uxMissedTicks;
  401a9a:	6823      	ldr	r3, [r4, #0]
  401a9c:	3b01      	subs	r3, #1
  401a9e:	6023      	str	r3, [r4, #0]
					while( uxMissedTicks > ( unsigned portBASE_TYPE ) 0 )
  401aa0:	6823      	ldr	r3, [r4, #0]
  401aa2:	2b00      	cmp	r3, #0
  401aa4:	d1f8      	bne.n	401a98 <xTaskResumeAll+0x80>
				if( ( xYieldRequired == pdTRUE ) || ( xMissedYield == pdTRUE ) )
  401aa6:	2e01      	cmp	r6, #1
  401aa8:	d003      	beq.n	401ab2 <xTaskResumeAll+0x9a>
  401aaa:	4b11      	ldr	r3, [pc, #68]	; (401af0 <xTaskResumeAll+0xd8>)
  401aac:	681b      	ldr	r3, [r3, #0]
  401aae:	2b01      	cmp	r3, #1
  401ab0:	d107      	bne.n	401ac2 <xTaskResumeAll+0xaa>
					xMissedYield = pdFALSE;
  401ab2:	2200      	movs	r2, #0
  401ab4:	4b0e      	ldr	r3, [pc, #56]	; (401af0 <xTaskResumeAll+0xd8>)
  401ab6:	601a      	str	r2, [r3, #0]
					portYIELD_WITHIN_API();
  401ab8:	4b0e      	ldr	r3, [pc, #56]	; (401af4 <xTaskResumeAll+0xdc>)
  401aba:	4798      	blx	r3
					xAlreadyYielded = pdTRUE;
  401abc:	2601      	movs	r6, #1
  401abe:	e000      	b.n	401ac2 <xTaskResumeAll+0xaa>
signed portBASE_TYPE xAlreadyYielded = pdFALSE;
  401ac0:	2600      	movs	r6, #0
	taskEXIT_CRITICAL();
  401ac2:	4b0d      	ldr	r3, [pc, #52]	; (401af8 <xTaskResumeAll+0xe0>)
  401ac4:	4798      	blx	r3
}
  401ac6:	4630      	mov	r0, r6
  401ac8:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  401acc:	0040146d 	.word	0x0040146d
  401ad0:	20000d54 	.word	0x20000d54
  401ad4:	20000d4c 	.word	0x20000d4c
  401ad8:	20000d94 	.word	0x20000d94
  401adc:	20000ce8 	.word	0x20000ce8
  401ae0:	00401359 	.word	0x00401359
  401ae4:	20000cdc 	.word	0x20000cdc
  401ae8:	20000d50 	.word	0x20000d50
  401aec:	004018f9 	.word	0x004018f9
  401af0:	20000d8c 	.word	0x20000d8c
  401af4:	0040145d 	.word	0x0040145d
  401af8:	00401485 	.word	0x00401485
  401afc:	004013af 	.word	0x004013af
  401b00:	20000d5c 	.word	0x20000d5c

00401b04 <vTaskDelay>:
	{
  401b04:	b510      	push	{r4, lr}
		if( xTicksToDelay > ( portTickType ) 0 )
  401b06:	b910      	cbnz	r0, 401b0e <vTaskDelay+0xa>
			portYIELD_WITHIN_API();
  401b08:	4b0a      	ldr	r3, [pc, #40]	; (401b34 <vTaskDelay+0x30>)
  401b0a:	4798      	blx	r3
  401b0c:	bd10      	pop	{r4, pc}
  401b0e:	4604      	mov	r4, r0
			vTaskSuspendAll();
  401b10:	4b09      	ldr	r3, [pc, #36]	; (401b38 <vTaskDelay+0x34>)
  401b12:	4798      	blx	r3
				xTimeToWake = xTickCount + xTicksToDelay;
  401b14:	4b09      	ldr	r3, [pc, #36]	; (401b3c <vTaskDelay+0x38>)
  401b16:	681b      	ldr	r3, [r3, #0]
  401b18:	441c      	add	r4, r3
				vListRemove( ( xListItem * ) &( pxCurrentTCB->xGenericListItem ) );
  401b1a:	4b09      	ldr	r3, [pc, #36]	; (401b40 <vTaskDelay+0x3c>)
  401b1c:	6818      	ldr	r0, [r3, #0]
  401b1e:	3004      	adds	r0, #4
  401b20:	4b08      	ldr	r3, [pc, #32]	; (401b44 <vTaskDelay+0x40>)
  401b22:	4798      	blx	r3
				prvAddCurrentTaskToDelayedList( xTimeToWake );
  401b24:	4620      	mov	r0, r4
  401b26:	4b08      	ldr	r3, [pc, #32]	; (401b48 <vTaskDelay+0x44>)
  401b28:	4798      	blx	r3
			xAlreadyYielded = xTaskResumeAll();
  401b2a:	4b08      	ldr	r3, [pc, #32]	; (401b4c <vTaskDelay+0x48>)
  401b2c:	4798      	blx	r3
		if( !xAlreadyYielded )
  401b2e:	2800      	cmp	r0, #0
  401b30:	d1ec      	bne.n	401b0c <vTaskDelay+0x8>
  401b32:	e7e9      	b.n	401b08 <vTaskDelay+0x4>
  401b34:	0040145d 	.word	0x0040145d
  401b38:	004018dd 	.word	0x004018dd
  401b3c:	20000dc0 	.word	0x20000dc0
  401b40:	20000cdc 	.word	0x20000cdc
  401b44:	004013af 	.word	0x004013af
  401b48:	004015a9 	.word	0x004015a9
  401b4c:	00401a19 	.word	0x00401a19

00401b50 <vTaskList>:
	{
  401b50:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
  401b54:	4606      	mov	r6, r0
		vTaskSuspendAll();
  401b56:	4b26      	ldr	r3, [pc, #152]	; (401bf0 <vTaskList+0xa0>)
  401b58:	4798      	blx	r3
			*pcWriteBuffer = ( signed char ) 0x00;
  401b5a:	2300      	movs	r3, #0
  401b5c:	7033      	strb	r3, [r6, #0]
			strcat( ( char * ) pcWriteBuffer, ( const char * ) "\r\n" );
  401b5e:	4630      	mov	r0, r6
  401b60:	4b24      	ldr	r3, [pc, #144]	; (401bf4 <vTaskList+0xa4>)
  401b62:	4798      	blx	r3
  401b64:	1832      	adds	r2, r6, r0
  401b66:	4b24      	ldr	r3, [pc, #144]	; (401bf8 <vTaskList+0xa8>)
  401b68:	8819      	ldrh	r1, [r3, #0]
  401b6a:	789b      	ldrb	r3, [r3, #2]
  401b6c:	5231      	strh	r1, [r6, r0]
  401b6e:	7093      	strb	r3, [r2, #2]
			uxQueue = uxTopUsedPriority + ( unsigned portBASE_TYPE ) 1U;
  401b70:	4b22      	ldr	r3, [pc, #136]	; (401bfc <vTaskList+0xac>)
  401b72:	681c      	ldr	r4, [r3, #0]
  401b74:	3401      	adds	r4, #1
  401b76:	eb04 0384 	add.w	r3, r4, r4, lsl #2
  401b7a:	4d21      	ldr	r5, [pc, #132]	; (401c00 <vTaskList+0xb0>)
  401b7c:	eb05 0583 	add.w	r5, r5, r3, lsl #2
  401b80:	3d14      	subs	r5, #20
				if( listLIST_IS_EMPTY( &( pxReadyTasksLists[ uxQueue ] ) ) == pdFALSE )
  401b82:	4f1f      	ldr	r7, [pc, #124]	; (401c00 <vTaskList+0xb0>)
					prvListTaskWithinSingleList( pcWriteBuffer, ( xList * ) &( pxReadyTasksLists[ uxQueue ] ), tskREADY_CHAR );
  401b84:	f04f 0952 	mov.w	r9, #82	; 0x52
  401b88:	f8df 8088 	ldr.w	r8, [pc, #136]	; 401c14 <vTaskList+0xc4>
  401b8c:	e001      	b.n	401b92 <vTaskList+0x42>
  401b8e:	3d14      	subs	r5, #20
			}while( uxQueue > ( unsigned short ) tskIDLE_PRIORITY );
  401b90:	b15c      	cbz	r4, 401baa <vTaskList+0x5a>
				uxQueue--;
  401b92:	3c01      	subs	r4, #1
				if( listLIST_IS_EMPTY( &( pxReadyTasksLists[ uxQueue ] ) ) == pdFALSE )
  401b94:	eb04 0384 	add.w	r3, r4, r4, lsl #2
  401b98:	f857 3023 	ldr.w	r3, [r7, r3, lsl #2]
  401b9c:	2b00      	cmp	r3, #0
  401b9e:	d0f6      	beq.n	401b8e <vTaskList+0x3e>
					prvListTaskWithinSingleList( pcWriteBuffer, ( xList * ) &( pxReadyTasksLists[ uxQueue ] ), tskREADY_CHAR );
  401ba0:	464a      	mov	r2, r9
  401ba2:	4629      	mov	r1, r5
  401ba4:	4630      	mov	r0, r6
  401ba6:	47c0      	blx	r8
  401ba8:	e7f1      	b.n	401b8e <vTaskList+0x3e>
			if( listLIST_IS_EMPTY( pxDelayedTaskList ) == pdFALSE )
  401baa:	4b16      	ldr	r3, [pc, #88]	; (401c04 <vTaskList+0xb4>)
  401bac:	681b      	ldr	r3, [r3, #0]
  401bae:	681b      	ldr	r3, [r3, #0]
  401bb0:	b953      	cbnz	r3, 401bc8 <vTaskList+0x78>
			if( listLIST_IS_EMPTY( pxOverflowDelayedTaskList ) == pdFALSE )
  401bb2:	4b15      	ldr	r3, [pc, #84]	; (401c08 <vTaskList+0xb8>)
  401bb4:	681b      	ldr	r3, [r3, #0]
  401bb6:	681b      	ldr	r3, [r3, #0]
  401bb8:	b96b      	cbnz	r3, 401bd6 <vTaskList+0x86>
				if( listLIST_IS_EMPTY( &xSuspendedTaskList ) == pdFALSE )
  401bba:	4b14      	ldr	r3, [pc, #80]	; (401c0c <vTaskList+0xbc>)
  401bbc:	681b      	ldr	r3, [r3, #0]
  401bbe:	b98b      	cbnz	r3, 401be4 <vTaskList+0x94>
		xTaskResumeAll();
  401bc0:	4b13      	ldr	r3, [pc, #76]	; (401c10 <vTaskList+0xc0>)
  401bc2:	4798      	blx	r3
  401bc4:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
				prvListTaskWithinSingleList( pcWriteBuffer, ( xList * ) pxDelayedTaskList, tskBLOCKED_CHAR );
  401bc8:	4b0e      	ldr	r3, [pc, #56]	; (401c04 <vTaskList+0xb4>)
  401bca:	6819      	ldr	r1, [r3, #0]
  401bcc:	2242      	movs	r2, #66	; 0x42
  401bce:	4630      	mov	r0, r6
  401bd0:	4b10      	ldr	r3, [pc, #64]	; (401c14 <vTaskList+0xc4>)
  401bd2:	4798      	blx	r3
  401bd4:	e7ed      	b.n	401bb2 <vTaskList+0x62>
				prvListTaskWithinSingleList( pcWriteBuffer, ( xList * ) pxOverflowDelayedTaskList, tskBLOCKED_CHAR );
  401bd6:	4b0c      	ldr	r3, [pc, #48]	; (401c08 <vTaskList+0xb8>)
  401bd8:	6819      	ldr	r1, [r3, #0]
  401bda:	2242      	movs	r2, #66	; 0x42
  401bdc:	4630      	mov	r0, r6
  401bde:	4b0d      	ldr	r3, [pc, #52]	; (401c14 <vTaskList+0xc4>)
  401be0:	4798      	blx	r3
  401be2:	e7ea      	b.n	401bba <vTaskList+0x6a>
					prvListTaskWithinSingleList( pcWriteBuffer, ( xList * ) &xSuspendedTaskList, tskSUSPENDED_CHAR );
  401be4:	2253      	movs	r2, #83	; 0x53
  401be6:	4909      	ldr	r1, [pc, #36]	; (401c0c <vTaskList+0xbc>)
  401be8:	4630      	mov	r0, r6
  401bea:	4b0a      	ldr	r3, [pc, #40]	; (401c14 <vTaskList+0xc4>)
  401bec:	4798      	blx	r3
  401bee:	e7e7      	b.n	401bc0 <vTaskList+0x70>
  401bf0:	004018dd 	.word	0x004018dd
  401bf4:	00402c95 	.word	0x00402c95
  401bf8:	00408ed4 	.word	0x00408ed4
  401bfc:	20000d60 	.word	0x20000d60
  401c00:	20000ce8 	.word	0x20000ce8
  401c04:	20000ce0 	.word	0x20000ce0
  401c08:	20000ce4 	.word	0x20000ce4
  401c0c:	20000dac 	.word	0x20000dac
  401c10:	00401a19 	.word	0x00401a19
  401c14:	00401615 	.word	0x00401615

00401c18 <vTaskSwitchContext>:
	if( uxSchedulerSuspended != ( unsigned portBASE_TYPE ) pdFALSE )
  401c18:	4b40      	ldr	r3, [pc, #256]	; (401d1c <vTaskSwitchContext+0x104>)
  401c1a:	681b      	ldr	r3, [r3, #0]
  401c1c:	2b00      	cmp	r3, #0
  401c1e:	d151      	bne.n	401cc4 <vTaskSwitchContext+0xac>
{
  401c20:	b510      	push	{r4, lr}
		taskFIRST_CHECK_FOR_STACK_OVERFLOW();
  401c22:	4b3f      	ldr	r3, [pc, #252]	; (401d20 <vTaskSwitchContext+0x108>)
  401c24:	681a      	ldr	r2, [r3, #0]
  401c26:	681b      	ldr	r3, [r3, #0]
  401c28:	6812      	ldr	r2, [r2, #0]
  401c2a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
  401c2c:	429a      	cmp	r2, r3
  401c2e:	d94d      	bls.n	401ccc <vTaskSwitchContext+0xb4>
		taskSECOND_CHECK_FOR_STACK_OVERFLOW();
  401c30:	4b3b      	ldr	r3, [pc, #236]	; (401d20 <vTaskSwitchContext+0x108>)
  401c32:	681b      	ldr	r3, [r3, #0]
  401c34:	2214      	movs	r2, #20
  401c36:	493b      	ldr	r1, [pc, #236]	; (401d24 <vTaskSwitchContext+0x10c>)
  401c38:	6b18      	ldr	r0, [r3, #48]	; 0x30
  401c3a:	4b3b      	ldr	r3, [pc, #236]	; (401d28 <vTaskSwitchContext+0x110>)
  401c3c:	4798      	blx	r3
  401c3e:	2800      	cmp	r0, #0
  401c40:	d14b      	bne.n	401cda <vTaskSwitchContext+0xc2>
		while( listLIST_IS_EMPTY( &( pxReadyTasksLists[ uxTopReadyPriority ] ) ) )
  401c42:	4b3a      	ldr	r3, [pc, #232]	; (401d2c <vTaskSwitchContext+0x114>)
  401c44:	681b      	ldr	r3, [r3, #0]
  401c46:	eb03 0383 	add.w	r3, r3, r3, lsl #2
  401c4a:	009b      	lsls	r3, r3, #2
  401c4c:	4a38      	ldr	r2, [pc, #224]	; (401d30 <vTaskSwitchContext+0x118>)
  401c4e:	58d3      	ldr	r3, [r2, r3]
  401c50:	b95b      	cbnz	r3, 401c6a <vTaskSwitchContext+0x52>
			--uxTopReadyPriority;
  401c52:	4a36      	ldr	r2, [pc, #216]	; (401d2c <vTaskSwitchContext+0x114>)
		while( listLIST_IS_EMPTY( &( pxReadyTasksLists[ uxTopReadyPriority ] ) ) )
  401c54:	4936      	ldr	r1, [pc, #216]	; (401d30 <vTaskSwitchContext+0x118>)
			--uxTopReadyPriority;
  401c56:	6813      	ldr	r3, [r2, #0]
  401c58:	3b01      	subs	r3, #1
  401c5a:	6013      	str	r3, [r2, #0]
		while( listLIST_IS_EMPTY( &( pxReadyTasksLists[ uxTopReadyPriority ] ) ) )
  401c5c:	6813      	ldr	r3, [r2, #0]
  401c5e:	eb03 0383 	add.w	r3, r3, r3, lsl #2
  401c62:	f851 3023 	ldr.w	r3, [r1, r3, lsl #2]
  401c66:	2b00      	cmp	r3, #0
  401c68:	d0f5      	beq.n	401c56 <vTaskSwitchContext+0x3e>
		listGET_OWNER_OF_NEXT_ENTRY( pxCurrentTCB, &( pxReadyTasksLists[ uxTopReadyPriority ] ) );
  401c6a:	4b30      	ldr	r3, [pc, #192]	; (401d2c <vTaskSwitchContext+0x114>)
  401c6c:	681b      	ldr	r3, [r3, #0]
  401c6e:	4a30      	ldr	r2, [pc, #192]	; (401d30 <vTaskSwitchContext+0x118>)
  401c70:	0099      	lsls	r1, r3, #2
  401c72:	18c8      	adds	r0, r1, r3
  401c74:	eb02 0080 	add.w	r0, r2, r0, lsl #2
  401c78:	6844      	ldr	r4, [r0, #4]
  401c7a:	6864      	ldr	r4, [r4, #4]
  401c7c:	6044      	str	r4, [r0, #4]
  401c7e:	4419      	add	r1, r3
  401c80:	4602      	mov	r2, r0
  401c82:	3208      	adds	r2, #8
  401c84:	4294      	cmp	r4, r2
  401c86:	d02f      	beq.n	401ce8 <vTaskSwitchContext+0xd0>
  401c88:	eb03 0383 	add.w	r3, r3, r3, lsl #2
  401c8c:	4a28      	ldr	r2, [pc, #160]	; (401d30 <vTaskSwitchContext+0x118>)
  401c8e:	eb02 0383 	add.w	r3, r2, r3, lsl #2
  401c92:	685b      	ldr	r3, [r3, #4]
  401c94:	68da      	ldr	r2, [r3, #12]
  401c96:	4b22      	ldr	r3, [pc, #136]	; (401d20 <vTaskSwitchContext+0x108>)
  401c98:	601a      	str	r2, [r3, #0]
		vWriteTraceToBuffer();
  401c9a:	4b26      	ldr	r3, [pc, #152]	; (401d34 <vTaskSwitchContext+0x11c>)
  401c9c:	681b      	ldr	r3, [r3, #0]
  401c9e:	b183      	cbz	r3, 401cc2 <vTaskSwitchContext+0xaa>
  401ca0:	4b1f      	ldr	r3, [pc, #124]	; (401d20 <vTaskSwitchContext+0x108>)
  401ca2:	681b      	ldr	r3, [r3, #0]
  401ca4:	6c5a      	ldr	r2, [r3, #68]	; 0x44
  401ca6:	4b24      	ldr	r3, [pc, #144]	; (401d38 <vTaskSwitchContext+0x120>)
  401ca8:	681b      	ldr	r3, [r3, #0]
  401caa:	429a      	cmp	r2, r3
  401cac:	d009      	beq.n	401cc2 <vTaskSwitchContext+0xaa>
  401cae:	4b23      	ldr	r3, [pc, #140]	; (401d3c <vTaskSwitchContext+0x124>)
  401cb0:	681b      	ldr	r3, [r3, #0]
  401cb2:	3308      	adds	r3, #8
  401cb4:	4a22      	ldr	r2, [pc, #136]	; (401d40 <vTaskSwitchContext+0x128>)
  401cb6:	6812      	ldr	r2, [r2, #0]
  401cb8:	429a      	cmp	r2, r3
  401cba:	d81c      	bhi.n	401cf6 <vTaskSwitchContext+0xde>
  401cbc:	2200      	movs	r2, #0
  401cbe:	4b1d      	ldr	r3, [pc, #116]	; (401d34 <vTaskSwitchContext+0x11c>)
  401cc0:	601a      	str	r2, [r3, #0]
  401cc2:	bd10      	pop	{r4, pc}
		xMissedYield = pdTRUE;
  401cc4:	2201      	movs	r2, #1
  401cc6:	4b1f      	ldr	r3, [pc, #124]	; (401d44 <vTaskSwitchContext+0x12c>)
  401cc8:	601a      	str	r2, [r3, #0]
  401cca:	4770      	bx	lr
		taskFIRST_CHECK_FOR_STACK_OVERFLOW();
  401ccc:	4b14      	ldr	r3, [pc, #80]	; (401d20 <vTaskSwitchContext+0x108>)
  401cce:	6818      	ldr	r0, [r3, #0]
  401cd0:	6819      	ldr	r1, [r3, #0]
  401cd2:	3134      	adds	r1, #52	; 0x34
  401cd4:	4b1c      	ldr	r3, [pc, #112]	; (401d48 <vTaskSwitchContext+0x130>)
  401cd6:	4798      	blx	r3
  401cd8:	e7aa      	b.n	401c30 <vTaskSwitchContext+0x18>
		taskSECOND_CHECK_FOR_STACK_OVERFLOW();
  401cda:	4b11      	ldr	r3, [pc, #68]	; (401d20 <vTaskSwitchContext+0x108>)
  401cdc:	6818      	ldr	r0, [r3, #0]
  401cde:	6819      	ldr	r1, [r3, #0]
  401ce0:	3134      	adds	r1, #52	; 0x34
  401ce2:	4b19      	ldr	r3, [pc, #100]	; (401d48 <vTaskSwitchContext+0x130>)
  401ce4:	4798      	blx	r3
  401ce6:	e7ac      	b.n	401c42 <vTaskSwitchContext+0x2a>
		listGET_OWNER_OF_NEXT_ENTRY( pxCurrentTCB, &( pxReadyTasksLists[ uxTopReadyPriority ] ) );
  401ce8:	6860      	ldr	r0, [r4, #4]
  401cea:	460a      	mov	r2, r1
  401cec:	4910      	ldr	r1, [pc, #64]	; (401d30 <vTaskSwitchContext+0x118>)
  401cee:	eb01 0282 	add.w	r2, r1, r2, lsl #2
  401cf2:	6050      	str	r0, [r2, #4]
  401cf4:	e7c8      	b.n	401c88 <vTaskSwitchContext+0x70>
		vWriteTraceToBuffer();
  401cf6:	4b0a      	ldr	r3, [pc, #40]	; (401d20 <vTaskSwitchContext+0x108>)
  401cf8:	681b      	ldr	r3, [r3, #0]
  401cfa:	6c59      	ldr	r1, [r3, #68]	; 0x44
  401cfc:	4b0e      	ldr	r3, [pc, #56]	; (401d38 <vTaskSwitchContext+0x120>)
  401cfe:	6019      	str	r1, [r3, #0]
  401d00:	4b0e      	ldr	r3, [pc, #56]	; (401d3c <vTaskSwitchContext+0x124>)
  401d02:	681a      	ldr	r2, [r3, #0]
  401d04:	4811      	ldr	r0, [pc, #68]	; (401d4c <vTaskSwitchContext+0x134>)
  401d06:	6800      	ldr	r0, [r0, #0]
  401d08:	6010      	str	r0, [r2, #0]
  401d0a:	681a      	ldr	r2, [r3, #0]
  401d0c:	3204      	adds	r2, #4
  401d0e:	601a      	str	r2, [r3, #0]
  401d10:	681a      	ldr	r2, [r3, #0]
  401d12:	6011      	str	r1, [r2, #0]
  401d14:	681a      	ldr	r2, [r3, #0]
  401d16:	3204      	adds	r2, #4
  401d18:	601a      	str	r2, [r3, #0]
  401d1a:	bd10      	pop	{r4, pc}
  401d1c:	20000d54 	.word	0x20000d54
  401d20:	20000cdc 	.word	0x20000cdc
  401d24:	00408d7c 	.word	0x00408d7c
  401d28:	004027dd 	.word	0x004027dd
  401d2c:	20000d5c 	.word	0x20000d5c
  401d30:	20000ce8 	.word	0x20000ce8
  401d34:	20000dc4 	.word	0x20000dc4
  401d38:	200000f8 	.word	0x200000f8
  401d3c:	20000cd4 	.word	0x20000cd4
  401d40:	20000cd8 	.word	0x20000cd8
  401d44:	20000d8c 	.word	0x20000d8c
  401d48:	00401ff5 	.word	0x00401ff5
  401d4c:	20000dc0 	.word	0x20000dc0

00401d50 <SPI_Handler>:

/* Beam Ball Tasks */

/* LCD */

void SPI_Handler(void) {
  401d50:	b508      	push	{r3, lr}
	ili9225_spi_handler();
  401d52:	4b01      	ldr	r3, [pc, #4]	; (401d58 <SPI_Handler+0x8>)
  401d54:	4798      	blx	r3
  401d56:	bd08      	pop	{r3, pc}
  401d58:	004005ad 	.word	0x004005ad

00401d5c <vConfigureLCD>:
}

void vConfigureLCD(void) {
  401d5c:	b510      	push	{r4, lr}
	/* Initialize display parameter */
	g_ili9225_display_opt.ul_width = ILI9225_LCD_WIDTH;
  401d5e:	4c09      	ldr	r4, [pc, #36]	; (401d84 <vConfigureLCD+0x28>)
  401d60:	23b0      	movs	r3, #176	; 0xb0
  401d62:	6023      	str	r3, [r4, #0]
	g_ili9225_display_opt.ul_height = ILI9225_LCD_HEIGHT;
  401d64:	23dc      	movs	r3, #220	; 0xdc
  401d66:	6063      	str	r3, [r4, #4]
	g_ili9225_display_opt.foreground_color = COLOR_BLACK;
  401d68:	2300      	movs	r3, #0
  401d6a:	60a3      	str	r3, [r4, #8]
	g_ili9225_display_opt.background_color = COLOR_WHITE;
  401d6c:	f06f 437f 	mvn.w	r3, #4278190080	; 0xff000000
  401d70:	60e3      	str	r3, [r4, #12]

	/* Switch off backlight */
	aat31xx_disable_backlight();
  401d72:	4b05      	ldr	r3, [pc, #20]	; (401d88 <vConfigureLCD+0x2c>)
  401d74:	4798      	blx	r3

	/* Initialize LCD */
	ili9225_init(&g_ili9225_display_opt);
  401d76:	4620      	mov	r0, r4
  401d78:	4b04      	ldr	r3, [pc, #16]	; (401d8c <vConfigureLCD+0x30>)
  401d7a:	4798      	blx	r3

	/* Set backlight level */
	aat31xx_set_backlight(AAT31XX_AVG_BACKLIGHT_LEVEL);
  401d7c:	2008      	movs	r0, #8
  401d7e:	4b04      	ldr	r3, [pc, #16]	; (401d90 <vConfigureLCD+0x34>)
  401d80:	4798      	blx	r3
  401d82:	bd10      	pop	{r4, pc}
  401d84:	20000f24 	.word	0x20000f24
  401d88:	0040041d 	.word	0x0040041d
  401d8c:	00400665 	.word	0x00400665
  401d90:	004003c1 	.word	0x004003c1

00401d94 <drawLCD>:
}

void drawLCD(void) {
  401d94:	b538      	push	{r3, r4, r5, lr}
	/* Draw filled rectangle with white color */
	ili9225_set_foreground_color(COLOR_WHITE);
  401d96:	f06f 407f 	mvn.w	r0, #4278190080	; 0xff000000
  401d9a:	4c15      	ldr	r4, [pc, #84]	; (401df0 <drawLCD+0x5c>)
  401d9c:	47a0      	blx	r4
	ili9225_draw_filled_rectangle(0, 0, ILI9225_LCD_WIDTH, ILI9225_LCD_HEIGHT);
  401d9e:	23dc      	movs	r3, #220	; 0xdc
  401da0:	22b0      	movs	r2, #176	; 0xb0
  401da2:	2100      	movs	r1, #0
  401da4:	4608      	mov	r0, r1
  401da6:	4d13      	ldr	r5, [pc, #76]	; (401df4 <drawLCD+0x60>)
  401da8:	47a8      	blx	r5
	
	/* Turn on LCD */
	ili9225_display_on();
  401daa:	4b13      	ldr	r3, [pc, #76]	; (401df8 <drawLCD+0x64>)
  401dac:	4798      	blx	r3
	ili9225_set_cursor_position(0,0);
  401dae:	2100      	movs	r1, #0
  401db0:	4608      	mov	r0, r1
  401db2:	4b12      	ldr	r3, [pc, #72]	; (401dfc <drawLCD+0x68>)
  401db4:	4798      	blx	r3
	
	
	/* Draw text and basic shapes on the LCD */
	ili9225_set_foreground_color(COLOR_BLUE);
  401db6:	20ff      	movs	r0, #255	; 0xff
  401db8:	47a0      	blx	r4
	ili9225_draw_string(10, 10, (uint8_t *)"Beam Ball");
  401dba:	4a11      	ldr	r2, [pc, #68]	; (401e00 <drawLCD+0x6c>)
  401dbc:	210a      	movs	r1, #10
  401dbe:	4608      	mov	r0, r1
  401dc0:	4b10      	ldr	r3, [pc, #64]	; (401e04 <drawLCD+0x70>)
  401dc2:	4798      	blx	r3
	
	//ili9225_draw_line(0, 11, ILI9225_LCD_WIDTH, 12);

	/* Draw three circle with red, green and blue color */
	ili9225_set_foreground_color(COLOR_RED);
  401dc4:	f44f 007f 	mov.w	r0, #16711680	; 0xff0000
  401dc8:	47a0      	blx	r4
	ili9225_draw_circle(60, 80, 30);
  401dca:	221e      	movs	r2, #30
  401dcc:	2150      	movs	r1, #80	; 0x50
  401dce:	203c      	movs	r0, #60	; 0x3c
  401dd0:	4d0d      	ldr	r5, [pc, #52]	; (401e08 <drawLCD+0x74>)
  401dd2:	47a8      	blx	r5
	ili9225_set_foreground_color(COLOR_GREEN);
  401dd4:	f44f 407f 	mov.w	r0, #65280	; 0xff00
  401dd8:	47a0      	blx	r4
	ili9225_draw_circle(60, 120, 30);
  401dda:	221e      	movs	r2, #30
  401ddc:	2178      	movs	r1, #120	; 0x78
  401dde:	203c      	movs	r0, #60	; 0x3c
  401de0:	47a8      	blx	r5
	ili9225_set_foreground_color(COLOR_BLUE);
  401de2:	20ff      	movs	r0, #255	; 0xff
  401de4:	47a0      	blx	r4
	ili9225_draw_circle(60, 160, 30);
  401de6:	221e      	movs	r2, #30
  401de8:	21a0      	movs	r1, #160	; 0xa0
  401dea:	203c      	movs	r0, #60	; 0x3c
  401dec:	47a8      	blx	r5
  401dee:	bd38      	pop	{r3, r4, r5, pc}
  401df0:	004005e9 	.word	0x004005e9
  401df4:	00400869 	.word	0x00400869
  401df8:	004005c5 	.word	0x004005c5
  401dfc:	0040064d 	.word	0x0040064d
  401e00:	00408d98 	.word	0x00408d98
  401e04:	004009c5 	.word	0x004009c5
  401e08:	00400925 	.word	0x00400925

00401e0c <TC0_Handler>:
	//pio_enable_interrupt(PIOA,PIO_ECHO);
	//NVIC_SetPriority(PIOA_IRQn, 1 );
	//NVIC_EnableIRQ(PIOA_IRQn);
//}

void TC0_Handler(void) {
  401e0c:	b530      	push	{r4, r5, lr}
  401e0e:	b08f      	sub	sp, #60	; 0x3c
	tc_get_status(TC,CHANNEL);
  401e10:	2100      	movs	r1, #0
  401e12:	480c      	ldr	r0, [pc, #48]	; (401e44 <TC0_Handler+0x38>)
  401e14:	4b0c      	ldr	r3, [pc, #48]	; (401e48 <TC0_Handler+0x3c>)
  401e16:	4798      	blx	r3

	//sensor_counter++;
	
	/** Muda o estado do LED 1*/
	gpio_toggle_pin(LED1_GPIO);
  401e18:	202e      	movs	r0, #46	; 0x2e
  401e1a:	4b0c      	ldr	r3, [pc, #48]	; (401e4c <TC0_Handler+0x40>)
  401e1c:	4798      	blx	r3
	
	ili9225_set_foreground_color(COLOR_WHITE);
  401e1e:	f06f 407f 	mvn.w	r0, #4278190080	; 0xff000000
  401e22:	4c0b      	ldr	r4, [pc, #44]	; (401e50 <TC0_Handler+0x44>)
  401e24:	47a0      	blx	r4
	ili9225_draw_filled_rectangle(0, 160, ILI9225_LCD_WIDTH, ILI9225_LCD_HEIGHT);
  401e26:	23dc      	movs	r3, #220	; 0xdc
  401e28:	22b0      	movs	r2, #176	; 0xb0
  401e2a:	21a0      	movs	r1, #160	; 0xa0
  401e2c:	2000      	movs	r0, #0
  401e2e:	4d09      	ldr	r5, [pc, #36]	; (401e54 <TC0_Handler+0x48>)
  401e30:	47a8      	blx	r5
	ili9225_set_foreground_color(COLOR_BLUE);
  401e32:	20ff      	movs	r0, #255	; 0xff
  401e34:	47a0      	blx	r4
	
	char buffer[50];
	//int n = sprintf (buffer, "%d", sensor_counter);
	
	ili9225_draw_string(10,165,(uint8_t *) buffer);
  401e36:	aa01      	add	r2, sp, #4
  401e38:	21a5      	movs	r1, #165	; 0xa5
  401e3a:	200a      	movs	r0, #10
  401e3c:	4b06      	ldr	r3, [pc, #24]	; (401e58 <TC0_Handler+0x4c>)
  401e3e:	4798      	blx	r3
}
  401e40:	b00f      	add	sp, #60	; 0x3c
  401e42:	bd30      	pop	{r4, r5, pc}
  401e44:	40010000 	.word	0x40010000
  401e48:	004010c7 	.word	0x004010c7
  401e4c:	00400bb5 	.word	0x00400bb5
  401e50:	004005e9 	.word	0x004005e9
  401e54:	00400869 	.word	0x00400869
  401e58:	004009c5 	.word	0x004009c5

00401e5c <vTaskReadSensor>:

#define PIO_TRIGGER LED1_GPIO

// ?? - nao ta funcionando, como debuggar isso sem display?
static void vTaskReadSensor(void *pvParameters)
{
  401e5c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
	UNUSED(pvParameters);
	int counter = 0;
	int distanceCM = 0;
	for (;;) {
		sensor_counter = 0;
  401e5e:	4f06      	ldr	r7, [pc, #24]	; (401e78 <vTaskReadSensor+0x1c>)
  401e60:	2600      	movs	r6, #0
		gpio_pin_is_high(PIO_TRIGGER);
  401e62:	252e      	movs	r5, #46	; 0x2e
  401e64:	4c05      	ldr	r4, [pc, #20]	; (401e7c <vTaskReadSensor+0x20>)
		sensor_counter = 0;
  401e66:	603e      	str	r6, [r7, #0]
		gpio_pin_is_high(PIO_TRIGGER);
  401e68:	4628      	mov	r0, r5
  401e6a:	47a0      	blx	r4
		// vTaskDelay(1us); // implement taskDelay as a for loop
		delay_us(10);
  401e6c:	2023      	movs	r0, #35	; 0x23
  401e6e:	4b04      	ldr	r3, [pc, #16]	; (401e80 <vTaskReadSensor+0x24>)
  401e70:	4798      	blx	r3
		gpio_pin_is_low(PIO_TRIGGER);
  401e72:	4628      	mov	r0, r5
  401e74:	47a0      	blx	r4
  401e76:	e7f6      	b.n	401e66 <vTaskReadSensor+0xa>
  401e78:	20000dc8 	.word	0x20000dc8
  401e7c:	00400b65 	.word	0x00400b65
  401e80:	20000001 	.word	0x20000001

00401e84 <task_led>:
{
  401e84:	b508      	push	{r3, lr}
		LED_Toggle(LED0);
  401e86:	2617      	movs	r6, #23
  401e88:	4d03      	ldr	r5, [pc, #12]	; (401e98 <task_led+0x14>)
		vTaskDelay(1000);
  401e8a:	4c04      	ldr	r4, [pc, #16]	; (401e9c <task_led+0x18>)
		LED_Toggle(LED0);
  401e8c:	4630      	mov	r0, r6
  401e8e:	47a8      	blx	r5
		vTaskDelay(1000);
  401e90:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
  401e94:	47a0      	blx	r4
  401e96:	e7f9      	b.n	401e8c <task_led+0x8>
  401e98:	00400bb5 	.word	0x00400bb5
  401e9c:	00401b05 	.word	0x00401b05

00401ea0 <task_monitor>:
{
  401ea0:	b580      	push	{r7, lr}
		printf("--- task ## %u", (unsigned int)uxTaskGetNumberOfTasks());
  401ea2:	4f09      	ldr	r7, [pc, #36]	; (401ec8 <task_monitor+0x28>)
  401ea4:	4e09      	ldr	r6, [pc, #36]	; (401ecc <task_monitor+0x2c>)
  401ea6:	4d0a      	ldr	r5, [pc, #40]	; (401ed0 <task_monitor+0x30>)
  401ea8:	47b8      	blx	r7
  401eaa:	4601      	mov	r1, r0
  401eac:	4630      	mov	r0, r6
  401eae:	47a8      	blx	r5
		vTaskList((signed portCHAR *)szList);
  401eb0:	4c08      	ldr	r4, [pc, #32]	; (401ed4 <task_monitor+0x34>)
  401eb2:	4620      	mov	r0, r4
  401eb4:	4b08      	ldr	r3, [pc, #32]	; (401ed8 <task_monitor+0x38>)
  401eb6:	4798      	blx	r3
		printf(szList);
  401eb8:	4620      	mov	r0, r4
  401eba:	47a8      	blx	r5
		vTaskDelay(1000);
  401ebc:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
  401ec0:	4b06      	ldr	r3, [pc, #24]	; (401edc <task_monitor+0x3c>)
  401ec2:	4798      	blx	r3
  401ec4:	e7f0      	b.n	401ea8 <task_monitor+0x8>
  401ec6:	bf00      	nop
  401ec8:	004018ed 	.word	0x004018ed
  401ecc:	00408eb0 	.word	0x00408eb0
  401ed0:	00402251 	.word	0x00402251
  401ed4:	20000dcc 	.word	0x20000dcc
  401ed8:	00401b51 	.word	0x00401b51
  401edc:	00401b05 	.word	0x00401b05

00401ee0 <usart_serial_getchar>:
 * \param p_usart   Base address of the USART instance.
 * \param data   Data to read
 *
 */
static inline void usart_serial_getchar(usart_if p_usart, uint8_t *data)
{
  401ee0:	b5f0      	push	{r4, r5, r6, r7, lr}
  401ee2:	b083      	sub	sp, #12
  401ee4:	4605      	mov	r5, r0
  401ee6:	460c      	mov	r4, r1
	uint32_t val = 0;
  401ee8:	2300      	movs	r3, #0
  401eea:	9301      	str	r3, [sp, #4]
	if (UART == (Uart*)p_usart) {
		while (uart_read((Uart*)p_usart, data));
	}
#else
# ifdef UART0
	if (UART0 == (Uart*)p_usart) {
  401eec:	4b18      	ldr	r3, [pc, #96]	; (401f50 <usart_serial_getchar+0x70>)
  401eee:	4298      	cmp	r0, r3
  401ef0:	d00a      	beq.n	401f08 <usart_serial_getchar+0x28>
		while (uart_read((Uart*)p_usart, data));
	}
# endif
# ifdef UART1
	if (UART1 == (Uart*)p_usart) {
  401ef2:	4b18      	ldr	r3, [pc, #96]	; (401f54 <usart_serial_getchar+0x74>)
  401ef4:	4298      	cmp	r0, r3
  401ef6:	d00f      	beq.n	401f18 <usart_serial_getchar+0x38>
		while (usart_read(p_usart, &val));
		*data = (uint8_t)(val & 0xFF);
	}
#else
# ifdef USART0
	if (USART0 == p_usart) {
  401ef8:	4b17      	ldr	r3, [pc, #92]	; (401f58 <usart_serial_getchar+0x78>)
  401efa:	4298      	cmp	r0, r3
  401efc:	d014      	beq.n	401f28 <usart_serial_getchar+0x48>
		while (usart_read(p_usart, &val));
		*data = (uint8_t)(val & 0xFF);
	}
# endif
# ifdef USART1
	if (USART1 == p_usart) {
  401efe:	4b17      	ldr	r3, [pc, #92]	; (401f5c <usart_serial_getchar+0x7c>)
  401f00:	429d      	cmp	r5, r3
  401f02:	d01b      	beq.n	401f3c <usart_serial_getchar+0x5c>
		*data = (uint8_t)(val & 0xFF);
	}
# endif
#endif /* ifdef USART */

}
  401f04:	b003      	add	sp, #12
  401f06:	bdf0      	pop	{r4, r5, r6, r7, pc}
		while (uart_read((Uart*)p_usart, data));
  401f08:	461f      	mov	r7, r3
  401f0a:	4e15      	ldr	r6, [pc, #84]	; (401f60 <usart_serial_getchar+0x80>)
  401f0c:	4621      	mov	r1, r4
  401f0e:	4638      	mov	r0, r7
  401f10:	47b0      	blx	r6
  401f12:	2800      	cmp	r0, #0
  401f14:	d1fa      	bne.n	401f0c <usart_serial_getchar+0x2c>
  401f16:	e7f2      	b.n	401efe <usart_serial_getchar+0x1e>
		while (uart_read((Uart*)p_usart, data));
  401f18:	461e      	mov	r6, r3
  401f1a:	4d11      	ldr	r5, [pc, #68]	; (401f60 <usart_serial_getchar+0x80>)
  401f1c:	4621      	mov	r1, r4
  401f1e:	4630      	mov	r0, r6
  401f20:	47a8      	blx	r5
  401f22:	2800      	cmp	r0, #0
  401f24:	d1fa      	bne.n	401f1c <usart_serial_getchar+0x3c>
  401f26:	e7ed      	b.n	401f04 <usart_serial_getchar+0x24>
		while (usart_read(p_usart, &val));
  401f28:	461e      	mov	r6, r3
  401f2a:	4d0e      	ldr	r5, [pc, #56]	; (401f64 <usart_serial_getchar+0x84>)
  401f2c:	a901      	add	r1, sp, #4
  401f2e:	4630      	mov	r0, r6
  401f30:	47a8      	blx	r5
  401f32:	2800      	cmp	r0, #0
  401f34:	d1fa      	bne.n	401f2c <usart_serial_getchar+0x4c>
		*data = (uint8_t)(val & 0xFF);
  401f36:	9b01      	ldr	r3, [sp, #4]
  401f38:	7023      	strb	r3, [r4, #0]
  401f3a:	e7e3      	b.n	401f04 <usart_serial_getchar+0x24>
		while (usart_read(p_usart, &val));
  401f3c:	461e      	mov	r6, r3
  401f3e:	4d09      	ldr	r5, [pc, #36]	; (401f64 <usart_serial_getchar+0x84>)
  401f40:	a901      	add	r1, sp, #4
  401f42:	4630      	mov	r0, r6
  401f44:	47a8      	blx	r5
  401f46:	2800      	cmp	r0, #0
  401f48:	d1fa      	bne.n	401f40 <usart_serial_getchar+0x60>
		*data = (uint8_t)(val & 0xFF);
  401f4a:	9b01      	ldr	r3, [sp, #4]
  401f4c:	7023      	strb	r3, [r4, #0]
}
  401f4e:	e7d9      	b.n	401f04 <usart_serial_getchar+0x24>
  401f50:	400e0600 	.word	0x400e0600
  401f54:	400e0800 	.word	0x400e0800
  401f58:	40024000 	.word	0x40024000
  401f5c:	40028000 	.word	0x40028000
  401f60:	00401115 	.word	0x00401115
  401f64:	0040113b 	.word	0x0040113b

00401f68 <usart_serial_putchar>:
{
  401f68:	b570      	push	{r4, r5, r6, lr}
  401f6a:	460c      	mov	r4, r1
	if (UART0 == (Uart*)p_usart) {
  401f6c:	4b18      	ldr	r3, [pc, #96]	; (401fd0 <usart_serial_putchar+0x68>)
  401f6e:	4298      	cmp	r0, r3
  401f70:	d00a      	beq.n	401f88 <usart_serial_putchar+0x20>
	if (UART1 == (Uart*)p_usart) {
  401f72:	4b18      	ldr	r3, [pc, #96]	; (401fd4 <usart_serial_putchar+0x6c>)
  401f74:	4298      	cmp	r0, r3
  401f76:	d010      	beq.n	401f9a <usart_serial_putchar+0x32>
	if (USART0 == p_usart) {
  401f78:	4b17      	ldr	r3, [pc, #92]	; (401fd8 <usart_serial_putchar+0x70>)
  401f7a:	4298      	cmp	r0, r3
  401f7c:	d016      	beq.n	401fac <usart_serial_putchar+0x44>
	if (USART1 == p_usart) {
  401f7e:	4b17      	ldr	r3, [pc, #92]	; (401fdc <usart_serial_putchar+0x74>)
  401f80:	4298      	cmp	r0, r3
  401f82:	d01c      	beq.n	401fbe <usart_serial_putchar+0x56>
	return 0;
  401f84:	2000      	movs	r0, #0
}
  401f86:	bd70      	pop	{r4, r5, r6, pc}
		while (uart_write((Uart*)p_usart, c)!=0);
  401f88:	461e      	mov	r6, r3
  401f8a:	4d15      	ldr	r5, [pc, #84]	; (401fe0 <usart_serial_putchar+0x78>)
  401f8c:	4621      	mov	r1, r4
  401f8e:	4630      	mov	r0, r6
  401f90:	47a8      	blx	r5
  401f92:	2800      	cmp	r0, #0
  401f94:	d1fa      	bne.n	401f8c <usart_serial_putchar+0x24>
		return 1;
  401f96:	2001      	movs	r0, #1
  401f98:	bd70      	pop	{r4, r5, r6, pc}
		while (uart_write((Uart*)p_usart, c)!=0);
  401f9a:	461e      	mov	r6, r3
  401f9c:	4d10      	ldr	r5, [pc, #64]	; (401fe0 <usart_serial_putchar+0x78>)
  401f9e:	4621      	mov	r1, r4
  401fa0:	4630      	mov	r0, r6
  401fa2:	47a8      	blx	r5
  401fa4:	2800      	cmp	r0, #0
  401fa6:	d1fa      	bne.n	401f9e <usart_serial_putchar+0x36>
		return 1;
  401fa8:	2001      	movs	r0, #1
  401faa:	bd70      	pop	{r4, r5, r6, pc}
		while (usart_write(p_usart, c)!=0);
  401fac:	461e      	mov	r6, r3
  401fae:	4d0d      	ldr	r5, [pc, #52]	; (401fe4 <usart_serial_putchar+0x7c>)
  401fb0:	4621      	mov	r1, r4
  401fb2:	4630      	mov	r0, r6
  401fb4:	47a8      	blx	r5
  401fb6:	2800      	cmp	r0, #0
  401fb8:	d1fa      	bne.n	401fb0 <usart_serial_putchar+0x48>
		return 1;
  401fba:	2001      	movs	r0, #1
  401fbc:	bd70      	pop	{r4, r5, r6, pc}
		while (usart_write(p_usart, c)!=0);
  401fbe:	461e      	mov	r6, r3
  401fc0:	4d08      	ldr	r5, [pc, #32]	; (401fe4 <usart_serial_putchar+0x7c>)
  401fc2:	4621      	mov	r1, r4
  401fc4:	4630      	mov	r0, r6
  401fc6:	47a8      	blx	r5
  401fc8:	2800      	cmp	r0, #0
  401fca:	d1fa      	bne.n	401fc2 <usart_serial_putchar+0x5a>
		return 1;
  401fcc:	2001      	movs	r0, #1
  401fce:	bd70      	pop	{r4, r5, r6, pc}
  401fd0:	400e0600 	.word	0x400e0600
  401fd4:	400e0800 	.word	0x400e0800
  401fd8:	40024000 	.word	0x40024000
  401fdc:	40028000 	.word	0x40028000
  401fe0:	00401105 	.word	0x00401105
  401fe4:	00401127 	.word	0x00401127

00401fe8 <SysTick_Handler>:
{
  401fe8:	b508      	push	{r3, lr}
	xPortSysTickHandler();
  401fea:	4b01      	ldr	r3, [pc, #4]	; (401ff0 <SysTick_Handler+0x8>)
  401fec:	4798      	blx	r3
  401fee:	bd08      	pop	{r3, pc}
  401ff0:	004014d9 	.word	0x004014d9

00401ff4 <vApplicationStackOverflowHook>:
{
  401ff4:	b508      	push	{r3, lr}
	printf("stack overflow %x %s\r\n", pxTask, (portCHAR *)pcTaskName);
  401ff6:	460a      	mov	r2, r1
  401ff8:	4601      	mov	r1, r0
  401ffa:	4802      	ldr	r0, [pc, #8]	; (402004 <vApplicationStackOverflowHook+0x10>)
  401ffc:	4b02      	ldr	r3, [pc, #8]	; (402008 <vApplicationStackOverflowHook+0x14>)
  401ffe:	4798      	blx	r3
  402000:	e7fe      	b.n	402000 <vApplicationStackOverflowHook+0xc>
  402002:	bf00      	nop
  402004:	00408ec0 	.word	0x00408ec0
  402008:	00402251 	.word	0x00402251

0040200c <vApplicationIdleHook>:
{
  40200c:	4770      	bx	lr

0040200e <vApplicationTickHook>:
{
  40200e:	4770      	bx	lr

00402010 <main>:
 *  \brief FreeRTOS Real Time Kernel example entry point.
 *
 *  \return Unused (ANSI-C compatibility).
 */
int main(void)
{
  402010:	b5f0      	push	{r4, r5, r6, r7, lr}
  402012:	b089      	sub	sp, #36	; 0x24
	/* Initialize the SAM system */
	sysclk_init();
  402014:	4b50      	ldr	r3, [pc, #320]	; (402158 <main+0x148>)
  402016:	4798      	blx	r3
	board_init();
  402018:	4b50      	ldr	r3, [pc, #320]	; (40215c <main+0x14c>)
  40201a:	4798      	blx	r3
 * \param opt         Options needed to set up RS232 communication (see \ref usart_options_t).
 *
 */
static inline void stdio_serial_init(volatile void *usart, const usart_serial_options_t *opt)
{
	stdio_base = (void *)usart;
  40201c:	4c50      	ldr	r4, [pc, #320]	; (402160 <main+0x150>)
  40201e:	4b51      	ldr	r3, [pc, #324]	; (402164 <main+0x154>)
  402020:	601c      	str	r4, [r3, #0]
	ptr_put = (int (*)(void volatile*,char))&usart_serial_putchar;
  402022:	4a51      	ldr	r2, [pc, #324]	; (402168 <main+0x158>)
  402024:	4b51      	ldr	r3, [pc, #324]	; (40216c <main+0x15c>)
  402026:	601a      	str	r2, [r3, #0]
	ptr_get = (void (*)(void volatile*,char*))&usart_serial_getchar;
  402028:	4a51      	ldr	r2, [pc, #324]	; (402170 <main+0x160>)
  40202a:	4b52      	ldr	r3, [pc, #328]	; (402174 <main+0x164>)
  40202c:	601a      	str	r2, [r3, #0]
	uart_settings.ul_mck = sysclk_get_peripheral_hz();
  40202e:	4b52      	ldr	r3, [pc, #328]	; (402178 <main+0x168>)
  402030:	9305      	str	r3, [sp, #20]
	uart_settings.ul_baudrate = opt->baudrate;
  402032:	f44f 33e1 	mov.w	r3, #115200	; 0x1c200
  402036:	9306      	str	r3, [sp, #24]
	uart_settings.ul_mode = opt->paritytype;
  402038:	f44f 6300 	mov.w	r3, #2048	; 0x800
  40203c:	9307      	str	r3, [sp, #28]
  40203e:	2008      	movs	r0, #8
  402040:	4b4e      	ldr	r3, [pc, #312]	; (40217c <main+0x16c>)
  402042:	4798      	blx	r3
		uart_init((Uart*)p_usart, &uart_settings);
  402044:	a905      	add	r1, sp, #20
  402046:	4620      	mov	r0, r4
  402048:	4b4d      	ldr	r3, [pc, #308]	; (402180 <main+0x170>)
  40204a:	4798      	blx	r3
	fdevopen((int (*)(char, FILE*))(_write),(int (*)(FILE*))(_read));
#  endif
#  if UC3 || SAM
	// For AVR32 and SAM GCC
	// Specify that stdout and stdin should not be buffered.
	setbuf(stdout, NULL);
  40204c:	4d4d      	ldr	r5, [pc, #308]	; (402184 <main+0x174>)
  40204e:	682b      	ldr	r3, [r5, #0]
  402050:	2100      	movs	r1, #0
  402052:	6898      	ldr	r0, [r3, #8]
  402054:	4c4c      	ldr	r4, [pc, #304]	; (402188 <main+0x178>)
  402056:	47a0      	blx	r4
	setbuf(stdin, NULL);
  402058:	682b      	ldr	r3, [r5, #0]
  40205a:	2100      	movs	r1, #0
  40205c:	6858      	ldr	r0, [r3, #4]
  40205e:	47a0      	blx	r4
	vConfigureUart();
	vConfigureLCD();
  402060:	4b4a      	ldr	r3, [pc, #296]	; (40218c <main+0x17c>)
  402062:	4798      	blx	r3
	drawLCD();
  402064:	4b4a      	ldr	r3, [pc, #296]	; (402190 <main+0x180>)
  402066:	4798      	blx	r3
	
	// ?? - Funcionando, mas perde a funcionalidade do LCD
	//vConfigureSensorISR();
	
	
	ili9225_set_foreground_color(COLOR_WHITE);
  402068:	f06f 407f 	mvn.w	r0, #4278190080	; 0xff000000
  40206c:	4c49      	ldr	r4, [pc, #292]	; (402194 <main+0x184>)
  40206e:	47a0      	blx	r4
	ili9225_draw_filled_rectangle(0, 30, ILI9225_LCD_WIDTH, ILI9225_LCD_HEIGHT);
  402070:	23dc      	movs	r3, #220	; 0xdc
  402072:	22b0      	movs	r2, #176	; 0xb0
  402074:	211e      	movs	r1, #30
  402076:	2000      	movs	r0, #0
  402078:	4f47      	ldr	r7, [pc, #284]	; (402198 <main+0x188>)
  40207a:	47b8      	blx	r7
	ili9225_set_foreground_color(COLOR_BLUE);
  40207c:	20ff      	movs	r0, #255	; 0xff
  40207e:	47a0      	blx	r4
	ili9225_draw_string(10,35,(uint8_t *)"Config Done!");
  402080:	4a46      	ldr	r2, [pc, #280]	; (40219c <main+0x18c>)
  402082:	2123      	movs	r1, #35	; 0x23
  402084:	200a      	movs	r0, #10
  402086:	4e46      	ldr	r6, [pc, #280]	; (4021a0 <main+0x190>)
  402088:	47b0      	blx	r6
	
	/* Output demo information. */
	printf("-- FreeRTOS Example --\n\r");
  40208a:	4846      	ldr	r0, [pc, #280]	; (4021a4 <main+0x194>)
  40208c:	4d46      	ldr	r5, [pc, #280]	; (4021a8 <main+0x198>)
  40208e:	47a8      	blx	r5
	printf("-- %s\n\r", BOARD_NAME);
  402090:	4946      	ldr	r1, [pc, #280]	; (4021ac <main+0x19c>)
  402092:	4847      	ldr	r0, [pc, #284]	; (4021b0 <main+0x1a0>)
  402094:	47a8      	blx	r5
	printf("-- Compiled: %s %s --\n\r", __DATE__, __TIME__);
  402096:	4a47      	ldr	r2, [pc, #284]	; (4021b4 <main+0x1a4>)
  402098:	4947      	ldr	r1, [pc, #284]	; (4021b8 <main+0x1a8>)
  40209a:	4848      	ldr	r0, [pc, #288]	; (4021bc <main+0x1ac>)
  40209c:	47a8      	blx	r5
	
	
	/* Create Queues */
	xQueueSensor = xQueueCreate(2,sizeof (int));
  40209e:	2104      	movs	r1, #4
  4020a0:	2002      	movs	r0, #2
  4020a2:	4b47      	ldr	r3, [pc, #284]	; (4021c0 <main+0x1b0>)
  4020a4:	4798      	blx	r3
  4020a6:	4b47      	ldr	r3, [pc, #284]	; (4021c4 <main+0x1b4>)
  4020a8:	6018      	str	r0, [r3, #0]
	//xQueueControle = xQueueCreate(2,sizeof (int));
	//xQueueMotor = xQueueCreate(2,sizeof(double));
	
	ili9225_set_foreground_color(COLOR_WHITE);
  4020aa:	f06f 407f 	mvn.w	r0, #4278190080	; 0xff000000
  4020ae:	47a0      	blx	r4
	ili9225_draw_filled_rectangle(0, 50, ILI9225_LCD_WIDTH, ILI9225_LCD_HEIGHT);
  4020b0:	23dc      	movs	r3, #220	; 0xdc
  4020b2:	22b0      	movs	r2, #176	; 0xb0
  4020b4:	2132      	movs	r1, #50	; 0x32
  4020b6:	2000      	movs	r0, #0
  4020b8:	47b8      	blx	r7
	ili9225_set_foreground_color(COLOR_BLUE);
  4020ba:	20ff      	movs	r0, #255	; 0xff
  4020bc:	47a0      	blx	r4
	ili9225_draw_string(10,55,(uint8_t *)"Queue DONE!");
  4020be:	4a42      	ldr	r2, [pc, #264]	; (4021c8 <main+0x1b8>)
  4020c0:	2137      	movs	r1, #55	; 0x37
  4020c2:	200a      	movs	r0, #10
  4020c4:	47b0      	blx	r6
	
	/* Create task to monitor processor activity */
	if (xTaskCreate(task_monitor, "Monitor", TASK_MONITOR_STACK_SIZE, NULL,
  4020c6:	2300      	movs	r3, #0
  4020c8:	9303      	str	r3, [sp, #12]
  4020ca:	9302      	str	r3, [sp, #8]
  4020cc:	9301      	str	r3, [sp, #4]
  4020ce:	9300      	str	r3, [sp, #0]
  4020d0:	f44f 7200 	mov.w	r2, #512	; 0x200
  4020d4:	493d      	ldr	r1, [pc, #244]	; (4021cc <main+0x1bc>)
  4020d6:	483e      	ldr	r0, [pc, #248]	; (4021d0 <main+0x1c0>)
  4020d8:	4c3e      	ldr	r4, [pc, #248]	; (4021d4 <main+0x1c4>)
  4020da:	47a0      	blx	r4
  4020dc:	2801      	cmp	r0, #1
  4020de:	d001      	beq.n	4020e4 <main+0xd4>
			TASK_MONITOR_STACK_PRIORITY, NULL) != pdPASS) {
		printf("Failed to create Monitor task\r\n");
  4020e0:	483d      	ldr	r0, [pc, #244]	; (4021d8 <main+0x1c8>)
  4020e2:	47a8      	blx	r5
	}

	/* Create task to make led blink */
	if (xTaskCreate(task_led, "Led", TASK_LED_STACK_SIZE, NULL,
  4020e4:	2300      	movs	r3, #0
  4020e6:	9303      	str	r3, [sp, #12]
  4020e8:	9302      	str	r3, [sp, #8]
  4020ea:	9301      	str	r3, [sp, #4]
  4020ec:	9300      	str	r3, [sp, #0]
  4020ee:	f44f 7280 	mov.w	r2, #256	; 0x100
  4020f2:	493a      	ldr	r1, [pc, #232]	; (4021dc <main+0x1cc>)
  4020f4:	483a      	ldr	r0, [pc, #232]	; (4021e0 <main+0x1d0>)
  4020f6:	4c37      	ldr	r4, [pc, #220]	; (4021d4 <main+0x1c4>)
  4020f8:	47a0      	blx	r4
  4020fa:	2801      	cmp	r0, #1
  4020fc:	d002      	beq.n	402104 <main+0xf4>
			TASK_LED_STACK_PRIORITY, NULL) != pdPASS) {
		printf("Failed to create test led task\r\n");
  4020fe:	4839      	ldr	r0, [pc, #228]	; (4021e4 <main+0x1d4>)
  402100:	4b29      	ldr	r3, [pc, #164]	; (4021a8 <main+0x198>)
  402102:	4798      	blx	r3
	}
	
	/* Create task to read sensor */
	if (xTaskCreate(vTaskReadSensor, "Read Sensor", TASK_STACK_SIZE, NULL,
  402104:	2300      	movs	r3, #0
  402106:	9303      	str	r3, [sp, #12]
  402108:	9302      	str	r3, [sp, #8]
  40210a:	9301      	str	r3, [sp, #4]
  40210c:	9300      	str	r3, [sp, #0]
  40210e:	f44f 7280 	mov.w	r2, #256	; 0x100
  402112:	4935      	ldr	r1, [pc, #212]	; (4021e8 <main+0x1d8>)
  402114:	4835      	ldr	r0, [pc, #212]	; (4021ec <main+0x1dc>)
  402116:	4c2f      	ldr	r4, [pc, #188]	; (4021d4 <main+0x1c4>)
  402118:	47a0      	blx	r4
  40211a:	2801      	cmp	r0, #1
  40211c:	d005      	beq.n	40212a <main+0x11a>
			TASK_SENSOR_PRIORITY, /*pxTaskSensor*/ NULL) != pdPASS) {
		printf("Failed to create Read Sensor task\r\n");
  40211e:	4834      	ldr	r0, [pc, #208]	; (4021f0 <main+0x1e0>)
  402120:	4b21      	ldr	r3, [pc, #132]	; (4021a8 <main+0x198>)
  402122:	4798      	blx	r3
		gpio_toggle_pin(LED1_GPIO); // ??
  402124:	202e      	movs	r0, #46	; 0x2e
  402126:	4b33      	ldr	r3, [pc, #204]	; (4021f4 <main+0x1e4>)
  402128:	4798      	blx	r3
		//printf("Failed to create Run Motor task\r\n");
	//}
	
	
	
	ili9225_set_foreground_color(COLOR_WHITE);
  40212a:	f06f 407f 	mvn.w	r0, #4278190080	; 0xff000000
  40212e:	4c19      	ldr	r4, [pc, #100]	; (402194 <main+0x184>)
  402130:	47a0      	blx	r4
	ili9225_draw_filled_rectangle(0, 70, ILI9225_LCD_WIDTH, ILI9225_LCD_HEIGHT);
  402132:	23dc      	movs	r3, #220	; 0xdc
  402134:	22b0      	movs	r2, #176	; 0xb0
  402136:	2146      	movs	r1, #70	; 0x46
  402138:	2000      	movs	r0, #0
  40213a:	4d17      	ldr	r5, [pc, #92]	; (402198 <main+0x188>)
  40213c:	47a8      	blx	r5
	ili9225_set_foreground_color(COLOR_BLUE);
  40213e:	20ff      	movs	r0, #255	; 0xff
  402140:	47a0      	blx	r4
	ili9225_draw_string(10,75,(uint8_t *)"Tasks Created!");
  402142:	4a2d      	ldr	r2, [pc, #180]	; (4021f8 <main+0x1e8>)
  402144:	214b      	movs	r1, #75	; 0x4b
  402146:	200a      	movs	r0, #10
  402148:	4b15      	ldr	r3, [pc, #84]	; (4021a0 <main+0x190>)
  40214a:	4798      	blx	r3

	/* Start the scheduler. */
	vTaskStartScheduler();
  40214c:	4b2b      	ldr	r3, [pc, #172]	; (4021fc <main+0x1ec>)
  40214e:	4798      	blx	r3

	/* Will only get here if there was insufficient memory to create the idle task. */
	return 0;
}
  402150:	2000      	movs	r0, #0
  402152:	b009      	add	sp, #36	; 0x24
  402154:	bdf0      	pop	{r4, r5, r6, r7, pc}
  402156:	bf00      	nop
  402158:	00400131 	.word	0x00400131
  40215c:	00400325 	.word	0x00400325
  402160:	400e0600 	.word	0x400e0600
  402164:	20000f0c 	.word	0x20000f0c
  402168:	00401f69 	.word	0x00401f69
  40216c:	20000f08 	.word	0x20000f08
  402170:	00401ee1 	.word	0x00401ee1
  402174:	20000f04 	.word	0x20000f04
  402178:	02dc6c00 	.word	0x02dc6c00
  40217c:	00400f41 	.word	0x00400f41
  402180:	004010cf 	.word	0x004010cf
  402184:	20000100 	.word	0x20000100
  402188:	004029f1 	.word	0x004029f1
  40218c:	00401d5d 	.word	0x00401d5d
  402190:	00401d95 	.word	0x00401d95
  402194:	004005e9 	.word	0x004005e9
  402198:	00400869 	.word	0x00400869
  40219c:	00408da4 	.word	0x00408da4
  4021a0:	004009c5 	.word	0x004009c5
  4021a4:	00408db4 	.word	0x00408db4
  4021a8:	00402251 	.word	0x00402251
  4021ac:	00408dd0 	.word	0x00408dd0
  4021b0:	00408ddc 	.word	0x00408ddc
  4021b4:	00408de4 	.word	0x00408de4
  4021b8:	00408df0 	.word	0x00408df0
  4021bc:	00408dfc 	.word	0x00408dfc
  4021c0:	0040153d 	.word	0x0040153d
  4021c4:	20000ecc 	.word	0x20000ecc
  4021c8:	00408e14 	.word	0x00408e14
  4021cc:	00408e20 	.word	0x00408e20
  4021d0:	00401ea1 	.word	0x00401ea1
  4021d4:	004016a9 	.word	0x004016a9
  4021d8:	00408e28 	.word	0x00408e28
  4021dc:	00408e48 	.word	0x00408e48
  4021e0:	00401e85 	.word	0x00401e85
  4021e4:	00408e4c 	.word	0x00408e4c
  4021e8:	00408e70 	.word	0x00408e70
  4021ec:	00401e5d 	.word	0x00401e5d
  4021f0:	00408e7c 	.word	0x00408e7c
  4021f4:	00400bb5 	.word	0x00400bb5
  4021f8:	00408ea0 	.word	0x00408ea0
  4021fc:	00401889 	.word	0x00401889

00402200 <__libc_init_array>:
  402200:	b570      	push	{r4, r5, r6, lr}
  402202:	4e0f      	ldr	r6, [pc, #60]	; (402240 <__libc_init_array+0x40>)
  402204:	4d0f      	ldr	r5, [pc, #60]	; (402244 <__libc_init_array+0x44>)
  402206:	1b76      	subs	r6, r6, r5
  402208:	10b6      	asrs	r6, r6, #2
  40220a:	bf18      	it	ne
  40220c:	2400      	movne	r4, #0
  40220e:	d005      	beq.n	40221c <__libc_init_array+0x1c>
  402210:	3401      	adds	r4, #1
  402212:	f855 3b04 	ldr.w	r3, [r5], #4
  402216:	4798      	blx	r3
  402218:	42a6      	cmp	r6, r4
  40221a:	d1f9      	bne.n	402210 <__libc_init_array+0x10>
  40221c:	4e0a      	ldr	r6, [pc, #40]	; (402248 <__libc_init_array+0x48>)
  40221e:	4d0b      	ldr	r5, [pc, #44]	; (40224c <__libc_init_array+0x4c>)
  402220:	f006 ffae 	bl	409180 <_init>
  402224:	1b76      	subs	r6, r6, r5
  402226:	10b6      	asrs	r6, r6, #2
  402228:	bf18      	it	ne
  40222a:	2400      	movne	r4, #0
  40222c:	d006      	beq.n	40223c <__libc_init_array+0x3c>
  40222e:	3401      	adds	r4, #1
  402230:	f855 3b04 	ldr.w	r3, [r5], #4
  402234:	4798      	blx	r3
  402236:	42a6      	cmp	r6, r4
  402238:	d1f9      	bne.n	40222e <__libc_init_array+0x2e>
  40223a:	bd70      	pop	{r4, r5, r6, pc}
  40223c:	bd70      	pop	{r4, r5, r6, pc}
  40223e:	bf00      	nop
  402240:	0040918c 	.word	0x0040918c
  402244:	0040918c 	.word	0x0040918c
  402248:	00409194 	.word	0x00409194
  40224c:	0040918c 	.word	0x0040918c

00402250 <iprintf>:
  402250:	b40f      	push	{r0, r1, r2, r3}
  402252:	b510      	push	{r4, lr}
  402254:	4b07      	ldr	r3, [pc, #28]	; (402274 <iprintf+0x24>)
  402256:	b082      	sub	sp, #8
  402258:	ac04      	add	r4, sp, #16
  40225a:	f854 2b04 	ldr.w	r2, [r4], #4
  40225e:	6818      	ldr	r0, [r3, #0]
  402260:	4623      	mov	r3, r4
  402262:	6881      	ldr	r1, [r0, #8]
  402264:	9401      	str	r4, [sp, #4]
  402266:	f002 f831 	bl	4042cc <_vfiprintf_r>
  40226a:	b002      	add	sp, #8
  40226c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  402270:	b004      	add	sp, #16
  402272:	4770      	bx	lr
  402274:	20000100 	.word	0x20000100

00402278 <malloc>:
  402278:	4b02      	ldr	r3, [pc, #8]	; (402284 <malloc+0xc>)
  40227a:	4601      	mov	r1, r0
  40227c:	6818      	ldr	r0, [r3, #0]
  40227e:	f000 b80b 	b.w	402298 <_malloc_r>
  402282:	bf00      	nop
  402284:	20000100 	.word	0x20000100

00402288 <free>:
  402288:	4b02      	ldr	r3, [pc, #8]	; (402294 <free+0xc>)
  40228a:	4601      	mov	r1, r0
  40228c:	6818      	ldr	r0, [r3, #0]
  40228e:	f004 b87b 	b.w	406388 <_free_r>
  402292:	bf00      	nop
  402294:	20000100 	.word	0x20000100

00402298 <_malloc_r>:
  402298:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  40229c:	f101 060b 	add.w	r6, r1, #11
  4022a0:	2e16      	cmp	r6, #22
  4022a2:	b083      	sub	sp, #12
  4022a4:	4605      	mov	r5, r0
  4022a6:	f240 809e 	bls.w	4023e6 <_malloc_r+0x14e>
  4022aa:	f036 0607 	bics.w	r6, r6, #7
  4022ae:	f100 80bd 	bmi.w	40242c <_malloc_r+0x194>
  4022b2:	42b1      	cmp	r1, r6
  4022b4:	f200 80ba 	bhi.w	40242c <_malloc_r+0x194>
  4022b8:	f000 fb84 	bl	4029c4 <__malloc_lock>
  4022bc:	f5b6 7ffc 	cmp.w	r6, #504	; 0x1f8
  4022c0:	f0c0 8285 	bcc.w	4027ce <_malloc_r+0x536>
  4022c4:	0a73      	lsrs	r3, r6, #9
  4022c6:	f000 80b8 	beq.w	40243a <_malloc_r+0x1a2>
  4022ca:	2b04      	cmp	r3, #4
  4022cc:	f200 816c 	bhi.w	4025a8 <_malloc_r+0x310>
  4022d0:	09b3      	lsrs	r3, r6, #6
  4022d2:	f103 0039 	add.w	r0, r3, #57	; 0x39
  4022d6:	f103 0e38 	add.w	lr, r3, #56	; 0x38
  4022da:	00c1      	lsls	r1, r0, #3
  4022dc:	4fb8      	ldr	r7, [pc, #736]	; (4025c0 <_malloc_r+0x328>)
  4022de:	4439      	add	r1, r7
  4022e0:	684c      	ldr	r4, [r1, #4]
  4022e2:	3908      	subs	r1, #8
  4022e4:	42a1      	cmp	r1, r4
  4022e6:	d106      	bne.n	4022f6 <_malloc_r+0x5e>
  4022e8:	e00c      	b.n	402304 <_malloc_r+0x6c>
  4022ea:	2a00      	cmp	r2, #0
  4022ec:	f280 80ab 	bge.w	402446 <_malloc_r+0x1ae>
  4022f0:	68e4      	ldr	r4, [r4, #12]
  4022f2:	42a1      	cmp	r1, r4
  4022f4:	d006      	beq.n	402304 <_malloc_r+0x6c>
  4022f6:	6863      	ldr	r3, [r4, #4]
  4022f8:	f023 0303 	bic.w	r3, r3, #3
  4022fc:	1b9a      	subs	r2, r3, r6
  4022fe:	2a0f      	cmp	r2, #15
  402300:	ddf3      	ble.n	4022ea <_malloc_r+0x52>
  402302:	4670      	mov	r0, lr
  402304:	693c      	ldr	r4, [r7, #16]
  402306:	f8df e2cc 	ldr.w	lr, [pc, #716]	; 4025d4 <_malloc_r+0x33c>
  40230a:	4574      	cmp	r4, lr
  40230c:	f000 819e 	beq.w	40264c <_malloc_r+0x3b4>
  402310:	6863      	ldr	r3, [r4, #4]
  402312:	f023 0303 	bic.w	r3, r3, #3
  402316:	1b9a      	subs	r2, r3, r6
  402318:	2a0f      	cmp	r2, #15
  40231a:	f300 8183 	bgt.w	402624 <_malloc_r+0x38c>
  40231e:	2a00      	cmp	r2, #0
  402320:	f8c7 e014 	str.w	lr, [r7, #20]
  402324:	f8c7 e010 	str.w	lr, [r7, #16]
  402328:	f280 8091 	bge.w	40244e <_malloc_r+0x1b6>
  40232c:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
  402330:	f080 8154 	bcs.w	4025dc <_malloc_r+0x344>
  402334:	2201      	movs	r2, #1
  402336:	08db      	lsrs	r3, r3, #3
  402338:	6879      	ldr	r1, [r7, #4]
  40233a:	ea4f 0ca3 	mov.w	ip, r3, asr #2
  40233e:	4413      	add	r3, r2
  402340:	f857 8033 	ldr.w	r8, [r7, r3, lsl #3]
  402344:	fa02 f20c 	lsl.w	r2, r2, ip
  402348:	eb07 0cc3 	add.w	ip, r7, r3, lsl #3
  40234c:	430a      	orrs	r2, r1
  40234e:	f1ac 0108 	sub.w	r1, ip, #8
  402352:	60e1      	str	r1, [r4, #12]
  402354:	f8c4 8008 	str.w	r8, [r4, #8]
  402358:	607a      	str	r2, [r7, #4]
  40235a:	f847 4033 	str.w	r4, [r7, r3, lsl #3]
  40235e:	f8c8 400c 	str.w	r4, [r8, #12]
  402362:	2401      	movs	r4, #1
  402364:	1083      	asrs	r3, r0, #2
  402366:	409c      	lsls	r4, r3
  402368:	4294      	cmp	r4, r2
  40236a:	d87d      	bhi.n	402468 <_malloc_r+0x1d0>
  40236c:	4214      	tst	r4, r2
  40236e:	d106      	bne.n	40237e <_malloc_r+0xe6>
  402370:	f020 0003 	bic.w	r0, r0, #3
  402374:	0064      	lsls	r4, r4, #1
  402376:	4214      	tst	r4, r2
  402378:	f100 0004 	add.w	r0, r0, #4
  40237c:	d0fa      	beq.n	402374 <_malloc_r+0xdc>
  40237e:	eb07 09c0 	add.w	r9, r7, r0, lsl #3
  402382:	46cc      	mov	ip, r9
  402384:	4680      	mov	r8, r0
  402386:	f8dc 300c 	ldr.w	r3, [ip, #12]
  40238a:	459c      	cmp	ip, r3
  40238c:	d107      	bne.n	40239e <_malloc_r+0x106>
  40238e:	e15f      	b.n	402650 <_malloc_r+0x3b8>
  402390:	2a00      	cmp	r2, #0
  402392:	f280 816d 	bge.w	402670 <_malloc_r+0x3d8>
  402396:	68db      	ldr	r3, [r3, #12]
  402398:	459c      	cmp	ip, r3
  40239a:	f000 8159 	beq.w	402650 <_malloc_r+0x3b8>
  40239e:	6859      	ldr	r1, [r3, #4]
  4023a0:	f021 0103 	bic.w	r1, r1, #3
  4023a4:	1b8a      	subs	r2, r1, r6
  4023a6:	2a0f      	cmp	r2, #15
  4023a8:	ddf2      	ble.n	402390 <_malloc_r+0xf8>
  4023aa:	68dc      	ldr	r4, [r3, #12]
  4023ac:	f8d3 c008 	ldr.w	ip, [r3, #8]
  4023b0:	f046 0801 	orr.w	r8, r6, #1
  4023b4:	4628      	mov	r0, r5
  4023b6:	441e      	add	r6, r3
  4023b8:	f042 0501 	orr.w	r5, r2, #1
  4023bc:	f8c3 8004 	str.w	r8, [r3, #4]
  4023c0:	f8cc 400c 	str.w	r4, [ip, #12]
  4023c4:	f8c4 c008 	str.w	ip, [r4, #8]
  4023c8:	617e      	str	r6, [r7, #20]
  4023ca:	613e      	str	r6, [r7, #16]
  4023cc:	f8c6 e00c 	str.w	lr, [r6, #12]
  4023d0:	f8c6 e008 	str.w	lr, [r6, #8]
  4023d4:	6075      	str	r5, [r6, #4]
  4023d6:	505a      	str	r2, [r3, r1]
  4023d8:	9300      	str	r3, [sp, #0]
  4023da:	f000 faf5 	bl	4029c8 <__malloc_unlock>
  4023de:	9b00      	ldr	r3, [sp, #0]
  4023e0:	f103 0408 	add.w	r4, r3, #8
  4023e4:	e01e      	b.n	402424 <_malloc_r+0x18c>
  4023e6:	2910      	cmp	r1, #16
  4023e8:	d820      	bhi.n	40242c <_malloc_r+0x194>
  4023ea:	f000 faeb 	bl	4029c4 <__malloc_lock>
  4023ee:	2610      	movs	r6, #16
  4023f0:	2318      	movs	r3, #24
  4023f2:	2002      	movs	r0, #2
  4023f4:	4f72      	ldr	r7, [pc, #456]	; (4025c0 <_malloc_r+0x328>)
  4023f6:	443b      	add	r3, r7
  4023f8:	685c      	ldr	r4, [r3, #4]
  4023fa:	f1a3 0208 	sub.w	r2, r3, #8
  4023fe:	4294      	cmp	r4, r2
  402400:	f000 812f 	beq.w	402662 <_malloc_r+0x3ca>
  402404:	6863      	ldr	r3, [r4, #4]
  402406:	68e1      	ldr	r1, [r4, #12]
  402408:	f023 0303 	bic.w	r3, r3, #3
  40240c:	4423      	add	r3, r4
  40240e:	685a      	ldr	r2, [r3, #4]
  402410:	68a6      	ldr	r6, [r4, #8]
  402412:	f042 0201 	orr.w	r2, r2, #1
  402416:	60f1      	str	r1, [r6, #12]
  402418:	4628      	mov	r0, r5
  40241a:	608e      	str	r6, [r1, #8]
  40241c:	605a      	str	r2, [r3, #4]
  40241e:	f000 fad3 	bl	4029c8 <__malloc_unlock>
  402422:	3408      	adds	r4, #8
  402424:	4620      	mov	r0, r4
  402426:	b003      	add	sp, #12
  402428:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  40242c:	2400      	movs	r4, #0
  40242e:	230c      	movs	r3, #12
  402430:	4620      	mov	r0, r4
  402432:	602b      	str	r3, [r5, #0]
  402434:	b003      	add	sp, #12
  402436:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  40243a:	2040      	movs	r0, #64	; 0x40
  40243c:	f44f 7100 	mov.w	r1, #512	; 0x200
  402440:	f04f 0e3f 	mov.w	lr, #63	; 0x3f
  402444:	e74a      	b.n	4022dc <_malloc_r+0x44>
  402446:	4423      	add	r3, r4
  402448:	685a      	ldr	r2, [r3, #4]
  40244a:	68e1      	ldr	r1, [r4, #12]
  40244c:	e7e0      	b.n	402410 <_malloc_r+0x178>
  40244e:	4423      	add	r3, r4
  402450:	685a      	ldr	r2, [r3, #4]
  402452:	4628      	mov	r0, r5
  402454:	f042 0201 	orr.w	r2, r2, #1
  402458:	605a      	str	r2, [r3, #4]
  40245a:	3408      	adds	r4, #8
  40245c:	f000 fab4 	bl	4029c8 <__malloc_unlock>
  402460:	4620      	mov	r0, r4
  402462:	b003      	add	sp, #12
  402464:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  402468:	68bc      	ldr	r4, [r7, #8]
  40246a:	6863      	ldr	r3, [r4, #4]
  40246c:	f023 0803 	bic.w	r8, r3, #3
  402470:	45b0      	cmp	r8, r6
  402472:	d304      	bcc.n	40247e <_malloc_r+0x1e6>
  402474:	eba8 0306 	sub.w	r3, r8, r6
  402478:	2b0f      	cmp	r3, #15
  40247a:	f300 8085 	bgt.w	402588 <_malloc_r+0x2f0>
  40247e:	f8df 9158 	ldr.w	r9, [pc, #344]	; 4025d8 <_malloc_r+0x340>
  402482:	4b50      	ldr	r3, [pc, #320]	; (4025c4 <_malloc_r+0x32c>)
  402484:	f8d9 2000 	ldr.w	r2, [r9]
  402488:	681b      	ldr	r3, [r3, #0]
  40248a:	3201      	adds	r2, #1
  40248c:	4433      	add	r3, r6
  40248e:	eb04 0a08 	add.w	sl, r4, r8
  402492:	f000 8154 	beq.w	40273e <_malloc_r+0x4a6>
  402496:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
  40249a:	330f      	adds	r3, #15
  40249c:	f423 6b7f 	bic.w	fp, r3, #4080	; 0xff0
  4024a0:	f02b 0b0f 	bic.w	fp, fp, #15
  4024a4:	4659      	mov	r1, fp
  4024a6:	4628      	mov	r0, r5
  4024a8:	f000 fa90 	bl	4029cc <_sbrk_r>
  4024ac:	1c41      	adds	r1, r0, #1
  4024ae:	4602      	mov	r2, r0
  4024b0:	f000 80fb 	beq.w	4026aa <_malloc_r+0x412>
  4024b4:	4582      	cmp	sl, r0
  4024b6:	f200 80f6 	bhi.w	4026a6 <_malloc_r+0x40e>
  4024ba:	4b43      	ldr	r3, [pc, #268]	; (4025c8 <_malloc_r+0x330>)
  4024bc:	6819      	ldr	r1, [r3, #0]
  4024be:	4459      	add	r1, fp
  4024c0:	6019      	str	r1, [r3, #0]
  4024c2:	f000 814c 	beq.w	40275e <_malloc_r+0x4c6>
  4024c6:	f8d9 0000 	ldr.w	r0, [r9]
  4024ca:	3001      	adds	r0, #1
  4024cc:	bf1b      	ittet	ne
  4024ce:	eba2 0a0a 	subne.w	sl, r2, sl
  4024d2:	4451      	addne	r1, sl
  4024d4:	f8c9 2000 	streq.w	r2, [r9]
  4024d8:	6019      	strne	r1, [r3, #0]
  4024da:	f012 0107 	ands.w	r1, r2, #7
  4024de:	f000 8114 	beq.w	40270a <_malloc_r+0x472>
  4024e2:	f1c1 0008 	rsb	r0, r1, #8
  4024e6:	f5c1 5180 	rsb	r1, r1, #4096	; 0x1000
  4024ea:	4402      	add	r2, r0
  4024ec:	3108      	adds	r1, #8
  4024ee:	eb02 090b 	add.w	r9, r2, fp
  4024f2:	f3c9 090b 	ubfx	r9, r9, #0, #12
  4024f6:	eba1 0909 	sub.w	r9, r1, r9
  4024fa:	4649      	mov	r1, r9
  4024fc:	4628      	mov	r0, r5
  4024fe:	9301      	str	r3, [sp, #4]
  402500:	9200      	str	r2, [sp, #0]
  402502:	f000 fa63 	bl	4029cc <_sbrk_r>
  402506:	1c43      	adds	r3, r0, #1
  402508:	e89d 000c 	ldmia.w	sp, {r2, r3}
  40250c:	f000 8142 	beq.w	402794 <_malloc_r+0x4fc>
  402510:	1a80      	subs	r0, r0, r2
  402512:	4448      	add	r0, r9
  402514:	f040 0001 	orr.w	r0, r0, #1
  402518:	6819      	ldr	r1, [r3, #0]
  40251a:	42bc      	cmp	r4, r7
  40251c:	4449      	add	r1, r9
  40251e:	60ba      	str	r2, [r7, #8]
  402520:	6019      	str	r1, [r3, #0]
  402522:	6050      	str	r0, [r2, #4]
  402524:	d017      	beq.n	402556 <_malloc_r+0x2be>
  402526:	f1b8 0f0f 	cmp.w	r8, #15
  40252a:	f240 80fa 	bls.w	402722 <_malloc_r+0x48a>
  40252e:	f04f 0c05 	mov.w	ip, #5
  402532:	6862      	ldr	r2, [r4, #4]
  402534:	f1a8 000c 	sub.w	r0, r8, #12
  402538:	f020 0007 	bic.w	r0, r0, #7
  40253c:	f002 0201 	and.w	r2, r2, #1
  402540:	eb04 0e00 	add.w	lr, r4, r0
  402544:	4302      	orrs	r2, r0
  402546:	280f      	cmp	r0, #15
  402548:	6062      	str	r2, [r4, #4]
  40254a:	f8ce c004 	str.w	ip, [lr, #4]
  40254e:	f8ce c008 	str.w	ip, [lr, #8]
  402552:	f200 8116 	bhi.w	402782 <_malloc_r+0x4ea>
  402556:	4b1d      	ldr	r3, [pc, #116]	; (4025cc <_malloc_r+0x334>)
  402558:	68bc      	ldr	r4, [r7, #8]
  40255a:	681a      	ldr	r2, [r3, #0]
  40255c:	4291      	cmp	r1, r2
  40255e:	bf88      	it	hi
  402560:	6019      	strhi	r1, [r3, #0]
  402562:	4b1b      	ldr	r3, [pc, #108]	; (4025d0 <_malloc_r+0x338>)
  402564:	681a      	ldr	r2, [r3, #0]
  402566:	4291      	cmp	r1, r2
  402568:	6862      	ldr	r2, [r4, #4]
  40256a:	bf88      	it	hi
  40256c:	6019      	strhi	r1, [r3, #0]
  40256e:	f022 0203 	bic.w	r2, r2, #3
  402572:	4296      	cmp	r6, r2
  402574:	eba2 0306 	sub.w	r3, r2, r6
  402578:	d801      	bhi.n	40257e <_malloc_r+0x2e6>
  40257a:	2b0f      	cmp	r3, #15
  40257c:	dc04      	bgt.n	402588 <_malloc_r+0x2f0>
  40257e:	4628      	mov	r0, r5
  402580:	f000 fa22 	bl	4029c8 <__malloc_unlock>
  402584:	2400      	movs	r4, #0
  402586:	e74d      	b.n	402424 <_malloc_r+0x18c>
  402588:	f046 0201 	orr.w	r2, r6, #1
  40258c:	f043 0301 	orr.w	r3, r3, #1
  402590:	4426      	add	r6, r4
  402592:	6062      	str	r2, [r4, #4]
  402594:	4628      	mov	r0, r5
  402596:	60be      	str	r6, [r7, #8]
  402598:	3408      	adds	r4, #8
  40259a:	6073      	str	r3, [r6, #4]
  40259c:	f000 fa14 	bl	4029c8 <__malloc_unlock>
  4025a0:	4620      	mov	r0, r4
  4025a2:	b003      	add	sp, #12
  4025a4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  4025a8:	2b14      	cmp	r3, #20
  4025aa:	d970      	bls.n	40268e <_malloc_r+0x3f6>
  4025ac:	2b54      	cmp	r3, #84	; 0x54
  4025ae:	f200 80a2 	bhi.w	4026f6 <_malloc_r+0x45e>
  4025b2:	0b33      	lsrs	r3, r6, #12
  4025b4:	f103 006f 	add.w	r0, r3, #111	; 0x6f
  4025b8:	f103 0e6e 	add.w	lr, r3, #110	; 0x6e
  4025bc:	00c1      	lsls	r1, r0, #3
  4025be:	e68d      	b.n	4022dc <_malloc_r+0x44>
  4025c0:	20000530 	.word	0x20000530
  4025c4:	20000f00 	.word	0x20000f00
  4025c8:	20000ed0 	.word	0x20000ed0
  4025cc:	20000ef8 	.word	0x20000ef8
  4025d0:	20000efc 	.word	0x20000efc
  4025d4:	20000538 	.word	0x20000538
  4025d8:	20000938 	.word	0x20000938
  4025dc:	0a5a      	lsrs	r2, r3, #9
  4025de:	2a04      	cmp	r2, #4
  4025e0:	d95b      	bls.n	40269a <_malloc_r+0x402>
  4025e2:	2a14      	cmp	r2, #20
  4025e4:	f200 80ae 	bhi.w	402744 <_malloc_r+0x4ac>
  4025e8:	f102 015c 	add.w	r1, r2, #92	; 0x5c
  4025ec:	00c9      	lsls	r1, r1, #3
  4025ee:	325b      	adds	r2, #91	; 0x5b
  4025f0:	eb07 0c01 	add.w	ip, r7, r1
  4025f4:	5879      	ldr	r1, [r7, r1]
  4025f6:	f1ac 0c08 	sub.w	ip, ip, #8
  4025fa:	458c      	cmp	ip, r1
  4025fc:	f000 8088 	beq.w	402710 <_malloc_r+0x478>
  402600:	684a      	ldr	r2, [r1, #4]
  402602:	f022 0203 	bic.w	r2, r2, #3
  402606:	4293      	cmp	r3, r2
  402608:	d273      	bcs.n	4026f2 <_malloc_r+0x45a>
  40260a:	6889      	ldr	r1, [r1, #8]
  40260c:	458c      	cmp	ip, r1
  40260e:	d1f7      	bne.n	402600 <_malloc_r+0x368>
  402610:	f8dc 300c 	ldr.w	r3, [ip, #12]
  402614:	687a      	ldr	r2, [r7, #4]
  402616:	60e3      	str	r3, [r4, #12]
  402618:	f8c4 c008 	str.w	ip, [r4, #8]
  40261c:	609c      	str	r4, [r3, #8]
  40261e:	f8cc 400c 	str.w	r4, [ip, #12]
  402622:	e69e      	b.n	402362 <_malloc_r+0xca>
  402624:	f046 0c01 	orr.w	ip, r6, #1
  402628:	f042 0101 	orr.w	r1, r2, #1
  40262c:	4426      	add	r6, r4
  40262e:	f8c4 c004 	str.w	ip, [r4, #4]
  402632:	4628      	mov	r0, r5
  402634:	617e      	str	r6, [r7, #20]
  402636:	613e      	str	r6, [r7, #16]
  402638:	f8c6 e00c 	str.w	lr, [r6, #12]
  40263c:	f8c6 e008 	str.w	lr, [r6, #8]
  402640:	6071      	str	r1, [r6, #4]
  402642:	50e2      	str	r2, [r4, r3]
  402644:	f000 f9c0 	bl	4029c8 <__malloc_unlock>
  402648:	3408      	adds	r4, #8
  40264a:	e6eb      	b.n	402424 <_malloc_r+0x18c>
  40264c:	687a      	ldr	r2, [r7, #4]
  40264e:	e688      	b.n	402362 <_malloc_r+0xca>
  402650:	f108 0801 	add.w	r8, r8, #1
  402654:	f018 0f03 	tst.w	r8, #3
  402658:	f10c 0c08 	add.w	ip, ip, #8
  40265c:	f47f ae93 	bne.w	402386 <_malloc_r+0xee>
  402660:	e02d      	b.n	4026be <_malloc_r+0x426>
  402662:	68dc      	ldr	r4, [r3, #12]
  402664:	42a3      	cmp	r3, r4
  402666:	bf08      	it	eq
  402668:	3002      	addeq	r0, #2
  40266a:	f43f ae4b 	beq.w	402304 <_malloc_r+0x6c>
  40266e:	e6c9      	b.n	402404 <_malloc_r+0x16c>
  402670:	461c      	mov	r4, r3
  402672:	4419      	add	r1, r3
  402674:	684a      	ldr	r2, [r1, #4]
  402676:	68db      	ldr	r3, [r3, #12]
  402678:	f854 6f08 	ldr.w	r6, [r4, #8]!
  40267c:	f042 0201 	orr.w	r2, r2, #1
  402680:	604a      	str	r2, [r1, #4]
  402682:	4628      	mov	r0, r5
  402684:	60f3      	str	r3, [r6, #12]
  402686:	609e      	str	r6, [r3, #8]
  402688:	f000 f99e 	bl	4029c8 <__malloc_unlock>
  40268c:	e6ca      	b.n	402424 <_malloc_r+0x18c>
  40268e:	f103 005c 	add.w	r0, r3, #92	; 0x5c
  402692:	f103 0e5b 	add.w	lr, r3, #91	; 0x5b
  402696:	00c1      	lsls	r1, r0, #3
  402698:	e620      	b.n	4022dc <_malloc_r+0x44>
  40269a:	099a      	lsrs	r2, r3, #6
  40269c:	f102 0139 	add.w	r1, r2, #57	; 0x39
  4026a0:	00c9      	lsls	r1, r1, #3
  4026a2:	3238      	adds	r2, #56	; 0x38
  4026a4:	e7a4      	b.n	4025f0 <_malloc_r+0x358>
  4026a6:	42bc      	cmp	r4, r7
  4026a8:	d054      	beq.n	402754 <_malloc_r+0x4bc>
  4026aa:	68bc      	ldr	r4, [r7, #8]
  4026ac:	6862      	ldr	r2, [r4, #4]
  4026ae:	f022 0203 	bic.w	r2, r2, #3
  4026b2:	e75e      	b.n	402572 <_malloc_r+0x2da>
  4026b4:	f859 3908 	ldr.w	r3, [r9], #-8
  4026b8:	4599      	cmp	r9, r3
  4026ba:	f040 8086 	bne.w	4027ca <_malloc_r+0x532>
  4026be:	f010 0f03 	tst.w	r0, #3
  4026c2:	f100 30ff 	add.w	r0, r0, #4294967295
  4026c6:	d1f5      	bne.n	4026b4 <_malloc_r+0x41c>
  4026c8:	687b      	ldr	r3, [r7, #4]
  4026ca:	ea23 0304 	bic.w	r3, r3, r4
  4026ce:	607b      	str	r3, [r7, #4]
  4026d0:	0064      	lsls	r4, r4, #1
  4026d2:	429c      	cmp	r4, r3
  4026d4:	f63f aec8 	bhi.w	402468 <_malloc_r+0x1d0>
  4026d8:	2c00      	cmp	r4, #0
  4026da:	f43f aec5 	beq.w	402468 <_malloc_r+0x1d0>
  4026de:	421c      	tst	r4, r3
  4026e0:	4640      	mov	r0, r8
  4026e2:	f47f ae4c 	bne.w	40237e <_malloc_r+0xe6>
  4026e6:	0064      	lsls	r4, r4, #1
  4026e8:	421c      	tst	r4, r3
  4026ea:	f100 0004 	add.w	r0, r0, #4
  4026ee:	d0fa      	beq.n	4026e6 <_malloc_r+0x44e>
  4026f0:	e645      	b.n	40237e <_malloc_r+0xe6>
  4026f2:	468c      	mov	ip, r1
  4026f4:	e78c      	b.n	402610 <_malloc_r+0x378>
  4026f6:	f5b3 7faa 	cmp.w	r3, #340	; 0x154
  4026fa:	d815      	bhi.n	402728 <_malloc_r+0x490>
  4026fc:	0bf3      	lsrs	r3, r6, #15
  4026fe:	f103 0078 	add.w	r0, r3, #120	; 0x78
  402702:	f103 0e77 	add.w	lr, r3, #119	; 0x77
  402706:	00c1      	lsls	r1, r0, #3
  402708:	e5e8      	b.n	4022dc <_malloc_r+0x44>
  40270a:	f44f 5180 	mov.w	r1, #4096	; 0x1000
  40270e:	e6ee      	b.n	4024ee <_malloc_r+0x256>
  402710:	2101      	movs	r1, #1
  402712:	687b      	ldr	r3, [r7, #4]
  402714:	1092      	asrs	r2, r2, #2
  402716:	fa01 f202 	lsl.w	r2, r1, r2
  40271a:	431a      	orrs	r2, r3
  40271c:	607a      	str	r2, [r7, #4]
  40271e:	4663      	mov	r3, ip
  402720:	e779      	b.n	402616 <_malloc_r+0x37e>
  402722:	2301      	movs	r3, #1
  402724:	6053      	str	r3, [r2, #4]
  402726:	e72a      	b.n	40257e <_malloc_r+0x2e6>
  402728:	f240 5254 	movw	r2, #1364	; 0x554
  40272c:	4293      	cmp	r3, r2
  40272e:	d822      	bhi.n	402776 <_malloc_r+0x4de>
  402730:	0cb3      	lsrs	r3, r6, #18
  402732:	f103 007d 	add.w	r0, r3, #125	; 0x7d
  402736:	f103 0e7c 	add.w	lr, r3, #124	; 0x7c
  40273a:	00c1      	lsls	r1, r0, #3
  40273c:	e5ce      	b.n	4022dc <_malloc_r+0x44>
  40273e:	f103 0b10 	add.w	fp, r3, #16
  402742:	e6af      	b.n	4024a4 <_malloc_r+0x20c>
  402744:	2a54      	cmp	r2, #84	; 0x54
  402746:	d829      	bhi.n	40279c <_malloc_r+0x504>
  402748:	0b1a      	lsrs	r2, r3, #12
  40274a:	f102 016f 	add.w	r1, r2, #111	; 0x6f
  40274e:	00c9      	lsls	r1, r1, #3
  402750:	326e      	adds	r2, #110	; 0x6e
  402752:	e74d      	b.n	4025f0 <_malloc_r+0x358>
  402754:	4b20      	ldr	r3, [pc, #128]	; (4027d8 <_malloc_r+0x540>)
  402756:	6819      	ldr	r1, [r3, #0]
  402758:	4459      	add	r1, fp
  40275a:	6019      	str	r1, [r3, #0]
  40275c:	e6b3      	b.n	4024c6 <_malloc_r+0x22e>
  40275e:	f3ca 000b 	ubfx	r0, sl, #0, #12
  402762:	2800      	cmp	r0, #0
  402764:	f47f aeaf 	bne.w	4024c6 <_malloc_r+0x22e>
  402768:	eb08 030b 	add.w	r3, r8, fp
  40276c:	68ba      	ldr	r2, [r7, #8]
  40276e:	f043 0301 	orr.w	r3, r3, #1
  402772:	6053      	str	r3, [r2, #4]
  402774:	e6ef      	b.n	402556 <_malloc_r+0x2be>
  402776:	207f      	movs	r0, #127	; 0x7f
  402778:	f44f 717e 	mov.w	r1, #1016	; 0x3f8
  40277c:	f04f 0e7e 	mov.w	lr, #126	; 0x7e
  402780:	e5ac      	b.n	4022dc <_malloc_r+0x44>
  402782:	f104 0108 	add.w	r1, r4, #8
  402786:	4628      	mov	r0, r5
  402788:	9300      	str	r3, [sp, #0]
  40278a:	f003 fdfd 	bl	406388 <_free_r>
  40278e:	9b00      	ldr	r3, [sp, #0]
  402790:	6819      	ldr	r1, [r3, #0]
  402792:	e6e0      	b.n	402556 <_malloc_r+0x2be>
  402794:	2001      	movs	r0, #1
  402796:	f04f 0900 	mov.w	r9, #0
  40279a:	e6bd      	b.n	402518 <_malloc_r+0x280>
  40279c:	f5b2 7faa 	cmp.w	r2, #340	; 0x154
  4027a0:	d805      	bhi.n	4027ae <_malloc_r+0x516>
  4027a2:	0bda      	lsrs	r2, r3, #15
  4027a4:	f102 0178 	add.w	r1, r2, #120	; 0x78
  4027a8:	00c9      	lsls	r1, r1, #3
  4027aa:	3277      	adds	r2, #119	; 0x77
  4027ac:	e720      	b.n	4025f0 <_malloc_r+0x358>
  4027ae:	f240 5154 	movw	r1, #1364	; 0x554
  4027b2:	428a      	cmp	r2, r1
  4027b4:	d805      	bhi.n	4027c2 <_malloc_r+0x52a>
  4027b6:	0c9a      	lsrs	r2, r3, #18
  4027b8:	f102 017d 	add.w	r1, r2, #125	; 0x7d
  4027bc:	00c9      	lsls	r1, r1, #3
  4027be:	327c      	adds	r2, #124	; 0x7c
  4027c0:	e716      	b.n	4025f0 <_malloc_r+0x358>
  4027c2:	f44f 717e 	mov.w	r1, #1016	; 0x3f8
  4027c6:	227e      	movs	r2, #126	; 0x7e
  4027c8:	e712      	b.n	4025f0 <_malloc_r+0x358>
  4027ca:	687b      	ldr	r3, [r7, #4]
  4027cc:	e780      	b.n	4026d0 <_malloc_r+0x438>
  4027ce:	08f0      	lsrs	r0, r6, #3
  4027d0:	f106 0308 	add.w	r3, r6, #8
  4027d4:	e60e      	b.n	4023f4 <_malloc_r+0x15c>
  4027d6:	bf00      	nop
  4027d8:	20000ed0 	.word	0x20000ed0

004027dc <memcmp>:
  4027dc:	2a03      	cmp	r2, #3
  4027de:	b470      	push	{r4, r5, r6}
  4027e0:	d922      	bls.n	402828 <memcmp+0x4c>
  4027e2:	ea40 0301 	orr.w	r3, r0, r1
  4027e6:	079b      	lsls	r3, r3, #30
  4027e8:	d011      	beq.n	40280e <memcmp+0x32>
  4027ea:	7803      	ldrb	r3, [r0, #0]
  4027ec:	780c      	ldrb	r4, [r1, #0]
  4027ee:	42a3      	cmp	r3, r4
  4027f0:	d11d      	bne.n	40282e <memcmp+0x52>
  4027f2:	440a      	add	r2, r1
  4027f4:	3101      	adds	r1, #1
  4027f6:	e005      	b.n	402804 <memcmp+0x28>
  4027f8:	f810 3f01 	ldrb.w	r3, [r0, #1]!
  4027fc:	f811 4b01 	ldrb.w	r4, [r1], #1
  402800:	42a3      	cmp	r3, r4
  402802:	d114      	bne.n	40282e <memcmp+0x52>
  402804:	4291      	cmp	r1, r2
  402806:	d1f7      	bne.n	4027f8 <memcmp+0x1c>
  402808:	2000      	movs	r0, #0
  40280a:	bc70      	pop	{r4, r5, r6}
  40280c:	4770      	bx	lr
  40280e:	680d      	ldr	r5, [r1, #0]
  402810:	6806      	ldr	r6, [r0, #0]
  402812:	460c      	mov	r4, r1
  402814:	42ae      	cmp	r6, r5
  402816:	4603      	mov	r3, r0
  402818:	f101 0104 	add.w	r1, r1, #4
  40281c:	f100 0004 	add.w	r0, r0, #4
  402820:	d108      	bne.n	402834 <memcmp+0x58>
  402822:	3a04      	subs	r2, #4
  402824:	2a03      	cmp	r2, #3
  402826:	d8f2      	bhi.n	40280e <memcmp+0x32>
  402828:	2a00      	cmp	r2, #0
  40282a:	d1de      	bne.n	4027ea <memcmp+0xe>
  40282c:	e7ec      	b.n	402808 <memcmp+0x2c>
  40282e:	1b18      	subs	r0, r3, r4
  402830:	bc70      	pop	{r4, r5, r6}
  402832:	4770      	bx	lr
  402834:	4621      	mov	r1, r4
  402836:	4618      	mov	r0, r3
  402838:	e7d7      	b.n	4027ea <memcmp+0xe>
  40283a:	bf00      	nop

0040283c <memcpy>:
  40283c:	4684      	mov	ip, r0
  40283e:	ea41 0300 	orr.w	r3, r1, r0
  402842:	f013 0303 	ands.w	r3, r3, #3
  402846:	d149      	bne.n	4028dc <memcpy+0xa0>
  402848:	3a40      	subs	r2, #64	; 0x40
  40284a:	d323      	bcc.n	402894 <memcpy+0x58>
  40284c:	680b      	ldr	r3, [r1, #0]
  40284e:	6003      	str	r3, [r0, #0]
  402850:	684b      	ldr	r3, [r1, #4]
  402852:	6043      	str	r3, [r0, #4]
  402854:	688b      	ldr	r3, [r1, #8]
  402856:	6083      	str	r3, [r0, #8]
  402858:	68cb      	ldr	r3, [r1, #12]
  40285a:	60c3      	str	r3, [r0, #12]
  40285c:	690b      	ldr	r3, [r1, #16]
  40285e:	6103      	str	r3, [r0, #16]
  402860:	694b      	ldr	r3, [r1, #20]
  402862:	6143      	str	r3, [r0, #20]
  402864:	698b      	ldr	r3, [r1, #24]
  402866:	6183      	str	r3, [r0, #24]
  402868:	69cb      	ldr	r3, [r1, #28]
  40286a:	61c3      	str	r3, [r0, #28]
  40286c:	6a0b      	ldr	r3, [r1, #32]
  40286e:	6203      	str	r3, [r0, #32]
  402870:	6a4b      	ldr	r3, [r1, #36]	; 0x24
  402872:	6243      	str	r3, [r0, #36]	; 0x24
  402874:	6a8b      	ldr	r3, [r1, #40]	; 0x28
  402876:	6283      	str	r3, [r0, #40]	; 0x28
  402878:	6acb      	ldr	r3, [r1, #44]	; 0x2c
  40287a:	62c3      	str	r3, [r0, #44]	; 0x2c
  40287c:	6b0b      	ldr	r3, [r1, #48]	; 0x30
  40287e:	6303      	str	r3, [r0, #48]	; 0x30
  402880:	6b4b      	ldr	r3, [r1, #52]	; 0x34
  402882:	6343      	str	r3, [r0, #52]	; 0x34
  402884:	6b8b      	ldr	r3, [r1, #56]	; 0x38
  402886:	6383      	str	r3, [r0, #56]	; 0x38
  402888:	6bcb      	ldr	r3, [r1, #60]	; 0x3c
  40288a:	63c3      	str	r3, [r0, #60]	; 0x3c
  40288c:	3040      	adds	r0, #64	; 0x40
  40288e:	3140      	adds	r1, #64	; 0x40
  402890:	3a40      	subs	r2, #64	; 0x40
  402892:	d2db      	bcs.n	40284c <memcpy+0x10>
  402894:	3230      	adds	r2, #48	; 0x30
  402896:	d30b      	bcc.n	4028b0 <memcpy+0x74>
  402898:	680b      	ldr	r3, [r1, #0]
  40289a:	6003      	str	r3, [r0, #0]
  40289c:	684b      	ldr	r3, [r1, #4]
  40289e:	6043      	str	r3, [r0, #4]
  4028a0:	688b      	ldr	r3, [r1, #8]
  4028a2:	6083      	str	r3, [r0, #8]
  4028a4:	68cb      	ldr	r3, [r1, #12]
  4028a6:	60c3      	str	r3, [r0, #12]
  4028a8:	3010      	adds	r0, #16
  4028aa:	3110      	adds	r1, #16
  4028ac:	3a10      	subs	r2, #16
  4028ae:	d2f3      	bcs.n	402898 <memcpy+0x5c>
  4028b0:	320c      	adds	r2, #12
  4028b2:	d305      	bcc.n	4028c0 <memcpy+0x84>
  4028b4:	f851 3b04 	ldr.w	r3, [r1], #4
  4028b8:	f840 3b04 	str.w	r3, [r0], #4
  4028bc:	3a04      	subs	r2, #4
  4028be:	d2f9      	bcs.n	4028b4 <memcpy+0x78>
  4028c0:	3204      	adds	r2, #4
  4028c2:	d008      	beq.n	4028d6 <memcpy+0x9a>
  4028c4:	07d2      	lsls	r2, r2, #31
  4028c6:	bf1c      	itt	ne
  4028c8:	f811 3b01 	ldrbne.w	r3, [r1], #1
  4028cc:	f800 3b01 	strbne.w	r3, [r0], #1
  4028d0:	d301      	bcc.n	4028d6 <memcpy+0x9a>
  4028d2:	880b      	ldrh	r3, [r1, #0]
  4028d4:	8003      	strh	r3, [r0, #0]
  4028d6:	4660      	mov	r0, ip
  4028d8:	4770      	bx	lr
  4028da:	bf00      	nop
  4028dc:	2a08      	cmp	r2, #8
  4028de:	d313      	bcc.n	402908 <memcpy+0xcc>
  4028e0:	078b      	lsls	r3, r1, #30
  4028e2:	d0b1      	beq.n	402848 <memcpy+0xc>
  4028e4:	f010 0303 	ands.w	r3, r0, #3
  4028e8:	d0ae      	beq.n	402848 <memcpy+0xc>
  4028ea:	f1c3 0304 	rsb	r3, r3, #4
  4028ee:	1ad2      	subs	r2, r2, r3
  4028f0:	07db      	lsls	r3, r3, #31
  4028f2:	bf1c      	itt	ne
  4028f4:	f811 3b01 	ldrbne.w	r3, [r1], #1
  4028f8:	f800 3b01 	strbne.w	r3, [r0], #1
  4028fc:	d3a4      	bcc.n	402848 <memcpy+0xc>
  4028fe:	f831 3b02 	ldrh.w	r3, [r1], #2
  402902:	f820 3b02 	strh.w	r3, [r0], #2
  402906:	e79f      	b.n	402848 <memcpy+0xc>
  402908:	3a04      	subs	r2, #4
  40290a:	d3d9      	bcc.n	4028c0 <memcpy+0x84>
  40290c:	3a01      	subs	r2, #1
  40290e:	f811 3b01 	ldrb.w	r3, [r1], #1
  402912:	f800 3b01 	strb.w	r3, [r0], #1
  402916:	d2f9      	bcs.n	40290c <memcpy+0xd0>
  402918:	780b      	ldrb	r3, [r1, #0]
  40291a:	7003      	strb	r3, [r0, #0]
  40291c:	784b      	ldrb	r3, [r1, #1]
  40291e:	7043      	strb	r3, [r0, #1]
  402920:	788b      	ldrb	r3, [r1, #2]
  402922:	7083      	strb	r3, [r0, #2]
  402924:	4660      	mov	r0, ip
  402926:	4770      	bx	lr

00402928 <memset>:
  402928:	b470      	push	{r4, r5, r6}
  40292a:	0786      	lsls	r6, r0, #30
  40292c:	d046      	beq.n	4029bc <memset+0x94>
  40292e:	1e54      	subs	r4, r2, #1
  402930:	2a00      	cmp	r2, #0
  402932:	d041      	beq.n	4029b8 <memset+0x90>
  402934:	b2ca      	uxtb	r2, r1
  402936:	4603      	mov	r3, r0
  402938:	e002      	b.n	402940 <memset+0x18>
  40293a:	f114 34ff 	adds.w	r4, r4, #4294967295
  40293e:	d33b      	bcc.n	4029b8 <memset+0x90>
  402940:	f803 2b01 	strb.w	r2, [r3], #1
  402944:	079d      	lsls	r5, r3, #30
  402946:	d1f8      	bne.n	40293a <memset+0x12>
  402948:	2c03      	cmp	r4, #3
  40294a:	d92e      	bls.n	4029aa <memset+0x82>
  40294c:	b2cd      	uxtb	r5, r1
  40294e:	ea45 2505 	orr.w	r5, r5, r5, lsl #8
  402952:	2c0f      	cmp	r4, #15
  402954:	ea45 4505 	orr.w	r5, r5, r5, lsl #16
  402958:	d919      	bls.n	40298e <memset+0x66>
  40295a:	4626      	mov	r6, r4
  40295c:	f103 0210 	add.w	r2, r3, #16
  402960:	3e10      	subs	r6, #16
  402962:	2e0f      	cmp	r6, #15
  402964:	f842 5c10 	str.w	r5, [r2, #-16]
  402968:	f842 5c0c 	str.w	r5, [r2, #-12]
  40296c:	f842 5c08 	str.w	r5, [r2, #-8]
  402970:	f842 5c04 	str.w	r5, [r2, #-4]
  402974:	f102 0210 	add.w	r2, r2, #16
  402978:	d8f2      	bhi.n	402960 <memset+0x38>
  40297a:	f1a4 0210 	sub.w	r2, r4, #16
  40297e:	f022 020f 	bic.w	r2, r2, #15
  402982:	f004 040f 	and.w	r4, r4, #15
  402986:	3210      	adds	r2, #16
  402988:	2c03      	cmp	r4, #3
  40298a:	4413      	add	r3, r2
  40298c:	d90d      	bls.n	4029aa <memset+0x82>
  40298e:	461e      	mov	r6, r3
  402990:	4622      	mov	r2, r4
  402992:	3a04      	subs	r2, #4
  402994:	2a03      	cmp	r2, #3
  402996:	f846 5b04 	str.w	r5, [r6], #4
  40299a:	d8fa      	bhi.n	402992 <memset+0x6a>
  40299c:	1f22      	subs	r2, r4, #4
  40299e:	f022 0203 	bic.w	r2, r2, #3
  4029a2:	3204      	adds	r2, #4
  4029a4:	4413      	add	r3, r2
  4029a6:	f004 0403 	and.w	r4, r4, #3
  4029aa:	b12c      	cbz	r4, 4029b8 <memset+0x90>
  4029ac:	b2c9      	uxtb	r1, r1
  4029ae:	441c      	add	r4, r3
  4029b0:	f803 1b01 	strb.w	r1, [r3], #1
  4029b4:	429c      	cmp	r4, r3
  4029b6:	d1fb      	bne.n	4029b0 <memset+0x88>
  4029b8:	bc70      	pop	{r4, r5, r6}
  4029ba:	4770      	bx	lr
  4029bc:	4614      	mov	r4, r2
  4029be:	4603      	mov	r3, r0
  4029c0:	e7c2      	b.n	402948 <memset+0x20>
  4029c2:	bf00      	nop

004029c4 <__malloc_lock>:
  4029c4:	4770      	bx	lr
  4029c6:	bf00      	nop

004029c8 <__malloc_unlock>:
  4029c8:	4770      	bx	lr
  4029ca:	bf00      	nop

004029cc <_sbrk_r>:
  4029cc:	b538      	push	{r3, r4, r5, lr}
  4029ce:	2300      	movs	r3, #0
  4029d0:	4c06      	ldr	r4, [pc, #24]	; (4029ec <_sbrk_r+0x20>)
  4029d2:	4605      	mov	r5, r0
  4029d4:	4608      	mov	r0, r1
  4029d6:	6023      	str	r3, [r4, #0]
  4029d8:	f7fe fc88 	bl	4012ec <_sbrk>
  4029dc:	1c43      	adds	r3, r0, #1
  4029de:	d000      	beq.n	4029e2 <_sbrk_r+0x16>
  4029e0:	bd38      	pop	{r3, r4, r5, pc}
  4029e2:	6823      	ldr	r3, [r4, #0]
  4029e4:	2b00      	cmp	r3, #0
  4029e6:	d0fb      	beq.n	4029e0 <_sbrk_r+0x14>
  4029e8:	602b      	str	r3, [r5, #0]
  4029ea:	bd38      	pop	{r3, r4, r5, pc}
  4029ec:	20000f34 	.word	0x20000f34

004029f0 <setbuf>:
  4029f0:	2900      	cmp	r1, #0
  4029f2:	bf0c      	ite	eq
  4029f4:	2202      	moveq	r2, #2
  4029f6:	2200      	movne	r2, #0
  4029f8:	f44f 6380 	mov.w	r3, #1024	; 0x400
  4029fc:	f000 b800 	b.w	402a00 <setvbuf>

00402a00 <setvbuf>:
  402a00:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
  402a04:	4d50      	ldr	r5, [pc, #320]	; (402b48 <setvbuf+0x148>)
  402a06:	b083      	sub	sp, #12
  402a08:	682d      	ldr	r5, [r5, #0]
  402a0a:	4604      	mov	r4, r0
  402a0c:	460f      	mov	r7, r1
  402a0e:	4690      	mov	r8, r2
  402a10:	461e      	mov	r6, r3
  402a12:	b115      	cbz	r5, 402a1a <setvbuf+0x1a>
  402a14:	6bab      	ldr	r3, [r5, #56]	; 0x38
  402a16:	2b00      	cmp	r3, #0
  402a18:	d077      	beq.n	402b0a <setvbuf+0x10a>
  402a1a:	f1b8 0f02 	cmp.w	r8, #2
  402a1e:	d004      	beq.n	402a2a <setvbuf+0x2a>
  402a20:	f1b8 0f01 	cmp.w	r8, #1
  402a24:	d87d      	bhi.n	402b22 <setvbuf+0x122>
  402a26:	2e00      	cmp	r6, #0
  402a28:	db7b      	blt.n	402b22 <setvbuf+0x122>
  402a2a:	4621      	mov	r1, r4
  402a2c:	4628      	mov	r0, r5
  402a2e:	f003 fb45 	bl	4060bc <_fflush_r>
  402a32:	6b21      	ldr	r1, [r4, #48]	; 0x30
  402a34:	b141      	cbz	r1, 402a48 <setvbuf+0x48>
  402a36:	f104 0340 	add.w	r3, r4, #64	; 0x40
  402a3a:	4299      	cmp	r1, r3
  402a3c:	d002      	beq.n	402a44 <setvbuf+0x44>
  402a3e:	4628      	mov	r0, r5
  402a40:	f003 fca2 	bl	406388 <_free_r>
  402a44:	2300      	movs	r3, #0
  402a46:	6323      	str	r3, [r4, #48]	; 0x30
  402a48:	2200      	movs	r2, #0
  402a4a:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  402a4e:	61a2      	str	r2, [r4, #24]
  402a50:	6062      	str	r2, [r4, #4]
  402a52:	061a      	lsls	r2, r3, #24
  402a54:	d452      	bmi.n	402afc <setvbuf+0xfc>
  402a56:	f423 634a 	bic.w	r3, r3, #3232	; 0xca0
  402a5a:	f023 0303 	bic.w	r3, r3, #3
  402a5e:	f1b8 0f02 	cmp.w	r8, #2
  402a62:	81a3      	strh	r3, [r4, #12]
  402a64:	d037      	beq.n	402ad6 <setvbuf+0xd6>
  402a66:	ab01      	add	r3, sp, #4
  402a68:	466a      	mov	r2, sp
  402a6a:	4621      	mov	r1, r4
  402a6c:	4628      	mov	r0, r5
  402a6e:	f003 ff2f 	bl	4068d0 <__swhatbuf_r>
  402a72:	89a3      	ldrh	r3, [r4, #12]
  402a74:	4318      	orrs	r0, r3
  402a76:	81a0      	strh	r0, [r4, #12]
  402a78:	b316      	cbz	r6, 402ac0 <setvbuf+0xc0>
  402a7a:	b317      	cbz	r7, 402ac2 <setvbuf+0xc2>
  402a7c:	6bab      	ldr	r3, [r5, #56]	; 0x38
  402a7e:	2b00      	cmp	r3, #0
  402a80:	d04b      	beq.n	402b1a <setvbuf+0x11a>
  402a82:	9b00      	ldr	r3, [sp, #0]
  402a84:	6027      	str	r7, [r4, #0]
  402a86:	429e      	cmp	r6, r3
  402a88:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  402a8c:	6127      	str	r7, [r4, #16]
  402a8e:	bf1c      	itt	ne
  402a90:	f443 6300 	orrne.w	r3, r3, #2048	; 0x800
  402a94:	81a3      	strhne	r3, [r4, #12]
  402a96:	f1b8 0f01 	cmp.w	r8, #1
  402a9a:	bf04      	itt	eq
  402a9c:	f043 0301 	orreq.w	r3, r3, #1
  402aa0:	81a3      	strheq	r3, [r4, #12]
  402aa2:	b29b      	uxth	r3, r3
  402aa4:	f013 0008 	ands.w	r0, r3, #8
  402aa8:	6166      	str	r6, [r4, #20]
  402aaa:	d023      	beq.n	402af4 <setvbuf+0xf4>
  402aac:	f013 0001 	ands.w	r0, r3, #1
  402ab0:	d02f      	beq.n	402b12 <setvbuf+0x112>
  402ab2:	2000      	movs	r0, #0
  402ab4:	4276      	negs	r6, r6
  402ab6:	61a6      	str	r6, [r4, #24]
  402ab8:	60a0      	str	r0, [r4, #8]
  402aba:	b003      	add	sp, #12
  402abc:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
  402ac0:	9e00      	ldr	r6, [sp, #0]
  402ac2:	4630      	mov	r0, r6
  402ac4:	f7ff fbd8 	bl	402278 <malloc>
  402ac8:	4607      	mov	r7, r0
  402aca:	b368      	cbz	r0, 402b28 <setvbuf+0x128>
  402acc:	89a3      	ldrh	r3, [r4, #12]
  402ace:	f043 0380 	orr.w	r3, r3, #128	; 0x80
  402ad2:	81a3      	strh	r3, [r4, #12]
  402ad4:	e7d2      	b.n	402a7c <setvbuf+0x7c>
  402ad6:	2000      	movs	r0, #0
  402ad8:	2500      	movs	r5, #0
  402ada:	2101      	movs	r1, #1
  402adc:	f104 0243 	add.w	r2, r4, #67	; 0x43
  402ae0:	f043 0302 	orr.w	r3, r3, #2
  402ae4:	81a3      	strh	r3, [r4, #12]
  402ae6:	60a5      	str	r5, [r4, #8]
  402ae8:	6161      	str	r1, [r4, #20]
  402aea:	6022      	str	r2, [r4, #0]
  402aec:	6122      	str	r2, [r4, #16]
  402aee:	b003      	add	sp, #12
  402af0:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
  402af4:	60a0      	str	r0, [r4, #8]
  402af6:	b003      	add	sp, #12
  402af8:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
  402afc:	6921      	ldr	r1, [r4, #16]
  402afe:	4628      	mov	r0, r5
  402b00:	f003 fc42 	bl	406388 <_free_r>
  402b04:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  402b08:	e7a5      	b.n	402a56 <setvbuf+0x56>
  402b0a:	4628      	mov	r0, r5
  402b0c:	f003 fb6a 	bl	4061e4 <__sinit>
  402b10:	e783      	b.n	402a1a <setvbuf+0x1a>
  402b12:	60a6      	str	r6, [r4, #8]
  402b14:	b003      	add	sp, #12
  402b16:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
  402b1a:	4628      	mov	r0, r5
  402b1c:	f003 fb62 	bl	4061e4 <__sinit>
  402b20:	e7af      	b.n	402a82 <setvbuf+0x82>
  402b22:	f04f 30ff 	mov.w	r0, #4294967295
  402b26:	e7e2      	b.n	402aee <setvbuf+0xee>
  402b28:	f8dd 9000 	ldr.w	r9, [sp]
  402b2c:	45b1      	cmp	r9, r6
  402b2e:	d006      	beq.n	402b3e <setvbuf+0x13e>
  402b30:	4648      	mov	r0, r9
  402b32:	f7ff fba1 	bl	402278 <malloc>
  402b36:	4607      	mov	r7, r0
  402b38:	b108      	cbz	r0, 402b3e <setvbuf+0x13e>
  402b3a:	464e      	mov	r6, r9
  402b3c:	e7c6      	b.n	402acc <setvbuf+0xcc>
  402b3e:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  402b42:	f04f 30ff 	mov.w	r0, #4294967295
  402b46:	e7c7      	b.n	402ad8 <setvbuf+0xd8>
  402b48:	20000100 	.word	0x20000100

00402b4c <sprintf>:
  402b4c:	b40e      	push	{r1, r2, r3}
  402b4e:	4601      	mov	r1, r0
  402b50:	b5f0      	push	{r4, r5, r6, r7, lr}
  402b52:	f06f 4500 	mvn.w	r5, #2147483648	; 0x80000000
  402b56:	f44f 7702 	mov.w	r7, #520	; 0x208
  402b5a:	f64f 76ff 	movw	r6, #65535	; 0xffff
  402b5e:	b09c      	sub	sp, #112	; 0x70
  402b60:	ac21      	add	r4, sp, #132	; 0x84
  402b62:	f854 2b04 	ldr.w	r2, [r4], #4
  402b66:	4b0b      	ldr	r3, [pc, #44]	; (402b94 <sprintf+0x48>)
  402b68:	9102      	str	r1, [sp, #8]
  402b6a:	9106      	str	r1, [sp, #24]
  402b6c:	6818      	ldr	r0, [r3, #0]
  402b6e:	a902      	add	r1, sp, #8
  402b70:	4623      	mov	r3, r4
  402b72:	9401      	str	r4, [sp, #4]
  402b74:	f8ad 7014 	strh.w	r7, [sp, #20]
  402b78:	9504      	str	r5, [sp, #16]
  402b7a:	9507      	str	r5, [sp, #28]
  402b7c:	f8ad 6016 	strh.w	r6, [sp, #22]
  402b80:	f000 f8e8 	bl	402d54 <_svfprintf_r>
  402b84:	2200      	movs	r2, #0
  402b86:	9b02      	ldr	r3, [sp, #8]
  402b88:	701a      	strb	r2, [r3, #0]
  402b8a:	b01c      	add	sp, #112	; 0x70
  402b8c:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
  402b90:	b003      	add	sp, #12
  402b92:	4770      	bx	lr
  402b94:	20000100 	.word	0x20000100

00402b98 <strcat>:
  402b98:	0783      	lsls	r3, r0, #30
  402b9a:	b510      	push	{r4, lr}
  402b9c:	4604      	mov	r4, r0
  402b9e:	d110      	bne.n	402bc2 <strcat+0x2a>
  402ba0:	6802      	ldr	r2, [r0, #0]
  402ba2:	f1a2 3301 	sub.w	r3, r2, #16843009	; 0x1010101
  402ba6:	ea23 0302 	bic.w	r3, r3, r2
  402baa:	f013 3f80 	tst.w	r3, #2155905152	; 0x80808080
  402bae:	d108      	bne.n	402bc2 <strcat+0x2a>
  402bb0:	f850 2f04 	ldr.w	r2, [r0, #4]!
  402bb4:	f1a2 3301 	sub.w	r3, r2, #16843009	; 0x1010101
  402bb8:	ea23 0302 	bic.w	r3, r3, r2
  402bbc:	f013 3f80 	tst.w	r3, #2155905152	; 0x80808080
  402bc0:	d0f6      	beq.n	402bb0 <strcat+0x18>
  402bc2:	7803      	ldrb	r3, [r0, #0]
  402bc4:	b11b      	cbz	r3, 402bce <strcat+0x36>
  402bc6:	f810 3f01 	ldrb.w	r3, [r0, #1]!
  402bca:	2b00      	cmp	r3, #0
  402bcc:	d1fb      	bne.n	402bc6 <strcat+0x2e>
  402bce:	f000 f803 	bl	402bd8 <strcpy>
  402bd2:	4620      	mov	r0, r4
  402bd4:	bd10      	pop	{r4, pc}
  402bd6:	bf00      	nop

00402bd8 <strcpy>:
  402bd8:	ea80 0201 	eor.w	r2, r0, r1
  402bdc:	4684      	mov	ip, r0
  402bde:	f012 0f03 	tst.w	r2, #3
  402be2:	d14f      	bne.n	402c84 <strcpy+0xac>
  402be4:	f011 0f03 	tst.w	r1, #3
  402be8:	d132      	bne.n	402c50 <strcpy+0x78>
  402bea:	f84d 4d04 	str.w	r4, [sp, #-4]!
  402bee:	f011 0f04 	tst.w	r1, #4
  402bf2:	f851 3b04 	ldr.w	r3, [r1], #4
  402bf6:	d00b      	beq.n	402c10 <strcpy+0x38>
  402bf8:	f1a3 3201 	sub.w	r2, r3, #16843009	; 0x1010101
  402bfc:	439a      	bics	r2, r3
  402bfe:	f012 3f80 	tst.w	r2, #2155905152	; 0x80808080
  402c02:	bf04      	itt	eq
  402c04:	f84c 3b04 	streq.w	r3, [ip], #4
  402c08:	f851 3b04 	ldreq.w	r3, [r1], #4
  402c0c:	d116      	bne.n	402c3c <strcpy+0x64>
  402c0e:	bf00      	nop
  402c10:	f851 4b04 	ldr.w	r4, [r1], #4
  402c14:	f1a3 3201 	sub.w	r2, r3, #16843009	; 0x1010101
  402c18:	439a      	bics	r2, r3
  402c1a:	f012 3f80 	tst.w	r2, #2155905152	; 0x80808080
  402c1e:	f1a4 3201 	sub.w	r2, r4, #16843009	; 0x1010101
  402c22:	d10b      	bne.n	402c3c <strcpy+0x64>
  402c24:	f84c 3b04 	str.w	r3, [ip], #4
  402c28:	43a2      	bics	r2, r4
  402c2a:	f012 3f80 	tst.w	r2, #2155905152	; 0x80808080
  402c2e:	bf04      	itt	eq
  402c30:	f851 3b04 	ldreq.w	r3, [r1], #4
  402c34:	f84c 4b04 	streq.w	r4, [ip], #4
  402c38:	d0ea      	beq.n	402c10 <strcpy+0x38>
  402c3a:	4623      	mov	r3, r4
  402c3c:	f80c 3b01 	strb.w	r3, [ip], #1
  402c40:	f013 0fff 	tst.w	r3, #255	; 0xff
  402c44:	ea4f 2333 	mov.w	r3, r3, ror #8
  402c48:	d1f8      	bne.n	402c3c <strcpy+0x64>
  402c4a:	f85d 4b04 	ldr.w	r4, [sp], #4
  402c4e:	4770      	bx	lr
  402c50:	f011 0f01 	tst.w	r1, #1
  402c54:	d006      	beq.n	402c64 <strcpy+0x8c>
  402c56:	f811 2b01 	ldrb.w	r2, [r1], #1
  402c5a:	f80c 2b01 	strb.w	r2, [ip], #1
  402c5e:	2a00      	cmp	r2, #0
  402c60:	bf08      	it	eq
  402c62:	4770      	bxeq	lr
  402c64:	f011 0f02 	tst.w	r1, #2
  402c68:	d0bf      	beq.n	402bea <strcpy+0x12>
  402c6a:	f831 2b02 	ldrh.w	r2, [r1], #2
  402c6e:	f012 0fff 	tst.w	r2, #255	; 0xff
  402c72:	bf16      	itet	ne
  402c74:	f82c 2b02 	strhne.w	r2, [ip], #2
  402c78:	f88c 2000 	strbeq.w	r2, [ip]
  402c7c:	f412 4f7f 	tstne.w	r2, #65280	; 0xff00
  402c80:	d1b3      	bne.n	402bea <strcpy+0x12>
  402c82:	4770      	bx	lr
  402c84:	f811 2b01 	ldrb.w	r2, [r1], #1
  402c88:	f80c 2b01 	strb.w	r2, [ip], #1
  402c8c:	2a00      	cmp	r2, #0
  402c8e:	d1f9      	bne.n	402c84 <strcpy+0xac>
  402c90:	4770      	bx	lr
  402c92:	bf00      	nop

00402c94 <strlen>:
  402c94:	f020 0103 	bic.w	r1, r0, #3
  402c98:	f010 0003 	ands.w	r0, r0, #3
  402c9c:	f1c0 0000 	rsb	r0, r0, #0
  402ca0:	f851 3b04 	ldr.w	r3, [r1], #4
  402ca4:	f100 0c04 	add.w	ip, r0, #4
  402ca8:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
  402cac:	f06f 0200 	mvn.w	r2, #0
  402cb0:	bf1c      	itt	ne
  402cb2:	fa22 f20c 	lsrne.w	r2, r2, ip
  402cb6:	4313      	orrne	r3, r2
  402cb8:	f04f 0c01 	mov.w	ip, #1
  402cbc:	ea4c 2c0c 	orr.w	ip, ip, ip, lsl #8
  402cc0:	ea4c 4c0c 	orr.w	ip, ip, ip, lsl #16
  402cc4:	eba3 020c 	sub.w	r2, r3, ip
  402cc8:	ea22 0203 	bic.w	r2, r2, r3
  402ccc:	ea12 12cc 	ands.w	r2, r2, ip, lsl #7
  402cd0:	bf04      	itt	eq
  402cd2:	f851 3b04 	ldreq.w	r3, [r1], #4
  402cd6:	3004      	addeq	r0, #4
  402cd8:	d0f4      	beq.n	402cc4 <strlen+0x30>
  402cda:	f1c2 0100 	rsb	r1, r2, #0
  402cde:	ea02 0201 	and.w	r2, r2, r1
  402ce2:	fab2 f282 	clz	r2, r2
  402ce6:	f1c2 021f 	rsb	r2, r2, #31
  402cea:	eb00 00d2 	add.w	r0, r0, r2, lsr #3
  402cee:	4770      	bx	lr

00402cf0 <strncpy>:
  402cf0:	ea40 0301 	orr.w	r3, r0, r1
  402cf4:	f013 0f03 	tst.w	r3, #3
  402cf8:	b470      	push	{r4, r5, r6}
  402cfa:	4603      	mov	r3, r0
  402cfc:	d024      	beq.n	402d48 <strncpy+0x58>
  402cfe:	b1a2      	cbz	r2, 402d2a <strncpy+0x3a>
  402d00:	780c      	ldrb	r4, [r1, #0]
  402d02:	3a01      	subs	r2, #1
  402d04:	701c      	strb	r4, [r3, #0]
  402d06:	3101      	adds	r1, #1
  402d08:	3301      	adds	r3, #1
  402d0a:	b13c      	cbz	r4, 402d1c <strncpy+0x2c>
  402d0c:	b16a      	cbz	r2, 402d2a <strncpy+0x3a>
  402d0e:	f811 4b01 	ldrb.w	r4, [r1], #1
  402d12:	3a01      	subs	r2, #1
  402d14:	f803 4b01 	strb.w	r4, [r3], #1
  402d18:	2c00      	cmp	r4, #0
  402d1a:	d1f7      	bne.n	402d0c <strncpy+0x1c>
  402d1c:	b12a      	cbz	r2, 402d2a <strncpy+0x3a>
  402d1e:	2100      	movs	r1, #0
  402d20:	441a      	add	r2, r3
  402d22:	f803 1b01 	strb.w	r1, [r3], #1
  402d26:	429a      	cmp	r2, r3
  402d28:	d1fb      	bne.n	402d22 <strncpy+0x32>
  402d2a:	bc70      	pop	{r4, r5, r6}
  402d2c:	4770      	bx	lr
  402d2e:	460e      	mov	r6, r1
  402d30:	f851 5b04 	ldr.w	r5, [r1], #4
  402d34:	f1a5 3401 	sub.w	r4, r5, #16843009	; 0x1010101
  402d38:	ea24 0405 	bic.w	r4, r4, r5
  402d3c:	f014 3f80 	tst.w	r4, #2155905152	; 0x80808080
  402d40:	d105      	bne.n	402d4e <strncpy+0x5e>
  402d42:	3a04      	subs	r2, #4
  402d44:	f843 5b04 	str.w	r5, [r3], #4
  402d48:	2a03      	cmp	r2, #3
  402d4a:	d8f0      	bhi.n	402d2e <strncpy+0x3e>
  402d4c:	e7d7      	b.n	402cfe <strncpy+0xe>
  402d4e:	4631      	mov	r1, r6
  402d50:	e7d6      	b.n	402d00 <strncpy+0x10>
  402d52:	bf00      	nop

00402d54 <_svfprintf_r>:
  402d54:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  402d58:	b0c3      	sub	sp, #268	; 0x10c
  402d5a:	460c      	mov	r4, r1
  402d5c:	910b      	str	r1, [sp, #44]	; 0x2c
  402d5e:	4692      	mov	sl, r2
  402d60:	930f      	str	r3, [sp, #60]	; 0x3c
  402d62:	900c      	str	r0, [sp, #48]	; 0x30
  402d64:	f003 fda6 	bl	4068b4 <_localeconv_r>
  402d68:	6803      	ldr	r3, [r0, #0]
  402d6a:	4618      	mov	r0, r3
  402d6c:	931a      	str	r3, [sp, #104]	; 0x68
  402d6e:	f7ff ff91 	bl	402c94 <strlen>
  402d72:	89a3      	ldrh	r3, [r4, #12]
  402d74:	9019      	str	r0, [sp, #100]	; 0x64
  402d76:	0619      	lsls	r1, r3, #24
  402d78:	d503      	bpl.n	402d82 <_svfprintf_r+0x2e>
  402d7a:	6923      	ldr	r3, [r4, #16]
  402d7c:	2b00      	cmp	r3, #0
  402d7e:	f001 8031 	beq.w	403de4 <_svfprintf_r+0x1090>
  402d82:	2300      	movs	r3, #0
  402d84:	f10d 09c8 	add.w	r9, sp, #200	; 0xc8
  402d88:	46c8      	mov	r8, r9
  402d8a:	9314      	str	r3, [sp, #80]	; 0x50
  402d8c:	9313      	str	r3, [sp, #76]	; 0x4c
  402d8e:	9315      	str	r3, [sp, #84]	; 0x54
  402d90:	9318      	str	r3, [sp, #96]	; 0x60
  402d92:	931b      	str	r3, [sp, #108]	; 0x6c
  402d94:	9309      	str	r3, [sp, #36]	; 0x24
  402d96:	9316      	str	r3, [sp, #88]	; 0x58
  402d98:	9317      	str	r3, [sp, #92]	; 0x5c
  402d9a:	9327      	str	r3, [sp, #156]	; 0x9c
  402d9c:	9326      	str	r3, [sp, #152]	; 0x98
  402d9e:	f8cd 9094 	str.w	r9, [sp, #148]	; 0x94
  402da2:	f89a 3000 	ldrb.w	r3, [sl]
  402da6:	4654      	mov	r4, sl
  402da8:	b1eb      	cbz	r3, 402de6 <_svfprintf_r+0x92>
  402daa:	2b25      	cmp	r3, #37	; 0x25
  402dac:	d102      	bne.n	402db4 <_svfprintf_r+0x60>
  402dae:	e01a      	b.n	402de6 <_svfprintf_r+0x92>
  402db0:	2b25      	cmp	r3, #37	; 0x25
  402db2:	d003      	beq.n	402dbc <_svfprintf_r+0x68>
  402db4:	f814 3f01 	ldrb.w	r3, [r4, #1]!
  402db8:	2b00      	cmp	r3, #0
  402dba:	d1f9      	bne.n	402db0 <_svfprintf_r+0x5c>
  402dbc:	eba4 050a 	sub.w	r5, r4, sl
  402dc0:	b18d      	cbz	r5, 402de6 <_svfprintf_r+0x92>
  402dc2:	9b26      	ldr	r3, [sp, #152]	; 0x98
  402dc4:	9a27      	ldr	r2, [sp, #156]	; 0x9c
  402dc6:	3301      	adds	r3, #1
  402dc8:	442a      	add	r2, r5
  402dca:	2b07      	cmp	r3, #7
  402dcc:	f8c8 a000 	str.w	sl, [r8]
  402dd0:	f8c8 5004 	str.w	r5, [r8, #4]
  402dd4:	9227      	str	r2, [sp, #156]	; 0x9c
  402dd6:	9326      	str	r3, [sp, #152]	; 0x98
  402dd8:	f300 808a 	bgt.w	402ef0 <_svfprintf_r+0x19c>
  402ddc:	f108 0808 	add.w	r8, r8, #8
  402de0:	9b09      	ldr	r3, [sp, #36]	; 0x24
  402de2:	442b      	add	r3, r5
  402de4:	9309      	str	r3, [sp, #36]	; 0x24
  402de6:	7823      	ldrb	r3, [r4, #0]
  402de8:	2b00      	cmp	r3, #0
  402dea:	f000 8089 	beq.w	402f00 <_svfprintf_r+0x1ac>
  402dee:	2300      	movs	r3, #0
  402df0:	f04f 30ff 	mov.w	r0, #4294967295
  402df4:	461a      	mov	r2, r3
  402df6:	f88d 3077 	strb.w	r3, [sp, #119]	; 0x77
  402dfa:	4619      	mov	r1, r3
  402dfc:	930d      	str	r3, [sp, #52]	; 0x34
  402dfe:	469b      	mov	fp, r3
  402e00:	7863      	ldrb	r3, [r4, #1]
  402e02:	f104 0a01 	add.w	sl, r4, #1
  402e06:	900a      	str	r0, [sp, #40]	; 0x28
  402e08:	f10a 0a01 	add.w	sl, sl, #1
  402e0c:	f1a3 0020 	sub.w	r0, r3, #32
  402e10:	2858      	cmp	r0, #88	; 0x58
  402e12:	f200 83b6 	bhi.w	403582 <_svfprintf_r+0x82e>
  402e16:	e8df f010 	tbh	[pc, r0, lsl #1]
  402e1a:	034b      	.short	0x034b
  402e1c:	03b403b4 	.word	0x03b403b4
  402e20:	03b40353 	.word	0x03b40353
  402e24:	03b403b4 	.word	0x03b403b4
  402e28:	03b403b4 	.word	0x03b403b4
  402e2c:	005903b4 	.word	0x005903b4
  402e30:	03b40358 	.word	0x03b40358
  402e34:	02140066 	.word	0x02140066
  402e38:	022f03b4 	.word	0x022f03b4
  402e3c:	03a403a4 	.word	0x03a403a4
  402e40:	03a403a4 	.word	0x03a403a4
  402e44:	03a403a4 	.word	0x03a403a4
  402e48:	03a403a4 	.word	0x03a403a4
  402e4c:	03b403a4 	.word	0x03b403a4
  402e50:	03b403b4 	.word	0x03b403b4
  402e54:	03b403b4 	.word	0x03b403b4
  402e58:	03b403b4 	.word	0x03b403b4
  402e5c:	03b403b4 	.word	0x03b403b4
  402e60:	028b03b4 	.word	0x028b03b4
  402e64:	03b402d3 	.word	0x03b402d3
  402e68:	03b402d3 	.word	0x03b402d3
  402e6c:	03b403b4 	.word	0x03b403b4
  402e70:	031a03b4 	.word	0x031a03b4
  402e74:	03b403b4 	.word	0x03b403b4
  402e78:	03b4031f 	.word	0x03b4031f
  402e7c:	03b403b4 	.word	0x03b403b4
  402e80:	03b403b4 	.word	0x03b403b4
  402e84:	03b40234 	.word	0x03b40234
  402e88:	024b03b4 	.word	0x024b03b4
  402e8c:	03b403b4 	.word	0x03b403b4
  402e90:	03b403b4 	.word	0x03b403b4
  402e94:	03b403b4 	.word	0x03b403b4
  402e98:	03b403b4 	.word	0x03b403b4
  402e9c:	03b403b4 	.word	0x03b403b4
  402ea0:	039d0276 	.word	0x039d0276
  402ea4:	02d302d3 	.word	0x02d302d3
  402ea8:	036202d3 	.word	0x036202d3
  402eac:	03b4039d 	.word	0x03b4039d
  402eb0:	036703b4 	.word	0x036703b4
  402eb4:	037403b4 	.word	0x037403b4
  402eb8:	038b01dd 	.word	0x038b01dd
  402ebc:	03b4035d 	.word	0x03b4035d
  402ec0:	03b401f2 	.word	0x03b401f2
  402ec4:	03b40087 	.word	0x03b40087
  402ec8:	033103b4 	.word	0x033103b4
  402ecc:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
  402ece:	6823      	ldr	r3, [r4, #0]
  402ed0:	4618      	mov	r0, r3
  402ed2:	930d      	str	r3, [sp, #52]	; 0x34
  402ed4:	4623      	mov	r3, r4
  402ed6:	2800      	cmp	r0, #0
  402ed8:	f103 0304 	add.w	r3, r3, #4
  402edc:	930f      	str	r3, [sp, #60]	; 0x3c
  402ede:	da04      	bge.n	402eea <_svfprintf_r+0x196>
  402ee0:	9b0d      	ldr	r3, [sp, #52]	; 0x34
  402ee2:	425b      	negs	r3, r3
  402ee4:	930d      	str	r3, [sp, #52]	; 0x34
  402ee6:	f04b 0b04 	orr.w	fp, fp, #4
  402eea:	f89a 3000 	ldrb.w	r3, [sl]
  402eee:	e78b      	b.n	402e08 <_svfprintf_r+0xb4>
  402ef0:	aa25      	add	r2, sp, #148	; 0x94
  402ef2:	990b      	ldr	r1, [sp, #44]	; 0x2c
  402ef4:	980c      	ldr	r0, [sp, #48]	; 0x30
  402ef6:	f004 fb13 	bl	407520 <__ssprint_r>
  402efa:	b940      	cbnz	r0, 402f0e <_svfprintf_r+0x1ba>
  402efc:	46c8      	mov	r8, r9
  402efe:	e76f      	b.n	402de0 <_svfprintf_r+0x8c>
  402f00:	9b27      	ldr	r3, [sp, #156]	; 0x9c
  402f02:	b123      	cbz	r3, 402f0e <_svfprintf_r+0x1ba>
  402f04:	980c      	ldr	r0, [sp, #48]	; 0x30
  402f06:	aa25      	add	r2, sp, #148	; 0x94
  402f08:	990b      	ldr	r1, [sp, #44]	; 0x2c
  402f0a:	f004 fb09 	bl	407520 <__ssprint_r>
  402f0e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
  402f10:	899b      	ldrh	r3, [r3, #12]
  402f12:	f013 0f40 	tst.w	r3, #64	; 0x40
  402f16:	9b09      	ldr	r3, [sp, #36]	; 0x24
  402f18:	bf18      	it	ne
  402f1a:	f04f 33ff 	movne.w	r3, #4294967295
  402f1e:	9309      	str	r3, [sp, #36]	; 0x24
  402f20:	9809      	ldr	r0, [sp, #36]	; 0x24
  402f22:	b043      	add	sp, #268	; 0x10c
  402f24:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  402f28:	f01b 0f20 	tst.w	fp, #32
  402f2c:	9311      	str	r3, [sp, #68]	; 0x44
  402f2e:	f040 81af 	bne.w	403290 <_svfprintf_r+0x53c>
  402f32:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  402f34:	f01b 0f10 	tst.w	fp, #16
  402f38:	4613      	mov	r3, r2
  402f3a:	f040 8596 	bne.w	403a6a <_svfprintf_r+0xd16>
  402f3e:	f01b 0f40 	tst.w	fp, #64	; 0x40
  402f42:	f000 8592 	beq.w	403a6a <_svfprintf_r+0xd16>
  402f46:	2500      	movs	r5, #0
  402f48:	2301      	movs	r3, #1
  402f4a:	8814      	ldrh	r4, [r2, #0]
  402f4c:	3204      	adds	r2, #4
  402f4e:	920f      	str	r2, [sp, #60]	; 0x3c
  402f50:	2200      	movs	r2, #0
  402f52:	4617      	mov	r7, r2
  402f54:	f88d 2077 	strb.w	r2, [sp, #119]	; 0x77
  402f58:	990a      	ldr	r1, [sp, #40]	; 0x28
  402f5a:	1c4a      	adds	r2, r1, #1
  402f5c:	f000 8210 	beq.w	403380 <_svfprintf_r+0x62c>
  402f60:	f02b 0280 	bic.w	r2, fp, #128	; 0x80
  402f64:	9207      	str	r2, [sp, #28]
  402f66:	ea54 0205 	orrs.w	r2, r4, r5
  402f6a:	f040 820f 	bne.w	40338c <_svfprintf_r+0x638>
  402f6e:	2900      	cmp	r1, #0
  402f70:	f040 842d 	bne.w	4037ce <_svfprintf_r+0xa7a>
  402f74:	2b00      	cmp	r3, #0
  402f76:	f040 8535 	bne.w	4039e4 <_svfprintf_r+0xc90>
  402f7a:	f01b 0301 	ands.w	r3, fp, #1
  402f7e:	930e      	str	r3, [sp, #56]	; 0x38
  402f80:	f000 865e 	beq.w	403c40 <_svfprintf_r+0xeec>
  402f84:	2330      	movs	r3, #48	; 0x30
  402f86:	ae42      	add	r6, sp, #264	; 0x108
  402f88:	f806 3d41 	strb.w	r3, [r6, #-65]!
  402f8c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  402f8e:	9a0e      	ldr	r2, [sp, #56]	; 0x38
  402f90:	4293      	cmp	r3, r2
  402f92:	bfb8      	it	lt
  402f94:	4613      	movlt	r3, r2
  402f96:	9308      	str	r3, [sp, #32]
  402f98:	2300      	movs	r3, #0
  402f9a:	9312      	str	r3, [sp, #72]	; 0x48
  402f9c:	b117      	cbz	r7, 402fa4 <_svfprintf_r+0x250>
  402f9e:	9b08      	ldr	r3, [sp, #32]
  402fa0:	3301      	adds	r3, #1
  402fa2:	9308      	str	r3, [sp, #32]
  402fa4:	9b07      	ldr	r3, [sp, #28]
  402fa6:	f013 0302 	ands.w	r3, r3, #2
  402faa:	9310      	str	r3, [sp, #64]	; 0x40
  402fac:	d002      	beq.n	402fb4 <_svfprintf_r+0x260>
  402fae:	9b08      	ldr	r3, [sp, #32]
  402fb0:	3302      	adds	r3, #2
  402fb2:	9308      	str	r3, [sp, #32]
  402fb4:	9b07      	ldr	r3, [sp, #28]
  402fb6:	f013 0584 	ands.w	r5, r3, #132	; 0x84
  402fba:	f040 830e 	bne.w	4035da <_svfprintf_r+0x886>
  402fbe:	9b0d      	ldr	r3, [sp, #52]	; 0x34
  402fc0:	9a08      	ldr	r2, [sp, #32]
  402fc2:	eba3 0b02 	sub.w	fp, r3, r2
  402fc6:	f1bb 0f00 	cmp.w	fp, #0
  402fca:	f340 8306 	ble.w	4035da <_svfprintf_r+0x886>
  402fce:	f1bb 0f10 	cmp.w	fp, #16
  402fd2:	f340 87ae 	ble.w	403f32 <_svfprintf_r+0x11de>
  402fd6:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  402fd8:	4643      	mov	r3, r8
  402fda:	4621      	mov	r1, r4
  402fdc:	46a8      	mov	r8, r5
  402fde:	2710      	movs	r7, #16
  402fe0:	9a26      	ldr	r2, [sp, #152]	; 0x98
  402fe2:	9c0c      	ldr	r4, [sp, #48]	; 0x30
  402fe4:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
  402fe6:	e006      	b.n	402ff6 <_svfprintf_r+0x2a2>
  402fe8:	f1ab 0b10 	sub.w	fp, fp, #16
  402fec:	f1bb 0f10 	cmp.w	fp, #16
  402ff0:	f103 0308 	add.w	r3, r3, #8
  402ff4:	dd18      	ble.n	403028 <_svfprintf_r+0x2d4>
  402ff6:	3201      	adds	r2, #1
  402ff8:	48ab      	ldr	r0, [pc, #684]	; (4032a8 <_svfprintf_r+0x554>)
  402ffa:	3110      	adds	r1, #16
  402ffc:	2a07      	cmp	r2, #7
  402ffe:	9127      	str	r1, [sp, #156]	; 0x9c
  403000:	9226      	str	r2, [sp, #152]	; 0x98
  403002:	e883 0081 	stmia.w	r3, {r0, r7}
  403006:	ddef      	ble.n	402fe8 <_svfprintf_r+0x294>
  403008:	aa25      	add	r2, sp, #148	; 0x94
  40300a:	4629      	mov	r1, r5
  40300c:	4620      	mov	r0, r4
  40300e:	f004 fa87 	bl	407520 <__ssprint_r>
  403012:	2800      	cmp	r0, #0
  403014:	f47f af7b 	bne.w	402f0e <_svfprintf_r+0x1ba>
  403018:	f1ab 0b10 	sub.w	fp, fp, #16
  40301c:	f1bb 0f10 	cmp.w	fp, #16
  403020:	464b      	mov	r3, r9
  403022:	9927      	ldr	r1, [sp, #156]	; 0x9c
  403024:	9a26      	ldr	r2, [sp, #152]	; 0x98
  403026:	dce6      	bgt.n	402ff6 <_svfprintf_r+0x2a2>
  403028:	4645      	mov	r5, r8
  40302a:	460c      	mov	r4, r1
  40302c:	4698      	mov	r8, r3
  40302e:	3201      	adds	r2, #1
  403030:	4b9d      	ldr	r3, [pc, #628]	; (4032a8 <_svfprintf_r+0x554>)
  403032:	445c      	add	r4, fp
  403034:	2a07      	cmp	r2, #7
  403036:	9427      	str	r4, [sp, #156]	; 0x9c
  403038:	9226      	str	r2, [sp, #152]	; 0x98
  40303a:	e888 0808 	stmia.w	r8, {r3, fp}
  40303e:	f300 82c1 	bgt.w	4035c4 <_svfprintf_r+0x870>
  403042:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
  403046:	f108 0808 	add.w	r8, r8, #8
  40304a:	b187      	cbz	r7, 40306e <_svfprintf_r+0x31a>
  40304c:	2101      	movs	r1, #1
  40304e:	9b26      	ldr	r3, [sp, #152]	; 0x98
  403050:	440c      	add	r4, r1
  403052:	440b      	add	r3, r1
  403054:	f10d 0277 	add.w	r2, sp, #119	; 0x77
  403058:	2b07      	cmp	r3, #7
  40305a:	9427      	str	r4, [sp, #156]	; 0x9c
  40305c:	9326      	str	r3, [sp, #152]	; 0x98
  40305e:	f8c8 1004 	str.w	r1, [r8, #4]
  403062:	f8c8 2000 	str.w	r2, [r8]
  403066:	f300 83c9 	bgt.w	4037fc <_svfprintf_r+0xaa8>
  40306a:	f108 0808 	add.w	r8, r8, #8
  40306e:	9b10      	ldr	r3, [sp, #64]	; 0x40
  403070:	b17b      	cbz	r3, 403092 <_svfprintf_r+0x33e>
  403072:	2102      	movs	r1, #2
  403074:	9b26      	ldr	r3, [sp, #152]	; 0x98
  403076:	440c      	add	r4, r1
  403078:	3301      	adds	r3, #1
  40307a:	aa1e      	add	r2, sp, #120	; 0x78
  40307c:	2b07      	cmp	r3, #7
  40307e:	9427      	str	r4, [sp, #156]	; 0x9c
  403080:	9326      	str	r3, [sp, #152]	; 0x98
  403082:	f8c8 1004 	str.w	r1, [r8, #4]
  403086:	f8c8 2000 	str.w	r2, [r8]
  40308a:	f300 840d 	bgt.w	4038a8 <_svfprintf_r+0xb54>
  40308e:	f108 0808 	add.w	r8, r8, #8
  403092:	2d80      	cmp	r5, #128	; 0x80
  403094:	f000 8301 	beq.w	40369a <_svfprintf_r+0x946>
  403098:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  40309a:	9a0e      	ldr	r2, [sp, #56]	; 0x38
  40309c:	1a9f      	subs	r7, r3, r2
  40309e:	2f00      	cmp	r7, #0
  4030a0:	dd37      	ble.n	403112 <_svfprintf_r+0x3be>
  4030a2:	2f10      	cmp	r7, #16
  4030a4:	f340 8675 	ble.w	403d92 <_svfprintf_r+0x103e>
  4030a8:	4d80      	ldr	r5, [pc, #512]	; (4032ac <_svfprintf_r+0x558>)
  4030aa:	4642      	mov	r2, r8
  4030ac:	4621      	mov	r1, r4
  4030ae:	46b0      	mov	r8, r6
  4030b0:	f04f 0b10 	mov.w	fp, #16
  4030b4:	462e      	mov	r6, r5
  4030b6:	9b26      	ldr	r3, [sp, #152]	; 0x98
  4030b8:	9c0c      	ldr	r4, [sp, #48]	; 0x30
  4030ba:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
  4030bc:	e004      	b.n	4030c8 <_svfprintf_r+0x374>
  4030be:	3f10      	subs	r7, #16
  4030c0:	2f10      	cmp	r7, #16
  4030c2:	f102 0208 	add.w	r2, r2, #8
  4030c6:	dd15      	ble.n	4030f4 <_svfprintf_r+0x3a0>
  4030c8:	3301      	adds	r3, #1
  4030ca:	3110      	adds	r1, #16
  4030cc:	2b07      	cmp	r3, #7
  4030ce:	9127      	str	r1, [sp, #156]	; 0x9c
  4030d0:	9326      	str	r3, [sp, #152]	; 0x98
  4030d2:	e882 0840 	stmia.w	r2, {r6, fp}
  4030d6:	ddf2      	ble.n	4030be <_svfprintf_r+0x36a>
  4030d8:	aa25      	add	r2, sp, #148	; 0x94
  4030da:	4629      	mov	r1, r5
  4030dc:	4620      	mov	r0, r4
  4030de:	f004 fa1f 	bl	407520 <__ssprint_r>
  4030e2:	2800      	cmp	r0, #0
  4030e4:	f47f af13 	bne.w	402f0e <_svfprintf_r+0x1ba>
  4030e8:	3f10      	subs	r7, #16
  4030ea:	2f10      	cmp	r7, #16
  4030ec:	464a      	mov	r2, r9
  4030ee:	9927      	ldr	r1, [sp, #156]	; 0x9c
  4030f0:	9b26      	ldr	r3, [sp, #152]	; 0x98
  4030f2:	dce9      	bgt.n	4030c8 <_svfprintf_r+0x374>
  4030f4:	4635      	mov	r5, r6
  4030f6:	460c      	mov	r4, r1
  4030f8:	4646      	mov	r6, r8
  4030fa:	4690      	mov	r8, r2
  4030fc:	3301      	adds	r3, #1
  4030fe:	443c      	add	r4, r7
  403100:	2b07      	cmp	r3, #7
  403102:	9427      	str	r4, [sp, #156]	; 0x9c
  403104:	9326      	str	r3, [sp, #152]	; 0x98
  403106:	e888 00a0 	stmia.w	r8, {r5, r7}
  40310a:	f300 836c 	bgt.w	4037e6 <_svfprintf_r+0xa92>
  40310e:	f108 0808 	add.w	r8, r8, #8
  403112:	9b07      	ldr	r3, [sp, #28]
  403114:	05df      	lsls	r7, r3, #23
  403116:	f100 8262 	bmi.w	4035de <_svfprintf_r+0x88a>
  40311a:	9b26      	ldr	r3, [sp, #152]	; 0x98
  40311c:	990e      	ldr	r1, [sp, #56]	; 0x38
  40311e:	3301      	adds	r3, #1
  403120:	440c      	add	r4, r1
  403122:	2b07      	cmp	r3, #7
  403124:	9427      	str	r4, [sp, #156]	; 0x9c
  403126:	f8c8 6000 	str.w	r6, [r8]
  40312a:	f8c8 1004 	str.w	r1, [r8, #4]
  40312e:	9326      	str	r3, [sp, #152]	; 0x98
  403130:	f300 83af 	bgt.w	403892 <_svfprintf_r+0xb3e>
  403134:	f108 0808 	add.w	r8, r8, #8
  403138:	9b07      	ldr	r3, [sp, #28]
  40313a:	075b      	lsls	r3, r3, #29
  40313c:	d53b      	bpl.n	4031b6 <_svfprintf_r+0x462>
  40313e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
  403140:	9a08      	ldr	r2, [sp, #32]
  403142:	1a9d      	subs	r5, r3, r2
  403144:	2d00      	cmp	r5, #0
  403146:	dd36      	ble.n	4031b6 <_svfprintf_r+0x462>
  403148:	2d10      	cmp	r5, #16
  40314a:	f340 871d 	ble.w	403f88 <_svfprintf_r+0x1234>
  40314e:	2610      	movs	r6, #16
  403150:	9b26      	ldr	r3, [sp, #152]	; 0x98
  403152:	9f0c      	ldr	r7, [sp, #48]	; 0x30
  403154:	f8dd b02c 	ldr.w	fp, [sp, #44]	; 0x2c
  403158:	e004      	b.n	403164 <_svfprintf_r+0x410>
  40315a:	3d10      	subs	r5, #16
  40315c:	2d10      	cmp	r5, #16
  40315e:	f108 0808 	add.w	r8, r8, #8
  403162:	dd16      	ble.n	403192 <_svfprintf_r+0x43e>
  403164:	3301      	adds	r3, #1
  403166:	4a50      	ldr	r2, [pc, #320]	; (4032a8 <_svfprintf_r+0x554>)
  403168:	3410      	adds	r4, #16
  40316a:	2b07      	cmp	r3, #7
  40316c:	9427      	str	r4, [sp, #156]	; 0x9c
  40316e:	9326      	str	r3, [sp, #152]	; 0x98
  403170:	e888 0044 	stmia.w	r8, {r2, r6}
  403174:	ddf1      	ble.n	40315a <_svfprintf_r+0x406>
  403176:	aa25      	add	r2, sp, #148	; 0x94
  403178:	4659      	mov	r1, fp
  40317a:	4638      	mov	r0, r7
  40317c:	f004 f9d0 	bl	407520 <__ssprint_r>
  403180:	2800      	cmp	r0, #0
  403182:	f47f aec4 	bne.w	402f0e <_svfprintf_r+0x1ba>
  403186:	3d10      	subs	r5, #16
  403188:	2d10      	cmp	r5, #16
  40318a:	46c8      	mov	r8, r9
  40318c:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  40318e:	9b26      	ldr	r3, [sp, #152]	; 0x98
  403190:	dce8      	bgt.n	403164 <_svfprintf_r+0x410>
  403192:	3301      	adds	r3, #1
  403194:	4a44      	ldr	r2, [pc, #272]	; (4032a8 <_svfprintf_r+0x554>)
  403196:	442c      	add	r4, r5
  403198:	2b07      	cmp	r3, #7
  40319a:	9427      	str	r4, [sp, #156]	; 0x9c
  40319c:	9326      	str	r3, [sp, #152]	; 0x98
  40319e:	e888 0024 	stmia.w	r8, {r2, r5}
  4031a2:	dd08      	ble.n	4031b6 <_svfprintf_r+0x462>
  4031a4:	aa25      	add	r2, sp, #148	; 0x94
  4031a6:	990b      	ldr	r1, [sp, #44]	; 0x2c
  4031a8:	980c      	ldr	r0, [sp, #48]	; 0x30
  4031aa:	f004 f9b9 	bl	407520 <__ssprint_r>
  4031ae:	2800      	cmp	r0, #0
  4031b0:	f47f aead 	bne.w	402f0e <_svfprintf_r+0x1ba>
  4031b4:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  4031b6:	9b09      	ldr	r3, [sp, #36]	; 0x24
  4031b8:	9a0d      	ldr	r2, [sp, #52]	; 0x34
  4031ba:	9908      	ldr	r1, [sp, #32]
  4031bc:	428a      	cmp	r2, r1
  4031be:	bfac      	ite	ge
  4031c0:	189b      	addge	r3, r3, r2
  4031c2:	185b      	addlt	r3, r3, r1
  4031c4:	9309      	str	r3, [sp, #36]	; 0x24
  4031c6:	2c00      	cmp	r4, #0
  4031c8:	f040 82f7 	bne.w	4037ba <_svfprintf_r+0xa66>
  4031cc:	2300      	movs	r3, #0
  4031ce:	46c8      	mov	r8, r9
  4031d0:	9326      	str	r3, [sp, #152]	; 0x98
  4031d2:	e5e6      	b.n	402da2 <_svfprintf_r+0x4e>
  4031d4:	9311      	str	r3, [sp, #68]	; 0x44
  4031d6:	f01b 0320 	ands.w	r3, fp, #32
  4031da:	f040 8144 	bne.w	403466 <_svfprintf_r+0x712>
  4031de:	f01b 0210 	ands.w	r2, fp, #16
  4031e2:	f040 8462 	bne.w	403aaa <_svfprintf_r+0xd56>
  4031e6:	f01b 0340 	ands.w	r3, fp, #64	; 0x40
  4031ea:	f000 845e 	beq.w	403aaa <_svfprintf_r+0xd56>
  4031ee:	990f      	ldr	r1, [sp, #60]	; 0x3c
  4031f0:	4613      	mov	r3, r2
  4031f2:	460a      	mov	r2, r1
  4031f4:	3204      	adds	r2, #4
  4031f6:	880c      	ldrh	r4, [r1, #0]
  4031f8:	2500      	movs	r5, #0
  4031fa:	920f      	str	r2, [sp, #60]	; 0x3c
  4031fc:	e6a8      	b.n	402f50 <_svfprintf_r+0x1fc>
  4031fe:	2500      	movs	r5, #0
  403200:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  403202:	9311      	str	r3, [sp, #68]	; 0x44
  403204:	6816      	ldr	r6, [r2, #0]
  403206:	f88d 5077 	strb.w	r5, [sp, #119]	; 0x77
  40320a:	1d14      	adds	r4, r2, #4
  40320c:	2e00      	cmp	r6, #0
  40320e:	f000 86c9 	beq.w	403fa4 <_svfprintf_r+0x1250>
  403212:	9a0a      	ldr	r2, [sp, #40]	; 0x28
  403214:	1c53      	adds	r3, r2, #1
  403216:	f000 8617 	beq.w	403e48 <_svfprintf_r+0x10f4>
  40321a:	4629      	mov	r1, r5
  40321c:	4630      	mov	r0, r6
  40321e:	f003 fbdf 	bl	4069e0 <memchr>
  403222:	2800      	cmp	r0, #0
  403224:	f000 8709 	beq.w	40403a <_svfprintf_r+0x12e6>
  403228:	1b83      	subs	r3, r0, r6
  40322a:	950a      	str	r5, [sp, #40]	; 0x28
  40322c:	930e      	str	r3, [sp, #56]	; 0x38
  40322e:	940f      	str	r4, [sp, #60]	; 0x3c
  403230:	f8cd b01c 	str.w	fp, [sp, #28]
  403234:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
  403238:	9308      	str	r3, [sp, #32]
  40323a:	9512      	str	r5, [sp, #72]	; 0x48
  40323c:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
  403240:	e6ac      	b.n	402f9c <_svfprintf_r+0x248>
  403242:	f89a 3000 	ldrb.w	r3, [sl]
  403246:	f10a 0401 	add.w	r4, sl, #1
  40324a:	2b2a      	cmp	r3, #42	; 0x2a
  40324c:	f000 87bd 	beq.w	4041ca <_svfprintf_r+0x1476>
  403250:	f1a3 0030 	sub.w	r0, r3, #48	; 0x30
  403254:	2809      	cmp	r0, #9
  403256:	46a2      	mov	sl, r4
  403258:	f200 8714 	bhi.w	404084 <_svfprintf_r+0x1330>
  40325c:	2300      	movs	r3, #0
  40325e:	461c      	mov	r4, r3
  403260:	f81a 3b01 	ldrb.w	r3, [sl], #1
  403264:	eb04 0484 	add.w	r4, r4, r4, lsl #2
  403268:	eb00 0444 	add.w	r4, r0, r4, lsl #1
  40326c:	f1a3 0030 	sub.w	r0, r3, #48	; 0x30
  403270:	2809      	cmp	r0, #9
  403272:	d9f5      	bls.n	403260 <_svfprintf_r+0x50c>
  403274:	940a      	str	r4, [sp, #40]	; 0x28
  403276:	e5c9      	b.n	402e0c <_svfprintf_r+0xb8>
  403278:	f04b 0b80 	orr.w	fp, fp, #128	; 0x80
  40327c:	f89a 3000 	ldrb.w	r3, [sl]
  403280:	e5c2      	b.n	402e08 <_svfprintf_r+0xb4>
  403282:	f04b 0b10 	orr.w	fp, fp, #16
  403286:	f01b 0f20 	tst.w	fp, #32
  40328a:	9311      	str	r3, [sp, #68]	; 0x44
  40328c:	f43f ae51 	beq.w	402f32 <_svfprintf_r+0x1de>
  403290:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
  403292:	3407      	adds	r4, #7
  403294:	f024 0307 	bic.w	r3, r4, #7
  403298:	f103 0208 	add.w	r2, r3, #8
  40329c:	e9d3 4500 	ldrd	r4, r5, [r3]
  4032a0:	920f      	str	r2, [sp, #60]	; 0x3c
  4032a2:	2301      	movs	r3, #1
  4032a4:	e654      	b.n	402f50 <_svfprintf_r+0x1fc>
  4032a6:	bf00      	nop
  4032a8:	00408f20 	.word	0x00408f20
  4032ac:	00408f30 	.word	0x00408f30
  4032b0:	9311      	str	r3, [sp, #68]	; 0x44
  4032b2:	2a00      	cmp	r2, #0
  4032b4:	f040 87a8 	bne.w	404208 <_svfprintf_r+0x14b4>
  4032b8:	4bbd      	ldr	r3, [pc, #756]	; (4035b0 <_svfprintf_r+0x85c>)
  4032ba:	f01b 0f20 	tst.w	fp, #32
  4032be:	9318      	str	r3, [sp, #96]	; 0x60
  4032c0:	f040 80e6 	bne.w	403490 <_svfprintf_r+0x73c>
  4032c4:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  4032c6:	f01b 0f10 	tst.w	fp, #16
  4032ca:	4613      	mov	r3, r2
  4032cc:	f040 83d4 	bne.w	403a78 <_svfprintf_r+0xd24>
  4032d0:	f01b 0f40 	tst.w	fp, #64	; 0x40
  4032d4:	f000 83d0 	beq.w	403a78 <_svfprintf_r+0xd24>
  4032d8:	2500      	movs	r5, #0
  4032da:	3304      	adds	r3, #4
  4032dc:	8814      	ldrh	r4, [r2, #0]
  4032de:	930f      	str	r3, [sp, #60]	; 0x3c
  4032e0:	f01b 0f01 	tst.w	fp, #1
  4032e4:	f000 80e2 	beq.w	4034ac <_svfprintf_r+0x758>
  4032e8:	ea54 0305 	orrs.w	r3, r4, r5
  4032ec:	f000 80de 	beq.w	4034ac <_svfprintf_r+0x758>
  4032f0:	2330      	movs	r3, #48	; 0x30
  4032f2:	f89d 2044 	ldrb.w	r2, [sp, #68]	; 0x44
  4032f6:	f88d 3078 	strb.w	r3, [sp, #120]	; 0x78
  4032fa:	f88d 2079 	strb.w	r2, [sp, #121]	; 0x79
  4032fe:	f04b 0b02 	orr.w	fp, fp, #2
  403302:	2302      	movs	r3, #2
  403304:	e624      	b.n	402f50 <_svfprintf_r+0x1fc>
  403306:	2201      	movs	r2, #1
  403308:	9311      	str	r3, [sp, #68]	; 0x44
  40330a:	2300      	movs	r3, #0
  40330c:	4611      	mov	r1, r2
  40330e:	980f      	ldr	r0, [sp, #60]	; 0x3c
  403310:	9208      	str	r2, [sp, #32]
  403312:	6802      	ldr	r2, [r0, #0]
  403314:	461f      	mov	r7, r3
  403316:	f88d 3077 	strb.w	r3, [sp, #119]	; 0x77
  40331a:	930a      	str	r3, [sp, #40]	; 0x28
  40331c:	9312      	str	r3, [sp, #72]	; 0x48
  40331e:	1d03      	adds	r3, r0, #4
  403320:	f8cd b01c 	str.w	fp, [sp, #28]
  403324:	910e      	str	r1, [sp, #56]	; 0x38
  403326:	f88d 20a0 	strb.w	r2, [sp, #160]	; 0xa0
  40332a:	930f      	str	r3, [sp, #60]	; 0x3c
  40332c:	ae28      	add	r6, sp, #160	; 0xa0
  40332e:	e639      	b.n	402fa4 <_svfprintf_r+0x250>
  403330:	9311      	str	r3, [sp, #68]	; 0x44
  403332:	2a00      	cmp	r2, #0
  403334:	f040 877f 	bne.w	404236 <_svfprintf_r+0x14e2>
  403338:	f04b 0b10 	orr.w	fp, fp, #16
  40333c:	f01b 0f20 	tst.w	fp, #32
  403340:	f040 8471 	bne.w	403c26 <_svfprintf_r+0xed2>
  403344:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  403346:	f01b 0f10 	tst.w	fp, #16
  40334a:	4613      	mov	r3, r2
  40334c:	f040 8399 	bne.w	403a82 <_svfprintf_r+0xd2e>
  403350:	f01b 0f40 	tst.w	fp, #64	; 0x40
  403354:	f000 8395 	beq.w	403a82 <_svfprintf_r+0xd2e>
  403358:	f9b2 4000 	ldrsh.w	r4, [r2]
  40335c:	3304      	adds	r3, #4
  40335e:	17e5      	asrs	r5, r4, #31
  403360:	930f      	str	r3, [sp, #60]	; 0x3c
  403362:	4622      	mov	r2, r4
  403364:	462b      	mov	r3, r5
  403366:	2a00      	cmp	r2, #0
  403368:	f173 0300 	sbcs.w	r3, r3, #0
  40336c:	f2c0 8394 	blt.w	403a98 <_svfprintf_r+0xd44>
  403370:	990a      	ldr	r1, [sp, #40]	; 0x28
  403372:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
  403376:	1c4a      	adds	r2, r1, #1
  403378:	f04f 0301 	mov.w	r3, #1
  40337c:	f47f adf0 	bne.w	402f60 <_svfprintf_r+0x20c>
  403380:	ea54 0205 	orrs.w	r2, r4, r5
  403384:	f000 8225 	beq.w	4037d2 <_svfprintf_r+0xa7e>
  403388:	f8cd b01c 	str.w	fp, [sp, #28]
  40338c:	2b01      	cmp	r3, #1
  40338e:	f000 830a 	beq.w	4039a6 <_svfprintf_r+0xc52>
  403392:	2b02      	cmp	r3, #2
  403394:	f040 8298 	bne.w	4038c8 <_svfprintf_r+0xb74>
  403398:	464e      	mov	r6, r9
  40339a:	9818      	ldr	r0, [sp, #96]	; 0x60
  40339c:	0923      	lsrs	r3, r4, #4
  40339e:	ea43 7305 	orr.w	r3, r3, r5, lsl #28
  4033a2:	0929      	lsrs	r1, r5, #4
  4033a4:	f004 020f 	and.w	r2, r4, #15
  4033a8:	460d      	mov	r5, r1
  4033aa:	461c      	mov	r4, r3
  4033ac:	5c83      	ldrb	r3, [r0, r2]
  4033ae:	f806 3d01 	strb.w	r3, [r6, #-1]!
  4033b2:	ea54 0305 	orrs.w	r3, r4, r5
  4033b6:	d1f1      	bne.n	40339c <_svfprintf_r+0x648>
  4033b8:	eba9 0306 	sub.w	r3, r9, r6
  4033bc:	930e      	str	r3, [sp, #56]	; 0x38
  4033be:	e5e5      	b.n	402f8c <_svfprintf_r+0x238>
  4033c0:	9311      	str	r3, [sp, #68]	; 0x44
  4033c2:	2a00      	cmp	r2, #0
  4033c4:	f040 8733 	bne.w	40422e <_svfprintf_r+0x14da>
  4033c8:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
  4033ca:	f01b 0f08 	tst.w	fp, #8
  4033ce:	f104 0407 	add.w	r4, r4, #7
  4033d2:	f000 84cb 	beq.w	403d6c <_svfprintf_r+0x1018>
  4033d6:	f024 0307 	bic.w	r3, r4, #7
  4033da:	f103 0208 	add.w	r2, r3, #8
  4033de:	920f      	str	r2, [sp, #60]	; 0x3c
  4033e0:	681a      	ldr	r2, [r3, #0]
  4033e2:	685b      	ldr	r3, [r3, #4]
  4033e4:	9214      	str	r2, [sp, #80]	; 0x50
  4033e6:	9315      	str	r3, [sp, #84]	; 0x54
  4033e8:	9b15      	ldr	r3, [sp, #84]	; 0x54
  4033ea:	9d14      	ldr	r5, [sp, #80]	; 0x50
  4033ec:	f023 4400 	bic.w	r4, r3, #2147483648	; 0x80000000
  4033f0:	4628      	mov	r0, r5
  4033f2:	4621      	mov	r1, r4
  4033f4:	f04f 32ff 	mov.w	r2, #4294967295
  4033f8:	4b6e      	ldr	r3, [pc, #440]	; (4035b4 <_svfprintf_r+0x860>)
  4033fa:	f004 ff2f 	bl	40825c <__aeabi_dcmpun>
  4033fe:	2800      	cmp	r0, #0
  403400:	f040 8430 	bne.w	403c64 <_svfprintf_r+0xf10>
  403404:	4628      	mov	r0, r5
  403406:	4621      	mov	r1, r4
  403408:	f04f 32ff 	mov.w	r2, #4294967295
  40340c:	4b69      	ldr	r3, [pc, #420]	; (4035b4 <_svfprintf_r+0x860>)
  40340e:	f004 ff07 	bl	408220 <__aeabi_dcmple>
  403412:	2800      	cmp	r0, #0
  403414:	f040 8426 	bne.w	403c64 <_svfprintf_r+0xf10>
  403418:	a814      	add	r0, sp, #80	; 0x50
  40341a:	c80f      	ldmia	r0, {r0, r1, r2, r3}
  40341c:	f004 fef6 	bl	40820c <__aeabi_dcmplt>
  403420:	2800      	cmp	r0, #0
  403422:	f040 85d1 	bne.w	403fc8 <_svfprintf_r+0x1274>
  403426:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
  40342a:	2303      	movs	r3, #3
  40342c:	461a      	mov	r2, r3
  40342e:	9308      	str	r3, [sp, #32]
  403430:	2300      	movs	r3, #0
  403432:	4619      	mov	r1, r3
  403434:	930a      	str	r3, [sp, #40]	; 0x28
  403436:	4e60      	ldr	r6, [pc, #384]	; (4035b8 <_svfprintf_r+0x864>)
  403438:	4b60      	ldr	r3, [pc, #384]	; (4035bc <_svfprintf_r+0x868>)
  40343a:	920e      	str	r2, [sp, #56]	; 0x38
  40343c:	9a11      	ldr	r2, [sp, #68]	; 0x44
  40343e:	f02b 0080 	bic.w	r0, fp, #128	; 0x80
  403442:	9007      	str	r0, [sp, #28]
  403444:	9112      	str	r1, [sp, #72]	; 0x48
  403446:	2a47      	cmp	r2, #71	; 0x47
  403448:	bfd8      	it	le
  40344a:	461e      	movle	r6, r3
  40344c:	e5a6      	b.n	402f9c <_svfprintf_r+0x248>
  40344e:	f04b 0b08 	orr.w	fp, fp, #8
  403452:	f89a 3000 	ldrb.w	r3, [sl]
  403456:	e4d7      	b.n	402e08 <_svfprintf_r+0xb4>
  403458:	f04b 0b10 	orr.w	fp, fp, #16
  40345c:	9311      	str	r3, [sp, #68]	; 0x44
  40345e:	f01b 0320 	ands.w	r3, fp, #32
  403462:	f43f aebc 	beq.w	4031de <_svfprintf_r+0x48a>
  403466:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
  403468:	3407      	adds	r4, #7
  40346a:	f024 0307 	bic.w	r3, r4, #7
  40346e:	f103 0208 	add.w	r2, r3, #8
  403472:	e9d3 4500 	ldrd	r4, r5, [r3]
  403476:	920f      	str	r2, [sp, #60]	; 0x3c
  403478:	2300      	movs	r3, #0
  40347a:	e569      	b.n	402f50 <_svfprintf_r+0x1fc>
  40347c:	9311      	str	r3, [sp, #68]	; 0x44
  40347e:	2a00      	cmp	r2, #0
  403480:	f040 86be 	bne.w	404200 <_svfprintf_r+0x14ac>
  403484:	4b4e      	ldr	r3, [pc, #312]	; (4035c0 <_svfprintf_r+0x86c>)
  403486:	f01b 0f20 	tst.w	fp, #32
  40348a:	9318      	str	r3, [sp, #96]	; 0x60
  40348c:	f43f af1a 	beq.w	4032c4 <_svfprintf_r+0x570>
  403490:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
  403492:	f01b 0f01 	tst.w	fp, #1
  403496:	f104 0407 	add.w	r4, r4, #7
  40349a:	f024 0307 	bic.w	r3, r4, #7
  40349e:	f103 0208 	add.w	r2, r3, #8
  4034a2:	920f      	str	r2, [sp, #60]	; 0x3c
  4034a4:	e9d3 4500 	ldrd	r4, r5, [r3]
  4034a8:	f47f af1e 	bne.w	4032e8 <_svfprintf_r+0x594>
  4034ac:	2302      	movs	r3, #2
  4034ae:	e54f      	b.n	402f50 <_svfprintf_r+0x1fc>
  4034b0:	f89a 3000 	ldrb.w	r3, [sl]
  4034b4:	2900      	cmp	r1, #0
  4034b6:	f47f aca7 	bne.w	402e08 <_svfprintf_r+0xb4>
  4034ba:	2201      	movs	r2, #1
  4034bc:	2120      	movs	r1, #32
  4034be:	e4a3      	b.n	402e08 <_svfprintf_r+0xb4>
  4034c0:	f04b 0b01 	orr.w	fp, fp, #1
  4034c4:	f89a 3000 	ldrb.w	r3, [sl]
  4034c8:	e49e      	b.n	402e08 <_svfprintf_r+0xb4>
  4034ca:	f89a 3000 	ldrb.w	r3, [sl]
  4034ce:	2201      	movs	r2, #1
  4034d0:	212b      	movs	r1, #43	; 0x2b
  4034d2:	e499      	b.n	402e08 <_svfprintf_r+0xb4>
  4034d4:	f04b 0b20 	orr.w	fp, fp, #32
  4034d8:	f89a 3000 	ldrb.w	r3, [sl]
  4034dc:	e494      	b.n	402e08 <_svfprintf_r+0xb4>
  4034de:	f04b 0b40 	orr.w	fp, fp, #64	; 0x40
  4034e2:	f89a 3000 	ldrb.w	r3, [sl]
  4034e6:	e48f      	b.n	402e08 <_svfprintf_r+0xb4>
  4034e8:	f89a 3000 	ldrb.w	r3, [sl]
  4034ec:	2b6c      	cmp	r3, #108	; 0x6c
  4034ee:	bf03      	ittte	eq
  4034f0:	f89a 3001 	ldrbeq.w	r3, [sl, #1]
  4034f4:	f04b 0b20 	orreq.w	fp, fp, #32
  4034f8:	f10a 0a01 	addeq.w	sl, sl, #1
  4034fc:	f04b 0b10 	orrne.w	fp, fp, #16
  403500:	e482      	b.n	402e08 <_svfprintf_r+0xb4>
  403502:	2a00      	cmp	r2, #0
  403504:	f040 8678 	bne.w	4041f8 <_svfprintf_r+0x14a4>
  403508:	f01b 0f20 	tst.w	fp, #32
  40350c:	f040 844f 	bne.w	403dae <_svfprintf_r+0x105a>
  403510:	f01b 0f10 	tst.w	fp, #16
  403514:	f040 8435 	bne.w	403d82 <_svfprintf_r+0x102e>
  403518:	f01b 0f40 	tst.w	fp, #64	; 0x40
  40351c:	f000 8431 	beq.w	403d82 <_svfprintf_r+0x102e>
  403520:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  403522:	6813      	ldr	r3, [r2, #0]
  403524:	3204      	adds	r2, #4
  403526:	920f      	str	r2, [sp, #60]	; 0x3c
  403528:	f8bd 2024 	ldrh.w	r2, [sp, #36]	; 0x24
  40352c:	801a      	strh	r2, [r3, #0]
  40352e:	e438      	b.n	402da2 <_svfprintf_r+0x4e>
  403530:	2378      	movs	r3, #120	; 0x78
  403532:	2230      	movs	r2, #48	; 0x30
  403534:	980f      	ldr	r0, [sp, #60]	; 0x3c
  403536:	f88d 3079 	strb.w	r3, [sp, #121]	; 0x79
  40353a:	9311      	str	r3, [sp, #68]	; 0x44
  40353c:	1d03      	adds	r3, r0, #4
  40353e:	930f      	str	r3, [sp, #60]	; 0x3c
  403540:	4b1f      	ldr	r3, [pc, #124]	; (4035c0 <_svfprintf_r+0x86c>)
  403542:	6804      	ldr	r4, [r0, #0]
  403544:	9318      	str	r3, [sp, #96]	; 0x60
  403546:	f04b 0b02 	orr.w	fp, fp, #2
  40354a:	f88d 2078 	strb.w	r2, [sp, #120]	; 0x78
  40354e:	2500      	movs	r5, #0
  403550:	2302      	movs	r3, #2
  403552:	e4fd      	b.n	402f50 <_svfprintf_r+0x1fc>
  403554:	9311      	str	r3, [sp, #68]	; 0x44
  403556:	2a00      	cmp	r2, #0
  403558:	f43f aef0 	beq.w	40333c <_svfprintf_r+0x5e8>
  40355c:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
  403560:	e6ec      	b.n	40333c <_svfprintf_r+0x5e8>
  403562:	2000      	movs	r0, #0
  403564:	4604      	mov	r4, r0
  403566:	f1a3 0030 	sub.w	r0, r3, #48	; 0x30
  40356a:	f81a 3b01 	ldrb.w	r3, [sl], #1
  40356e:	eb04 0484 	add.w	r4, r4, r4, lsl #2
  403572:	eb00 0444 	add.w	r4, r0, r4, lsl #1
  403576:	f1a3 0030 	sub.w	r0, r3, #48	; 0x30
  40357a:	2809      	cmp	r0, #9
  40357c:	d9f5      	bls.n	40356a <_svfprintf_r+0x816>
  40357e:	940d      	str	r4, [sp, #52]	; 0x34
  403580:	e444      	b.n	402e0c <_svfprintf_r+0xb8>
  403582:	9311      	str	r3, [sp, #68]	; 0x44
  403584:	2a00      	cmp	r2, #0
  403586:	f040 8646 	bne.w	404216 <_svfprintf_r+0x14c2>
  40358a:	9a11      	ldr	r2, [sp, #68]	; 0x44
  40358c:	2a00      	cmp	r2, #0
  40358e:	f43f acb7 	beq.w	402f00 <_svfprintf_r+0x1ac>
  403592:	2300      	movs	r3, #0
  403594:	2101      	movs	r1, #1
  403596:	461f      	mov	r7, r3
  403598:	9108      	str	r1, [sp, #32]
  40359a:	f88d 20a0 	strb.w	r2, [sp, #160]	; 0xa0
  40359e:	f8cd b01c 	str.w	fp, [sp, #28]
  4035a2:	f88d 3077 	strb.w	r3, [sp, #119]	; 0x77
  4035a6:	930a      	str	r3, [sp, #40]	; 0x28
  4035a8:	9312      	str	r3, [sp, #72]	; 0x48
  4035aa:	910e      	str	r1, [sp, #56]	; 0x38
  4035ac:	ae28      	add	r6, sp, #160	; 0xa0
  4035ae:	e4f9      	b.n	402fa4 <_svfprintf_r+0x250>
  4035b0:	00408eec 	.word	0x00408eec
  4035b4:	7fefffff 	.word	0x7fefffff
  4035b8:	00408ee0 	.word	0x00408ee0
  4035bc:	00408edc 	.word	0x00408edc
  4035c0:	00408f00 	.word	0x00408f00
  4035c4:	aa25      	add	r2, sp, #148	; 0x94
  4035c6:	990b      	ldr	r1, [sp, #44]	; 0x2c
  4035c8:	980c      	ldr	r0, [sp, #48]	; 0x30
  4035ca:	f003 ffa9 	bl	407520 <__ssprint_r>
  4035ce:	2800      	cmp	r0, #0
  4035d0:	f47f ac9d 	bne.w	402f0e <_svfprintf_r+0x1ba>
  4035d4:	46c8      	mov	r8, r9
  4035d6:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
  4035da:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  4035dc:	e535      	b.n	40304a <_svfprintf_r+0x2f6>
  4035de:	9b11      	ldr	r3, [sp, #68]	; 0x44
  4035e0:	2b65      	cmp	r3, #101	; 0x65
  4035e2:	f340 8099 	ble.w	403718 <_svfprintf_r+0x9c4>
  4035e6:	a814      	add	r0, sp, #80	; 0x50
  4035e8:	c80f      	ldmia	r0, {r0, r1, r2, r3}
  4035ea:	f004 fe05 	bl	4081f8 <__aeabi_dcmpeq>
  4035ee:	2800      	cmp	r0, #0
  4035f0:	f000 8192 	beq.w	403918 <_svfprintf_r+0xbc4>
  4035f4:	2101      	movs	r1, #1
  4035f6:	9b26      	ldr	r3, [sp, #152]	; 0x98
  4035f8:	4ab4      	ldr	r2, [pc, #720]	; (4038cc <_svfprintf_r+0xb78>)
  4035fa:	440b      	add	r3, r1
  4035fc:	440c      	add	r4, r1
  4035fe:	2b07      	cmp	r3, #7
  403600:	9427      	str	r4, [sp, #156]	; 0x9c
  403602:	9326      	str	r3, [sp, #152]	; 0x98
  403604:	f8c8 1004 	str.w	r1, [r8, #4]
  403608:	f8c8 2000 	str.w	r2, [r8]
  40360c:	f300 83c5 	bgt.w	403d9a <_svfprintf_r+0x1046>
  403610:	f108 0808 	add.w	r8, r8, #8
  403614:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
  403616:	9a13      	ldr	r2, [sp, #76]	; 0x4c
  403618:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  40361a:	4293      	cmp	r3, r2
  40361c:	db03      	blt.n	403626 <_svfprintf_r+0x8d2>
  40361e:	9b07      	ldr	r3, [sp, #28]
  403620:	07dd      	lsls	r5, r3, #31
  403622:	f57f ad89 	bpl.w	403138 <_svfprintf_r+0x3e4>
  403626:	9b26      	ldr	r3, [sp, #152]	; 0x98
  403628:	9919      	ldr	r1, [sp, #100]	; 0x64
  40362a:	3301      	adds	r3, #1
  40362c:	9a1a      	ldr	r2, [sp, #104]	; 0x68
  40362e:	440c      	add	r4, r1
  403630:	2b07      	cmp	r3, #7
  403632:	f8c8 2000 	str.w	r2, [r8]
  403636:	f8c8 1004 	str.w	r1, [r8, #4]
  40363a:	9427      	str	r4, [sp, #156]	; 0x9c
  40363c:	9326      	str	r3, [sp, #152]	; 0x98
  40363e:	f300 83c3 	bgt.w	403dc8 <_svfprintf_r+0x1074>
  403642:	f108 0808 	add.w	r8, r8, #8
  403646:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  403648:	1e5e      	subs	r6, r3, #1
  40364a:	2e00      	cmp	r6, #0
  40364c:	f77f ad74 	ble.w	403138 <_svfprintf_r+0x3e4>
  403650:	2e10      	cmp	r6, #16
  403652:	f340 8574 	ble.w	40413e <_svfprintf_r+0x13ea>
  403656:	4622      	mov	r2, r4
  403658:	2710      	movs	r7, #16
  40365a:	9b26      	ldr	r3, [sp, #152]	; 0x98
  40365c:	4d9c      	ldr	r5, [pc, #624]	; (4038d0 <_svfprintf_r+0xb7c>)
  40365e:	f8dd b030 	ldr.w	fp, [sp, #48]	; 0x30
  403662:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
  403664:	e005      	b.n	403672 <_svfprintf_r+0x91e>
  403666:	f108 0808 	add.w	r8, r8, #8
  40366a:	3e10      	subs	r6, #16
  40366c:	2e10      	cmp	r6, #16
  40366e:	f340 8224 	ble.w	403aba <_svfprintf_r+0xd66>
  403672:	3301      	adds	r3, #1
  403674:	3210      	adds	r2, #16
  403676:	2b07      	cmp	r3, #7
  403678:	9227      	str	r2, [sp, #156]	; 0x9c
  40367a:	9326      	str	r3, [sp, #152]	; 0x98
  40367c:	e888 00a0 	stmia.w	r8, {r5, r7}
  403680:	ddf1      	ble.n	403666 <_svfprintf_r+0x912>
  403682:	aa25      	add	r2, sp, #148	; 0x94
  403684:	4621      	mov	r1, r4
  403686:	4658      	mov	r0, fp
  403688:	f003 ff4a 	bl	407520 <__ssprint_r>
  40368c:	2800      	cmp	r0, #0
  40368e:	f47f ac3e 	bne.w	402f0e <_svfprintf_r+0x1ba>
  403692:	46c8      	mov	r8, r9
  403694:	9a27      	ldr	r2, [sp, #156]	; 0x9c
  403696:	9b26      	ldr	r3, [sp, #152]	; 0x98
  403698:	e7e7      	b.n	40366a <_svfprintf_r+0x916>
  40369a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
  40369c:	9a08      	ldr	r2, [sp, #32]
  40369e:	1a9f      	subs	r7, r3, r2
  4036a0:	2f00      	cmp	r7, #0
  4036a2:	f77f acf9 	ble.w	403098 <_svfprintf_r+0x344>
  4036a6:	2f10      	cmp	r7, #16
  4036a8:	f340 84a7 	ble.w	403ffa <_svfprintf_r+0x12a6>
  4036ac:	4d88      	ldr	r5, [pc, #544]	; (4038d0 <_svfprintf_r+0xb7c>)
  4036ae:	4642      	mov	r2, r8
  4036b0:	4621      	mov	r1, r4
  4036b2:	46b0      	mov	r8, r6
  4036b4:	f04f 0b10 	mov.w	fp, #16
  4036b8:	462e      	mov	r6, r5
  4036ba:	9b26      	ldr	r3, [sp, #152]	; 0x98
  4036bc:	9c0c      	ldr	r4, [sp, #48]	; 0x30
  4036be:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
  4036c0:	e004      	b.n	4036cc <_svfprintf_r+0x978>
  4036c2:	3f10      	subs	r7, #16
  4036c4:	2f10      	cmp	r7, #16
  4036c6:	f102 0208 	add.w	r2, r2, #8
  4036ca:	dd15      	ble.n	4036f8 <_svfprintf_r+0x9a4>
  4036cc:	3301      	adds	r3, #1
  4036ce:	3110      	adds	r1, #16
  4036d0:	2b07      	cmp	r3, #7
  4036d2:	9127      	str	r1, [sp, #156]	; 0x9c
  4036d4:	9326      	str	r3, [sp, #152]	; 0x98
  4036d6:	e882 0840 	stmia.w	r2, {r6, fp}
  4036da:	ddf2      	ble.n	4036c2 <_svfprintf_r+0x96e>
  4036dc:	aa25      	add	r2, sp, #148	; 0x94
  4036de:	4629      	mov	r1, r5
  4036e0:	4620      	mov	r0, r4
  4036e2:	f003 ff1d 	bl	407520 <__ssprint_r>
  4036e6:	2800      	cmp	r0, #0
  4036e8:	f47f ac11 	bne.w	402f0e <_svfprintf_r+0x1ba>
  4036ec:	3f10      	subs	r7, #16
  4036ee:	2f10      	cmp	r7, #16
  4036f0:	464a      	mov	r2, r9
  4036f2:	9927      	ldr	r1, [sp, #156]	; 0x9c
  4036f4:	9b26      	ldr	r3, [sp, #152]	; 0x98
  4036f6:	dce9      	bgt.n	4036cc <_svfprintf_r+0x978>
  4036f8:	4635      	mov	r5, r6
  4036fa:	460c      	mov	r4, r1
  4036fc:	4646      	mov	r6, r8
  4036fe:	4690      	mov	r8, r2
  403700:	3301      	adds	r3, #1
  403702:	443c      	add	r4, r7
  403704:	2b07      	cmp	r3, #7
  403706:	9427      	str	r4, [sp, #156]	; 0x9c
  403708:	9326      	str	r3, [sp, #152]	; 0x98
  40370a:	e888 00a0 	stmia.w	r8, {r5, r7}
  40370e:	f300 829d 	bgt.w	403c4c <_svfprintf_r+0xef8>
  403712:	f108 0808 	add.w	r8, r8, #8
  403716:	e4bf      	b.n	403098 <_svfprintf_r+0x344>
  403718:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  40371a:	2b01      	cmp	r3, #1
  40371c:	f340 824e 	ble.w	403bbc <_svfprintf_r+0xe68>
  403720:	2301      	movs	r3, #1
  403722:	9f26      	ldr	r7, [sp, #152]	; 0x98
  403724:	441c      	add	r4, r3
  403726:	441f      	add	r7, r3
  403728:	2f07      	cmp	r7, #7
  40372a:	9427      	str	r4, [sp, #156]	; 0x9c
  40372c:	f8c8 6000 	str.w	r6, [r8]
  403730:	9726      	str	r7, [sp, #152]	; 0x98
  403732:	f8c8 3004 	str.w	r3, [r8, #4]
  403736:	f300 825e 	bgt.w	403bf6 <_svfprintf_r+0xea2>
  40373a:	f108 0808 	add.w	r8, r8, #8
  40373e:	9a19      	ldr	r2, [sp, #100]	; 0x64
  403740:	3701      	adds	r7, #1
  403742:	9b1a      	ldr	r3, [sp, #104]	; 0x68
  403744:	4414      	add	r4, r2
  403746:	2f07      	cmp	r7, #7
  403748:	9427      	str	r4, [sp, #156]	; 0x9c
  40374a:	9726      	str	r7, [sp, #152]	; 0x98
  40374c:	f8c8 3000 	str.w	r3, [r8]
  403750:	f8c8 2004 	str.w	r2, [r8, #4]
  403754:	f300 825b 	bgt.w	403c0e <_svfprintf_r+0xeba>
  403758:	f108 0808 	add.w	r8, r8, #8
  40375c:	a814      	add	r0, sp, #80	; 0x50
  40375e:	c80f      	ldmia	r0, {r0, r1, r2, r3}
  403760:	f004 fd4a 	bl	4081f8 <__aeabi_dcmpeq>
  403764:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  403766:	2800      	cmp	r0, #0
  403768:	f040 8141 	bne.w	4039ee <_svfprintf_r+0xc9a>
  40376c:	3b01      	subs	r3, #1
  40376e:	3701      	adds	r7, #1
  403770:	3601      	adds	r6, #1
  403772:	441c      	add	r4, r3
  403774:	2f07      	cmp	r7, #7
  403776:	f8c8 6000 	str.w	r6, [r8]
  40377a:	9726      	str	r7, [sp, #152]	; 0x98
  40377c:	9427      	str	r4, [sp, #156]	; 0x9c
  40377e:	f8c8 3004 	str.w	r3, [r8, #4]
  403782:	f300 8166 	bgt.w	403a52 <_svfprintf_r+0xcfe>
  403786:	f108 0808 	add.w	r8, r8, #8
  40378a:	9a1b      	ldr	r2, [sp, #108]	; 0x6c
  40378c:	3701      	adds	r7, #1
  40378e:	4414      	add	r4, r2
  403790:	ab21      	add	r3, sp, #132	; 0x84
  403792:	2f07      	cmp	r7, #7
  403794:	9427      	str	r4, [sp, #156]	; 0x9c
  403796:	9726      	str	r7, [sp, #152]	; 0x98
  403798:	f8c8 2004 	str.w	r2, [r8, #4]
  40379c:	f8c8 3000 	str.w	r3, [r8]
  4037a0:	f77f acc8 	ble.w	403134 <_svfprintf_r+0x3e0>
  4037a4:	aa25      	add	r2, sp, #148	; 0x94
  4037a6:	990b      	ldr	r1, [sp, #44]	; 0x2c
  4037a8:	980c      	ldr	r0, [sp, #48]	; 0x30
  4037aa:	f003 feb9 	bl	407520 <__ssprint_r>
  4037ae:	2800      	cmp	r0, #0
  4037b0:	f47f abad 	bne.w	402f0e <_svfprintf_r+0x1ba>
  4037b4:	46c8      	mov	r8, r9
  4037b6:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  4037b8:	e4be      	b.n	403138 <_svfprintf_r+0x3e4>
  4037ba:	aa25      	add	r2, sp, #148	; 0x94
  4037bc:	990b      	ldr	r1, [sp, #44]	; 0x2c
  4037be:	980c      	ldr	r0, [sp, #48]	; 0x30
  4037c0:	f003 feae 	bl	407520 <__ssprint_r>
  4037c4:	2800      	cmp	r0, #0
  4037c6:	f43f ad01 	beq.w	4031cc <_svfprintf_r+0x478>
  4037ca:	f7ff bba0 	b.w	402f0e <_svfprintf_r+0x1ba>
  4037ce:	f8dd b01c 	ldr.w	fp, [sp, #28]
  4037d2:	2b01      	cmp	r3, #1
  4037d4:	f000 817e 	beq.w	403ad4 <_svfprintf_r+0xd80>
  4037d8:	2b02      	cmp	r3, #2
  4037da:	d171      	bne.n	4038c0 <_svfprintf_r+0xb6c>
  4037dc:	f8cd b01c 	str.w	fp, [sp, #28]
  4037e0:	2400      	movs	r4, #0
  4037e2:	2500      	movs	r5, #0
  4037e4:	e5d8      	b.n	403398 <_svfprintf_r+0x644>
  4037e6:	aa25      	add	r2, sp, #148	; 0x94
  4037e8:	990b      	ldr	r1, [sp, #44]	; 0x2c
  4037ea:	980c      	ldr	r0, [sp, #48]	; 0x30
  4037ec:	f003 fe98 	bl	407520 <__ssprint_r>
  4037f0:	2800      	cmp	r0, #0
  4037f2:	f47f ab8c 	bne.w	402f0e <_svfprintf_r+0x1ba>
  4037f6:	46c8      	mov	r8, r9
  4037f8:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  4037fa:	e48a      	b.n	403112 <_svfprintf_r+0x3be>
  4037fc:	aa25      	add	r2, sp, #148	; 0x94
  4037fe:	990b      	ldr	r1, [sp, #44]	; 0x2c
  403800:	980c      	ldr	r0, [sp, #48]	; 0x30
  403802:	f003 fe8d 	bl	407520 <__ssprint_r>
  403806:	2800      	cmp	r0, #0
  403808:	f47f ab81 	bne.w	402f0e <_svfprintf_r+0x1ba>
  40380c:	46c8      	mov	r8, r9
  40380e:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  403810:	e42d      	b.n	40306e <_svfprintf_r+0x31a>
  403812:	2001      	movs	r0, #1
  403814:	9b26      	ldr	r3, [sp, #152]	; 0x98
  403816:	4a2d      	ldr	r2, [pc, #180]	; (4038cc <_svfprintf_r+0xb78>)
  403818:	4403      	add	r3, r0
  40381a:	4404      	add	r4, r0
  40381c:	2b07      	cmp	r3, #7
  40381e:	9427      	str	r4, [sp, #156]	; 0x9c
  403820:	9326      	str	r3, [sp, #152]	; 0x98
  403822:	f8c8 0004 	str.w	r0, [r8, #4]
  403826:	f8c8 2000 	str.w	r2, [r8]
  40382a:	f340 82d8 	ble.w	403dde <_svfprintf_r+0x108a>
  40382e:	aa25      	add	r2, sp, #148	; 0x94
  403830:	990b      	ldr	r1, [sp, #44]	; 0x2c
  403832:	980c      	ldr	r0, [sp, #48]	; 0x30
  403834:	f003 fe74 	bl	407520 <__ssprint_r>
  403838:	2800      	cmp	r0, #0
  40383a:	f47f ab68 	bne.w	402f0e <_svfprintf_r+0x1ba>
  40383e:	46c8      	mov	r8, r9
  403840:	991f      	ldr	r1, [sp, #124]	; 0x7c
  403842:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  403844:	b929      	cbnz	r1, 403852 <_svfprintf_r+0xafe>
  403846:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  403848:	b91b      	cbnz	r3, 403852 <_svfprintf_r+0xafe>
  40384a:	9b07      	ldr	r3, [sp, #28]
  40384c:	07d8      	lsls	r0, r3, #31
  40384e:	f57f ac73 	bpl.w	403138 <_svfprintf_r+0x3e4>
  403852:	9819      	ldr	r0, [sp, #100]	; 0x64
  403854:	9b26      	ldr	r3, [sp, #152]	; 0x98
  403856:	4602      	mov	r2, r0
  403858:	3301      	adds	r3, #1
  40385a:	4422      	add	r2, r4
  40385c:	9c1a      	ldr	r4, [sp, #104]	; 0x68
  40385e:	2b07      	cmp	r3, #7
  403860:	9227      	str	r2, [sp, #156]	; 0x9c
  403862:	f8c8 4000 	str.w	r4, [r8]
  403866:	f8c8 0004 	str.w	r0, [r8, #4]
  40386a:	9326      	str	r3, [sp, #152]	; 0x98
  40386c:	f300 8431 	bgt.w	4040d2 <_svfprintf_r+0x137e>
  403870:	f108 0808 	add.w	r8, r8, #8
  403874:	2900      	cmp	r1, #0
  403876:	f2c0 8409 	blt.w	40408c <_svfprintf_r+0x1338>
  40387a:	9913      	ldr	r1, [sp, #76]	; 0x4c
  40387c:	3301      	adds	r3, #1
  40387e:	188c      	adds	r4, r1, r2
  403880:	2b07      	cmp	r3, #7
  403882:	9427      	str	r4, [sp, #156]	; 0x9c
  403884:	9326      	str	r3, [sp, #152]	; 0x98
  403886:	f8c8 6000 	str.w	r6, [r8]
  40388a:	f8c8 1004 	str.w	r1, [r8, #4]
  40388e:	f77f ac51 	ble.w	403134 <_svfprintf_r+0x3e0>
  403892:	aa25      	add	r2, sp, #148	; 0x94
  403894:	990b      	ldr	r1, [sp, #44]	; 0x2c
  403896:	980c      	ldr	r0, [sp, #48]	; 0x30
  403898:	f003 fe42 	bl	407520 <__ssprint_r>
  40389c:	2800      	cmp	r0, #0
  40389e:	f47f ab36 	bne.w	402f0e <_svfprintf_r+0x1ba>
  4038a2:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  4038a4:	46c8      	mov	r8, r9
  4038a6:	e447      	b.n	403138 <_svfprintf_r+0x3e4>
  4038a8:	aa25      	add	r2, sp, #148	; 0x94
  4038aa:	990b      	ldr	r1, [sp, #44]	; 0x2c
  4038ac:	980c      	ldr	r0, [sp, #48]	; 0x30
  4038ae:	f003 fe37 	bl	407520 <__ssprint_r>
  4038b2:	2800      	cmp	r0, #0
  4038b4:	f47f ab2b 	bne.w	402f0e <_svfprintf_r+0x1ba>
  4038b8:	46c8      	mov	r8, r9
  4038ba:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  4038bc:	f7ff bbe9 	b.w	403092 <_svfprintf_r+0x33e>
  4038c0:	2400      	movs	r4, #0
  4038c2:	2500      	movs	r5, #0
  4038c4:	f8cd b01c 	str.w	fp, [sp, #28]
  4038c8:	4649      	mov	r1, r9
  4038ca:	e004      	b.n	4038d6 <_svfprintf_r+0xb82>
  4038cc:	00408f1c 	.word	0x00408f1c
  4038d0:	00408f30 	.word	0x00408f30
  4038d4:	4631      	mov	r1, r6
  4038d6:	08e2      	lsrs	r2, r4, #3
  4038d8:	ea42 7245 	orr.w	r2, r2, r5, lsl #29
  4038dc:	08e8      	lsrs	r0, r5, #3
  4038de:	f004 0307 	and.w	r3, r4, #7
  4038e2:	4605      	mov	r5, r0
  4038e4:	4614      	mov	r4, r2
  4038e6:	3330      	adds	r3, #48	; 0x30
  4038e8:	ea54 0205 	orrs.w	r2, r4, r5
  4038ec:	f801 3c01 	strb.w	r3, [r1, #-1]
  4038f0:	f101 36ff 	add.w	r6, r1, #4294967295
  4038f4:	d1ee      	bne.n	4038d4 <_svfprintf_r+0xb80>
  4038f6:	9a07      	ldr	r2, [sp, #28]
  4038f8:	07d2      	lsls	r2, r2, #31
  4038fa:	f57f ad5d 	bpl.w	4033b8 <_svfprintf_r+0x664>
  4038fe:	2b30      	cmp	r3, #48	; 0x30
  403900:	f43f ad5a 	beq.w	4033b8 <_svfprintf_r+0x664>
  403904:	2330      	movs	r3, #48	; 0x30
  403906:	3902      	subs	r1, #2
  403908:	f806 3c01 	strb.w	r3, [r6, #-1]
  40390c:	eba9 0301 	sub.w	r3, r9, r1
  403910:	930e      	str	r3, [sp, #56]	; 0x38
  403912:	460e      	mov	r6, r1
  403914:	f7ff bb3a 	b.w	402f8c <_svfprintf_r+0x238>
  403918:	991f      	ldr	r1, [sp, #124]	; 0x7c
  40391a:	2900      	cmp	r1, #0
  40391c:	f77f af79 	ble.w	403812 <_svfprintf_r+0xabe>
  403920:	9b12      	ldr	r3, [sp, #72]	; 0x48
  403922:	9a13      	ldr	r2, [sp, #76]	; 0x4c
  403924:	4293      	cmp	r3, r2
  403926:	bfa8      	it	ge
  403928:	4613      	movge	r3, r2
  40392a:	2b00      	cmp	r3, #0
  40392c:	461f      	mov	r7, r3
  40392e:	dd0b      	ble.n	403948 <_svfprintf_r+0xbf4>
  403930:	9b26      	ldr	r3, [sp, #152]	; 0x98
  403932:	443c      	add	r4, r7
  403934:	3301      	adds	r3, #1
  403936:	2b07      	cmp	r3, #7
  403938:	9427      	str	r4, [sp, #156]	; 0x9c
  40393a:	e888 00c0 	stmia.w	r8, {r6, r7}
  40393e:	9326      	str	r3, [sp, #152]	; 0x98
  403940:	f300 82fb 	bgt.w	403f3a <_svfprintf_r+0x11e6>
  403944:	f108 0808 	add.w	r8, r8, #8
  403948:	9b12      	ldr	r3, [sp, #72]	; 0x48
  40394a:	2f00      	cmp	r7, #0
  40394c:	bfa8      	it	ge
  40394e:	1bdb      	subge	r3, r3, r7
  403950:	2b00      	cmp	r3, #0
  403952:	461f      	mov	r7, r3
  403954:	f340 80d7 	ble.w	403b06 <_svfprintf_r+0xdb2>
  403958:	2b10      	cmp	r3, #16
  40395a:	f340 8433 	ble.w	4041c4 <_svfprintf_r+0x1470>
  40395e:	4dba      	ldr	r5, [pc, #744]	; (403c48 <_svfprintf_r+0xef4>)
  403960:	4642      	mov	r2, r8
  403962:	4621      	mov	r1, r4
  403964:	46b0      	mov	r8, r6
  403966:	f04f 0b10 	mov.w	fp, #16
  40396a:	462e      	mov	r6, r5
  40396c:	9b26      	ldr	r3, [sp, #152]	; 0x98
  40396e:	9c0c      	ldr	r4, [sp, #48]	; 0x30
  403970:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
  403972:	e004      	b.n	40397e <_svfprintf_r+0xc2a>
  403974:	3208      	adds	r2, #8
  403976:	3f10      	subs	r7, #16
  403978:	2f10      	cmp	r7, #16
  40397a:	f340 80b5 	ble.w	403ae8 <_svfprintf_r+0xd94>
  40397e:	3301      	adds	r3, #1
  403980:	3110      	adds	r1, #16
  403982:	2b07      	cmp	r3, #7
  403984:	9127      	str	r1, [sp, #156]	; 0x9c
  403986:	9326      	str	r3, [sp, #152]	; 0x98
  403988:	e882 0840 	stmia.w	r2, {r6, fp}
  40398c:	ddf2      	ble.n	403974 <_svfprintf_r+0xc20>
  40398e:	aa25      	add	r2, sp, #148	; 0x94
  403990:	4629      	mov	r1, r5
  403992:	4620      	mov	r0, r4
  403994:	f003 fdc4 	bl	407520 <__ssprint_r>
  403998:	2800      	cmp	r0, #0
  40399a:	f47f aab8 	bne.w	402f0e <_svfprintf_r+0x1ba>
  40399e:	464a      	mov	r2, r9
  4039a0:	9927      	ldr	r1, [sp, #156]	; 0x9c
  4039a2:	9b26      	ldr	r3, [sp, #152]	; 0x98
  4039a4:	e7e7      	b.n	403976 <_svfprintf_r+0xc22>
  4039a6:	2d00      	cmp	r5, #0
  4039a8:	bf08      	it	eq
  4039aa:	2c0a      	cmpeq	r4, #10
  4039ac:	f0c0 8090 	bcc.w	403ad0 <_svfprintf_r+0xd7c>
  4039b0:	464e      	mov	r6, r9
  4039b2:	4620      	mov	r0, r4
  4039b4:	4629      	mov	r1, r5
  4039b6:	220a      	movs	r2, #10
  4039b8:	2300      	movs	r3, #0
  4039ba:	f004 fc8d 	bl	4082d8 <__aeabi_uldivmod>
  4039be:	3230      	adds	r2, #48	; 0x30
  4039c0:	f806 2d01 	strb.w	r2, [r6, #-1]!
  4039c4:	4620      	mov	r0, r4
  4039c6:	4629      	mov	r1, r5
  4039c8:	2300      	movs	r3, #0
  4039ca:	220a      	movs	r2, #10
  4039cc:	f004 fc84 	bl	4082d8 <__aeabi_uldivmod>
  4039d0:	4604      	mov	r4, r0
  4039d2:	460d      	mov	r5, r1
  4039d4:	ea54 0305 	orrs.w	r3, r4, r5
  4039d8:	d1eb      	bne.n	4039b2 <_svfprintf_r+0xc5e>
  4039da:	eba9 0306 	sub.w	r3, r9, r6
  4039de:	930e      	str	r3, [sp, #56]	; 0x38
  4039e0:	f7ff bad4 	b.w	402f8c <_svfprintf_r+0x238>
  4039e4:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  4039e6:	464e      	mov	r6, r9
  4039e8:	930e      	str	r3, [sp, #56]	; 0x38
  4039ea:	f7ff bacf 	b.w	402f8c <_svfprintf_r+0x238>
  4039ee:	1e5e      	subs	r6, r3, #1
  4039f0:	2e00      	cmp	r6, #0
  4039f2:	f77f aeca 	ble.w	40378a <_svfprintf_r+0xa36>
  4039f6:	2e10      	cmp	r6, #16
  4039f8:	f340 83e2 	ble.w	4041c0 <_svfprintf_r+0x146c>
  4039fc:	4622      	mov	r2, r4
  4039fe:	f04f 0b10 	mov.w	fp, #16
  403a02:	4d91      	ldr	r5, [pc, #580]	; (403c48 <_svfprintf_r+0xef4>)
  403a04:	9c0c      	ldr	r4, [sp, #48]	; 0x30
  403a06:	e004      	b.n	403a12 <_svfprintf_r+0xcbe>
  403a08:	3e10      	subs	r6, #16
  403a0a:	2e10      	cmp	r6, #16
  403a0c:	f108 0808 	add.w	r8, r8, #8
  403a10:	dd15      	ble.n	403a3e <_svfprintf_r+0xcea>
  403a12:	3701      	adds	r7, #1
  403a14:	3210      	adds	r2, #16
  403a16:	2f07      	cmp	r7, #7
  403a18:	9227      	str	r2, [sp, #156]	; 0x9c
  403a1a:	9726      	str	r7, [sp, #152]	; 0x98
  403a1c:	e888 0820 	stmia.w	r8, {r5, fp}
  403a20:	ddf2      	ble.n	403a08 <_svfprintf_r+0xcb4>
  403a22:	aa25      	add	r2, sp, #148	; 0x94
  403a24:	990b      	ldr	r1, [sp, #44]	; 0x2c
  403a26:	4620      	mov	r0, r4
  403a28:	f003 fd7a 	bl	407520 <__ssprint_r>
  403a2c:	2800      	cmp	r0, #0
  403a2e:	f47f aa6e 	bne.w	402f0e <_svfprintf_r+0x1ba>
  403a32:	3e10      	subs	r6, #16
  403a34:	2e10      	cmp	r6, #16
  403a36:	46c8      	mov	r8, r9
  403a38:	9a27      	ldr	r2, [sp, #156]	; 0x9c
  403a3a:	9f26      	ldr	r7, [sp, #152]	; 0x98
  403a3c:	dce9      	bgt.n	403a12 <_svfprintf_r+0xcbe>
  403a3e:	4614      	mov	r4, r2
  403a40:	3701      	adds	r7, #1
  403a42:	4434      	add	r4, r6
  403a44:	2f07      	cmp	r7, #7
  403a46:	9427      	str	r4, [sp, #156]	; 0x9c
  403a48:	9726      	str	r7, [sp, #152]	; 0x98
  403a4a:	e888 0060 	stmia.w	r8, {r5, r6}
  403a4e:	f77f ae9a 	ble.w	403786 <_svfprintf_r+0xa32>
  403a52:	aa25      	add	r2, sp, #148	; 0x94
  403a54:	990b      	ldr	r1, [sp, #44]	; 0x2c
  403a56:	980c      	ldr	r0, [sp, #48]	; 0x30
  403a58:	f003 fd62 	bl	407520 <__ssprint_r>
  403a5c:	2800      	cmp	r0, #0
  403a5e:	f47f aa56 	bne.w	402f0e <_svfprintf_r+0x1ba>
  403a62:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  403a64:	9f26      	ldr	r7, [sp, #152]	; 0x98
  403a66:	46c8      	mov	r8, r9
  403a68:	e68f      	b.n	40378a <_svfprintf_r+0xa36>
  403a6a:	3204      	adds	r2, #4
  403a6c:	681c      	ldr	r4, [r3, #0]
  403a6e:	2500      	movs	r5, #0
  403a70:	2301      	movs	r3, #1
  403a72:	920f      	str	r2, [sp, #60]	; 0x3c
  403a74:	f7ff ba6c 	b.w	402f50 <_svfprintf_r+0x1fc>
  403a78:	681c      	ldr	r4, [r3, #0]
  403a7a:	3304      	adds	r3, #4
  403a7c:	930f      	str	r3, [sp, #60]	; 0x3c
  403a7e:	2500      	movs	r5, #0
  403a80:	e42e      	b.n	4032e0 <_svfprintf_r+0x58c>
  403a82:	681c      	ldr	r4, [r3, #0]
  403a84:	3304      	adds	r3, #4
  403a86:	17e5      	asrs	r5, r4, #31
  403a88:	4622      	mov	r2, r4
  403a8a:	930f      	str	r3, [sp, #60]	; 0x3c
  403a8c:	462b      	mov	r3, r5
  403a8e:	2a00      	cmp	r2, #0
  403a90:	f173 0300 	sbcs.w	r3, r3, #0
  403a94:	f6bf ac6c 	bge.w	403370 <_svfprintf_r+0x61c>
  403a98:	272d      	movs	r7, #45	; 0x2d
  403a9a:	4264      	negs	r4, r4
  403a9c:	eb65 0545 	sbc.w	r5, r5, r5, lsl #1
  403aa0:	f88d 7077 	strb.w	r7, [sp, #119]	; 0x77
  403aa4:	2301      	movs	r3, #1
  403aa6:	f7ff ba57 	b.w	402f58 <_svfprintf_r+0x204>
  403aaa:	990f      	ldr	r1, [sp, #60]	; 0x3c
  403aac:	2500      	movs	r5, #0
  403aae:	460a      	mov	r2, r1
  403ab0:	3204      	adds	r2, #4
  403ab2:	680c      	ldr	r4, [r1, #0]
  403ab4:	920f      	str	r2, [sp, #60]	; 0x3c
  403ab6:	f7ff ba4b 	b.w	402f50 <_svfprintf_r+0x1fc>
  403aba:	4614      	mov	r4, r2
  403abc:	3301      	adds	r3, #1
  403abe:	4434      	add	r4, r6
  403ac0:	2b07      	cmp	r3, #7
  403ac2:	9427      	str	r4, [sp, #156]	; 0x9c
  403ac4:	9326      	str	r3, [sp, #152]	; 0x98
  403ac6:	e888 0060 	stmia.w	r8, {r5, r6}
  403aca:	f77f ab33 	ble.w	403134 <_svfprintf_r+0x3e0>
  403ace:	e6e0      	b.n	403892 <_svfprintf_r+0xb3e>
  403ad0:	f8dd b01c 	ldr.w	fp, [sp, #28]
  403ad4:	2301      	movs	r3, #1
  403ad6:	ae42      	add	r6, sp, #264	; 0x108
  403ad8:	3430      	adds	r4, #48	; 0x30
  403ada:	f8cd b01c 	str.w	fp, [sp, #28]
  403ade:	f806 4d41 	strb.w	r4, [r6, #-65]!
  403ae2:	930e      	str	r3, [sp, #56]	; 0x38
  403ae4:	f7ff ba52 	b.w	402f8c <_svfprintf_r+0x238>
  403ae8:	4635      	mov	r5, r6
  403aea:	460c      	mov	r4, r1
  403aec:	4646      	mov	r6, r8
  403aee:	4690      	mov	r8, r2
  403af0:	3301      	adds	r3, #1
  403af2:	443c      	add	r4, r7
  403af4:	2b07      	cmp	r3, #7
  403af6:	9427      	str	r4, [sp, #156]	; 0x9c
  403af8:	9326      	str	r3, [sp, #152]	; 0x98
  403afa:	e888 00a0 	stmia.w	r8, {r5, r7}
  403afe:	f300 8246 	bgt.w	403f8e <_svfprintf_r+0x123a>
  403b02:	f108 0808 	add.w	r8, r8, #8
  403b06:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
  403b08:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  403b0a:	429a      	cmp	r2, r3
  403b0c:	db45      	blt.n	403b9a <_svfprintf_r+0xe46>
  403b0e:	9b07      	ldr	r3, [sp, #28]
  403b10:	07d9      	lsls	r1, r3, #31
  403b12:	d442      	bmi.n	403b9a <_svfprintf_r+0xe46>
  403b14:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  403b16:	9812      	ldr	r0, [sp, #72]	; 0x48
  403b18:	1a9a      	subs	r2, r3, r2
  403b1a:	1a1d      	subs	r5, r3, r0
  403b1c:	4295      	cmp	r5, r2
  403b1e:	bfa8      	it	ge
  403b20:	4615      	movge	r5, r2
  403b22:	2d00      	cmp	r5, #0
  403b24:	dd0e      	ble.n	403b44 <_svfprintf_r+0xdf0>
  403b26:	9926      	ldr	r1, [sp, #152]	; 0x98
  403b28:	4406      	add	r6, r0
  403b2a:	3101      	adds	r1, #1
  403b2c:	442c      	add	r4, r5
  403b2e:	2907      	cmp	r1, #7
  403b30:	f8c8 6000 	str.w	r6, [r8]
  403b34:	9427      	str	r4, [sp, #156]	; 0x9c
  403b36:	f8c8 5004 	str.w	r5, [r8, #4]
  403b3a:	9126      	str	r1, [sp, #152]	; 0x98
  403b3c:	f300 8216 	bgt.w	403f6c <_svfprintf_r+0x1218>
  403b40:	f108 0808 	add.w	r8, r8, #8
  403b44:	2d00      	cmp	r5, #0
  403b46:	bfb4      	ite	lt
  403b48:	4616      	movlt	r6, r2
  403b4a:	1b56      	subge	r6, r2, r5
  403b4c:	2e00      	cmp	r6, #0
  403b4e:	f77f aaf3 	ble.w	403138 <_svfprintf_r+0x3e4>
  403b52:	2e10      	cmp	r6, #16
  403b54:	f340 82f3 	ble.w	40413e <_svfprintf_r+0x13ea>
  403b58:	4622      	mov	r2, r4
  403b5a:	2710      	movs	r7, #16
  403b5c:	9b26      	ldr	r3, [sp, #152]	; 0x98
  403b5e:	4d3a      	ldr	r5, [pc, #232]	; (403c48 <_svfprintf_r+0xef4>)
  403b60:	f8dd b030 	ldr.w	fp, [sp, #48]	; 0x30
  403b64:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
  403b66:	e004      	b.n	403b72 <_svfprintf_r+0xe1e>
  403b68:	f108 0808 	add.w	r8, r8, #8
  403b6c:	3e10      	subs	r6, #16
  403b6e:	2e10      	cmp	r6, #16
  403b70:	dda3      	ble.n	403aba <_svfprintf_r+0xd66>
  403b72:	3301      	adds	r3, #1
  403b74:	3210      	adds	r2, #16
  403b76:	2b07      	cmp	r3, #7
  403b78:	9227      	str	r2, [sp, #156]	; 0x9c
  403b7a:	9326      	str	r3, [sp, #152]	; 0x98
  403b7c:	e888 00a0 	stmia.w	r8, {r5, r7}
  403b80:	ddf2      	ble.n	403b68 <_svfprintf_r+0xe14>
  403b82:	aa25      	add	r2, sp, #148	; 0x94
  403b84:	4621      	mov	r1, r4
  403b86:	4658      	mov	r0, fp
  403b88:	f003 fcca 	bl	407520 <__ssprint_r>
  403b8c:	2800      	cmp	r0, #0
  403b8e:	f47f a9be 	bne.w	402f0e <_svfprintf_r+0x1ba>
  403b92:	46c8      	mov	r8, r9
  403b94:	9a27      	ldr	r2, [sp, #156]	; 0x9c
  403b96:	9b26      	ldr	r3, [sp, #152]	; 0x98
  403b98:	e7e8      	b.n	403b6c <_svfprintf_r+0xe18>
  403b9a:	9b26      	ldr	r3, [sp, #152]	; 0x98
  403b9c:	9819      	ldr	r0, [sp, #100]	; 0x64
  403b9e:	3301      	adds	r3, #1
  403ba0:	991a      	ldr	r1, [sp, #104]	; 0x68
  403ba2:	4404      	add	r4, r0
  403ba4:	2b07      	cmp	r3, #7
  403ba6:	9427      	str	r4, [sp, #156]	; 0x9c
  403ba8:	f8c8 1000 	str.w	r1, [r8]
  403bac:	f8c8 0004 	str.w	r0, [r8, #4]
  403bb0:	9326      	str	r3, [sp, #152]	; 0x98
  403bb2:	f300 81cf 	bgt.w	403f54 <_svfprintf_r+0x1200>
  403bb6:	f108 0808 	add.w	r8, r8, #8
  403bba:	e7ab      	b.n	403b14 <_svfprintf_r+0xdc0>
  403bbc:	9b07      	ldr	r3, [sp, #28]
  403bbe:	07da      	lsls	r2, r3, #31
  403bc0:	f53f adae 	bmi.w	403720 <_svfprintf_r+0x9cc>
  403bc4:	2301      	movs	r3, #1
  403bc6:	9f26      	ldr	r7, [sp, #152]	; 0x98
  403bc8:	441c      	add	r4, r3
  403bca:	441f      	add	r7, r3
  403bcc:	2f07      	cmp	r7, #7
  403bce:	9427      	str	r4, [sp, #156]	; 0x9c
  403bd0:	f8c8 6000 	str.w	r6, [r8]
  403bd4:	9726      	str	r7, [sp, #152]	; 0x98
  403bd6:	f8c8 3004 	str.w	r3, [r8, #4]
  403bda:	f77f add4 	ble.w	403786 <_svfprintf_r+0xa32>
  403bde:	aa25      	add	r2, sp, #148	; 0x94
  403be0:	990b      	ldr	r1, [sp, #44]	; 0x2c
  403be2:	980c      	ldr	r0, [sp, #48]	; 0x30
  403be4:	f003 fc9c 	bl	407520 <__ssprint_r>
  403be8:	2800      	cmp	r0, #0
  403bea:	f47f a990 	bne.w	402f0e <_svfprintf_r+0x1ba>
  403bee:	46c8      	mov	r8, r9
  403bf0:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  403bf2:	9f26      	ldr	r7, [sp, #152]	; 0x98
  403bf4:	e5c9      	b.n	40378a <_svfprintf_r+0xa36>
  403bf6:	aa25      	add	r2, sp, #148	; 0x94
  403bf8:	990b      	ldr	r1, [sp, #44]	; 0x2c
  403bfa:	980c      	ldr	r0, [sp, #48]	; 0x30
  403bfc:	f003 fc90 	bl	407520 <__ssprint_r>
  403c00:	2800      	cmp	r0, #0
  403c02:	f47f a984 	bne.w	402f0e <_svfprintf_r+0x1ba>
  403c06:	46c8      	mov	r8, r9
  403c08:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  403c0a:	9f26      	ldr	r7, [sp, #152]	; 0x98
  403c0c:	e597      	b.n	40373e <_svfprintf_r+0x9ea>
  403c0e:	aa25      	add	r2, sp, #148	; 0x94
  403c10:	990b      	ldr	r1, [sp, #44]	; 0x2c
  403c12:	980c      	ldr	r0, [sp, #48]	; 0x30
  403c14:	f003 fc84 	bl	407520 <__ssprint_r>
  403c18:	2800      	cmp	r0, #0
  403c1a:	f47f a978 	bne.w	402f0e <_svfprintf_r+0x1ba>
  403c1e:	46c8      	mov	r8, r9
  403c20:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  403c22:	9f26      	ldr	r7, [sp, #152]	; 0x98
  403c24:	e59a      	b.n	40375c <_svfprintf_r+0xa08>
  403c26:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
  403c28:	3407      	adds	r4, #7
  403c2a:	f024 0407 	bic.w	r4, r4, #7
  403c2e:	f104 0108 	add.w	r1, r4, #8
  403c32:	e9d4 2300 	ldrd	r2, r3, [r4]
  403c36:	910f      	str	r1, [sp, #60]	; 0x3c
  403c38:	4614      	mov	r4, r2
  403c3a:	461d      	mov	r5, r3
  403c3c:	f7ff bb93 	b.w	403366 <_svfprintf_r+0x612>
  403c40:	464e      	mov	r6, r9
  403c42:	f7ff b9a3 	b.w	402f8c <_svfprintf_r+0x238>
  403c46:	bf00      	nop
  403c48:	00408f30 	.word	0x00408f30
  403c4c:	aa25      	add	r2, sp, #148	; 0x94
  403c4e:	990b      	ldr	r1, [sp, #44]	; 0x2c
  403c50:	980c      	ldr	r0, [sp, #48]	; 0x30
  403c52:	f003 fc65 	bl	407520 <__ssprint_r>
  403c56:	2800      	cmp	r0, #0
  403c58:	f47f a959 	bne.w	402f0e <_svfprintf_r+0x1ba>
  403c5c:	46c8      	mov	r8, r9
  403c5e:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  403c60:	f7ff ba1a 	b.w	403098 <_svfprintf_r+0x344>
  403c64:	9c14      	ldr	r4, [sp, #80]	; 0x50
  403c66:	4622      	mov	r2, r4
  403c68:	4620      	mov	r0, r4
  403c6a:	9c15      	ldr	r4, [sp, #84]	; 0x54
  403c6c:	4623      	mov	r3, r4
  403c6e:	4621      	mov	r1, r4
  403c70:	f004 faf4 	bl	40825c <__aeabi_dcmpun>
  403c74:	2800      	cmp	r0, #0
  403c76:	f040 8273 	bne.w	404160 <_svfprintf_r+0x140c>
  403c7a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  403c7c:	3301      	adds	r3, #1
  403c7e:	9b11      	ldr	r3, [sp, #68]	; 0x44
  403c80:	f023 0320 	bic.w	r3, r3, #32
  403c84:	930e      	str	r3, [sp, #56]	; 0x38
  403c86:	f000 819c 	beq.w	403fc2 <_svfprintf_r+0x126e>
  403c8a:	2b47      	cmp	r3, #71	; 0x47
  403c8c:	f000 80d6 	beq.w	403e3c <_svfprintf_r+0x10e8>
  403c90:	f44b 7380 	orr.w	r3, fp, #256	; 0x100
  403c94:	9307      	str	r3, [sp, #28]
  403c96:	9b15      	ldr	r3, [sp, #84]	; 0x54
  403c98:	1e1f      	subs	r7, r3, #0
  403c9a:	9b14      	ldr	r3, [sp, #80]	; 0x50
  403c9c:	9308      	str	r3, [sp, #32]
  403c9e:	bfb7      	itett	lt
  403ca0:	463b      	movlt	r3, r7
  403ca2:	2300      	movge	r3, #0
  403ca4:	f103 4700 	addlt.w	r7, r3, #2147483648	; 0x80000000
  403ca8:	232d      	movlt	r3, #45	; 0x2d
  403caa:	9310      	str	r3, [sp, #64]	; 0x40
  403cac:	9b11      	ldr	r3, [sp, #68]	; 0x44
  403cae:	2b66      	cmp	r3, #102	; 0x66
  403cb0:	f000 8190 	beq.w	403fd4 <_svfprintf_r+0x1280>
  403cb4:	2b46      	cmp	r3, #70	; 0x46
  403cb6:	f000 80a4 	beq.w	403e02 <_svfprintf_r+0x10ae>
  403cba:	2002      	movs	r0, #2
  403cbc:	9b0e      	ldr	r3, [sp, #56]	; 0x38
  403cbe:	a923      	add	r1, sp, #140	; 0x8c
  403cc0:	2b45      	cmp	r3, #69	; 0x45
  403cc2:	bf0a      	itet	eq
  403cc4:	9b0a      	ldreq	r3, [sp, #40]	; 0x28
  403cc6:	9d0a      	ldrne	r5, [sp, #40]	; 0x28
  403cc8:	1c5d      	addeq	r5, r3, #1
  403cca:	e88d 0021 	stmia.w	sp, {r0, r5}
  403cce:	9104      	str	r1, [sp, #16]
  403cd0:	a820      	add	r0, sp, #128	; 0x80
  403cd2:	a91f      	add	r1, sp, #124	; 0x7c
  403cd4:	463b      	mov	r3, r7
  403cd6:	9003      	str	r0, [sp, #12]
  403cd8:	9a08      	ldr	r2, [sp, #32]
  403cda:	9102      	str	r1, [sp, #8]
  403cdc:	980c      	ldr	r0, [sp, #48]	; 0x30
  403cde:	f001 fa2f 	bl	405140 <_dtoa_r>
  403ce2:	9b11      	ldr	r3, [sp, #68]	; 0x44
  403ce4:	4606      	mov	r6, r0
  403ce6:	2b67      	cmp	r3, #103	; 0x67
  403ce8:	f040 81ba 	bne.w	404060 <_svfprintf_r+0x130c>
  403cec:	f01b 0f01 	tst.w	fp, #1
  403cf0:	f000 8223 	beq.w	40413a <_svfprintf_r+0x13e6>
  403cf4:	1974      	adds	r4, r6, r5
  403cf6:	9a16      	ldr	r2, [sp, #88]	; 0x58
  403cf8:	9808      	ldr	r0, [sp, #32]
  403cfa:	9b17      	ldr	r3, [sp, #92]	; 0x5c
  403cfc:	4639      	mov	r1, r7
  403cfe:	f004 fa7b 	bl	4081f8 <__aeabi_dcmpeq>
  403d02:	2800      	cmp	r0, #0
  403d04:	f040 8124 	bne.w	403f50 <_svfprintf_r+0x11fc>
  403d08:	9b23      	ldr	r3, [sp, #140]	; 0x8c
  403d0a:	42a3      	cmp	r3, r4
  403d0c:	d206      	bcs.n	403d1c <_svfprintf_r+0xfc8>
  403d0e:	2130      	movs	r1, #48	; 0x30
  403d10:	1c5a      	adds	r2, r3, #1
  403d12:	9223      	str	r2, [sp, #140]	; 0x8c
  403d14:	7019      	strb	r1, [r3, #0]
  403d16:	9b23      	ldr	r3, [sp, #140]	; 0x8c
  403d18:	429c      	cmp	r4, r3
  403d1a:	d8f9      	bhi.n	403d10 <_svfprintf_r+0xfbc>
  403d1c:	1b9b      	subs	r3, r3, r6
  403d1e:	9313      	str	r3, [sp, #76]	; 0x4c
  403d20:	9b0e      	ldr	r3, [sp, #56]	; 0x38
  403d22:	2b47      	cmp	r3, #71	; 0x47
  403d24:	f000 80a2 	beq.w	403e6c <_svfprintf_r+0x1118>
  403d28:	9b11      	ldr	r3, [sp, #68]	; 0x44
  403d2a:	2b65      	cmp	r3, #101	; 0x65
  403d2c:	f340 81a7 	ble.w	40407e <_svfprintf_r+0x132a>
  403d30:	9b11      	ldr	r3, [sp, #68]	; 0x44
  403d32:	2b66      	cmp	r3, #102	; 0x66
  403d34:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
  403d36:	9312      	str	r3, [sp, #72]	; 0x48
  403d38:	f000 8171 	beq.w	40401e <_svfprintf_r+0x12ca>
  403d3c:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  403d3e:	9a12      	ldr	r2, [sp, #72]	; 0x48
  403d40:	4619      	mov	r1, r3
  403d42:	4291      	cmp	r1, r2
  403d44:	f300 815d 	bgt.w	404002 <_svfprintf_r+0x12ae>
  403d48:	f01b 0f01 	tst.w	fp, #1
  403d4c:	f040 81f0 	bne.w	404130 <_svfprintf_r+0x13dc>
  403d50:	ea22 73e2 	bic.w	r3, r2, r2, asr #31
  403d54:	9308      	str	r3, [sp, #32]
  403d56:	2367      	movs	r3, #103	; 0x67
  403d58:	920e      	str	r2, [sp, #56]	; 0x38
  403d5a:	9311      	str	r3, [sp, #68]	; 0x44
  403d5c:	9b10      	ldr	r3, [sp, #64]	; 0x40
  403d5e:	2b00      	cmp	r3, #0
  403d60:	d17d      	bne.n	403e5e <_svfprintf_r+0x110a>
  403d62:	930a      	str	r3, [sp, #40]	; 0x28
  403d64:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
  403d68:	f7ff b918 	b.w	402f9c <_svfprintf_r+0x248>
  403d6c:	f024 0407 	bic.w	r4, r4, #7
  403d70:	6823      	ldr	r3, [r4, #0]
  403d72:	9314      	str	r3, [sp, #80]	; 0x50
  403d74:	6863      	ldr	r3, [r4, #4]
  403d76:	9315      	str	r3, [sp, #84]	; 0x54
  403d78:	f104 0308 	add.w	r3, r4, #8
  403d7c:	930f      	str	r3, [sp, #60]	; 0x3c
  403d7e:	f7ff bb33 	b.w	4033e8 <_svfprintf_r+0x694>
  403d82:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  403d84:	6813      	ldr	r3, [r2, #0]
  403d86:	3204      	adds	r2, #4
  403d88:	920f      	str	r2, [sp, #60]	; 0x3c
  403d8a:	9a09      	ldr	r2, [sp, #36]	; 0x24
  403d8c:	601a      	str	r2, [r3, #0]
  403d8e:	f7ff b808 	b.w	402da2 <_svfprintf_r+0x4e>
  403d92:	9b26      	ldr	r3, [sp, #152]	; 0x98
  403d94:	4daf      	ldr	r5, [pc, #700]	; (404054 <_svfprintf_r+0x1300>)
  403d96:	f7ff b9b1 	b.w	4030fc <_svfprintf_r+0x3a8>
  403d9a:	aa25      	add	r2, sp, #148	; 0x94
  403d9c:	990b      	ldr	r1, [sp, #44]	; 0x2c
  403d9e:	980c      	ldr	r0, [sp, #48]	; 0x30
  403da0:	f003 fbbe 	bl	407520 <__ssprint_r>
  403da4:	2800      	cmp	r0, #0
  403da6:	f47f a8b2 	bne.w	402f0e <_svfprintf_r+0x1ba>
  403daa:	46c8      	mov	r8, r9
  403dac:	e432      	b.n	403614 <_svfprintf_r+0x8c0>
  403dae:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  403db0:	4613      	mov	r3, r2
  403db2:	3304      	adds	r3, #4
  403db4:	930f      	str	r3, [sp, #60]	; 0x3c
  403db6:	9b09      	ldr	r3, [sp, #36]	; 0x24
  403db8:	6811      	ldr	r1, [r2, #0]
  403dba:	17dd      	asrs	r5, r3, #31
  403dbc:	461a      	mov	r2, r3
  403dbe:	462b      	mov	r3, r5
  403dc0:	e9c1 2300 	strd	r2, r3, [r1]
  403dc4:	f7fe bfed 	b.w	402da2 <_svfprintf_r+0x4e>
  403dc8:	aa25      	add	r2, sp, #148	; 0x94
  403dca:	990b      	ldr	r1, [sp, #44]	; 0x2c
  403dcc:	980c      	ldr	r0, [sp, #48]	; 0x30
  403dce:	f003 fba7 	bl	407520 <__ssprint_r>
  403dd2:	2800      	cmp	r0, #0
  403dd4:	f47f a89b 	bne.w	402f0e <_svfprintf_r+0x1ba>
  403dd8:	46c8      	mov	r8, r9
  403dda:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  403ddc:	e433      	b.n	403646 <_svfprintf_r+0x8f2>
  403dde:	f108 0808 	add.w	r8, r8, #8
  403de2:	e52f      	b.n	403844 <_svfprintf_r+0xaf0>
  403de4:	2140      	movs	r1, #64	; 0x40
  403de6:	980c      	ldr	r0, [sp, #48]	; 0x30
  403de8:	f7fe fa56 	bl	402298 <_malloc_r>
  403dec:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
  403dee:	6010      	str	r0, [r2, #0]
  403df0:	6110      	str	r0, [r2, #16]
  403df2:	2800      	cmp	r0, #0
  403df4:	f000 8213 	beq.w	40421e <_svfprintf_r+0x14ca>
  403df8:	2340      	movs	r3, #64	; 0x40
  403dfa:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
  403dfc:	6153      	str	r3, [r2, #20]
  403dfe:	f7fe bfc0 	b.w	402d82 <_svfprintf_r+0x2e>
  403e02:	2003      	movs	r0, #3
  403e04:	9c0a      	ldr	r4, [sp, #40]	; 0x28
  403e06:	a923      	add	r1, sp, #140	; 0x8c
  403e08:	e88d 0011 	stmia.w	sp, {r0, r4}
  403e0c:	9104      	str	r1, [sp, #16]
  403e0e:	a820      	add	r0, sp, #128	; 0x80
  403e10:	a91f      	add	r1, sp, #124	; 0x7c
  403e12:	9003      	str	r0, [sp, #12]
  403e14:	9a08      	ldr	r2, [sp, #32]
  403e16:	463b      	mov	r3, r7
  403e18:	9102      	str	r1, [sp, #8]
  403e1a:	980c      	ldr	r0, [sp, #48]	; 0x30
  403e1c:	f001 f990 	bl	405140 <_dtoa_r>
  403e20:	4625      	mov	r5, r4
  403e22:	4606      	mov	r6, r0
  403e24:	9b11      	ldr	r3, [sp, #68]	; 0x44
  403e26:	1974      	adds	r4, r6, r5
  403e28:	2b46      	cmp	r3, #70	; 0x46
  403e2a:	f47f af64 	bne.w	403cf6 <_svfprintf_r+0xfa2>
  403e2e:	7833      	ldrb	r3, [r6, #0]
  403e30:	2b30      	cmp	r3, #48	; 0x30
  403e32:	f000 8187 	beq.w	404144 <_svfprintf_r+0x13f0>
  403e36:	9d1f      	ldr	r5, [sp, #124]	; 0x7c
  403e38:	442c      	add	r4, r5
  403e3a:	e75c      	b.n	403cf6 <_svfprintf_r+0xfa2>
  403e3c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  403e3e:	2b00      	cmp	r3, #0
  403e40:	bf08      	it	eq
  403e42:	2301      	moveq	r3, #1
  403e44:	930a      	str	r3, [sp, #40]	; 0x28
  403e46:	e723      	b.n	403c90 <_svfprintf_r+0xf3c>
  403e48:	4630      	mov	r0, r6
  403e4a:	950a      	str	r5, [sp, #40]	; 0x28
  403e4c:	f7fe ff22 	bl	402c94 <strlen>
  403e50:	940f      	str	r4, [sp, #60]	; 0x3c
  403e52:	900e      	str	r0, [sp, #56]	; 0x38
  403e54:	f8cd b01c 	str.w	fp, [sp, #28]
  403e58:	4603      	mov	r3, r0
  403e5a:	f7ff b9eb 	b.w	403234 <_svfprintf_r+0x4e0>
  403e5e:	272d      	movs	r7, #45	; 0x2d
  403e60:	2300      	movs	r3, #0
  403e62:	f88d 7077 	strb.w	r7, [sp, #119]	; 0x77
  403e66:	930a      	str	r3, [sp, #40]	; 0x28
  403e68:	f7ff b899 	b.w	402f9e <_svfprintf_r+0x24a>
  403e6c:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
  403e6e:	461a      	mov	r2, r3
  403e70:	9312      	str	r3, [sp, #72]	; 0x48
  403e72:	3303      	adds	r3, #3
  403e74:	db04      	blt.n	403e80 <_svfprintf_r+0x112c>
  403e76:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  403e78:	4619      	mov	r1, r3
  403e7a:	4291      	cmp	r1, r2
  403e7c:	f6bf af5e 	bge.w	403d3c <_svfprintf_r+0xfe8>
  403e80:	9b11      	ldr	r3, [sp, #68]	; 0x44
  403e82:	3b02      	subs	r3, #2
  403e84:	9311      	str	r3, [sp, #68]	; 0x44
  403e86:	9b12      	ldr	r3, [sp, #72]	; 0x48
  403e88:	f89d 2044 	ldrb.w	r2, [sp, #68]	; 0x44
  403e8c:	3b01      	subs	r3, #1
  403e8e:	2b00      	cmp	r3, #0
  403e90:	f88d 2084 	strb.w	r2, [sp, #132]	; 0x84
  403e94:	bfb4      	ite	lt
  403e96:	222d      	movlt	r2, #45	; 0x2d
  403e98:	222b      	movge	r2, #43	; 0x2b
  403e9a:	931f      	str	r3, [sp, #124]	; 0x7c
  403e9c:	bfb8      	it	lt
  403e9e:	9b12      	ldrlt	r3, [sp, #72]	; 0x48
  403ea0:	f88d 2085 	strb.w	r2, [sp, #133]	; 0x85
  403ea4:	bfb8      	it	lt
  403ea6:	f1c3 0301 	rsblt	r3, r3, #1
  403eaa:	2b09      	cmp	r3, #9
  403eac:	f340 811f 	ble.w	4040ee <_svfprintf_r+0x139a>
  403eb0:	f10d 0093 	add.w	r0, sp, #147	; 0x93
  403eb4:	4601      	mov	r1, r0
  403eb6:	4c68      	ldr	r4, [pc, #416]	; (404058 <_svfprintf_r+0x1304>)
  403eb8:	e000      	b.n	403ebc <_svfprintf_r+0x1168>
  403eba:	4611      	mov	r1, r2
  403ebc:	fb84 5203 	smull	r5, r2, r4, r3
  403ec0:	17dd      	asrs	r5, r3, #31
  403ec2:	ebc5 05a2 	rsb	r5, r5, r2, asr #2
  403ec6:	eb05 0285 	add.w	r2, r5, r5, lsl #2
  403eca:	eba3 0242 	sub.w	r2, r3, r2, lsl #1
  403ece:	3230      	adds	r2, #48	; 0x30
  403ed0:	2d09      	cmp	r5, #9
  403ed2:	f801 2c01 	strb.w	r2, [r1, #-1]
  403ed6:	462b      	mov	r3, r5
  403ed8:	f101 32ff 	add.w	r2, r1, #4294967295
  403edc:	dced      	bgt.n	403eba <_svfprintf_r+0x1166>
  403ede:	3330      	adds	r3, #48	; 0x30
  403ee0:	3902      	subs	r1, #2
  403ee2:	b2dc      	uxtb	r4, r3
  403ee4:	4288      	cmp	r0, r1
  403ee6:	f802 4c01 	strb.w	r4, [r2, #-1]
  403eea:	f240 8191 	bls.w	404210 <_svfprintf_r+0x14bc>
  403eee:	f10d 0186 	add.w	r1, sp, #134	; 0x86
  403ef2:	4613      	mov	r3, r2
  403ef4:	e001      	b.n	403efa <_svfprintf_r+0x11a6>
  403ef6:	f813 4b01 	ldrb.w	r4, [r3], #1
  403efa:	4283      	cmp	r3, r0
  403efc:	f801 4b01 	strb.w	r4, [r1], #1
  403f00:	d1f9      	bne.n	403ef6 <_svfprintf_r+0x11a2>
  403f02:	3301      	adds	r3, #1
  403f04:	1a9b      	subs	r3, r3, r2
  403f06:	f10d 0286 	add.w	r2, sp, #134	; 0x86
  403f0a:	4413      	add	r3, r2
  403f0c:	aa21      	add	r2, sp, #132	; 0x84
  403f0e:	1a9b      	subs	r3, r3, r2
  403f10:	9a13      	ldr	r2, [sp, #76]	; 0x4c
  403f12:	931b      	str	r3, [sp, #108]	; 0x6c
  403f14:	2a01      	cmp	r2, #1
  403f16:	4413      	add	r3, r2
  403f18:	930e      	str	r3, [sp, #56]	; 0x38
  403f1a:	f340 8147 	ble.w	4041ac <_svfprintf_r+0x1458>
  403f1e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
  403f20:	9a19      	ldr	r2, [sp, #100]	; 0x64
  403f22:	4413      	add	r3, r2
  403f24:	930e      	str	r3, [sp, #56]	; 0x38
  403f26:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
  403f2a:	9308      	str	r3, [sp, #32]
  403f2c:	2300      	movs	r3, #0
  403f2e:	9312      	str	r3, [sp, #72]	; 0x48
  403f30:	e714      	b.n	403d5c <_svfprintf_r+0x1008>
  403f32:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  403f34:	9a26      	ldr	r2, [sp, #152]	; 0x98
  403f36:	f7ff b87a 	b.w	40302e <_svfprintf_r+0x2da>
  403f3a:	aa25      	add	r2, sp, #148	; 0x94
  403f3c:	990b      	ldr	r1, [sp, #44]	; 0x2c
  403f3e:	980c      	ldr	r0, [sp, #48]	; 0x30
  403f40:	f003 faee 	bl	407520 <__ssprint_r>
  403f44:	2800      	cmp	r0, #0
  403f46:	f47e afe2 	bne.w	402f0e <_svfprintf_r+0x1ba>
  403f4a:	46c8      	mov	r8, r9
  403f4c:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  403f4e:	e4fb      	b.n	403948 <_svfprintf_r+0xbf4>
  403f50:	4623      	mov	r3, r4
  403f52:	e6e3      	b.n	403d1c <_svfprintf_r+0xfc8>
  403f54:	aa25      	add	r2, sp, #148	; 0x94
  403f56:	990b      	ldr	r1, [sp, #44]	; 0x2c
  403f58:	980c      	ldr	r0, [sp, #48]	; 0x30
  403f5a:	f003 fae1 	bl	407520 <__ssprint_r>
  403f5e:	2800      	cmp	r0, #0
  403f60:	f47e afd5 	bne.w	402f0e <_svfprintf_r+0x1ba>
  403f64:	46c8      	mov	r8, r9
  403f66:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
  403f68:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  403f6a:	e5d3      	b.n	403b14 <_svfprintf_r+0xdc0>
  403f6c:	aa25      	add	r2, sp, #148	; 0x94
  403f6e:	990b      	ldr	r1, [sp, #44]	; 0x2c
  403f70:	980c      	ldr	r0, [sp, #48]	; 0x30
  403f72:	f003 fad5 	bl	407520 <__ssprint_r>
  403f76:	2800      	cmp	r0, #0
  403f78:	f47e afc9 	bne.w	402f0e <_svfprintf_r+0x1ba>
  403f7c:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
  403f7e:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  403f80:	46c8      	mov	r8, r9
  403f82:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  403f84:	1a9a      	subs	r2, r3, r2
  403f86:	e5dd      	b.n	403b44 <_svfprintf_r+0xdf0>
  403f88:	9b26      	ldr	r3, [sp, #152]	; 0x98
  403f8a:	f7ff b902 	b.w	403192 <_svfprintf_r+0x43e>
  403f8e:	aa25      	add	r2, sp, #148	; 0x94
  403f90:	990b      	ldr	r1, [sp, #44]	; 0x2c
  403f92:	980c      	ldr	r0, [sp, #48]	; 0x30
  403f94:	f003 fac4 	bl	407520 <__ssprint_r>
  403f98:	2800      	cmp	r0, #0
  403f9a:	f47e afb8 	bne.w	402f0e <_svfprintf_r+0x1ba>
  403f9e:	46c8      	mov	r8, r9
  403fa0:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  403fa2:	e5b0      	b.n	403b06 <_svfprintf_r+0xdb2>
  403fa4:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  403fa6:	4637      	mov	r7, r6
  403fa8:	2b06      	cmp	r3, #6
  403faa:	bf28      	it	cs
  403fac:	2306      	movcs	r3, #6
  403fae:	960a      	str	r6, [sp, #40]	; 0x28
  403fb0:	9612      	str	r6, [sp, #72]	; 0x48
  403fb2:	9308      	str	r3, [sp, #32]
  403fb4:	940f      	str	r4, [sp, #60]	; 0x3c
  403fb6:	f8cd b01c 	str.w	fp, [sp, #28]
  403fba:	930e      	str	r3, [sp, #56]	; 0x38
  403fbc:	4e27      	ldr	r6, [pc, #156]	; (40405c <_svfprintf_r+0x1308>)
  403fbe:	f7fe bfed 	b.w	402f9c <_svfprintf_r+0x248>
  403fc2:	2306      	movs	r3, #6
  403fc4:	930a      	str	r3, [sp, #40]	; 0x28
  403fc6:	e663      	b.n	403c90 <_svfprintf_r+0xf3c>
  403fc8:	232d      	movs	r3, #45	; 0x2d
  403fca:	461f      	mov	r7, r3
  403fcc:	f88d 3077 	strb.w	r3, [sp, #119]	; 0x77
  403fd0:	f7ff ba2b 	b.w	40342a <_svfprintf_r+0x6d6>
  403fd4:	2003      	movs	r0, #3
  403fd6:	9c0a      	ldr	r4, [sp, #40]	; 0x28
  403fd8:	a923      	add	r1, sp, #140	; 0x8c
  403fda:	e88d 0011 	stmia.w	sp, {r0, r4}
  403fde:	9104      	str	r1, [sp, #16]
  403fe0:	a820      	add	r0, sp, #128	; 0x80
  403fe2:	a91f      	add	r1, sp, #124	; 0x7c
  403fe4:	9003      	str	r0, [sp, #12]
  403fe6:	9a08      	ldr	r2, [sp, #32]
  403fe8:	463b      	mov	r3, r7
  403fea:	9102      	str	r1, [sp, #8]
  403fec:	980c      	ldr	r0, [sp, #48]	; 0x30
  403fee:	f001 f8a7 	bl	405140 <_dtoa_r>
  403ff2:	4625      	mov	r5, r4
  403ff4:	4606      	mov	r6, r0
  403ff6:	1904      	adds	r4, r0, r4
  403ff8:	e719      	b.n	403e2e <_svfprintf_r+0x10da>
  403ffa:	9b26      	ldr	r3, [sp, #152]	; 0x98
  403ffc:	4d15      	ldr	r5, [pc, #84]	; (404054 <_svfprintf_r+0x1300>)
  403ffe:	f7ff bb7f 	b.w	403700 <_svfprintf_r+0x9ac>
  404002:	9a19      	ldr	r2, [sp, #100]	; 0x64
  404004:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  404006:	4413      	add	r3, r2
  404008:	9a12      	ldr	r2, [sp, #72]	; 0x48
  40400a:	930e      	str	r3, [sp, #56]	; 0x38
  40400c:	2a00      	cmp	r2, #0
  40400e:	f340 80c6 	ble.w	40419e <_svfprintf_r+0x144a>
  404012:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
  404016:	9308      	str	r3, [sp, #32]
  404018:	2367      	movs	r3, #103	; 0x67
  40401a:	9311      	str	r3, [sp, #68]	; 0x44
  40401c:	e69e      	b.n	403d5c <_svfprintf_r+0x1008>
  40401e:	2b00      	cmp	r3, #0
  404020:	f340 80e0 	ble.w	4041e4 <_svfprintf_r+0x1490>
  404024:	9a0a      	ldr	r2, [sp, #40]	; 0x28
  404026:	2a00      	cmp	r2, #0
  404028:	f040 80af 	bne.w	40418a <_svfprintf_r+0x1436>
  40402c:	f01b 0f01 	tst.w	fp, #1
  404030:	f040 80ab 	bne.w	40418a <_svfprintf_r+0x1436>
  404034:	9308      	str	r3, [sp, #32]
  404036:	930e      	str	r3, [sp, #56]	; 0x38
  404038:	e690      	b.n	403d5c <_svfprintf_r+0x1008>
  40403a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  40403c:	940f      	str	r4, [sp, #60]	; 0x3c
  40403e:	9308      	str	r3, [sp, #32]
  404040:	930e      	str	r3, [sp, #56]	; 0x38
  404042:	900a      	str	r0, [sp, #40]	; 0x28
  404044:	f8cd b01c 	str.w	fp, [sp, #28]
  404048:	9012      	str	r0, [sp, #72]	; 0x48
  40404a:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
  40404e:	f7fe bfa5 	b.w	402f9c <_svfprintf_r+0x248>
  404052:	bf00      	nop
  404054:	00408f30 	.word	0x00408f30
  404058:	66666667 	.word	0x66666667
  40405c:	00408f14 	.word	0x00408f14
  404060:	9b11      	ldr	r3, [sp, #68]	; 0x44
  404062:	2b47      	cmp	r3, #71	; 0x47
  404064:	f47f ae46 	bne.w	403cf4 <_svfprintf_r+0xfa0>
  404068:	f01b 0f01 	tst.w	fp, #1
  40406c:	f47f aeda 	bne.w	403e24 <_svfprintf_r+0x10d0>
  404070:	9b23      	ldr	r3, [sp, #140]	; 0x8c
  404072:	1b9b      	subs	r3, r3, r6
  404074:	9313      	str	r3, [sp, #76]	; 0x4c
  404076:	9b0e      	ldr	r3, [sp, #56]	; 0x38
  404078:	2b47      	cmp	r3, #71	; 0x47
  40407a:	f43f aef7 	beq.w	403e6c <_svfprintf_r+0x1118>
  40407e:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
  404080:	9312      	str	r3, [sp, #72]	; 0x48
  404082:	e700      	b.n	403e86 <_svfprintf_r+0x1132>
  404084:	2000      	movs	r0, #0
  404086:	900a      	str	r0, [sp, #40]	; 0x28
  404088:	f7fe bec0 	b.w	402e0c <_svfprintf_r+0xb8>
  40408c:	424f      	negs	r7, r1
  40408e:	3110      	adds	r1, #16
  404090:	da35      	bge.n	4040fe <_svfprintf_r+0x13aa>
  404092:	2410      	movs	r4, #16
  404094:	4d6a      	ldr	r5, [pc, #424]	; (404240 <_svfprintf_r+0x14ec>)
  404096:	f8dd b030 	ldr.w	fp, [sp, #48]	; 0x30
  40409a:	e004      	b.n	4040a6 <_svfprintf_r+0x1352>
  40409c:	f108 0808 	add.w	r8, r8, #8
  4040a0:	3f10      	subs	r7, #16
  4040a2:	2f10      	cmp	r7, #16
  4040a4:	dd2c      	ble.n	404100 <_svfprintf_r+0x13ac>
  4040a6:	3301      	adds	r3, #1
  4040a8:	3210      	adds	r2, #16
  4040aa:	2b07      	cmp	r3, #7
  4040ac:	9227      	str	r2, [sp, #156]	; 0x9c
  4040ae:	9326      	str	r3, [sp, #152]	; 0x98
  4040b0:	f8c8 5000 	str.w	r5, [r8]
  4040b4:	f8c8 4004 	str.w	r4, [r8, #4]
  4040b8:	ddf0      	ble.n	40409c <_svfprintf_r+0x1348>
  4040ba:	aa25      	add	r2, sp, #148	; 0x94
  4040bc:	990b      	ldr	r1, [sp, #44]	; 0x2c
  4040be:	4658      	mov	r0, fp
  4040c0:	f003 fa2e 	bl	407520 <__ssprint_r>
  4040c4:	2800      	cmp	r0, #0
  4040c6:	f47e af22 	bne.w	402f0e <_svfprintf_r+0x1ba>
  4040ca:	46c8      	mov	r8, r9
  4040cc:	9a27      	ldr	r2, [sp, #156]	; 0x9c
  4040ce:	9b26      	ldr	r3, [sp, #152]	; 0x98
  4040d0:	e7e6      	b.n	4040a0 <_svfprintf_r+0x134c>
  4040d2:	aa25      	add	r2, sp, #148	; 0x94
  4040d4:	990b      	ldr	r1, [sp, #44]	; 0x2c
  4040d6:	980c      	ldr	r0, [sp, #48]	; 0x30
  4040d8:	f003 fa22 	bl	407520 <__ssprint_r>
  4040dc:	2800      	cmp	r0, #0
  4040de:	f47e af16 	bne.w	402f0e <_svfprintf_r+0x1ba>
  4040e2:	46c8      	mov	r8, r9
  4040e4:	991f      	ldr	r1, [sp, #124]	; 0x7c
  4040e6:	9a27      	ldr	r2, [sp, #156]	; 0x9c
  4040e8:	9b26      	ldr	r3, [sp, #152]	; 0x98
  4040ea:	f7ff bbc3 	b.w	403874 <_svfprintf_r+0xb20>
  4040ee:	2230      	movs	r2, #48	; 0x30
  4040f0:	4413      	add	r3, r2
  4040f2:	f88d 3087 	strb.w	r3, [sp, #135]	; 0x87
  4040f6:	f88d 2086 	strb.w	r2, [sp, #134]	; 0x86
  4040fa:	ab22      	add	r3, sp, #136	; 0x88
  4040fc:	e706      	b.n	403f0c <_svfprintf_r+0x11b8>
  4040fe:	4d50      	ldr	r5, [pc, #320]	; (404240 <_svfprintf_r+0x14ec>)
  404100:	3301      	adds	r3, #1
  404102:	443a      	add	r2, r7
  404104:	2b07      	cmp	r3, #7
  404106:	e888 00a0 	stmia.w	r8, {r5, r7}
  40410a:	9227      	str	r2, [sp, #156]	; 0x9c
  40410c:	9326      	str	r3, [sp, #152]	; 0x98
  40410e:	f108 0808 	add.w	r8, r8, #8
  404112:	f77f abb2 	ble.w	40387a <_svfprintf_r+0xb26>
  404116:	aa25      	add	r2, sp, #148	; 0x94
  404118:	990b      	ldr	r1, [sp, #44]	; 0x2c
  40411a:	980c      	ldr	r0, [sp, #48]	; 0x30
  40411c:	f003 fa00 	bl	407520 <__ssprint_r>
  404120:	2800      	cmp	r0, #0
  404122:	f47e aef4 	bne.w	402f0e <_svfprintf_r+0x1ba>
  404126:	46c8      	mov	r8, r9
  404128:	9a27      	ldr	r2, [sp, #156]	; 0x9c
  40412a:	9b26      	ldr	r3, [sp, #152]	; 0x98
  40412c:	f7ff bba5 	b.w	40387a <_svfprintf_r+0xb26>
  404130:	9b12      	ldr	r3, [sp, #72]	; 0x48
  404132:	9a19      	ldr	r2, [sp, #100]	; 0x64
  404134:	4413      	add	r3, r2
  404136:	930e      	str	r3, [sp, #56]	; 0x38
  404138:	e76b      	b.n	404012 <_svfprintf_r+0x12be>
  40413a:	9b23      	ldr	r3, [sp, #140]	; 0x8c
  40413c:	e5ee      	b.n	403d1c <_svfprintf_r+0xfc8>
  40413e:	9b26      	ldr	r3, [sp, #152]	; 0x98
  404140:	4d3f      	ldr	r5, [pc, #252]	; (404240 <_svfprintf_r+0x14ec>)
  404142:	e4bb      	b.n	403abc <_svfprintf_r+0xd68>
  404144:	9a16      	ldr	r2, [sp, #88]	; 0x58
  404146:	9808      	ldr	r0, [sp, #32]
  404148:	9b17      	ldr	r3, [sp, #92]	; 0x5c
  40414a:	4639      	mov	r1, r7
  40414c:	f004 f854 	bl	4081f8 <__aeabi_dcmpeq>
  404150:	2800      	cmp	r0, #0
  404152:	f47f ae70 	bne.w	403e36 <_svfprintf_r+0x10e2>
  404156:	f1c5 0501 	rsb	r5, r5, #1
  40415a:	951f      	str	r5, [sp, #124]	; 0x7c
  40415c:	442c      	add	r4, r5
  40415e:	e5ca      	b.n	403cf6 <_svfprintf_r+0xfa2>
  404160:	2303      	movs	r3, #3
  404162:	461a      	mov	r2, r3
  404164:	9308      	str	r3, [sp, #32]
  404166:	2300      	movs	r3, #0
  404168:	4619      	mov	r1, r3
  40416a:	930a      	str	r3, [sp, #40]	; 0x28
  40416c:	4e35      	ldr	r6, [pc, #212]	; (404244 <_svfprintf_r+0x14f0>)
  40416e:	4b36      	ldr	r3, [pc, #216]	; (404248 <_svfprintf_r+0x14f4>)
  404170:	920e      	str	r2, [sp, #56]	; 0x38
  404172:	9a11      	ldr	r2, [sp, #68]	; 0x44
  404174:	f02b 0080 	bic.w	r0, fp, #128	; 0x80
  404178:	9007      	str	r0, [sp, #28]
  40417a:	9112      	str	r1, [sp, #72]	; 0x48
  40417c:	2a47      	cmp	r2, #71	; 0x47
  40417e:	bfd8      	it	le
  404180:	461e      	movle	r6, r3
  404182:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
  404186:	f7fe bf09 	b.w	402f9c <_svfprintf_r+0x248>
  40418a:	9b12      	ldr	r3, [sp, #72]	; 0x48
  40418c:	9a19      	ldr	r2, [sp, #100]	; 0x64
  40418e:	4413      	add	r3, r2
  404190:	9a0a      	ldr	r2, [sp, #40]	; 0x28
  404192:	441a      	add	r2, r3
  404194:	ea22 73e2 	bic.w	r3, r2, r2, asr #31
  404198:	920e      	str	r2, [sp, #56]	; 0x38
  40419a:	9308      	str	r3, [sp, #32]
  40419c:	e5de      	b.n	403d5c <_svfprintf_r+0x1008>
  40419e:	9b12      	ldr	r3, [sp, #72]	; 0x48
  4041a0:	9a0e      	ldr	r2, [sp, #56]	; 0x38
  4041a2:	f1c3 0301 	rsb	r3, r3, #1
  4041a6:	441a      	add	r2, r3
  4041a8:	4613      	mov	r3, r2
  4041aa:	e7c4      	b.n	404136 <_svfprintf_r+0x13e2>
  4041ac:	f01b 0301 	ands.w	r3, fp, #1
  4041b0:	9312      	str	r3, [sp, #72]	; 0x48
  4041b2:	f47f aeb4 	bne.w	403f1e <_svfprintf_r+0x11ca>
  4041b6:	9b0e      	ldr	r3, [sp, #56]	; 0x38
  4041b8:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
  4041bc:	9308      	str	r3, [sp, #32]
  4041be:	e5cd      	b.n	403d5c <_svfprintf_r+0x1008>
  4041c0:	4d1f      	ldr	r5, [pc, #124]	; (404240 <_svfprintf_r+0x14ec>)
  4041c2:	e43d      	b.n	403a40 <_svfprintf_r+0xcec>
  4041c4:	9b26      	ldr	r3, [sp, #152]	; 0x98
  4041c6:	4d1e      	ldr	r5, [pc, #120]	; (404240 <_svfprintf_r+0x14ec>)
  4041c8:	e492      	b.n	403af0 <_svfprintf_r+0xd9c>
  4041ca:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
  4041cc:	f89a 3001 	ldrb.w	r3, [sl, #1]
  4041d0:	6828      	ldr	r0, [r5, #0]
  4041d2:	46a2      	mov	sl, r4
  4041d4:	ea40 70e0 	orr.w	r0, r0, r0, asr #31
  4041d8:	900a      	str	r0, [sp, #40]	; 0x28
  4041da:	4628      	mov	r0, r5
  4041dc:	3004      	adds	r0, #4
  4041de:	900f      	str	r0, [sp, #60]	; 0x3c
  4041e0:	f7fe be12 	b.w	402e08 <_svfprintf_r+0xb4>
  4041e4:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  4041e6:	b913      	cbnz	r3, 4041ee <_svfprintf_r+0x149a>
  4041e8:	f01b 0f01 	tst.w	fp, #1
  4041ec:	d002      	beq.n	4041f4 <_svfprintf_r+0x14a0>
  4041ee:	9b19      	ldr	r3, [sp, #100]	; 0x64
  4041f0:	3301      	adds	r3, #1
  4041f2:	e7cd      	b.n	404190 <_svfprintf_r+0x143c>
  4041f4:	2301      	movs	r3, #1
  4041f6:	e71d      	b.n	404034 <_svfprintf_r+0x12e0>
  4041f8:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
  4041fc:	f7ff b984 	b.w	403508 <_svfprintf_r+0x7b4>
  404200:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
  404204:	f7ff b93e 	b.w	403484 <_svfprintf_r+0x730>
  404208:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
  40420c:	f7ff b854 	b.w	4032b8 <_svfprintf_r+0x564>
  404210:	f10d 0386 	add.w	r3, sp, #134	; 0x86
  404214:	e67a      	b.n	403f0c <_svfprintf_r+0x11b8>
  404216:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
  40421a:	f7ff b9b6 	b.w	40358a <_svfprintf_r+0x836>
  40421e:	f04f 32ff 	mov.w	r2, #4294967295
  404222:	230c      	movs	r3, #12
  404224:	9209      	str	r2, [sp, #36]	; 0x24
  404226:	9a0c      	ldr	r2, [sp, #48]	; 0x30
  404228:	6013      	str	r3, [r2, #0]
  40422a:	f7fe be79 	b.w	402f20 <_svfprintf_r+0x1cc>
  40422e:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
  404232:	f7ff b8c9 	b.w	4033c8 <_svfprintf_r+0x674>
  404236:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
  40423a:	f7ff b87d 	b.w	403338 <_svfprintf_r+0x5e4>
  40423e:	bf00      	nop
  404240:	00408f30 	.word	0x00408f30
  404244:	00408ee8 	.word	0x00408ee8
  404248:	00408ee4 	.word	0x00408ee4

0040424c <__sprint_r.part.0>:
  40424c:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
  404250:	6e4b      	ldr	r3, [r1, #100]	; 0x64
  404252:	4693      	mov	fp, r2
  404254:	049c      	lsls	r4, r3, #18
  404256:	d52f      	bpl.n	4042b8 <__sprint_r.part.0+0x6c>
  404258:	6893      	ldr	r3, [r2, #8]
  40425a:	6812      	ldr	r2, [r2, #0]
  40425c:	b353      	cbz	r3, 4042b4 <__sprint_r.part.0+0x68>
  40425e:	460e      	mov	r6, r1
  404260:	4607      	mov	r7, r0
  404262:	f102 0908 	add.w	r9, r2, #8
  404266:	e919 0420 	ldmdb	r9, {r5, sl}
  40426a:	ea5f 089a 	movs.w	r8, sl, lsr #2
  40426e:	d017      	beq.n	4042a0 <__sprint_r.part.0+0x54>
  404270:	2400      	movs	r4, #0
  404272:	3d04      	subs	r5, #4
  404274:	e001      	b.n	40427a <__sprint_r.part.0+0x2e>
  404276:	45a0      	cmp	r8, r4
  404278:	d010      	beq.n	40429c <__sprint_r.part.0+0x50>
  40427a:	4632      	mov	r2, r6
  40427c:	f855 1f04 	ldr.w	r1, [r5, #4]!
  404280:	4638      	mov	r0, r7
  404282:	f002 f81f 	bl	4062c4 <_fputwc_r>
  404286:	1c43      	adds	r3, r0, #1
  404288:	f104 0401 	add.w	r4, r4, #1
  40428c:	d1f3      	bne.n	404276 <__sprint_r.part.0+0x2a>
  40428e:	2300      	movs	r3, #0
  404290:	f8cb 3008 	str.w	r3, [fp, #8]
  404294:	f8cb 3004 	str.w	r3, [fp, #4]
  404298:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
  40429c:	f8db 3008 	ldr.w	r3, [fp, #8]
  4042a0:	f02a 0a03 	bic.w	sl, sl, #3
  4042a4:	eba3 030a 	sub.w	r3, r3, sl
  4042a8:	f8cb 3008 	str.w	r3, [fp, #8]
  4042ac:	f109 0908 	add.w	r9, r9, #8
  4042b0:	2b00      	cmp	r3, #0
  4042b2:	d1d8      	bne.n	404266 <__sprint_r.part.0+0x1a>
  4042b4:	2000      	movs	r0, #0
  4042b6:	e7ea      	b.n	40428e <__sprint_r.part.0+0x42>
  4042b8:	f002 f94c 	bl	406554 <__sfvwrite_r>
  4042bc:	2300      	movs	r3, #0
  4042be:	f8cb 3008 	str.w	r3, [fp, #8]
  4042c2:	f8cb 3004 	str.w	r3, [fp, #4]
  4042c6:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
  4042ca:	bf00      	nop

004042cc <_vfiprintf_r>:
  4042cc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  4042d0:	b0ad      	sub	sp, #180	; 0xb4
  4042d2:	461d      	mov	r5, r3
  4042d4:	9101      	str	r1, [sp, #4]
  4042d6:	4691      	mov	r9, r2
  4042d8:	9308      	str	r3, [sp, #32]
  4042da:	9006      	str	r0, [sp, #24]
  4042dc:	b118      	cbz	r0, 4042e6 <_vfiprintf_r+0x1a>
  4042de:	6b83      	ldr	r3, [r0, #56]	; 0x38
  4042e0:	2b00      	cmp	r3, #0
  4042e2:	f000 80e0 	beq.w	4044a6 <_vfiprintf_r+0x1da>
  4042e6:	9c01      	ldr	r4, [sp, #4]
  4042e8:	f9b4 000c 	ldrsh.w	r0, [r4, #12]
  4042ec:	b281      	uxth	r1, r0
  4042ee:	048b      	lsls	r3, r1, #18
  4042f0:	d407      	bmi.n	404302 <_vfiprintf_r+0x36>
  4042f2:	6e63      	ldr	r3, [r4, #100]	; 0x64
  4042f4:	f440 5100 	orr.w	r1, r0, #8192	; 0x2000
  4042f8:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
  4042fc:	81a1      	strh	r1, [r4, #12]
  4042fe:	6663      	str	r3, [r4, #100]	; 0x64
  404300:	b289      	uxth	r1, r1
  404302:	070f      	lsls	r7, r1, #28
  404304:	f140 80b1 	bpl.w	40446a <_vfiprintf_r+0x19e>
  404308:	9b01      	ldr	r3, [sp, #4]
  40430a:	691b      	ldr	r3, [r3, #16]
  40430c:	2b00      	cmp	r3, #0
  40430e:	f000 80ac 	beq.w	40446a <_vfiprintf_r+0x19e>
  404312:	f001 011a 	and.w	r1, r1, #26
  404316:	290a      	cmp	r1, #10
  404318:	f000 80b5 	beq.w	404486 <_vfiprintf_r+0x1ba>
  40431c:	2300      	movs	r3, #0
  40431e:	f10d 0a70 	add.w	sl, sp, #112	; 0x70
  404322:	46d3      	mov	fp, sl
  404324:	930b      	str	r3, [sp, #44]	; 0x2c
  404326:	9304      	str	r3, [sp, #16]
  404328:	9311      	str	r3, [sp, #68]	; 0x44
  40432a:	9310      	str	r3, [sp, #64]	; 0x40
  40432c:	f8cd a03c 	str.w	sl, [sp, #60]	; 0x3c
  404330:	f899 3000 	ldrb.w	r3, [r9]
  404334:	464c      	mov	r4, r9
  404336:	b1fb      	cbz	r3, 404378 <_vfiprintf_r+0xac>
  404338:	2b25      	cmp	r3, #37	; 0x25
  40433a:	d102      	bne.n	404342 <_vfiprintf_r+0x76>
  40433c:	e01c      	b.n	404378 <_vfiprintf_r+0xac>
  40433e:	2b25      	cmp	r3, #37	; 0x25
  404340:	d003      	beq.n	40434a <_vfiprintf_r+0x7e>
  404342:	f814 3f01 	ldrb.w	r3, [r4, #1]!
  404346:	2b00      	cmp	r3, #0
  404348:	d1f9      	bne.n	40433e <_vfiprintf_r+0x72>
  40434a:	eba4 0509 	sub.w	r5, r4, r9
  40434e:	b19d      	cbz	r5, 404378 <_vfiprintf_r+0xac>
  404350:	9b10      	ldr	r3, [sp, #64]	; 0x40
  404352:	9a11      	ldr	r2, [sp, #68]	; 0x44
  404354:	3301      	adds	r3, #1
  404356:	442a      	add	r2, r5
  404358:	2b07      	cmp	r3, #7
  40435a:	f8cb 9000 	str.w	r9, [fp]
  40435e:	f8cb 5004 	str.w	r5, [fp, #4]
  404362:	9211      	str	r2, [sp, #68]	; 0x44
  404364:	9310      	str	r3, [sp, #64]	; 0x40
  404366:	dd7a      	ble.n	40445e <_vfiprintf_r+0x192>
  404368:	2a00      	cmp	r2, #0
  40436a:	f040 8493 	bne.w	404c94 <_vfiprintf_r+0x9c8>
  40436e:	46d3      	mov	fp, sl
  404370:	9b04      	ldr	r3, [sp, #16]
  404372:	9210      	str	r2, [sp, #64]	; 0x40
  404374:	442b      	add	r3, r5
  404376:	9304      	str	r3, [sp, #16]
  404378:	7823      	ldrb	r3, [r4, #0]
  40437a:	2b00      	cmp	r3, #0
  40437c:	f000 83b6 	beq.w	404aec <_vfiprintf_r+0x820>
  404380:	2000      	movs	r0, #0
  404382:	f04f 0300 	mov.w	r3, #0
  404386:	f104 0901 	add.w	r9, r4, #1
  40438a:	f88d 3037 	strb.w	r3, [sp, #55]	; 0x37
  40438e:	7862      	ldrb	r2, [r4, #1]
  404390:	4606      	mov	r6, r0
  404392:	4605      	mov	r5, r0
  404394:	4603      	mov	r3, r0
  404396:	f04f 34ff 	mov.w	r4, #4294967295
  40439a:	f109 0901 	add.w	r9, r9, #1
  40439e:	f1a2 0120 	sub.w	r1, r2, #32
  4043a2:	2958      	cmp	r1, #88	; 0x58
  4043a4:	f200 830a 	bhi.w	4049bc <_vfiprintf_r+0x6f0>
  4043a8:	e8df f011 	tbh	[pc, r1, lsl #1]
  4043ac:	0308023f 	.word	0x0308023f
  4043b0:	02e70308 	.word	0x02e70308
  4043b4:	03080308 	.word	0x03080308
  4043b8:	03080308 	.word	0x03080308
  4043bc:	03080308 	.word	0x03080308
  4043c0:	02ec0080 	.word	0x02ec0080
  4043c4:	00880308 	.word	0x00880308
  4043c8:	0308027f 	.word	0x0308027f
  4043cc:	01db01d6 	.word	0x01db01d6
  4043d0:	01db01db 	.word	0x01db01db
  4043d4:	01db01db 	.word	0x01db01db
  4043d8:	01db01db 	.word	0x01db01db
  4043dc:	01db01db 	.word	0x01db01db
  4043e0:	03080308 	.word	0x03080308
  4043e4:	03080308 	.word	0x03080308
  4043e8:	03080308 	.word	0x03080308
  4043ec:	03080308 	.word	0x03080308
  4043f0:	03080308 	.word	0x03080308
  4043f4:	03080247 	.word	0x03080247
  4043f8:	03080308 	.word	0x03080308
  4043fc:	03080308 	.word	0x03080308
  404400:	03080308 	.word	0x03080308
  404404:	03080308 	.word	0x03080308
  404408:	024e0308 	.word	0x024e0308
  40440c:	03080308 	.word	0x03080308
  404410:	03080308 	.word	0x03080308
  404414:	02520308 	.word	0x02520308
  404418:	03080308 	.word	0x03080308
  40441c:	0308025a 	.word	0x0308025a
  404420:	03080308 	.word	0x03080308
  404424:	03080308 	.word	0x03080308
  404428:	03080308 	.word	0x03080308
  40442c:	03080308 	.word	0x03080308
  404430:	01e90308 	.word	0x01e90308
  404434:	030801fe 	.word	0x030801fe
  404438:	03080308 	.word	0x03080308
  40443c:	01fe0303 	.word	0x01fe0303
  404440:	03080308 	.word	0x03080308
  404444:	03080299 	.word	0x03080299
  404448:	008d02f1 	.word	0x008d02f1
  40444c:	02bf02ad 	.word	0x02bf02ad
  404450:	02c40308 	.word	0x02c40308
  404454:	01c40308 	.word	0x01c40308
  404458:	03080308 	.word	0x03080308
  40445c:	02a6      	.short	0x02a6
  40445e:	f10b 0b08 	add.w	fp, fp, #8
  404462:	9b04      	ldr	r3, [sp, #16]
  404464:	442b      	add	r3, r5
  404466:	9304      	str	r3, [sp, #16]
  404468:	e786      	b.n	404378 <_vfiprintf_r+0xac>
  40446a:	9c01      	ldr	r4, [sp, #4]
  40446c:	9806      	ldr	r0, [sp, #24]
  40446e:	4621      	mov	r1, r4
  404470:	f000 fd5c 	bl	404f2c <__swsetup_r>
  404474:	2800      	cmp	r0, #0
  404476:	f040 8345 	bne.w	404b04 <_vfiprintf_r+0x838>
  40447a:	89a1      	ldrh	r1, [r4, #12]
  40447c:	f001 011a 	and.w	r1, r1, #26
  404480:	290a      	cmp	r1, #10
  404482:	f47f af4b 	bne.w	40431c <_vfiprintf_r+0x50>
  404486:	9901      	ldr	r1, [sp, #4]
  404488:	f9b1 300e 	ldrsh.w	r3, [r1, #14]
  40448c:	2b00      	cmp	r3, #0
  40448e:	f6ff af45 	blt.w	40431c <_vfiprintf_r+0x50>
  404492:	462b      	mov	r3, r5
  404494:	464a      	mov	r2, r9
  404496:	9806      	ldr	r0, [sp, #24]
  404498:	f000 fd12 	bl	404ec0 <__sbprintf>
  40449c:	9004      	str	r0, [sp, #16]
  40449e:	9804      	ldr	r0, [sp, #16]
  4044a0:	b02d      	add	sp, #180	; 0xb4
  4044a2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  4044a6:	f001 fe9d 	bl	4061e4 <__sinit>
  4044aa:	e71c      	b.n	4042e6 <_vfiprintf_r+0x1a>
  4044ac:	9908      	ldr	r1, [sp, #32]
  4044ae:	460a      	mov	r2, r1
  4044b0:	680d      	ldr	r5, [r1, #0]
  4044b2:	3204      	adds	r2, #4
  4044b4:	2d00      	cmp	r5, #0
  4044b6:	9208      	str	r2, [sp, #32]
  4044b8:	da02      	bge.n	4044c0 <_vfiprintf_r+0x1f4>
  4044ba:	426d      	negs	r5, r5
  4044bc:	f043 0304 	orr.w	r3, r3, #4
  4044c0:	f899 2000 	ldrb.w	r2, [r9]
  4044c4:	e769      	b.n	40439a <_vfiprintf_r+0xce>
  4044c6:	9507      	str	r5, [sp, #28]
  4044c8:	f013 0220 	ands.w	r2, r3, #32
  4044cc:	f040 843d 	bne.w	404d4a <_vfiprintf_r+0xa7e>
  4044d0:	f013 0110 	ands.w	r1, r3, #16
  4044d4:	f040 83e9 	bne.w	404caa <_vfiprintf_r+0x9de>
  4044d8:	f013 0240 	ands.w	r2, r3, #64	; 0x40
  4044dc:	f000 83e5 	beq.w	404caa <_vfiprintf_r+0x9de>
  4044e0:	9808      	ldr	r0, [sp, #32]
  4044e2:	460a      	mov	r2, r1
  4044e4:	4601      	mov	r1, r0
  4044e6:	2700      	movs	r7, #0
  4044e8:	3104      	adds	r1, #4
  4044ea:	8806      	ldrh	r6, [r0, #0]
  4044ec:	9108      	str	r1, [sp, #32]
  4044ee:	f04f 0100 	mov.w	r1, #0
  4044f2:	2500      	movs	r5, #0
  4044f4:	f88d 1037 	strb.w	r1, [sp, #55]	; 0x37
  4044f8:	1c61      	adds	r1, r4, #1
  4044fa:	f000 8177 	beq.w	4047ec <_vfiprintf_r+0x520>
  4044fe:	f023 0180 	bic.w	r1, r3, #128	; 0x80
  404502:	9103      	str	r1, [sp, #12]
  404504:	ea56 0107 	orrs.w	r1, r6, r7
  404508:	f040 8175 	bne.w	4047f6 <_vfiprintf_r+0x52a>
  40450c:	2c00      	cmp	r4, #0
  40450e:	f040 8354 	bne.w	404bba <_vfiprintf_r+0x8ee>
  404512:	2a00      	cmp	r2, #0
  404514:	f040 8393 	bne.w	404c3e <_vfiprintf_r+0x972>
  404518:	f013 0301 	ands.w	r3, r3, #1
  40451c:	9305      	str	r3, [sp, #20]
  40451e:	f000 8442 	beq.w	404da6 <_vfiprintf_r+0xada>
  404522:	2330      	movs	r3, #48	; 0x30
  404524:	f10d 08b0 	add.w	r8, sp, #176	; 0xb0
  404528:	f808 3d41 	strb.w	r3, [r8, #-65]!
  40452c:	9b05      	ldr	r3, [sp, #20]
  40452e:	42a3      	cmp	r3, r4
  404530:	bfb8      	it	lt
  404532:	4623      	movlt	r3, r4
  404534:	9302      	str	r3, [sp, #8]
  404536:	b10d      	cbz	r5, 40453c <_vfiprintf_r+0x270>
  404538:	3301      	adds	r3, #1
  40453a:	9302      	str	r3, [sp, #8]
  40453c:	9b03      	ldr	r3, [sp, #12]
  40453e:	f013 0302 	ands.w	r3, r3, #2
  404542:	9309      	str	r3, [sp, #36]	; 0x24
  404544:	d002      	beq.n	40454c <_vfiprintf_r+0x280>
  404546:	9b02      	ldr	r3, [sp, #8]
  404548:	3302      	adds	r3, #2
  40454a:	9302      	str	r3, [sp, #8]
  40454c:	9b03      	ldr	r3, [sp, #12]
  40454e:	f013 0384 	ands.w	r3, r3, #132	; 0x84
  404552:	930a      	str	r3, [sp, #40]	; 0x28
  404554:	f040 8261 	bne.w	404a1a <_vfiprintf_r+0x74e>
  404558:	9b07      	ldr	r3, [sp, #28]
  40455a:	9a02      	ldr	r2, [sp, #8]
  40455c:	1a9d      	subs	r5, r3, r2
  40455e:	2d00      	cmp	r5, #0
  404560:	f340 825b 	ble.w	404a1a <_vfiprintf_r+0x74e>
  404564:	2d10      	cmp	r5, #16
  404566:	f340 8468 	ble.w	404e3a <_vfiprintf_r+0xb6e>
  40456a:	9b10      	ldr	r3, [sp, #64]	; 0x40
  40456c:	46de      	mov	lr, fp
  40456e:	2710      	movs	r7, #16
  404570:	46a3      	mov	fp, r4
  404572:	9a11      	ldr	r2, [sp, #68]	; 0x44
  404574:	4eb8      	ldr	r6, [pc, #736]	; (404858 <_vfiprintf_r+0x58c>)
  404576:	4619      	mov	r1, r3
  404578:	9c06      	ldr	r4, [sp, #24]
  40457a:	e007      	b.n	40458c <_vfiprintf_r+0x2c0>
  40457c:	f101 0c02 	add.w	ip, r1, #2
  404580:	4601      	mov	r1, r0
  404582:	f10e 0e08 	add.w	lr, lr, #8
  404586:	3d10      	subs	r5, #16
  404588:	2d10      	cmp	r5, #16
  40458a:	dd11      	ble.n	4045b0 <_vfiprintf_r+0x2e4>
  40458c:	1c48      	adds	r0, r1, #1
  40458e:	3210      	adds	r2, #16
  404590:	2807      	cmp	r0, #7
  404592:	9211      	str	r2, [sp, #68]	; 0x44
  404594:	e88e 00c0 	stmia.w	lr, {r6, r7}
  404598:	9010      	str	r0, [sp, #64]	; 0x40
  40459a:	ddef      	ble.n	40457c <_vfiprintf_r+0x2b0>
  40459c:	2a00      	cmp	r2, #0
  40459e:	f040 8227 	bne.w	4049f0 <_vfiprintf_r+0x724>
  4045a2:	3d10      	subs	r5, #16
  4045a4:	2d10      	cmp	r5, #16
  4045a6:	4611      	mov	r1, r2
  4045a8:	f04f 0c01 	mov.w	ip, #1
  4045ac:	46d6      	mov	lr, sl
  4045ae:	dced      	bgt.n	40458c <_vfiprintf_r+0x2c0>
  4045b0:	465c      	mov	r4, fp
  4045b2:	4661      	mov	r1, ip
  4045b4:	46f3      	mov	fp, lr
  4045b6:	442a      	add	r2, r5
  4045b8:	2907      	cmp	r1, #7
  4045ba:	9211      	str	r2, [sp, #68]	; 0x44
  4045bc:	f8cb 6000 	str.w	r6, [fp]
  4045c0:	f8cb 5004 	str.w	r5, [fp, #4]
  4045c4:	9110      	str	r1, [sp, #64]	; 0x40
  4045c6:	f300 82e4 	bgt.w	404b92 <_vfiprintf_r+0x8c6>
  4045ca:	f89d 5037 	ldrb.w	r5, [sp, #55]	; 0x37
  4045ce:	f10b 0b08 	add.w	fp, fp, #8
  4045d2:	1c48      	adds	r0, r1, #1
  4045d4:	2d00      	cmp	r5, #0
  4045d6:	f040 8228 	bne.w	404a2a <_vfiprintf_r+0x75e>
  4045da:	9b09      	ldr	r3, [sp, #36]	; 0x24
  4045dc:	2b00      	cmp	r3, #0
  4045de:	f000 8242 	beq.w	404a66 <_vfiprintf_r+0x79a>
  4045e2:	2102      	movs	r1, #2
  4045e4:	ab0e      	add	r3, sp, #56	; 0x38
  4045e6:	440a      	add	r2, r1
  4045e8:	2807      	cmp	r0, #7
  4045ea:	9211      	str	r2, [sp, #68]	; 0x44
  4045ec:	9010      	str	r0, [sp, #64]	; 0x40
  4045ee:	f8cb 1004 	str.w	r1, [fp, #4]
  4045f2:	f8cb 3000 	str.w	r3, [fp]
  4045f6:	f340 8232 	ble.w	404a5e <_vfiprintf_r+0x792>
  4045fa:	2a00      	cmp	r2, #0
  4045fc:	f040 8378 	bne.w	404cf0 <_vfiprintf_r+0xa24>
  404600:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  404602:	2001      	movs	r0, #1
  404604:	2b80      	cmp	r3, #128	; 0x80
  404606:	4611      	mov	r1, r2
  404608:	46d3      	mov	fp, sl
  40460a:	f040 8230 	bne.w	404a6e <_vfiprintf_r+0x7a2>
  40460e:	9b07      	ldr	r3, [sp, #28]
  404610:	9d02      	ldr	r5, [sp, #8]
  404612:	1b5e      	subs	r6, r3, r5
  404614:	2e00      	cmp	r6, #0
  404616:	f340 822a 	ble.w	404a6e <_vfiprintf_r+0x7a2>
  40461a:	2e10      	cmp	r6, #16
  40461c:	f340 8428 	ble.w	404e70 <_vfiprintf_r+0xba4>
  404620:	46dc      	mov	ip, fp
  404622:	2710      	movs	r7, #16
  404624:	46a3      	mov	fp, r4
  404626:	4d8d      	ldr	r5, [pc, #564]	; (40485c <_vfiprintf_r+0x590>)
  404628:	9c06      	ldr	r4, [sp, #24]
  40462a:	e007      	b.n	40463c <_vfiprintf_r+0x370>
  40462c:	f101 0e02 	add.w	lr, r1, #2
  404630:	4601      	mov	r1, r0
  404632:	f10c 0c08 	add.w	ip, ip, #8
  404636:	3e10      	subs	r6, #16
  404638:	2e10      	cmp	r6, #16
  40463a:	dd11      	ble.n	404660 <_vfiprintf_r+0x394>
  40463c:	1c48      	adds	r0, r1, #1
  40463e:	3210      	adds	r2, #16
  404640:	2807      	cmp	r0, #7
  404642:	9211      	str	r2, [sp, #68]	; 0x44
  404644:	e88c 00a0 	stmia.w	ip, {r5, r7}
  404648:	9010      	str	r0, [sp, #64]	; 0x40
  40464a:	ddef      	ble.n	40462c <_vfiprintf_r+0x360>
  40464c:	2a00      	cmp	r2, #0
  40464e:	f040 8293 	bne.w	404b78 <_vfiprintf_r+0x8ac>
  404652:	3e10      	subs	r6, #16
  404654:	2e10      	cmp	r6, #16
  404656:	f04f 0e01 	mov.w	lr, #1
  40465a:	4611      	mov	r1, r2
  40465c:	46d4      	mov	ip, sl
  40465e:	dced      	bgt.n	40463c <_vfiprintf_r+0x370>
  404660:	465c      	mov	r4, fp
  404662:	46e3      	mov	fp, ip
  404664:	4432      	add	r2, r6
  404666:	f1be 0f07 	cmp.w	lr, #7
  40466a:	9211      	str	r2, [sp, #68]	; 0x44
  40466c:	e88b 0060 	stmia.w	fp, {r5, r6}
  404670:	f8cd e040 	str.w	lr, [sp, #64]	; 0x40
  404674:	f300 8356 	bgt.w	404d24 <_vfiprintf_r+0xa58>
  404678:	9b05      	ldr	r3, [sp, #20]
  40467a:	f10b 0b08 	add.w	fp, fp, #8
  40467e:	1ae4      	subs	r4, r4, r3
  404680:	2c00      	cmp	r4, #0
  404682:	f10e 0001 	add.w	r0, lr, #1
  404686:	4671      	mov	r1, lr
  404688:	f300 81f6 	bgt.w	404a78 <_vfiprintf_r+0x7ac>
  40468c:	9905      	ldr	r1, [sp, #20]
  40468e:	2807      	cmp	r0, #7
  404690:	440a      	add	r2, r1
  404692:	9211      	str	r2, [sp, #68]	; 0x44
  404694:	f8cb 8000 	str.w	r8, [fp]
  404698:	f8cb 1004 	str.w	r1, [fp, #4]
  40469c:	9010      	str	r0, [sp, #64]	; 0x40
  40469e:	f340 8252 	ble.w	404b46 <_vfiprintf_r+0x87a>
  4046a2:	2a00      	cmp	r2, #0
  4046a4:	f040 82eb 	bne.w	404c7e <_vfiprintf_r+0x9b2>
  4046a8:	9b03      	ldr	r3, [sp, #12]
  4046aa:	9210      	str	r2, [sp, #64]	; 0x40
  4046ac:	0758      	lsls	r0, r3, #29
  4046ae:	d538      	bpl.n	404722 <_vfiprintf_r+0x456>
  4046b0:	9b07      	ldr	r3, [sp, #28]
  4046b2:	9902      	ldr	r1, [sp, #8]
  4046b4:	1a5c      	subs	r4, r3, r1
  4046b6:	2c00      	cmp	r4, #0
  4046b8:	f340 82b7 	ble.w	404c2a <_vfiprintf_r+0x95e>
  4046bc:	46d3      	mov	fp, sl
  4046be:	2c10      	cmp	r4, #16
  4046c0:	f340 83ca 	ble.w	404e58 <_vfiprintf_r+0xb8c>
  4046c4:	2510      	movs	r5, #16
  4046c6:	9910      	ldr	r1, [sp, #64]	; 0x40
  4046c8:	4e63      	ldr	r6, [pc, #396]	; (404858 <_vfiprintf_r+0x58c>)
  4046ca:	9f06      	ldr	r7, [sp, #24]
  4046cc:	f8dd 8004 	ldr.w	r8, [sp, #4]
  4046d0:	e006      	b.n	4046e0 <_vfiprintf_r+0x414>
  4046d2:	1c88      	adds	r0, r1, #2
  4046d4:	4619      	mov	r1, r3
  4046d6:	f10b 0b08 	add.w	fp, fp, #8
  4046da:	3c10      	subs	r4, #16
  4046dc:	2c10      	cmp	r4, #16
  4046de:	dd13      	ble.n	404708 <_vfiprintf_r+0x43c>
  4046e0:	1c4b      	adds	r3, r1, #1
  4046e2:	3210      	adds	r2, #16
  4046e4:	2b07      	cmp	r3, #7
  4046e6:	9211      	str	r2, [sp, #68]	; 0x44
  4046e8:	f8cb 6000 	str.w	r6, [fp]
  4046ec:	f8cb 5004 	str.w	r5, [fp, #4]
  4046f0:	9310      	str	r3, [sp, #64]	; 0x40
  4046f2:	ddee      	ble.n	4046d2 <_vfiprintf_r+0x406>
  4046f4:	2a00      	cmp	r2, #0
  4046f6:	f040 8209 	bne.w	404b0c <_vfiprintf_r+0x840>
  4046fa:	3c10      	subs	r4, #16
  4046fc:	2c10      	cmp	r4, #16
  4046fe:	f04f 0001 	mov.w	r0, #1
  404702:	4611      	mov	r1, r2
  404704:	46d3      	mov	fp, sl
  404706:	dceb      	bgt.n	4046e0 <_vfiprintf_r+0x414>
  404708:	4422      	add	r2, r4
  40470a:	2807      	cmp	r0, #7
  40470c:	9211      	str	r2, [sp, #68]	; 0x44
  40470e:	f8cb 6000 	str.w	r6, [fp]
  404712:	f8cb 4004 	str.w	r4, [fp, #4]
  404716:	9010      	str	r0, [sp, #64]	; 0x40
  404718:	f340 8220 	ble.w	404b5c <_vfiprintf_r+0x890>
  40471c:	2a00      	cmp	r2, #0
  40471e:	f040 8354 	bne.w	404dca <_vfiprintf_r+0xafe>
  404722:	9b04      	ldr	r3, [sp, #16]
  404724:	9a07      	ldr	r2, [sp, #28]
  404726:	9902      	ldr	r1, [sp, #8]
  404728:	428a      	cmp	r2, r1
  40472a:	bfac      	ite	ge
  40472c:	189b      	addge	r3, r3, r2
  40472e:	185b      	addlt	r3, r3, r1
  404730:	9304      	str	r3, [sp, #16]
  404732:	e21c      	b.n	404b6e <_vfiprintf_r+0x8a2>
  404734:	9507      	str	r5, [sp, #28]
  404736:	069e      	lsls	r6, r3, #26
  404738:	f100 8313 	bmi.w	404d62 <_vfiprintf_r+0xa96>
  40473c:	9908      	ldr	r1, [sp, #32]
  40473e:	06dd      	lsls	r5, r3, #27
  404740:	460a      	mov	r2, r1
  404742:	f100 82c5 	bmi.w	404cd0 <_vfiprintf_r+0xa04>
  404746:	0658      	lsls	r0, r3, #25
  404748:	f140 82c2 	bpl.w	404cd0 <_vfiprintf_r+0xa04>
  40474c:	880e      	ldrh	r6, [r1, #0]
  40474e:	3104      	adds	r1, #4
  404750:	2700      	movs	r7, #0
  404752:	2201      	movs	r2, #1
  404754:	9108      	str	r1, [sp, #32]
  404756:	e6ca      	b.n	4044ee <_vfiprintf_r+0x222>
  404758:	f043 0380 	orr.w	r3, r3, #128	; 0x80
  40475c:	f899 2000 	ldrb.w	r2, [r9]
  404760:	e61b      	b.n	40439a <_vfiprintf_r+0xce>
  404762:	2500      	movs	r5, #0
  404764:	f1a2 0130 	sub.w	r1, r2, #48	; 0x30
  404768:	f819 2b01 	ldrb.w	r2, [r9], #1
  40476c:	eb05 0585 	add.w	r5, r5, r5, lsl #2
  404770:	eb01 0545 	add.w	r5, r1, r5, lsl #1
  404774:	f1a2 0130 	sub.w	r1, r2, #48	; 0x30
  404778:	2909      	cmp	r1, #9
  40477a:	d9f5      	bls.n	404768 <_vfiprintf_r+0x49c>
  40477c:	e60f      	b.n	40439e <_vfiprintf_r+0xd2>
  40477e:	2201      	movs	r2, #1
  404780:	9808      	ldr	r0, [sp, #32]
  404782:	4611      	mov	r1, r2
  404784:	9202      	str	r2, [sp, #8]
  404786:	6802      	ldr	r2, [r0, #0]
  404788:	f04f 0400 	mov.w	r4, #0
  40478c:	f88d 2048 	strb.w	r2, [sp, #72]	; 0x48
  404790:	4602      	mov	r2, r0
  404792:	3204      	adds	r2, #4
  404794:	9507      	str	r5, [sp, #28]
  404796:	f88d 4037 	strb.w	r4, [sp, #55]	; 0x37
  40479a:	9105      	str	r1, [sp, #20]
  40479c:	9208      	str	r2, [sp, #32]
  40479e:	f10d 0848 	add.w	r8, sp, #72	; 0x48
  4047a2:	9303      	str	r3, [sp, #12]
  4047a4:	2400      	movs	r4, #0
  4047a6:	e6c9      	b.n	40453c <_vfiprintf_r+0x270>
  4047a8:	9507      	str	r5, [sp, #28]
  4047aa:	2800      	cmp	r0, #0
  4047ac:	f040 837e 	bne.w	404eac <_vfiprintf_r+0xbe0>
  4047b0:	069e      	lsls	r6, r3, #26
  4047b2:	f100 82ec 	bmi.w	404d8e <_vfiprintf_r+0xac2>
  4047b6:	9908      	ldr	r1, [sp, #32]
  4047b8:	06dd      	lsls	r5, r3, #27
  4047ba:	460a      	mov	r2, r1
  4047bc:	f100 8281 	bmi.w	404cc2 <_vfiprintf_r+0x9f6>
  4047c0:	0658      	lsls	r0, r3, #25
  4047c2:	f140 827e 	bpl.w	404cc2 <_vfiprintf_r+0x9f6>
  4047c6:	f9b1 6000 	ldrsh.w	r6, [r1]
  4047ca:	3204      	adds	r2, #4
  4047cc:	17f7      	asrs	r7, r6, #31
  4047ce:	4630      	mov	r0, r6
  4047d0:	4639      	mov	r1, r7
  4047d2:	9208      	str	r2, [sp, #32]
  4047d4:	2800      	cmp	r0, #0
  4047d6:	f171 0200 	sbcs.w	r2, r1, #0
  4047da:	f2c0 82e7 	blt.w	404dac <_vfiprintf_r+0xae0>
  4047de:	1c61      	adds	r1, r4, #1
  4047e0:	f89d 5037 	ldrb.w	r5, [sp, #55]	; 0x37
  4047e4:	f04f 0201 	mov.w	r2, #1
  4047e8:	f47f ae89 	bne.w	4044fe <_vfiprintf_r+0x232>
  4047ec:	ea56 0107 	orrs.w	r1, r6, r7
  4047f0:	f000 81e4 	beq.w	404bbc <_vfiprintf_r+0x8f0>
  4047f4:	9303      	str	r3, [sp, #12]
  4047f6:	2a01      	cmp	r2, #1
  4047f8:	f000 8224 	beq.w	404c44 <_vfiprintf_r+0x978>
  4047fc:	2a02      	cmp	r2, #2
  4047fe:	f040 81f1 	bne.w	404be4 <_vfiprintf_r+0x918>
  404802:	46d0      	mov	r8, sl
  404804:	980b      	ldr	r0, [sp, #44]	; 0x2c
  404806:	0933      	lsrs	r3, r6, #4
  404808:	ea43 7307 	orr.w	r3, r3, r7, lsl #28
  40480c:	0939      	lsrs	r1, r7, #4
  40480e:	f006 020f 	and.w	r2, r6, #15
  404812:	460f      	mov	r7, r1
  404814:	461e      	mov	r6, r3
  404816:	5c83      	ldrb	r3, [r0, r2]
  404818:	f808 3d01 	strb.w	r3, [r8, #-1]!
  40481c:	ea56 0307 	orrs.w	r3, r6, r7
  404820:	d1f1      	bne.n	404806 <_vfiprintf_r+0x53a>
  404822:	ebaa 0308 	sub.w	r3, sl, r8
  404826:	9305      	str	r3, [sp, #20]
  404828:	e680      	b.n	40452c <_vfiprintf_r+0x260>
  40482a:	f899 2000 	ldrb.w	r2, [r9]
  40482e:	2e00      	cmp	r6, #0
  404830:	f47f adb3 	bne.w	40439a <_vfiprintf_r+0xce>
  404834:	2001      	movs	r0, #1
  404836:	2620      	movs	r6, #32
  404838:	e5af      	b.n	40439a <_vfiprintf_r+0xce>
  40483a:	9507      	str	r5, [sp, #28]
  40483c:	2800      	cmp	r0, #0
  40483e:	f040 8332 	bne.w	404ea6 <_vfiprintf_r+0xbda>
  404842:	f043 0310 	orr.w	r3, r3, #16
  404846:	e7b3      	b.n	4047b0 <_vfiprintf_r+0x4e4>
  404848:	9507      	str	r5, [sp, #28]
  40484a:	f043 0310 	orr.w	r3, r3, #16
  40484e:	e63b      	b.n	4044c8 <_vfiprintf_r+0x1fc>
  404850:	9507      	str	r5, [sp, #28]
  404852:	f043 0310 	orr.w	r3, r3, #16
  404856:	e76e      	b.n	404736 <_vfiprintf_r+0x46a>
  404858:	00408f40 	.word	0x00408f40
  40485c:	00408f50 	.word	0x00408f50
  404860:	9507      	str	r5, [sp, #28]
  404862:	2800      	cmp	r0, #0
  404864:	f040 8316 	bne.w	404e94 <_vfiprintf_r+0xbc8>
  404868:	49ae      	ldr	r1, [pc, #696]	; (404b24 <_vfiprintf_r+0x858>)
  40486a:	910b      	str	r1, [sp, #44]	; 0x2c
  40486c:	069f      	lsls	r7, r3, #26
  40486e:	f100 8284 	bmi.w	404d7a <_vfiprintf_r+0xaae>
  404872:	9808      	ldr	r0, [sp, #32]
  404874:	06de      	lsls	r6, r3, #27
  404876:	4601      	mov	r1, r0
  404878:	f100 821e 	bmi.w	404cb8 <_vfiprintf_r+0x9ec>
  40487c:	065d      	lsls	r5, r3, #25
  40487e:	f140 821b 	bpl.w	404cb8 <_vfiprintf_r+0x9ec>
  404882:	2700      	movs	r7, #0
  404884:	3104      	adds	r1, #4
  404886:	8806      	ldrh	r6, [r0, #0]
  404888:	9108      	str	r1, [sp, #32]
  40488a:	07d8      	lsls	r0, r3, #31
  40488c:	f140 81d5 	bpl.w	404c3a <_vfiprintf_r+0x96e>
  404890:	ea56 0107 	orrs.w	r1, r6, r7
  404894:	f000 81d1 	beq.w	404c3a <_vfiprintf_r+0x96e>
  404898:	2130      	movs	r1, #48	; 0x30
  40489a:	f88d 2039 	strb.w	r2, [sp, #57]	; 0x39
  40489e:	f043 0302 	orr.w	r3, r3, #2
  4048a2:	f88d 1038 	strb.w	r1, [sp, #56]	; 0x38
  4048a6:	2202      	movs	r2, #2
  4048a8:	e621      	b.n	4044ee <_vfiprintf_r+0x222>
  4048aa:	f899 2000 	ldrb.w	r2, [r9]
  4048ae:	f109 0701 	add.w	r7, r9, #1
  4048b2:	2a2a      	cmp	r2, #42	; 0x2a
  4048b4:	f000 82e0 	beq.w	404e78 <_vfiprintf_r+0xbac>
  4048b8:	f1a2 0130 	sub.w	r1, r2, #48	; 0x30
  4048bc:	2909      	cmp	r1, #9
  4048be:	46b9      	mov	r9, r7
  4048c0:	f04f 0400 	mov.w	r4, #0
  4048c4:	f63f ad6b 	bhi.w	40439e <_vfiprintf_r+0xd2>
  4048c8:	f819 2b01 	ldrb.w	r2, [r9], #1
  4048cc:	eb04 0484 	add.w	r4, r4, r4, lsl #2
  4048d0:	eb01 0444 	add.w	r4, r1, r4, lsl #1
  4048d4:	f1a2 0130 	sub.w	r1, r2, #48	; 0x30
  4048d8:	2909      	cmp	r1, #9
  4048da:	d9f5      	bls.n	4048c8 <_vfiprintf_r+0x5fc>
  4048dc:	e55f      	b.n	40439e <_vfiprintf_r+0xd2>
  4048de:	f899 2000 	ldrb.w	r2, [r9]
  4048e2:	2a6c      	cmp	r2, #108	; 0x6c
  4048e4:	bf03      	ittte	eq
  4048e6:	f899 2001 	ldrbeq.w	r2, [r9, #1]
  4048ea:	f043 0320 	orreq.w	r3, r3, #32
  4048ee:	f109 0901 	addeq.w	r9, r9, #1
  4048f2:	f043 0310 	orrne.w	r3, r3, #16
  4048f6:	e550      	b.n	40439a <_vfiprintf_r+0xce>
  4048f8:	9507      	str	r5, [sp, #28]
  4048fa:	2800      	cmp	r0, #0
  4048fc:	f040 82d0 	bne.w	404ea0 <_vfiprintf_r+0xbd4>
  404900:	4989      	ldr	r1, [pc, #548]	; (404b28 <_vfiprintf_r+0x85c>)
  404902:	910b      	str	r1, [sp, #44]	; 0x2c
  404904:	e7b2      	b.n	40486c <_vfiprintf_r+0x5a0>
  404906:	2278      	movs	r2, #120	; 0x78
  404908:	2130      	movs	r1, #48	; 0x30
  40490a:	9507      	str	r5, [sp, #28]
  40490c:	9d08      	ldr	r5, [sp, #32]
  40490e:	f88d 2039 	strb.w	r2, [sp, #57]	; 0x39
  404912:	1d2a      	adds	r2, r5, #4
  404914:	9208      	str	r2, [sp, #32]
  404916:	4a84      	ldr	r2, [pc, #528]	; (404b28 <_vfiprintf_r+0x85c>)
  404918:	682e      	ldr	r6, [r5, #0]
  40491a:	920b      	str	r2, [sp, #44]	; 0x2c
  40491c:	f043 0302 	orr.w	r3, r3, #2
  404920:	f88d 1038 	strb.w	r1, [sp, #56]	; 0x38
  404924:	2700      	movs	r7, #0
  404926:	2202      	movs	r2, #2
  404928:	e5e1      	b.n	4044ee <_vfiprintf_r+0x222>
  40492a:	f043 0320 	orr.w	r3, r3, #32
  40492e:	f899 2000 	ldrb.w	r2, [r9]
  404932:	e532      	b.n	40439a <_vfiprintf_r+0xce>
  404934:	f04f 0200 	mov.w	r2, #0
  404938:	9908      	ldr	r1, [sp, #32]
  40493a:	9507      	str	r5, [sp, #28]
  40493c:	f8d1 8000 	ldr.w	r8, [r1]
  404940:	f88d 2037 	strb.w	r2, [sp, #55]	; 0x37
  404944:	1d0d      	adds	r5, r1, #4
  404946:	f1b8 0f00 	cmp.w	r8, #0
  40494a:	f000 827c 	beq.w	404e46 <_vfiprintf_r+0xb7a>
  40494e:	1c67      	adds	r7, r4, #1
  404950:	f000 825b 	beq.w	404e0a <_vfiprintf_r+0xb3e>
  404954:	4622      	mov	r2, r4
  404956:	2100      	movs	r1, #0
  404958:	4640      	mov	r0, r8
  40495a:	9302      	str	r3, [sp, #8]
  40495c:	f002 f840 	bl	4069e0 <memchr>
  404960:	9b02      	ldr	r3, [sp, #8]
  404962:	2800      	cmp	r0, #0
  404964:	f000 827c 	beq.w	404e60 <_vfiprintf_r+0xb94>
  404968:	eba0 0208 	sub.w	r2, r0, r8
  40496c:	9508      	str	r5, [sp, #32]
  40496e:	9205      	str	r2, [sp, #20]
  404970:	9303      	str	r3, [sp, #12]
  404972:	f89d 5037 	ldrb.w	r5, [sp, #55]	; 0x37
  404976:	2400      	movs	r4, #0
  404978:	e5d8      	b.n	40452c <_vfiprintf_r+0x260>
  40497a:	f043 0301 	orr.w	r3, r3, #1
  40497e:	f899 2000 	ldrb.w	r2, [r9]
  404982:	e50a      	b.n	40439a <_vfiprintf_r+0xce>
  404984:	f899 2000 	ldrb.w	r2, [r9]
  404988:	2001      	movs	r0, #1
  40498a:	262b      	movs	r6, #43	; 0x2b
  40498c:	e505      	b.n	40439a <_vfiprintf_r+0xce>
  40498e:	2800      	cmp	r0, #0
  404990:	f040 8283 	bne.w	404e9a <_vfiprintf_r+0xbce>
  404994:	0699      	lsls	r1, r3, #26
  404996:	f100 822b 	bmi.w	404df0 <_vfiprintf_r+0xb24>
  40499a:	06da      	lsls	r2, r3, #27
  40499c:	d421      	bmi.n	4049e2 <_vfiprintf_r+0x716>
  40499e:	065b      	lsls	r3, r3, #25
  4049a0:	d51f      	bpl.n	4049e2 <_vfiprintf_r+0x716>
  4049a2:	9a08      	ldr	r2, [sp, #32]
  4049a4:	6813      	ldr	r3, [r2, #0]
  4049a6:	3204      	adds	r2, #4
  4049a8:	9208      	str	r2, [sp, #32]
  4049aa:	f8bd 2010 	ldrh.w	r2, [sp, #16]
  4049ae:	801a      	strh	r2, [r3, #0]
  4049b0:	e4be      	b.n	404330 <_vfiprintf_r+0x64>
  4049b2:	f043 0340 	orr.w	r3, r3, #64	; 0x40
  4049b6:	f899 2000 	ldrb.w	r2, [r9]
  4049ba:	e4ee      	b.n	40439a <_vfiprintf_r+0xce>
  4049bc:	9507      	str	r5, [sp, #28]
  4049be:	2800      	cmp	r0, #0
  4049c0:	f040 8265 	bne.w	404e8e <_vfiprintf_r+0xbc2>
  4049c4:	2a00      	cmp	r2, #0
  4049c6:	f000 8091 	beq.w	404aec <_vfiprintf_r+0x820>
  4049ca:	2101      	movs	r1, #1
  4049cc:	f88d 2048 	strb.w	r2, [sp, #72]	; 0x48
  4049d0:	f04f 0200 	mov.w	r2, #0
  4049d4:	9102      	str	r1, [sp, #8]
  4049d6:	f88d 2037 	strb.w	r2, [sp, #55]	; 0x37
  4049da:	9105      	str	r1, [sp, #20]
  4049dc:	f10d 0848 	add.w	r8, sp, #72	; 0x48
  4049e0:	e6df      	b.n	4047a2 <_vfiprintf_r+0x4d6>
  4049e2:	9a08      	ldr	r2, [sp, #32]
  4049e4:	6813      	ldr	r3, [r2, #0]
  4049e6:	3204      	adds	r2, #4
  4049e8:	9208      	str	r2, [sp, #32]
  4049ea:	9a04      	ldr	r2, [sp, #16]
  4049ec:	601a      	str	r2, [r3, #0]
  4049ee:	e49f      	b.n	404330 <_vfiprintf_r+0x64>
  4049f0:	aa0f      	add	r2, sp, #60	; 0x3c
  4049f2:	9901      	ldr	r1, [sp, #4]
  4049f4:	4620      	mov	r0, r4
  4049f6:	f7ff fc29 	bl	40424c <__sprint_r.part.0>
  4049fa:	2800      	cmp	r0, #0
  4049fc:	d17d      	bne.n	404afa <_vfiprintf_r+0x82e>
  4049fe:	9910      	ldr	r1, [sp, #64]	; 0x40
  404a00:	46d6      	mov	lr, sl
  404a02:	9a11      	ldr	r2, [sp, #68]	; 0x44
  404a04:	f101 0c01 	add.w	ip, r1, #1
  404a08:	e5bd      	b.n	404586 <_vfiprintf_r+0x2ba>
  404a0a:	aa0f      	add	r2, sp, #60	; 0x3c
  404a0c:	9901      	ldr	r1, [sp, #4]
  404a0e:	9806      	ldr	r0, [sp, #24]
  404a10:	f7ff fc1c 	bl	40424c <__sprint_r.part.0>
  404a14:	2800      	cmp	r0, #0
  404a16:	d170      	bne.n	404afa <_vfiprintf_r+0x82e>
  404a18:	46d3      	mov	fp, sl
  404a1a:	9910      	ldr	r1, [sp, #64]	; 0x40
  404a1c:	f89d 5037 	ldrb.w	r5, [sp, #55]	; 0x37
  404a20:	9a11      	ldr	r2, [sp, #68]	; 0x44
  404a22:	1c48      	adds	r0, r1, #1
  404a24:	2d00      	cmp	r5, #0
  404a26:	f43f add8 	beq.w	4045da <_vfiprintf_r+0x30e>
  404a2a:	2101      	movs	r1, #1
  404a2c:	f10d 0537 	add.w	r5, sp, #55	; 0x37
  404a30:	440a      	add	r2, r1
  404a32:	2807      	cmp	r0, #7
  404a34:	9211      	str	r2, [sp, #68]	; 0x44
  404a36:	9010      	str	r0, [sp, #64]	; 0x40
  404a38:	f8cb 1004 	str.w	r1, [fp, #4]
  404a3c:	f8cb 5000 	str.w	r5, [fp]
  404a40:	f340 80b6 	ble.w	404bb0 <_vfiprintf_r+0x8e4>
  404a44:	2a00      	cmp	r2, #0
  404a46:	f040 8160 	bne.w	404d0a <_vfiprintf_r+0xa3e>
  404a4a:	9b09      	ldr	r3, [sp, #36]	; 0x24
  404a4c:	2b00      	cmp	r3, #0
  404a4e:	f43f add7 	beq.w	404600 <_vfiprintf_r+0x334>
  404a52:	2202      	movs	r2, #2
  404a54:	4608      	mov	r0, r1
  404a56:	46d3      	mov	fp, sl
  404a58:	ab0e      	add	r3, sp, #56	; 0x38
  404a5a:	921d      	str	r2, [sp, #116]	; 0x74
  404a5c:	931c      	str	r3, [sp, #112]	; 0x70
  404a5e:	4601      	mov	r1, r0
  404a60:	f10b 0b08 	add.w	fp, fp, #8
  404a64:	3001      	adds	r0, #1
  404a66:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  404a68:	2b80      	cmp	r3, #128	; 0x80
  404a6a:	f43f add0 	beq.w	40460e <_vfiprintf_r+0x342>
  404a6e:	9b05      	ldr	r3, [sp, #20]
  404a70:	1ae4      	subs	r4, r4, r3
  404a72:	2c00      	cmp	r4, #0
  404a74:	f77f ae0a 	ble.w	40468c <_vfiprintf_r+0x3c0>
  404a78:	2c10      	cmp	r4, #16
  404a7a:	f340 81b7 	ble.w	404dec <_vfiprintf_r+0xb20>
  404a7e:	46de      	mov	lr, fp
  404a80:	2610      	movs	r6, #16
  404a82:	4d2a      	ldr	r5, [pc, #168]	; (404b2c <_vfiprintf_r+0x860>)
  404a84:	9f06      	ldr	r7, [sp, #24]
  404a86:	f8dd b004 	ldr.w	fp, [sp, #4]
  404a8a:	e006      	b.n	404a9a <_vfiprintf_r+0x7ce>
  404a8c:	1c88      	adds	r0, r1, #2
  404a8e:	4619      	mov	r1, r3
  404a90:	f10e 0e08 	add.w	lr, lr, #8
  404a94:	3c10      	subs	r4, #16
  404a96:	2c10      	cmp	r4, #16
  404a98:	dd0f      	ble.n	404aba <_vfiprintf_r+0x7ee>
  404a9a:	1c4b      	adds	r3, r1, #1
  404a9c:	3210      	adds	r2, #16
  404a9e:	2b07      	cmp	r3, #7
  404aa0:	9211      	str	r2, [sp, #68]	; 0x44
  404aa2:	e88e 0060 	stmia.w	lr, {r5, r6}
  404aa6:	9310      	str	r3, [sp, #64]	; 0x40
  404aa8:	ddf0      	ble.n	404a8c <_vfiprintf_r+0x7c0>
  404aaa:	b9a2      	cbnz	r2, 404ad6 <_vfiprintf_r+0x80a>
  404aac:	3c10      	subs	r4, #16
  404aae:	2c10      	cmp	r4, #16
  404ab0:	f04f 0001 	mov.w	r0, #1
  404ab4:	4611      	mov	r1, r2
  404ab6:	46d6      	mov	lr, sl
  404ab8:	dcef      	bgt.n	404a9a <_vfiprintf_r+0x7ce>
  404aba:	46f3      	mov	fp, lr
  404abc:	4422      	add	r2, r4
  404abe:	2807      	cmp	r0, #7
  404ac0:	9211      	str	r2, [sp, #68]	; 0x44
  404ac2:	f8cb 5000 	str.w	r5, [fp]
  404ac6:	f8cb 4004 	str.w	r4, [fp, #4]
  404aca:	9010      	str	r0, [sp, #64]	; 0x40
  404acc:	dc30      	bgt.n	404b30 <_vfiprintf_r+0x864>
  404ace:	f10b 0b08 	add.w	fp, fp, #8
  404ad2:	3001      	adds	r0, #1
  404ad4:	e5da      	b.n	40468c <_vfiprintf_r+0x3c0>
  404ad6:	aa0f      	add	r2, sp, #60	; 0x3c
  404ad8:	4659      	mov	r1, fp
  404ada:	4638      	mov	r0, r7
  404adc:	f7ff fbb6 	bl	40424c <__sprint_r.part.0>
  404ae0:	b958      	cbnz	r0, 404afa <_vfiprintf_r+0x82e>
  404ae2:	9910      	ldr	r1, [sp, #64]	; 0x40
  404ae4:	46d6      	mov	lr, sl
  404ae6:	9a11      	ldr	r2, [sp, #68]	; 0x44
  404ae8:	1c48      	adds	r0, r1, #1
  404aea:	e7d3      	b.n	404a94 <_vfiprintf_r+0x7c8>
  404aec:	9b11      	ldr	r3, [sp, #68]	; 0x44
  404aee:	b123      	cbz	r3, 404afa <_vfiprintf_r+0x82e>
  404af0:	9806      	ldr	r0, [sp, #24]
  404af2:	aa0f      	add	r2, sp, #60	; 0x3c
  404af4:	9901      	ldr	r1, [sp, #4]
  404af6:	f7ff fba9 	bl	40424c <__sprint_r.part.0>
  404afa:	9b01      	ldr	r3, [sp, #4]
  404afc:	899b      	ldrh	r3, [r3, #12]
  404afe:	065b      	lsls	r3, r3, #25
  404b00:	f57f accd 	bpl.w	40449e <_vfiprintf_r+0x1d2>
  404b04:	f04f 33ff 	mov.w	r3, #4294967295
  404b08:	9304      	str	r3, [sp, #16]
  404b0a:	e4c8      	b.n	40449e <_vfiprintf_r+0x1d2>
  404b0c:	aa0f      	add	r2, sp, #60	; 0x3c
  404b0e:	4641      	mov	r1, r8
  404b10:	4638      	mov	r0, r7
  404b12:	f7ff fb9b 	bl	40424c <__sprint_r.part.0>
  404b16:	2800      	cmp	r0, #0
  404b18:	d1ef      	bne.n	404afa <_vfiprintf_r+0x82e>
  404b1a:	9910      	ldr	r1, [sp, #64]	; 0x40
  404b1c:	46d3      	mov	fp, sl
  404b1e:	9a11      	ldr	r2, [sp, #68]	; 0x44
  404b20:	1c48      	adds	r0, r1, #1
  404b22:	e5da      	b.n	4046da <_vfiprintf_r+0x40e>
  404b24:	00408eec 	.word	0x00408eec
  404b28:	00408f00 	.word	0x00408f00
  404b2c:	00408f50 	.word	0x00408f50
  404b30:	2a00      	cmp	r2, #0
  404b32:	f040 80fd 	bne.w	404d30 <_vfiprintf_r+0xa64>
  404b36:	2301      	movs	r3, #1
  404b38:	46d3      	mov	fp, sl
  404b3a:	9a05      	ldr	r2, [sp, #20]
  404b3c:	f8cd 8070 	str.w	r8, [sp, #112]	; 0x70
  404b40:	921d      	str	r2, [sp, #116]	; 0x74
  404b42:	9211      	str	r2, [sp, #68]	; 0x44
  404b44:	9310      	str	r3, [sp, #64]	; 0x40
  404b46:	f10b 0b08 	add.w	fp, fp, #8
  404b4a:	9b03      	ldr	r3, [sp, #12]
  404b4c:	0759      	lsls	r1, r3, #29
  404b4e:	d505      	bpl.n	404b5c <_vfiprintf_r+0x890>
  404b50:	9b07      	ldr	r3, [sp, #28]
  404b52:	9902      	ldr	r1, [sp, #8]
  404b54:	1a5c      	subs	r4, r3, r1
  404b56:	2c00      	cmp	r4, #0
  404b58:	f73f adb1 	bgt.w	4046be <_vfiprintf_r+0x3f2>
  404b5c:	9b04      	ldr	r3, [sp, #16]
  404b5e:	9907      	ldr	r1, [sp, #28]
  404b60:	9802      	ldr	r0, [sp, #8]
  404b62:	4281      	cmp	r1, r0
  404b64:	bfac      	ite	ge
  404b66:	185b      	addge	r3, r3, r1
  404b68:	181b      	addlt	r3, r3, r0
  404b6a:	9304      	str	r3, [sp, #16]
  404b6c:	bb7a      	cbnz	r2, 404bce <_vfiprintf_r+0x902>
  404b6e:	2300      	movs	r3, #0
  404b70:	46d3      	mov	fp, sl
  404b72:	9310      	str	r3, [sp, #64]	; 0x40
  404b74:	f7ff bbdc 	b.w	404330 <_vfiprintf_r+0x64>
  404b78:	aa0f      	add	r2, sp, #60	; 0x3c
  404b7a:	9901      	ldr	r1, [sp, #4]
  404b7c:	4620      	mov	r0, r4
  404b7e:	f7ff fb65 	bl	40424c <__sprint_r.part.0>
  404b82:	2800      	cmp	r0, #0
  404b84:	d1b9      	bne.n	404afa <_vfiprintf_r+0x82e>
  404b86:	9910      	ldr	r1, [sp, #64]	; 0x40
  404b88:	46d4      	mov	ip, sl
  404b8a:	9a11      	ldr	r2, [sp, #68]	; 0x44
  404b8c:	f101 0e01 	add.w	lr, r1, #1
  404b90:	e551      	b.n	404636 <_vfiprintf_r+0x36a>
  404b92:	2a00      	cmp	r2, #0
  404b94:	f47f af39 	bne.w	404a0a <_vfiprintf_r+0x73e>
  404b98:	f89d 1037 	ldrb.w	r1, [sp, #55]	; 0x37
  404b9c:	2900      	cmp	r1, #0
  404b9e:	f000 810e 	beq.w	404dbe <_vfiprintf_r+0xaf2>
  404ba2:	2201      	movs	r2, #1
  404ba4:	46d3      	mov	fp, sl
  404ba6:	4610      	mov	r0, r2
  404ba8:	f10d 0137 	add.w	r1, sp, #55	; 0x37
  404bac:	921d      	str	r2, [sp, #116]	; 0x74
  404bae:	911c      	str	r1, [sp, #112]	; 0x70
  404bb0:	4601      	mov	r1, r0
  404bb2:	f10b 0b08 	add.w	fp, fp, #8
  404bb6:	3001      	adds	r0, #1
  404bb8:	e50f      	b.n	4045da <_vfiprintf_r+0x30e>
  404bba:	9b03      	ldr	r3, [sp, #12]
  404bbc:	2a01      	cmp	r2, #1
  404bbe:	f000 808e 	beq.w	404cde <_vfiprintf_r+0xa12>
  404bc2:	2a02      	cmp	r2, #2
  404bc4:	d10b      	bne.n	404bde <_vfiprintf_r+0x912>
  404bc6:	9303      	str	r3, [sp, #12]
  404bc8:	2600      	movs	r6, #0
  404bca:	2700      	movs	r7, #0
  404bcc:	e619      	b.n	404802 <_vfiprintf_r+0x536>
  404bce:	aa0f      	add	r2, sp, #60	; 0x3c
  404bd0:	9901      	ldr	r1, [sp, #4]
  404bd2:	9806      	ldr	r0, [sp, #24]
  404bd4:	f7ff fb3a 	bl	40424c <__sprint_r.part.0>
  404bd8:	2800      	cmp	r0, #0
  404bda:	d0c8      	beq.n	404b6e <_vfiprintf_r+0x8a2>
  404bdc:	e78d      	b.n	404afa <_vfiprintf_r+0x82e>
  404bde:	2600      	movs	r6, #0
  404be0:	2700      	movs	r7, #0
  404be2:	9303      	str	r3, [sp, #12]
  404be4:	4651      	mov	r1, sl
  404be6:	e000      	b.n	404bea <_vfiprintf_r+0x91e>
  404be8:	4641      	mov	r1, r8
  404bea:	08f2      	lsrs	r2, r6, #3
  404bec:	ea42 7247 	orr.w	r2, r2, r7, lsl #29
  404bf0:	08f8      	lsrs	r0, r7, #3
  404bf2:	f006 0307 	and.w	r3, r6, #7
  404bf6:	4607      	mov	r7, r0
  404bf8:	4616      	mov	r6, r2
  404bfa:	3330      	adds	r3, #48	; 0x30
  404bfc:	ea56 0207 	orrs.w	r2, r6, r7
  404c00:	f801 3c01 	strb.w	r3, [r1, #-1]
  404c04:	f101 38ff 	add.w	r8, r1, #4294967295
  404c08:	d1ee      	bne.n	404be8 <_vfiprintf_r+0x91c>
  404c0a:	9a03      	ldr	r2, [sp, #12]
  404c0c:	07d6      	lsls	r6, r2, #31
  404c0e:	f57f ae08 	bpl.w	404822 <_vfiprintf_r+0x556>
  404c12:	2b30      	cmp	r3, #48	; 0x30
  404c14:	f43f ae05 	beq.w	404822 <_vfiprintf_r+0x556>
  404c18:	2330      	movs	r3, #48	; 0x30
  404c1a:	3902      	subs	r1, #2
  404c1c:	f808 3c01 	strb.w	r3, [r8, #-1]
  404c20:	ebaa 0301 	sub.w	r3, sl, r1
  404c24:	9305      	str	r3, [sp, #20]
  404c26:	4688      	mov	r8, r1
  404c28:	e480      	b.n	40452c <_vfiprintf_r+0x260>
  404c2a:	9b04      	ldr	r3, [sp, #16]
  404c2c:	9a07      	ldr	r2, [sp, #28]
  404c2e:	428a      	cmp	r2, r1
  404c30:	bfac      	ite	ge
  404c32:	189b      	addge	r3, r3, r2
  404c34:	185b      	addlt	r3, r3, r1
  404c36:	9304      	str	r3, [sp, #16]
  404c38:	e799      	b.n	404b6e <_vfiprintf_r+0x8a2>
  404c3a:	2202      	movs	r2, #2
  404c3c:	e457      	b.n	4044ee <_vfiprintf_r+0x222>
  404c3e:	9405      	str	r4, [sp, #20]
  404c40:	46d0      	mov	r8, sl
  404c42:	e473      	b.n	40452c <_vfiprintf_r+0x260>
  404c44:	2f00      	cmp	r7, #0
  404c46:	bf08      	it	eq
  404c48:	2e0a      	cmpeq	r6, #10
  404c4a:	d347      	bcc.n	404cdc <_vfiprintf_r+0xa10>
  404c4c:	46d0      	mov	r8, sl
  404c4e:	4630      	mov	r0, r6
  404c50:	4639      	mov	r1, r7
  404c52:	220a      	movs	r2, #10
  404c54:	2300      	movs	r3, #0
  404c56:	f003 fb3f 	bl	4082d8 <__aeabi_uldivmod>
  404c5a:	3230      	adds	r2, #48	; 0x30
  404c5c:	f808 2d01 	strb.w	r2, [r8, #-1]!
  404c60:	4630      	mov	r0, r6
  404c62:	4639      	mov	r1, r7
  404c64:	2300      	movs	r3, #0
  404c66:	220a      	movs	r2, #10
  404c68:	f003 fb36 	bl	4082d8 <__aeabi_uldivmod>
  404c6c:	4606      	mov	r6, r0
  404c6e:	460f      	mov	r7, r1
  404c70:	ea56 0307 	orrs.w	r3, r6, r7
  404c74:	d1eb      	bne.n	404c4e <_vfiprintf_r+0x982>
  404c76:	ebaa 0308 	sub.w	r3, sl, r8
  404c7a:	9305      	str	r3, [sp, #20]
  404c7c:	e456      	b.n	40452c <_vfiprintf_r+0x260>
  404c7e:	aa0f      	add	r2, sp, #60	; 0x3c
  404c80:	9901      	ldr	r1, [sp, #4]
  404c82:	9806      	ldr	r0, [sp, #24]
  404c84:	f7ff fae2 	bl	40424c <__sprint_r.part.0>
  404c88:	2800      	cmp	r0, #0
  404c8a:	f47f af36 	bne.w	404afa <_vfiprintf_r+0x82e>
  404c8e:	46d3      	mov	fp, sl
  404c90:	9a11      	ldr	r2, [sp, #68]	; 0x44
  404c92:	e75a      	b.n	404b4a <_vfiprintf_r+0x87e>
  404c94:	aa0f      	add	r2, sp, #60	; 0x3c
  404c96:	9901      	ldr	r1, [sp, #4]
  404c98:	9806      	ldr	r0, [sp, #24]
  404c9a:	f7ff fad7 	bl	40424c <__sprint_r.part.0>
  404c9e:	2800      	cmp	r0, #0
  404ca0:	f47f af2b 	bne.w	404afa <_vfiprintf_r+0x82e>
  404ca4:	46d3      	mov	fp, sl
  404ca6:	f7ff bbdc 	b.w	404462 <_vfiprintf_r+0x196>
  404caa:	9808      	ldr	r0, [sp, #32]
  404cac:	2700      	movs	r7, #0
  404cae:	4601      	mov	r1, r0
  404cb0:	3104      	adds	r1, #4
  404cb2:	6806      	ldr	r6, [r0, #0]
  404cb4:	9108      	str	r1, [sp, #32]
  404cb6:	e41a      	b.n	4044ee <_vfiprintf_r+0x222>
  404cb8:	680e      	ldr	r6, [r1, #0]
  404cba:	3104      	adds	r1, #4
  404cbc:	9108      	str	r1, [sp, #32]
  404cbe:	2700      	movs	r7, #0
  404cc0:	e5e3      	b.n	40488a <_vfiprintf_r+0x5be>
  404cc2:	6816      	ldr	r6, [r2, #0]
  404cc4:	3204      	adds	r2, #4
  404cc6:	17f7      	asrs	r7, r6, #31
  404cc8:	9208      	str	r2, [sp, #32]
  404cca:	4630      	mov	r0, r6
  404ccc:	4639      	mov	r1, r7
  404cce:	e581      	b.n	4047d4 <_vfiprintf_r+0x508>
  404cd0:	3104      	adds	r1, #4
  404cd2:	6816      	ldr	r6, [r2, #0]
  404cd4:	2700      	movs	r7, #0
  404cd6:	2201      	movs	r2, #1
  404cd8:	9108      	str	r1, [sp, #32]
  404cda:	e408      	b.n	4044ee <_vfiprintf_r+0x222>
  404cdc:	9b03      	ldr	r3, [sp, #12]
  404cde:	9303      	str	r3, [sp, #12]
  404ce0:	2301      	movs	r3, #1
  404ce2:	f10d 08b0 	add.w	r8, sp, #176	; 0xb0
  404ce6:	3630      	adds	r6, #48	; 0x30
  404ce8:	f808 6d41 	strb.w	r6, [r8, #-65]!
  404cec:	9305      	str	r3, [sp, #20]
  404cee:	e41d      	b.n	40452c <_vfiprintf_r+0x260>
  404cf0:	aa0f      	add	r2, sp, #60	; 0x3c
  404cf2:	9901      	ldr	r1, [sp, #4]
  404cf4:	9806      	ldr	r0, [sp, #24]
  404cf6:	f7ff faa9 	bl	40424c <__sprint_r.part.0>
  404cfa:	2800      	cmp	r0, #0
  404cfc:	f47f aefd 	bne.w	404afa <_vfiprintf_r+0x82e>
  404d00:	9910      	ldr	r1, [sp, #64]	; 0x40
  404d02:	46d3      	mov	fp, sl
  404d04:	9a11      	ldr	r2, [sp, #68]	; 0x44
  404d06:	1c48      	adds	r0, r1, #1
  404d08:	e6ad      	b.n	404a66 <_vfiprintf_r+0x79a>
  404d0a:	aa0f      	add	r2, sp, #60	; 0x3c
  404d0c:	9901      	ldr	r1, [sp, #4]
  404d0e:	9806      	ldr	r0, [sp, #24]
  404d10:	f7ff fa9c 	bl	40424c <__sprint_r.part.0>
  404d14:	2800      	cmp	r0, #0
  404d16:	f47f aef0 	bne.w	404afa <_vfiprintf_r+0x82e>
  404d1a:	9910      	ldr	r1, [sp, #64]	; 0x40
  404d1c:	46d3      	mov	fp, sl
  404d1e:	9a11      	ldr	r2, [sp, #68]	; 0x44
  404d20:	1c48      	adds	r0, r1, #1
  404d22:	e45a      	b.n	4045da <_vfiprintf_r+0x30e>
  404d24:	2a00      	cmp	r2, #0
  404d26:	d17b      	bne.n	404e20 <_vfiprintf_r+0xb54>
  404d28:	2001      	movs	r0, #1
  404d2a:	4611      	mov	r1, r2
  404d2c:	46d3      	mov	fp, sl
  404d2e:	e69e      	b.n	404a6e <_vfiprintf_r+0x7a2>
  404d30:	aa0f      	add	r2, sp, #60	; 0x3c
  404d32:	9901      	ldr	r1, [sp, #4]
  404d34:	9806      	ldr	r0, [sp, #24]
  404d36:	f7ff fa89 	bl	40424c <__sprint_r.part.0>
  404d3a:	2800      	cmp	r0, #0
  404d3c:	f47f aedd 	bne.w	404afa <_vfiprintf_r+0x82e>
  404d40:	9810      	ldr	r0, [sp, #64]	; 0x40
  404d42:	46d3      	mov	fp, sl
  404d44:	9a11      	ldr	r2, [sp, #68]	; 0x44
  404d46:	3001      	adds	r0, #1
  404d48:	e4a0      	b.n	40468c <_vfiprintf_r+0x3c0>
  404d4a:	9d08      	ldr	r5, [sp, #32]
  404d4c:	3507      	adds	r5, #7
  404d4e:	f025 0207 	bic.w	r2, r5, #7
  404d52:	f102 0108 	add.w	r1, r2, #8
  404d56:	e9d2 6700 	ldrd	r6, r7, [r2]
  404d5a:	9108      	str	r1, [sp, #32]
  404d5c:	2200      	movs	r2, #0
  404d5e:	f7ff bbc6 	b.w	4044ee <_vfiprintf_r+0x222>
  404d62:	9d08      	ldr	r5, [sp, #32]
  404d64:	3507      	adds	r5, #7
  404d66:	f025 0207 	bic.w	r2, r5, #7
  404d6a:	f102 0108 	add.w	r1, r2, #8
  404d6e:	e9d2 6700 	ldrd	r6, r7, [r2]
  404d72:	9108      	str	r1, [sp, #32]
  404d74:	2201      	movs	r2, #1
  404d76:	f7ff bbba 	b.w	4044ee <_vfiprintf_r+0x222>
  404d7a:	9d08      	ldr	r5, [sp, #32]
  404d7c:	3507      	adds	r5, #7
  404d7e:	f025 0107 	bic.w	r1, r5, #7
  404d82:	f101 0008 	add.w	r0, r1, #8
  404d86:	9008      	str	r0, [sp, #32]
  404d88:	e9d1 6700 	ldrd	r6, r7, [r1]
  404d8c:	e57d      	b.n	40488a <_vfiprintf_r+0x5be>
  404d8e:	9d08      	ldr	r5, [sp, #32]
  404d90:	3507      	adds	r5, #7
  404d92:	f025 0507 	bic.w	r5, r5, #7
  404d96:	f105 0208 	add.w	r2, r5, #8
  404d9a:	e9d5 0100 	ldrd	r0, r1, [r5]
  404d9e:	9208      	str	r2, [sp, #32]
  404da0:	4606      	mov	r6, r0
  404da2:	460f      	mov	r7, r1
  404da4:	e516      	b.n	4047d4 <_vfiprintf_r+0x508>
  404da6:	46d0      	mov	r8, sl
  404da8:	f7ff bbc0 	b.w	40452c <_vfiprintf_r+0x260>
  404dac:	252d      	movs	r5, #45	; 0x2d
  404dae:	4276      	negs	r6, r6
  404db0:	eb67 0747 	sbc.w	r7, r7, r7, lsl #1
  404db4:	f88d 5037 	strb.w	r5, [sp, #55]	; 0x37
  404db8:	2201      	movs	r2, #1
  404dba:	f7ff bb9d 	b.w	4044f8 <_vfiprintf_r+0x22c>
  404dbe:	9b09      	ldr	r3, [sp, #36]	; 0x24
  404dc0:	b96b      	cbnz	r3, 404dde <_vfiprintf_r+0xb12>
  404dc2:	4611      	mov	r1, r2
  404dc4:	2001      	movs	r0, #1
  404dc6:	46d3      	mov	fp, sl
  404dc8:	e651      	b.n	404a6e <_vfiprintf_r+0x7a2>
  404dca:	aa0f      	add	r2, sp, #60	; 0x3c
  404dcc:	9901      	ldr	r1, [sp, #4]
  404dce:	9806      	ldr	r0, [sp, #24]
  404dd0:	f7ff fa3c 	bl	40424c <__sprint_r.part.0>
  404dd4:	2800      	cmp	r0, #0
  404dd6:	f47f ae90 	bne.w	404afa <_vfiprintf_r+0x82e>
  404dda:	9a11      	ldr	r2, [sp, #68]	; 0x44
  404ddc:	e6be      	b.n	404b5c <_vfiprintf_r+0x890>
  404dde:	2202      	movs	r2, #2
  404de0:	ab0e      	add	r3, sp, #56	; 0x38
  404de2:	921d      	str	r2, [sp, #116]	; 0x74
  404de4:	931c      	str	r3, [sp, #112]	; 0x70
  404de6:	2001      	movs	r0, #1
  404de8:	46d3      	mov	fp, sl
  404dea:	e638      	b.n	404a5e <_vfiprintf_r+0x792>
  404dec:	4d31      	ldr	r5, [pc, #196]	; (404eb4 <_vfiprintf_r+0xbe8>)
  404dee:	e665      	b.n	404abc <_vfiprintf_r+0x7f0>
  404df0:	9a08      	ldr	r2, [sp, #32]
  404df2:	4613      	mov	r3, r2
  404df4:	3304      	adds	r3, #4
  404df6:	9308      	str	r3, [sp, #32]
  404df8:	9b04      	ldr	r3, [sp, #16]
  404dfa:	6811      	ldr	r1, [r2, #0]
  404dfc:	17dd      	asrs	r5, r3, #31
  404dfe:	461a      	mov	r2, r3
  404e00:	462b      	mov	r3, r5
  404e02:	e9c1 2300 	strd	r2, r3, [r1]
  404e06:	f7ff ba93 	b.w	404330 <_vfiprintf_r+0x64>
  404e0a:	4640      	mov	r0, r8
  404e0c:	9508      	str	r5, [sp, #32]
  404e0e:	9303      	str	r3, [sp, #12]
  404e10:	f7fd ff40 	bl	402c94 <strlen>
  404e14:	2400      	movs	r4, #0
  404e16:	9005      	str	r0, [sp, #20]
  404e18:	f89d 5037 	ldrb.w	r5, [sp, #55]	; 0x37
  404e1c:	f7ff bb86 	b.w	40452c <_vfiprintf_r+0x260>
  404e20:	aa0f      	add	r2, sp, #60	; 0x3c
  404e22:	9901      	ldr	r1, [sp, #4]
  404e24:	9806      	ldr	r0, [sp, #24]
  404e26:	f7ff fa11 	bl	40424c <__sprint_r.part.0>
  404e2a:	2800      	cmp	r0, #0
  404e2c:	f47f ae65 	bne.w	404afa <_vfiprintf_r+0x82e>
  404e30:	9910      	ldr	r1, [sp, #64]	; 0x40
  404e32:	46d3      	mov	fp, sl
  404e34:	9a11      	ldr	r2, [sp, #68]	; 0x44
  404e36:	1c48      	adds	r0, r1, #1
  404e38:	e619      	b.n	404a6e <_vfiprintf_r+0x7a2>
  404e3a:	9910      	ldr	r1, [sp, #64]	; 0x40
  404e3c:	9a11      	ldr	r2, [sp, #68]	; 0x44
  404e3e:	3101      	adds	r1, #1
  404e40:	4e1d      	ldr	r6, [pc, #116]	; (404eb8 <_vfiprintf_r+0xbec>)
  404e42:	f7ff bbb8 	b.w	4045b6 <_vfiprintf_r+0x2ea>
  404e46:	2c06      	cmp	r4, #6
  404e48:	bf28      	it	cs
  404e4a:	2406      	movcs	r4, #6
  404e4c:	9508      	str	r5, [sp, #32]
  404e4e:	9405      	str	r4, [sp, #20]
  404e50:	9402      	str	r4, [sp, #8]
  404e52:	f8df 8068 	ldr.w	r8, [pc, #104]	; 404ebc <_vfiprintf_r+0xbf0>
  404e56:	e4a4      	b.n	4047a2 <_vfiprintf_r+0x4d6>
  404e58:	9810      	ldr	r0, [sp, #64]	; 0x40
  404e5a:	4e17      	ldr	r6, [pc, #92]	; (404eb8 <_vfiprintf_r+0xbec>)
  404e5c:	3001      	adds	r0, #1
  404e5e:	e453      	b.n	404708 <_vfiprintf_r+0x43c>
  404e60:	9405      	str	r4, [sp, #20]
  404e62:	9508      	str	r5, [sp, #32]
  404e64:	9303      	str	r3, [sp, #12]
  404e66:	4604      	mov	r4, r0
  404e68:	f89d 5037 	ldrb.w	r5, [sp, #55]	; 0x37
  404e6c:	f7ff bb5e 	b.w	40452c <_vfiprintf_r+0x260>
  404e70:	4686      	mov	lr, r0
  404e72:	4d10      	ldr	r5, [pc, #64]	; (404eb4 <_vfiprintf_r+0xbe8>)
  404e74:	f7ff bbf6 	b.w	404664 <_vfiprintf_r+0x398>
  404e78:	9908      	ldr	r1, [sp, #32]
  404e7a:	f899 2001 	ldrb.w	r2, [r9, #1]
  404e7e:	680c      	ldr	r4, [r1, #0]
  404e80:	3104      	adds	r1, #4
  404e82:	ea44 74e4 	orr.w	r4, r4, r4, asr #31
  404e86:	46b9      	mov	r9, r7
  404e88:	9108      	str	r1, [sp, #32]
  404e8a:	f7ff ba86 	b.w	40439a <_vfiprintf_r+0xce>
  404e8e:	f88d 6037 	strb.w	r6, [sp, #55]	; 0x37
  404e92:	e597      	b.n	4049c4 <_vfiprintf_r+0x6f8>
  404e94:	f88d 6037 	strb.w	r6, [sp, #55]	; 0x37
  404e98:	e4e6      	b.n	404868 <_vfiprintf_r+0x59c>
  404e9a:	f88d 6037 	strb.w	r6, [sp, #55]	; 0x37
  404e9e:	e579      	b.n	404994 <_vfiprintf_r+0x6c8>
  404ea0:	f88d 6037 	strb.w	r6, [sp, #55]	; 0x37
  404ea4:	e52c      	b.n	404900 <_vfiprintf_r+0x634>
  404ea6:	f88d 6037 	strb.w	r6, [sp, #55]	; 0x37
  404eaa:	e4ca      	b.n	404842 <_vfiprintf_r+0x576>
  404eac:	f88d 6037 	strb.w	r6, [sp, #55]	; 0x37
  404eb0:	e47e      	b.n	4047b0 <_vfiprintf_r+0x4e4>
  404eb2:	bf00      	nop
  404eb4:	00408f50 	.word	0x00408f50
  404eb8:	00408f40 	.word	0x00408f40
  404ebc:	00408f14 	.word	0x00408f14

00404ec0 <__sbprintf>:
  404ec0:	b570      	push	{r4, r5, r6, lr}
  404ec2:	460c      	mov	r4, r1
  404ec4:	2600      	movs	r6, #0
  404ec6:	f44f 6580 	mov.w	r5, #1024	; 0x400
  404eca:	8989      	ldrh	r1, [r1, #12]
  404ecc:	f5ad 6d8d 	sub.w	sp, sp, #1128	; 0x468
  404ed0:	f021 0102 	bic.w	r1, r1, #2
  404ed4:	f8ad 100c 	strh.w	r1, [sp, #12]
  404ed8:	9606      	str	r6, [sp, #24]
  404eda:	6e61      	ldr	r1, [r4, #100]	; 0x64
  404edc:	89e6      	ldrh	r6, [r4, #14]
  404ede:	9119      	str	r1, [sp, #100]	; 0x64
  404ee0:	f8ad 600e 	strh.w	r6, [sp, #14]
  404ee4:	69e1      	ldr	r1, [r4, #28]
  404ee6:	6a66      	ldr	r6, [r4, #36]	; 0x24
  404ee8:	9107      	str	r1, [sp, #28]
  404eea:	9609      	str	r6, [sp, #36]	; 0x24
  404eec:	4669      	mov	r1, sp
  404eee:	ae1a      	add	r6, sp, #104	; 0x68
  404ef0:	9600      	str	r6, [sp, #0]
  404ef2:	9604      	str	r6, [sp, #16]
  404ef4:	9502      	str	r5, [sp, #8]
  404ef6:	9505      	str	r5, [sp, #20]
  404ef8:	4606      	mov	r6, r0
  404efa:	f7ff f9e7 	bl	4042cc <_vfiprintf_r>
  404efe:	1e05      	subs	r5, r0, #0
  404f00:	db07      	blt.n	404f12 <__sbprintf+0x52>
  404f02:	4630      	mov	r0, r6
  404f04:	4669      	mov	r1, sp
  404f06:	f001 f8d9 	bl	4060bc <_fflush_r>
  404f0a:	2800      	cmp	r0, #0
  404f0c:	bf18      	it	ne
  404f0e:	f04f 35ff 	movne.w	r5, #4294967295
  404f12:	f8bd 300c 	ldrh.w	r3, [sp, #12]
  404f16:	065b      	lsls	r3, r3, #25
  404f18:	d503      	bpl.n	404f22 <__sbprintf+0x62>
  404f1a:	89a3      	ldrh	r3, [r4, #12]
  404f1c:	f043 0340 	orr.w	r3, r3, #64	; 0x40
  404f20:	81a3      	strh	r3, [r4, #12]
  404f22:	4628      	mov	r0, r5
  404f24:	f50d 6d8d 	add.w	sp, sp, #1128	; 0x468
  404f28:	bd70      	pop	{r4, r5, r6, pc}
  404f2a:	bf00      	nop

00404f2c <__swsetup_r>:
  404f2c:	b538      	push	{r3, r4, r5, lr}
  404f2e:	4b30      	ldr	r3, [pc, #192]	; (404ff0 <__swsetup_r+0xc4>)
  404f30:	4605      	mov	r5, r0
  404f32:	6818      	ldr	r0, [r3, #0]
  404f34:	460c      	mov	r4, r1
  404f36:	b110      	cbz	r0, 404f3e <__swsetup_r+0x12>
  404f38:	6b83      	ldr	r3, [r0, #56]	; 0x38
  404f3a:	2b00      	cmp	r3, #0
  404f3c:	d038      	beq.n	404fb0 <__swsetup_r+0x84>
  404f3e:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
  404f42:	b293      	uxth	r3, r2
  404f44:	0718      	lsls	r0, r3, #28
  404f46:	d50c      	bpl.n	404f62 <__swsetup_r+0x36>
  404f48:	6920      	ldr	r0, [r4, #16]
  404f4a:	b1a8      	cbz	r0, 404f78 <__swsetup_r+0x4c>
  404f4c:	f013 0201 	ands.w	r2, r3, #1
  404f50:	d01e      	beq.n	404f90 <__swsetup_r+0x64>
  404f52:	2200      	movs	r2, #0
  404f54:	6963      	ldr	r3, [r4, #20]
  404f56:	60a2      	str	r2, [r4, #8]
  404f58:	425b      	negs	r3, r3
  404f5a:	61a3      	str	r3, [r4, #24]
  404f5c:	b1f0      	cbz	r0, 404f9c <__swsetup_r+0x70>
  404f5e:	2000      	movs	r0, #0
  404f60:	bd38      	pop	{r3, r4, r5, pc}
  404f62:	06d9      	lsls	r1, r3, #27
  404f64:	d53b      	bpl.n	404fde <__swsetup_r+0xb2>
  404f66:	0758      	lsls	r0, r3, #29
  404f68:	d425      	bmi.n	404fb6 <__swsetup_r+0x8a>
  404f6a:	6920      	ldr	r0, [r4, #16]
  404f6c:	f042 0308 	orr.w	r3, r2, #8
  404f70:	81a3      	strh	r3, [r4, #12]
  404f72:	b29b      	uxth	r3, r3
  404f74:	2800      	cmp	r0, #0
  404f76:	d1e9      	bne.n	404f4c <__swsetup_r+0x20>
  404f78:	f403 7220 	and.w	r2, r3, #640	; 0x280
  404f7c:	f5b2 7f00 	cmp.w	r2, #512	; 0x200
  404f80:	d0e4      	beq.n	404f4c <__swsetup_r+0x20>
  404f82:	4628      	mov	r0, r5
  404f84:	4621      	mov	r1, r4
  404f86:	f001 fcd1 	bl	40692c <__smakebuf_r>
  404f8a:	89a3      	ldrh	r3, [r4, #12]
  404f8c:	6920      	ldr	r0, [r4, #16]
  404f8e:	e7dd      	b.n	404f4c <__swsetup_r+0x20>
  404f90:	0799      	lsls	r1, r3, #30
  404f92:	bf58      	it	pl
  404f94:	6962      	ldrpl	r2, [r4, #20]
  404f96:	60a2      	str	r2, [r4, #8]
  404f98:	2800      	cmp	r0, #0
  404f9a:	d1e0      	bne.n	404f5e <__swsetup_r+0x32>
  404f9c:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  404fa0:	061a      	lsls	r2, r3, #24
  404fa2:	d5dd      	bpl.n	404f60 <__swsetup_r+0x34>
  404fa4:	f043 0340 	orr.w	r3, r3, #64	; 0x40
  404fa8:	81a3      	strh	r3, [r4, #12]
  404faa:	f04f 30ff 	mov.w	r0, #4294967295
  404fae:	bd38      	pop	{r3, r4, r5, pc}
  404fb0:	f001 f918 	bl	4061e4 <__sinit>
  404fb4:	e7c3      	b.n	404f3e <__swsetup_r+0x12>
  404fb6:	6b21      	ldr	r1, [r4, #48]	; 0x30
  404fb8:	b151      	cbz	r1, 404fd0 <__swsetup_r+0xa4>
  404fba:	f104 0340 	add.w	r3, r4, #64	; 0x40
  404fbe:	4299      	cmp	r1, r3
  404fc0:	d004      	beq.n	404fcc <__swsetup_r+0xa0>
  404fc2:	4628      	mov	r0, r5
  404fc4:	f001 f9e0 	bl	406388 <_free_r>
  404fc8:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
  404fcc:	2300      	movs	r3, #0
  404fce:	6323      	str	r3, [r4, #48]	; 0x30
  404fd0:	2300      	movs	r3, #0
  404fd2:	6920      	ldr	r0, [r4, #16]
  404fd4:	f022 0224 	bic.w	r2, r2, #36	; 0x24
  404fd8:	e884 0009 	stmia.w	r4, {r0, r3}
  404fdc:	e7c6      	b.n	404f6c <__swsetup_r+0x40>
  404fde:	2309      	movs	r3, #9
  404fe0:	f042 0240 	orr.w	r2, r2, #64	; 0x40
  404fe4:	602b      	str	r3, [r5, #0]
  404fe6:	f04f 30ff 	mov.w	r0, #4294967295
  404fea:	81a2      	strh	r2, [r4, #12]
  404fec:	bd38      	pop	{r3, r4, r5, pc}
  404fee:	bf00      	nop
  404ff0:	20000100 	.word	0x20000100

00404ff4 <register_fini>:
  404ff4:	4b02      	ldr	r3, [pc, #8]	; (405000 <register_fini+0xc>)
  404ff6:	b113      	cbz	r3, 404ffe <register_fini+0xa>
  404ff8:	4802      	ldr	r0, [pc, #8]	; (405004 <register_fini+0x10>)
  404ffa:	f000 b805 	b.w	405008 <atexit>
  404ffe:	4770      	bx	lr
  405000:	00000000 	.word	0x00000000
  405004:	004061f9 	.word	0x004061f9

00405008 <atexit>:
  405008:	2300      	movs	r3, #0
  40500a:	4601      	mov	r1, r0
  40500c:	461a      	mov	r2, r3
  40500e:	4618      	mov	r0, r3
  405010:	f002 bba8 	b.w	407764 <__register_exitproc>

00405014 <quorem>:
  405014:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  405018:	6903      	ldr	r3, [r0, #16]
  40501a:	690f      	ldr	r7, [r1, #16]
  40501c:	b083      	sub	sp, #12
  40501e:	429f      	cmp	r7, r3
  405020:	f300 8088 	bgt.w	405134 <quorem+0x120>
  405024:	3f01      	subs	r7, #1
  405026:	f101 0614 	add.w	r6, r1, #20
  40502a:	f100 0a14 	add.w	sl, r0, #20
  40502e:	f856 3027 	ldr.w	r3, [r6, r7, lsl #2]
  405032:	f85a 2027 	ldr.w	r2, [sl, r7, lsl #2]
  405036:	3301      	adds	r3, #1
  405038:	fbb2 f8f3 	udiv	r8, r2, r3
  40503c:	00bb      	lsls	r3, r7, #2
  40503e:	9300      	str	r3, [sp, #0]
  405040:	eb06 0903 	add.w	r9, r6, r3
  405044:	4453      	add	r3, sl
  405046:	9301      	str	r3, [sp, #4]
  405048:	f1b8 0f00 	cmp.w	r8, #0
  40504c:	d03b      	beq.n	4050c6 <quorem+0xb2>
  40504e:	2300      	movs	r3, #0
  405050:	46b4      	mov	ip, r6
  405052:	461c      	mov	r4, r3
  405054:	46d6      	mov	lr, sl
  405056:	f85c 2b04 	ldr.w	r2, [ip], #4
  40505a:	f8de 5000 	ldr.w	r5, [lr]
  40505e:	fa1f fb82 	uxth.w	fp, r2
  405062:	fb08 330b 	mla	r3, r8, fp, r3
  405066:	0c12      	lsrs	r2, r2, #16
  405068:	ea4f 4b13 	mov.w	fp, r3, lsr #16
  40506c:	fb08 bb02 	mla	fp, r8, r2, fp
  405070:	b29a      	uxth	r2, r3
  405072:	1aa2      	subs	r2, r4, r2
  405074:	b2ab      	uxth	r3, r5
  405076:	fa1f f48b 	uxth.w	r4, fp
  40507a:	441a      	add	r2, r3
  40507c:	ebc4 4415 	rsb	r4, r4, r5, lsr #16
  405080:	eb04 4422 	add.w	r4, r4, r2, asr #16
  405084:	b292      	uxth	r2, r2
  405086:	ea42 4204 	orr.w	r2, r2, r4, lsl #16
  40508a:	45e1      	cmp	r9, ip
  40508c:	f84e 2b04 	str.w	r2, [lr], #4
  405090:	ea4f 4424 	mov.w	r4, r4, asr #16
  405094:	ea4f 431b 	mov.w	r3, fp, lsr #16
  405098:	d2dd      	bcs.n	405056 <quorem+0x42>
  40509a:	9b00      	ldr	r3, [sp, #0]
  40509c:	f85a 3003 	ldr.w	r3, [sl, r3]
  4050a0:	b98b      	cbnz	r3, 4050c6 <quorem+0xb2>
  4050a2:	9c01      	ldr	r4, [sp, #4]
  4050a4:	1f23      	subs	r3, r4, #4
  4050a6:	459a      	cmp	sl, r3
  4050a8:	d20c      	bcs.n	4050c4 <quorem+0xb0>
  4050aa:	f854 3c04 	ldr.w	r3, [r4, #-4]
  4050ae:	b94b      	cbnz	r3, 4050c4 <quorem+0xb0>
  4050b0:	f1a4 0308 	sub.w	r3, r4, #8
  4050b4:	e002      	b.n	4050bc <quorem+0xa8>
  4050b6:	681a      	ldr	r2, [r3, #0]
  4050b8:	3b04      	subs	r3, #4
  4050ba:	b91a      	cbnz	r2, 4050c4 <quorem+0xb0>
  4050bc:	459a      	cmp	sl, r3
  4050be:	f107 37ff 	add.w	r7, r7, #4294967295
  4050c2:	d3f8      	bcc.n	4050b6 <quorem+0xa2>
  4050c4:	6107      	str	r7, [r0, #16]
  4050c6:	4604      	mov	r4, r0
  4050c8:	f001 ff32 	bl	406f30 <__mcmp>
  4050cc:	2800      	cmp	r0, #0
  4050ce:	db2d      	blt.n	40512c <quorem+0x118>
  4050d0:	4655      	mov	r5, sl
  4050d2:	2300      	movs	r3, #0
  4050d4:	f108 0801 	add.w	r8, r8, #1
  4050d8:	f856 1b04 	ldr.w	r1, [r6], #4
  4050dc:	6828      	ldr	r0, [r5, #0]
  4050de:	b28a      	uxth	r2, r1
  4050e0:	1a9a      	subs	r2, r3, r2
  4050e2:	0c0b      	lsrs	r3, r1, #16
  4050e4:	b281      	uxth	r1, r0
  4050e6:	440a      	add	r2, r1
  4050e8:	ebc3 4310 	rsb	r3, r3, r0, lsr #16
  4050ec:	eb03 4322 	add.w	r3, r3, r2, asr #16
  4050f0:	b292      	uxth	r2, r2
  4050f2:	ea42 4203 	orr.w	r2, r2, r3, lsl #16
  4050f6:	45b1      	cmp	r9, r6
  4050f8:	f845 2b04 	str.w	r2, [r5], #4
  4050fc:	ea4f 4323 	mov.w	r3, r3, asr #16
  405100:	d2ea      	bcs.n	4050d8 <quorem+0xc4>
  405102:	f85a 2027 	ldr.w	r2, [sl, r7, lsl #2]
  405106:	eb0a 0387 	add.w	r3, sl, r7, lsl #2
  40510a:	b97a      	cbnz	r2, 40512c <quorem+0x118>
  40510c:	1f1a      	subs	r2, r3, #4
  40510e:	4592      	cmp	sl, r2
  405110:	d20b      	bcs.n	40512a <quorem+0x116>
  405112:	f853 2c04 	ldr.w	r2, [r3, #-4]
  405116:	b942      	cbnz	r2, 40512a <quorem+0x116>
  405118:	3b08      	subs	r3, #8
  40511a:	e002      	b.n	405122 <quorem+0x10e>
  40511c:	681a      	ldr	r2, [r3, #0]
  40511e:	3b04      	subs	r3, #4
  405120:	b91a      	cbnz	r2, 40512a <quorem+0x116>
  405122:	459a      	cmp	sl, r3
  405124:	f107 37ff 	add.w	r7, r7, #4294967295
  405128:	d3f8      	bcc.n	40511c <quorem+0x108>
  40512a:	6127      	str	r7, [r4, #16]
  40512c:	4640      	mov	r0, r8
  40512e:	b003      	add	sp, #12
  405130:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  405134:	2000      	movs	r0, #0
  405136:	b003      	add	sp, #12
  405138:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  40513c:	0000      	movs	r0, r0
	...

00405140 <_dtoa_r>:
  405140:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  405144:	6c05      	ldr	r5, [r0, #64]	; 0x40
  405146:	b09b      	sub	sp, #108	; 0x6c
  405148:	4604      	mov	r4, r0
  40514a:	4692      	mov	sl, r2
  40514c:	469b      	mov	fp, r3
  40514e:	9e27      	ldr	r6, [sp, #156]	; 0x9c
  405150:	b14d      	cbz	r5, 405166 <_dtoa_r+0x26>
  405152:	2301      	movs	r3, #1
  405154:	6c42      	ldr	r2, [r0, #68]	; 0x44
  405156:	4629      	mov	r1, r5
  405158:	4093      	lsls	r3, r2
  40515a:	60ab      	str	r3, [r5, #8]
  40515c:	606a      	str	r2, [r5, #4]
  40515e:	f001 fd0f 	bl	406b80 <_Bfree>
  405162:	2300      	movs	r3, #0
  405164:	6423      	str	r3, [r4, #64]	; 0x40
  405166:	f1bb 0f00 	cmp.w	fp, #0
  40516a:	465d      	mov	r5, fp
  40516c:	db35      	blt.n	4051da <_dtoa_r+0x9a>
  40516e:	2300      	movs	r3, #0
  405170:	6033      	str	r3, [r6, #0]
  405172:	4b9d      	ldr	r3, [pc, #628]	; (4053e8 <_dtoa_r+0x2a8>)
  405174:	43ab      	bics	r3, r5
  405176:	d015      	beq.n	4051a4 <_dtoa_r+0x64>
  405178:	2200      	movs	r2, #0
  40517a:	2300      	movs	r3, #0
  40517c:	4650      	mov	r0, sl
  40517e:	4659      	mov	r1, fp
  405180:	f003 f83a 	bl	4081f8 <__aeabi_dcmpeq>
  405184:	4680      	mov	r8, r0
  405186:	2800      	cmp	r0, #0
  405188:	d02d      	beq.n	4051e6 <_dtoa_r+0xa6>
  40518a:	2301      	movs	r3, #1
  40518c:	9a26      	ldr	r2, [sp, #152]	; 0x98
  40518e:	6013      	str	r3, [r2, #0]
  405190:	9b28      	ldr	r3, [sp, #160]	; 0xa0
  405192:	2b00      	cmp	r3, #0
  405194:	f000 80bd 	beq.w	405312 <_dtoa_r+0x1d2>
  405198:	4894      	ldr	r0, [pc, #592]	; (4053ec <_dtoa_r+0x2ac>)
  40519a:	6018      	str	r0, [r3, #0]
  40519c:	3801      	subs	r0, #1
  40519e:	b01b      	add	sp, #108	; 0x6c
  4051a0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  4051a4:	f242 730f 	movw	r3, #9999	; 0x270f
  4051a8:	9a26      	ldr	r2, [sp, #152]	; 0x98
  4051aa:	6013      	str	r3, [r2, #0]
  4051ac:	f1ba 0f00 	cmp.w	sl, #0
  4051b0:	d10d      	bne.n	4051ce <_dtoa_r+0x8e>
  4051b2:	f3c5 0513 	ubfx	r5, r5, #0, #20
  4051b6:	b955      	cbnz	r5, 4051ce <_dtoa_r+0x8e>
  4051b8:	9b28      	ldr	r3, [sp, #160]	; 0xa0
  4051ba:	488d      	ldr	r0, [pc, #564]	; (4053f0 <_dtoa_r+0x2b0>)
  4051bc:	2b00      	cmp	r3, #0
  4051be:	d0ee      	beq.n	40519e <_dtoa_r+0x5e>
  4051c0:	f100 0308 	add.w	r3, r0, #8
  4051c4:	9a28      	ldr	r2, [sp, #160]	; 0xa0
  4051c6:	6013      	str	r3, [r2, #0]
  4051c8:	b01b      	add	sp, #108	; 0x6c
  4051ca:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  4051ce:	9b28      	ldr	r3, [sp, #160]	; 0xa0
  4051d0:	4888      	ldr	r0, [pc, #544]	; (4053f4 <_dtoa_r+0x2b4>)
  4051d2:	2b00      	cmp	r3, #0
  4051d4:	d0e3      	beq.n	40519e <_dtoa_r+0x5e>
  4051d6:	1cc3      	adds	r3, r0, #3
  4051d8:	e7f4      	b.n	4051c4 <_dtoa_r+0x84>
  4051da:	2301      	movs	r3, #1
  4051dc:	f02b 4500 	bic.w	r5, fp, #2147483648	; 0x80000000
  4051e0:	6033      	str	r3, [r6, #0]
  4051e2:	46ab      	mov	fp, r5
  4051e4:	e7c5      	b.n	405172 <_dtoa_r+0x32>
  4051e6:	aa18      	add	r2, sp, #96	; 0x60
  4051e8:	ab19      	add	r3, sp, #100	; 0x64
  4051ea:	9201      	str	r2, [sp, #4]
  4051ec:	9300      	str	r3, [sp, #0]
  4051ee:	4652      	mov	r2, sl
  4051f0:	465b      	mov	r3, fp
  4051f2:	4620      	mov	r0, r4
  4051f4:	f001 ff46 	bl	407084 <__d2b>
  4051f8:	0d2b      	lsrs	r3, r5, #20
  4051fa:	4681      	mov	r9, r0
  4051fc:	d071      	beq.n	4052e2 <_dtoa_r+0x1a2>
  4051fe:	4650      	mov	r0, sl
  405200:	f3cb 0213 	ubfx	r2, fp, #0, #20
  405204:	f042 517f 	orr.w	r1, r2, #1069547520	; 0x3fc00000
  405208:	9f18      	ldr	r7, [sp, #96]	; 0x60
  40520a:	f2a3 36ff 	subw	r6, r3, #1023	; 0x3ff
  40520e:	f8cd 8050 	str.w	r8, [sp, #80]	; 0x50
  405212:	f441 1140 	orr.w	r1, r1, #3145728	; 0x300000
  405216:	2200      	movs	r2, #0
  405218:	4b77      	ldr	r3, [pc, #476]	; (4053f8 <_dtoa_r+0x2b8>)
  40521a:	f002 fbd1 	bl	4079c0 <__aeabi_dsub>
  40521e:	a36c      	add	r3, pc, #432	; (adr r3, 4053d0 <_dtoa_r+0x290>)
  405220:	e9d3 2300 	ldrd	r2, r3, [r3]
  405224:	f002 fd80 	bl	407d28 <__aeabi_dmul>
  405228:	a36b      	add	r3, pc, #428	; (adr r3, 4053d8 <_dtoa_r+0x298>)
  40522a:	e9d3 2300 	ldrd	r2, r3, [r3]
  40522e:	f002 fbc9 	bl	4079c4 <__adddf3>
  405232:	e9cd 0102 	strd	r0, r1, [sp, #8]
  405236:	4630      	mov	r0, r6
  405238:	f002 fd10 	bl	407c5c <__aeabi_i2d>
  40523c:	a368      	add	r3, pc, #416	; (adr r3, 4053e0 <_dtoa_r+0x2a0>)
  40523e:	e9d3 2300 	ldrd	r2, r3, [r3]
  405242:	f002 fd71 	bl	407d28 <__aeabi_dmul>
  405246:	4602      	mov	r2, r0
  405248:	460b      	mov	r3, r1
  40524a:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
  40524e:	f002 fbb9 	bl	4079c4 <__adddf3>
  405252:	e9cd 0104 	strd	r0, r1, [sp, #16]
  405256:	f003 f817 	bl	408288 <__aeabi_d2iz>
  40525a:	2200      	movs	r2, #0
  40525c:	9002      	str	r0, [sp, #8]
  40525e:	2300      	movs	r3, #0
  405260:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
  405264:	f002 ffd2 	bl	40820c <__aeabi_dcmplt>
  405268:	2800      	cmp	r0, #0
  40526a:	f040 816d 	bne.w	405548 <_dtoa_r+0x408>
  40526e:	9d02      	ldr	r5, [sp, #8]
  405270:	2d16      	cmp	r5, #22
  405272:	f200 8157 	bhi.w	405524 <_dtoa_r+0x3e4>
  405276:	4961      	ldr	r1, [pc, #388]	; (4053fc <_dtoa_r+0x2bc>)
  405278:	4652      	mov	r2, sl
  40527a:	eb01 01c5 	add.w	r1, r1, r5, lsl #3
  40527e:	465b      	mov	r3, fp
  405280:	e9d1 0100 	ldrd	r0, r1, [r1]
  405284:	f002 ffe0 	bl	408248 <__aeabi_dcmpgt>
  405288:	2800      	cmp	r0, #0
  40528a:	f000 81be 	beq.w	40560a <_dtoa_r+0x4ca>
  40528e:	1e6b      	subs	r3, r5, #1
  405290:	9302      	str	r3, [sp, #8]
  405292:	2300      	movs	r3, #0
  405294:	930e      	str	r3, [sp, #56]	; 0x38
  405296:	1bbf      	subs	r7, r7, r6
  405298:	1e7b      	subs	r3, r7, #1
  40529a:	9308      	str	r3, [sp, #32]
  40529c:	f100 814e 	bmi.w	40553c <_dtoa_r+0x3fc>
  4052a0:	2300      	movs	r3, #0
  4052a2:	930a      	str	r3, [sp, #40]	; 0x28
  4052a4:	9b02      	ldr	r3, [sp, #8]
  4052a6:	2b00      	cmp	r3, #0
  4052a8:	f2c0 813f 	blt.w	40552a <_dtoa_r+0x3ea>
  4052ac:	9a08      	ldr	r2, [sp, #32]
  4052ae:	930d      	str	r3, [sp, #52]	; 0x34
  4052b0:	4611      	mov	r1, r2
  4052b2:	4419      	add	r1, r3
  4052b4:	2300      	movs	r3, #0
  4052b6:	9108      	str	r1, [sp, #32]
  4052b8:	930c      	str	r3, [sp, #48]	; 0x30
  4052ba:	9b24      	ldr	r3, [sp, #144]	; 0x90
  4052bc:	2b09      	cmp	r3, #9
  4052be:	d82a      	bhi.n	405316 <_dtoa_r+0x1d6>
  4052c0:	2b05      	cmp	r3, #5
  4052c2:	f340 8658 	ble.w	405f76 <_dtoa_r+0xe36>
  4052c6:	2500      	movs	r5, #0
  4052c8:	3b04      	subs	r3, #4
  4052ca:	9324      	str	r3, [sp, #144]	; 0x90
  4052cc:	9b24      	ldr	r3, [sp, #144]	; 0x90
  4052ce:	3b02      	subs	r3, #2
  4052d0:	2b03      	cmp	r3, #3
  4052d2:	f200 863f 	bhi.w	405f54 <_dtoa_r+0xe14>
  4052d6:	e8df f013 	tbh	[pc, r3, lsl #1]
  4052da:	03ce      	.short	0x03ce
  4052dc:	03d902c3 	.word	0x03d902c3
  4052e0:	045b      	.short	0x045b
  4052e2:	9f18      	ldr	r7, [sp, #96]	; 0x60
  4052e4:	9e19      	ldr	r6, [sp, #100]	; 0x64
  4052e6:	443e      	add	r6, r7
  4052e8:	f206 4332 	addw	r3, r6, #1074	; 0x432
  4052ec:	2b20      	cmp	r3, #32
  4052ee:	f340 8187 	ble.w	405600 <_dtoa_r+0x4c0>
  4052f2:	f1c3 0340 	rsb	r3, r3, #64	; 0x40
  4052f6:	f206 4012 	addw	r0, r6, #1042	; 0x412
  4052fa:	409d      	lsls	r5, r3
  4052fc:	fa2a f000 	lsr.w	r0, sl, r0
  405300:	4328      	orrs	r0, r5
  405302:	f002 fc9b 	bl	407c3c <__aeabi_ui2d>
  405306:	2301      	movs	r3, #1
  405308:	3e01      	subs	r6, #1
  40530a:	9314      	str	r3, [sp, #80]	; 0x50
  40530c:	f1a1 71f8 	sub.w	r1, r1, #32505856	; 0x1f00000
  405310:	e781      	b.n	405216 <_dtoa_r+0xd6>
  405312:	483b      	ldr	r0, [pc, #236]	; (405400 <_dtoa_r+0x2c0>)
  405314:	e743      	b.n	40519e <_dtoa_r+0x5e>
  405316:	2100      	movs	r1, #0
  405318:	4620      	mov	r0, r4
  40531a:	6461      	str	r1, [r4, #68]	; 0x44
  40531c:	9125      	str	r1, [sp, #148]	; 0x94
  40531e:	f001 fc09 	bl	406b34 <_Balloc>
  405322:	f04f 33ff 	mov.w	r3, #4294967295
  405326:	9307      	str	r3, [sp, #28]
  405328:	930f      	str	r3, [sp, #60]	; 0x3c
  40532a:	2301      	movs	r3, #1
  40532c:	9a25      	ldr	r2, [sp, #148]	; 0x94
  40532e:	9004      	str	r0, [sp, #16]
  405330:	6420      	str	r0, [r4, #64]	; 0x40
  405332:	9224      	str	r2, [sp, #144]	; 0x90
  405334:	930b      	str	r3, [sp, #44]	; 0x2c
  405336:	9b19      	ldr	r3, [sp, #100]	; 0x64
  405338:	2b00      	cmp	r3, #0
  40533a:	f2c0 80d3 	blt.w	4054e4 <_dtoa_r+0x3a4>
  40533e:	9a02      	ldr	r2, [sp, #8]
  405340:	2a0e      	cmp	r2, #14
  405342:	f300 80cf 	bgt.w	4054e4 <_dtoa_r+0x3a4>
  405346:	4b2d      	ldr	r3, [pc, #180]	; (4053fc <_dtoa_r+0x2bc>)
  405348:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
  40534c:	e9d3 2300 	ldrd	r2, r3, [r3]
  405350:	e9cd 2308 	strd	r2, r3, [sp, #32]
  405354:	9b25      	ldr	r3, [sp, #148]	; 0x94
  405356:	2b00      	cmp	r3, #0
  405358:	f2c0 83b4 	blt.w	405ac4 <_dtoa_r+0x984>
  40535c:	e9dd 5608 	ldrd	r5, r6, [sp, #32]
  405360:	4650      	mov	r0, sl
  405362:	462a      	mov	r2, r5
  405364:	4633      	mov	r3, r6
  405366:	4659      	mov	r1, fp
  405368:	f002 fe08 	bl	407f7c <__aeabi_ddiv>
  40536c:	f002 ff8c 	bl	408288 <__aeabi_d2iz>
  405370:	4680      	mov	r8, r0
  405372:	f002 fc73 	bl	407c5c <__aeabi_i2d>
  405376:	462a      	mov	r2, r5
  405378:	4633      	mov	r3, r6
  40537a:	f002 fcd5 	bl	407d28 <__aeabi_dmul>
  40537e:	4602      	mov	r2, r0
  405380:	460b      	mov	r3, r1
  405382:	4650      	mov	r0, sl
  405384:	4659      	mov	r1, fp
  405386:	f002 fb1b 	bl	4079c0 <__aeabi_dsub>
  40538a:	9e07      	ldr	r6, [sp, #28]
  40538c:	9f04      	ldr	r7, [sp, #16]
  40538e:	f108 0530 	add.w	r5, r8, #48	; 0x30
  405392:	2e01      	cmp	r6, #1
  405394:	703d      	strb	r5, [r7, #0]
  405396:	4602      	mov	r2, r0
  405398:	460b      	mov	r3, r1
  40539a:	f107 0501 	add.w	r5, r7, #1
  40539e:	d064      	beq.n	40546a <_dtoa_r+0x32a>
  4053a0:	2200      	movs	r2, #0
  4053a2:	4b18      	ldr	r3, [pc, #96]	; (405404 <_dtoa_r+0x2c4>)
  4053a4:	f002 fcc0 	bl	407d28 <__aeabi_dmul>
  4053a8:	2200      	movs	r2, #0
  4053aa:	2300      	movs	r3, #0
  4053ac:	4606      	mov	r6, r0
  4053ae:	460f      	mov	r7, r1
  4053b0:	f002 ff22 	bl	4081f8 <__aeabi_dcmpeq>
  4053b4:	2800      	cmp	r0, #0
  4053b6:	f040 8082 	bne.w	4054be <_dtoa_r+0x37e>
  4053ba:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
  4053be:	f04f 0a00 	mov.w	sl, #0
  4053c2:	e9dd 8908 	ldrd	r8, r9, [sp, #32]
  4053c6:	f04f 0b00 	mov.w	fp, #0
  4053ca:	940b      	str	r4, [sp, #44]	; 0x2c
  4053cc:	e029      	b.n	405422 <_dtoa_r+0x2e2>
  4053ce:	bf00      	nop
  4053d0:	636f4361 	.word	0x636f4361
  4053d4:	3fd287a7 	.word	0x3fd287a7
  4053d8:	8b60c8b3 	.word	0x8b60c8b3
  4053dc:	3fc68a28 	.word	0x3fc68a28
  4053e0:	509f79fb 	.word	0x509f79fb
  4053e4:	3fd34413 	.word	0x3fd34413
  4053e8:	7ff00000 	.word	0x7ff00000
  4053ec:	00408f1d 	.word	0x00408f1d
  4053f0:	00408f60 	.word	0x00408f60
  4053f4:	00408f6c 	.word	0x00408f6c
  4053f8:	3ff80000 	.word	0x3ff80000
  4053fc:	00408fa8 	.word	0x00408fa8
  405400:	00408f1c 	.word	0x00408f1c
  405404:	40240000 	.word	0x40240000
  405408:	2200      	movs	r2, #0
  40540a:	4b81      	ldr	r3, [pc, #516]	; (405610 <_dtoa_r+0x4d0>)
  40540c:	f002 fc8c 	bl	407d28 <__aeabi_dmul>
  405410:	4652      	mov	r2, sl
  405412:	465b      	mov	r3, fp
  405414:	4606      	mov	r6, r0
  405416:	460f      	mov	r7, r1
  405418:	f002 feee 	bl	4081f8 <__aeabi_dcmpeq>
  40541c:	2800      	cmp	r0, #0
  40541e:	f040 83ba 	bne.w	405b96 <_dtoa_r+0xa56>
  405422:	4642      	mov	r2, r8
  405424:	464b      	mov	r3, r9
  405426:	4630      	mov	r0, r6
  405428:	4639      	mov	r1, r7
  40542a:	f002 fda7 	bl	407f7c <__aeabi_ddiv>
  40542e:	f002 ff2b 	bl	408288 <__aeabi_d2iz>
  405432:	4604      	mov	r4, r0
  405434:	f002 fc12 	bl	407c5c <__aeabi_i2d>
  405438:	4642      	mov	r2, r8
  40543a:	464b      	mov	r3, r9
  40543c:	f002 fc74 	bl	407d28 <__aeabi_dmul>
  405440:	4602      	mov	r2, r0
  405442:	460b      	mov	r3, r1
  405444:	4630      	mov	r0, r6
  405446:	4639      	mov	r1, r7
  405448:	f002 faba 	bl	4079c0 <__aeabi_dsub>
  40544c:	f104 0630 	add.w	r6, r4, #48	; 0x30
  405450:	f805 6b01 	strb.w	r6, [r5], #1
  405454:	9e04      	ldr	r6, [sp, #16]
  405456:	9f07      	ldr	r7, [sp, #28]
  405458:	1bae      	subs	r6, r5, r6
  40545a:	42be      	cmp	r6, r7
  40545c:	4602      	mov	r2, r0
  40545e:	460b      	mov	r3, r1
  405460:	d1d2      	bne.n	405408 <_dtoa_r+0x2c8>
  405462:	46a0      	mov	r8, r4
  405464:	f8dd 9028 	ldr.w	r9, [sp, #40]	; 0x28
  405468:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
  40546a:	4610      	mov	r0, r2
  40546c:	4619      	mov	r1, r3
  40546e:	f002 faa9 	bl	4079c4 <__adddf3>
  405472:	4606      	mov	r6, r0
  405474:	460f      	mov	r7, r1
  405476:	4602      	mov	r2, r0
  405478:	460b      	mov	r3, r1
  40547a:	e9dd 0108 	ldrd	r0, r1, [sp, #32]
  40547e:	f002 fec5 	bl	40820c <__aeabi_dcmplt>
  405482:	b948      	cbnz	r0, 405498 <_dtoa_r+0x358>
  405484:	e9dd 0108 	ldrd	r0, r1, [sp, #32]
  405488:	4632      	mov	r2, r6
  40548a:	463b      	mov	r3, r7
  40548c:	f002 feb4 	bl	4081f8 <__aeabi_dcmpeq>
  405490:	b1a8      	cbz	r0, 4054be <_dtoa_r+0x37e>
  405492:	f018 0f01 	tst.w	r8, #1
  405496:	d012      	beq.n	4054be <_dtoa_r+0x37e>
  405498:	f815 8c01 	ldrb.w	r8, [r5, #-1]
  40549c:	1e6b      	subs	r3, r5, #1
  40549e:	9a04      	ldr	r2, [sp, #16]
  4054a0:	e004      	b.n	4054ac <_dtoa_r+0x36c>
  4054a2:	429a      	cmp	r2, r3
  4054a4:	f000 8402 	beq.w	405cac <_dtoa_r+0xb6c>
  4054a8:	f813 8d01 	ldrb.w	r8, [r3, #-1]!
  4054ac:	f1b8 0f39 	cmp.w	r8, #57	; 0x39
  4054b0:	f103 0501 	add.w	r5, r3, #1
  4054b4:	d0f5      	beq.n	4054a2 <_dtoa_r+0x362>
  4054b6:	f108 0801 	add.w	r8, r8, #1
  4054ba:	f883 8000 	strb.w	r8, [r3]
  4054be:	4649      	mov	r1, r9
  4054c0:	4620      	mov	r0, r4
  4054c2:	f001 fb5d 	bl	406b80 <_Bfree>
  4054c6:	2200      	movs	r2, #0
  4054c8:	9b02      	ldr	r3, [sp, #8]
  4054ca:	702a      	strb	r2, [r5, #0]
  4054cc:	9a26      	ldr	r2, [sp, #152]	; 0x98
  4054ce:	3301      	adds	r3, #1
  4054d0:	6013      	str	r3, [r2, #0]
  4054d2:	9b28      	ldr	r3, [sp, #160]	; 0xa0
  4054d4:	2b00      	cmp	r3, #0
  4054d6:	f000 839f 	beq.w	405c18 <_dtoa_r+0xad8>
  4054da:	9804      	ldr	r0, [sp, #16]
  4054dc:	601d      	str	r5, [r3, #0]
  4054de:	b01b      	add	sp, #108	; 0x6c
  4054e0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  4054e4:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
  4054e6:	2a00      	cmp	r2, #0
  4054e8:	d03e      	beq.n	405568 <_dtoa_r+0x428>
  4054ea:	9a24      	ldr	r2, [sp, #144]	; 0x90
  4054ec:	2a01      	cmp	r2, #1
  4054ee:	f340 8311 	ble.w	405b14 <_dtoa_r+0x9d4>
  4054f2:	9b07      	ldr	r3, [sp, #28]
  4054f4:	9a0c      	ldr	r2, [sp, #48]	; 0x30
  4054f6:	1e5f      	subs	r7, r3, #1
  4054f8:	42ba      	cmp	r2, r7
  4054fa:	f2c0 8390 	blt.w	405c1e <_dtoa_r+0xade>
  4054fe:	1bd7      	subs	r7, r2, r7
  405500:	9b07      	ldr	r3, [sp, #28]
  405502:	2b00      	cmp	r3, #0
  405504:	f2c0 848c 	blt.w	405e20 <_dtoa_r+0xce0>
  405508:	9d0a      	ldr	r5, [sp, #40]	; 0x28
  40550a:	9b07      	ldr	r3, [sp, #28]
  40550c:	9a0a      	ldr	r2, [sp, #40]	; 0x28
  40550e:	2101      	movs	r1, #1
  405510:	441a      	add	r2, r3
  405512:	920a      	str	r2, [sp, #40]	; 0x28
  405514:	9a08      	ldr	r2, [sp, #32]
  405516:	4620      	mov	r0, r4
  405518:	441a      	add	r2, r3
  40551a:	9208      	str	r2, [sp, #32]
  40551c:	f001 fbcc 	bl	406cb8 <__i2b>
  405520:	4606      	mov	r6, r0
  405522:	e023      	b.n	40556c <_dtoa_r+0x42c>
  405524:	2301      	movs	r3, #1
  405526:	930e      	str	r3, [sp, #56]	; 0x38
  405528:	e6b5      	b.n	405296 <_dtoa_r+0x156>
  40552a:	2300      	movs	r3, #0
  40552c:	9a0a      	ldr	r2, [sp, #40]	; 0x28
  40552e:	930d      	str	r3, [sp, #52]	; 0x34
  405530:	9b02      	ldr	r3, [sp, #8]
  405532:	1ad2      	subs	r2, r2, r3
  405534:	425b      	negs	r3, r3
  405536:	920a      	str	r2, [sp, #40]	; 0x28
  405538:	930c      	str	r3, [sp, #48]	; 0x30
  40553a:	e6be      	b.n	4052ba <_dtoa_r+0x17a>
  40553c:	f1c7 0301 	rsb	r3, r7, #1
  405540:	930a      	str	r3, [sp, #40]	; 0x28
  405542:	2300      	movs	r3, #0
  405544:	9308      	str	r3, [sp, #32]
  405546:	e6ad      	b.n	4052a4 <_dtoa_r+0x164>
  405548:	9d02      	ldr	r5, [sp, #8]
  40554a:	4628      	mov	r0, r5
  40554c:	f002 fb86 	bl	407c5c <__aeabi_i2d>
  405550:	4602      	mov	r2, r0
  405552:	460b      	mov	r3, r1
  405554:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
  405558:	f002 fe4e 	bl	4081f8 <__aeabi_dcmpeq>
  40555c:	2800      	cmp	r0, #0
  40555e:	f47f ae86 	bne.w	40526e <_dtoa_r+0x12e>
  405562:	1e6b      	subs	r3, r5, #1
  405564:	9302      	str	r3, [sp, #8]
  405566:	e682      	b.n	40526e <_dtoa_r+0x12e>
  405568:	ad0a      	add	r5, sp, #40	; 0x28
  40556a:	cde0      	ldmia	r5, {r5, r6, r7}
  40556c:	2d00      	cmp	r5, #0
  40556e:	dd0c      	ble.n	40558a <_dtoa_r+0x44a>
  405570:	9908      	ldr	r1, [sp, #32]
  405572:	2900      	cmp	r1, #0
  405574:	460b      	mov	r3, r1
  405576:	dd08      	ble.n	40558a <_dtoa_r+0x44a>
  405578:	42a9      	cmp	r1, r5
  40557a:	bfa8      	it	ge
  40557c:	462b      	movge	r3, r5
  40557e:	9a0a      	ldr	r2, [sp, #40]	; 0x28
  405580:	1aed      	subs	r5, r5, r3
  405582:	1ad2      	subs	r2, r2, r3
  405584:	1acb      	subs	r3, r1, r3
  405586:	920a      	str	r2, [sp, #40]	; 0x28
  405588:	9308      	str	r3, [sp, #32]
  40558a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
  40558c:	b1d3      	cbz	r3, 4055c4 <_dtoa_r+0x484>
  40558e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
  405590:	2b00      	cmp	r3, #0
  405592:	f000 82b8 	beq.w	405b06 <_dtoa_r+0x9c6>
  405596:	2f00      	cmp	r7, #0
  405598:	dd10      	ble.n	4055bc <_dtoa_r+0x47c>
  40559a:	4631      	mov	r1, r6
  40559c:	463a      	mov	r2, r7
  40559e:	4620      	mov	r0, r4
  4055a0:	f001 fc26 	bl	406df0 <__pow5mult>
  4055a4:	464a      	mov	r2, r9
  4055a6:	4601      	mov	r1, r0
  4055a8:	4606      	mov	r6, r0
  4055aa:	4620      	mov	r0, r4
  4055ac:	f001 fb8e 	bl	406ccc <__multiply>
  4055b0:	4603      	mov	r3, r0
  4055b2:	4649      	mov	r1, r9
  4055b4:	4620      	mov	r0, r4
  4055b6:	4699      	mov	r9, r3
  4055b8:	f001 fae2 	bl	406b80 <_Bfree>
  4055bc:	9b0c      	ldr	r3, [sp, #48]	; 0x30
  4055be:	1bda      	subs	r2, r3, r7
  4055c0:	f040 82a2 	bne.w	405b08 <_dtoa_r+0x9c8>
  4055c4:	2101      	movs	r1, #1
  4055c6:	4620      	mov	r0, r4
  4055c8:	f001 fb76 	bl	406cb8 <__i2b>
  4055cc:	9b0d      	ldr	r3, [sp, #52]	; 0x34
  4055ce:	4680      	mov	r8, r0
  4055d0:	2b00      	cmp	r3, #0
  4055d2:	dd1f      	ble.n	405614 <_dtoa_r+0x4d4>
  4055d4:	4601      	mov	r1, r0
  4055d6:	461a      	mov	r2, r3
  4055d8:	4620      	mov	r0, r4
  4055da:	f001 fc09 	bl	406df0 <__pow5mult>
  4055de:	9b24      	ldr	r3, [sp, #144]	; 0x90
  4055e0:	4680      	mov	r8, r0
  4055e2:	2b01      	cmp	r3, #1
  4055e4:	f340 8255 	ble.w	405a92 <_dtoa_r+0x952>
  4055e8:	2300      	movs	r3, #0
  4055ea:	930c      	str	r3, [sp, #48]	; 0x30
  4055ec:	f8d8 3010 	ldr.w	r3, [r8, #16]
  4055f0:	eb08 0383 	add.w	r3, r8, r3, lsl #2
  4055f4:	6918      	ldr	r0, [r3, #16]
  4055f6:	f001 fb0f 	bl	406c18 <__hi0bits>
  4055fa:	f1c0 0020 	rsb	r0, r0, #32
  4055fe:	e013      	b.n	405628 <_dtoa_r+0x4e8>
  405600:	f1c3 0520 	rsb	r5, r3, #32
  405604:	fa0a f005 	lsl.w	r0, sl, r5
  405608:	e67b      	b.n	405302 <_dtoa_r+0x1c2>
  40560a:	900e      	str	r0, [sp, #56]	; 0x38
  40560c:	e643      	b.n	405296 <_dtoa_r+0x156>
  40560e:	bf00      	nop
  405610:	40240000 	.word	0x40240000
  405614:	9b24      	ldr	r3, [sp, #144]	; 0x90
  405616:	2b01      	cmp	r3, #1
  405618:	f340 8285 	ble.w	405b26 <_dtoa_r+0x9e6>
  40561c:	2300      	movs	r3, #0
  40561e:	930c      	str	r3, [sp, #48]	; 0x30
  405620:	9b0d      	ldr	r3, [sp, #52]	; 0x34
  405622:	2001      	movs	r0, #1
  405624:	2b00      	cmp	r3, #0
  405626:	d1e1      	bne.n	4055ec <_dtoa_r+0x4ac>
  405628:	9a08      	ldr	r2, [sp, #32]
  40562a:	4410      	add	r0, r2
  40562c:	f010 001f 	ands.w	r0, r0, #31
  405630:	f000 80a1 	beq.w	405776 <_dtoa_r+0x636>
  405634:	f1c0 0320 	rsb	r3, r0, #32
  405638:	2b04      	cmp	r3, #4
  40563a:	f340 8486 	ble.w	405f4a <_dtoa_r+0xe0a>
  40563e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  405640:	f1c0 001c 	rsb	r0, r0, #28
  405644:	4403      	add	r3, r0
  405646:	930a      	str	r3, [sp, #40]	; 0x28
  405648:	4613      	mov	r3, r2
  40564a:	4403      	add	r3, r0
  40564c:	4405      	add	r5, r0
  40564e:	9308      	str	r3, [sp, #32]
  405650:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  405652:	2b00      	cmp	r3, #0
  405654:	dd05      	ble.n	405662 <_dtoa_r+0x522>
  405656:	4649      	mov	r1, r9
  405658:	461a      	mov	r2, r3
  40565a:	4620      	mov	r0, r4
  40565c:	f001 fc18 	bl	406e90 <__lshift>
  405660:	4681      	mov	r9, r0
  405662:	9b08      	ldr	r3, [sp, #32]
  405664:	2b00      	cmp	r3, #0
  405666:	dd05      	ble.n	405674 <_dtoa_r+0x534>
  405668:	4641      	mov	r1, r8
  40566a:	461a      	mov	r2, r3
  40566c:	4620      	mov	r0, r4
  40566e:	f001 fc0f 	bl	406e90 <__lshift>
  405672:	4680      	mov	r8, r0
  405674:	9b0e      	ldr	r3, [sp, #56]	; 0x38
  405676:	2b00      	cmp	r3, #0
  405678:	f040 8086 	bne.w	405788 <_dtoa_r+0x648>
  40567c:	9b07      	ldr	r3, [sp, #28]
  40567e:	2b00      	cmp	r3, #0
  405680:	f340 8264 	ble.w	405b4c <_dtoa_r+0xa0c>
  405684:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
  405686:	2b00      	cmp	r3, #0
  405688:	f000 8098 	beq.w	4057bc <_dtoa_r+0x67c>
  40568c:	2d00      	cmp	r5, #0
  40568e:	dd05      	ble.n	40569c <_dtoa_r+0x55c>
  405690:	4631      	mov	r1, r6
  405692:	462a      	mov	r2, r5
  405694:	4620      	mov	r0, r4
  405696:	f001 fbfb 	bl	406e90 <__lshift>
  40569a:	4606      	mov	r6, r0
  40569c:	9b0c      	ldr	r3, [sp, #48]	; 0x30
  40569e:	2b00      	cmp	r3, #0
  4056a0:	f040 8336 	bne.w	405d10 <_dtoa_r+0xbd0>
  4056a4:	9608      	str	r6, [sp, #32]
  4056a6:	9b07      	ldr	r3, [sp, #28]
  4056a8:	9a04      	ldr	r2, [sp, #16]
  4056aa:	3b01      	subs	r3, #1
  4056ac:	18d3      	adds	r3, r2, r3
  4056ae:	930b      	str	r3, [sp, #44]	; 0x2c
  4056b0:	4617      	mov	r7, r2
  4056b2:	f00a 0301 	and.w	r3, sl, #1
  4056b6:	46c2      	mov	sl, r8
  4056b8:	f8dd b020 	ldr.w	fp, [sp, #32]
  4056bc:	930c      	str	r3, [sp, #48]	; 0x30
  4056be:	4651      	mov	r1, sl
  4056c0:	4648      	mov	r0, r9
  4056c2:	f7ff fca7 	bl	405014 <quorem>
  4056c6:	4631      	mov	r1, r6
  4056c8:	4605      	mov	r5, r0
  4056ca:	4648      	mov	r0, r9
  4056cc:	f001 fc30 	bl	406f30 <__mcmp>
  4056d0:	465a      	mov	r2, fp
  4056d2:	9007      	str	r0, [sp, #28]
  4056d4:	4651      	mov	r1, sl
  4056d6:	4620      	mov	r0, r4
  4056d8:	f001 fc46 	bl	406f68 <__mdiff>
  4056dc:	68c2      	ldr	r2, [r0, #12]
  4056de:	4680      	mov	r8, r0
  4056e0:	f105 0330 	add.w	r3, r5, #48	; 0x30
  4056e4:	2a00      	cmp	r2, #0
  4056e6:	f040 8229 	bne.w	405b3c <_dtoa_r+0x9fc>
  4056ea:	4601      	mov	r1, r0
  4056ec:	4648      	mov	r0, r9
  4056ee:	930a      	str	r3, [sp, #40]	; 0x28
  4056f0:	f001 fc1e 	bl	406f30 <__mcmp>
  4056f4:	4641      	mov	r1, r8
  4056f6:	9008      	str	r0, [sp, #32]
  4056f8:	4620      	mov	r0, r4
  4056fa:	f001 fa41 	bl	406b80 <_Bfree>
  4056fe:	9a08      	ldr	r2, [sp, #32]
  405700:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  405702:	b932      	cbnz	r2, 405712 <_dtoa_r+0x5d2>
  405704:	9924      	ldr	r1, [sp, #144]	; 0x90
  405706:	b921      	cbnz	r1, 405712 <_dtoa_r+0x5d2>
  405708:	9a0c      	ldr	r2, [sp, #48]	; 0x30
  40570a:	2a00      	cmp	r2, #0
  40570c:	f000 83ee 	beq.w	405eec <_dtoa_r+0xdac>
  405710:	9a24      	ldr	r2, [sp, #144]	; 0x90
  405712:	9907      	ldr	r1, [sp, #28]
  405714:	2900      	cmp	r1, #0
  405716:	f2c0 829f 	blt.w	405c58 <_dtoa_r+0xb18>
  40571a:	d105      	bne.n	405728 <_dtoa_r+0x5e8>
  40571c:	9924      	ldr	r1, [sp, #144]	; 0x90
  40571e:	b919      	cbnz	r1, 405728 <_dtoa_r+0x5e8>
  405720:	990c      	ldr	r1, [sp, #48]	; 0x30
  405722:	2900      	cmp	r1, #0
  405724:	f000 8298 	beq.w	405c58 <_dtoa_r+0xb18>
  405728:	2a00      	cmp	r2, #0
  40572a:	f300 8305 	bgt.w	405d38 <_dtoa_r+0xbf8>
  40572e:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
  405730:	f107 0801 	add.w	r8, r7, #1
  405734:	4297      	cmp	r7, r2
  405736:	703b      	strb	r3, [r7, #0]
  405738:	4645      	mov	r5, r8
  40573a:	f000 830b 	beq.w	405d54 <_dtoa_r+0xc14>
  40573e:	4649      	mov	r1, r9
  405740:	2300      	movs	r3, #0
  405742:	220a      	movs	r2, #10
  405744:	4620      	mov	r0, r4
  405746:	f001 fa25 	bl	406b94 <__multadd>
  40574a:	455e      	cmp	r6, fp
  40574c:	4681      	mov	r9, r0
  40574e:	4631      	mov	r1, r6
  405750:	f04f 0300 	mov.w	r3, #0
  405754:	f04f 020a 	mov.w	r2, #10
  405758:	4620      	mov	r0, r4
  40575a:	f000 81e9 	beq.w	405b30 <_dtoa_r+0x9f0>
  40575e:	f001 fa19 	bl	406b94 <__multadd>
  405762:	4659      	mov	r1, fp
  405764:	4606      	mov	r6, r0
  405766:	2300      	movs	r3, #0
  405768:	220a      	movs	r2, #10
  40576a:	4620      	mov	r0, r4
  40576c:	f001 fa12 	bl	406b94 <__multadd>
  405770:	4647      	mov	r7, r8
  405772:	4683      	mov	fp, r0
  405774:	e7a3      	b.n	4056be <_dtoa_r+0x57e>
  405776:	201c      	movs	r0, #28
  405778:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  40577a:	4405      	add	r5, r0
  40577c:	4403      	add	r3, r0
  40577e:	930a      	str	r3, [sp, #40]	; 0x28
  405780:	9b08      	ldr	r3, [sp, #32]
  405782:	4403      	add	r3, r0
  405784:	9308      	str	r3, [sp, #32]
  405786:	e763      	b.n	405650 <_dtoa_r+0x510>
  405788:	4641      	mov	r1, r8
  40578a:	4648      	mov	r0, r9
  40578c:	f001 fbd0 	bl	406f30 <__mcmp>
  405790:	2800      	cmp	r0, #0
  405792:	f6bf af73 	bge.w	40567c <_dtoa_r+0x53c>
  405796:	9f02      	ldr	r7, [sp, #8]
  405798:	4649      	mov	r1, r9
  40579a:	2300      	movs	r3, #0
  40579c:	220a      	movs	r2, #10
  40579e:	4620      	mov	r0, r4
  4057a0:	3f01      	subs	r7, #1
  4057a2:	9702      	str	r7, [sp, #8]
  4057a4:	f001 f9f6 	bl	406b94 <__multadd>
  4057a8:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
  4057aa:	4681      	mov	r9, r0
  4057ac:	2b00      	cmp	r3, #0
  4057ae:	f040 83b5 	bne.w	405f1c <_dtoa_r+0xddc>
  4057b2:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
  4057b4:	2b00      	cmp	r3, #0
  4057b6:	f340 83be 	ble.w	405f36 <_dtoa_r+0xdf6>
  4057ba:	9307      	str	r3, [sp, #28]
  4057bc:	f8dd a010 	ldr.w	sl, [sp, #16]
  4057c0:	9f07      	ldr	r7, [sp, #28]
  4057c2:	4655      	mov	r5, sl
  4057c4:	e006      	b.n	4057d4 <_dtoa_r+0x694>
  4057c6:	4649      	mov	r1, r9
  4057c8:	2300      	movs	r3, #0
  4057ca:	220a      	movs	r2, #10
  4057cc:	4620      	mov	r0, r4
  4057ce:	f001 f9e1 	bl	406b94 <__multadd>
  4057d2:	4681      	mov	r9, r0
  4057d4:	4641      	mov	r1, r8
  4057d6:	4648      	mov	r0, r9
  4057d8:	f7ff fc1c 	bl	405014 <quorem>
  4057dc:	3030      	adds	r0, #48	; 0x30
  4057de:	f805 0b01 	strb.w	r0, [r5], #1
  4057e2:	eba5 030a 	sub.w	r3, r5, sl
  4057e6:	42bb      	cmp	r3, r7
  4057e8:	dbed      	blt.n	4057c6 <_dtoa_r+0x686>
  4057ea:	9b04      	ldr	r3, [sp, #16]
  4057ec:	9a07      	ldr	r2, [sp, #28]
  4057ee:	4682      	mov	sl, r0
  4057f0:	2a01      	cmp	r2, #1
  4057f2:	bfac      	ite	ge
  4057f4:	189b      	addge	r3, r3, r2
  4057f6:	3301      	addlt	r3, #1
  4057f8:	f04f 0b00 	mov.w	fp, #0
  4057fc:	461d      	mov	r5, r3
  4057fe:	4649      	mov	r1, r9
  405800:	2201      	movs	r2, #1
  405802:	4620      	mov	r0, r4
  405804:	f001 fb44 	bl	406e90 <__lshift>
  405808:	4641      	mov	r1, r8
  40580a:	4681      	mov	r9, r0
  40580c:	f001 fb90 	bl	406f30 <__mcmp>
  405810:	2800      	cmp	r0, #0
  405812:	f340 823f 	ble.w	405c94 <_dtoa_r+0xb54>
  405816:	f815 2c01 	ldrb.w	r2, [r5, #-1]
  40581a:	1e6b      	subs	r3, r5, #1
  40581c:	9904      	ldr	r1, [sp, #16]
  40581e:	e004      	b.n	40582a <_dtoa_r+0x6ea>
  405820:	428b      	cmp	r3, r1
  405822:	f000 81ae 	beq.w	405b82 <_dtoa_r+0xa42>
  405826:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
  40582a:	2a39      	cmp	r2, #57	; 0x39
  40582c:	f103 0501 	add.w	r5, r3, #1
  405830:	d0f6      	beq.n	405820 <_dtoa_r+0x6e0>
  405832:	3201      	adds	r2, #1
  405834:	701a      	strb	r2, [r3, #0]
  405836:	4641      	mov	r1, r8
  405838:	4620      	mov	r0, r4
  40583a:	f001 f9a1 	bl	406b80 <_Bfree>
  40583e:	2e00      	cmp	r6, #0
  405840:	f43f ae3d 	beq.w	4054be <_dtoa_r+0x37e>
  405844:	f1bb 0f00 	cmp.w	fp, #0
  405848:	d005      	beq.n	405856 <_dtoa_r+0x716>
  40584a:	45b3      	cmp	fp, r6
  40584c:	d003      	beq.n	405856 <_dtoa_r+0x716>
  40584e:	4659      	mov	r1, fp
  405850:	4620      	mov	r0, r4
  405852:	f001 f995 	bl	406b80 <_Bfree>
  405856:	4631      	mov	r1, r6
  405858:	4620      	mov	r0, r4
  40585a:	f001 f991 	bl	406b80 <_Bfree>
  40585e:	e62e      	b.n	4054be <_dtoa_r+0x37e>
  405860:	2300      	movs	r3, #0
  405862:	930b      	str	r3, [sp, #44]	; 0x2c
  405864:	9b02      	ldr	r3, [sp, #8]
  405866:	9a25      	ldr	r2, [sp, #148]	; 0x94
  405868:	4413      	add	r3, r2
  40586a:	930f      	str	r3, [sp, #60]	; 0x3c
  40586c:	3301      	adds	r3, #1
  40586e:	2b01      	cmp	r3, #1
  405870:	461f      	mov	r7, r3
  405872:	461e      	mov	r6, r3
  405874:	bfb8      	it	lt
  405876:	2701      	movlt	r7, #1
  405878:	9307      	str	r3, [sp, #28]
  40587a:	2100      	movs	r1, #0
  40587c:	2f17      	cmp	r7, #23
  40587e:	6461      	str	r1, [r4, #68]	; 0x44
  405880:	d90a      	bls.n	405898 <_dtoa_r+0x758>
  405882:	2201      	movs	r2, #1
  405884:	2304      	movs	r3, #4
  405886:	005b      	lsls	r3, r3, #1
  405888:	f103 0014 	add.w	r0, r3, #20
  40588c:	4287      	cmp	r7, r0
  40588e:	4611      	mov	r1, r2
  405890:	f102 0201 	add.w	r2, r2, #1
  405894:	d2f7      	bcs.n	405886 <_dtoa_r+0x746>
  405896:	6461      	str	r1, [r4, #68]	; 0x44
  405898:	4620      	mov	r0, r4
  40589a:	f001 f94b 	bl	406b34 <_Balloc>
  40589e:	2e0e      	cmp	r6, #14
  4058a0:	9004      	str	r0, [sp, #16]
  4058a2:	6420      	str	r0, [r4, #64]	; 0x40
  4058a4:	f63f ad47 	bhi.w	405336 <_dtoa_r+0x1f6>
  4058a8:	2d00      	cmp	r5, #0
  4058aa:	f43f ad44 	beq.w	405336 <_dtoa_r+0x1f6>
  4058ae:	9902      	ldr	r1, [sp, #8]
  4058b0:	e9cd ab10 	strd	sl, fp, [sp, #64]	; 0x40
  4058b4:	2900      	cmp	r1, #0
  4058b6:	f340 8203 	ble.w	405cc0 <_dtoa_r+0xb80>
  4058ba:	4bb9      	ldr	r3, [pc, #740]	; (405ba0 <_dtoa_r+0xa60>)
  4058bc:	f001 020f 	and.w	r2, r1, #15
  4058c0:	110d      	asrs	r5, r1, #4
  4058c2:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
  4058c6:	06e9      	lsls	r1, r5, #27
  4058c8:	e9d3 6700 	ldrd	r6, r7, [r3]
  4058cc:	f140 81af 	bpl.w	405c2e <_dtoa_r+0xaee>
  4058d0:	4bb4      	ldr	r3, [pc, #720]	; (405ba4 <_dtoa_r+0xa64>)
  4058d2:	4650      	mov	r0, sl
  4058d4:	e9d3 2308 	ldrd	r2, r3, [r3, #32]
  4058d8:	4659      	mov	r1, fp
  4058da:	f002 fb4f 	bl	407f7c <__aeabi_ddiv>
  4058de:	f04f 0a03 	mov.w	sl, #3
  4058e2:	e9cd 0112 	strd	r0, r1, [sp, #72]	; 0x48
  4058e6:	f005 050f 	and.w	r5, r5, #15
  4058ea:	b18d      	cbz	r5, 405910 <_dtoa_r+0x7d0>
  4058ec:	f8df 82b4 	ldr.w	r8, [pc, #692]	; 405ba4 <_dtoa_r+0xa64>
  4058f0:	07ea      	lsls	r2, r5, #31
  4058f2:	d509      	bpl.n	405908 <_dtoa_r+0x7c8>
  4058f4:	e9d8 2300 	ldrd	r2, r3, [r8]
  4058f8:	4630      	mov	r0, r6
  4058fa:	4639      	mov	r1, r7
  4058fc:	f002 fa14 	bl	407d28 <__aeabi_dmul>
  405900:	4606      	mov	r6, r0
  405902:	460f      	mov	r7, r1
  405904:	f10a 0a01 	add.w	sl, sl, #1
  405908:	106d      	asrs	r5, r5, #1
  40590a:	f108 0808 	add.w	r8, r8, #8
  40590e:	d1ef      	bne.n	4058f0 <_dtoa_r+0x7b0>
  405910:	463b      	mov	r3, r7
  405912:	e9dd 0112 	ldrd	r0, r1, [sp, #72]	; 0x48
  405916:	4632      	mov	r2, r6
  405918:	f002 fb30 	bl	407f7c <__aeabi_ddiv>
  40591c:	4607      	mov	r7, r0
  40591e:	4688      	mov	r8, r1
  405920:	9b0e      	ldr	r3, [sp, #56]	; 0x38
  405922:	b143      	cbz	r3, 405936 <_dtoa_r+0x7f6>
  405924:	2200      	movs	r2, #0
  405926:	4ba0      	ldr	r3, [pc, #640]	; (405ba8 <_dtoa_r+0xa68>)
  405928:	4638      	mov	r0, r7
  40592a:	4641      	mov	r1, r8
  40592c:	f002 fc6e 	bl	40820c <__aeabi_dcmplt>
  405930:	2800      	cmp	r0, #0
  405932:	f040 8287 	bne.w	405e44 <_dtoa_r+0xd04>
  405936:	4650      	mov	r0, sl
  405938:	f002 f990 	bl	407c5c <__aeabi_i2d>
  40593c:	463a      	mov	r2, r7
  40593e:	4643      	mov	r3, r8
  405940:	f002 f9f2 	bl	407d28 <__aeabi_dmul>
  405944:	4b99      	ldr	r3, [pc, #612]	; (405bac <_dtoa_r+0xa6c>)
  405946:	2200      	movs	r2, #0
  405948:	f002 f83c 	bl	4079c4 <__adddf3>
  40594c:	9b07      	ldr	r3, [sp, #28]
  40594e:	4605      	mov	r5, r0
  405950:	f1a1 7650 	sub.w	r6, r1, #54525952	; 0x3400000
  405954:	2b00      	cmp	r3, #0
  405956:	f000 813f 	beq.w	405bd8 <_dtoa_r+0xa98>
  40595a:	9b02      	ldr	r3, [sp, #8]
  40595c:	9315      	str	r3, [sp, #84]	; 0x54
  40595e:	9b07      	ldr	r3, [sp, #28]
  405960:	9312      	str	r3, [sp, #72]	; 0x48
  405962:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
  405964:	2b00      	cmp	r3, #0
  405966:	f000 81fb 	beq.w	405d60 <_dtoa_r+0xc20>
  40596a:	9a12      	ldr	r2, [sp, #72]	; 0x48
  40596c:	4b8c      	ldr	r3, [pc, #560]	; (405ba0 <_dtoa_r+0xa60>)
  40596e:	2000      	movs	r0, #0
  405970:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
  405974:	e953 2302 	ldrd	r2, r3, [r3, #-8]
  405978:	498d      	ldr	r1, [pc, #564]	; (405bb0 <_dtoa_r+0xa70>)
  40597a:	f002 faff 	bl	407f7c <__aeabi_ddiv>
  40597e:	462a      	mov	r2, r5
  405980:	4633      	mov	r3, r6
  405982:	f002 f81d 	bl	4079c0 <__aeabi_dsub>
  405986:	4682      	mov	sl, r0
  405988:	468b      	mov	fp, r1
  40598a:	4638      	mov	r0, r7
  40598c:	4641      	mov	r1, r8
  40598e:	f002 fc7b 	bl	408288 <__aeabi_d2iz>
  405992:	4605      	mov	r5, r0
  405994:	f002 f962 	bl	407c5c <__aeabi_i2d>
  405998:	4602      	mov	r2, r0
  40599a:	460b      	mov	r3, r1
  40599c:	4638      	mov	r0, r7
  40599e:	4641      	mov	r1, r8
  4059a0:	f002 f80e 	bl	4079c0 <__aeabi_dsub>
  4059a4:	3530      	adds	r5, #48	; 0x30
  4059a6:	fa5f f885 	uxtb.w	r8, r5
  4059aa:	9d04      	ldr	r5, [sp, #16]
  4059ac:	4606      	mov	r6, r0
  4059ae:	460f      	mov	r7, r1
  4059b0:	f885 8000 	strb.w	r8, [r5]
  4059b4:	4602      	mov	r2, r0
  4059b6:	460b      	mov	r3, r1
  4059b8:	4650      	mov	r0, sl
  4059ba:	4659      	mov	r1, fp
  4059bc:	3501      	adds	r5, #1
  4059be:	f002 fc43 	bl	408248 <__aeabi_dcmpgt>
  4059c2:	2800      	cmp	r0, #0
  4059c4:	d154      	bne.n	405a70 <_dtoa_r+0x930>
  4059c6:	4632      	mov	r2, r6
  4059c8:	463b      	mov	r3, r7
  4059ca:	2000      	movs	r0, #0
  4059cc:	4976      	ldr	r1, [pc, #472]	; (405ba8 <_dtoa_r+0xa68>)
  4059ce:	f001 fff7 	bl	4079c0 <__aeabi_dsub>
  4059d2:	4602      	mov	r2, r0
  4059d4:	460b      	mov	r3, r1
  4059d6:	4650      	mov	r0, sl
  4059d8:	4659      	mov	r1, fp
  4059da:	f002 fc35 	bl	408248 <__aeabi_dcmpgt>
  4059de:	2800      	cmp	r0, #0
  4059e0:	f040 8270 	bne.w	405ec4 <_dtoa_r+0xd84>
  4059e4:	9a12      	ldr	r2, [sp, #72]	; 0x48
  4059e6:	2a01      	cmp	r2, #1
  4059e8:	f000 8112 	beq.w	405c10 <_dtoa_r+0xad0>
  4059ec:	9b12      	ldr	r3, [sp, #72]	; 0x48
  4059ee:	9a04      	ldr	r2, [sp, #16]
  4059f0:	f8cd 9048 	str.w	r9, [sp, #72]	; 0x48
  4059f4:	4413      	add	r3, r2
  4059f6:	4699      	mov	r9, r3
  4059f8:	e00f      	b.n	405a1a <_dtoa_r+0x8da>
  4059fa:	4632      	mov	r2, r6
  4059fc:	463b      	mov	r3, r7
  4059fe:	2000      	movs	r0, #0
  405a00:	4969      	ldr	r1, [pc, #420]	; (405ba8 <_dtoa_r+0xa68>)
  405a02:	f001 ffdd 	bl	4079c0 <__aeabi_dsub>
  405a06:	4652      	mov	r2, sl
  405a08:	465b      	mov	r3, fp
  405a0a:	f002 fbff 	bl	40820c <__aeabi_dcmplt>
  405a0e:	2800      	cmp	r0, #0
  405a10:	f040 8256 	bne.w	405ec0 <_dtoa_r+0xd80>
  405a14:	454d      	cmp	r5, r9
  405a16:	f000 80f9 	beq.w	405c0c <_dtoa_r+0xacc>
  405a1a:	4650      	mov	r0, sl
  405a1c:	4659      	mov	r1, fp
  405a1e:	2200      	movs	r2, #0
  405a20:	4b64      	ldr	r3, [pc, #400]	; (405bb4 <_dtoa_r+0xa74>)
  405a22:	f002 f981 	bl	407d28 <__aeabi_dmul>
  405a26:	2200      	movs	r2, #0
  405a28:	4b62      	ldr	r3, [pc, #392]	; (405bb4 <_dtoa_r+0xa74>)
  405a2a:	4682      	mov	sl, r0
  405a2c:	468b      	mov	fp, r1
  405a2e:	4630      	mov	r0, r6
  405a30:	4639      	mov	r1, r7
  405a32:	f002 f979 	bl	407d28 <__aeabi_dmul>
  405a36:	460f      	mov	r7, r1
  405a38:	4606      	mov	r6, r0
  405a3a:	f002 fc25 	bl	408288 <__aeabi_d2iz>
  405a3e:	4680      	mov	r8, r0
  405a40:	f002 f90c 	bl	407c5c <__aeabi_i2d>
  405a44:	4602      	mov	r2, r0
  405a46:	460b      	mov	r3, r1
  405a48:	4630      	mov	r0, r6
  405a4a:	4639      	mov	r1, r7
  405a4c:	f001 ffb8 	bl	4079c0 <__aeabi_dsub>
  405a50:	f108 0830 	add.w	r8, r8, #48	; 0x30
  405a54:	fa5f f888 	uxtb.w	r8, r8
  405a58:	f805 8b01 	strb.w	r8, [r5], #1
  405a5c:	4652      	mov	r2, sl
  405a5e:	465b      	mov	r3, fp
  405a60:	4606      	mov	r6, r0
  405a62:	460f      	mov	r7, r1
  405a64:	f002 fbd2 	bl	40820c <__aeabi_dcmplt>
  405a68:	2800      	cmp	r0, #0
  405a6a:	d0c6      	beq.n	4059fa <_dtoa_r+0x8ba>
  405a6c:	f8dd 9048 	ldr.w	r9, [sp, #72]	; 0x48
  405a70:	9b15      	ldr	r3, [sp, #84]	; 0x54
  405a72:	9302      	str	r3, [sp, #8]
  405a74:	e523      	b.n	4054be <_dtoa_r+0x37e>
  405a76:	2300      	movs	r3, #0
  405a78:	930b      	str	r3, [sp, #44]	; 0x2c
  405a7a:	9b25      	ldr	r3, [sp, #148]	; 0x94
  405a7c:	2b00      	cmp	r3, #0
  405a7e:	f340 80dd 	ble.w	405c3c <_dtoa_r+0xafc>
  405a82:	461f      	mov	r7, r3
  405a84:	461e      	mov	r6, r3
  405a86:	930f      	str	r3, [sp, #60]	; 0x3c
  405a88:	9307      	str	r3, [sp, #28]
  405a8a:	e6f6      	b.n	40587a <_dtoa_r+0x73a>
  405a8c:	2301      	movs	r3, #1
  405a8e:	930b      	str	r3, [sp, #44]	; 0x2c
  405a90:	e7f3      	b.n	405a7a <_dtoa_r+0x93a>
  405a92:	f1ba 0f00 	cmp.w	sl, #0
  405a96:	f47f ada7 	bne.w	4055e8 <_dtoa_r+0x4a8>
  405a9a:	f3cb 0313 	ubfx	r3, fp, #0, #20
  405a9e:	2b00      	cmp	r3, #0
  405aa0:	f47f adbc 	bne.w	40561c <_dtoa_r+0x4dc>
  405aa4:	f02b 4700 	bic.w	r7, fp, #2147483648	; 0x80000000
  405aa8:	0d3f      	lsrs	r7, r7, #20
  405aaa:	053f      	lsls	r7, r7, #20
  405aac:	2f00      	cmp	r7, #0
  405aae:	f000 820d 	beq.w	405ecc <_dtoa_r+0xd8c>
  405ab2:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  405ab4:	3301      	adds	r3, #1
  405ab6:	930a      	str	r3, [sp, #40]	; 0x28
  405ab8:	9b08      	ldr	r3, [sp, #32]
  405aba:	3301      	adds	r3, #1
  405abc:	9308      	str	r3, [sp, #32]
  405abe:	2301      	movs	r3, #1
  405ac0:	930c      	str	r3, [sp, #48]	; 0x30
  405ac2:	e5ad      	b.n	405620 <_dtoa_r+0x4e0>
  405ac4:	9b07      	ldr	r3, [sp, #28]
  405ac6:	2b00      	cmp	r3, #0
  405ac8:	f73f ac48 	bgt.w	40535c <_dtoa_r+0x21c>
  405acc:	f040 8222 	bne.w	405f14 <_dtoa_r+0xdd4>
  405ad0:	e9dd 0108 	ldrd	r0, r1, [sp, #32]
  405ad4:	2200      	movs	r2, #0
  405ad6:	4b38      	ldr	r3, [pc, #224]	; (405bb8 <_dtoa_r+0xa78>)
  405ad8:	f002 f926 	bl	407d28 <__aeabi_dmul>
  405adc:	4652      	mov	r2, sl
  405ade:	465b      	mov	r3, fp
  405ae0:	f002 fba8 	bl	408234 <__aeabi_dcmpge>
  405ae4:	f8dd 801c 	ldr.w	r8, [sp, #28]
  405ae8:	4646      	mov	r6, r8
  405aea:	2800      	cmp	r0, #0
  405aec:	d041      	beq.n	405b72 <_dtoa_r+0xa32>
  405aee:	9b25      	ldr	r3, [sp, #148]	; 0x94
  405af0:	9d04      	ldr	r5, [sp, #16]
  405af2:	43db      	mvns	r3, r3
  405af4:	9302      	str	r3, [sp, #8]
  405af6:	4641      	mov	r1, r8
  405af8:	4620      	mov	r0, r4
  405afa:	f001 f841 	bl	406b80 <_Bfree>
  405afe:	2e00      	cmp	r6, #0
  405b00:	f43f acdd 	beq.w	4054be <_dtoa_r+0x37e>
  405b04:	e6a7      	b.n	405856 <_dtoa_r+0x716>
  405b06:	9a0c      	ldr	r2, [sp, #48]	; 0x30
  405b08:	4649      	mov	r1, r9
  405b0a:	4620      	mov	r0, r4
  405b0c:	f001 f970 	bl	406df0 <__pow5mult>
  405b10:	4681      	mov	r9, r0
  405b12:	e557      	b.n	4055c4 <_dtoa_r+0x484>
  405b14:	9a14      	ldr	r2, [sp, #80]	; 0x50
  405b16:	2a00      	cmp	r2, #0
  405b18:	f000 8188 	beq.w	405e2c <_dtoa_r+0xcec>
  405b1c:	f203 4333 	addw	r3, r3, #1075	; 0x433
  405b20:	9f0c      	ldr	r7, [sp, #48]	; 0x30
  405b22:	9d0a      	ldr	r5, [sp, #40]	; 0x28
  405b24:	e4f2      	b.n	40550c <_dtoa_r+0x3cc>
  405b26:	f1ba 0f00 	cmp.w	sl, #0
  405b2a:	f47f ad77 	bne.w	40561c <_dtoa_r+0x4dc>
  405b2e:	e7b4      	b.n	405a9a <_dtoa_r+0x95a>
  405b30:	f001 f830 	bl	406b94 <__multadd>
  405b34:	4647      	mov	r7, r8
  405b36:	4606      	mov	r6, r0
  405b38:	4683      	mov	fp, r0
  405b3a:	e5c0      	b.n	4056be <_dtoa_r+0x57e>
  405b3c:	4601      	mov	r1, r0
  405b3e:	4620      	mov	r0, r4
  405b40:	9308      	str	r3, [sp, #32]
  405b42:	f001 f81d 	bl	406b80 <_Bfree>
  405b46:	2201      	movs	r2, #1
  405b48:	9b08      	ldr	r3, [sp, #32]
  405b4a:	e5e2      	b.n	405712 <_dtoa_r+0x5d2>
  405b4c:	9b24      	ldr	r3, [sp, #144]	; 0x90
  405b4e:	2b02      	cmp	r3, #2
  405b50:	f77f ad98 	ble.w	405684 <_dtoa_r+0x544>
  405b54:	9b07      	ldr	r3, [sp, #28]
  405b56:	2b00      	cmp	r3, #0
  405b58:	d1c9      	bne.n	405aee <_dtoa_r+0x9ae>
  405b5a:	4641      	mov	r1, r8
  405b5c:	2205      	movs	r2, #5
  405b5e:	4620      	mov	r0, r4
  405b60:	f001 f818 	bl	406b94 <__multadd>
  405b64:	4601      	mov	r1, r0
  405b66:	4680      	mov	r8, r0
  405b68:	4648      	mov	r0, r9
  405b6a:	f001 f9e1 	bl	406f30 <__mcmp>
  405b6e:	2800      	cmp	r0, #0
  405b70:	ddbd      	ble.n	405aee <_dtoa_r+0x9ae>
  405b72:	2331      	movs	r3, #49	; 0x31
  405b74:	9a02      	ldr	r2, [sp, #8]
  405b76:	9904      	ldr	r1, [sp, #16]
  405b78:	3201      	adds	r2, #1
  405b7a:	9202      	str	r2, [sp, #8]
  405b7c:	700b      	strb	r3, [r1, #0]
  405b7e:	1c4d      	adds	r5, r1, #1
  405b80:	e7b9      	b.n	405af6 <_dtoa_r+0x9b6>
  405b82:	2331      	movs	r3, #49	; 0x31
  405b84:	9a02      	ldr	r2, [sp, #8]
  405b86:	3201      	adds	r2, #1
  405b88:	9202      	str	r2, [sp, #8]
  405b8a:	9a04      	ldr	r2, [sp, #16]
  405b8c:	7013      	strb	r3, [r2, #0]
  405b8e:	e652      	b.n	405836 <_dtoa_r+0x6f6>
  405b90:	2301      	movs	r3, #1
  405b92:	930b      	str	r3, [sp, #44]	; 0x2c
  405b94:	e666      	b.n	405864 <_dtoa_r+0x724>
  405b96:	f8dd 9028 	ldr.w	r9, [sp, #40]	; 0x28
  405b9a:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
  405b9c:	e48f      	b.n	4054be <_dtoa_r+0x37e>
  405b9e:	bf00      	nop
  405ba0:	00408fa8 	.word	0x00408fa8
  405ba4:	00408f80 	.word	0x00408f80
  405ba8:	3ff00000 	.word	0x3ff00000
  405bac:	401c0000 	.word	0x401c0000
  405bb0:	3fe00000 	.word	0x3fe00000
  405bb4:	40240000 	.word	0x40240000
  405bb8:	40140000 	.word	0x40140000
  405bbc:	4650      	mov	r0, sl
  405bbe:	f002 f84d 	bl	407c5c <__aeabi_i2d>
  405bc2:	463a      	mov	r2, r7
  405bc4:	4643      	mov	r3, r8
  405bc6:	f002 f8af 	bl	407d28 <__aeabi_dmul>
  405bca:	2200      	movs	r2, #0
  405bcc:	4bc1      	ldr	r3, [pc, #772]	; (405ed4 <_dtoa_r+0xd94>)
  405bce:	f001 fef9 	bl	4079c4 <__adddf3>
  405bd2:	4605      	mov	r5, r0
  405bd4:	f1a1 7650 	sub.w	r6, r1, #54525952	; 0x3400000
  405bd8:	4641      	mov	r1, r8
  405bda:	2200      	movs	r2, #0
  405bdc:	4bbe      	ldr	r3, [pc, #760]	; (405ed8 <_dtoa_r+0xd98>)
  405bde:	4638      	mov	r0, r7
  405be0:	f001 feee 	bl	4079c0 <__aeabi_dsub>
  405be4:	462a      	mov	r2, r5
  405be6:	4633      	mov	r3, r6
  405be8:	4682      	mov	sl, r0
  405bea:	468b      	mov	fp, r1
  405bec:	f002 fb2c 	bl	408248 <__aeabi_dcmpgt>
  405bf0:	4680      	mov	r8, r0
  405bf2:	2800      	cmp	r0, #0
  405bf4:	f040 8110 	bne.w	405e18 <_dtoa_r+0xcd8>
  405bf8:	462a      	mov	r2, r5
  405bfa:	f106 4300 	add.w	r3, r6, #2147483648	; 0x80000000
  405bfe:	4650      	mov	r0, sl
  405c00:	4659      	mov	r1, fp
  405c02:	f002 fb03 	bl	40820c <__aeabi_dcmplt>
  405c06:	b118      	cbz	r0, 405c10 <_dtoa_r+0xad0>
  405c08:	4646      	mov	r6, r8
  405c0a:	e770      	b.n	405aee <_dtoa_r+0x9ae>
  405c0c:	f8dd 9048 	ldr.w	r9, [sp, #72]	; 0x48
  405c10:	e9dd ab10 	ldrd	sl, fp, [sp, #64]	; 0x40
  405c14:	f7ff bb8f 	b.w	405336 <_dtoa_r+0x1f6>
  405c18:	9804      	ldr	r0, [sp, #16]
  405c1a:	f7ff bac0 	b.w	40519e <_dtoa_r+0x5e>
  405c1e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
  405c20:	9a0d      	ldr	r2, [sp, #52]	; 0x34
  405c22:	1afb      	subs	r3, r7, r3
  405c24:	441a      	add	r2, r3
  405c26:	970c      	str	r7, [sp, #48]	; 0x30
  405c28:	920d      	str	r2, [sp, #52]	; 0x34
  405c2a:	2700      	movs	r7, #0
  405c2c:	e468      	b.n	405500 <_dtoa_r+0x3c0>
  405c2e:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	; 0x40
  405c32:	f04f 0a02 	mov.w	sl, #2
  405c36:	e9cd 2312 	strd	r2, r3, [sp, #72]	; 0x48
  405c3a:	e656      	b.n	4058ea <_dtoa_r+0x7aa>
  405c3c:	2100      	movs	r1, #0
  405c3e:	2301      	movs	r3, #1
  405c40:	4620      	mov	r0, r4
  405c42:	6461      	str	r1, [r4, #68]	; 0x44
  405c44:	9325      	str	r3, [sp, #148]	; 0x94
  405c46:	f000 ff75 	bl	406b34 <_Balloc>
  405c4a:	9b25      	ldr	r3, [sp, #148]	; 0x94
  405c4c:	9004      	str	r0, [sp, #16]
  405c4e:	9307      	str	r3, [sp, #28]
  405c50:	9b25      	ldr	r3, [sp, #148]	; 0x94
  405c52:	6420      	str	r0, [r4, #64]	; 0x40
  405c54:	930f      	str	r3, [sp, #60]	; 0x3c
  405c56:	e627      	b.n	4058a8 <_dtoa_r+0x768>
  405c58:	2a00      	cmp	r2, #0
  405c5a:	46d0      	mov	r8, sl
  405c5c:	f8cd b020 	str.w	fp, [sp, #32]
  405c60:	469a      	mov	sl, r3
  405c62:	dd11      	ble.n	405c88 <_dtoa_r+0xb48>
  405c64:	4649      	mov	r1, r9
  405c66:	2201      	movs	r2, #1
  405c68:	4620      	mov	r0, r4
  405c6a:	f001 f911 	bl	406e90 <__lshift>
  405c6e:	4641      	mov	r1, r8
  405c70:	4681      	mov	r9, r0
  405c72:	f001 f95d 	bl	406f30 <__mcmp>
  405c76:	2800      	cmp	r0, #0
  405c78:	f340 8145 	ble.w	405f06 <_dtoa_r+0xdc6>
  405c7c:	f1ba 0f39 	cmp.w	sl, #57	; 0x39
  405c80:	f000 8105 	beq.w	405e8e <_dtoa_r+0xd4e>
  405c84:	f105 0a31 	add.w	sl, r5, #49	; 0x31
  405c88:	46b3      	mov	fp, r6
  405c8a:	f887 a000 	strb.w	sl, [r7]
  405c8e:	1c7d      	adds	r5, r7, #1
  405c90:	9e08      	ldr	r6, [sp, #32]
  405c92:	e5d0      	b.n	405836 <_dtoa_r+0x6f6>
  405c94:	d104      	bne.n	405ca0 <_dtoa_r+0xb60>
  405c96:	f01a 0f01 	tst.w	sl, #1
  405c9a:	d001      	beq.n	405ca0 <_dtoa_r+0xb60>
  405c9c:	e5bb      	b.n	405816 <_dtoa_r+0x6d6>
  405c9e:	4615      	mov	r5, r2
  405ca0:	f815 3c01 	ldrb.w	r3, [r5, #-1]
  405ca4:	1e6a      	subs	r2, r5, #1
  405ca6:	2b30      	cmp	r3, #48	; 0x30
  405ca8:	d0f9      	beq.n	405c9e <_dtoa_r+0xb5e>
  405caa:	e5c4      	b.n	405836 <_dtoa_r+0x6f6>
  405cac:	2230      	movs	r2, #48	; 0x30
  405cae:	9904      	ldr	r1, [sp, #16]
  405cb0:	700a      	strb	r2, [r1, #0]
  405cb2:	9a02      	ldr	r2, [sp, #8]
  405cb4:	f815 8c01 	ldrb.w	r8, [r5, #-1]
  405cb8:	3201      	adds	r2, #1
  405cba:	9202      	str	r2, [sp, #8]
  405cbc:	f7ff bbfb 	b.w	4054b6 <_dtoa_r+0x376>
  405cc0:	f000 80bb 	beq.w	405e3a <_dtoa_r+0xcfa>
  405cc4:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	; 0x40
  405cc8:	9b02      	ldr	r3, [sp, #8]
  405cca:	f04f 0a02 	mov.w	sl, #2
  405cce:	425d      	negs	r5, r3
  405cd0:	4b82      	ldr	r3, [pc, #520]	; (405edc <_dtoa_r+0xd9c>)
  405cd2:	f005 020f 	and.w	r2, r5, #15
  405cd6:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
  405cda:	e9d3 2300 	ldrd	r2, r3, [r3]
  405cde:	f002 f823 	bl	407d28 <__aeabi_dmul>
  405ce2:	112d      	asrs	r5, r5, #4
  405ce4:	4607      	mov	r7, r0
  405ce6:	4688      	mov	r8, r1
  405ce8:	f43f ae1a 	beq.w	405920 <_dtoa_r+0x7e0>
  405cec:	4e7c      	ldr	r6, [pc, #496]	; (405ee0 <_dtoa_r+0xda0>)
  405cee:	07eb      	lsls	r3, r5, #31
  405cf0:	d509      	bpl.n	405d06 <_dtoa_r+0xbc6>
  405cf2:	e9d6 2300 	ldrd	r2, r3, [r6]
  405cf6:	4638      	mov	r0, r7
  405cf8:	4641      	mov	r1, r8
  405cfa:	f002 f815 	bl	407d28 <__aeabi_dmul>
  405cfe:	4607      	mov	r7, r0
  405d00:	4688      	mov	r8, r1
  405d02:	f10a 0a01 	add.w	sl, sl, #1
  405d06:	106d      	asrs	r5, r5, #1
  405d08:	f106 0608 	add.w	r6, r6, #8
  405d0c:	d1ef      	bne.n	405cee <_dtoa_r+0xbae>
  405d0e:	e607      	b.n	405920 <_dtoa_r+0x7e0>
  405d10:	6871      	ldr	r1, [r6, #4]
  405d12:	4620      	mov	r0, r4
  405d14:	f000 ff0e 	bl	406b34 <_Balloc>
  405d18:	4605      	mov	r5, r0
  405d1a:	6933      	ldr	r3, [r6, #16]
  405d1c:	f106 010c 	add.w	r1, r6, #12
  405d20:	3302      	adds	r3, #2
  405d22:	009a      	lsls	r2, r3, #2
  405d24:	300c      	adds	r0, #12
  405d26:	f7fc fd89 	bl	40283c <memcpy>
  405d2a:	4629      	mov	r1, r5
  405d2c:	2201      	movs	r2, #1
  405d2e:	4620      	mov	r0, r4
  405d30:	f001 f8ae 	bl	406e90 <__lshift>
  405d34:	9008      	str	r0, [sp, #32]
  405d36:	e4b6      	b.n	4056a6 <_dtoa_r+0x566>
  405d38:	2b39      	cmp	r3, #57	; 0x39
  405d3a:	f8cd b020 	str.w	fp, [sp, #32]
  405d3e:	46d0      	mov	r8, sl
  405d40:	f000 80a5 	beq.w	405e8e <_dtoa_r+0xd4e>
  405d44:	f103 0a01 	add.w	sl, r3, #1
  405d48:	46b3      	mov	fp, r6
  405d4a:	f887 a000 	strb.w	sl, [r7]
  405d4e:	1c7d      	adds	r5, r7, #1
  405d50:	9e08      	ldr	r6, [sp, #32]
  405d52:	e570      	b.n	405836 <_dtoa_r+0x6f6>
  405d54:	465a      	mov	r2, fp
  405d56:	46d0      	mov	r8, sl
  405d58:	46b3      	mov	fp, r6
  405d5a:	469a      	mov	sl, r3
  405d5c:	4616      	mov	r6, r2
  405d5e:	e54e      	b.n	4057fe <_dtoa_r+0x6be>
  405d60:	9812      	ldr	r0, [sp, #72]	; 0x48
  405d62:	495e      	ldr	r1, [pc, #376]	; (405edc <_dtoa_r+0xd9c>)
  405d64:	462a      	mov	r2, r5
  405d66:	eb01 01c0 	add.w	r1, r1, r0, lsl #3
  405d6a:	4633      	mov	r3, r6
  405d6c:	e951 0102 	ldrd	r0, r1, [r1, #-8]
  405d70:	f001 ffda 	bl	407d28 <__aeabi_dmul>
  405d74:	e9cd 0116 	strd	r0, r1, [sp, #88]	; 0x58
  405d78:	4638      	mov	r0, r7
  405d7a:	4641      	mov	r1, r8
  405d7c:	f002 fa84 	bl	408288 <__aeabi_d2iz>
  405d80:	4605      	mov	r5, r0
  405d82:	f001 ff6b 	bl	407c5c <__aeabi_i2d>
  405d86:	4602      	mov	r2, r0
  405d88:	460b      	mov	r3, r1
  405d8a:	4638      	mov	r0, r7
  405d8c:	4641      	mov	r1, r8
  405d8e:	f001 fe17 	bl	4079c0 <__aeabi_dsub>
  405d92:	4606      	mov	r6, r0
  405d94:	9812      	ldr	r0, [sp, #72]	; 0x48
  405d96:	9a04      	ldr	r2, [sp, #16]
  405d98:	3530      	adds	r5, #48	; 0x30
  405d9a:	2801      	cmp	r0, #1
  405d9c:	7015      	strb	r5, [r2, #0]
  405d9e:	460f      	mov	r7, r1
  405da0:	f102 0501 	add.w	r5, r2, #1
  405da4:	d026      	beq.n	405df4 <_dtoa_r+0xcb4>
  405da6:	9b12      	ldr	r3, [sp, #72]	; 0x48
  405da8:	9a04      	ldr	r2, [sp, #16]
  405daa:	f8cd 9048 	str.w	r9, [sp, #72]	; 0x48
  405dae:	4413      	add	r3, r2
  405db0:	f04f 0a00 	mov.w	sl, #0
  405db4:	4699      	mov	r9, r3
  405db6:	f8df b130 	ldr.w	fp, [pc, #304]	; 405ee8 <_dtoa_r+0xda8>
  405dba:	4652      	mov	r2, sl
  405dbc:	465b      	mov	r3, fp
  405dbe:	4630      	mov	r0, r6
  405dc0:	4639      	mov	r1, r7
  405dc2:	f001 ffb1 	bl	407d28 <__aeabi_dmul>
  405dc6:	460f      	mov	r7, r1
  405dc8:	4606      	mov	r6, r0
  405dca:	f002 fa5d 	bl	408288 <__aeabi_d2iz>
  405dce:	4680      	mov	r8, r0
  405dd0:	f001 ff44 	bl	407c5c <__aeabi_i2d>
  405dd4:	4602      	mov	r2, r0
  405dd6:	460b      	mov	r3, r1
  405dd8:	4630      	mov	r0, r6
  405dda:	4639      	mov	r1, r7
  405ddc:	f001 fdf0 	bl	4079c0 <__aeabi_dsub>
  405de0:	f108 0830 	add.w	r8, r8, #48	; 0x30
  405de4:	f805 8b01 	strb.w	r8, [r5], #1
  405de8:	454d      	cmp	r5, r9
  405dea:	4606      	mov	r6, r0
  405dec:	460f      	mov	r7, r1
  405dee:	d1e4      	bne.n	405dba <_dtoa_r+0xc7a>
  405df0:	f8dd 9048 	ldr.w	r9, [sp, #72]	; 0x48
  405df4:	2200      	movs	r2, #0
  405df6:	e9dd 0116 	ldrd	r0, r1, [sp, #88]	; 0x58
  405dfa:	4b3a      	ldr	r3, [pc, #232]	; (405ee4 <_dtoa_r+0xda4>)
  405dfc:	f001 fde2 	bl	4079c4 <__adddf3>
  405e00:	4632      	mov	r2, r6
  405e02:	463b      	mov	r3, r7
  405e04:	f002 fa02 	bl	40820c <__aeabi_dcmplt>
  405e08:	2800      	cmp	r0, #0
  405e0a:	d046      	beq.n	405e9a <_dtoa_r+0xd5a>
  405e0c:	9b15      	ldr	r3, [sp, #84]	; 0x54
  405e0e:	9302      	str	r3, [sp, #8]
  405e10:	f815 8c01 	ldrb.w	r8, [r5, #-1]
  405e14:	f7ff bb42 	b.w	40549c <_dtoa_r+0x35c>
  405e18:	f04f 0800 	mov.w	r8, #0
  405e1c:	4646      	mov	r6, r8
  405e1e:	e6a8      	b.n	405b72 <_dtoa_r+0xa32>
  405e20:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  405e22:	9a07      	ldr	r2, [sp, #28]
  405e24:	1a9d      	subs	r5, r3, r2
  405e26:	2300      	movs	r3, #0
  405e28:	f7ff bb70 	b.w	40550c <_dtoa_r+0x3cc>
  405e2c:	9b18      	ldr	r3, [sp, #96]	; 0x60
  405e2e:	9f0c      	ldr	r7, [sp, #48]	; 0x30
  405e30:	f1c3 0336 	rsb	r3, r3, #54	; 0x36
  405e34:	9d0a      	ldr	r5, [sp, #40]	; 0x28
  405e36:	f7ff bb69 	b.w	40550c <_dtoa_r+0x3cc>
  405e3a:	e9dd 7810 	ldrd	r7, r8, [sp, #64]	; 0x40
  405e3e:	f04f 0a02 	mov.w	sl, #2
  405e42:	e56d      	b.n	405920 <_dtoa_r+0x7e0>
  405e44:	9b07      	ldr	r3, [sp, #28]
  405e46:	2b00      	cmp	r3, #0
  405e48:	f43f aeb8 	beq.w	405bbc <_dtoa_r+0xa7c>
  405e4c:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
  405e4e:	2b00      	cmp	r3, #0
  405e50:	f77f aede 	ble.w	405c10 <_dtoa_r+0xad0>
  405e54:	2200      	movs	r2, #0
  405e56:	4b24      	ldr	r3, [pc, #144]	; (405ee8 <_dtoa_r+0xda8>)
  405e58:	4638      	mov	r0, r7
  405e5a:	4641      	mov	r1, r8
  405e5c:	f001 ff64 	bl	407d28 <__aeabi_dmul>
  405e60:	4607      	mov	r7, r0
  405e62:	4688      	mov	r8, r1
  405e64:	f10a 0001 	add.w	r0, sl, #1
  405e68:	f001 fef8 	bl	407c5c <__aeabi_i2d>
  405e6c:	463a      	mov	r2, r7
  405e6e:	4643      	mov	r3, r8
  405e70:	f001 ff5a 	bl	407d28 <__aeabi_dmul>
  405e74:	2200      	movs	r2, #0
  405e76:	4b17      	ldr	r3, [pc, #92]	; (405ed4 <_dtoa_r+0xd94>)
  405e78:	f001 fda4 	bl	4079c4 <__adddf3>
  405e7c:	9a02      	ldr	r2, [sp, #8]
  405e7e:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
  405e80:	3a01      	subs	r2, #1
  405e82:	4605      	mov	r5, r0
  405e84:	9215      	str	r2, [sp, #84]	; 0x54
  405e86:	f1a1 7650 	sub.w	r6, r1, #54525952	; 0x3400000
  405e8a:	9312      	str	r3, [sp, #72]	; 0x48
  405e8c:	e569      	b.n	405962 <_dtoa_r+0x822>
  405e8e:	2239      	movs	r2, #57	; 0x39
  405e90:	46b3      	mov	fp, r6
  405e92:	703a      	strb	r2, [r7, #0]
  405e94:	9e08      	ldr	r6, [sp, #32]
  405e96:	1c7d      	adds	r5, r7, #1
  405e98:	e4bf      	b.n	40581a <_dtoa_r+0x6da>
  405e9a:	e9dd 2316 	ldrd	r2, r3, [sp, #88]	; 0x58
  405e9e:	2000      	movs	r0, #0
  405ea0:	4910      	ldr	r1, [pc, #64]	; (405ee4 <_dtoa_r+0xda4>)
  405ea2:	f001 fd8d 	bl	4079c0 <__aeabi_dsub>
  405ea6:	4632      	mov	r2, r6
  405ea8:	463b      	mov	r3, r7
  405eaa:	f002 f9cd 	bl	408248 <__aeabi_dcmpgt>
  405eae:	b908      	cbnz	r0, 405eb4 <_dtoa_r+0xd74>
  405eb0:	e6ae      	b.n	405c10 <_dtoa_r+0xad0>
  405eb2:	4615      	mov	r5, r2
  405eb4:	f815 3c01 	ldrb.w	r3, [r5, #-1]
  405eb8:	1e6a      	subs	r2, r5, #1
  405eba:	2b30      	cmp	r3, #48	; 0x30
  405ebc:	d0f9      	beq.n	405eb2 <_dtoa_r+0xd72>
  405ebe:	e5d7      	b.n	405a70 <_dtoa_r+0x930>
  405ec0:	f8dd 9048 	ldr.w	r9, [sp, #72]	; 0x48
  405ec4:	9b15      	ldr	r3, [sp, #84]	; 0x54
  405ec6:	9302      	str	r3, [sp, #8]
  405ec8:	f7ff bae8 	b.w	40549c <_dtoa_r+0x35c>
  405ecc:	970c      	str	r7, [sp, #48]	; 0x30
  405ece:	f7ff bba7 	b.w	405620 <_dtoa_r+0x4e0>
  405ed2:	bf00      	nop
  405ed4:	401c0000 	.word	0x401c0000
  405ed8:	40140000 	.word	0x40140000
  405edc:	00408fa8 	.word	0x00408fa8
  405ee0:	00408f80 	.word	0x00408f80
  405ee4:	3fe00000 	.word	0x3fe00000
  405ee8:	40240000 	.word	0x40240000
  405eec:	2b39      	cmp	r3, #57	; 0x39
  405eee:	f8cd b020 	str.w	fp, [sp, #32]
  405ef2:	46d0      	mov	r8, sl
  405ef4:	f8dd b01c 	ldr.w	fp, [sp, #28]
  405ef8:	469a      	mov	sl, r3
  405efa:	d0c8      	beq.n	405e8e <_dtoa_r+0xd4e>
  405efc:	f1bb 0f00 	cmp.w	fp, #0
  405f00:	f73f aec0 	bgt.w	405c84 <_dtoa_r+0xb44>
  405f04:	e6c0      	b.n	405c88 <_dtoa_r+0xb48>
  405f06:	f47f aebf 	bne.w	405c88 <_dtoa_r+0xb48>
  405f0a:	f01a 0f01 	tst.w	sl, #1
  405f0e:	f43f aebb 	beq.w	405c88 <_dtoa_r+0xb48>
  405f12:	e6b3      	b.n	405c7c <_dtoa_r+0xb3c>
  405f14:	f04f 0800 	mov.w	r8, #0
  405f18:	4646      	mov	r6, r8
  405f1a:	e5e8      	b.n	405aee <_dtoa_r+0x9ae>
  405f1c:	4631      	mov	r1, r6
  405f1e:	2300      	movs	r3, #0
  405f20:	220a      	movs	r2, #10
  405f22:	4620      	mov	r0, r4
  405f24:	f000 fe36 	bl	406b94 <__multadd>
  405f28:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
  405f2a:	4606      	mov	r6, r0
  405f2c:	2b00      	cmp	r3, #0
  405f2e:	dd07      	ble.n	405f40 <_dtoa_r+0xe00>
  405f30:	9307      	str	r3, [sp, #28]
  405f32:	f7ff bbab 	b.w	40568c <_dtoa_r+0x54c>
  405f36:	9b24      	ldr	r3, [sp, #144]	; 0x90
  405f38:	2b02      	cmp	r3, #2
  405f3a:	dc1f      	bgt.n	405f7c <_dtoa_r+0xe3c>
  405f3c:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
  405f3e:	e43c      	b.n	4057ba <_dtoa_r+0x67a>
  405f40:	9b24      	ldr	r3, [sp, #144]	; 0x90
  405f42:	2b02      	cmp	r3, #2
  405f44:	dc1a      	bgt.n	405f7c <_dtoa_r+0xe3c>
  405f46:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
  405f48:	e7f2      	b.n	405f30 <_dtoa_r+0xdf0>
  405f4a:	f43f ab81 	beq.w	405650 <_dtoa_r+0x510>
  405f4e:	f1c0 003c 	rsb	r0, r0, #60	; 0x3c
  405f52:	e411      	b.n	405778 <_dtoa_r+0x638>
  405f54:	2500      	movs	r5, #0
  405f56:	4620      	mov	r0, r4
  405f58:	6465      	str	r5, [r4, #68]	; 0x44
  405f5a:	4629      	mov	r1, r5
  405f5c:	f000 fdea 	bl	406b34 <_Balloc>
  405f60:	f04f 33ff 	mov.w	r3, #4294967295
  405f64:	9307      	str	r3, [sp, #28]
  405f66:	930f      	str	r3, [sp, #60]	; 0x3c
  405f68:	2301      	movs	r3, #1
  405f6a:	9004      	str	r0, [sp, #16]
  405f6c:	9525      	str	r5, [sp, #148]	; 0x94
  405f6e:	6420      	str	r0, [r4, #64]	; 0x40
  405f70:	930b      	str	r3, [sp, #44]	; 0x2c
  405f72:	f7ff b9e0 	b.w	405336 <_dtoa_r+0x1f6>
  405f76:	2501      	movs	r5, #1
  405f78:	f7ff b9a8 	b.w	4052cc <_dtoa_r+0x18c>
  405f7c:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
  405f7e:	9307      	str	r3, [sp, #28]
  405f80:	e5e8      	b.n	405b54 <_dtoa_r+0xa14>
  405f82:	bf00      	nop

00405f84 <__sflush_r>:
  405f84:	f9b1 300c 	ldrsh.w	r3, [r1, #12]
  405f88:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  405f8c:	b29a      	uxth	r2, r3
  405f8e:	460d      	mov	r5, r1
  405f90:	0711      	lsls	r1, r2, #28
  405f92:	4680      	mov	r8, r0
  405f94:	d43a      	bmi.n	40600c <__sflush_r+0x88>
  405f96:	686a      	ldr	r2, [r5, #4]
  405f98:	f443 6300 	orr.w	r3, r3, #2048	; 0x800
  405f9c:	2a00      	cmp	r2, #0
  405f9e:	81ab      	strh	r3, [r5, #12]
  405fa0:	dd70      	ble.n	406084 <__sflush_r+0x100>
  405fa2:	6aac      	ldr	r4, [r5, #40]	; 0x28
  405fa4:	2c00      	cmp	r4, #0
  405fa6:	d04a      	beq.n	40603e <__sflush_r+0xba>
  405fa8:	2200      	movs	r2, #0
  405faa:	b29b      	uxth	r3, r3
  405fac:	f8d8 6000 	ldr.w	r6, [r8]
  405fb0:	f8c8 2000 	str.w	r2, [r8]
  405fb4:	f413 5280 	ands.w	r2, r3, #4096	; 0x1000
  405fb8:	d068      	beq.n	40608c <__sflush_r+0x108>
  405fba:	6d2a      	ldr	r2, [r5, #80]	; 0x50
  405fbc:	075f      	lsls	r7, r3, #29
  405fbe:	d505      	bpl.n	405fcc <__sflush_r+0x48>
  405fc0:	6869      	ldr	r1, [r5, #4]
  405fc2:	6b2b      	ldr	r3, [r5, #48]	; 0x30
  405fc4:	1a52      	subs	r2, r2, r1
  405fc6:	b10b      	cbz	r3, 405fcc <__sflush_r+0x48>
  405fc8:	6beb      	ldr	r3, [r5, #60]	; 0x3c
  405fca:	1ad2      	subs	r2, r2, r3
  405fcc:	2300      	movs	r3, #0
  405fce:	69e9      	ldr	r1, [r5, #28]
  405fd0:	4640      	mov	r0, r8
  405fd2:	47a0      	blx	r4
  405fd4:	1c44      	adds	r4, r0, #1
  405fd6:	d03d      	beq.n	406054 <__sflush_r+0xd0>
  405fd8:	2100      	movs	r1, #0
  405fda:	f9b5 300c 	ldrsh.w	r3, [r5, #12]
  405fde:	692a      	ldr	r2, [r5, #16]
  405fe0:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
  405fe4:	81ab      	strh	r3, [r5, #12]
  405fe6:	04db      	lsls	r3, r3, #19
  405fe8:	6069      	str	r1, [r5, #4]
  405fea:	602a      	str	r2, [r5, #0]
  405fec:	d448      	bmi.n	406080 <__sflush_r+0xfc>
  405fee:	6b29      	ldr	r1, [r5, #48]	; 0x30
  405ff0:	f8c8 6000 	str.w	r6, [r8]
  405ff4:	b319      	cbz	r1, 40603e <__sflush_r+0xba>
  405ff6:	f105 0340 	add.w	r3, r5, #64	; 0x40
  405ffa:	4299      	cmp	r1, r3
  405ffc:	d002      	beq.n	406004 <__sflush_r+0x80>
  405ffe:	4640      	mov	r0, r8
  406000:	f000 f9c2 	bl	406388 <_free_r>
  406004:	2000      	movs	r0, #0
  406006:	6328      	str	r0, [r5, #48]	; 0x30
  406008:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  40600c:	692e      	ldr	r6, [r5, #16]
  40600e:	b1b6      	cbz	r6, 40603e <__sflush_r+0xba>
  406010:	0791      	lsls	r1, r2, #30
  406012:	bf18      	it	ne
  406014:	2300      	movne	r3, #0
  406016:	682c      	ldr	r4, [r5, #0]
  406018:	bf08      	it	eq
  40601a:	696b      	ldreq	r3, [r5, #20]
  40601c:	602e      	str	r6, [r5, #0]
  40601e:	1ba4      	subs	r4, r4, r6
  406020:	60ab      	str	r3, [r5, #8]
  406022:	e00a      	b.n	40603a <__sflush_r+0xb6>
  406024:	4623      	mov	r3, r4
  406026:	4632      	mov	r2, r6
  406028:	6a6f      	ldr	r7, [r5, #36]	; 0x24
  40602a:	69e9      	ldr	r1, [r5, #28]
  40602c:	4640      	mov	r0, r8
  40602e:	47b8      	blx	r7
  406030:	2800      	cmp	r0, #0
  406032:	eba4 0400 	sub.w	r4, r4, r0
  406036:	4406      	add	r6, r0
  406038:	dd04      	ble.n	406044 <__sflush_r+0xc0>
  40603a:	2c00      	cmp	r4, #0
  40603c:	dcf2      	bgt.n	406024 <__sflush_r+0xa0>
  40603e:	2000      	movs	r0, #0
  406040:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  406044:	89ab      	ldrh	r3, [r5, #12]
  406046:	f04f 30ff 	mov.w	r0, #4294967295
  40604a:	f043 0340 	orr.w	r3, r3, #64	; 0x40
  40604e:	81ab      	strh	r3, [r5, #12]
  406050:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  406054:	f8d8 4000 	ldr.w	r4, [r8]
  406058:	2c1d      	cmp	r4, #29
  40605a:	d8f3      	bhi.n	406044 <__sflush_r+0xc0>
  40605c:	4b16      	ldr	r3, [pc, #88]	; (4060b8 <__sflush_r+0x134>)
  40605e:	40e3      	lsrs	r3, r4
  406060:	43db      	mvns	r3, r3
  406062:	f013 0301 	ands.w	r3, r3, #1
  406066:	d1ed      	bne.n	406044 <__sflush_r+0xc0>
  406068:	f9b5 200c 	ldrsh.w	r2, [r5, #12]
  40606c:	6929      	ldr	r1, [r5, #16]
  40606e:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
  406072:	81aa      	strh	r2, [r5, #12]
  406074:	04d2      	lsls	r2, r2, #19
  406076:	606b      	str	r3, [r5, #4]
  406078:	6029      	str	r1, [r5, #0]
  40607a:	d5b8      	bpl.n	405fee <__sflush_r+0x6a>
  40607c:	2c00      	cmp	r4, #0
  40607e:	d1b6      	bne.n	405fee <__sflush_r+0x6a>
  406080:	6528      	str	r0, [r5, #80]	; 0x50
  406082:	e7b4      	b.n	405fee <__sflush_r+0x6a>
  406084:	6bea      	ldr	r2, [r5, #60]	; 0x3c
  406086:	2a00      	cmp	r2, #0
  406088:	dc8b      	bgt.n	405fa2 <__sflush_r+0x1e>
  40608a:	e7d8      	b.n	40603e <__sflush_r+0xba>
  40608c:	2301      	movs	r3, #1
  40608e:	69e9      	ldr	r1, [r5, #28]
  406090:	4640      	mov	r0, r8
  406092:	47a0      	blx	r4
  406094:	1c43      	adds	r3, r0, #1
  406096:	4602      	mov	r2, r0
  406098:	d002      	beq.n	4060a0 <__sflush_r+0x11c>
  40609a:	89ab      	ldrh	r3, [r5, #12]
  40609c:	6aac      	ldr	r4, [r5, #40]	; 0x28
  40609e:	e78d      	b.n	405fbc <__sflush_r+0x38>
  4060a0:	f8d8 3000 	ldr.w	r3, [r8]
  4060a4:	2b00      	cmp	r3, #0
  4060a6:	d0f8      	beq.n	40609a <__sflush_r+0x116>
  4060a8:	2b1d      	cmp	r3, #29
  4060aa:	d001      	beq.n	4060b0 <__sflush_r+0x12c>
  4060ac:	2b16      	cmp	r3, #22
  4060ae:	d1c9      	bne.n	406044 <__sflush_r+0xc0>
  4060b0:	f8c8 6000 	str.w	r6, [r8]
  4060b4:	e7c3      	b.n	40603e <__sflush_r+0xba>
  4060b6:	bf00      	nop
  4060b8:	20400001 	.word	0x20400001

004060bc <_fflush_r>:
  4060bc:	b510      	push	{r4, lr}
  4060be:	4604      	mov	r4, r0
  4060c0:	b082      	sub	sp, #8
  4060c2:	b108      	cbz	r0, 4060c8 <_fflush_r+0xc>
  4060c4:	6b83      	ldr	r3, [r0, #56]	; 0x38
  4060c6:	b153      	cbz	r3, 4060de <_fflush_r+0x22>
  4060c8:	f9b1 000c 	ldrsh.w	r0, [r1, #12]
  4060cc:	b908      	cbnz	r0, 4060d2 <_fflush_r+0x16>
  4060ce:	b002      	add	sp, #8
  4060d0:	bd10      	pop	{r4, pc}
  4060d2:	4620      	mov	r0, r4
  4060d4:	b002      	add	sp, #8
  4060d6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  4060da:	f7ff bf53 	b.w	405f84 <__sflush_r>
  4060de:	9101      	str	r1, [sp, #4]
  4060e0:	f000 f880 	bl	4061e4 <__sinit>
  4060e4:	9901      	ldr	r1, [sp, #4]
  4060e6:	e7ef      	b.n	4060c8 <_fflush_r+0xc>

004060e8 <_cleanup_r>:
  4060e8:	4901      	ldr	r1, [pc, #4]	; (4060f0 <_cleanup_r+0x8>)
  4060ea:	f000 bbad 	b.w	406848 <_fwalk_reent>
  4060ee:	bf00      	nop
  4060f0:	00407895 	.word	0x00407895

004060f4 <__sinit.part.1>:
  4060f4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  4060f8:	4607      	mov	r7, r0
  4060fa:	2400      	movs	r4, #0
  4060fc:	2304      	movs	r3, #4
  4060fe:	2103      	movs	r1, #3
  406100:	687d      	ldr	r5, [r7, #4]
  406102:	4833      	ldr	r0, [pc, #204]	; (4061d0 <__sinit.part.1+0xdc>)
  406104:	f507 723b 	add.w	r2, r7, #748	; 0x2ec
  406108:	63f8      	str	r0, [r7, #60]	; 0x3c
  40610a:	f8c7 12e4 	str.w	r1, [r7, #740]	; 0x2e4
  40610e:	f8c7 22e8 	str.w	r2, [r7, #744]	; 0x2e8
  406112:	f8c7 42e0 	str.w	r4, [r7, #736]	; 0x2e0
  406116:	b083      	sub	sp, #12
  406118:	602c      	str	r4, [r5, #0]
  40611a:	606c      	str	r4, [r5, #4]
  40611c:	60ac      	str	r4, [r5, #8]
  40611e:	666c      	str	r4, [r5, #100]	; 0x64
  406120:	81ec      	strh	r4, [r5, #14]
  406122:	612c      	str	r4, [r5, #16]
  406124:	616c      	str	r4, [r5, #20]
  406126:	61ac      	str	r4, [r5, #24]
  406128:	81ab      	strh	r3, [r5, #12]
  40612a:	4621      	mov	r1, r4
  40612c:	f105 005c 	add.w	r0, r5, #92	; 0x5c
  406130:	2208      	movs	r2, #8
  406132:	f7fc fbf9 	bl	402928 <memset>
  406136:	2301      	movs	r3, #1
  406138:	2209      	movs	r2, #9
  40613a:	68be      	ldr	r6, [r7, #8]
  40613c:	f8df b094 	ldr.w	fp, [pc, #148]	; 4061d4 <__sinit.part.1+0xe0>
  406140:	f8df a094 	ldr.w	sl, [pc, #148]	; 4061d8 <__sinit.part.1+0xe4>
  406144:	f8df 9094 	ldr.w	r9, [pc, #148]	; 4061dc <__sinit.part.1+0xe8>
  406148:	f8df 8094 	ldr.w	r8, [pc, #148]	; 4061e0 <__sinit.part.1+0xec>
  40614c:	f8c5 b020 	str.w	fp, [r5, #32]
  406150:	f8c5 a024 	str.w	sl, [r5, #36]	; 0x24
  406154:	f8c5 9028 	str.w	r9, [r5, #40]	; 0x28
  406158:	f8c5 802c 	str.w	r8, [r5, #44]	; 0x2c
  40615c:	61ed      	str	r5, [r5, #28]
  40615e:	4621      	mov	r1, r4
  406160:	81f3      	strh	r3, [r6, #14]
  406162:	81b2      	strh	r2, [r6, #12]
  406164:	f106 005c 	add.w	r0, r6, #92	; 0x5c
  406168:	6034      	str	r4, [r6, #0]
  40616a:	6074      	str	r4, [r6, #4]
  40616c:	60b4      	str	r4, [r6, #8]
  40616e:	6674      	str	r4, [r6, #100]	; 0x64
  406170:	6134      	str	r4, [r6, #16]
  406172:	6174      	str	r4, [r6, #20]
  406174:	61b4      	str	r4, [r6, #24]
  406176:	2208      	movs	r2, #8
  406178:	9301      	str	r3, [sp, #4]
  40617a:	f7fc fbd5 	bl	402928 <memset>
  40617e:	2012      	movs	r0, #18
  406180:	2202      	movs	r2, #2
  406182:	68fd      	ldr	r5, [r7, #12]
  406184:	4621      	mov	r1, r4
  406186:	61f6      	str	r6, [r6, #28]
  406188:	f8c6 b020 	str.w	fp, [r6, #32]
  40618c:	f8c6 a024 	str.w	sl, [r6, #36]	; 0x24
  406190:	f8c6 9028 	str.w	r9, [r6, #40]	; 0x28
  406194:	f8c6 802c 	str.w	r8, [r6, #44]	; 0x2c
  406198:	81a8      	strh	r0, [r5, #12]
  40619a:	81ea      	strh	r2, [r5, #14]
  40619c:	602c      	str	r4, [r5, #0]
  40619e:	606c      	str	r4, [r5, #4]
  4061a0:	60ac      	str	r4, [r5, #8]
  4061a2:	666c      	str	r4, [r5, #100]	; 0x64
  4061a4:	612c      	str	r4, [r5, #16]
  4061a6:	616c      	str	r4, [r5, #20]
  4061a8:	61ac      	str	r4, [r5, #24]
  4061aa:	f105 005c 	add.w	r0, r5, #92	; 0x5c
  4061ae:	2208      	movs	r2, #8
  4061b0:	f7fc fbba 	bl	402928 <memset>
  4061b4:	9b01      	ldr	r3, [sp, #4]
  4061b6:	61ed      	str	r5, [r5, #28]
  4061b8:	f8c5 b020 	str.w	fp, [r5, #32]
  4061bc:	f8c5 a024 	str.w	sl, [r5, #36]	; 0x24
  4061c0:	f8c5 9028 	str.w	r9, [r5, #40]	; 0x28
  4061c4:	f8c5 802c 	str.w	r8, [r5, #44]	; 0x2c
  4061c8:	63bb      	str	r3, [r7, #56]	; 0x38
  4061ca:	b003      	add	sp, #12
  4061cc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  4061d0:	004060e9 	.word	0x004060e9
  4061d4:	00407499 	.word	0x00407499
  4061d8:	004074bd 	.word	0x004074bd
  4061dc:	004074f9 	.word	0x004074f9
  4061e0:	00407519 	.word	0x00407519

004061e4 <__sinit>:
  4061e4:	6b83      	ldr	r3, [r0, #56]	; 0x38
  4061e6:	b103      	cbz	r3, 4061ea <__sinit+0x6>
  4061e8:	4770      	bx	lr
  4061ea:	f7ff bf83 	b.w	4060f4 <__sinit.part.1>
  4061ee:	bf00      	nop

004061f0 <__sfp_lock_acquire>:
  4061f0:	4770      	bx	lr
  4061f2:	bf00      	nop

004061f4 <__sfp_lock_release>:
  4061f4:	4770      	bx	lr
  4061f6:	bf00      	nop

004061f8 <__libc_fini_array>:
  4061f8:	b538      	push	{r3, r4, r5, lr}
  4061fa:	4c0a      	ldr	r4, [pc, #40]	; (406224 <__libc_fini_array+0x2c>)
  4061fc:	4d0a      	ldr	r5, [pc, #40]	; (406228 <__libc_fini_array+0x30>)
  4061fe:	1b64      	subs	r4, r4, r5
  406200:	10a4      	asrs	r4, r4, #2
  406202:	d00a      	beq.n	40621a <__libc_fini_array+0x22>
  406204:	f104 4380 	add.w	r3, r4, #1073741824	; 0x40000000
  406208:	3b01      	subs	r3, #1
  40620a:	eb05 0583 	add.w	r5, r5, r3, lsl #2
  40620e:	3c01      	subs	r4, #1
  406210:	f855 3904 	ldr.w	r3, [r5], #-4
  406214:	4798      	blx	r3
  406216:	2c00      	cmp	r4, #0
  406218:	d1f9      	bne.n	40620e <__libc_fini_array+0x16>
  40621a:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  40621e:	f002 bfb9 	b.w	409194 <_fini>
  406222:	bf00      	nop
  406224:	004091a4 	.word	0x004091a4
  406228:	004091a0 	.word	0x004091a0

0040622c <__fputwc>:
  40622c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
  406230:	b083      	sub	sp, #12
  406232:	4607      	mov	r7, r0
  406234:	4688      	mov	r8, r1
  406236:	4614      	mov	r4, r2
  406238:	f000 fb2e 	bl	406898 <__locale_mb_cur_max>
  40623c:	2801      	cmp	r0, #1
  40623e:	d033      	beq.n	4062a8 <__fputwc+0x7c>
  406240:	4642      	mov	r2, r8
  406242:	f104 035c 	add.w	r3, r4, #92	; 0x5c
  406246:	a901      	add	r1, sp, #4
  406248:	4638      	mov	r0, r7
  40624a:	f001 fa3f 	bl	4076cc <_wcrtomb_r>
  40624e:	1c42      	adds	r2, r0, #1
  406250:	4606      	mov	r6, r0
  406252:	d022      	beq.n	40629a <__fputwc+0x6e>
  406254:	b390      	cbz	r0, 4062bc <__fputwc+0x90>
  406256:	f89d 1004 	ldrb.w	r1, [sp, #4]
  40625a:	2500      	movs	r5, #0
  40625c:	f10d 0904 	add.w	r9, sp, #4
  406260:	e008      	b.n	406274 <__fputwc+0x48>
  406262:	6823      	ldr	r3, [r4, #0]
  406264:	1c5a      	adds	r2, r3, #1
  406266:	6022      	str	r2, [r4, #0]
  406268:	7019      	strb	r1, [r3, #0]
  40626a:	3501      	adds	r5, #1
  40626c:	42b5      	cmp	r5, r6
  40626e:	d225      	bcs.n	4062bc <__fputwc+0x90>
  406270:	f815 1009 	ldrb.w	r1, [r5, r9]
  406274:	68a3      	ldr	r3, [r4, #8]
  406276:	3b01      	subs	r3, #1
  406278:	2b00      	cmp	r3, #0
  40627a:	60a3      	str	r3, [r4, #8]
  40627c:	daf1      	bge.n	406262 <__fputwc+0x36>
  40627e:	69a2      	ldr	r2, [r4, #24]
  406280:	4293      	cmp	r3, r2
  406282:	db01      	blt.n	406288 <__fputwc+0x5c>
  406284:	290a      	cmp	r1, #10
  406286:	d1ec      	bne.n	406262 <__fputwc+0x36>
  406288:	4622      	mov	r2, r4
  40628a:	4638      	mov	r0, r7
  40628c:	f001 f9c6 	bl	40761c <__swbuf_r>
  406290:	1c43      	adds	r3, r0, #1
  406292:	d1ea      	bne.n	40626a <__fputwc+0x3e>
  406294:	b003      	add	sp, #12
  406296:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
  40629a:	89a3      	ldrh	r3, [r4, #12]
  40629c:	f043 0340 	orr.w	r3, r3, #64	; 0x40
  4062a0:	81a3      	strh	r3, [r4, #12]
  4062a2:	b003      	add	sp, #12
  4062a4:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
  4062a8:	f108 33ff 	add.w	r3, r8, #4294967295
  4062ac:	2bfe      	cmp	r3, #254	; 0xfe
  4062ae:	d8c7      	bhi.n	406240 <__fputwc+0x14>
  4062b0:	fa5f f188 	uxtb.w	r1, r8
  4062b4:	4606      	mov	r6, r0
  4062b6:	f88d 1004 	strb.w	r1, [sp, #4]
  4062ba:	e7ce      	b.n	40625a <__fputwc+0x2e>
  4062bc:	4640      	mov	r0, r8
  4062be:	b003      	add	sp, #12
  4062c0:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}

004062c4 <_fputwc_r>:
  4062c4:	f9b2 300c 	ldrsh.w	r3, [r2, #12]
  4062c8:	f413 5f00 	tst.w	r3, #8192	; 0x2000
  4062cc:	d10a      	bne.n	4062e4 <_fputwc_r+0x20>
  4062ce:	b410      	push	{r4}
  4062d0:	6e54      	ldr	r4, [r2, #100]	; 0x64
  4062d2:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
  4062d6:	f444 5400 	orr.w	r4, r4, #8192	; 0x2000
  4062da:	6654      	str	r4, [r2, #100]	; 0x64
  4062dc:	8193      	strh	r3, [r2, #12]
  4062de:	bc10      	pop	{r4}
  4062e0:	f7ff bfa4 	b.w	40622c <__fputwc>
  4062e4:	f7ff bfa2 	b.w	40622c <__fputwc>

004062e8 <_malloc_trim_r>:
  4062e8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  4062ea:	460c      	mov	r4, r1
  4062ec:	4f23      	ldr	r7, [pc, #140]	; (40637c <_malloc_trim_r+0x94>)
  4062ee:	4606      	mov	r6, r0
  4062f0:	f7fc fb68 	bl	4029c4 <__malloc_lock>
  4062f4:	68bb      	ldr	r3, [r7, #8]
  4062f6:	f5c4 617e 	rsb	r1, r4, #4064	; 0xfe0
  4062fa:	685d      	ldr	r5, [r3, #4]
  4062fc:	310f      	adds	r1, #15
  4062fe:	f025 0503 	bic.w	r5, r5, #3
  406302:	4429      	add	r1, r5
  406304:	f421 617f 	bic.w	r1, r1, #4080	; 0xff0
  406308:	f021 010f 	bic.w	r1, r1, #15
  40630c:	f5a1 5480 	sub.w	r4, r1, #4096	; 0x1000
  406310:	f5b4 5f80 	cmp.w	r4, #4096	; 0x1000
  406314:	db07      	blt.n	406326 <_malloc_trim_r+0x3e>
  406316:	2100      	movs	r1, #0
  406318:	4630      	mov	r0, r6
  40631a:	f7fc fb57 	bl	4029cc <_sbrk_r>
  40631e:	68bb      	ldr	r3, [r7, #8]
  406320:	442b      	add	r3, r5
  406322:	4298      	cmp	r0, r3
  406324:	d004      	beq.n	406330 <_malloc_trim_r+0x48>
  406326:	4630      	mov	r0, r6
  406328:	f7fc fb4e 	bl	4029c8 <__malloc_unlock>
  40632c:	2000      	movs	r0, #0
  40632e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  406330:	4261      	negs	r1, r4
  406332:	4630      	mov	r0, r6
  406334:	f7fc fb4a 	bl	4029cc <_sbrk_r>
  406338:	3001      	adds	r0, #1
  40633a:	d00d      	beq.n	406358 <_malloc_trim_r+0x70>
  40633c:	4b10      	ldr	r3, [pc, #64]	; (406380 <_malloc_trim_r+0x98>)
  40633e:	68ba      	ldr	r2, [r7, #8]
  406340:	6819      	ldr	r1, [r3, #0]
  406342:	1b2d      	subs	r5, r5, r4
  406344:	f045 0501 	orr.w	r5, r5, #1
  406348:	4630      	mov	r0, r6
  40634a:	1b09      	subs	r1, r1, r4
  40634c:	6055      	str	r5, [r2, #4]
  40634e:	6019      	str	r1, [r3, #0]
  406350:	f7fc fb3a 	bl	4029c8 <__malloc_unlock>
  406354:	2001      	movs	r0, #1
  406356:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  406358:	2100      	movs	r1, #0
  40635a:	4630      	mov	r0, r6
  40635c:	f7fc fb36 	bl	4029cc <_sbrk_r>
  406360:	68ba      	ldr	r2, [r7, #8]
  406362:	1a83      	subs	r3, r0, r2
  406364:	2b0f      	cmp	r3, #15
  406366:	ddde      	ble.n	406326 <_malloc_trim_r+0x3e>
  406368:	4c06      	ldr	r4, [pc, #24]	; (406384 <_malloc_trim_r+0x9c>)
  40636a:	4905      	ldr	r1, [pc, #20]	; (406380 <_malloc_trim_r+0x98>)
  40636c:	6824      	ldr	r4, [r4, #0]
  40636e:	f043 0301 	orr.w	r3, r3, #1
  406372:	1b00      	subs	r0, r0, r4
  406374:	6053      	str	r3, [r2, #4]
  406376:	6008      	str	r0, [r1, #0]
  406378:	e7d5      	b.n	406326 <_malloc_trim_r+0x3e>
  40637a:	bf00      	nop
  40637c:	20000530 	.word	0x20000530
  406380:	20000ed0 	.word	0x20000ed0
  406384:	20000938 	.word	0x20000938

00406388 <_free_r>:
  406388:	2900      	cmp	r1, #0
  40638a:	d044      	beq.n	406416 <_free_r+0x8e>
  40638c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  406390:	460d      	mov	r5, r1
  406392:	4680      	mov	r8, r0
  406394:	f7fc fb16 	bl	4029c4 <__malloc_lock>
  406398:	f855 7c04 	ldr.w	r7, [r5, #-4]
  40639c:	4969      	ldr	r1, [pc, #420]	; (406544 <_free_r+0x1bc>)
  40639e:	f1a5 0408 	sub.w	r4, r5, #8
  4063a2:	f027 0301 	bic.w	r3, r7, #1
  4063a6:	18e2      	adds	r2, r4, r3
  4063a8:	688e      	ldr	r6, [r1, #8]
  4063aa:	6850      	ldr	r0, [r2, #4]
  4063ac:	42b2      	cmp	r2, r6
  4063ae:	f020 0003 	bic.w	r0, r0, #3
  4063b2:	d05e      	beq.n	406472 <_free_r+0xea>
  4063b4:	07fe      	lsls	r6, r7, #31
  4063b6:	6050      	str	r0, [r2, #4]
  4063b8:	d40b      	bmi.n	4063d2 <_free_r+0x4a>
  4063ba:	f855 7c08 	ldr.w	r7, [r5, #-8]
  4063be:	f101 0e08 	add.w	lr, r1, #8
  4063c2:	1be4      	subs	r4, r4, r7
  4063c4:	68a5      	ldr	r5, [r4, #8]
  4063c6:	443b      	add	r3, r7
  4063c8:	4575      	cmp	r5, lr
  4063ca:	d06d      	beq.n	4064a8 <_free_r+0x120>
  4063cc:	68e7      	ldr	r7, [r4, #12]
  4063ce:	60ef      	str	r7, [r5, #12]
  4063d0:	60bd      	str	r5, [r7, #8]
  4063d2:	1815      	adds	r5, r2, r0
  4063d4:	686d      	ldr	r5, [r5, #4]
  4063d6:	07ed      	lsls	r5, r5, #31
  4063d8:	d53e      	bpl.n	406458 <_free_r+0xd0>
  4063da:	f043 0201 	orr.w	r2, r3, #1
  4063de:	6062      	str	r2, [r4, #4]
  4063e0:	50e3      	str	r3, [r4, r3]
  4063e2:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
  4063e6:	d217      	bcs.n	406418 <_free_r+0x90>
  4063e8:	2201      	movs	r2, #1
  4063ea:	08db      	lsrs	r3, r3, #3
  4063ec:	1098      	asrs	r0, r3, #2
  4063ee:	684d      	ldr	r5, [r1, #4]
  4063f0:	4413      	add	r3, r2
  4063f2:	f851 7033 	ldr.w	r7, [r1, r3, lsl #3]
  4063f6:	4082      	lsls	r2, r0
  4063f8:	eb01 00c3 	add.w	r0, r1, r3, lsl #3
  4063fc:	432a      	orrs	r2, r5
  4063fe:	3808      	subs	r0, #8
  406400:	60e0      	str	r0, [r4, #12]
  406402:	60a7      	str	r7, [r4, #8]
  406404:	604a      	str	r2, [r1, #4]
  406406:	f841 4033 	str.w	r4, [r1, r3, lsl #3]
  40640a:	60fc      	str	r4, [r7, #12]
  40640c:	4640      	mov	r0, r8
  40640e:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
  406412:	f7fc bad9 	b.w	4029c8 <__malloc_unlock>
  406416:	4770      	bx	lr
  406418:	0a5a      	lsrs	r2, r3, #9
  40641a:	2a04      	cmp	r2, #4
  40641c:	d852      	bhi.n	4064c4 <_free_r+0x13c>
  40641e:	099a      	lsrs	r2, r3, #6
  406420:	f102 0739 	add.w	r7, r2, #57	; 0x39
  406424:	00ff      	lsls	r7, r7, #3
  406426:	f102 0538 	add.w	r5, r2, #56	; 0x38
  40642a:	19c8      	adds	r0, r1, r7
  40642c:	59ca      	ldr	r2, [r1, r7]
  40642e:	3808      	subs	r0, #8
  406430:	4290      	cmp	r0, r2
  406432:	d04f      	beq.n	4064d4 <_free_r+0x14c>
  406434:	6851      	ldr	r1, [r2, #4]
  406436:	f021 0103 	bic.w	r1, r1, #3
  40643a:	428b      	cmp	r3, r1
  40643c:	d232      	bcs.n	4064a4 <_free_r+0x11c>
  40643e:	6892      	ldr	r2, [r2, #8]
  406440:	4290      	cmp	r0, r2
  406442:	d1f7      	bne.n	406434 <_free_r+0xac>
  406444:	68c3      	ldr	r3, [r0, #12]
  406446:	60a0      	str	r0, [r4, #8]
  406448:	60e3      	str	r3, [r4, #12]
  40644a:	609c      	str	r4, [r3, #8]
  40644c:	60c4      	str	r4, [r0, #12]
  40644e:	4640      	mov	r0, r8
  406450:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
  406454:	f7fc bab8 	b.w	4029c8 <__malloc_unlock>
  406458:	6895      	ldr	r5, [r2, #8]
  40645a:	4f3b      	ldr	r7, [pc, #236]	; (406548 <_free_r+0x1c0>)
  40645c:	4403      	add	r3, r0
  40645e:	42bd      	cmp	r5, r7
  406460:	d040      	beq.n	4064e4 <_free_r+0x15c>
  406462:	68d0      	ldr	r0, [r2, #12]
  406464:	f043 0201 	orr.w	r2, r3, #1
  406468:	60e8      	str	r0, [r5, #12]
  40646a:	6085      	str	r5, [r0, #8]
  40646c:	6062      	str	r2, [r4, #4]
  40646e:	50e3      	str	r3, [r4, r3]
  406470:	e7b7      	b.n	4063e2 <_free_r+0x5a>
  406472:	07ff      	lsls	r7, r7, #31
  406474:	4403      	add	r3, r0
  406476:	d407      	bmi.n	406488 <_free_r+0x100>
  406478:	f855 5c08 	ldr.w	r5, [r5, #-8]
  40647c:	1b64      	subs	r4, r4, r5
  40647e:	68e2      	ldr	r2, [r4, #12]
  406480:	68a0      	ldr	r0, [r4, #8]
  406482:	442b      	add	r3, r5
  406484:	60c2      	str	r2, [r0, #12]
  406486:	6090      	str	r0, [r2, #8]
  406488:	4a30      	ldr	r2, [pc, #192]	; (40654c <_free_r+0x1c4>)
  40648a:	f043 0001 	orr.w	r0, r3, #1
  40648e:	6812      	ldr	r2, [r2, #0]
  406490:	6060      	str	r0, [r4, #4]
  406492:	4293      	cmp	r3, r2
  406494:	608c      	str	r4, [r1, #8]
  406496:	d3b9      	bcc.n	40640c <_free_r+0x84>
  406498:	4b2d      	ldr	r3, [pc, #180]	; (406550 <_free_r+0x1c8>)
  40649a:	4640      	mov	r0, r8
  40649c:	6819      	ldr	r1, [r3, #0]
  40649e:	f7ff ff23 	bl	4062e8 <_malloc_trim_r>
  4064a2:	e7b3      	b.n	40640c <_free_r+0x84>
  4064a4:	4610      	mov	r0, r2
  4064a6:	e7cd      	b.n	406444 <_free_r+0xbc>
  4064a8:	1811      	adds	r1, r2, r0
  4064aa:	6849      	ldr	r1, [r1, #4]
  4064ac:	07c9      	lsls	r1, r1, #31
  4064ae:	d444      	bmi.n	40653a <_free_r+0x1b2>
  4064b0:	6891      	ldr	r1, [r2, #8]
  4064b2:	4403      	add	r3, r0
  4064b4:	68d2      	ldr	r2, [r2, #12]
  4064b6:	f043 0001 	orr.w	r0, r3, #1
  4064ba:	60ca      	str	r2, [r1, #12]
  4064bc:	6091      	str	r1, [r2, #8]
  4064be:	6060      	str	r0, [r4, #4]
  4064c0:	50e3      	str	r3, [r4, r3]
  4064c2:	e7a3      	b.n	40640c <_free_r+0x84>
  4064c4:	2a14      	cmp	r2, #20
  4064c6:	d816      	bhi.n	4064f6 <_free_r+0x16e>
  4064c8:	f102 075c 	add.w	r7, r2, #92	; 0x5c
  4064cc:	00ff      	lsls	r7, r7, #3
  4064ce:	f102 055b 	add.w	r5, r2, #91	; 0x5b
  4064d2:	e7aa      	b.n	40642a <_free_r+0xa2>
  4064d4:	2301      	movs	r3, #1
  4064d6:	10aa      	asrs	r2, r5, #2
  4064d8:	684d      	ldr	r5, [r1, #4]
  4064da:	4093      	lsls	r3, r2
  4064dc:	432b      	orrs	r3, r5
  4064de:	604b      	str	r3, [r1, #4]
  4064e0:	4603      	mov	r3, r0
  4064e2:	e7b0      	b.n	406446 <_free_r+0xbe>
  4064e4:	f043 0201 	orr.w	r2, r3, #1
  4064e8:	614c      	str	r4, [r1, #20]
  4064ea:	610c      	str	r4, [r1, #16]
  4064ec:	60e5      	str	r5, [r4, #12]
  4064ee:	60a5      	str	r5, [r4, #8]
  4064f0:	6062      	str	r2, [r4, #4]
  4064f2:	50e3      	str	r3, [r4, r3]
  4064f4:	e78a      	b.n	40640c <_free_r+0x84>
  4064f6:	2a54      	cmp	r2, #84	; 0x54
  4064f8:	d806      	bhi.n	406508 <_free_r+0x180>
  4064fa:	0b1a      	lsrs	r2, r3, #12
  4064fc:	f102 076f 	add.w	r7, r2, #111	; 0x6f
  406500:	00ff      	lsls	r7, r7, #3
  406502:	f102 056e 	add.w	r5, r2, #110	; 0x6e
  406506:	e790      	b.n	40642a <_free_r+0xa2>
  406508:	f5b2 7faa 	cmp.w	r2, #340	; 0x154
  40650c:	d806      	bhi.n	40651c <_free_r+0x194>
  40650e:	0bda      	lsrs	r2, r3, #15
  406510:	f102 0778 	add.w	r7, r2, #120	; 0x78
  406514:	00ff      	lsls	r7, r7, #3
  406516:	f102 0577 	add.w	r5, r2, #119	; 0x77
  40651a:	e786      	b.n	40642a <_free_r+0xa2>
  40651c:	f240 5054 	movw	r0, #1364	; 0x554
  406520:	4282      	cmp	r2, r0
  406522:	d806      	bhi.n	406532 <_free_r+0x1aa>
  406524:	0c9a      	lsrs	r2, r3, #18
  406526:	f102 077d 	add.w	r7, r2, #125	; 0x7d
  40652a:	00ff      	lsls	r7, r7, #3
  40652c:	f102 057c 	add.w	r5, r2, #124	; 0x7c
  406530:	e77b      	b.n	40642a <_free_r+0xa2>
  406532:	f44f 777e 	mov.w	r7, #1016	; 0x3f8
  406536:	257e      	movs	r5, #126	; 0x7e
  406538:	e777      	b.n	40642a <_free_r+0xa2>
  40653a:	f043 0101 	orr.w	r1, r3, #1
  40653e:	6061      	str	r1, [r4, #4]
  406540:	6013      	str	r3, [r2, #0]
  406542:	e763      	b.n	40640c <_free_r+0x84>
  406544:	20000530 	.word	0x20000530
  406548:	20000538 	.word	0x20000538
  40654c:	2000093c 	.word	0x2000093c
  406550:	20000f00 	.word	0x20000f00

00406554 <__sfvwrite_r>:
  406554:	6893      	ldr	r3, [r2, #8]
  406556:	2b00      	cmp	r3, #0
  406558:	d071      	beq.n	40663e <__sfvwrite_r+0xea>
  40655a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  40655e:	898b      	ldrh	r3, [r1, #12]
  406560:	b083      	sub	sp, #12
  406562:	460c      	mov	r4, r1
  406564:	0719      	lsls	r1, r3, #28
  406566:	9000      	str	r0, [sp, #0]
  406568:	4616      	mov	r6, r2
  40656a:	d525      	bpl.n	4065b8 <__sfvwrite_r+0x64>
  40656c:	6922      	ldr	r2, [r4, #16]
  40656e:	b31a      	cbz	r2, 4065b8 <__sfvwrite_r+0x64>
  406570:	f013 0002 	ands.w	r0, r3, #2
  406574:	6835      	ldr	r5, [r6, #0]
  406576:	d02b      	beq.n	4065d0 <__sfvwrite_r+0x7c>
  406578:	f04f 0900 	mov.w	r9, #0
  40657c:	46b0      	mov	r8, r6
  40657e:	464f      	mov	r7, r9
  406580:	f8df a2c0 	ldr.w	sl, [pc, #704]	; 406844 <__sfvwrite_r+0x2f0>
  406584:	2f00      	cmp	r7, #0
  406586:	d055      	beq.n	406634 <__sfvwrite_r+0xe0>
  406588:	4557      	cmp	r7, sl
  40658a:	463b      	mov	r3, r7
  40658c:	464a      	mov	r2, r9
  40658e:	bf28      	it	cs
  406590:	4653      	movcs	r3, sl
  406592:	69e1      	ldr	r1, [r4, #28]
  406594:	9800      	ldr	r0, [sp, #0]
  406596:	6a66      	ldr	r6, [r4, #36]	; 0x24
  406598:	47b0      	blx	r6
  40659a:	2800      	cmp	r0, #0
  40659c:	dd56      	ble.n	40664c <__sfvwrite_r+0xf8>
  40659e:	f8d8 3008 	ldr.w	r3, [r8, #8]
  4065a2:	4481      	add	r9, r0
  4065a4:	1a1b      	subs	r3, r3, r0
  4065a6:	1a3f      	subs	r7, r7, r0
  4065a8:	f8c8 3008 	str.w	r3, [r8, #8]
  4065ac:	2b00      	cmp	r3, #0
  4065ae:	d1e9      	bne.n	406584 <__sfvwrite_r+0x30>
  4065b0:	2000      	movs	r0, #0
  4065b2:	b003      	add	sp, #12
  4065b4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  4065b8:	4621      	mov	r1, r4
  4065ba:	9800      	ldr	r0, [sp, #0]
  4065bc:	f7fe fcb6 	bl	404f2c <__swsetup_r>
  4065c0:	2800      	cmp	r0, #0
  4065c2:	f040 8135 	bne.w	406830 <__sfvwrite_r+0x2dc>
  4065c6:	89a3      	ldrh	r3, [r4, #12]
  4065c8:	6835      	ldr	r5, [r6, #0]
  4065ca:	f013 0002 	ands.w	r0, r3, #2
  4065ce:	d1d3      	bne.n	406578 <__sfvwrite_r+0x24>
  4065d0:	f013 0901 	ands.w	r9, r3, #1
  4065d4:	d144      	bne.n	406660 <__sfvwrite_r+0x10c>
  4065d6:	464f      	mov	r7, r9
  4065d8:	9601      	str	r6, [sp, #4]
  4065da:	b337      	cbz	r7, 40662a <__sfvwrite_r+0xd6>
  4065dc:	059a      	lsls	r2, r3, #22
  4065de:	f8d4 8008 	ldr.w	r8, [r4, #8]
  4065e2:	f140 8085 	bpl.w	4066f0 <__sfvwrite_r+0x19c>
  4065e6:	4547      	cmp	r7, r8
  4065e8:	46c3      	mov	fp, r8
  4065ea:	f0c0 80ad 	bcc.w	406748 <__sfvwrite_r+0x1f4>
  4065ee:	f413 6f90 	tst.w	r3, #1152	; 0x480
  4065f2:	f040 80ae 	bne.w	406752 <__sfvwrite_r+0x1fe>
  4065f6:	46ba      	mov	sl, r7
  4065f8:	6820      	ldr	r0, [r4, #0]
  4065fa:	465a      	mov	r2, fp
  4065fc:	4649      	mov	r1, r9
  4065fe:	f000 fa35 	bl	406a6c <memmove>
  406602:	68a2      	ldr	r2, [r4, #8]
  406604:	6823      	ldr	r3, [r4, #0]
  406606:	eba2 0208 	sub.w	r2, r2, r8
  40660a:	445b      	add	r3, fp
  40660c:	60a2      	str	r2, [r4, #8]
  40660e:	6023      	str	r3, [r4, #0]
  406610:	9a01      	ldr	r2, [sp, #4]
  406612:	44d1      	add	r9, sl
  406614:	6893      	ldr	r3, [r2, #8]
  406616:	eba7 070a 	sub.w	r7, r7, sl
  40661a:	eba3 030a 	sub.w	r3, r3, sl
  40661e:	6093      	str	r3, [r2, #8]
  406620:	2b00      	cmp	r3, #0
  406622:	d0c5      	beq.n	4065b0 <__sfvwrite_r+0x5c>
  406624:	89a3      	ldrh	r3, [r4, #12]
  406626:	2f00      	cmp	r7, #0
  406628:	d1d8      	bne.n	4065dc <__sfvwrite_r+0x88>
  40662a:	f8d5 9000 	ldr.w	r9, [r5]
  40662e:	686f      	ldr	r7, [r5, #4]
  406630:	3508      	adds	r5, #8
  406632:	e7d2      	b.n	4065da <__sfvwrite_r+0x86>
  406634:	f8d5 9000 	ldr.w	r9, [r5]
  406638:	686f      	ldr	r7, [r5, #4]
  40663a:	3508      	adds	r5, #8
  40663c:	e7a2      	b.n	406584 <__sfvwrite_r+0x30>
  40663e:	2000      	movs	r0, #0
  406640:	4770      	bx	lr
  406642:	4621      	mov	r1, r4
  406644:	9800      	ldr	r0, [sp, #0]
  406646:	f7ff fd39 	bl	4060bc <_fflush_r>
  40664a:	b378      	cbz	r0, 4066ac <__sfvwrite_r+0x158>
  40664c:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  406650:	f04f 30ff 	mov.w	r0, #4294967295
  406654:	f043 0340 	orr.w	r3, r3, #64	; 0x40
  406658:	81a3      	strh	r3, [r4, #12]
  40665a:	b003      	add	sp, #12
  40665c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  406660:	4681      	mov	r9, r0
  406662:	4633      	mov	r3, r6
  406664:	464e      	mov	r6, r9
  406666:	46a8      	mov	r8, r5
  406668:	469a      	mov	sl, r3
  40666a:	464d      	mov	r5, r9
  40666c:	b356      	cbz	r6, 4066c4 <__sfvwrite_r+0x170>
  40666e:	2800      	cmp	r0, #0
  406670:	d032      	beq.n	4066d8 <__sfvwrite_r+0x184>
  406672:	45b1      	cmp	r9, r6
  406674:	46cb      	mov	fp, r9
  406676:	bf28      	it	cs
  406678:	46b3      	movcs	fp, r6
  40667a:	6820      	ldr	r0, [r4, #0]
  40667c:	6923      	ldr	r3, [r4, #16]
  40667e:	465f      	mov	r7, fp
  406680:	4298      	cmp	r0, r3
  406682:	6962      	ldr	r2, [r4, #20]
  406684:	d904      	bls.n	406690 <__sfvwrite_r+0x13c>
  406686:	68a3      	ldr	r3, [r4, #8]
  406688:	4413      	add	r3, r2
  40668a:	459b      	cmp	fp, r3
  40668c:	f300 80a8 	bgt.w	4067e0 <__sfvwrite_r+0x28c>
  406690:	4593      	cmp	fp, r2
  406692:	db4d      	blt.n	406730 <__sfvwrite_r+0x1dc>
  406694:	4613      	mov	r3, r2
  406696:	6a67      	ldr	r7, [r4, #36]	; 0x24
  406698:	462a      	mov	r2, r5
  40669a:	69e1      	ldr	r1, [r4, #28]
  40669c:	9800      	ldr	r0, [sp, #0]
  40669e:	47b8      	blx	r7
  4066a0:	1e07      	subs	r7, r0, #0
  4066a2:	ddd3      	ble.n	40664c <__sfvwrite_r+0xf8>
  4066a4:	ebb9 0907 	subs.w	r9, r9, r7
  4066a8:	d0cb      	beq.n	406642 <__sfvwrite_r+0xee>
  4066aa:	2001      	movs	r0, #1
  4066ac:	f8da 3008 	ldr.w	r3, [sl, #8]
  4066b0:	443d      	add	r5, r7
  4066b2:	1bdb      	subs	r3, r3, r7
  4066b4:	1bf6      	subs	r6, r6, r7
  4066b6:	f8ca 3008 	str.w	r3, [sl, #8]
  4066ba:	2b00      	cmp	r3, #0
  4066bc:	f43f af78 	beq.w	4065b0 <__sfvwrite_r+0x5c>
  4066c0:	2e00      	cmp	r6, #0
  4066c2:	d1d4      	bne.n	40666e <__sfvwrite_r+0x11a>
  4066c4:	f108 0308 	add.w	r3, r8, #8
  4066c8:	f853 6c04 	ldr.w	r6, [r3, #-4]
  4066cc:	4698      	mov	r8, r3
  4066ce:	f853 5c08 	ldr.w	r5, [r3, #-8]
  4066d2:	3308      	adds	r3, #8
  4066d4:	2e00      	cmp	r6, #0
  4066d6:	d0f7      	beq.n	4066c8 <__sfvwrite_r+0x174>
  4066d8:	4632      	mov	r2, r6
  4066da:	210a      	movs	r1, #10
  4066dc:	4628      	mov	r0, r5
  4066de:	f000 f97f 	bl	4069e0 <memchr>
  4066e2:	2800      	cmp	r0, #0
  4066e4:	f000 80a1 	beq.w	40682a <__sfvwrite_r+0x2d6>
  4066e8:	3001      	adds	r0, #1
  4066ea:	eba0 0905 	sub.w	r9, r0, r5
  4066ee:	e7c0      	b.n	406672 <__sfvwrite_r+0x11e>
  4066f0:	6820      	ldr	r0, [r4, #0]
  4066f2:	6923      	ldr	r3, [r4, #16]
  4066f4:	4298      	cmp	r0, r3
  4066f6:	d802      	bhi.n	4066fe <__sfvwrite_r+0x1aa>
  4066f8:	6963      	ldr	r3, [r4, #20]
  4066fa:	429f      	cmp	r7, r3
  4066fc:	d25d      	bcs.n	4067ba <__sfvwrite_r+0x266>
  4066fe:	45b8      	cmp	r8, r7
  406700:	bf28      	it	cs
  406702:	46b8      	movcs	r8, r7
  406704:	4649      	mov	r1, r9
  406706:	4642      	mov	r2, r8
  406708:	f000 f9b0 	bl	406a6c <memmove>
  40670c:	68a3      	ldr	r3, [r4, #8]
  40670e:	6822      	ldr	r2, [r4, #0]
  406710:	eba3 0308 	sub.w	r3, r3, r8
  406714:	4442      	add	r2, r8
  406716:	60a3      	str	r3, [r4, #8]
  406718:	6022      	str	r2, [r4, #0]
  40671a:	b10b      	cbz	r3, 406720 <__sfvwrite_r+0x1cc>
  40671c:	46c2      	mov	sl, r8
  40671e:	e777      	b.n	406610 <__sfvwrite_r+0xbc>
  406720:	4621      	mov	r1, r4
  406722:	9800      	ldr	r0, [sp, #0]
  406724:	f7ff fcca 	bl	4060bc <_fflush_r>
  406728:	2800      	cmp	r0, #0
  40672a:	d18f      	bne.n	40664c <__sfvwrite_r+0xf8>
  40672c:	46c2      	mov	sl, r8
  40672e:	e76f      	b.n	406610 <__sfvwrite_r+0xbc>
  406730:	465a      	mov	r2, fp
  406732:	4629      	mov	r1, r5
  406734:	f000 f99a 	bl	406a6c <memmove>
  406738:	68a2      	ldr	r2, [r4, #8]
  40673a:	6823      	ldr	r3, [r4, #0]
  40673c:	eba2 020b 	sub.w	r2, r2, fp
  406740:	445b      	add	r3, fp
  406742:	60a2      	str	r2, [r4, #8]
  406744:	6023      	str	r3, [r4, #0]
  406746:	e7ad      	b.n	4066a4 <__sfvwrite_r+0x150>
  406748:	46b8      	mov	r8, r7
  40674a:	46ba      	mov	sl, r7
  40674c:	46bb      	mov	fp, r7
  40674e:	6820      	ldr	r0, [r4, #0]
  406750:	e753      	b.n	4065fa <__sfvwrite_r+0xa6>
  406752:	6962      	ldr	r2, [r4, #20]
  406754:	6820      	ldr	r0, [r4, #0]
  406756:	6921      	ldr	r1, [r4, #16]
  406758:	eb02 0842 	add.w	r8, r2, r2, lsl #1
  40675c:	eba0 0a01 	sub.w	sl, r0, r1
  406760:	eb08 78d8 	add.w	r8, r8, r8, lsr #31
  406764:	f10a 0001 	add.w	r0, sl, #1
  406768:	ea4f 0868 	mov.w	r8, r8, asr #1
  40676c:	4438      	add	r0, r7
  40676e:	4540      	cmp	r0, r8
  406770:	4642      	mov	r2, r8
  406772:	bf84      	itt	hi
  406774:	4680      	movhi	r8, r0
  406776:	4642      	movhi	r2, r8
  406778:	055b      	lsls	r3, r3, #21
  40677a:	d544      	bpl.n	406806 <__sfvwrite_r+0x2b2>
  40677c:	4611      	mov	r1, r2
  40677e:	9800      	ldr	r0, [sp, #0]
  406780:	f7fb fd8a 	bl	402298 <_malloc_r>
  406784:	4683      	mov	fp, r0
  406786:	2800      	cmp	r0, #0
  406788:	d055      	beq.n	406836 <__sfvwrite_r+0x2e2>
  40678a:	4652      	mov	r2, sl
  40678c:	6921      	ldr	r1, [r4, #16]
  40678e:	f7fc f855 	bl	40283c <memcpy>
  406792:	89a3      	ldrh	r3, [r4, #12]
  406794:	f423 6390 	bic.w	r3, r3, #1152	; 0x480
  406798:	f043 0380 	orr.w	r3, r3, #128	; 0x80
  40679c:	81a3      	strh	r3, [r4, #12]
  40679e:	eb0b 000a 	add.w	r0, fp, sl
  4067a2:	eba8 030a 	sub.w	r3, r8, sl
  4067a6:	f8c4 b010 	str.w	fp, [r4, #16]
  4067aa:	f8c4 8014 	str.w	r8, [r4, #20]
  4067ae:	6020      	str	r0, [r4, #0]
  4067b0:	60a3      	str	r3, [r4, #8]
  4067b2:	46b8      	mov	r8, r7
  4067b4:	46ba      	mov	sl, r7
  4067b6:	46bb      	mov	fp, r7
  4067b8:	e71f      	b.n	4065fa <__sfvwrite_r+0xa6>
  4067ba:	f06f 4200 	mvn.w	r2, #2147483648	; 0x80000000
  4067be:	42ba      	cmp	r2, r7
  4067c0:	bf28      	it	cs
  4067c2:	463a      	movcs	r2, r7
  4067c4:	fb92 f2f3 	sdiv	r2, r2, r3
  4067c8:	69e1      	ldr	r1, [r4, #28]
  4067ca:	fb03 f302 	mul.w	r3, r3, r2
  4067ce:	9800      	ldr	r0, [sp, #0]
  4067d0:	464a      	mov	r2, r9
  4067d2:	6a66      	ldr	r6, [r4, #36]	; 0x24
  4067d4:	47b0      	blx	r6
  4067d6:	f1b0 0a00 	subs.w	sl, r0, #0
  4067da:	f73f af19 	bgt.w	406610 <__sfvwrite_r+0xbc>
  4067de:	e735      	b.n	40664c <__sfvwrite_r+0xf8>
  4067e0:	461a      	mov	r2, r3
  4067e2:	4629      	mov	r1, r5
  4067e4:	9301      	str	r3, [sp, #4]
  4067e6:	f000 f941 	bl	406a6c <memmove>
  4067ea:	6822      	ldr	r2, [r4, #0]
  4067ec:	9b01      	ldr	r3, [sp, #4]
  4067ee:	4621      	mov	r1, r4
  4067f0:	441a      	add	r2, r3
  4067f2:	6022      	str	r2, [r4, #0]
  4067f4:	9800      	ldr	r0, [sp, #0]
  4067f6:	f7ff fc61 	bl	4060bc <_fflush_r>
  4067fa:	9b01      	ldr	r3, [sp, #4]
  4067fc:	2800      	cmp	r0, #0
  4067fe:	f47f af25 	bne.w	40664c <__sfvwrite_r+0xf8>
  406802:	461f      	mov	r7, r3
  406804:	e74e      	b.n	4066a4 <__sfvwrite_r+0x150>
  406806:	9800      	ldr	r0, [sp, #0]
  406808:	f000 fc90 	bl	40712c <_realloc_r>
  40680c:	4683      	mov	fp, r0
  40680e:	2800      	cmp	r0, #0
  406810:	d1c5      	bne.n	40679e <__sfvwrite_r+0x24a>
  406812:	9d00      	ldr	r5, [sp, #0]
  406814:	6921      	ldr	r1, [r4, #16]
  406816:	4628      	mov	r0, r5
  406818:	f7ff fdb6 	bl	406388 <_free_r>
  40681c:	220c      	movs	r2, #12
  40681e:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  406822:	602a      	str	r2, [r5, #0]
  406824:	f023 0380 	bic.w	r3, r3, #128	; 0x80
  406828:	e712      	b.n	406650 <__sfvwrite_r+0xfc>
  40682a:	f106 0901 	add.w	r9, r6, #1
  40682e:	e720      	b.n	406672 <__sfvwrite_r+0x11e>
  406830:	f04f 30ff 	mov.w	r0, #4294967295
  406834:	e6bd      	b.n	4065b2 <__sfvwrite_r+0x5e>
  406836:	220c      	movs	r2, #12
  406838:	9900      	ldr	r1, [sp, #0]
  40683a:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  40683e:	600a      	str	r2, [r1, #0]
  406840:	e706      	b.n	406650 <__sfvwrite_r+0xfc>
  406842:	bf00      	nop
  406844:	7ffffc00 	.word	0x7ffffc00

00406848 <_fwalk_reent>:
  406848:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
  40684c:	f510 7638 	adds.w	r6, r0, #736	; 0x2e0
  406850:	d01e      	beq.n	406890 <_fwalk_reent+0x48>
  406852:	4688      	mov	r8, r1
  406854:	4607      	mov	r7, r0
  406856:	f04f 0900 	mov.w	r9, #0
  40685a:	6875      	ldr	r5, [r6, #4]
  40685c:	68b4      	ldr	r4, [r6, #8]
  40685e:	3d01      	subs	r5, #1
  406860:	d410      	bmi.n	406884 <_fwalk_reent+0x3c>
  406862:	89a3      	ldrh	r3, [r4, #12]
  406864:	3d01      	subs	r5, #1
  406866:	2b01      	cmp	r3, #1
  406868:	d908      	bls.n	40687c <_fwalk_reent+0x34>
  40686a:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
  40686e:	3301      	adds	r3, #1
  406870:	d004      	beq.n	40687c <_fwalk_reent+0x34>
  406872:	4621      	mov	r1, r4
  406874:	4638      	mov	r0, r7
  406876:	47c0      	blx	r8
  406878:	ea49 0900 	orr.w	r9, r9, r0
  40687c:	1c6b      	adds	r3, r5, #1
  40687e:	f104 0468 	add.w	r4, r4, #104	; 0x68
  406882:	d1ee      	bne.n	406862 <_fwalk_reent+0x1a>
  406884:	6836      	ldr	r6, [r6, #0]
  406886:	2e00      	cmp	r6, #0
  406888:	d1e7      	bne.n	40685a <_fwalk_reent+0x12>
  40688a:	4648      	mov	r0, r9
  40688c:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  406890:	46b1      	mov	r9, r6
  406892:	4648      	mov	r0, r9
  406894:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}

00406898 <__locale_mb_cur_max>:
  406898:	4b04      	ldr	r3, [pc, #16]	; (4068ac <__locale_mb_cur_max+0x14>)
  40689a:	4a05      	ldr	r2, [pc, #20]	; (4068b0 <__locale_mb_cur_max+0x18>)
  40689c:	681b      	ldr	r3, [r3, #0]
  40689e:	6b5b      	ldr	r3, [r3, #52]	; 0x34
  4068a0:	2b00      	cmp	r3, #0
  4068a2:	bf08      	it	eq
  4068a4:	4613      	moveq	r3, r2
  4068a6:	f893 0128 	ldrb.w	r0, [r3, #296]	; 0x128
  4068aa:	4770      	bx	lr
  4068ac:	20000100 	.word	0x20000100
  4068b0:	20000940 	.word	0x20000940

004068b4 <_localeconv_r>:
  4068b4:	4a04      	ldr	r2, [pc, #16]	; (4068c8 <_localeconv_r+0x14>)
  4068b6:	4b05      	ldr	r3, [pc, #20]	; (4068cc <_localeconv_r+0x18>)
  4068b8:	6812      	ldr	r2, [r2, #0]
  4068ba:	6b50      	ldr	r0, [r2, #52]	; 0x34
  4068bc:	2800      	cmp	r0, #0
  4068be:	bf08      	it	eq
  4068c0:	4618      	moveq	r0, r3
  4068c2:	30f0      	adds	r0, #240	; 0xf0
  4068c4:	4770      	bx	lr
  4068c6:	bf00      	nop
  4068c8:	20000100 	.word	0x20000100
  4068cc:	20000940 	.word	0x20000940

004068d0 <__swhatbuf_r>:
  4068d0:	b570      	push	{r4, r5, r6, lr}
  4068d2:	460c      	mov	r4, r1
  4068d4:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
  4068d8:	b090      	sub	sp, #64	; 0x40
  4068da:	2900      	cmp	r1, #0
  4068dc:	4615      	mov	r5, r2
  4068de:	461e      	mov	r6, r3
  4068e0:	db14      	blt.n	40690c <__swhatbuf_r+0x3c>
  4068e2:	aa01      	add	r2, sp, #4
  4068e4:	f001 f816 	bl	407914 <_fstat_r>
  4068e8:	2800      	cmp	r0, #0
  4068ea:	db0f      	blt.n	40690c <__swhatbuf_r+0x3c>
  4068ec:	9a02      	ldr	r2, [sp, #8]
  4068ee:	f44f 6380 	mov.w	r3, #1024	; 0x400
  4068f2:	f402 4270 	and.w	r2, r2, #61440	; 0xf000
  4068f6:	f5a2 5200 	sub.w	r2, r2, #8192	; 0x2000
  4068fa:	fab2 f282 	clz	r2, r2
  4068fe:	f44f 6000 	mov.w	r0, #2048	; 0x800
  406902:	0952      	lsrs	r2, r2, #5
  406904:	6032      	str	r2, [r6, #0]
  406906:	602b      	str	r3, [r5, #0]
  406908:	b010      	add	sp, #64	; 0x40
  40690a:	bd70      	pop	{r4, r5, r6, pc}
  40690c:	2300      	movs	r3, #0
  40690e:	89a2      	ldrh	r2, [r4, #12]
  406910:	6033      	str	r3, [r6, #0]
  406912:	f012 0080 	ands.w	r0, r2, #128	; 0x80
  406916:	d004      	beq.n	406922 <__swhatbuf_r+0x52>
  406918:	2240      	movs	r2, #64	; 0x40
  40691a:	4618      	mov	r0, r3
  40691c:	602a      	str	r2, [r5, #0]
  40691e:	b010      	add	sp, #64	; 0x40
  406920:	bd70      	pop	{r4, r5, r6, pc}
  406922:	f44f 6380 	mov.w	r3, #1024	; 0x400
  406926:	602b      	str	r3, [r5, #0]
  406928:	b010      	add	sp, #64	; 0x40
  40692a:	bd70      	pop	{r4, r5, r6, pc}

0040692c <__smakebuf_r>:
  40692c:	898a      	ldrh	r2, [r1, #12]
  40692e:	460b      	mov	r3, r1
  406930:	0792      	lsls	r2, r2, #30
  406932:	d506      	bpl.n	406942 <__smakebuf_r+0x16>
  406934:	2101      	movs	r1, #1
  406936:	f103 0243 	add.w	r2, r3, #67	; 0x43
  40693a:	6159      	str	r1, [r3, #20]
  40693c:	601a      	str	r2, [r3, #0]
  40693e:	611a      	str	r2, [r3, #16]
  406940:	4770      	bx	lr
  406942:	b5f0      	push	{r4, r5, r6, r7, lr}
  406944:	b083      	sub	sp, #12
  406946:	ab01      	add	r3, sp, #4
  406948:	466a      	mov	r2, sp
  40694a:	460c      	mov	r4, r1
  40694c:	4605      	mov	r5, r0
  40694e:	f7ff ffbf 	bl	4068d0 <__swhatbuf_r>
  406952:	9900      	ldr	r1, [sp, #0]
  406954:	4606      	mov	r6, r0
  406956:	4628      	mov	r0, r5
  406958:	f7fb fc9e 	bl	402298 <_malloc_r>
  40695c:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  406960:	b1d0      	cbz	r0, 406998 <__smakebuf_r+0x6c>
  406962:	e89d 0006 	ldmia.w	sp, {r1, r2}
  406966:	4f12      	ldr	r7, [pc, #72]	; (4069b0 <__smakebuf_r+0x84>)
  406968:	f043 0380 	orr.w	r3, r3, #128	; 0x80
  40696c:	63ef      	str	r7, [r5, #60]	; 0x3c
  40696e:	81a3      	strh	r3, [r4, #12]
  406970:	6020      	str	r0, [r4, #0]
  406972:	6120      	str	r0, [r4, #16]
  406974:	6161      	str	r1, [r4, #20]
  406976:	b91a      	cbnz	r2, 406980 <__smakebuf_r+0x54>
  406978:	4333      	orrs	r3, r6
  40697a:	81a3      	strh	r3, [r4, #12]
  40697c:	b003      	add	sp, #12
  40697e:	bdf0      	pop	{r4, r5, r6, r7, pc}
  406980:	4628      	mov	r0, r5
  406982:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
  406986:	f000 ffd9 	bl	40793c <_isatty_r>
  40698a:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  40698e:	2800      	cmp	r0, #0
  406990:	d0f2      	beq.n	406978 <__smakebuf_r+0x4c>
  406992:	f043 0301 	orr.w	r3, r3, #1
  406996:	e7ef      	b.n	406978 <__smakebuf_r+0x4c>
  406998:	059a      	lsls	r2, r3, #22
  40699a:	d4ef      	bmi.n	40697c <__smakebuf_r+0x50>
  40699c:	2101      	movs	r1, #1
  40699e:	f104 0243 	add.w	r2, r4, #67	; 0x43
  4069a2:	f043 0302 	orr.w	r3, r3, #2
  4069a6:	81a3      	strh	r3, [r4, #12]
  4069a8:	6161      	str	r1, [r4, #20]
  4069aa:	6022      	str	r2, [r4, #0]
  4069ac:	6122      	str	r2, [r4, #16]
  4069ae:	e7e5      	b.n	40697c <__smakebuf_r+0x50>
  4069b0:	004060e9 	.word	0x004060e9

004069b4 <__ascii_mbtowc>:
  4069b4:	b082      	sub	sp, #8
  4069b6:	b149      	cbz	r1, 4069cc <__ascii_mbtowc+0x18>
  4069b8:	b15a      	cbz	r2, 4069d2 <__ascii_mbtowc+0x1e>
  4069ba:	b16b      	cbz	r3, 4069d8 <__ascii_mbtowc+0x24>
  4069bc:	7813      	ldrb	r3, [r2, #0]
  4069be:	600b      	str	r3, [r1, #0]
  4069c0:	7812      	ldrb	r2, [r2, #0]
  4069c2:	1c10      	adds	r0, r2, #0
  4069c4:	bf18      	it	ne
  4069c6:	2001      	movne	r0, #1
  4069c8:	b002      	add	sp, #8
  4069ca:	4770      	bx	lr
  4069cc:	a901      	add	r1, sp, #4
  4069ce:	2a00      	cmp	r2, #0
  4069d0:	d1f3      	bne.n	4069ba <__ascii_mbtowc+0x6>
  4069d2:	4610      	mov	r0, r2
  4069d4:	b002      	add	sp, #8
  4069d6:	4770      	bx	lr
  4069d8:	f06f 0001 	mvn.w	r0, #1
  4069dc:	e7f4      	b.n	4069c8 <__ascii_mbtowc+0x14>
  4069de:	bf00      	nop

004069e0 <memchr>:
  4069e0:	0783      	lsls	r3, r0, #30
  4069e2:	b470      	push	{r4, r5, r6}
  4069e4:	b2cd      	uxtb	r5, r1
  4069e6:	d03d      	beq.n	406a64 <memchr+0x84>
  4069e8:	1e54      	subs	r4, r2, #1
  4069ea:	b30a      	cbz	r2, 406a30 <memchr+0x50>
  4069ec:	7803      	ldrb	r3, [r0, #0]
  4069ee:	42ab      	cmp	r3, r5
  4069f0:	d01f      	beq.n	406a32 <memchr+0x52>
  4069f2:	1c43      	adds	r3, r0, #1
  4069f4:	e005      	b.n	406a02 <memchr+0x22>
  4069f6:	f114 34ff 	adds.w	r4, r4, #4294967295
  4069fa:	d319      	bcc.n	406a30 <memchr+0x50>
  4069fc:	7802      	ldrb	r2, [r0, #0]
  4069fe:	42aa      	cmp	r2, r5
  406a00:	d017      	beq.n	406a32 <memchr+0x52>
  406a02:	f013 0f03 	tst.w	r3, #3
  406a06:	4618      	mov	r0, r3
  406a08:	f103 0301 	add.w	r3, r3, #1
  406a0c:	d1f3      	bne.n	4069f6 <memchr+0x16>
  406a0e:	2c03      	cmp	r4, #3
  406a10:	d811      	bhi.n	406a36 <memchr+0x56>
  406a12:	b34c      	cbz	r4, 406a68 <memchr+0x88>
  406a14:	7803      	ldrb	r3, [r0, #0]
  406a16:	42ab      	cmp	r3, r5
  406a18:	d00b      	beq.n	406a32 <memchr+0x52>
  406a1a:	4404      	add	r4, r0
  406a1c:	1c43      	adds	r3, r0, #1
  406a1e:	e002      	b.n	406a26 <memchr+0x46>
  406a20:	7802      	ldrb	r2, [r0, #0]
  406a22:	42aa      	cmp	r2, r5
  406a24:	d005      	beq.n	406a32 <memchr+0x52>
  406a26:	429c      	cmp	r4, r3
  406a28:	4618      	mov	r0, r3
  406a2a:	f103 0301 	add.w	r3, r3, #1
  406a2e:	d1f7      	bne.n	406a20 <memchr+0x40>
  406a30:	2000      	movs	r0, #0
  406a32:	bc70      	pop	{r4, r5, r6}
  406a34:	4770      	bx	lr
  406a36:	0209      	lsls	r1, r1, #8
  406a38:	b289      	uxth	r1, r1
  406a3a:	4329      	orrs	r1, r5
  406a3c:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
  406a40:	6803      	ldr	r3, [r0, #0]
  406a42:	4606      	mov	r6, r0
  406a44:	404b      	eors	r3, r1
  406a46:	f1a3 3201 	sub.w	r2, r3, #16843009	; 0x1010101
  406a4a:	ea22 0303 	bic.w	r3, r2, r3
  406a4e:	f013 3f80 	tst.w	r3, #2155905152	; 0x80808080
  406a52:	f100 0004 	add.w	r0, r0, #4
  406a56:	d103      	bne.n	406a60 <memchr+0x80>
  406a58:	3c04      	subs	r4, #4
  406a5a:	2c03      	cmp	r4, #3
  406a5c:	d8f0      	bhi.n	406a40 <memchr+0x60>
  406a5e:	e7d8      	b.n	406a12 <memchr+0x32>
  406a60:	4630      	mov	r0, r6
  406a62:	e7d7      	b.n	406a14 <memchr+0x34>
  406a64:	4614      	mov	r4, r2
  406a66:	e7d2      	b.n	406a0e <memchr+0x2e>
  406a68:	4620      	mov	r0, r4
  406a6a:	e7e2      	b.n	406a32 <memchr+0x52>

00406a6c <memmove>:
  406a6c:	4288      	cmp	r0, r1
  406a6e:	b5f0      	push	{r4, r5, r6, r7, lr}
  406a70:	d90d      	bls.n	406a8e <memmove+0x22>
  406a72:	188b      	adds	r3, r1, r2
  406a74:	4298      	cmp	r0, r3
  406a76:	d20a      	bcs.n	406a8e <memmove+0x22>
  406a78:	1884      	adds	r4, r0, r2
  406a7a:	2a00      	cmp	r2, #0
  406a7c:	d051      	beq.n	406b22 <memmove+0xb6>
  406a7e:	4622      	mov	r2, r4
  406a80:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
  406a84:	4299      	cmp	r1, r3
  406a86:	f802 4d01 	strb.w	r4, [r2, #-1]!
  406a8a:	d1f9      	bne.n	406a80 <memmove+0x14>
  406a8c:	bdf0      	pop	{r4, r5, r6, r7, pc}
  406a8e:	2a0f      	cmp	r2, #15
  406a90:	d948      	bls.n	406b24 <memmove+0xb8>
  406a92:	ea41 0300 	orr.w	r3, r1, r0
  406a96:	079b      	lsls	r3, r3, #30
  406a98:	d146      	bne.n	406b28 <memmove+0xbc>
  406a9a:	4615      	mov	r5, r2
  406a9c:	f100 0410 	add.w	r4, r0, #16
  406aa0:	f101 0310 	add.w	r3, r1, #16
  406aa4:	f853 6c10 	ldr.w	r6, [r3, #-16]
  406aa8:	3d10      	subs	r5, #16
  406aaa:	f844 6c10 	str.w	r6, [r4, #-16]
  406aae:	f853 6c0c 	ldr.w	r6, [r3, #-12]
  406ab2:	2d0f      	cmp	r5, #15
  406ab4:	f844 6c0c 	str.w	r6, [r4, #-12]
  406ab8:	f853 6c08 	ldr.w	r6, [r3, #-8]
  406abc:	f104 0410 	add.w	r4, r4, #16
  406ac0:	f844 6c18 	str.w	r6, [r4, #-24]
  406ac4:	f853 6c04 	ldr.w	r6, [r3, #-4]
  406ac8:	f103 0310 	add.w	r3, r3, #16
  406acc:	f844 6c14 	str.w	r6, [r4, #-20]
  406ad0:	d8e8      	bhi.n	406aa4 <memmove+0x38>
  406ad2:	f1a2 0310 	sub.w	r3, r2, #16
  406ad6:	f023 030f 	bic.w	r3, r3, #15
  406ada:	f002 0e0f 	and.w	lr, r2, #15
  406ade:	3310      	adds	r3, #16
  406ae0:	f1be 0f03 	cmp.w	lr, #3
  406ae4:	4419      	add	r1, r3
  406ae6:	4403      	add	r3, r0
  406ae8:	d921      	bls.n	406b2e <memmove+0xc2>
  406aea:	460e      	mov	r6, r1
  406aec:	4674      	mov	r4, lr
  406aee:	1f1d      	subs	r5, r3, #4
  406af0:	f856 7b04 	ldr.w	r7, [r6], #4
  406af4:	3c04      	subs	r4, #4
  406af6:	2c03      	cmp	r4, #3
  406af8:	f845 7f04 	str.w	r7, [r5, #4]!
  406afc:	d8f8      	bhi.n	406af0 <memmove+0x84>
  406afe:	f1ae 0404 	sub.w	r4, lr, #4
  406b02:	f024 0403 	bic.w	r4, r4, #3
  406b06:	3404      	adds	r4, #4
  406b08:	4421      	add	r1, r4
  406b0a:	4423      	add	r3, r4
  406b0c:	f002 0203 	and.w	r2, r2, #3
  406b10:	b162      	cbz	r2, 406b2c <memmove+0xc0>
  406b12:	3b01      	subs	r3, #1
  406b14:	440a      	add	r2, r1
  406b16:	f811 4b01 	ldrb.w	r4, [r1], #1
  406b1a:	428a      	cmp	r2, r1
  406b1c:	f803 4f01 	strb.w	r4, [r3, #1]!
  406b20:	d1f9      	bne.n	406b16 <memmove+0xaa>
  406b22:	bdf0      	pop	{r4, r5, r6, r7, pc}
  406b24:	4603      	mov	r3, r0
  406b26:	e7f3      	b.n	406b10 <memmove+0xa4>
  406b28:	4603      	mov	r3, r0
  406b2a:	e7f2      	b.n	406b12 <memmove+0xa6>
  406b2c:	bdf0      	pop	{r4, r5, r6, r7, pc}
  406b2e:	4672      	mov	r2, lr
  406b30:	e7ee      	b.n	406b10 <memmove+0xa4>
  406b32:	bf00      	nop

00406b34 <_Balloc>:
  406b34:	6cc3      	ldr	r3, [r0, #76]	; 0x4c
  406b36:	b570      	push	{r4, r5, r6, lr}
  406b38:	4605      	mov	r5, r0
  406b3a:	460c      	mov	r4, r1
  406b3c:	b14b      	cbz	r3, 406b52 <_Balloc+0x1e>
  406b3e:	f853 0024 	ldr.w	r0, [r3, r4, lsl #2]
  406b42:	b180      	cbz	r0, 406b66 <_Balloc+0x32>
  406b44:	6802      	ldr	r2, [r0, #0]
  406b46:	f843 2024 	str.w	r2, [r3, r4, lsl #2]
  406b4a:	2300      	movs	r3, #0
  406b4c:	6103      	str	r3, [r0, #16]
  406b4e:	60c3      	str	r3, [r0, #12]
  406b50:	bd70      	pop	{r4, r5, r6, pc}
  406b52:	2221      	movs	r2, #33	; 0x21
  406b54:	2104      	movs	r1, #4
  406b56:	f000 fe5b 	bl	407810 <_calloc_r>
  406b5a:	64e8      	str	r0, [r5, #76]	; 0x4c
  406b5c:	4603      	mov	r3, r0
  406b5e:	2800      	cmp	r0, #0
  406b60:	d1ed      	bne.n	406b3e <_Balloc+0xa>
  406b62:	2000      	movs	r0, #0
  406b64:	bd70      	pop	{r4, r5, r6, pc}
  406b66:	2101      	movs	r1, #1
  406b68:	fa01 f604 	lsl.w	r6, r1, r4
  406b6c:	1d72      	adds	r2, r6, #5
  406b6e:	4628      	mov	r0, r5
  406b70:	0092      	lsls	r2, r2, #2
  406b72:	f000 fe4d 	bl	407810 <_calloc_r>
  406b76:	2800      	cmp	r0, #0
  406b78:	d0f3      	beq.n	406b62 <_Balloc+0x2e>
  406b7a:	6044      	str	r4, [r0, #4]
  406b7c:	6086      	str	r6, [r0, #8]
  406b7e:	e7e4      	b.n	406b4a <_Balloc+0x16>

00406b80 <_Bfree>:
  406b80:	b131      	cbz	r1, 406b90 <_Bfree+0x10>
  406b82:	6cc3      	ldr	r3, [r0, #76]	; 0x4c
  406b84:	684a      	ldr	r2, [r1, #4]
  406b86:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
  406b8a:	6008      	str	r0, [r1, #0]
  406b8c:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
  406b90:	4770      	bx	lr
  406b92:	bf00      	nop

00406b94 <__multadd>:
  406b94:	b5f0      	push	{r4, r5, r6, r7, lr}
  406b96:	460c      	mov	r4, r1
  406b98:	4605      	mov	r5, r0
  406b9a:	f04f 0e00 	mov.w	lr, #0
  406b9e:	690e      	ldr	r6, [r1, #16]
  406ba0:	b083      	sub	sp, #12
  406ba2:	f101 0714 	add.w	r7, r1, #20
  406ba6:	6838      	ldr	r0, [r7, #0]
  406ba8:	f10e 0e01 	add.w	lr, lr, #1
  406bac:	b281      	uxth	r1, r0
  406bae:	fb02 3301 	mla	r3, r2, r1, r3
  406bb2:	0c01      	lsrs	r1, r0, #16
  406bb4:	0c18      	lsrs	r0, r3, #16
  406bb6:	fb02 0101 	mla	r1, r2, r1, r0
  406bba:	b29b      	uxth	r3, r3
  406bbc:	eb03 4301 	add.w	r3, r3, r1, lsl #16
  406bc0:	4576      	cmp	r6, lr
  406bc2:	f847 3b04 	str.w	r3, [r7], #4
  406bc6:	ea4f 4311 	mov.w	r3, r1, lsr #16
  406bca:	dcec      	bgt.n	406ba6 <__multadd+0x12>
  406bcc:	b13b      	cbz	r3, 406bde <__multadd+0x4a>
  406bce:	68a2      	ldr	r2, [r4, #8]
  406bd0:	4296      	cmp	r6, r2
  406bd2:	da07      	bge.n	406be4 <__multadd+0x50>
  406bd4:	eb04 0286 	add.w	r2, r4, r6, lsl #2
  406bd8:	3601      	adds	r6, #1
  406bda:	6153      	str	r3, [r2, #20]
  406bdc:	6126      	str	r6, [r4, #16]
  406bde:	4620      	mov	r0, r4
  406be0:	b003      	add	sp, #12
  406be2:	bdf0      	pop	{r4, r5, r6, r7, pc}
  406be4:	6861      	ldr	r1, [r4, #4]
  406be6:	4628      	mov	r0, r5
  406be8:	3101      	adds	r1, #1
  406bea:	9301      	str	r3, [sp, #4]
  406bec:	f7ff ffa2 	bl	406b34 <_Balloc>
  406bf0:	4607      	mov	r7, r0
  406bf2:	6922      	ldr	r2, [r4, #16]
  406bf4:	f104 010c 	add.w	r1, r4, #12
  406bf8:	3202      	adds	r2, #2
  406bfa:	0092      	lsls	r2, r2, #2
  406bfc:	300c      	adds	r0, #12
  406bfe:	f7fb fe1d 	bl	40283c <memcpy>
  406c02:	6cea      	ldr	r2, [r5, #76]	; 0x4c
  406c04:	6861      	ldr	r1, [r4, #4]
  406c06:	9b01      	ldr	r3, [sp, #4]
  406c08:	f852 0021 	ldr.w	r0, [r2, r1, lsl #2]
  406c0c:	6020      	str	r0, [r4, #0]
  406c0e:	f842 4021 	str.w	r4, [r2, r1, lsl #2]
  406c12:	463c      	mov	r4, r7
  406c14:	e7de      	b.n	406bd4 <__multadd+0x40>
  406c16:	bf00      	nop

00406c18 <__hi0bits>:
  406c18:	0c02      	lsrs	r2, r0, #16
  406c1a:	0412      	lsls	r2, r2, #16
  406c1c:	4603      	mov	r3, r0
  406c1e:	b9b2      	cbnz	r2, 406c4e <__hi0bits+0x36>
  406c20:	0403      	lsls	r3, r0, #16
  406c22:	2010      	movs	r0, #16
  406c24:	f013 4f7f 	tst.w	r3, #4278190080	; 0xff000000
  406c28:	bf04      	itt	eq
  406c2a:	021b      	lsleq	r3, r3, #8
  406c2c:	3008      	addeq	r0, #8
  406c2e:	f013 4f70 	tst.w	r3, #4026531840	; 0xf0000000
  406c32:	bf04      	itt	eq
  406c34:	011b      	lsleq	r3, r3, #4
  406c36:	3004      	addeq	r0, #4
  406c38:	f013 4f40 	tst.w	r3, #3221225472	; 0xc0000000
  406c3c:	bf04      	itt	eq
  406c3e:	009b      	lsleq	r3, r3, #2
  406c40:	3002      	addeq	r0, #2
  406c42:	2b00      	cmp	r3, #0
  406c44:	db02      	blt.n	406c4c <__hi0bits+0x34>
  406c46:	005b      	lsls	r3, r3, #1
  406c48:	d403      	bmi.n	406c52 <__hi0bits+0x3a>
  406c4a:	2020      	movs	r0, #32
  406c4c:	4770      	bx	lr
  406c4e:	2000      	movs	r0, #0
  406c50:	e7e8      	b.n	406c24 <__hi0bits+0xc>
  406c52:	3001      	adds	r0, #1
  406c54:	4770      	bx	lr
  406c56:	bf00      	nop

00406c58 <__lo0bits>:
  406c58:	6803      	ldr	r3, [r0, #0]
  406c5a:	4601      	mov	r1, r0
  406c5c:	f013 0207 	ands.w	r2, r3, #7
  406c60:	d007      	beq.n	406c72 <__lo0bits+0x1a>
  406c62:	07da      	lsls	r2, r3, #31
  406c64:	d421      	bmi.n	406caa <__lo0bits+0x52>
  406c66:	0798      	lsls	r0, r3, #30
  406c68:	d421      	bmi.n	406cae <__lo0bits+0x56>
  406c6a:	089b      	lsrs	r3, r3, #2
  406c6c:	600b      	str	r3, [r1, #0]
  406c6e:	2002      	movs	r0, #2
  406c70:	4770      	bx	lr
  406c72:	b298      	uxth	r0, r3
  406c74:	b198      	cbz	r0, 406c9e <__lo0bits+0x46>
  406c76:	4610      	mov	r0, r2
  406c78:	f013 0fff 	tst.w	r3, #255	; 0xff
  406c7c:	bf04      	itt	eq
  406c7e:	0a1b      	lsreq	r3, r3, #8
  406c80:	3008      	addeq	r0, #8
  406c82:	071a      	lsls	r2, r3, #28
  406c84:	bf04      	itt	eq
  406c86:	091b      	lsreq	r3, r3, #4
  406c88:	3004      	addeq	r0, #4
  406c8a:	079a      	lsls	r2, r3, #30
  406c8c:	bf04      	itt	eq
  406c8e:	089b      	lsreq	r3, r3, #2
  406c90:	3002      	addeq	r0, #2
  406c92:	07da      	lsls	r2, r3, #31
  406c94:	d407      	bmi.n	406ca6 <__lo0bits+0x4e>
  406c96:	085b      	lsrs	r3, r3, #1
  406c98:	d104      	bne.n	406ca4 <__lo0bits+0x4c>
  406c9a:	2020      	movs	r0, #32
  406c9c:	4770      	bx	lr
  406c9e:	0c1b      	lsrs	r3, r3, #16
  406ca0:	2010      	movs	r0, #16
  406ca2:	e7e9      	b.n	406c78 <__lo0bits+0x20>
  406ca4:	3001      	adds	r0, #1
  406ca6:	600b      	str	r3, [r1, #0]
  406ca8:	4770      	bx	lr
  406caa:	2000      	movs	r0, #0
  406cac:	4770      	bx	lr
  406cae:	085b      	lsrs	r3, r3, #1
  406cb0:	600b      	str	r3, [r1, #0]
  406cb2:	2001      	movs	r0, #1
  406cb4:	4770      	bx	lr
  406cb6:	bf00      	nop

00406cb8 <__i2b>:
  406cb8:	b510      	push	{r4, lr}
  406cba:	460c      	mov	r4, r1
  406cbc:	2101      	movs	r1, #1
  406cbe:	f7ff ff39 	bl	406b34 <_Balloc>
  406cc2:	2201      	movs	r2, #1
  406cc4:	6144      	str	r4, [r0, #20]
  406cc6:	6102      	str	r2, [r0, #16]
  406cc8:	bd10      	pop	{r4, pc}
  406cca:	bf00      	nop

00406ccc <__multiply>:
  406ccc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  406cd0:	690c      	ldr	r4, [r1, #16]
  406cd2:	6915      	ldr	r5, [r2, #16]
  406cd4:	b083      	sub	sp, #12
  406cd6:	42ac      	cmp	r4, r5
  406cd8:	468b      	mov	fp, r1
  406cda:	4616      	mov	r6, r2
  406cdc:	da04      	bge.n	406ce8 <__multiply+0x1c>
  406cde:	4622      	mov	r2, r4
  406ce0:	46b3      	mov	fp, r6
  406ce2:	462c      	mov	r4, r5
  406ce4:	460e      	mov	r6, r1
  406ce6:	4615      	mov	r5, r2
  406ce8:	f8db 3008 	ldr.w	r3, [fp, #8]
  406cec:	eb04 0805 	add.w	r8, r4, r5
  406cf0:	f8db 1004 	ldr.w	r1, [fp, #4]
  406cf4:	4598      	cmp	r8, r3
  406cf6:	bfc8      	it	gt
  406cf8:	3101      	addgt	r1, #1
  406cfa:	f7ff ff1b 	bl	406b34 <_Balloc>
  406cfe:	f100 0914 	add.w	r9, r0, #20
  406d02:	eb09 0a88 	add.w	sl, r9, r8, lsl #2
  406d06:	45d1      	cmp	r9, sl
  406d08:	9000      	str	r0, [sp, #0]
  406d0a:	d205      	bcs.n	406d18 <__multiply+0x4c>
  406d0c:	464b      	mov	r3, r9
  406d0e:	2100      	movs	r1, #0
  406d10:	f843 1b04 	str.w	r1, [r3], #4
  406d14:	459a      	cmp	sl, r3
  406d16:	d8fb      	bhi.n	406d10 <__multiply+0x44>
  406d18:	f106 0c14 	add.w	ip, r6, #20
  406d1c:	eb0c 0385 	add.w	r3, ip, r5, lsl #2
  406d20:	f10b 0b14 	add.w	fp, fp, #20
  406d24:	459c      	cmp	ip, r3
  406d26:	eb0b 0e84 	add.w	lr, fp, r4, lsl #2
  406d2a:	d24b      	bcs.n	406dc4 <__multiply+0xf8>
  406d2c:	f8cd a004 	str.w	sl, [sp, #4]
  406d30:	469a      	mov	sl, r3
  406d32:	f8dc 5000 	ldr.w	r5, [ip]
  406d36:	b2af      	uxth	r7, r5
  406d38:	b1e7      	cbz	r7, 406d74 <__multiply+0xa8>
  406d3a:	464d      	mov	r5, r9
  406d3c:	465e      	mov	r6, fp
  406d3e:	2100      	movs	r1, #0
  406d40:	f856 2b04 	ldr.w	r2, [r6], #4
  406d44:	6828      	ldr	r0, [r5, #0]
  406d46:	b293      	uxth	r3, r2
  406d48:	b284      	uxth	r4, r0
  406d4a:	0c12      	lsrs	r2, r2, #16
  406d4c:	fb07 4303 	mla	r3, r7, r3, r4
  406d50:	0c00      	lsrs	r0, r0, #16
  406d52:	fb07 0202 	mla	r2, r7, r2, r0
  406d56:	440b      	add	r3, r1
  406d58:	eb02 4113 	add.w	r1, r2, r3, lsr #16
  406d5c:	b29b      	uxth	r3, r3
  406d5e:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
  406d62:	45b6      	cmp	lr, r6
  406d64:	f845 3b04 	str.w	r3, [r5], #4
  406d68:	ea4f 4111 	mov.w	r1, r1, lsr #16
  406d6c:	d8e8      	bhi.n	406d40 <__multiply+0x74>
  406d6e:	6029      	str	r1, [r5, #0]
  406d70:	f8dc 5000 	ldr.w	r5, [ip]
  406d74:	0c2d      	lsrs	r5, r5, #16
  406d76:	d01d      	beq.n	406db4 <__multiply+0xe8>
  406d78:	f8d9 3000 	ldr.w	r3, [r9]
  406d7c:	4648      	mov	r0, r9
  406d7e:	461c      	mov	r4, r3
  406d80:	4659      	mov	r1, fp
  406d82:	2200      	movs	r2, #0
  406d84:	880e      	ldrh	r6, [r1, #0]
  406d86:	0c24      	lsrs	r4, r4, #16
  406d88:	fb05 4406 	mla	r4, r5, r6, r4
  406d8c:	b29b      	uxth	r3, r3
  406d8e:	4422      	add	r2, r4
  406d90:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
  406d94:	f840 3b04 	str.w	r3, [r0], #4
  406d98:	f851 3b04 	ldr.w	r3, [r1], #4
  406d9c:	6804      	ldr	r4, [r0, #0]
  406d9e:	0c1b      	lsrs	r3, r3, #16
  406da0:	b2a6      	uxth	r6, r4
  406da2:	fb05 6303 	mla	r3, r5, r3, r6
  406da6:	458e      	cmp	lr, r1
  406da8:	eb03 4312 	add.w	r3, r3, r2, lsr #16
  406dac:	ea4f 4213 	mov.w	r2, r3, lsr #16
  406db0:	d8e8      	bhi.n	406d84 <__multiply+0xb8>
  406db2:	6003      	str	r3, [r0, #0]
  406db4:	f10c 0c04 	add.w	ip, ip, #4
  406db8:	45e2      	cmp	sl, ip
  406dba:	f109 0904 	add.w	r9, r9, #4
  406dbe:	d8b8      	bhi.n	406d32 <__multiply+0x66>
  406dc0:	f8dd a004 	ldr.w	sl, [sp, #4]
  406dc4:	f1b8 0f00 	cmp.w	r8, #0
  406dc8:	dd0b      	ble.n	406de2 <__multiply+0x116>
  406dca:	f85a 3c04 	ldr.w	r3, [sl, #-4]
  406dce:	f1aa 0a04 	sub.w	sl, sl, #4
  406dd2:	b11b      	cbz	r3, 406ddc <__multiply+0x110>
  406dd4:	e005      	b.n	406de2 <__multiply+0x116>
  406dd6:	f85a 3d04 	ldr.w	r3, [sl, #-4]!
  406dda:	b913      	cbnz	r3, 406de2 <__multiply+0x116>
  406ddc:	f1b8 0801 	subs.w	r8, r8, #1
  406de0:	d1f9      	bne.n	406dd6 <__multiply+0x10a>
  406de2:	9800      	ldr	r0, [sp, #0]
  406de4:	f8c0 8010 	str.w	r8, [r0, #16]
  406de8:	b003      	add	sp, #12
  406dea:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  406dee:	bf00      	nop

00406df0 <__pow5mult>:
  406df0:	f012 0303 	ands.w	r3, r2, #3
  406df4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  406df8:	4614      	mov	r4, r2
  406dfa:	4607      	mov	r7, r0
  406dfc:	d12e      	bne.n	406e5c <__pow5mult+0x6c>
  406dfe:	460d      	mov	r5, r1
  406e00:	10a4      	asrs	r4, r4, #2
  406e02:	d01c      	beq.n	406e3e <__pow5mult+0x4e>
  406e04:	6cbe      	ldr	r6, [r7, #72]	; 0x48
  406e06:	b396      	cbz	r6, 406e6e <__pow5mult+0x7e>
  406e08:	07e3      	lsls	r3, r4, #31
  406e0a:	f04f 0800 	mov.w	r8, #0
  406e0e:	d406      	bmi.n	406e1e <__pow5mult+0x2e>
  406e10:	1064      	asrs	r4, r4, #1
  406e12:	d014      	beq.n	406e3e <__pow5mult+0x4e>
  406e14:	6830      	ldr	r0, [r6, #0]
  406e16:	b1a8      	cbz	r0, 406e44 <__pow5mult+0x54>
  406e18:	4606      	mov	r6, r0
  406e1a:	07e3      	lsls	r3, r4, #31
  406e1c:	d5f8      	bpl.n	406e10 <__pow5mult+0x20>
  406e1e:	4632      	mov	r2, r6
  406e20:	4629      	mov	r1, r5
  406e22:	4638      	mov	r0, r7
  406e24:	f7ff ff52 	bl	406ccc <__multiply>
  406e28:	b1b5      	cbz	r5, 406e58 <__pow5mult+0x68>
  406e2a:	686a      	ldr	r2, [r5, #4]
  406e2c:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
  406e2e:	1064      	asrs	r4, r4, #1
  406e30:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
  406e34:	6029      	str	r1, [r5, #0]
  406e36:	f843 5022 	str.w	r5, [r3, r2, lsl #2]
  406e3a:	4605      	mov	r5, r0
  406e3c:	d1ea      	bne.n	406e14 <__pow5mult+0x24>
  406e3e:	4628      	mov	r0, r5
  406e40:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  406e44:	4632      	mov	r2, r6
  406e46:	4631      	mov	r1, r6
  406e48:	4638      	mov	r0, r7
  406e4a:	f7ff ff3f 	bl	406ccc <__multiply>
  406e4e:	6030      	str	r0, [r6, #0]
  406e50:	f8c0 8000 	str.w	r8, [r0]
  406e54:	4606      	mov	r6, r0
  406e56:	e7e0      	b.n	406e1a <__pow5mult+0x2a>
  406e58:	4605      	mov	r5, r0
  406e5a:	e7d9      	b.n	406e10 <__pow5mult+0x20>
  406e5c:	4a0b      	ldr	r2, [pc, #44]	; (406e8c <__pow5mult+0x9c>)
  406e5e:	3b01      	subs	r3, #1
  406e60:	f852 2023 	ldr.w	r2, [r2, r3, lsl #2]
  406e64:	2300      	movs	r3, #0
  406e66:	f7ff fe95 	bl	406b94 <__multadd>
  406e6a:	4605      	mov	r5, r0
  406e6c:	e7c8      	b.n	406e00 <__pow5mult+0x10>
  406e6e:	2101      	movs	r1, #1
  406e70:	4638      	mov	r0, r7
  406e72:	f7ff fe5f 	bl	406b34 <_Balloc>
  406e76:	f240 2171 	movw	r1, #625	; 0x271
  406e7a:	2201      	movs	r2, #1
  406e7c:	2300      	movs	r3, #0
  406e7e:	6141      	str	r1, [r0, #20]
  406e80:	6102      	str	r2, [r0, #16]
  406e82:	4606      	mov	r6, r0
  406e84:	64b8      	str	r0, [r7, #72]	; 0x48
  406e86:	6003      	str	r3, [r0, #0]
  406e88:	e7be      	b.n	406e08 <__pow5mult+0x18>
  406e8a:	bf00      	nop
  406e8c:	00409070 	.word	0x00409070

00406e90 <__lshift>:
  406e90:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
  406e94:	690b      	ldr	r3, [r1, #16]
  406e96:	1154      	asrs	r4, r2, #5
  406e98:	eb04 0803 	add.w	r8, r4, r3
  406e9c:	688b      	ldr	r3, [r1, #8]
  406e9e:	f108 0501 	add.w	r5, r8, #1
  406ea2:	429d      	cmp	r5, r3
  406ea4:	460e      	mov	r6, r1
  406ea6:	4691      	mov	r9, r2
  406ea8:	4607      	mov	r7, r0
  406eaa:	6849      	ldr	r1, [r1, #4]
  406eac:	dd04      	ble.n	406eb8 <__lshift+0x28>
  406eae:	005b      	lsls	r3, r3, #1
  406eb0:	429d      	cmp	r5, r3
  406eb2:	f101 0101 	add.w	r1, r1, #1
  406eb6:	dcfa      	bgt.n	406eae <__lshift+0x1e>
  406eb8:	4638      	mov	r0, r7
  406eba:	f7ff fe3b 	bl	406b34 <_Balloc>
  406ebe:	2c00      	cmp	r4, #0
  406ec0:	f100 0314 	add.w	r3, r0, #20
  406ec4:	dd06      	ble.n	406ed4 <__lshift+0x44>
  406ec6:	2100      	movs	r1, #0
  406ec8:	eb03 0284 	add.w	r2, r3, r4, lsl #2
  406ecc:	f843 1b04 	str.w	r1, [r3], #4
  406ed0:	429a      	cmp	r2, r3
  406ed2:	d1fb      	bne.n	406ecc <__lshift+0x3c>
  406ed4:	6934      	ldr	r4, [r6, #16]
  406ed6:	f106 0114 	add.w	r1, r6, #20
  406eda:	f019 091f 	ands.w	r9, r9, #31
  406ede:	eb01 0e84 	add.w	lr, r1, r4, lsl #2
  406ee2:	d01d      	beq.n	406f20 <__lshift+0x90>
  406ee4:	2200      	movs	r2, #0
  406ee6:	f1c9 0c20 	rsb	ip, r9, #32
  406eea:	680c      	ldr	r4, [r1, #0]
  406eec:	fa04 f409 	lsl.w	r4, r4, r9
  406ef0:	4314      	orrs	r4, r2
  406ef2:	f843 4b04 	str.w	r4, [r3], #4
  406ef6:	f851 2b04 	ldr.w	r2, [r1], #4
  406efa:	458e      	cmp	lr, r1
  406efc:	fa22 f20c 	lsr.w	r2, r2, ip
  406f00:	d8f3      	bhi.n	406eea <__lshift+0x5a>
  406f02:	601a      	str	r2, [r3, #0]
  406f04:	b10a      	cbz	r2, 406f0a <__lshift+0x7a>
  406f06:	f108 0502 	add.w	r5, r8, #2
  406f0a:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
  406f0c:	6872      	ldr	r2, [r6, #4]
  406f0e:	3d01      	subs	r5, #1
  406f10:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
  406f14:	6105      	str	r5, [r0, #16]
  406f16:	6031      	str	r1, [r6, #0]
  406f18:	f843 6022 	str.w	r6, [r3, r2, lsl #2]
  406f1c:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  406f20:	3b04      	subs	r3, #4
  406f22:	f851 2b04 	ldr.w	r2, [r1], #4
  406f26:	458e      	cmp	lr, r1
  406f28:	f843 2f04 	str.w	r2, [r3, #4]!
  406f2c:	d8f9      	bhi.n	406f22 <__lshift+0x92>
  406f2e:	e7ec      	b.n	406f0a <__lshift+0x7a>

00406f30 <__mcmp>:
  406f30:	b430      	push	{r4, r5}
  406f32:	690b      	ldr	r3, [r1, #16]
  406f34:	4605      	mov	r5, r0
  406f36:	6900      	ldr	r0, [r0, #16]
  406f38:	1ac0      	subs	r0, r0, r3
  406f3a:	d10f      	bne.n	406f5c <__mcmp+0x2c>
  406f3c:	009b      	lsls	r3, r3, #2
  406f3e:	3514      	adds	r5, #20
  406f40:	3114      	adds	r1, #20
  406f42:	4419      	add	r1, r3
  406f44:	442b      	add	r3, r5
  406f46:	e001      	b.n	406f4c <__mcmp+0x1c>
  406f48:	429d      	cmp	r5, r3
  406f4a:	d207      	bcs.n	406f5c <__mcmp+0x2c>
  406f4c:	f853 4d04 	ldr.w	r4, [r3, #-4]!
  406f50:	f851 2d04 	ldr.w	r2, [r1, #-4]!
  406f54:	4294      	cmp	r4, r2
  406f56:	d0f7      	beq.n	406f48 <__mcmp+0x18>
  406f58:	d302      	bcc.n	406f60 <__mcmp+0x30>
  406f5a:	2001      	movs	r0, #1
  406f5c:	bc30      	pop	{r4, r5}
  406f5e:	4770      	bx	lr
  406f60:	f04f 30ff 	mov.w	r0, #4294967295
  406f64:	e7fa      	b.n	406f5c <__mcmp+0x2c>
  406f66:	bf00      	nop

00406f68 <__mdiff>:
  406f68:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
  406f6c:	690c      	ldr	r4, [r1, #16]
  406f6e:	4689      	mov	r9, r1
  406f70:	6911      	ldr	r1, [r2, #16]
  406f72:	4692      	mov	sl, r2
  406f74:	1a64      	subs	r4, r4, r1
  406f76:	2c00      	cmp	r4, #0
  406f78:	d117      	bne.n	406faa <__mdiff+0x42>
  406f7a:	0089      	lsls	r1, r1, #2
  406f7c:	f109 0714 	add.w	r7, r9, #20
  406f80:	f102 0614 	add.w	r6, r2, #20
  406f84:	187b      	adds	r3, r7, r1
  406f86:	4431      	add	r1, r6
  406f88:	e001      	b.n	406f8e <__mdiff+0x26>
  406f8a:	429f      	cmp	r7, r3
  406f8c:	d265      	bcs.n	40705a <__mdiff+0xf2>
  406f8e:	f853 5d04 	ldr.w	r5, [r3, #-4]!
  406f92:	f851 2d04 	ldr.w	r2, [r1, #-4]!
  406f96:	4295      	cmp	r5, r2
  406f98:	d0f7      	beq.n	406f8a <__mdiff+0x22>
  406f9a:	d267      	bcs.n	40706c <__mdiff+0x104>
  406f9c:	464b      	mov	r3, r9
  406f9e:	46bb      	mov	fp, r7
  406fa0:	46d1      	mov	r9, sl
  406fa2:	4637      	mov	r7, r6
  406fa4:	469a      	mov	sl, r3
  406fa6:	2401      	movs	r4, #1
  406fa8:	e005      	b.n	406fb6 <__mdiff+0x4e>
  406faa:	db61      	blt.n	407070 <__mdiff+0x108>
  406fac:	2400      	movs	r4, #0
  406fae:	f109 0714 	add.w	r7, r9, #20
  406fb2:	f10a 0b14 	add.w	fp, sl, #20
  406fb6:	f8d9 1004 	ldr.w	r1, [r9, #4]
  406fba:	f7ff fdbb 	bl	406b34 <_Balloc>
  406fbe:	465d      	mov	r5, fp
  406fc0:	f04f 0800 	mov.w	r8, #0
  406fc4:	f8d9 e010 	ldr.w	lr, [r9, #16]
  406fc8:	f8da 3010 	ldr.w	r3, [sl, #16]
  406fcc:	463e      	mov	r6, r7
  406fce:	60c4      	str	r4, [r0, #12]
  406fd0:	eb0b 0c83 	add.w	ip, fp, r3, lsl #2
  406fd4:	eb07 078e 	add.w	r7, r7, lr, lsl #2
  406fd8:	f100 0414 	add.w	r4, r0, #20
  406fdc:	f856 9b04 	ldr.w	r9, [r6], #4
  406fe0:	f855 2b04 	ldr.w	r2, [r5], #4
  406fe4:	fa1f f389 	uxth.w	r3, r9
  406fe8:	4443      	add	r3, r8
  406fea:	fa1f f882 	uxth.w	r8, r2
  406fee:	0c12      	lsrs	r2, r2, #16
  406ff0:	eba3 0308 	sub.w	r3, r3, r8
  406ff4:	ebc2 4219 	rsb	r2, r2, r9, lsr #16
  406ff8:	eb02 4223 	add.w	r2, r2, r3, asr #16
  406ffc:	b29b      	uxth	r3, r3
  406ffe:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
  407002:	45ac      	cmp	ip, r5
  407004:	f844 3b04 	str.w	r3, [r4], #4
  407008:	ea4f 4822 	mov.w	r8, r2, asr #16
  40700c:	d8e6      	bhi.n	406fdc <__mdiff+0x74>
  40700e:	42b7      	cmp	r7, r6
  407010:	d917      	bls.n	407042 <__mdiff+0xda>
  407012:	46a4      	mov	ip, r4
  407014:	4635      	mov	r5, r6
  407016:	f855 3b04 	ldr.w	r3, [r5], #4
  40701a:	b299      	uxth	r1, r3
  40701c:	4441      	add	r1, r8
  40701e:	140a      	asrs	r2, r1, #16
  407020:	eb02 4213 	add.w	r2, r2, r3, lsr #16
  407024:	b289      	uxth	r1, r1
  407026:	ea41 4302 	orr.w	r3, r1, r2, lsl #16
  40702a:	42af      	cmp	r7, r5
  40702c:	f84c 3b04 	str.w	r3, [ip], #4
  407030:	ea4f 4822 	mov.w	r8, r2, asr #16
  407034:	d8ef      	bhi.n	407016 <__mdiff+0xae>
  407036:	43f6      	mvns	r6, r6
  407038:	4437      	add	r7, r6
  40703a:	f027 0703 	bic.w	r7, r7, #3
  40703e:	3704      	adds	r7, #4
  407040:	443c      	add	r4, r7
  407042:	3c04      	subs	r4, #4
  407044:	b92b      	cbnz	r3, 407052 <__mdiff+0xea>
  407046:	f854 3d04 	ldr.w	r3, [r4, #-4]!
  40704a:	f10e 3eff 	add.w	lr, lr, #4294967295
  40704e:	2b00      	cmp	r3, #0
  407050:	d0f9      	beq.n	407046 <__mdiff+0xde>
  407052:	f8c0 e010 	str.w	lr, [r0, #16]
  407056:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
  40705a:	2100      	movs	r1, #0
  40705c:	f7ff fd6a 	bl	406b34 <_Balloc>
  407060:	2201      	movs	r2, #1
  407062:	2300      	movs	r3, #0
  407064:	6102      	str	r2, [r0, #16]
  407066:	6143      	str	r3, [r0, #20]
  407068:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
  40706c:	46b3      	mov	fp, r6
  40706e:	e7a2      	b.n	406fb6 <__mdiff+0x4e>
  407070:	464b      	mov	r3, r9
  407072:	f109 0b14 	add.w	fp, r9, #20
  407076:	f102 0714 	add.w	r7, r2, #20
  40707a:	4691      	mov	r9, r2
  40707c:	2401      	movs	r4, #1
  40707e:	469a      	mov	sl, r3
  407080:	e799      	b.n	406fb6 <__mdiff+0x4e>
  407082:	bf00      	nop

00407084 <__d2b>:
  407084:	b5f0      	push	{r4, r5, r6, r7, lr}
  407086:	2101      	movs	r1, #1
  407088:	b083      	sub	sp, #12
  40708a:	461c      	mov	r4, r3
  40708c:	f3c3 550a 	ubfx	r5, r3, #20, #11
  407090:	4616      	mov	r6, r2
  407092:	f7ff fd4f 	bl	406b34 <_Balloc>
  407096:	f3c4 0413 	ubfx	r4, r4, #0, #20
  40709a:	4607      	mov	r7, r0
  40709c:	b10d      	cbz	r5, 4070a2 <__d2b+0x1e>
  40709e:	f444 1480 	orr.w	r4, r4, #1048576	; 0x100000
  4070a2:	9401      	str	r4, [sp, #4]
  4070a4:	b306      	cbz	r6, 4070e8 <__d2b+0x64>
  4070a6:	a802      	add	r0, sp, #8
  4070a8:	f840 6d08 	str.w	r6, [r0, #-8]!
  4070ac:	f7ff fdd4 	bl	406c58 <__lo0bits>
  4070b0:	2800      	cmp	r0, #0
  4070b2:	d130      	bne.n	407116 <__d2b+0x92>
  4070b4:	e89d 000c 	ldmia.w	sp, {r2, r3}
  4070b8:	617a      	str	r2, [r7, #20]
  4070ba:	2b00      	cmp	r3, #0
  4070bc:	bf0c      	ite	eq
  4070be:	2101      	moveq	r1, #1
  4070c0:	2102      	movne	r1, #2
  4070c2:	61bb      	str	r3, [r7, #24]
  4070c4:	6139      	str	r1, [r7, #16]
  4070c6:	b9d5      	cbnz	r5, 4070fe <__d2b+0x7a>
  4070c8:	9a08      	ldr	r2, [sp, #32]
  4070ca:	eb07 0381 	add.w	r3, r7, r1, lsl #2
  4070ce:	f2a0 4032 	subw	r0, r0, #1074	; 0x432
  4070d2:	6010      	str	r0, [r2, #0]
  4070d4:	6918      	ldr	r0, [r3, #16]
  4070d6:	f7ff fd9f 	bl	406c18 <__hi0bits>
  4070da:	9b09      	ldr	r3, [sp, #36]	; 0x24
  4070dc:	ebc0 1041 	rsb	r0, r0, r1, lsl #5
  4070e0:	6018      	str	r0, [r3, #0]
  4070e2:	4638      	mov	r0, r7
  4070e4:	b003      	add	sp, #12
  4070e6:	bdf0      	pop	{r4, r5, r6, r7, pc}
  4070e8:	a801      	add	r0, sp, #4
  4070ea:	f7ff fdb5 	bl	406c58 <__lo0bits>
  4070ee:	2201      	movs	r2, #1
  4070f0:	9b01      	ldr	r3, [sp, #4]
  4070f2:	4611      	mov	r1, r2
  4070f4:	3020      	adds	r0, #32
  4070f6:	613a      	str	r2, [r7, #16]
  4070f8:	617b      	str	r3, [r7, #20]
  4070fa:	2d00      	cmp	r5, #0
  4070fc:	d0e4      	beq.n	4070c8 <__d2b+0x44>
  4070fe:	f2a5 4333 	subw	r3, r5, #1075	; 0x433
  407102:	9a08      	ldr	r2, [sp, #32]
  407104:	4403      	add	r3, r0
  407106:	6013      	str	r3, [r2, #0]
  407108:	9b09      	ldr	r3, [sp, #36]	; 0x24
  40710a:	f1c0 0035 	rsb	r0, r0, #53	; 0x35
  40710e:	6018      	str	r0, [r3, #0]
  407110:	4638      	mov	r0, r7
  407112:	b003      	add	sp, #12
  407114:	bdf0      	pop	{r4, r5, r6, r7, pc}
  407116:	9b01      	ldr	r3, [sp, #4]
  407118:	f1c0 0220 	rsb	r2, r0, #32
  40711c:	9900      	ldr	r1, [sp, #0]
  40711e:	fa03 f202 	lsl.w	r2, r3, r2
  407122:	430a      	orrs	r2, r1
  407124:	40c3      	lsrs	r3, r0
  407126:	9301      	str	r3, [sp, #4]
  407128:	617a      	str	r2, [r7, #20]
  40712a:	e7c6      	b.n	4070ba <__d2b+0x36>

0040712c <_realloc_r>:
  40712c:	2900      	cmp	r1, #0
  40712e:	f000 8094 	beq.w	40725a <_realloc_r+0x12e>
  407132:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  407136:	460c      	mov	r4, r1
  407138:	4615      	mov	r5, r2
  40713a:	b083      	sub	sp, #12
  40713c:	4680      	mov	r8, r0
  40713e:	f105 060b 	add.w	r6, r5, #11
  407142:	f7fb fc3f 	bl	4029c4 <__malloc_lock>
  407146:	f854 ec04 	ldr.w	lr, [r4, #-4]
  40714a:	2e16      	cmp	r6, #22
  40714c:	f02e 0703 	bic.w	r7, lr, #3
  407150:	f1a4 0908 	sub.w	r9, r4, #8
  407154:	d83c      	bhi.n	4071d0 <_realloc_r+0xa4>
  407156:	2210      	movs	r2, #16
  407158:	4616      	mov	r6, r2
  40715a:	42b5      	cmp	r5, r6
  40715c:	d83d      	bhi.n	4071da <_realloc_r+0xae>
  40715e:	4297      	cmp	r7, r2
  407160:	da43      	bge.n	4071ea <_realloc_r+0xbe>
  407162:	4bc6      	ldr	r3, [pc, #792]	; (40747c <_realloc_r+0x350>)
  407164:	eb09 0007 	add.w	r0, r9, r7
  407168:	6899      	ldr	r1, [r3, #8]
  40716a:	4288      	cmp	r0, r1
  40716c:	f000 80c3 	beq.w	4072f6 <_realloc_r+0x1ca>
  407170:	6843      	ldr	r3, [r0, #4]
  407172:	f023 0101 	bic.w	r1, r3, #1
  407176:	4401      	add	r1, r0
  407178:	6849      	ldr	r1, [r1, #4]
  40717a:	07c9      	lsls	r1, r1, #31
  40717c:	d54d      	bpl.n	40721a <_realloc_r+0xee>
  40717e:	f01e 0f01 	tst.w	lr, #1
  407182:	f000 809b 	beq.w	4072bc <_realloc_r+0x190>
  407186:	4629      	mov	r1, r5
  407188:	4640      	mov	r0, r8
  40718a:	f7fb f885 	bl	402298 <_malloc_r>
  40718e:	4605      	mov	r5, r0
  407190:	2800      	cmp	r0, #0
  407192:	d03b      	beq.n	40720c <_realloc_r+0xe0>
  407194:	f854 3c04 	ldr.w	r3, [r4, #-4]
  407198:	f1a0 0208 	sub.w	r2, r0, #8
  40719c:	f023 0301 	bic.w	r3, r3, #1
  4071a0:	444b      	add	r3, r9
  4071a2:	429a      	cmp	r2, r3
  4071a4:	f000 812b 	beq.w	4073fe <_realloc_r+0x2d2>
  4071a8:	1f3a      	subs	r2, r7, #4
  4071aa:	2a24      	cmp	r2, #36	; 0x24
  4071ac:	f200 8118 	bhi.w	4073e0 <_realloc_r+0x2b4>
  4071b0:	2a13      	cmp	r2, #19
  4071b2:	f200 80eb 	bhi.w	40738c <_realloc_r+0x260>
  4071b6:	4603      	mov	r3, r0
  4071b8:	4622      	mov	r2, r4
  4071ba:	6811      	ldr	r1, [r2, #0]
  4071bc:	6019      	str	r1, [r3, #0]
  4071be:	6851      	ldr	r1, [r2, #4]
  4071c0:	6059      	str	r1, [r3, #4]
  4071c2:	6892      	ldr	r2, [r2, #8]
  4071c4:	609a      	str	r2, [r3, #8]
  4071c6:	4621      	mov	r1, r4
  4071c8:	4640      	mov	r0, r8
  4071ca:	f7ff f8dd 	bl	406388 <_free_r>
  4071ce:	e01d      	b.n	40720c <_realloc_r+0xe0>
  4071d0:	f026 0607 	bic.w	r6, r6, #7
  4071d4:	2e00      	cmp	r6, #0
  4071d6:	4632      	mov	r2, r6
  4071d8:	dabf      	bge.n	40715a <_realloc_r+0x2e>
  4071da:	2500      	movs	r5, #0
  4071dc:	230c      	movs	r3, #12
  4071de:	4628      	mov	r0, r5
  4071e0:	f8c8 3000 	str.w	r3, [r8]
  4071e4:	b003      	add	sp, #12
  4071e6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  4071ea:	4625      	mov	r5, r4
  4071ec:	1bbb      	subs	r3, r7, r6
  4071ee:	2b0f      	cmp	r3, #15
  4071f0:	f8d9 2004 	ldr.w	r2, [r9, #4]
  4071f4:	d81d      	bhi.n	407232 <_realloc_r+0x106>
  4071f6:	f002 0201 	and.w	r2, r2, #1
  4071fa:	433a      	orrs	r2, r7
  4071fc:	eb09 0107 	add.w	r1, r9, r7
  407200:	f8c9 2004 	str.w	r2, [r9, #4]
  407204:	684b      	ldr	r3, [r1, #4]
  407206:	f043 0301 	orr.w	r3, r3, #1
  40720a:	604b      	str	r3, [r1, #4]
  40720c:	4640      	mov	r0, r8
  40720e:	f7fb fbdb 	bl	4029c8 <__malloc_unlock>
  407212:	4628      	mov	r0, r5
  407214:	b003      	add	sp, #12
  407216:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  40721a:	f023 0303 	bic.w	r3, r3, #3
  40721e:	18f9      	adds	r1, r7, r3
  407220:	4291      	cmp	r1, r2
  407222:	db1d      	blt.n	407260 <_realloc_r+0x134>
  407224:	68c3      	ldr	r3, [r0, #12]
  407226:	6882      	ldr	r2, [r0, #8]
  407228:	4625      	mov	r5, r4
  40722a:	60d3      	str	r3, [r2, #12]
  40722c:	460f      	mov	r7, r1
  40722e:	609a      	str	r2, [r3, #8]
  407230:	e7dc      	b.n	4071ec <_realloc_r+0xc0>
  407232:	f002 0201 	and.w	r2, r2, #1
  407236:	eb09 0106 	add.w	r1, r9, r6
  40723a:	f043 0301 	orr.w	r3, r3, #1
  40723e:	4332      	orrs	r2, r6
  407240:	f8c9 2004 	str.w	r2, [r9, #4]
  407244:	444f      	add	r7, r9
  407246:	604b      	str	r3, [r1, #4]
  407248:	687b      	ldr	r3, [r7, #4]
  40724a:	3108      	adds	r1, #8
  40724c:	f043 0301 	orr.w	r3, r3, #1
  407250:	607b      	str	r3, [r7, #4]
  407252:	4640      	mov	r0, r8
  407254:	f7ff f898 	bl	406388 <_free_r>
  407258:	e7d8      	b.n	40720c <_realloc_r+0xe0>
  40725a:	4611      	mov	r1, r2
  40725c:	f7fb b81c 	b.w	402298 <_malloc_r>
  407260:	f01e 0f01 	tst.w	lr, #1
  407264:	d18f      	bne.n	407186 <_realloc_r+0x5a>
  407266:	f854 1c08 	ldr.w	r1, [r4, #-8]
  40726a:	eba9 0a01 	sub.w	sl, r9, r1
  40726e:	f8da 1004 	ldr.w	r1, [sl, #4]
  407272:	f021 0103 	bic.w	r1, r1, #3
  407276:	440b      	add	r3, r1
  407278:	443b      	add	r3, r7
  40727a:	4293      	cmp	r3, r2
  40727c:	db26      	blt.n	4072cc <_realloc_r+0x1a0>
  40727e:	4655      	mov	r5, sl
  407280:	68c1      	ldr	r1, [r0, #12]
  407282:	6880      	ldr	r0, [r0, #8]
  407284:	1f3a      	subs	r2, r7, #4
  407286:	60c1      	str	r1, [r0, #12]
  407288:	6088      	str	r0, [r1, #8]
  40728a:	f855 0f08 	ldr.w	r0, [r5, #8]!
  40728e:	f8da 100c 	ldr.w	r1, [sl, #12]
  407292:	2a24      	cmp	r2, #36	; 0x24
  407294:	60c1      	str	r1, [r0, #12]
  407296:	6088      	str	r0, [r1, #8]
  407298:	d826      	bhi.n	4072e8 <_realloc_r+0x1bc>
  40729a:	2a13      	cmp	r2, #19
  40729c:	f240 8081 	bls.w	4073a2 <_realloc_r+0x276>
  4072a0:	6821      	ldr	r1, [r4, #0]
  4072a2:	2a1b      	cmp	r2, #27
  4072a4:	f8ca 1008 	str.w	r1, [sl, #8]
  4072a8:	6861      	ldr	r1, [r4, #4]
  4072aa:	f8ca 100c 	str.w	r1, [sl, #12]
  4072ae:	f200 80ad 	bhi.w	40740c <_realloc_r+0x2e0>
  4072b2:	f104 0008 	add.w	r0, r4, #8
  4072b6:	f10a 0210 	add.w	r2, sl, #16
  4072ba:	e074      	b.n	4073a6 <_realloc_r+0x27a>
  4072bc:	f854 3c08 	ldr.w	r3, [r4, #-8]
  4072c0:	eba9 0a03 	sub.w	sl, r9, r3
  4072c4:	f8da 1004 	ldr.w	r1, [sl, #4]
  4072c8:	f021 0103 	bic.w	r1, r1, #3
  4072cc:	187b      	adds	r3, r7, r1
  4072ce:	4293      	cmp	r3, r2
  4072d0:	f6ff af59 	blt.w	407186 <_realloc_r+0x5a>
  4072d4:	4655      	mov	r5, sl
  4072d6:	f8da 100c 	ldr.w	r1, [sl, #12]
  4072da:	f855 0f08 	ldr.w	r0, [r5, #8]!
  4072de:	1f3a      	subs	r2, r7, #4
  4072e0:	2a24      	cmp	r2, #36	; 0x24
  4072e2:	60c1      	str	r1, [r0, #12]
  4072e4:	6088      	str	r0, [r1, #8]
  4072e6:	d9d8      	bls.n	40729a <_realloc_r+0x16e>
  4072e8:	4621      	mov	r1, r4
  4072ea:	4628      	mov	r0, r5
  4072ec:	461f      	mov	r7, r3
  4072ee:	46d1      	mov	r9, sl
  4072f0:	f7ff fbbc 	bl	406a6c <memmove>
  4072f4:	e77a      	b.n	4071ec <_realloc_r+0xc0>
  4072f6:	6841      	ldr	r1, [r0, #4]
  4072f8:	f106 0010 	add.w	r0, r6, #16
  4072fc:	f021 0b03 	bic.w	fp, r1, #3
  407300:	44bb      	add	fp, r7
  407302:	4583      	cmp	fp, r0
  407304:	da58      	bge.n	4073b8 <_realloc_r+0x28c>
  407306:	f01e 0f01 	tst.w	lr, #1
  40730a:	f47f af3c 	bne.w	407186 <_realloc_r+0x5a>
  40730e:	f854 1c08 	ldr.w	r1, [r4, #-8]
  407312:	eba9 0a01 	sub.w	sl, r9, r1
  407316:	f8da 1004 	ldr.w	r1, [sl, #4]
  40731a:	f021 0103 	bic.w	r1, r1, #3
  40731e:	448b      	add	fp, r1
  407320:	4558      	cmp	r0, fp
  407322:	dcd3      	bgt.n	4072cc <_realloc_r+0x1a0>
  407324:	4655      	mov	r5, sl
  407326:	f8da 100c 	ldr.w	r1, [sl, #12]
  40732a:	f855 0f08 	ldr.w	r0, [r5, #8]!
  40732e:	1f3a      	subs	r2, r7, #4
  407330:	2a24      	cmp	r2, #36	; 0x24
  407332:	60c1      	str	r1, [r0, #12]
  407334:	6088      	str	r0, [r1, #8]
  407336:	f200 808d 	bhi.w	407454 <_realloc_r+0x328>
  40733a:	2a13      	cmp	r2, #19
  40733c:	f240 8087 	bls.w	40744e <_realloc_r+0x322>
  407340:	6821      	ldr	r1, [r4, #0]
  407342:	2a1b      	cmp	r2, #27
  407344:	f8ca 1008 	str.w	r1, [sl, #8]
  407348:	6861      	ldr	r1, [r4, #4]
  40734a:	f8ca 100c 	str.w	r1, [sl, #12]
  40734e:	f200 8088 	bhi.w	407462 <_realloc_r+0x336>
  407352:	f104 0108 	add.w	r1, r4, #8
  407356:	f10a 0210 	add.w	r2, sl, #16
  40735a:	6808      	ldr	r0, [r1, #0]
  40735c:	6010      	str	r0, [r2, #0]
  40735e:	6848      	ldr	r0, [r1, #4]
  407360:	6050      	str	r0, [r2, #4]
  407362:	6889      	ldr	r1, [r1, #8]
  407364:	6091      	str	r1, [r2, #8]
  407366:	ebab 0206 	sub.w	r2, fp, r6
  40736a:	eb0a 0106 	add.w	r1, sl, r6
  40736e:	f042 0201 	orr.w	r2, r2, #1
  407372:	6099      	str	r1, [r3, #8]
  407374:	604a      	str	r2, [r1, #4]
  407376:	f8da 3004 	ldr.w	r3, [sl, #4]
  40737a:	4640      	mov	r0, r8
  40737c:	f003 0301 	and.w	r3, r3, #1
  407380:	431e      	orrs	r6, r3
  407382:	f8ca 6004 	str.w	r6, [sl, #4]
  407386:	f7fb fb1f 	bl	4029c8 <__malloc_unlock>
  40738a:	e742      	b.n	407212 <_realloc_r+0xe6>
  40738c:	6823      	ldr	r3, [r4, #0]
  40738e:	2a1b      	cmp	r2, #27
  407390:	6003      	str	r3, [r0, #0]
  407392:	6863      	ldr	r3, [r4, #4]
  407394:	6043      	str	r3, [r0, #4]
  407396:	d827      	bhi.n	4073e8 <_realloc_r+0x2bc>
  407398:	f100 0308 	add.w	r3, r0, #8
  40739c:	f104 0208 	add.w	r2, r4, #8
  4073a0:	e70b      	b.n	4071ba <_realloc_r+0x8e>
  4073a2:	4620      	mov	r0, r4
  4073a4:	462a      	mov	r2, r5
  4073a6:	6801      	ldr	r1, [r0, #0]
  4073a8:	461f      	mov	r7, r3
  4073aa:	6011      	str	r1, [r2, #0]
  4073ac:	6841      	ldr	r1, [r0, #4]
  4073ae:	46d1      	mov	r9, sl
  4073b0:	6051      	str	r1, [r2, #4]
  4073b2:	6883      	ldr	r3, [r0, #8]
  4073b4:	6093      	str	r3, [r2, #8]
  4073b6:	e719      	b.n	4071ec <_realloc_r+0xc0>
  4073b8:	ebab 0b06 	sub.w	fp, fp, r6
  4073bc:	eb09 0106 	add.w	r1, r9, r6
  4073c0:	f04b 0201 	orr.w	r2, fp, #1
  4073c4:	6099      	str	r1, [r3, #8]
  4073c6:	604a      	str	r2, [r1, #4]
  4073c8:	f854 3c04 	ldr.w	r3, [r4, #-4]
  4073cc:	4640      	mov	r0, r8
  4073ce:	f003 0301 	and.w	r3, r3, #1
  4073d2:	431e      	orrs	r6, r3
  4073d4:	f844 6c04 	str.w	r6, [r4, #-4]
  4073d8:	f7fb faf6 	bl	4029c8 <__malloc_unlock>
  4073dc:	4625      	mov	r5, r4
  4073de:	e718      	b.n	407212 <_realloc_r+0xe6>
  4073e0:	4621      	mov	r1, r4
  4073e2:	f7ff fb43 	bl	406a6c <memmove>
  4073e6:	e6ee      	b.n	4071c6 <_realloc_r+0x9a>
  4073e8:	68a3      	ldr	r3, [r4, #8]
  4073ea:	2a24      	cmp	r2, #36	; 0x24
  4073ec:	6083      	str	r3, [r0, #8]
  4073ee:	68e3      	ldr	r3, [r4, #12]
  4073f0:	60c3      	str	r3, [r0, #12]
  4073f2:	d018      	beq.n	407426 <_realloc_r+0x2fa>
  4073f4:	f100 0310 	add.w	r3, r0, #16
  4073f8:	f104 0210 	add.w	r2, r4, #16
  4073fc:	e6dd      	b.n	4071ba <_realloc_r+0x8e>
  4073fe:	f850 3c04 	ldr.w	r3, [r0, #-4]
  407402:	4625      	mov	r5, r4
  407404:	f023 0303 	bic.w	r3, r3, #3
  407408:	441f      	add	r7, r3
  40740a:	e6ef      	b.n	4071ec <_realloc_r+0xc0>
  40740c:	68a1      	ldr	r1, [r4, #8]
  40740e:	2a24      	cmp	r2, #36	; 0x24
  407410:	f8ca 1010 	str.w	r1, [sl, #16]
  407414:	68e1      	ldr	r1, [r4, #12]
  407416:	f8ca 1014 	str.w	r1, [sl, #20]
  40741a:	d00d      	beq.n	407438 <_realloc_r+0x30c>
  40741c:	f104 0010 	add.w	r0, r4, #16
  407420:	f10a 0218 	add.w	r2, sl, #24
  407424:	e7bf      	b.n	4073a6 <_realloc_r+0x27a>
  407426:	6922      	ldr	r2, [r4, #16]
  407428:	f100 0318 	add.w	r3, r0, #24
  40742c:	6102      	str	r2, [r0, #16]
  40742e:	6961      	ldr	r1, [r4, #20]
  407430:	f104 0218 	add.w	r2, r4, #24
  407434:	6141      	str	r1, [r0, #20]
  407436:	e6c0      	b.n	4071ba <_realloc_r+0x8e>
  407438:	6922      	ldr	r2, [r4, #16]
  40743a:	f104 0018 	add.w	r0, r4, #24
  40743e:	f8ca 2018 	str.w	r2, [sl, #24]
  407442:	6961      	ldr	r1, [r4, #20]
  407444:	f10a 0220 	add.w	r2, sl, #32
  407448:	f8ca 101c 	str.w	r1, [sl, #28]
  40744c:	e7ab      	b.n	4073a6 <_realloc_r+0x27a>
  40744e:	4621      	mov	r1, r4
  407450:	462a      	mov	r2, r5
  407452:	e782      	b.n	40735a <_realloc_r+0x22e>
  407454:	4621      	mov	r1, r4
  407456:	4628      	mov	r0, r5
  407458:	9301      	str	r3, [sp, #4]
  40745a:	f7ff fb07 	bl	406a6c <memmove>
  40745e:	9b01      	ldr	r3, [sp, #4]
  407460:	e781      	b.n	407366 <_realloc_r+0x23a>
  407462:	68a1      	ldr	r1, [r4, #8]
  407464:	2a24      	cmp	r2, #36	; 0x24
  407466:	f8ca 1010 	str.w	r1, [sl, #16]
  40746a:	68e1      	ldr	r1, [r4, #12]
  40746c:	f8ca 1014 	str.w	r1, [sl, #20]
  407470:	d006      	beq.n	407480 <_realloc_r+0x354>
  407472:	f104 0110 	add.w	r1, r4, #16
  407476:	f10a 0218 	add.w	r2, sl, #24
  40747a:	e76e      	b.n	40735a <_realloc_r+0x22e>
  40747c:	20000530 	.word	0x20000530
  407480:	6922      	ldr	r2, [r4, #16]
  407482:	f104 0118 	add.w	r1, r4, #24
  407486:	f8ca 2018 	str.w	r2, [sl, #24]
  40748a:	6960      	ldr	r0, [r4, #20]
  40748c:	f10a 0220 	add.w	r2, sl, #32
  407490:	f8ca 001c 	str.w	r0, [sl, #28]
  407494:	e761      	b.n	40735a <_realloc_r+0x22e>
  407496:	bf00      	nop

00407498 <__sread>:
  407498:	b510      	push	{r4, lr}
  40749a:	460c      	mov	r4, r1
  40749c:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
  4074a0:	f000 fa74 	bl	40798c <_read_r>
  4074a4:	2800      	cmp	r0, #0
  4074a6:	db03      	blt.n	4074b0 <__sread+0x18>
  4074a8:	6d23      	ldr	r3, [r4, #80]	; 0x50
  4074aa:	4403      	add	r3, r0
  4074ac:	6523      	str	r3, [r4, #80]	; 0x50
  4074ae:	bd10      	pop	{r4, pc}
  4074b0:	89a3      	ldrh	r3, [r4, #12]
  4074b2:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
  4074b6:	81a3      	strh	r3, [r4, #12]
  4074b8:	bd10      	pop	{r4, pc}
  4074ba:	bf00      	nop

004074bc <__swrite>:
  4074bc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  4074c0:	460c      	mov	r4, r1
  4074c2:	f9b1 100c 	ldrsh.w	r1, [r1, #12]
  4074c6:	461f      	mov	r7, r3
  4074c8:	05cb      	lsls	r3, r1, #23
  4074ca:	4616      	mov	r6, r2
  4074cc:	4605      	mov	r5, r0
  4074ce:	d507      	bpl.n	4074e0 <__swrite+0x24>
  4074d0:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
  4074d4:	2302      	movs	r3, #2
  4074d6:	2200      	movs	r2, #0
  4074d8:	f000 fa42 	bl	407960 <_lseek_r>
  4074dc:	f9b4 100c 	ldrsh.w	r1, [r4, #12]
  4074e0:	f421 5180 	bic.w	r1, r1, #4096	; 0x1000
  4074e4:	81a1      	strh	r1, [r4, #12]
  4074e6:	463b      	mov	r3, r7
  4074e8:	4632      	mov	r2, r6
  4074ea:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
  4074ee:	4628      	mov	r0, r5
  4074f0:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
  4074f4:	f000 b920 	b.w	407738 <_write_r>

004074f8 <__sseek>:
  4074f8:	b510      	push	{r4, lr}
  4074fa:	460c      	mov	r4, r1
  4074fc:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
  407500:	f000 fa2e 	bl	407960 <_lseek_r>
  407504:	89a3      	ldrh	r3, [r4, #12]
  407506:	1c42      	adds	r2, r0, #1
  407508:	bf0e      	itee	eq
  40750a:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
  40750e:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
  407512:	6520      	strne	r0, [r4, #80]	; 0x50
  407514:	81a3      	strh	r3, [r4, #12]
  407516:	bd10      	pop	{r4, pc}

00407518 <__sclose>:
  407518:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
  40751c:	f000 b9a8 	b.w	407870 <_close_r>

00407520 <__ssprint_r>:
  407520:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  407524:	6893      	ldr	r3, [r2, #8]
  407526:	b083      	sub	sp, #12
  407528:	4690      	mov	r8, r2
  40752a:	2b00      	cmp	r3, #0
  40752c:	d070      	beq.n	407610 <__ssprint_r+0xf0>
  40752e:	4682      	mov	sl, r0
  407530:	460c      	mov	r4, r1
  407532:	6817      	ldr	r7, [r2, #0]
  407534:	688d      	ldr	r5, [r1, #8]
  407536:	6808      	ldr	r0, [r1, #0]
  407538:	e042      	b.n	4075c0 <__ssprint_r+0xa0>
  40753a:	89a3      	ldrh	r3, [r4, #12]
  40753c:	f413 6f90 	tst.w	r3, #1152	; 0x480
  407540:	d02e      	beq.n	4075a0 <__ssprint_r+0x80>
  407542:	6965      	ldr	r5, [r4, #20]
  407544:	6921      	ldr	r1, [r4, #16]
  407546:	eb05 0545 	add.w	r5, r5, r5, lsl #1
  40754a:	eba0 0b01 	sub.w	fp, r0, r1
  40754e:	eb05 75d5 	add.w	r5, r5, r5, lsr #31
  407552:	f10b 0001 	add.w	r0, fp, #1
  407556:	106d      	asrs	r5, r5, #1
  407558:	4430      	add	r0, r6
  40755a:	42a8      	cmp	r0, r5
  40755c:	462a      	mov	r2, r5
  40755e:	bf84      	itt	hi
  407560:	4605      	movhi	r5, r0
  407562:	462a      	movhi	r2, r5
  407564:	055b      	lsls	r3, r3, #21
  407566:	d538      	bpl.n	4075da <__ssprint_r+0xba>
  407568:	4611      	mov	r1, r2
  40756a:	4650      	mov	r0, sl
  40756c:	f7fa fe94 	bl	402298 <_malloc_r>
  407570:	2800      	cmp	r0, #0
  407572:	d03c      	beq.n	4075ee <__ssprint_r+0xce>
  407574:	465a      	mov	r2, fp
  407576:	6921      	ldr	r1, [r4, #16]
  407578:	9001      	str	r0, [sp, #4]
  40757a:	f7fb f95f 	bl	40283c <memcpy>
  40757e:	89a2      	ldrh	r2, [r4, #12]
  407580:	9b01      	ldr	r3, [sp, #4]
  407582:	f422 6290 	bic.w	r2, r2, #1152	; 0x480
  407586:	f042 0280 	orr.w	r2, r2, #128	; 0x80
  40758a:	81a2      	strh	r2, [r4, #12]
  40758c:	eba5 020b 	sub.w	r2, r5, fp
  407590:	eb03 000b 	add.w	r0, r3, fp
  407594:	6165      	str	r5, [r4, #20]
  407596:	46b3      	mov	fp, r6
  407598:	4635      	mov	r5, r6
  40759a:	6123      	str	r3, [r4, #16]
  40759c:	6020      	str	r0, [r4, #0]
  40759e:	60a2      	str	r2, [r4, #8]
  4075a0:	465a      	mov	r2, fp
  4075a2:	4649      	mov	r1, r9
  4075a4:	f7ff fa62 	bl	406a6c <memmove>
  4075a8:	f8d8 3008 	ldr.w	r3, [r8, #8]
  4075ac:	68a2      	ldr	r2, [r4, #8]
  4075ae:	6820      	ldr	r0, [r4, #0]
  4075b0:	1b55      	subs	r5, r2, r5
  4075b2:	4458      	add	r0, fp
  4075b4:	1b9e      	subs	r6, r3, r6
  4075b6:	60a5      	str	r5, [r4, #8]
  4075b8:	6020      	str	r0, [r4, #0]
  4075ba:	f8c8 6008 	str.w	r6, [r8, #8]
  4075be:	b33e      	cbz	r6, 407610 <__ssprint_r+0xf0>
  4075c0:	687e      	ldr	r6, [r7, #4]
  4075c2:	463b      	mov	r3, r7
  4075c4:	3708      	adds	r7, #8
  4075c6:	2e00      	cmp	r6, #0
  4075c8:	d0fa      	beq.n	4075c0 <__ssprint_r+0xa0>
  4075ca:	42ae      	cmp	r6, r5
  4075cc:	f8d3 9000 	ldr.w	r9, [r3]
  4075d0:	46ab      	mov	fp, r5
  4075d2:	d2b2      	bcs.n	40753a <__ssprint_r+0x1a>
  4075d4:	4635      	mov	r5, r6
  4075d6:	46b3      	mov	fp, r6
  4075d8:	e7e2      	b.n	4075a0 <__ssprint_r+0x80>
  4075da:	4650      	mov	r0, sl
  4075dc:	f7ff fda6 	bl	40712c <_realloc_r>
  4075e0:	4603      	mov	r3, r0
  4075e2:	2800      	cmp	r0, #0
  4075e4:	d1d2      	bne.n	40758c <__ssprint_r+0x6c>
  4075e6:	6921      	ldr	r1, [r4, #16]
  4075e8:	4650      	mov	r0, sl
  4075ea:	f7fe fecd 	bl	406388 <_free_r>
  4075ee:	230c      	movs	r3, #12
  4075f0:	2200      	movs	r2, #0
  4075f2:	f04f 30ff 	mov.w	r0, #4294967295
  4075f6:	f8ca 3000 	str.w	r3, [sl]
  4075fa:	89a3      	ldrh	r3, [r4, #12]
  4075fc:	f043 0340 	orr.w	r3, r3, #64	; 0x40
  407600:	81a3      	strh	r3, [r4, #12]
  407602:	f8c8 2008 	str.w	r2, [r8, #8]
  407606:	f8c8 2004 	str.w	r2, [r8, #4]
  40760a:	b003      	add	sp, #12
  40760c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  407610:	2000      	movs	r0, #0
  407612:	f8c8 0004 	str.w	r0, [r8, #4]
  407616:	b003      	add	sp, #12
  407618:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0040761c <__swbuf_r>:
  40761c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  40761e:	460d      	mov	r5, r1
  407620:	4614      	mov	r4, r2
  407622:	4606      	mov	r6, r0
  407624:	b110      	cbz	r0, 40762c <__swbuf_r+0x10>
  407626:	6b83      	ldr	r3, [r0, #56]	; 0x38
  407628:	2b00      	cmp	r3, #0
  40762a:	d04b      	beq.n	4076c4 <__swbuf_r+0xa8>
  40762c:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
  407630:	69a3      	ldr	r3, [r4, #24]
  407632:	b291      	uxth	r1, r2
  407634:	0708      	lsls	r0, r1, #28
  407636:	60a3      	str	r3, [r4, #8]
  407638:	d539      	bpl.n	4076ae <__swbuf_r+0x92>
  40763a:	6923      	ldr	r3, [r4, #16]
  40763c:	2b00      	cmp	r3, #0
  40763e:	d036      	beq.n	4076ae <__swbuf_r+0x92>
  407640:	b2ed      	uxtb	r5, r5
  407642:	0489      	lsls	r1, r1, #18
  407644:	462f      	mov	r7, r5
  407646:	d515      	bpl.n	407674 <__swbuf_r+0x58>
  407648:	6822      	ldr	r2, [r4, #0]
  40764a:	6961      	ldr	r1, [r4, #20]
  40764c:	1ad3      	subs	r3, r2, r3
  40764e:	428b      	cmp	r3, r1
  407650:	da1c      	bge.n	40768c <__swbuf_r+0x70>
  407652:	3301      	adds	r3, #1
  407654:	68a1      	ldr	r1, [r4, #8]
  407656:	1c50      	adds	r0, r2, #1
  407658:	3901      	subs	r1, #1
  40765a:	60a1      	str	r1, [r4, #8]
  40765c:	6020      	str	r0, [r4, #0]
  40765e:	7015      	strb	r5, [r2, #0]
  407660:	6962      	ldr	r2, [r4, #20]
  407662:	429a      	cmp	r2, r3
  407664:	d01a      	beq.n	40769c <__swbuf_r+0x80>
  407666:	89a3      	ldrh	r3, [r4, #12]
  407668:	07db      	lsls	r3, r3, #31
  40766a:	d501      	bpl.n	407670 <__swbuf_r+0x54>
  40766c:	2d0a      	cmp	r5, #10
  40766e:	d015      	beq.n	40769c <__swbuf_r+0x80>
  407670:	4638      	mov	r0, r7
  407672:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  407674:	6e61      	ldr	r1, [r4, #100]	; 0x64
  407676:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
  40767a:	f421 5100 	bic.w	r1, r1, #8192	; 0x2000
  40767e:	81a2      	strh	r2, [r4, #12]
  407680:	6822      	ldr	r2, [r4, #0]
  407682:	6661      	str	r1, [r4, #100]	; 0x64
  407684:	6961      	ldr	r1, [r4, #20]
  407686:	1ad3      	subs	r3, r2, r3
  407688:	428b      	cmp	r3, r1
  40768a:	dbe2      	blt.n	407652 <__swbuf_r+0x36>
  40768c:	4621      	mov	r1, r4
  40768e:	4630      	mov	r0, r6
  407690:	f7fe fd14 	bl	4060bc <_fflush_r>
  407694:	b940      	cbnz	r0, 4076a8 <__swbuf_r+0x8c>
  407696:	2301      	movs	r3, #1
  407698:	6822      	ldr	r2, [r4, #0]
  40769a:	e7db      	b.n	407654 <__swbuf_r+0x38>
  40769c:	4621      	mov	r1, r4
  40769e:	4630      	mov	r0, r6
  4076a0:	f7fe fd0c 	bl	4060bc <_fflush_r>
  4076a4:	2800      	cmp	r0, #0
  4076a6:	d0e3      	beq.n	407670 <__swbuf_r+0x54>
  4076a8:	f04f 37ff 	mov.w	r7, #4294967295
  4076ac:	e7e0      	b.n	407670 <__swbuf_r+0x54>
  4076ae:	4621      	mov	r1, r4
  4076b0:	4630      	mov	r0, r6
  4076b2:	f7fd fc3b 	bl	404f2c <__swsetup_r>
  4076b6:	2800      	cmp	r0, #0
  4076b8:	d1f6      	bne.n	4076a8 <__swbuf_r+0x8c>
  4076ba:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
  4076be:	6923      	ldr	r3, [r4, #16]
  4076c0:	b291      	uxth	r1, r2
  4076c2:	e7bd      	b.n	407640 <__swbuf_r+0x24>
  4076c4:	f7fe fd8e 	bl	4061e4 <__sinit>
  4076c8:	e7b0      	b.n	40762c <__swbuf_r+0x10>
  4076ca:	bf00      	nop

004076cc <_wcrtomb_r>:
  4076cc:	b5f0      	push	{r4, r5, r6, r7, lr}
  4076ce:	4606      	mov	r6, r0
  4076d0:	b085      	sub	sp, #20
  4076d2:	461f      	mov	r7, r3
  4076d4:	b189      	cbz	r1, 4076fa <_wcrtomb_r+0x2e>
  4076d6:	4c10      	ldr	r4, [pc, #64]	; (407718 <_wcrtomb_r+0x4c>)
  4076d8:	4d10      	ldr	r5, [pc, #64]	; (40771c <_wcrtomb_r+0x50>)
  4076da:	6824      	ldr	r4, [r4, #0]
  4076dc:	6b64      	ldr	r4, [r4, #52]	; 0x34
  4076de:	2c00      	cmp	r4, #0
  4076e0:	bf08      	it	eq
  4076e2:	462c      	moveq	r4, r5
  4076e4:	f8d4 40e0 	ldr.w	r4, [r4, #224]	; 0xe0
  4076e8:	47a0      	blx	r4
  4076ea:	1c43      	adds	r3, r0, #1
  4076ec:	d103      	bne.n	4076f6 <_wcrtomb_r+0x2a>
  4076ee:	2200      	movs	r2, #0
  4076f0:	238a      	movs	r3, #138	; 0x8a
  4076f2:	603a      	str	r2, [r7, #0]
  4076f4:	6033      	str	r3, [r6, #0]
  4076f6:	b005      	add	sp, #20
  4076f8:	bdf0      	pop	{r4, r5, r6, r7, pc}
  4076fa:	460c      	mov	r4, r1
  4076fc:	4a06      	ldr	r2, [pc, #24]	; (407718 <_wcrtomb_r+0x4c>)
  4076fe:	4d07      	ldr	r5, [pc, #28]	; (40771c <_wcrtomb_r+0x50>)
  407700:	6811      	ldr	r1, [r2, #0]
  407702:	4622      	mov	r2, r4
  407704:	6b4c      	ldr	r4, [r1, #52]	; 0x34
  407706:	a901      	add	r1, sp, #4
  407708:	2c00      	cmp	r4, #0
  40770a:	bf08      	it	eq
  40770c:	462c      	moveq	r4, r5
  40770e:	f8d4 40e0 	ldr.w	r4, [r4, #224]	; 0xe0
  407712:	47a0      	blx	r4
  407714:	e7e9      	b.n	4076ea <_wcrtomb_r+0x1e>
  407716:	bf00      	nop
  407718:	20000100 	.word	0x20000100
  40771c:	20000940 	.word	0x20000940

00407720 <__ascii_wctomb>:
  407720:	b119      	cbz	r1, 40772a <__ascii_wctomb+0xa>
  407722:	2aff      	cmp	r2, #255	; 0xff
  407724:	d803      	bhi.n	40772e <__ascii_wctomb+0xe>
  407726:	700a      	strb	r2, [r1, #0]
  407728:	2101      	movs	r1, #1
  40772a:	4608      	mov	r0, r1
  40772c:	4770      	bx	lr
  40772e:	238a      	movs	r3, #138	; 0x8a
  407730:	f04f 31ff 	mov.w	r1, #4294967295
  407734:	6003      	str	r3, [r0, #0]
  407736:	e7f8      	b.n	40772a <__ascii_wctomb+0xa>

00407738 <_write_r>:
  407738:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  40773a:	460e      	mov	r6, r1
  40773c:	2500      	movs	r5, #0
  40773e:	4c08      	ldr	r4, [pc, #32]	; (407760 <_write_r+0x28>)
  407740:	4611      	mov	r1, r2
  407742:	4607      	mov	r7, r0
  407744:	461a      	mov	r2, r3
  407746:	4630      	mov	r0, r6
  407748:	6025      	str	r5, [r4, #0]
  40774a:	f7f8 fdc3 	bl	4002d4 <_write>
  40774e:	1c43      	adds	r3, r0, #1
  407750:	d000      	beq.n	407754 <_write_r+0x1c>
  407752:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  407754:	6823      	ldr	r3, [r4, #0]
  407756:	2b00      	cmp	r3, #0
  407758:	d0fb      	beq.n	407752 <_write_r+0x1a>
  40775a:	603b      	str	r3, [r7, #0]
  40775c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  40775e:	bf00      	nop
  407760:	20000f34 	.word	0x20000f34

00407764 <__register_exitproc>:
  407764:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
  407768:	4c27      	ldr	r4, [pc, #156]	; (407808 <__register_exitproc+0xa4>)
  40776a:	4607      	mov	r7, r0
  40776c:	6826      	ldr	r6, [r4, #0]
  40776e:	4688      	mov	r8, r1
  407770:	f8d6 4148 	ldr.w	r4, [r6, #328]	; 0x148
  407774:	4692      	mov	sl, r2
  407776:	4699      	mov	r9, r3
  407778:	2c00      	cmp	r4, #0
  40777a:	d03c      	beq.n	4077f6 <__register_exitproc+0x92>
  40777c:	6865      	ldr	r5, [r4, #4]
  40777e:	2d1f      	cmp	r5, #31
  407780:	dc1a      	bgt.n	4077b8 <__register_exitproc+0x54>
  407782:	f105 0e01 	add.w	lr, r5, #1
  407786:	b17f      	cbz	r7, 4077a8 <__register_exitproc+0x44>
  407788:	2001      	movs	r0, #1
  40778a:	eb04 0385 	add.w	r3, r4, r5, lsl #2
  40778e:	f8c3 a088 	str.w	sl, [r3, #136]	; 0x88
  407792:	f8d4 1188 	ldr.w	r1, [r4, #392]	; 0x188
  407796:	fa00 f205 	lsl.w	r2, r0, r5
  40779a:	4311      	orrs	r1, r2
  40779c:	2f02      	cmp	r7, #2
  40779e:	f8c4 1188 	str.w	r1, [r4, #392]	; 0x188
  4077a2:	f8c3 9108 	str.w	r9, [r3, #264]	; 0x108
  4077a6:	d020      	beq.n	4077ea <__register_exitproc+0x86>
  4077a8:	3502      	adds	r5, #2
  4077aa:	f8c4 e004 	str.w	lr, [r4, #4]
  4077ae:	2000      	movs	r0, #0
  4077b0:	f844 8025 	str.w	r8, [r4, r5, lsl #2]
  4077b4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  4077b8:	4b14      	ldr	r3, [pc, #80]	; (40780c <__register_exitproc+0xa8>)
  4077ba:	b30b      	cbz	r3, 407800 <__register_exitproc+0x9c>
  4077bc:	f44f 70c8 	mov.w	r0, #400	; 0x190
  4077c0:	f7fa fd5a 	bl	402278 <malloc>
  4077c4:	4604      	mov	r4, r0
  4077c6:	b1d8      	cbz	r0, 407800 <__register_exitproc+0x9c>
  4077c8:	2000      	movs	r0, #0
  4077ca:	f8d6 3148 	ldr.w	r3, [r6, #328]	; 0x148
  4077ce:	f04f 0e01 	mov.w	lr, #1
  4077d2:	6060      	str	r0, [r4, #4]
  4077d4:	6023      	str	r3, [r4, #0]
  4077d6:	4605      	mov	r5, r0
  4077d8:	f8c6 4148 	str.w	r4, [r6, #328]	; 0x148
  4077dc:	f8c4 0188 	str.w	r0, [r4, #392]	; 0x188
  4077e0:	f8c4 018c 	str.w	r0, [r4, #396]	; 0x18c
  4077e4:	2f00      	cmp	r7, #0
  4077e6:	d0df      	beq.n	4077a8 <__register_exitproc+0x44>
  4077e8:	e7ce      	b.n	407788 <__register_exitproc+0x24>
  4077ea:	f8d4 318c 	ldr.w	r3, [r4, #396]	; 0x18c
  4077ee:	431a      	orrs	r2, r3
  4077f0:	f8c4 218c 	str.w	r2, [r4, #396]	; 0x18c
  4077f4:	e7d8      	b.n	4077a8 <__register_exitproc+0x44>
  4077f6:	f506 74a6 	add.w	r4, r6, #332	; 0x14c
  4077fa:	f8c6 4148 	str.w	r4, [r6, #328]	; 0x148
  4077fe:	e7bd      	b.n	40777c <__register_exitproc+0x18>
  407800:	f04f 30ff 	mov.w	r0, #4294967295
  407804:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  407808:	00408ed8 	.word	0x00408ed8
  40780c:	00402279 	.word	0x00402279

00407810 <_calloc_r>:
  407810:	b510      	push	{r4, lr}
  407812:	fb02 f101 	mul.w	r1, r2, r1
  407816:	f7fa fd3f 	bl	402298 <_malloc_r>
  40781a:	4604      	mov	r4, r0
  40781c:	b1d8      	cbz	r0, 407856 <_calloc_r+0x46>
  40781e:	f850 2c04 	ldr.w	r2, [r0, #-4]
  407822:	f022 0203 	bic.w	r2, r2, #3
  407826:	3a04      	subs	r2, #4
  407828:	2a24      	cmp	r2, #36	; 0x24
  40782a:	d818      	bhi.n	40785e <_calloc_r+0x4e>
  40782c:	2a13      	cmp	r2, #19
  40782e:	d914      	bls.n	40785a <_calloc_r+0x4a>
  407830:	2300      	movs	r3, #0
  407832:	2a1b      	cmp	r2, #27
  407834:	6003      	str	r3, [r0, #0]
  407836:	6043      	str	r3, [r0, #4]
  407838:	d916      	bls.n	407868 <_calloc_r+0x58>
  40783a:	2a24      	cmp	r2, #36	; 0x24
  40783c:	6083      	str	r3, [r0, #8]
  40783e:	60c3      	str	r3, [r0, #12]
  407840:	bf11      	iteee	ne
  407842:	f100 0210 	addne.w	r2, r0, #16
  407846:	6103      	streq	r3, [r0, #16]
  407848:	6143      	streq	r3, [r0, #20]
  40784a:	f100 0218 	addeq.w	r2, r0, #24
  40784e:	2300      	movs	r3, #0
  407850:	6013      	str	r3, [r2, #0]
  407852:	6053      	str	r3, [r2, #4]
  407854:	6093      	str	r3, [r2, #8]
  407856:	4620      	mov	r0, r4
  407858:	bd10      	pop	{r4, pc}
  40785a:	4602      	mov	r2, r0
  40785c:	e7f7      	b.n	40784e <_calloc_r+0x3e>
  40785e:	2100      	movs	r1, #0
  407860:	f7fb f862 	bl	402928 <memset>
  407864:	4620      	mov	r0, r4
  407866:	bd10      	pop	{r4, pc}
  407868:	f100 0208 	add.w	r2, r0, #8
  40786c:	e7ef      	b.n	40784e <_calloc_r+0x3e>
  40786e:	bf00      	nop

00407870 <_close_r>:
  407870:	b538      	push	{r3, r4, r5, lr}
  407872:	2300      	movs	r3, #0
  407874:	4c06      	ldr	r4, [pc, #24]	; (407890 <_close_r+0x20>)
  407876:	4605      	mov	r5, r0
  407878:	4608      	mov	r0, r1
  40787a:	6023      	str	r3, [r4, #0]
  40787c:	f7f9 fd52 	bl	401324 <_close>
  407880:	1c43      	adds	r3, r0, #1
  407882:	d000      	beq.n	407886 <_close_r+0x16>
  407884:	bd38      	pop	{r3, r4, r5, pc}
  407886:	6823      	ldr	r3, [r4, #0]
  407888:	2b00      	cmp	r3, #0
  40788a:	d0fb      	beq.n	407884 <_close_r+0x14>
  40788c:	602b      	str	r3, [r5, #0]
  40788e:	bd38      	pop	{r3, r4, r5, pc}
  407890:	20000f34 	.word	0x20000f34

00407894 <_fclose_r>:
  407894:	b570      	push	{r4, r5, r6, lr}
  407896:	b139      	cbz	r1, 4078a8 <_fclose_r+0x14>
  407898:	4605      	mov	r5, r0
  40789a:	460c      	mov	r4, r1
  40789c:	b108      	cbz	r0, 4078a2 <_fclose_r+0xe>
  40789e:	6b83      	ldr	r3, [r0, #56]	; 0x38
  4078a0:	b383      	cbz	r3, 407904 <_fclose_r+0x70>
  4078a2:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  4078a6:	b913      	cbnz	r3, 4078ae <_fclose_r+0x1a>
  4078a8:	2600      	movs	r6, #0
  4078aa:	4630      	mov	r0, r6
  4078ac:	bd70      	pop	{r4, r5, r6, pc}
  4078ae:	4621      	mov	r1, r4
  4078b0:	4628      	mov	r0, r5
  4078b2:	f7fe fb67 	bl	405f84 <__sflush_r>
  4078b6:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
  4078b8:	4606      	mov	r6, r0
  4078ba:	b133      	cbz	r3, 4078ca <_fclose_r+0x36>
  4078bc:	69e1      	ldr	r1, [r4, #28]
  4078be:	4628      	mov	r0, r5
  4078c0:	4798      	blx	r3
  4078c2:	2800      	cmp	r0, #0
  4078c4:	bfb8      	it	lt
  4078c6:	f04f 36ff 	movlt.w	r6, #4294967295
  4078ca:	89a3      	ldrh	r3, [r4, #12]
  4078cc:	061b      	lsls	r3, r3, #24
  4078ce:	d41c      	bmi.n	40790a <_fclose_r+0x76>
  4078d0:	6b21      	ldr	r1, [r4, #48]	; 0x30
  4078d2:	b141      	cbz	r1, 4078e6 <_fclose_r+0x52>
  4078d4:	f104 0340 	add.w	r3, r4, #64	; 0x40
  4078d8:	4299      	cmp	r1, r3
  4078da:	d002      	beq.n	4078e2 <_fclose_r+0x4e>
  4078dc:	4628      	mov	r0, r5
  4078de:	f7fe fd53 	bl	406388 <_free_r>
  4078e2:	2300      	movs	r3, #0
  4078e4:	6323      	str	r3, [r4, #48]	; 0x30
  4078e6:	6c61      	ldr	r1, [r4, #68]	; 0x44
  4078e8:	b121      	cbz	r1, 4078f4 <_fclose_r+0x60>
  4078ea:	4628      	mov	r0, r5
  4078ec:	f7fe fd4c 	bl	406388 <_free_r>
  4078f0:	2300      	movs	r3, #0
  4078f2:	6463      	str	r3, [r4, #68]	; 0x44
  4078f4:	f7fe fc7c 	bl	4061f0 <__sfp_lock_acquire>
  4078f8:	2300      	movs	r3, #0
  4078fa:	81a3      	strh	r3, [r4, #12]
  4078fc:	f7fe fc7a 	bl	4061f4 <__sfp_lock_release>
  407900:	4630      	mov	r0, r6
  407902:	bd70      	pop	{r4, r5, r6, pc}
  407904:	f7fe fc6e 	bl	4061e4 <__sinit>
  407908:	e7cb      	b.n	4078a2 <_fclose_r+0xe>
  40790a:	6921      	ldr	r1, [r4, #16]
  40790c:	4628      	mov	r0, r5
  40790e:	f7fe fd3b 	bl	406388 <_free_r>
  407912:	e7dd      	b.n	4078d0 <_fclose_r+0x3c>

00407914 <_fstat_r>:
  407914:	b570      	push	{r4, r5, r6, lr}
  407916:	460d      	mov	r5, r1
  407918:	2300      	movs	r3, #0
  40791a:	4c07      	ldr	r4, [pc, #28]	; (407938 <_fstat_r+0x24>)
  40791c:	4606      	mov	r6, r0
  40791e:	4611      	mov	r1, r2
  407920:	4628      	mov	r0, r5
  407922:	6023      	str	r3, [r4, #0]
  407924:	f7f9 fd01 	bl	40132a <_fstat>
  407928:	1c43      	adds	r3, r0, #1
  40792a:	d000      	beq.n	40792e <_fstat_r+0x1a>
  40792c:	bd70      	pop	{r4, r5, r6, pc}
  40792e:	6823      	ldr	r3, [r4, #0]
  407930:	2b00      	cmp	r3, #0
  407932:	d0fb      	beq.n	40792c <_fstat_r+0x18>
  407934:	6033      	str	r3, [r6, #0]
  407936:	bd70      	pop	{r4, r5, r6, pc}
  407938:	20000f34 	.word	0x20000f34

0040793c <_isatty_r>:
  40793c:	b538      	push	{r3, r4, r5, lr}
  40793e:	2300      	movs	r3, #0
  407940:	4c06      	ldr	r4, [pc, #24]	; (40795c <_isatty_r+0x20>)
  407942:	4605      	mov	r5, r0
  407944:	4608      	mov	r0, r1
  407946:	6023      	str	r3, [r4, #0]
  407948:	f7f9 fcf4 	bl	401334 <_isatty>
  40794c:	1c43      	adds	r3, r0, #1
  40794e:	d000      	beq.n	407952 <_isatty_r+0x16>
  407950:	bd38      	pop	{r3, r4, r5, pc}
  407952:	6823      	ldr	r3, [r4, #0]
  407954:	2b00      	cmp	r3, #0
  407956:	d0fb      	beq.n	407950 <_isatty_r+0x14>
  407958:	602b      	str	r3, [r5, #0]
  40795a:	bd38      	pop	{r3, r4, r5, pc}
  40795c:	20000f34 	.word	0x20000f34

00407960 <_lseek_r>:
  407960:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  407962:	460e      	mov	r6, r1
  407964:	2500      	movs	r5, #0
  407966:	4c08      	ldr	r4, [pc, #32]	; (407988 <_lseek_r+0x28>)
  407968:	4611      	mov	r1, r2
  40796a:	4607      	mov	r7, r0
  40796c:	461a      	mov	r2, r3
  40796e:	4630      	mov	r0, r6
  407970:	6025      	str	r5, [r4, #0]
  407972:	f7f9 fce1 	bl	401338 <_lseek>
  407976:	1c43      	adds	r3, r0, #1
  407978:	d000      	beq.n	40797c <_lseek_r+0x1c>
  40797a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  40797c:	6823      	ldr	r3, [r4, #0]
  40797e:	2b00      	cmp	r3, #0
  407980:	d0fb      	beq.n	40797a <_lseek_r+0x1a>
  407982:	603b      	str	r3, [r7, #0]
  407984:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  407986:	bf00      	nop
  407988:	20000f34 	.word	0x20000f34

0040798c <_read_r>:
  40798c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  40798e:	460e      	mov	r6, r1
  407990:	2500      	movs	r5, #0
  407992:	4c08      	ldr	r4, [pc, #32]	; (4079b4 <_read_r+0x28>)
  407994:	4611      	mov	r1, r2
  407996:	4607      	mov	r7, r0
  407998:	461a      	mov	r2, r3
  40799a:	4630      	mov	r0, r6
  40799c:	6025      	str	r5, [r4, #0]
  40799e:	f7f8 fc7b 	bl	400298 <_read>
  4079a2:	1c43      	adds	r3, r0, #1
  4079a4:	d000      	beq.n	4079a8 <_read_r+0x1c>
  4079a6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  4079a8:	6823      	ldr	r3, [r4, #0]
  4079aa:	2b00      	cmp	r3, #0
  4079ac:	d0fb      	beq.n	4079a6 <_read_r+0x1a>
  4079ae:	603b      	str	r3, [r7, #0]
  4079b0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  4079b2:	bf00      	nop
  4079b4:	20000f34 	.word	0x20000f34

004079b8 <__aeabi_drsub>:
  4079b8:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
  4079bc:	e002      	b.n	4079c4 <__adddf3>
  4079be:	bf00      	nop

004079c0 <__aeabi_dsub>:
  4079c0:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

004079c4 <__adddf3>:
  4079c4:	b530      	push	{r4, r5, lr}
  4079c6:	ea4f 0441 	mov.w	r4, r1, lsl #1
  4079ca:	ea4f 0543 	mov.w	r5, r3, lsl #1
  4079ce:	ea94 0f05 	teq	r4, r5
  4079d2:	bf08      	it	eq
  4079d4:	ea90 0f02 	teqeq	r0, r2
  4079d8:	bf1f      	itttt	ne
  4079da:	ea54 0c00 	orrsne.w	ip, r4, r0
  4079de:	ea55 0c02 	orrsne.w	ip, r5, r2
  4079e2:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
  4079e6:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
  4079ea:	f000 80e2 	beq.w	407bb2 <__adddf3+0x1ee>
  4079ee:	ea4f 5454 	mov.w	r4, r4, lsr #21
  4079f2:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
  4079f6:	bfb8      	it	lt
  4079f8:	426d      	neglt	r5, r5
  4079fa:	dd0c      	ble.n	407a16 <__adddf3+0x52>
  4079fc:	442c      	add	r4, r5
  4079fe:	ea80 0202 	eor.w	r2, r0, r2
  407a02:	ea81 0303 	eor.w	r3, r1, r3
  407a06:	ea82 0000 	eor.w	r0, r2, r0
  407a0a:	ea83 0101 	eor.w	r1, r3, r1
  407a0e:	ea80 0202 	eor.w	r2, r0, r2
  407a12:	ea81 0303 	eor.w	r3, r1, r3
  407a16:	2d36      	cmp	r5, #54	; 0x36
  407a18:	bf88      	it	hi
  407a1a:	bd30      	pophi	{r4, r5, pc}
  407a1c:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
  407a20:	ea4f 3101 	mov.w	r1, r1, lsl #12
  407a24:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
  407a28:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
  407a2c:	d002      	beq.n	407a34 <__adddf3+0x70>
  407a2e:	4240      	negs	r0, r0
  407a30:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
  407a34:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
  407a38:	ea4f 3303 	mov.w	r3, r3, lsl #12
  407a3c:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
  407a40:	d002      	beq.n	407a48 <__adddf3+0x84>
  407a42:	4252      	negs	r2, r2
  407a44:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
  407a48:	ea94 0f05 	teq	r4, r5
  407a4c:	f000 80a7 	beq.w	407b9e <__adddf3+0x1da>
  407a50:	f1a4 0401 	sub.w	r4, r4, #1
  407a54:	f1d5 0e20 	rsbs	lr, r5, #32
  407a58:	db0d      	blt.n	407a76 <__adddf3+0xb2>
  407a5a:	fa02 fc0e 	lsl.w	ip, r2, lr
  407a5e:	fa22 f205 	lsr.w	r2, r2, r5
  407a62:	1880      	adds	r0, r0, r2
  407a64:	f141 0100 	adc.w	r1, r1, #0
  407a68:	fa03 f20e 	lsl.w	r2, r3, lr
  407a6c:	1880      	adds	r0, r0, r2
  407a6e:	fa43 f305 	asr.w	r3, r3, r5
  407a72:	4159      	adcs	r1, r3
  407a74:	e00e      	b.n	407a94 <__adddf3+0xd0>
  407a76:	f1a5 0520 	sub.w	r5, r5, #32
  407a7a:	f10e 0e20 	add.w	lr, lr, #32
  407a7e:	2a01      	cmp	r2, #1
  407a80:	fa03 fc0e 	lsl.w	ip, r3, lr
  407a84:	bf28      	it	cs
  407a86:	f04c 0c02 	orrcs.w	ip, ip, #2
  407a8a:	fa43 f305 	asr.w	r3, r3, r5
  407a8e:	18c0      	adds	r0, r0, r3
  407a90:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
  407a94:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
  407a98:	d507      	bpl.n	407aaa <__adddf3+0xe6>
  407a9a:	f04f 0e00 	mov.w	lr, #0
  407a9e:	f1dc 0c00 	rsbs	ip, ip, #0
  407aa2:	eb7e 0000 	sbcs.w	r0, lr, r0
  407aa6:	eb6e 0101 	sbc.w	r1, lr, r1
  407aaa:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
  407aae:	d31b      	bcc.n	407ae8 <__adddf3+0x124>
  407ab0:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
  407ab4:	d30c      	bcc.n	407ad0 <__adddf3+0x10c>
  407ab6:	0849      	lsrs	r1, r1, #1
  407ab8:	ea5f 0030 	movs.w	r0, r0, rrx
  407abc:	ea4f 0c3c 	mov.w	ip, ip, rrx
  407ac0:	f104 0401 	add.w	r4, r4, #1
  407ac4:	ea4f 5244 	mov.w	r2, r4, lsl #21
  407ac8:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
  407acc:	f080 809a 	bcs.w	407c04 <__adddf3+0x240>
  407ad0:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
  407ad4:	bf08      	it	eq
  407ad6:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
  407ada:	f150 0000 	adcs.w	r0, r0, #0
  407ade:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
  407ae2:	ea41 0105 	orr.w	r1, r1, r5
  407ae6:	bd30      	pop	{r4, r5, pc}
  407ae8:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
  407aec:	4140      	adcs	r0, r0
  407aee:	eb41 0101 	adc.w	r1, r1, r1
  407af2:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
  407af6:	f1a4 0401 	sub.w	r4, r4, #1
  407afa:	d1e9      	bne.n	407ad0 <__adddf3+0x10c>
  407afc:	f091 0f00 	teq	r1, #0
  407b00:	bf04      	itt	eq
  407b02:	4601      	moveq	r1, r0
  407b04:	2000      	moveq	r0, #0
  407b06:	fab1 f381 	clz	r3, r1
  407b0a:	bf08      	it	eq
  407b0c:	3320      	addeq	r3, #32
  407b0e:	f1a3 030b 	sub.w	r3, r3, #11
  407b12:	f1b3 0220 	subs.w	r2, r3, #32
  407b16:	da0c      	bge.n	407b32 <__adddf3+0x16e>
  407b18:	320c      	adds	r2, #12
  407b1a:	dd08      	ble.n	407b2e <__adddf3+0x16a>
  407b1c:	f102 0c14 	add.w	ip, r2, #20
  407b20:	f1c2 020c 	rsb	r2, r2, #12
  407b24:	fa01 f00c 	lsl.w	r0, r1, ip
  407b28:	fa21 f102 	lsr.w	r1, r1, r2
  407b2c:	e00c      	b.n	407b48 <__adddf3+0x184>
  407b2e:	f102 0214 	add.w	r2, r2, #20
  407b32:	bfd8      	it	le
  407b34:	f1c2 0c20 	rsble	ip, r2, #32
  407b38:	fa01 f102 	lsl.w	r1, r1, r2
  407b3c:	fa20 fc0c 	lsr.w	ip, r0, ip
  407b40:	bfdc      	itt	le
  407b42:	ea41 010c 	orrle.w	r1, r1, ip
  407b46:	4090      	lslle	r0, r2
  407b48:	1ae4      	subs	r4, r4, r3
  407b4a:	bfa2      	ittt	ge
  407b4c:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
  407b50:	4329      	orrge	r1, r5
  407b52:	bd30      	popge	{r4, r5, pc}
  407b54:	ea6f 0404 	mvn.w	r4, r4
  407b58:	3c1f      	subs	r4, #31
  407b5a:	da1c      	bge.n	407b96 <__adddf3+0x1d2>
  407b5c:	340c      	adds	r4, #12
  407b5e:	dc0e      	bgt.n	407b7e <__adddf3+0x1ba>
  407b60:	f104 0414 	add.w	r4, r4, #20
  407b64:	f1c4 0220 	rsb	r2, r4, #32
  407b68:	fa20 f004 	lsr.w	r0, r0, r4
  407b6c:	fa01 f302 	lsl.w	r3, r1, r2
  407b70:	ea40 0003 	orr.w	r0, r0, r3
  407b74:	fa21 f304 	lsr.w	r3, r1, r4
  407b78:	ea45 0103 	orr.w	r1, r5, r3
  407b7c:	bd30      	pop	{r4, r5, pc}
  407b7e:	f1c4 040c 	rsb	r4, r4, #12
  407b82:	f1c4 0220 	rsb	r2, r4, #32
  407b86:	fa20 f002 	lsr.w	r0, r0, r2
  407b8a:	fa01 f304 	lsl.w	r3, r1, r4
  407b8e:	ea40 0003 	orr.w	r0, r0, r3
  407b92:	4629      	mov	r1, r5
  407b94:	bd30      	pop	{r4, r5, pc}
  407b96:	fa21 f004 	lsr.w	r0, r1, r4
  407b9a:	4629      	mov	r1, r5
  407b9c:	bd30      	pop	{r4, r5, pc}
  407b9e:	f094 0f00 	teq	r4, #0
  407ba2:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
  407ba6:	bf06      	itte	eq
  407ba8:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
  407bac:	3401      	addeq	r4, #1
  407bae:	3d01      	subne	r5, #1
  407bb0:	e74e      	b.n	407a50 <__adddf3+0x8c>
  407bb2:	ea7f 5c64 	mvns.w	ip, r4, asr #21
  407bb6:	bf18      	it	ne
  407bb8:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
  407bbc:	d029      	beq.n	407c12 <__adddf3+0x24e>
  407bbe:	ea94 0f05 	teq	r4, r5
  407bc2:	bf08      	it	eq
  407bc4:	ea90 0f02 	teqeq	r0, r2
  407bc8:	d005      	beq.n	407bd6 <__adddf3+0x212>
  407bca:	ea54 0c00 	orrs.w	ip, r4, r0
  407bce:	bf04      	itt	eq
  407bd0:	4619      	moveq	r1, r3
  407bd2:	4610      	moveq	r0, r2
  407bd4:	bd30      	pop	{r4, r5, pc}
  407bd6:	ea91 0f03 	teq	r1, r3
  407bda:	bf1e      	ittt	ne
  407bdc:	2100      	movne	r1, #0
  407bde:	2000      	movne	r0, #0
  407be0:	bd30      	popne	{r4, r5, pc}
  407be2:	ea5f 5c54 	movs.w	ip, r4, lsr #21
  407be6:	d105      	bne.n	407bf4 <__adddf3+0x230>
  407be8:	0040      	lsls	r0, r0, #1
  407bea:	4149      	adcs	r1, r1
  407bec:	bf28      	it	cs
  407bee:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
  407bf2:	bd30      	pop	{r4, r5, pc}
  407bf4:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
  407bf8:	bf3c      	itt	cc
  407bfa:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
  407bfe:	bd30      	popcc	{r4, r5, pc}
  407c00:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
  407c04:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
  407c08:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
  407c0c:	f04f 0000 	mov.w	r0, #0
  407c10:	bd30      	pop	{r4, r5, pc}
  407c12:	ea7f 5c64 	mvns.w	ip, r4, asr #21
  407c16:	bf1a      	itte	ne
  407c18:	4619      	movne	r1, r3
  407c1a:	4610      	movne	r0, r2
  407c1c:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
  407c20:	bf1c      	itt	ne
  407c22:	460b      	movne	r3, r1
  407c24:	4602      	movne	r2, r0
  407c26:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
  407c2a:	bf06      	itte	eq
  407c2c:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
  407c30:	ea91 0f03 	teqeq	r1, r3
  407c34:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
  407c38:	bd30      	pop	{r4, r5, pc}
  407c3a:	bf00      	nop

00407c3c <__aeabi_ui2d>:
  407c3c:	f090 0f00 	teq	r0, #0
  407c40:	bf04      	itt	eq
  407c42:	2100      	moveq	r1, #0
  407c44:	4770      	bxeq	lr
  407c46:	b530      	push	{r4, r5, lr}
  407c48:	f44f 6480 	mov.w	r4, #1024	; 0x400
  407c4c:	f104 0432 	add.w	r4, r4, #50	; 0x32
  407c50:	f04f 0500 	mov.w	r5, #0
  407c54:	f04f 0100 	mov.w	r1, #0
  407c58:	e750      	b.n	407afc <__adddf3+0x138>
  407c5a:	bf00      	nop

00407c5c <__aeabi_i2d>:
  407c5c:	f090 0f00 	teq	r0, #0
  407c60:	bf04      	itt	eq
  407c62:	2100      	moveq	r1, #0
  407c64:	4770      	bxeq	lr
  407c66:	b530      	push	{r4, r5, lr}
  407c68:	f44f 6480 	mov.w	r4, #1024	; 0x400
  407c6c:	f104 0432 	add.w	r4, r4, #50	; 0x32
  407c70:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
  407c74:	bf48      	it	mi
  407c76:	4240      	negmi	r0, r0
  407c78:	f04f 0100 	mov.w	r1, #0
  407c7c:	e73e      	b.n	407afc <__adddf3+0x138>
  407c7e:	bf00      	nop

00407c80 <__aeabi_f2d>:
  407c80:	0042      	lsls	r2, r0, #1
  407c82:	ea4f 01e2 	mov.w	r1, r2, asr #3
  407c86:	ea4f 0131 	mov.w	r1, r1, rrx
  407c8a:	ea4f 7002 	mov.w	r0, r2, lsl #28
  407c8e:	bf1f      	itttt	ne
  407c90:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
  407c94:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
  407c98:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
  407c9c:	4770      	bxne	lr
  407c9e:	f092 0f00 	teq	r2, #0
  407ca2:	bf14      	ite	ne
  407ca4:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
  407ca8:	4770      	bxeq	lr
  407caa:	b530      	push	{r4, r5, lr}
  407cac:	f44f 7460 	mov.w	r4, #896	; 0x380
  407cb0:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
  407cb4:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
  407cb8:	e720      	b.n	407afc <__adddf3+0x138>
  407cba:	bf00      	nop

00407cbc <__aeabi_ul2d>:
  407cbc:	ea50 0201 	orrs.w	r2, r0, r1
  407cc0:	bf08      	it	eq
  407cc2:	4770      	bxeq	lr
  407cc4:	b530      	push	{r4, r5, lr}
  407cc6:	f04f 0500 	mov.w	r5, #0
  407cca:	e00a      	b.n	407ce2 <__aeabi_l2d+0x16>

00407ccc <__aeabi_l2d>:
  407ccc:	ea50 0201 	orrs.w	r2, r0, r1
  407cd0:	bf08      	it	eq
  407cd2:	4770      	bxeq	lr
  407cd4:	b530      	push	{r4, r5, lr}
  407cd6:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
  407cda:	d502      	bpl.n	407ce2 <__aeabi_l2d+0x16>
  407cdc:	4240      	negs	r0, r0
  407cde:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
  407ce2:	f44f 6480 	mov.w	r4, #1024	; 0x400
  407ce6:	f104 0432 	add.w	r4, r4, #50	; 0x32
  407cea:	ea5f 5c91 	movs.w	ip, r1, lsr #22
  407cee:	f43f aedc 	beq.w	407aaa <__adddf3+0xe6>
  407cf2:	f04f 0203 	mov.w	r2, #3
  407cf6:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
  407cfa:	bf18      	it	ne
  407cfc:	3203      	addne	r2, #3
  407cfe:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
  407d02:	bf18      	it	ne
  407d04:	3203      	addne	r2, #3
  407d06:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
  407d0a:	f1c2 0320 	rsb	r3, r2, #32
  407d0e:	fa00 fc03 	lsl.w	ip, r0, r3
  407d12:	fa20 f002 	lsr.w	r0, r0, r2
  407d16:	fa01 fe03 	lsl.w	lr, r1, r3
  407d1a:	ea40 000e 	orr.w	r0, r0, lr
  407d1e:	fa21 f102 	lsr.w	r1, r1, r2
  407d22:	4414      	add	r4, r2
  407d24:	e6c1      	b.n	407aaa <__adddf3+0xe6>
  407d26:	bf00      	nop

00407d28 <__aeabi_dmul>:
  407d28:	b570      	push	{r4, r5, r6, lr}
  407d2a:	f04f 0cff 	mov.w	ip, #255	; 0xff
  407d2e:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
  407d32:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
  407d36:	bf1d      	ittte	ne
  407d38:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
  407d3c:	ea94 0f0c 	teqne	r4, ip
  407d40:	ea95 0f0c 	teqne	r5, ip
  407d44:	f000 f8de 	bleq	407f04 <__aeabi_dmul+0x1dc>
  407d48:	442c      	add	r4, r5
  407d4a:	ea81 0603 	eor.w	r6, r1, r3
  407d4e:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
  407d52:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
  407d56:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
  407d5a:	bf18      	it	ne
  407d5c:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
  407d60:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
  407d64:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
  407d68:	d038      	beq.n	407ddc <__aeabi_dmul+0xb4>
  407d6a:	fba0 ce02 	umull	ip, lr, r0, r2
  407d6e:	f04f 0500 	mov.w	r5, #0
  407d72:	fbe1 e502 	umlal	lr, r5, r1, r2
  407d76:	f006 4200 	and.w	r2, r6, #2147483648	; 0x80000000
  407d7a:	fbe0 e503 	umlal	lr, r5, r0, r3
  407d7e:	f04f 0600 	mov.w	r6, #0
  407d82:	fbe1 5603 	umlal	r5, r6, r1, r3
  407d86:	f09c 0f00 	teq	ip, #0
  407d8a:	bf18      	it	ne
  407d8c:	f04e 0e01 	orrne.w	lr, lr, #1
  407d90:	f1a4 04ff 	sub.w	r4, r4, #255	; 0xff
  407d94:	f5b6 7f00 	cmp.w	r6, #512	; 0x200
  407d98:	f564 7440 	sbc.w	r4, r4, #768	; 0x300
  407d9c:	d204      	bcs.n	407da8 <__aeabi_dmul+0x80>
  407d9e:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
  407da2:	416d      	adcs	r5, r5
  407da4:	eb46 0606 	adc.w	r6, r6, r6
  407da8:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
  407dac:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
  407db0:	ea4f 20c5 	mov.w	r0, r5, lsl #11
  407db4:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
  407db8:	ea4f 2ece 	mov.w	lr, lr, lsl #11
  407dbc:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
  407dc0:	bf88      	it	hi
  407dc2:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
  407dc6:	d81e      	bhi.n	407e06 <__aeabi_dmul+0xde>
  407dc8:	f1be 4f00 	cmp.w	lr, #2147483648	; 0x80000000
  407dcc:	bf08      	it	eq
  407dce:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
  407dd2:	f150 0000 	adcs.w	r0, r0, #0
  407dd6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
  407dda:	bd70      	pop	{r4, r5, r6, pc}
  407ddc:	f006 4600 	and.w	r6, r6, #2147483648	; 0x80000000
  407de0:	ea46 0101 	orr.w	r1, r6, r1
  407de4:	ea40 0002 	orr.w	r0, r0, r2
  407de8:	ea81 0103 	eor.w	r1, r1, r3
  407dec:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
  407df0:	bfc2      	ittt	gt
  407df2:	ebd4 050c 	rsbsgt	r5, r4, ip
  407df6:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
  407dfa:	bd70      	popgt	{r4, r5, r6, pc}
  407dfc:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
  407e00:	f04f 0e00 	mov.w	lr, #0
  407e04:	3c01      	subs	r4, #1
  407e06:	f300 80ab 	bgt.w	407f60 <__aeabi_dmul+0x238>
  407e0a:	f114 0f36 	cmn.w	r4, #54	; 0x36
  407e0e:	bfde      	ittt	le
  407e10:	2000      	movle	r0, #0
  407e12:	f001 4100 	andle.w	r1, r1, #2147483648	; 0x80000000
  407e16:	bd70      	pople	{r4, r5, r6, pc}
  407e18:	f1c4 0400 	rsb	r4, r4, #0
  407e1c:	3c20      	subs	r4, #32
  407e1e:	da35      	bge.n	407e8c <__aeabi_dmul+0x164>
  407e20:	340c      	adds	r4, #12
  407e22:	dc1b      	bgt.n	407e5c <__aeabi_dmul+0x134>
  407e24:	f104 0414 	add.w	r4, r4, #20
  407e28:	f1c4 0520 	rsb	r5, r4, #32
  407e2c:	fa00 f305 	lsl.w	r3, r0, r5
  407e30:	fa20 f004 	lsr.w	r0, r0, r4
  407e34:	fa01 f205 	lsl.w	r2, r1, r5
  407e38:	ea40 0002 	orr.w	r0, r0, r2
  407e3c:	f001 4200 	and.w	r2, r1, #2147483648	; 0x80000000
  407e40:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
  407e44:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
  407e48:	fa21 f604 	lsr.w	r6, r1, r4
  407e4c:	eb42 0106 	adc.w	r1, r2, r6
  407e50:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
  407e54:	bf08      	it	eq
  407e56:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
  407e5a:	bd70      	pop	{r4, r5, r6, pc}
  407e5c:	f1c4 040c 	rsb	r4, r4, #12
  407e60:	f1c4 0520 	rsb	r5, r4, #32
  407e64:	fa00 f304 	lsl.w	r3, r0, r4
  407e68:	fa20 f005 	lsr.w	r0, r0, r5
  407e6c:	fa01 f204 	lsl.w	r2, r1, r4
  407e70:	ea40 0002 	orr.w	r0, r0, r2
  407e74:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
  407e78:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
  407e7c:	f141 0100 	adc.w	r1, r1, #0
  407e80:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
  407e84:	bf08      	it	eq
  407e86:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
  407e8a:	bd70      	pop	{r4, r5, r6, pc}
  407e8c:	f1c4 0520 	rsb	r5, r4, #32
  407e90:	fa00 f205 	lsl.w	r2, r0, r5
  407e94:	ea4e 0e02 	orr.w	lr, lr, r2
  407e98:	fa20 f304 	lsr.w	r3, r0, r4
  407e9c:	fa01 f205 	lsl.w	r2, r1, r5
  407ea0:	ea43 0302 	orr.w	r3, r3, r2
  407ea4:	fa21 f004 	lsr.w	r0, r1, r4
  407ea8:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
  407eac:	fa21 f204 	lsr.w	r2, r1, r4
  407eb0:	ea20 0002 	bic.w	r0, r0, r2
  407eb4:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
  407eb8:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
  407ebc:	bf08      	it	eq
  407ebe:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
  407ec2:	bd70      	pop	{r4, r5, r6, pc}
  407ec4:	f094 0f00 	teq	r4, #0
  407ec8:	d10f      	bne.n	407eea <__aeabi_dmul+0x1c2>
  407eca:	f001 4600 	and.w	r6, r1, #2147483648	; 0x80000000
  407ece:	0040      	lsls	r0, r0, #1
  407ed0:	eb41 0101 	adc.w	r1, r1, r1
  407ed4:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
  407ed8:	bf08      	it	eq
  407eda:	3c01      	subeq	r4, #1
  407edc:	d0f7      	beq.n	407ece <__aeabi_dmul+0x1a6>
  407ede:	ea41 0106 	orr.w	r1, r1, r6
  407ee2:	f095 0f00 	teq	r5, #0
  407ee6:	bf18      	it	ne
  407ee8:	4770      	bxne	lr
  407eea:	f003 4600 	and.w	r6, r3, #2147483648	; 0x80000000
  407eee:	0052      	lsls	r2, r2, #1
  407ef0:	eb43 0303 	adc.w	r3, r3, r3
  407ef4:	f413 1f80 	tst.w	r3, #1048576	; 0x100000
  407ef8:	bf08      	it	eq
  407efa:	3d01      	subeq	r5, #1
  407efc:	d0f7      	beq.n	407eee <__aeabi_dmul+0x1c6>
  407efe:	ea43 0306 	orr.w	r3, r3, r6
  407f02:	4770      	bx	lr
  407f04:	ea94 0f0c 	teq	r4, ip
  407f08:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
  407f0c:	bf18      	it	ne
  407f0e:	ea95 0f0c 	teqne	r5, ip
  407f12:	d00c      	beq.n	407f2e <__aeabi_dmul+0x206>
  407f14:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
  407f18:	bf18      	it	ne
  407f1a:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
  407f1e:	d1d1      	bne.n	407ec4 <__aeabi_dmul+0x19c>
  407f20:	ea81 0103 	eor.w	r1, r1, r3
  407f24:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
  407f28:	f04f 0000 	mov.w	r0, #0
  407f2c:	bd70      	pop	{r4, r5, r6, pc}
  407f2e:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
  407f32:	bf06      	itte	eq
  407f34:	4610      	moveq	r0, r2
  407f36:	4619      	moveq	r1, r3
  407f38:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
  407f3c:	d019      	beq.n	407f72 <__aeabi_dmul+0x24a>
  407f3e:	ea94 0f0c 	teq	r4, ip
  407f42:	d102      	bne.n	407f4a <__aeabi_dmul+0x222>
  407f44:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
  407f48:	d113      	bne.n	407f72 <__aeabi_dmul+0x24a>
  407f4a:	ea95 0f0c 	teq	r5, ip
  407f4e:	d105      	bne.n	407f5c <__aeabi_dmul+0x234>
  407f50:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
  407f54:	bf1c      	itt	ne
  407f56:	4610      	movne	r0, r2
  407f58:	4619      	movne	r1, r3
  407f5a:	d10a      	bne.n	407f72 <__aeabi_dmul+0x24a>
  407f5c:	ea81 0103 	eor.w	r1, r1, r3
  407f60:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
  407f64:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
  407f68:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
  407f6c:	f04f 0000 	mov.w	r0, #0
  407f70:	bd70      	pop	{r4, r5, r6, pc}
  407f72:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
  407f76:	f441 0178 	orr.w	r1, r1, #16252928	; 0xf80000
  407f7a:	bd70      	pop	{r4, r5, r6, pc}

00407f7c <__aeabi_ddiv>:
  407f7c:	b570      	push	{r4, r5, r6, lr}
  407f7e:	f04f 0cff 	mov.w	ip, #255	; 0xff
  407f82:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
  407f86:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
  407f8a:	bf1d      	ittte	ne
  407f8c:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
  407f90:	ea94 0f0c 	teqne	r4, ip
  407f94:	ea95 0f0c 	teqne	r5, ip
  407f98:	f000 f8a7 	bleq	4080ea <__aeabi_ddiv+0x16e>
  407f9c:	eba4 0405 	sub.w	r4, r4, r5
  407fa0:	ea81 0e03 	eor.w	lr, r1, r3
  407fa4:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
  407fa8:	ea4f 3101 	mov.w	r1, r1, lsl #12
  407fac:	f000 8088 	beq.w	4080c0 <__aeabi_ddiv+0x144>
  407fb0:	ea4f 3303 	mov.w	r3, r3, lsl #12
  407fb4:	f04f 5580 	mov.w	r5, #268435456	; 0x10000000
  407fb8:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
  407fbc:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
  407fc0:	ea4f 2202 	mov.w	r2, r2, lsl #8
  407fc4:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
  407fc8:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
  407fcc:	ea4f 2600 	mov.w	r6, r0, lsl #8
  407fd0:	f00e 4100 	and.w	r1, lr, #2147483648	; 0x80000000
  407fd4:	429d      	cmp	r5, r3
  407fd6:	bf08      	it	eq
  407fd8:	4296      	cmpeq	r6, r2
  407fda:	f144 04fd 	adc.w	r4, r4, #253	; 0xfd
  407fde:	f504 7440 	add.w	r4, r4, #768	; 0x300
  407fe2:	d202      	bcs.n	407fea <__aeabi_ddiv+0x6e>
  407fe4:	085b      	lsrs	r3, r3, #1
  407fe6:	ea4f 0232 	mov.w	r2, r2, rrx
  407fea:	1ab6      	subs	r6, r6, r2
  407fec:	eb65 0503 	sbc.w	r5, r5, r3
  407ff0:	085b      	lsrs	r3, r3, #1
  407ff2:	ea4f 0232 	mov.w	r2, r2, rrx
  407ff6:	f44f 1080 	mov.w	r0, #1048576	; 0x100000
  407ffa:	f44f 2c00 	mov.w	ip, #524288	; 0x80000
  407ffe:	ebb6 0e02 	subs.w	lr, r6, r2
  408002:	eb75 0e03 	sbcs.w	lr, r5, r3
  408006:	bf22      	ittt	cs
  408008:	1ab6      	subcs	r6, r6, r2
  40800a:	4675      	movcs	r5, lr
  40800c:	ea40 000c 	orrcs.w	r0, r0, ip
  408010:	085b      	lsrs	r3, r3, #1
  408012:	ea4f 0232 	mov.w	r2, r2, rrx
  408016:	ebb6 0e02 	subs.w	lr, r6, r2
  40801a:	eb75 0e03 	sbcs.w	lr, r5, r3
  40801e:	bf22      	ittt	cs
  408020:	1ab6      	subcs	r6, r6, r2
  408022:	4675      	movcs	r5, lr
  408024:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
  408028:	085b      	lsrs	r3, r3, #1
  40802a:	ea4f 0232 	mov.w	r2, r2, rrx
  40802e:	ebb6 0e02 	subs.w	lr, r6, r2
  408032:	eb75 0e03 	sbcs.w	lr, r5, r3
  408036:	bf22      	ittt	cs
  408038:	1ab6      	subcs	r6, r6, r2
  40803a:	4675      	movcs	r5, lr
  40803c:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
  408040:	085b      	lsrs	r3, r3, #1
  408042:	ea4f 0232 	mov.w	r2, r2, rrx
  408046:	ebb6 0e02 	subs.w	lr, r6, r2
  40804a:	eb75 0e03 	sbcs.w	lr, r5, r3
  40804e:	bf22      	ittt	cs
  408050:	1ab6      	subcs	r6, r6, r2
  408052:	4675      	movcs	r5, lr
  408054:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
  408058:	ea55 0e06 	orrs.w	lr, r5, r6
  40805c:	d018      	beq.n	408090 <__aeabi_ddiv+0x114>
  40805e:	ea4f 1505 	mov.w	r5, r5, lsl #4
  408062:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
  408066:	ea4f 1606 	mov.w	r6, r6, lsl #4
  40806a:	ea4f 03c3 	mov.w	r3, r3, lsl #3
  40806e:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
  408072:	ea4f 02c2 	mov.w	r2, r2, lsl #3
  408076:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
  40807a:	d1c0      	bne.n	407ffe <__aeabi_ddiv+0x82>
  40807c:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
  408080:	d10b      	bne.n	40809a <__aeabi_ddiv+0x11e>
  408082:	ea41 0100 	orr.w	r1, r1, r0
  408086:	f04f 0000 	mov.w	r0, #0
  40808a:	f04f 4c00 	mov.w	ip, #2147483648	; 0x80000000
  40808e:	e7b6      	b.n	407ffe <__aeabi_ddiv+0x82>
  408090:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
  408094:	bf04      	itt	eq
  408096:	4301      	orreq	r1, r0
  408098:	2000      	moveq	r0, #0
  40809a:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
  40809e:	bf88      	it	hi
  4080a0:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
  4080a4:	f63f aeaf 	bhi.w	407e06 <__aeabi_dmul+0xde>
  4080a8:	ebb5 0c03 	subs.w	ip, r5, r3
  4080ac:	bf04      	itt	eq
  4080ae:	ebb6 0c02 	subseq.w	ip, r6, r2
  4080b2:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
  4080b6:	f150 0000 	adcs.w	r0, r0, #0
  4080ba:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
  4080be:	bd70      	pop	{r4, r5, r6, pc}
  4080c0:	f00e 4e00 	and.w	lr, lr, #2147483648	; 0x80000000
  4080c4:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
  4080c8:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
  4080cc:	bfc2      	ittt	gt
  4080ce:	ebd4 050c 	rsbsgt	r5, r4, ip
  4080d2:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
  4080d6:	bd70      	popgt	{r4, r5, r6, pc}
  4080d8:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
  4080dc:	f04f 0e00 	mov.w	lr, #0
  4080e0:	3c01      	subs	r4, #1
  4080e2:	e690      	b.n	407e06 <__aeabi_dmul+0xde>
  4080e4:	ea45 0e06 	orr.w	lr, r5, r6
  4080e8:	e68d      	b.n	407e06 <__aeabi_dmul+0xde>
  4080ea:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
  4080ee:	ea94 0f0c 	teq	r4, ip
  4080f2:	bf08      	it	eq
  4080f4:	ea95 0f0c 	teqeq	r5, ip
  4080f8:	f43f af3b 	beq.w	407f72 <__aeabi_dmul+0x24a>
  4080fc:	ea94 0f0c 	teq	r4, ip
  408100:	d10a      	bne.n	408118 <__aeabi_ddiv+0x19c>
  408102:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
  408106:	f47f af34 	bne.w	407f72 <__aeabi_dmul+0x24a>
  40810a:	ea95 0f0c 	teq	r5, ip
  40810e:	f47f af25 	bne.w	407f5c <__aeabi_dmul+0x234>
  408112:	4610      	mov	r0, r2
  408114:	4619      	mov	r1, r3
  408116:	e72c      	b.n	407f72 <__aeabi_dmul+0x24a>
  408118:	ea95 0f0c 	teq	r5, ip
  40811c:	d106      	bne.n	40812c <__aeabi_ddiv+0x1b0>
  40811e:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
  408122:	f43f aefd 	beq.w	407f20 <__aeabi_dmul+0x1f8>
  408126:	4610      	mov	r0, r2
  408128:	4619      	mov	r1, r3
  40812a:	e722      	b.n	407f72 <__aeabi_dmul+0x24a>
  40812c:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
  408130:	bf18      	it	ne
  408132:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
  408136:	f47f aec5 	bne.w	407ec4 <__aeabi_dmul+0x19c>
  40813a:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
  40813e:	f47f af0d 	bne.w	407f5c <__aeabi_dmul+0x234>
  408142:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
  408146:	f47f aeeb 	bne.w	407f20 <__aeabi_dmul+0x1f8>
  40814a:	e712      	b.n	407f72 <__aeabi_dmul+0x24a>

0040814c <__gedf2>:
  40814c:	f04f 3cff 	mov.w	ip, #4294967295
  408150:	e006      	b.n	408160 <__cmpdf2+0x4>
  408152:	bf00      	nop

00408154 <__ledf2>:
  408154:	f04f 0c01 	mov.w	ip, #1
  408158:	e002      	b.n	408160 <__cmpdf2+0x4>
  40815a:	bf00      	nop

0040815c <__cmpdf2>:
  40815c:	f04f 0c01 	mov.w	ip, #1
  408160:	f84d cd04 	str.w	ip, [sp, #-4]!
  408164:	ea4f 0c41 	mov.w	ip, r1, lsl #1
  408168:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
  40816c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
  408170:	bf18      	it	ne
  408172:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
  408176:	d01b      	beq.n	4081b0 <__cmpdf2+0x54>
  408178:	b001      	add	sp, #4
  40817a:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
  40817e:	bf0c      	ite	eq
  408180:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
  408184:	ea91 0f03 	teqne	r1, r3
  408188:	bf02      	ittt	eq
  40818a:	ea90 0f02 	teqeq	r0, r2
  40818e:	2000      	moveq	r0, #0
  408190:	4770      	bxeq	lr
  408192:	f110 0f00 	cmn.w	r0, #0
  408196:	ea91 0f03 	teq	r1, r3
  40819a:	bf58      	it	pl
  40819c:	4299      	cmppl	r1, r3
  40819e:	bf08      	it	eq
  4081a0:	4290      	cmpeq	r0, r2
  4081a2:	bf2c      	ite	cs
  4081a4:	17d8      	asrcs	r0, r3, #31
  4081a6:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
  4081aa:	f040 0001 	orr.w	r0, r0, #1
  4081ae:	4770      	bx	lr
  4081b0:	ea4f 0c41 	mov.w	ip, r1, lsl #1
  4081b4:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
  4081b8:	d102      	bne.n	4081c0 <__cmpdf2+0x64>
  4081ba:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
  4081be:	d107      	bne.n	4081d0 <__cmpdf2+0x74>
  4081c0:	ea4f 0c43 	mov.w	ip, r3, lsl #1
  4081c4:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
  4081c8:	d1d6      	bne.n	408178 <__cmpdf2+0x1c>
  4081ca:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
  4081ce:	d0d3      	beq.n	408178 <__cmpdf2+0x1c>
  4081d0:	f85d 0b04 	ldr.w	r0, [sp], #4
  4081d4:	4770      	bx	lr
  4081d6:	bf00      	nop

004081d8 <__aeabi_cdrcmple>:
  4081d8:	4684      	mov	ip, r0
  4081da:	4610      	mov	r0, r2
  4081dc:	4662      	mov	r2, ip
  4081de:	468c      	mov	ip, r1
  4081e0:	4619      	mov	r1, r3
  4081e2:	4663      	mov	r3, ip
  4081e4:	e000      	b.n	4081e8 <__aeabi_cdcmpeq>
  4081e6:	bf00      	nop

004081e8 <__aeabi_cdcmpeq>:
  4081e8:	b501      	push	{r0, lr}
  4081ea:	f7ff ffb7 	bl	40815c <__cmpdf2>
  4081ee:	2800      	cmp	r0, #0
  4081f0:	bf48      	it	mi
  4081f2:	f110 0f00 	cmnmi.w	r0, #0
  4081f6:	bd01      	pop	{r0, pc}

004081f8 <__aeabi_dcmpeq>:
  4081f8:	f84d ed08 	str.w	lr, [sp, #-8]!
  4081fc:	f7ff fff4 	bl	4081e8 <__aeabi_cdcmpeq>
  408200:	bf0c      	ite	eq
  408202:	2001      	moveq	r0, #1
  408204:	2000      	movne	r0, #0
  408206:	f85d fb08 	ldr.w	pc, [sp], #8
  40820a:	bf00      	nop

0040820c <__aeabi_dcmplt>:
  40820c:	f84d ed08 	str.w	lr, [sp, #-8]!
  408210:	f7ff ffea 	bl	4081e8 <__aeabi_cdcmpeq>
  408214:	bf34      	ite	cc
  408216:	2001      	movcc	r0, #1
  408218:	2000      	movcs	r0, #0
  40821a:	f85d fb08 	ldr.w	pc, [sp], #8
  40821e:	bf00      	nop

00408220 <__aeabi_dcmple>:
  408220:	f84d ed08 	str.w	lr, [sp, #-8]!
  408224:	f7ff ffe0 	bl	4081e8 <__aeabi_cdcmpeq>
  408228:	bf94      	ite	ls
  40822a:	2001      	movls	r0, #1
  40822c:	2000      	movhi	r0, #0
  40822e:	f85d fb08 	ldr.w	pc, [sp], #8
  408232:	bf00      	nop

00408234 <__aeabi_dcmpge>:
  408234:	f84d ed08 	str.w	lr, [sp, #-8]!
  408238:	f7ff ffce 	bl	4081d8 <__aeabi_cdrcmple>
  40823c:	bf94      	ite	ls
  40823e:	2001      	movls	r0, #1
  408240:	2000      	movhi	r0, #0
  408242:	f85d fb08 	ldr.w	pc, [sp], #8
  408246:	bf00      	nop

00408248 <__aeabi_dcmpgt>:
  408248:	f84d ed08 	str.w	lr, [sp, #-8]!
  40824c:	f7ff ffc4 	bl	4081d8 <__aeabi_cdrcmple>
  408250:	bf34      	ite	cc
  408252:	2001      	movcc	r0, #1
  408254:	2000      	movcs	r0, #0
  408256:	f85d fb08 	ldr.w	pc, [sp], #8
  40825a:	bf00      	nop

0040825c <__aeabi_dcmpun>:
  40825c:	ea4f 0c41 	mov.w	ip, r1, lsl #1
  408260:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
  408264:	d102      	bne.n	40826c <__aeabi_dcmpun+0x10>
  408266:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
  40826a:	d10a      	bne.n	408282 <__aeabi_dcmpun+0x26>
  40826c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
  408270:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
  408274:	d102      	bne.n	40827c <__aeabi_dcmpun+0x20>
  408276:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
  40827a:	d102      	bne.n	408282 <__aeabi_dcmpun+0x26>
  40827c:	f04f 0000 	mov.w	r0, #0
  408280:	4770      	bx	lr
  408282:	f04f 0001 	mov.w	r0, #1
  408286:	4770      	bx	lr

00408288 <__aeabi_d2iz>:
  408288:	ea4f 0241 	mov.w	r2, r1, lsl #1
  40828c:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
  408290:	d215      	bcs.n	4082be <__aeabi_d2iz+0x36>
  408292:	d511      	bpl.n	4082b8 <__aeabi_d2iz+0x30>
  408294:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
  408298:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
  40829c:	d912      	bls.n	4082c4 <__aeabi_d2iz+0x3c>
  40829e:	ea4f 23c1 	mov.w	r3, r1, lsl #11
  4082a2:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
  4082a6:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
  4082aa:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
  4082ae:	fa23 f002 	lsr.w	r0, r3, r2
  4082b2:	bf18      	it	ne
  4082b4:	4240      	negne	r0, r0
  4082b6:	4770      	bx	lr
  4082b8:	f04f 0000 	mov.w	r0, #0
  4082bc:	4770      	bx	lr
  4082be:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
  4082c2:	d105      	bne.n	4082d0 <__aeabi_d2iz+0x48>
  4082c4:	f011 4000 	ands.w	r0, r1, #2147483648	; 0x80000000
  4082c8:	bf08      	it	eq
  4082ca:	f06f 4000 	mvneq.w	r0, #2147483648	; 0x80000000
  4082ce:	4770      	bx	lr
  4082d0:	f04f 0000 	mov.w	r0, #0
  4082d4:	4770      	bx	lr
  4082d6:	bf00      	nop

004082d8 <__aeabi_uldivmod>:
  4082d8:	b953      	cbnz	r3, 4082f0 <__aeabi_uldivmod+0x18>
  4082da:	b94a      	cbnz	r2, 4082f0 <__aeabi_uldivmod+0x18>
  4082dc:	2900      	cmp	r1, #0
  4082de:	bf08      	it	eq
  4082e0:	2800      	cmpeq	r0, #0
  4082e2:	bf1c      	itt	ne
  4082e4:	f04f 31ff 	movne.w	r1, #4294967295
  4082e8:	f04f 30ff 	movne.w	r0, #4294967295
  4082ec:	f000 b97a 	b.w	4085e4 <__aeabi_idiv0>
  4082f0:	f1ad 0c08 	sub.w	ip, sp, #8
  4082f4:	e96d ce04 	strd	ip, lr, [sp, #-16]!
  4082f8:	f000 f806 	bl	408308 <__udivmoddi4>
  4082fc:	f8dd e004 	ldr.w	lr, [sp, #4]
  408300:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
  408304:	b004      	add	sp, #16
  408306:	4770      	bx	lr

00408308 <__udivmoddi4>:
  408308:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
  40830c:	468c      	mov	ip, r1
  40830e:	460e      	mov	r6, r1
  408310:	4604      	mov	r4, r0
  408312:	9d08      	ldr	r5, [sp, #32]
  408314:	2b00      	cmp	r3, #0
  408316:	d150      	bne.n	4083ba <__udivmoddi4+0xb2>
  408318:	428a      	cmp	r2, r1
  40831a:	4617      	mov	r7, r2
  40831c:	d96c      	bls.n	4083f8 <__udivmoddi4+0xf0>
  40831e:	fab2 fe82 	clz	lr, r2
  408322:	f1be 0f00 	cmp.w	lr, #0
  408326:	d00b      	beq.n	408340 <__udivmoddi4+0x38>
  408328:	f1ce 0c20 	rsb	ip, lr, #32
  40832c:	fa01 f60e 	lsl.w	r6, r1, lr
  408330:	fa20 fc0c 	lsr.w	ip, r0, ip
  408334:	fa02 f70e 	lsl.w	r7, r2, lr
  408338:	ea4c 0c06 	orr.w	ip, ip, r6
  40833c:	fa00 f40e 	lsl.w	r4, r0, lr
  408340:	0c3a      	lsrs	r2, r7, #16
  408342:	fbbc f9f2 	udiv	r9, ip, r2
  408346:	b2bb      	uxth	r3, r7
  408348:	fb02 cc19 	mls	ip, r2, r9, ip
  40834c:	fb09 fa03 	mul.w	sl, r9, r3
  408350:	ea4f 4814 	mov.w	r8, r4, lsr #16
  408354:	ea48 460c 	orr.w	r6, r8, ip, lsl #16
  408358:	45b2      	cmp	sl, r6
  40835a:	d90a      	bls.n	408372 <__udivmoddi4+0x6a>
  40835c:	19f6      	adds	r6, r6, r7
  40835e:	f109 31ff 	add.w	r1, r9, #4294967295
  408362:	f080 8125 	bcs.w	4085b0 <__udivmoddi4+0x2a8>
  408366:	45b2      	cmp	sl, r6
  408368:	f240 8122 	bls.w	4085b0 <__udivmoddi4+0x2a8>
  40836c:	f1a9 0902 	sub.w	r9, r9, #2
  408370:	443e      	add	r6, r7
  408372:	eba6 060a 	sub.w	r6, r6, sl
  408376:	fbb6 f0f2 	udiv	r0, r6, r2
  40837a:	fb02 6610 	mls	r6, r2, r0, r6
  40837e:	fb00 f303 	mul.w	r3, r0, r3
  408382:	b2a4      	uxth	r4, r4
  408384:	ea44 4406 	orr.w	r4, r4, r6, lsl #16
  408388:	42a3      	cmp	r3, r4
  40838a:	d909      	bls.n	4083a0 <__udivmoddi4+0x98>
  40838c:	19e4      	adds	r4, r4, r7
  40838e:	f100 32ff 	add.w	r2, r0, #4294967295
  408392:	f080 810b 	bcs.w	4085ac <__udivmoddi4+0x2a4>
  408396:	42a3      	cmp	r3, r4
  408398:	f240 8108 	bls.w	4085ac <__udivmoddi4+0x2a4>
  40839c:	3802      	subs	r0, #2
  40839e:	443c      	add	r4, r7
  4083a0:	2100      	movs	r1, #0
  4083a2:	1ae4      	subs	r4, r4, r3
  4083a4:	ea40 4009 	orr.w	r0, r0, r9, lsl #16
  4083a8:	2d00      	cmp	r5, #0
  4083aa:	d062      	beq.n	408472 <__udivmoddi4+0x16a>
  4083ac:	2300      	movs	r3, #0
  4083ae:	fa24 f40e 	lsr.w	r4, r4, lr
  4083b2:	602c      	str	r4, [r5, #0]
  4083b4:	606b      	str	r3, [r5, #4]
  4083b6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  4083ba:	428b      	cmp	r3, r1
  4083bc:	d907      	bls.n	4083ce <__udivmoddi4+0xc6>
  4083be:	2d00      	cmp	r5, #0
  4083c0:	d055      	beq.n	40846e <__udivmoddi4+0x166>
  4083c2:	2100      	movs	r1, #0
  4083c4:	e885 0041 	stmia.w	r5, {r0, r6}
  4083c8:	4608      	mov	r0, r1
  4083ca:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  4083ce:	fab3 f183 	clz	r1, r3
  4083d2:	2900      	cmp	r1, #0
  4083d4:	f040 808f 	bne.w	4084f6 <__udivmoddi4+0x1ee>
  4083d8:	42b3      	cmp	r3, r6
  4083da:	d302      	bcc.n	4083e2 <__udivmoddi4+0xda>
  4083dc:	4282      	cmp	r2, r0
  4083de:	f200 80fc 	bhi.w	4085da <__udivmoddi4+0x2d2>
  4083e2:	1a84      	subs	r4, r0, r2
  4083e4:	eb66 0603 	sbc.w	r6, r6, r3
  4083e8:	2001      	movs	r0, #1
  4083ea:	46b4      	mov	ip, r6
  4083ec:	2d00      	cmp	r5, #0
  4083ee:	d040      	beq.n	408472 <__udivmoddi4+0x16a>
  4083f0:	e885 1010 	stmia.w	r5, {r4, ip}
  4083f4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  4083f8:	b912      	cbnz	r2, 408400 <__udivmoddi4+0xf8>
  4083fa:	2701      	movs	r7, #1
  4083fc:	fbb7 f7f2 	udiv	r7, r7, r2
  408400:	fab7 fe87 	clz	lr, r7
  408404:	f1be 0f00 	cmp.w	lr, #0
  408408:	d135      	bne.n	408476 <__udivmoddi4+0x16e>
  40840a:	2101      	movs	r1, #1
  40840c:	1bf6      	subs	r6, r6, r7
  40840e:	ea4f 4c17 	mov.w	ip, r7, lsr #16
  408412:	fa1f f887 	uxth.w	r8, r7
  408416:	fbb6 f2fc 	udiv	r2, r6, ip
  40841a:	fb0c 6612 	mls	r6, ip, r2, r6
  40841e:	fb08 f002 	mul.w	r0, r8, r2
  408422:	0c23      	lsrs	r3, r4, #16
  408424:	ea43 4606 	orr.w	r6, r3, r6, lsl #16
  408428:	42b0      	cmp	r0, r6
  40842a:	d907      	bls.n	40843c <__udivmoddi4+0x134>
  40842c:	19f6      	adds	r6, r6, r7
  40842e:	f102 33ff 	add.w	r3, r2, #4294967295
  408432:	d202      	bcs.n	40843a <__udivmoddi4+0x132>
  408434:	42b0      	cmp	r0, r6
  408436:	f200 80d2 	bhi.w	4085de <__udivmoddi4+0x2d6>
  40843a:	461a      	mov	r2, r3
  40843c:	1a36      	subs	r6, r6, r0
  40843e:	fbb6 f0fc 	udiv	r0, r6, ip
  408442:	fb0c 6610 	mls	r6, ip, r0, r6
  408446:	fb08 f800 	mul.w	r8, r8, r0
  40844a:	b2a3      	uxth	r3, r4
  40844c:	ea43 4406 	orr.w	r4, r3, r6, lsl #16
  408450:	45a0      	cmp	r8, r4
  408452:	d907      	bls.n	408464 <__udivmoddi4+0x15c>
  408454:	19e4      	adds	r4, r4, r7
  408456:	f100 33ff 	add.w	r3, r0, #4294967295
  40845a:	d202      	bcs.n	408462 <__udivmoddi4+0x15a>
  40845c:	45a0      	cmp	r8, r4
  40845e:	f200 80b9 	bhi.w	4085d4 <__udivmoddi4+0x2cc>
  408462:	4618      	mov	r0, r3
  408464:	eba4 0408 	sub.w	r4, r4, r8
  408468:	ea40 4002 	orr.w	r0, r0, r2, lsl #16
  40846c:	e79c      	b.n	4083a8 <__udivmoddi4+0xa0>
  40846e:	4629      	mov	r1, r5
  408470:	4628      	mov	r0, r5
  408472:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  408476:	fa07 f70e 	lsl.w	r7, r7, lr
  40847a:	f1ce 0320 	rsb	r3, lr, #32
  40847e:	fa26 f203 	lsr.w	r2, r6, r3
  408482:	ea4f 4c17 	mov.w	ip, r7, lsr #16
  408486:	fbb2 f1fc 	udiv	r1, r2, ip
  40848a:	fa1f f887 	uxth.w	r8, r7
  40848e:	fb0c 2211 	mls	r2, ip, r1, r2
  408492:	fa06 f60e 	lsl.w	r6, r6, lr
  408496:	fa20 f303 	lsr.w	r3, r0, r3
  40849a:	fb01 f908 	mul.w	r9, r1, r8
  40849e:	4333      	orrs	r3, r6
  4084a0:	0c1e      	lsrs	r6, r3, #16
  4084a2:	ea46 4602 	orr.w	r6, r6, r2, lsl #16
  4084a6:	45b1      	cmp	r9, r6
  4084a8:	fa00 f40e 	lsl.w	r4, r0, lr
  4084ac:	d909      	bls.n	4084c2 <__udivmoddi4+0x1ba>
  4084ae:	19f6      	adds	r6, r6, r7
  4084b0:	f101 32ff 	add.w	r2, r1, #4294967295
  4084b4:	f080 808c 	bcs.w	4085d0 <__udivmoddi4+0x2c8>
  4084b8:	45b1      	cmp	r9, r6
  4084ba:	f240 8089 	bls.w	4085d0 <__udivmoddi4+0x2c8>
  4084be:	3902      	subs	r1, #2
  4084c0:	443e      	add	r6, r7
  4084c2:	eba6 0609 	sub.w	r6, r6, r9
  4084c6:	fbb6 f0fc 	udiv	r0, r6, ip
  4084ca:	fb0c 6210 	mls	r2, ip, r0, r6
  4084ce:	fb00 f908 	mul.w	r9, r0, r8
  4084d2:	b29e      	uxth	r6, r3
  4084d4:	ea46 4602 	orr.w	r6, r6, r2, lsl #16
  4084d8:	45b1      	cmp	r9, r6
  4084da:	d907      	bls.n	4084ec <__udivmoddi4+0x1e4>
  4084dc:	19f6      	adds	r6, r6, r7
  4084de:	f100 33ff 	add.w	r3, r0, #4294967295
  4084e2:	d271      	bcs.n	4085c8 <__udivmoddi4+0x2c0>
  4084e4:	45b1      	cmp	r9, r6
  4084e6:	d96f      	bls.n	4085c8 <__udivmoddi4+0x2c0>
  4084e8:	3802      	subs	r0, #2
  4084ea:	443e      	add	r6, r7
  4084ec:	eba6 0609 	sub.w	r6, r6, r9
  4084f0:	ea40 4101 	orr.w	r1, r0, r1, lsl #16
  4084f4:	e78f      	b.n	408416 <__udivmoddi4+0x10e>
  4084f6:	f1c1 0720 	rsb	r7, r1, #32
  4084fa:	fa22 f807 	lsr.w	r8, r2, r7
  4084fe:	408b      	lsls	r3, r1
  408500:	ea48 0303 	orr.w	r3, r8, r3
  408504:	fa26 f407 	lsr.w	r4, r6, r7
  408508:	ea4f 4e13 	mov.w	lr, r3, lsr #16
  40850c:	fbb4 f9fe 	udiv	r9, r4, lr
  408510:	fa1f fc83 	uxth.w	ip, r3
  408514:	fb0e 4419 	mls	r4, lr, r9, r4
  408518:	408e      	lsls	r6, r1
  40851a:	fa20 f807 	lsr.w	r8, r0, r7
  40851e:	fb09 fa0c 	mul.w	sl, r9, ip
  408522:	ea48 0806 	orr.w	r8, r8, r6
  408526:	ea4f 4618 	mov.w	r6, r8, lsr #16
  40852a:	ea46 4404 	orr.w	r4, r6, r4, lsl #16
  40852e:	45a2      	cmp	sl, r4
  408530:	fa02 f201 	lsl.w	r2, r2, r1
  408534:	fa00 f601 	lsl.w	r6, r0, r1
  408538:	d908      	bls.n	40854c <__udivmoddi4+0x244>
  40853a:	18e4      	adds	r4, r4, r3
  40853c:	f109 30ff 	add.w	r0, r9, #4294967295
  408540:	d244      	bcs.n	4085cc <__udivmoddi4+0x2c4>
  408542:	45a2      	cmp	sl, r4
  408544:	d942      	bls.n	4085cc <__udivmoddi4+0x2c4>
  408546:	f1a9 0902 	sub.w	r9, r9, #2
  40854a:	441c      	add	r4, r3
  40854c:	eba4 040a 	sub.w	r4, r4, sl
  408550:	fbb4 f0fe 	udiv	r0, r4, lr
  408554:	fb0e 4410 	mls	r4, lr, r0, r4
  408558:	fb00 fc0c 	mul.w	ip, r0, ip
  40855c:	fa1f f888 	uxth.w	r8, r8
  408560:	ea48 4404 	orr.w	r4, r8, r4, lsl #16
  408564:	45a4      	cmp	ip, r4
  408566:	d907      	bls.n	408578 <__udivmoddi4+0x270>
  408568:	18e4      	adds	r4, r4, r3
  40856a:	f100 3eff 	add.w	lr, r0, #4294967295
  40856e:	d229      	bcs.n	4085c4 <__udivmoddi4+0x2bc>
  408570:	45a4      	cmp	ip, r4
  408572:	d927      	bls.n	4085c4 <__udivmoddi4+0x2bc>
  408574:	3802      	subs	r0, #2
  408576:	441c      	add	r4, r3
  408578:	ea40 4009 	orr.w	r0, r0, r9, lsl #16
  40857c:	fba0 8902 	umull	r8, r9, r0, r2
  408580:	eba4 0c0c 	sub.w	ip, r4, ip
  408584:	45cc      	cmp	ip, r9
  408586:	46c2      	mov	sl, r8
  408588:	46ce      	mov	lr, r9
  40858a:	d315      	bcc.n	4085b8 <__udivmoddi4+0x2b0>
  40858c:	d012      	beq.n	4085b4 <__udivmoddi4+0x2ac>
  40858e:	b155      	cbz	r5, 4085a6 <__udivmoddi4+0x29e>
  408590:	ebb6 030a 	subs.w	r3, r6, sl
  408594:	eb6c 060e 	sbc.w	r6, ip, lr
  408598:	fa06 f707 	lsl.w	r7, r6, r7
  40859c:	40cb      	lsrs	r3, r1
  40859e:	431f      	orrs	r7, r3
  4085a0:	40ce      	lsrs	r6, r1
  4085a2:	602f      	str	r7, [r5, #0]
  4085a4:	606e      	str	r6, [r5, #4]
  4085a6:	2100      	movs	r1, #0
  4085a8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  4085ac:	4610      	mov	r0, r2
  4085ae:	e6f7      	b.n	4083a0 <__udivmoddi4+0x98>
  4085b0:	4689      	mov	r9, r1
  4085b2:	e6de      	b.n	408372 <__udivmoddi4+0x6a>
  4085b4:	4546      	cmp	r6, r8
  4085b6:	d2ea      	bcs.n	40858e <__udivmoddi4+0x286>
  4085b8:	ebb8 0a02 	subs.w	sl, r8, r2
  4085bc:	eb69 0e03 	sbc.w	lr, r9, r3
  4085c0:	3801      	subs	r0, #1
  4085c2:	e7e4      	b.n	40858e <__udivmoddi4+0x286>
  4085c4:	4670      	mov	r0, lr
  4085c6:	e7d7      	b.n	408578 <__udivmoddi4+0x270>
  4085c8:	4618      	mov	r0, r3
  4085ca:	e78f      	b.n	4084ec <__udivmoddi4+0x1e4>
  4085cc:	4681      	mov	r9, r0
  4085ce:	e7bd      	b.n	40854c <__udivmoddi4+0x244>
  4085d0:	4611      	mov	r1, r2
  4085d2:	e776      	b.n	4084c2 <__udivmoddi4+0x1ba>
  4085d4:	3802      	subs	r0, #2
  4085d6:	443c      	add	r4, r7
  4085d8:	e744      	b.n	408464 <__udivmoddi4+0x15c>
  4085da:	4608      	mov	r0, r1
  4085dc:	e706      	b.n	4083ec <__udivmoddi4+0xe4>
  4085de:	3a02      	subs	r2, #2
  4085e0:	443e      	add	r6, r7
  4085e2:	e72b      	b.n	40843c <__udivmoddi4+0x134>

004085e4 <__aeabi_idiv0>:
  4085e4:	4770      	bx	lr
  4085e6:	bf00      	nop

004085e8 <p_uc_charset10x14>:
	...
  408604:	ccff ccff 0000 0000 0000 0000 0000 0000     ................
  408614:	00f0 00f0 0000 0000 00f0 00f0 0000 0000     ................
  408624:	c00c c00c fcff fcff c00c c00c fcff fcff     ................
  408634:	c00c c00c 600c 701e 303f 3033 fcff fcff     .....`.p?030....
  408644:	3033 f033 e039 c018 0060 0cf0 3cf0 f060     303.9...`....<`.
  408654:	c003 000f 183c 3cf0 3cc0 1800 f03c f87f     ....<..<.<..<...
  408664:	1cc3 8cc7 cccf ecdc 7878 3030 fc00 cc00     ........xx00....
  408674:	0000 0000 0000 0044 00ec 00f8 0070 0000     ......D.....p...
	...
  40868c:	c00f f03f 7878 1860 0cc0 0cc0 0000 0000     ..?.xx`.........
  40869c:	0000 0000 0cc0 0cc0 1860 7878 f03f c00f     ........`.xx?...
  4086ac:	0000 0000 600c e00e c007 8003 f83f f83f     .....`......?.?.
  4086bc:	8003 c007 e00e 600c 0003 0003 0003 0003     .......`........
  4086cc:	f03f f03f 0003 0003 0003 0003 4400 ec00     ?.?..........D..
  4086dc:	f800 7000 0000 0000 0000 0000 0000 0000     ...p............
  4086ec:	0003 0003 0003 0003 0003 0003 0003 0003     ................
  4086fc:	0003 0003 1800 3c00 3c00 1800 0000 0000     .......<.<......
	...
  408714:	0000 0c00 3c00 f000 c003 000f 003c 00f0     .....<......<...
  408724:	00c0 0000 f03f f87f fce0 ccc1 8cc3 0cc7     ....?...........
  408734:	0cce 1cfc f87f f03f 0000 0000 0c30 0c70     ......?.....0.p.
  408744:	fcff fcff 0c00 0c00 0000 0000 0c30 1c70     ............0.p.
  408754:	3ce0 7cc0 ecc0 ccc1 8cc3 0ce7 0c7e 0c3c     .<.|........~.<.
  408764:	3030 3870 1ce0 0cc0 0cc0 0cc3 0cc3 1ce3     00p8............
  408774:	f87f f03c c003 c007 c00e c01c c038 c070     ..<.........8.p.
  408784:	fcff fcff c000 c000 30fc 38fc 1ccc 0ccc     .........0.8....
  408794:	0ccc 0ccc 0ccc 1cce f8c7 f0c3 f03f f87f     ............?...
  4087a4:	1ce3 0cc3 0cc3 0cc3 0cc3 9ce3 f871 f030     ............q.0.
  4087b4:	00c0 00c0 00c0 00c0 fcc3 fcc7 00ce 00dc     ................
  4087c4:	00f8 00f0 f03c f87f 9ce7 0cc3 0cc3 0cc3     ....<...........
  4087d4:	0cc3 9ce7 f87f f03c 003c 007e 0ce7 0cc3     ......<.<.~.....
  4087e4:	1cc3 38c3 70c3 e0e7 c07f 803f 0000 0000     ...8.p....?.....
  4087f4:	0000 6018 f03c f03c 6018 0000 0000 0000     ...`<.<..`......
  408804:	0000 0000 0000 4418 ec3c f83c 7018 0000     .......D<.<..p..
  408814:	0000 0000 0000 0003 8007 c00f e01c 7038     ..............8p
  408824:	3870 1ce0 0cc0 0000 c00c c00c c00c c00c     p8..............
  408834:	c00c c00c c00c c00c c00c c00c 0000 0cc0     ................
  408844:	1ce0 3870 7038 e01c c00f 8007 0003 0000     ..p88p..........
  408854:	0030 0070 00e0 00c0 ecc1 ecc3 00c3 00e6     0.p.............
  408864:	007e 003c f030 f871 9ce3 0cc3 fcc3 fcc3     ~.<.0.q.........
  408874:	0cc0 1ce0 f87f f03f fc3f fc7f c0e0 c0c0     ......?.?.......
  408884:	c0c0 c0c0 c0c0 c0e0 fc7f fc3f fcff fcff     ..........?.....
  408894:	0cc3 0cc3 0cc3 0cc3 0cc3 9ce7 f87f f03c     ..............<.
  4088a4:	f03f f87f 1ce0 0cc0 0cc0 0cc0 0cc0 1ce0     ?...............
  4088b4:	3870 3030 fcff fcff 0cc0 0cc0 0cc0 0cc0     p800............
  4088c4:	0cc0 1ce0 f87f f03f fcff fcff 0cc3 0cc3     ......?.........
  4088d4:	0cc3 0cc3 0cc3 0cc3 0cc0 0cc0 fcff fcff     ................
  4088e4:	00c3 00c3 00c3 00c3 00c3 00c3 00c0 00c0     ................
  4088f4:	f03f f87f 1ce0 0cc0 0cc0 0cc3 0cc3 1ce3     ?...............
  408904:	f873 f033 fcff fcff 0003 0003 0003 0003     s.3.............
  408914:	0003 0003 fcff fcff 0000 0000 0cc0 0cc0     ................
  408924:	fcff fcff 0cc0 0cc0 0000 0000 3000 3800     .............0.8
  408934:	1cc0 0cc0 0cc0 1cc0 f8ff f0ff 00c0 00c0     ................
  408944:	fcff fcff 8007 8007 c00f e01c 7038 3870     ............8pp8
  408954:	1ce0 0cc0 fcff fcff 0c00 0c00 0c00 0c00     ................
  408964:	0c00 0c00 0c00 0c00 fcff fcff 0070 0038     ............p.8.
  408974:	001f 001f 0038 0070 fcff fcff fcff fcff     ....8.p.........
  408984:	001c 000e 0007 8003 c001 e000 fcff fcff     ................
  408994:	f03f f87f 1ce0 0cc0 0cc0 0cc0 0cc0 1ce0     ?...............
  4089a4:	f87f f03f fcff fcff 00c3 00c3 00c3 00c3     ..?.............
  4089b4:	00c3 00e7 007e 003c f03f f87f 1ce0 0cc0     ....~.<.?.......
  4089c4:	ccc0 ecc0 7cc0 38e0 fc7f ec3f fcff fcff     .....|.8..?.....
  4089d4:	00c3 80c3 80c3 c0c3 c0c3 70e7 3c7e 1c3c     ...........p~<<.
  4089e4:	183c 1c7e 0ce7 0cc3 0cc3 0cc3 0cc3 9cc3     <.~.............
  4089f4:	f8e1 f060 00c0 00c0 00c0 00c0 fcff fcff     ..`.............
  408a04:	00c0 00c0 00c0 00c0 f0ff f8ff 1c00 0c00     ................
  408a14:	0c00 0c00 0c00 1c00 f8ff f0ff c0ff e0ff     ................
  408a24:	7000 3800 1c00 1c00 3800 7000 e0ff c0ff     .p.8.....8.p....
  408a34:	f0ff f8ff 1c00 3c00 f800 f800 3c00 1c00     .......<.....<..
  408a44:	f8ff f0ff 3cf0 7cf8 e01c c00f 8007 8007     .....<.|........
  408a54:	c00f e01c 7cf8 3cf0 00fc 00fe 0007 8003     .....|.<........
  408a64:	fc01 fc01 8003 0007 00fe 00fc 3cc0 7cc0     .............<.|
  408a74:	ecc0 ccc1 8cc3 0cc7 0cce 0cdc 0cf8 0cf0     ................
  408a84:	0000 0000 fcff fcff 0cc0 0cc0 0cc0 0000     ................
  408a94:	0000 0000 0030 0030 000c 000c 0003 0003     ....0.0.........
  408aa4:	c000 c000 3000 3000 0000 0000 0cc0 0cc0     .....0.0........
  408ab4:	0cc0 fcff fcff 0000 0000 0000 000c 001c     ................
  408ac4:	0038 0070 00e0 00e0 0070 0038 001c 000c     8.p.....p.8.....
  408ad4:	0c00 0c00 0c00 0c00 0c00 0c00 0c00 0c00     ................
  408ae4:	0c00 0c00 0000 0000 00c0 00e0 0070 0038     ............p.8.
  408af4:	0018 0000 0000 0000 3000 7806 fc0e cc0c     .........0.x....
  408b04:	cc0c cc0c cc0c cc0e fc07 f803 fcff fcff     ................
  408b14:	0c03 0c03 0c03 0c03 0c03 9c03 f801 f000     ................
  408b24:	f003 f807 1c0e 0c0c 0c0c 0c0c 0c0c 1c0e     ................
  408b34:	3807 3003 f000 f801 9c03 0c03 0c03 0c03     .8.0............
  408b44:	0c03 0c03 fcff fcff f003 f807 dc0e cc0c     ................
  408b54:	cc0c cc0c cc0c dc0e d807 9003 0000 0003     ................
  408b64:	fc3f fc7f 00e3 00e3 0070 0030 0000 0000     ?.......p.0.....
  408b74:	1803 9c07 cc0f cc0c cc0c cc0c cc0c dc0c     ................
  408b84:	f80f f007 fcff fcff 0003 0003 0003 0003     ................
  408b94:	8003 fc01 fc00 0000 0000 0000 0000 0000     ................
  408ba4:	fc1b fc1b 0000 0000 0000 0000 0000 3000     ...............0
  408bb4:	3800 1c00 0c00 0c00 1c00 f8cf f0cf 0000     .8..............
  408bc4:	0000 fcff fcff e000 e001 f003 3807 1c0e     .............8..
  408bd4:	0c0c 0000 0000 0000 0cc0 0cc0 fcff fcff     ................
  408be4:	0c00 0c00 0000 0000 fc0f fc0f 000e 0007     ................
  408bf4:	c003 c003 0007 000e fc0f fc0f fc0f fc0f     ................
  408c04:	0003 0007 000e 000c 000c 000e fc07 fc03     ................
  408c14:	f003 f807 1c0e 0c0c 0c0c 0c0c 0c0c 1c0e     ................
  408c24:	f807 f003 fc0f fc0f c00c c00c c00c c00c     ................
  408c34:	c00c c00f 8007 0003 0003 8007 c00f c00c     ................
  408c44:	c00c c00c c00c c00c fc0f fc0f fc0f fc0f     ................
  408c54:	8003 0007 000e 000c 000c 000e 0007 0003     ................
  408c64:	1803 9c07 cc0f cc0c cc0c cc0c cc0c fc0c     ................
  408c74:	780e 3006 0000 000c 000c f0ff f8ff 1c0c     .x.0............
  408c84:	1c0c 380c 300c 0000 f00f f80f 1c00 0c00     ...8.0..........
  408c94:	0c00 0c00 0c00 1c00 f80f f00f c00f e00f     ................
  408ca4:	7000 3800 1c00 1c00 3800 7000 e00f c00f     .p.8.....8.p....
  408cb4:	f00f f80f 1c00 1c00 f800 f800 1c00 1c00     ................
  408cc4:	f80f f00f 0c0c 1c0e 3807 f003 e001 e001     .........8......
  408cd4:	f003 3807 1c0e 0c0c 000c 000e 0c07 9c03     ...8............
  408ce4:	f801 f001 8003 0007 000e 000c 0c0c 1c0c     ................
  408cf4:	3c0c 7c0c ec0c cc0d 8c0f 0c0f 0c0e 0c0c     .<.|............
  408d04:	0000 0003 8007 f03f f87c 1ce0 0cc0 0cc0     ......?.|.......
  408d14:	0cc0 0000 0c03 0c03 fc3f fc7f 0ce3 0cc3     ........?.......
  408d24:	0cc0 0ce0 0c70 0c30 0000 0cc0 0cc0 0cc0     ....p.0.........
  408d34:	1ce0 f87c f03f 8007 0003 0000 00c0 00c0     ..|.?...........
  408d44:	00c0 00c0 00c0 00c0 00c0 00c0 00c0 00c0     ................
  408d54:	fcff fcff fcff fcff fcff fcff fcff fcff     ................
  408d64:	fcff fcff 7325 0909 6325 2509 0975 7525     ....%s..%c.%u.%u
  408d74:	2509 0d75 000a 0000                         .%u.....

00408d7c <ucExpectedStackBytes.7466>:
  408d7c:	a5a5 a5a5 a5a5 a5a5 a5a5 a5a5 a5a5 a5a5     ................
  408d8c:	a5a5 a5a5 4449 454c 0000 0000 6542 6d61     ....IDLE....Beam
  408d9c:	4220 6c61 006c 0000 6f43 666e 6769 4420      Ball...Config D
  408dac:	6e6f 2165 0000 0000 2d2d 4620 6572 5265     one!....-- FreeR
  408dbc:	4f54 2053 7845 6d61 6c70 2065 2d2d 0d0a     TOS Example --..
  408dcc:	0000 0000 4153 334d 2d4e 4b45 0000 0000     ....SAM3N-EK....
  408ddc:	2d2d 2520 0a73 000d 3631 343a 3a30 3034     -- %s...16:40:40
  408dec:	0000 0000 634f 2074 3820 3220 3130 0037     ....Oct  8 2017.
  408dfc:	2d2d 4320 6d6f 6970 656c 3a64 2520 2073     -- Compiled: %s 
  408e0c:	7325 2d20 0a2d 000d 7551 7565 2065 4f44     %s --...Queue DO
  408e1c:	454e 0021 6f4d 696e 6f74 0072 6146 6c69     NE!.Monitor.Fail
  408e2c:	6465 7420 206f 7263 6165 6574 4d20 6e6f     ed to create Mon
  408e3c:	7469 726f 7420 7361 0d6b 000a 654c 0064     itor task...Led.
  408e4c:	6146 6c69 6465 7420 206f 7263 6165 6574     Failed to create
  408e5c:	7420 7365 2074 656c 2064 6174 6b73 0a0d      test led task..
  408e6c:	0000 0000 6552 6461 5320 6e65 6f73 0072     ....Read Sensor.
  408e7c:	6146 6c69 6465 7420 206f 7263 6165 6574     Failed to create
  408e8c:	5220 6165 2064 6553 736e 726f 7420 7361      Read Sensor tas
  408e9c:	0d6b 000a 6154 6b73 2073 7243 6165 6574     k...Tasks Create
  408eac:	2164 0000 2d2d 202d 6174 6b73 2320 2023     d!..--- task ## 
  408ebc:	7525 0000 7473 6361 206b 766f 7265 6c66     %u..stack overfl
  408ecc:	776f 2520 2078 7325 0a0d 0000               ow %x %s....

00408ed8 <_global_impure_ptr>:
  408ed8:	0108 2000 4e49 0046 6e69 0066 414e 004e     ... INF.inf.NAN.
  408ee8:	616e 006e 3130 3332 3534 3736 3938 4241     nan.0123456789AB
  408ef8:	4443 4645 0000 0000 3130 3332 3534 3736     CDEF....01234567
  408f08:	3938 6261 6463 6665 0000 0000 6e28 6c75     89abcdef....(nul
  408f18:	296c 0000 0030 0000                         l)..0...

00408f20 <blanks.7208>:
  408f20:	2020 2020 2020 2020 2020 2020 2020 2020                     

00408f30 <zeroes.7209>:
  408f30:	3030 3030 3030 3030 3030 3030 3030 3030     0000000000000000

00408f40 <blanks.7202>:
  408f40:	2020 2020 2020 2020 2020 2020 2020 2020                     

00408f50 <zeroes.7203>:
  408f50:	3030 3030 3030 3030 3030 3030 3030 3030     0000000000000000
  408f60:	6e49 6966 696e 7974 0000 0000 614e 004e     Infinity....NaN.
  408f70:	0043 0000 4f50 4953 0058 0000 002e 0000     C...POSIX.......

00408f80 <__mprec_bigtens>:
  408f80:	8000 37e0 c379 4341 6e17 b505 b8b5 4693     ...7y.AC.n.....F
  408f90:	f9f5 e93f 4f03 4d38 1d32 f930 7748 5a82     ..?..O8M2.0.Hw.Z
  408fa0:	bf3c 7f73 4fdd 7515                         <.s..O.u

00408fa8 <__mprec_tens>:
  408fa8:	0000 0000 0000 3ff0 0000 0000 0000 4024     .......?......$@
  408fb8:	0000 0000 0000 4059 0000 0000 4000 408f     ......Y@.....@.@
  408fc8:	0000 0000 8800 40c3 0000 0000 6a00 40f8     .......@.....j.@
  408fd8:	0000 0000 8480 412e 0000 0000 12d0 4163     .......A......cA
  408fe8:	0000 0000 d784 4197 0000 0000 cd65 41cd     .......A....e..A
  408ff8:	0000 2000 a05f 4202 0000 e800 4876 4237     ... _..B....vH7B
  409008:	0000 a200 1a94 426d 0000 e540 309c 42a2     ......mB..@..0.B
  409018:	0000 1e90 bcc4 42d6 0000 2634 6bf5 430c     .......B..4&.k.C
  409028:	8000 37e0 c379 4341 a000 85d8 3457 4376     ...7y.AC....W4vC
  409038:	c800 674e c16d 43ab 3d00 6091 58e4 43e1     ..Ngm..C.=.`.X.C
  409048:	8c40 78b5 af1d 4415 ef50 d6e2 1ae4 444b     @..x...DP.....KD
  409058:	d592 064d f0cf 4480 4af6 c7e1 2d02 44b5     ..M....D.J...-.D
  409068:	9db4 79d9 7843 44ea                         ...yCx.D

00409070 <p05.6040>:
  409070:	0005 0000 0019 0000 007d 0000               ........}...

0040907c <_ctype_>:
  40907c:	2000 2020 2020 2020 2020 2828 2828 2028     .         ((((( 
  40908c:	2020 2020 2020 2020 2020 2020 2020 2020                     
  40909c:	8820 1010 1010 1010 1010 1010 1010 1010      ...............
  4090ac:	0410 0404 0404 0404 0404 1004 1010 1010     ................
  4090bc:	1010 4141 4141 4141 0101 0101 0101 0101     ..AAAAAA........
  4090cc:	0101 0101 0101 0101 0101 0101 1010 1010     ................
  4090dc:	1010 4242 4242 4242 0202 0202 0202 0202     ..BBBBBB........
  4090ec:	0202 0202 0202 0202 0202 0202 1010 1010     ................
  4090fc:	0020 0000 0000 0000 0000 0000 0000 0000      ...............
	...

00409180 <_init>:
  409180:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  409182:	bf00      	nop
  409184:	bcf8      	pop	{r3, r4, r5, r6, r7}
  409186:	bc08      	pop	{r3}
  409188:	469e      	mov	lr, r3
  40918a:	4770      	bx	lr

0040918c <__init_array_start>:
  40918c:	00404ff5 	.word	0x00404ff5

00409190 <__frame_dummy_init_array_entry>:
  409190:	004000e9                                ..@.

00409194 <_fini>:
  409194:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  409196:	bf00      	nop
  409198:	bcf8      	pop	{r3, r4, r5, r6, r7}
  40919a:	bc08      	pop	{r3}
  40919c:	469e      	mov	lr, r3
  40919e:	4770      	bx	lr

004091a0 <__fini_array_start>:
  4091a0:	004000c5 	.word	0x004000c5

Disassembly of section .relocate:

20000000 <portable_delay_cycles>:
RAMFUNC
void portable_delay_cycles(unsigned long n)
{
	UNUSED(n);

	__asm (
20000000:	f3bf 8f5f 	dmb	sy
20000004:	3801      	subs	r0, #1
20000006:	d1fb      	bne.n	20000000 <portable_delay_cycles>
20000008:	4770      	bx	lr
	...

2000000c <SystemInit>:
	EFC->EEFC_FMR = EEFC_FMR_FWS(3);
2000000c:	f44f 7240 	mov.w	r2, #768	; 0x300
20000010:	4b1f      	ldr	r3, [pc, #124]	; (20000090 <SystemInit+0x84>)
20000012:	601a      	str	r2, [r3, #0]
	if (!(PMC->CKGR_MOR & CKGR_MOR_MOSCSEL)) {
20000014:	f5a3 63c0 	sub.w	r3, r3, #1536	; 0x600
20000018:	6a1b      	ldr	r3, [r3, #32]
2000001a:	f013 7f80 	tst.w	r3, #16777216	; 0x1000000
2000001e:	d107      	bne.n	20000030 <SystemInit+0x24>
		PMC->CKGR_MOR = SYS_CKGR_MOR_KEY_VALUE | SYS_BOARD_OSCOUNT | 
20000020:	4a1c      	ldr	r2, [pc, #112]	; (20000094 <SystemInit+0x88>)
20000022:	4b1d      	ldr	r3, [pc, #116]	; (20000098 <SystemInit+0x8c>)
20000024:	621a      	str	r2, [r3, #32]
		while (!(PMC->PMC_SR & PMC_SR_MOSCXTS)) {
20000026:	461a      	mov	r2, r3
20000028:	6e93      	ldr	r3, [r2, #104]	; 0x68
2000002a:	f013 0f01 	tst.w	r3, #1
2000002e:	d0fb      	beq.n	20000028 <SystemInit+0x1c>
	PMC->CKGR_MOR = SYS_CKGR_MOR_KEY_VALUE | SYS_BOARD_OSCOUNT | 
20000030:	4a1a      	ldr	r2, [pc, #104]	; (2000009c <SystemInit+0x90>)
20000032:	4b19      	ldr	r3, [pc, #100]	; (20000098 <SystemInit+0x8c>)
20000034:	621a      	str	r2, [r3, #32]
	while (!(PMC->PMC_SR & PMC_SR_MOSCSELS)) {
20000036:	461a      	mov	r2, r3
20000038:	6e93      	ldr	r3, [r2, #104]	; 0x68
2000003a:	f413 3f80 	tst.w	r3, #65536	; 0x10000
2000003e:	d0fb      	beq.n	20000038 <SystemInit+0x2c>
	PMC->PMC_MCKR = (PMC->PMC_MCKR & ~(uint32_t)PMC_MCKR_CSS_Msk) | 
20000040:	4a15      	ldr	r2, [pc, #84]	; (20000098 <SystemInit+0x8c>)
20000042:	6b13      	ldr	r3, [r2, #48]	; 0x30
20000044:	f023 0303 	bic.w	r3, r3, #3
20000048:	f043 0301 	orr.w	r3, r3, #1
2000004c:	6313      	str	r3, [r2, #48]	; 0x30
	while (!(PMC->PMC_SR & PMC_SR_MCKRDY)) {
2000004e:	6e93      	ldr	r3, [r2, #104]	; 0x68
20000050:	f013 0f08 	tst.w	r3, #8
20000054:	d0fb      	beq.n	2000004e <SystemInit+0x42>
	PMC->CKGR_PLLAR = SYS_BOARD_PLLAR;
20000056:	4a12      	ldr	r2, [pc, #72]	; (200000a0 <SystemInit+0x94>)
20000058:	4b0f      	ldr	r3, [pc, #60]	; (20000098 <SystemInit+0x8c>)
2000005a:	629a      	str	r2, [r3, #40]	; 0x28
	while (!(PMC->PMC_SR & PMC_SR_LOCKA)) {
2000005c:	461a      	mov	r2, r3
2000005e:	6e93      	ldr	r3, [r2, #104]	; 0x68
20000060:	f013 0f02 	tst.w	r3, #2
20000064:	d0fb      	beq.n	2000005e <SystemInit+0x52>
	PMC->PMC_MCKR = (SYS_BOARD_MCKR & ~PMC_MCKR_CSS_Msk) | 
20000066:	2211      	movs	r2, #17
20000068:	4b0b      	ldr	r3, [pc, #44]	; (20000098 <SystemInit+0x8c>)
2000006a:	631a      	str	r2, [r3, #48]	; 0x30
	while (!(PMC->PMC_SR & PMC_SR_MCKRDY)) {
2000006c:	461a      	mov	r2, r3
2000006e:	6e93      	ldr	r3, [r2, #104]	; 0x68
20000070:	f013 0f08 	tst.w	r3, #8
20000074:	d0fb      	beq.n	2000006e <SystemInit+0x62>
	PMC->PMC_MCKR = SYS_BOARD_MCKR;
20000076:	2212      	movs	r2, #18
20000078:	4b07      	ldr	r3, [pc, #28]	; (20000098 <SystemInit+0x8c>)
2000007a:	631a      	str	r2, [r3, #48]	; 0x30
	while (!(PMC->PMC_SR & PMC_SR_MCKRDY)) {
2000007c:	461a      	mov	r2, r3
2000007e:	6e93      	ldr	r3, [r2, #104]	; 0x68
20000080:	f013 0f08 	tst.w	r3, #8
20000084:	d0fb      	beq.n	2000007e <SystemInit+0x72>
	SystemCoreClock = CHIP_FREQ_CPU_MAX;
20000086:	4a07      	ldr	r2, [pc, #28]	; (200000a4 <SystemInit+0x98>)
20000088:	4b07      	ldr	r3, [pc, #28]	; (200000a8 <SystemInit+0x9c>)
2000008a:	601a      	str	r2, [r3, #0]
2000008c:	4770      	bx	lr
2000008e:	bf00      	nop
20000090:	400e0a00 	.word	0x400e0a00
20000094:	00370809 	.word	0x00370809
20000098:	400e0400 	.word	0x400e0400
2000009c:	01370809 	.word	0x01370809
200000a0:	20073f01 	.word	0x20073f01
200000a4:	02dc6c00 	.word	0x02dc6c00
200000a8:	200000f0 	.word	0x200000f0

200000ac <system_init_flash>:
__no_inline
RAMFUNC
void system_init_flash(uint32_t ul_clk)
{
	/* Set FWS for embedded Flash access according to operating frequency */
	if (ul_clk < CHIP_FREQ_FWS_0) {
200000ac:	4b0c      	ldr	r3, [pc, #48]	; (200000e0 <system_init_flash+0x34>)
200000ae:	4298      	cmp	r0, r3
200000b0:	d90c      	bls.n	200000cc <system_init_flash+0x20>
		EFC->EEFC_FMR = EEFC_FMR_FWS(0);
	} else if (ul_clk < CHIP_FREQ_FWS_1) {
200000b2:	4b0c      	ldr	r3, [pc, #48]	; (200000e4 <system_init_flash+0x38>)
200000b4:	4298      	cmp	r0, r3
200000b6:	d90d      	bls.n	200000d4 <system_init_flash+0x28>
		EFC->EEFC_FMR = EEFC_FMR_FWS(1);
	} else if (ul_clk < CHIP_FREQ_FWS_2) {
200000b8:	4b0b      	ldr	r3, [pc, #44]	; (200000e8 <system_init_flash+0x3c>)
200000ba:	4298      	cmp	r0, r3
		EFC->EEFC_FMR = EEFC_FMR_FWS(2);
200000bc:	bf94      	ite	ls
200000be:	f44f 7200 	movls.w	r2, #512	; 0x200
	} else {
		EFC->EEFC_FMR = EEFC_FMR_FWS(3);
200000c2:	f44f 7240 	movhi.w	r2, #768	; 0x300
200000c6:	4b09      	ldr	r3, [pc, #36]	; (200000ec <system_init_flash+0x40>)
200000c8:	601a      	str	r2, [r3, #0]
200000ca:	4770      	bx	lr
		EFC->EEFC_FMR = EEFC_FMR_FWS(0);
200000cc:	2200      	movs	r2, #0
200000ce:	4b07      	ldr	r3, [pc, #28]	; (200000ec <system_init_flash+0x40>)
200000d0:	601a      	str	r2, [r3, #0]
200000d2:	4770      	bx	lr
		EFC->EEFC_FMR = EEFC_FMR_FWS(1);
200000d4:	f44f 7280 	mov.w	r2, #256	; 0x100
200000d8:	4b04      	ldr	r3, [pc, #16]	; (200000ec <system_init_flash+0x40>)
200000da:	601a      	str	r2, [r3, #0]
200000dc:	4770      	bx	lr
200000de:	bf00      	nop
200000e0:	01406f3f 	.word	0x01406f3f
200000e4:	01e847ff 	.word	0x01e847ff
200000e8:	02dc6bff 	.word	0x02dc6bff
200000ec:	400e0a00 	.word	0x400e0a00

200000f0 <SystemCoreClock>:
200000f0:	003d0900                                ..=.

200000f4 <uxCriticalNesting>:
200000f4:	aaaaaaaa                                ....

200000f8 <uxPreviousTask>:
200000f8:	000000ff                                ....

200000fc <xNextTaskUnblockTime>:
200000fc:	ffffffff                                ....

20000100 <_impure_ptr>:
20000100:	20000108 00000000                       ... ....

20000108 <impure_data>:
20000108:	00000000 200003f4 2000045c 200004c4     ....... \.. ... 
	...
200001b0:	00000001 00000000 abcd330e e66d1234     .........3..4.m.
200001c0:	0005deec 0000000b 00000000 00000000     ................
	...

20000530 <__malloc_av_>:
	...
20000538:	20000530 20000530 20000538 20000538     0.. 0.. 8.. 8.. 
20000548:	20000540 20000540 20000548 20000548     @.. @.. H.. H.. 
20000558:	20000550 20000550 20000558 20000558     P.. P.. X.. X.. 
20000568:	20000560 20000560 20000568 20000568     `.. `.. h.. h.. 
20000578:	20000570 20000570 20000578 20000578     p.. p.. x.. x.. 
20000588:	20000580 20000580 20000588 20000588     ... ... ... ... 
20000598:	20000590 20000590 20000598 20000598     ... ... ... ... 
200005a8:	200005a0 200005a0 200005a8 200005a8     ... ... ... ... 
200005b8:	200005b0 200005b0 200005b8 200005b8     ... ... ... ... 
200005c8:	200005c0 200005c0 200005c8 200005c8     ... ... ... ... 
200005d8:	200005d0 200005d0 200005d8 200005d8     ... ... ... ... 
200005e8:	200005e0 200005e0 200005e8 200005e8     ... ... ... ... 
200005f8:	200005f0 200005f0 200005f8 200005f8     ... ... ... ... 
20000608:	20000600 20000600 20000608 20000608     ... ... ... ... 
20000618:	20000610 20000610 20000618 20000618     ... ... ... ... 
20000628:	20000620 20000620 20000628 20000628      ..  .. (.. (.. 
20000638:	20000630 20000630 20000638 20000638     0.. 0.. 8.. 8.. 
20000648:	20000640 20000640 20000648 20000648     @.. @.. H.. H.. 
20000658:	20000650 20000650 20000658 20000658     P.. P.. X.. X.. 
20000668:	20000660 20000660 20000668 20000668     `.. `.. h.. h.. 
20000678:	20000670 20000670 20000678 20000678     p.. p.. x.. x.. 
20000688:	20000680 20000680 20000688 20000688     ... ... ... ... 
20000698:	20000690 20000690 20000698 20000698     ... ... ... ... 
200006a8:	200006a0 200006a0 200006a8 200006a8     ... ... ... ... 
200006b8:	200006b0 200006b0 200006b8 200006b8     ... ... ... ... 
200006c8:	200006c0 200006c0 200006c8 200006c8     ... ... ... ... 
200006d8:	200006d0 200006d0 200006d8 200006d8     ... ... ... ... 
200006e8:	200006e0 200006e0 200006e8 200006e8     ... ... ... ... 
200006f8:	200006f0 200006f0 200006f8 200006f8     ... ... ... ... 
20000708:	20000700 20000700 20000708 20000708     ... ... ... ... 
20000718:	20000710 20000710 20000718 20000718     ... ... ... ... 
20000728:	20000720 20000720 20000728 20000728      ..  .. (.. (.. 
20000738:	20000730 20000730 20000738 20000738     0.. 0.. 8.. 8.. 
20000748:	20000740 20000740 20000748 20000748     @.. @.. H.. H.. 
20000758:	20000750 20000750 20000758 20000758     P.. P.. X.. X.. 
20000768:	20000760 20000760 20000768 20000768     `.. `.. h.. h.. 
20000778:	20000770 20000770 20000778 20000778     p.. p.. x.. x.. 
20000788:	20000780 20000780 20000788 20000788     ... ... ... ... 
20000798:	20000790 20000790 20000798 20000798     ... ... ... ... 
200007a8:	200007a0 200007a0 200007a8 200007a8     ... ... ... ... 
200007b8:	200007b0 200007b0 200007b8 200007b8     ... ... ... ... 
200007c8:	200007c0 200007c0 200007c8 200007c8     ... ... ... ... 
200007d8:	200007d0 200007d0 200007d8 200007d8     ... ... ... ... 
200007e8:	200007e0 200007e0 200007e8 200007e8     ... ... ... ... 
200007f8:	200007f0 200007f0 200007f8 200007f8     ... ... ... ... 
20000808:	20000800 20000800 20000808 20000808     ... ... ... ... 
20000818:	20000810 20000810 20000818 20000818     ... ... ... ... 
20000828:	20000820 20000820 20000828 20000828      ..  .. (.. (.. 
20000838:	20000830 20000830 20000838 20000838     0.. 0.. 8.. 8.. 
20000848:	20000840 20000840 20000848 20000848     @.. @.. H.. H.. 
20000858:	20000850 20000850 20000858 20000858     P.. P.. X.. X.. 
20000868:	20000860 20000860 20000868 20000868     `.. `.. h.. h.. 
20000878:	20000870 20000870 20000878 20000878     p.. p.. x.. x.. 
20000888:	20000880 20000880 20000888 20000888     ... ... ... ... 
20000898:	20000890 20000890 20000898 20000898     ... ... ... ... 
200008a8:	200008a0 200008a0 200008a8 200008a8     ... ... ... ... 
200008b8:	200008b0 200008b0 200008b8 200008b8     ... ... ... ... 
200008c8:	200008c0 200008c0 200008c8 200008c8     ... ... ... ... 
200008d8:	200008d0 200008d0 200008d8 200008d8     ... ... ... ... 
200008e8:	200008e0 200008e0 200008e8 200008e8     ... ... ... ... 
200008f8:	200008f0 200008f0 200008f8 200008f8     ... ... ... ... 
20000908:	20000900 20000900 20000908 20000908     ... ... ... ... 
20000918:	20000910 20000910 20000918 20000918     ... ... ... ... 
20000928:	20000920 20000920 20000928 20000928      ..  .. (.. (.. 

20000938 <__malloc_sbrk_base>:
20000938:	ffffffff                                ....

2000093c <__malloc_trim_threshold>:
2000093c:	00020000                                ....

20000940 <__global_locale>:
20000940:	00000043 00000000 00000000 00000000     C...............
	...
20000960:	00000043 00000000 00000000 00000000     C...............
	...
20000980:	00000043 00000000 00000000 00000000     C...............
	...
200009a0:	00000043 00000000 00000000 00000000     C...............
	...
200009c0:	00000043 00000000 00000000 00000000     C...............
	...
200009e0:	00000043 00000000 00000000 00000000     C...............
	...
20000a00:	00000043 00000000 00000000 00000000     C...............
	...
20000a20:	00407721 004069b5 00000000 0040907c     !w@..i@.....|.@.
20000a30:	00408f7c 00408e6c 00408e6c 00408e6c     |.@.l.@.l.@.l.@.
20000a40:	00408e6c 00408e6c 00408e6c 00408e6c     l.@.l.@.l.@.l.@.
20000a50:	00408e6c 00408e6c ffffffff ffffffff     l.@.l.@.........
20000a60:	ffffffff 0000ffff 53410001 00494943     ..........ASCII.
	...
20000a88:	53410000 00494943 00000000 00000000     ..ASCII.........
	...
